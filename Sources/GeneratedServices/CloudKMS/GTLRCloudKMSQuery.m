// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Key Management Service (KMS) API (cloudkms/v1)
// Description:
//   Manages keys and performs cryptographic operations in a central cloud
//   service, for direct use by other cloud resources and applications.
// Documentation:
//   https://cloud.google.com/kms/

#import <GoogleAPIClientForREST/GTLRCloudKMSQuery.h>

// ----------------------------------------------------------------------------
// Constants

// versionView
NSString * const kGTLRCloudKMSVersionViewCryptoKeyVersionViewUnspecified = @"CRYPTO_KEY_VERSION_VIEW_UNSPECIFIED";
NSString * const kGTLRCloudKMSVersionViewFull                  = @"FULL";

// view
NSString * const kGTLRCloudKMSViewCryptoKeyVersionViewUnspecified = @"CRYPTO_KEY_VERSION_VIEW_UNSPECIFIED";
NSString * const kGTLRCloudKMSViewFull                         = @"FULL";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRCloudKMSQuery

@dynamic fields;

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsEkmConfigGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudKMSQuery_ProjectsLocationsEkmConfigGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudKMS_Policy class];
  query.loggingName = @"cloudkms.projects.locations.ekmConfig.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsEkmConfigSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudKMS_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudKMSQuery_ProjectsLocationsEkmConfigSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudKMS_Policy class];
  query.loggingName = @"cloudkms.projects.locations.ekmConfig.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsEkmConfigTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudKMS_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudKMSQuery_ProjectsLocationsEkmConfigTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudKMS_TestIamPermissionsResponse class];
  query.loggingName = @"cloudkms.projects.locations.ekmConfig.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsEkmConnectionsCreate

@dynamic ekmConnectionId, parent;

+ (instancetype)queryWithObject:(GTLRCloudKMS_EkmConnection *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/ekmConnections";
  GTLRCloudKMSQuery_ProjectsLocationsEkmConnectionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudKMS_EkmConnection class];
  query.loggingName = @"cloudkms.projects.locations.ekmConnections.create";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsEkmConnectionsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudKMSQuery_ProjectsLocationsEkmConnectionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_EkmConnection class];
  query.loggingName = @"cloudkms.projects.locations.ekmConnections.get";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsEkmConnectionsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudKMSQuery_ProjectsLocationsEkmConnectionsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudKMS_Policy class];
  query.loggingName = @"cloudkms.projects.locations.ekmConnections.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsEkmConnectionsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/ekmConnections";
  GTLRCloudKMSQuery_ProjectsLocationsEkmConnectionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudKMS_ListEkmConnectionsResponse class];
  query.loggingName = @"cloudkms.projects.locations.ekmConnections.list";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsEkmConnectionsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudKMS_EkmConnection *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudKMSQuery_ProjectsLocationsEkmConnectionsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_EkmConnection class];
  query.loggingName = @"cloudkms.projects.locations.ekmConnections.patch";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsEkmConnectionsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudKMS_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudKMSQuery_ProjectsLocationsEkmConnectionsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudKMS_Policy class];
  query.loggingName = @"cloudkms.projects.locations.ekmConnections.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsEkmConnectionsTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudKMS_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudKMSQuery_ProjectsLocationsEkmConnectionsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudKMS_TestIamPermissionsResponse class];
  query.loggingName = @"cloudkms.projects.locations.ekmConnections.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsGenerateRandomBytes

@dynamic location;

+ (instancetype)queryWithObject:(GTLRCloudKMS_GenerateRandomBytesRequest *)object
                       location:(NSString *)location {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"location" ];
  NSString *pathURITemplate = @"v1/{+location}:generateRandomBytes";
  GTLRCloudKMSQuery_ProjectsLocationsGenerateRandomBytes *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.location = location;
  query.expectedObjectClass = [GTLRCloudKMS_GenerateRandomBytesResponse class];
  query.loggingName = @"cloudkms.projects.locations.generateRandomBytes";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudKMSQuery_ProjectsLocationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_Location class];
  query.loggingName = @"cloudkms.projects.locations.get";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCreate

@dynamic keyRingId, parent;

+ (instancetype)queryWithObject:(GTLRCloudKMS_KeyRing *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/keyRings";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudKMS_KeyRing class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.create";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCreate

@dynamic cryptoKeyId, parent, skipInitialVersionCreation;

+ (instancetype)queryWithObject:(GTLRCloudKMS_CryptoKey *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/cryptoKeys";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudKMS_CryptoKey class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.create";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsAsymmetricDecrypt

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudKMS_AsymmetricDecryptRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:asymmetricDecrypt";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsAsymmetricDecrypt *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_AsymmetricDecryptResponse class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricDecrypt";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsAsymmetricSign

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudKMS_AsymmetricSignRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:asymmetricSign";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsAsymmetricSign *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_AsymmetricSignResponse class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricSign";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudKMS_CryptoKeyVersion *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/cryptoKeyVersions";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudKMS_CryptoKeyVersion class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.create";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsDestroy

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudKMS_DestroyCryptoKeyVersionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:destroy";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsDestroy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_CryptoKeyVersion class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.destroy";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_CryptoKeyVersion class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.get";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsGetPublicKey

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/publicKey";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsGetPublicKey *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_PublicKey class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.getPublicKey";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudKMS_ImportCryptoKeyVersionRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/cryptoKeyVersions:import";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudKMS_CryptoKeyVersion class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.import";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsList

@dynamic filter, orderBy, pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/cryptoKeyVersions";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudKMS_ListCryptoKeyVersionsResponse class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.list";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsMacSign

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudKMS_MacSignRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:macSign";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsMacSign *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_MacSignResponse class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.macSign";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsMacVerify

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudKMS_MacVerifyRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:macVerify";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsMacVerify *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_MacVerifyResponse class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.macVerify";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudKMS_CryptoKeyVersion *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_CryptoKeyVersion class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.patch";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsRestore

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudKMS_RestoreCryptoKeyVersionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:restore";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysCryptoKeyVersionsRestore *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_CryptoKeyVersion class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.restore";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysDecrypt

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudKMS_DecryptRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:decrypt";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysDecrypt *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_DecryptResponse class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.decrypt";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysEncrypt

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudKMS_EncryptRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:encrypt";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysEncrypt *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_EncryptResponse class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.encrypt";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_CryptoKey class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.get";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudKMS_Policy class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysList

@dynamic filter, orderBy, pageSize, pageToken, parent, versionView;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/cryptoKeys";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudKMS_ListCryptoKeysResponse class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.list";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudKMS_CryptoKey *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_CryptoKey class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.patch";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudKMS_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudKMS_Policy class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudKMS_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudKMS_TestIamPermissionsResponse class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysUpdatePrimaryVersion

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudKMS_UpdateCryptoKeyPrimaryVersionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:updatePrimaryVersion";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsCryptoKeysUpdatePrimaryVersion *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_CryptoKey class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.cryptoKeys.updatePrimaryVersion";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_KeyRing class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.get";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudKMS_Policy class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsImportJobsCreate

@dynamic importJobId, parent;

+ (instancetype)queryWithObject:(GTLRCloudKMS_ImportJob *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/importJobs";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsImportJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudKMS_ImportJob class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.importJobs.create";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsImportJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsImportJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_ImportJob class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.importJobs.get";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsImportJobsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsImportJobsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudKMS_Policy class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.importJobs.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsImportJobsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/importJobs";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsImportJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudKMS_ListImportJobsResponse class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.importJobs.list";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsImportJobsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudKMS_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsImportJobsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudKMS_Policy class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.importJobs.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsImportJobsTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudKMS_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsImportJobsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudKMS_TestIamPermissionsResponse class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.importJobs.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/keyRings";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudKMS_ListKeyRingsResponse class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.list";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudKMS_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudKMS_Policy class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsKeyRingsTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudKMS_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudKMSQuery_ProjectsLocationsKeyRingsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudKMS_TestIamPermissionsResponse class];
  query.loggingName = @"cloudkms.projects.locations.keyRings.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudKMSQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/locations";
  GTLRCloudKMSQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudKMS_ListLocationsResponse class];
  query.loggingName = @"cloudkms.projects.locations.list";
  return query;
}

@end
