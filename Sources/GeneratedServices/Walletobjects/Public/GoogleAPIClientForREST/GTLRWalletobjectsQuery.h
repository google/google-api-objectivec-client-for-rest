// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Wallet API (walletobjects/v1)
// Description:
//   API for issuers to save and manage Google Wallet Objects.
// Documentation:
//   https://developers.google.com/pay/passes

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRWalletobjectsObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Walletobjects query classes.
 */
@interface GTLRWalletobjectsQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Adds a message to the event ticket class referenced by the given class ID.
 *
 *  Method: walletobjects.eventticketclass.addmessage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_EventticketclassAddmessage : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_EventTicketClassAddMessageResponse.
 *
 *  Adds a message to the event ticket class referenced by the given class ID.
 *
 *  @param object The @c GTLRWalletobjects_AddMessageRequest to include in the
 *    query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_EventticketclassAddmessage
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_AddMessageRequest *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the event ticket class with the given class ID.
 *
 *  Method: walletobjects.eventticketclass.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_EventticketclassGet : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_EventTicketClass.
 *
 *  Returns the event ticket class with the given class ID.
 *
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_EventticketclassGet
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

@end

/**
 *  Inserts an event ticket class with the given ID and properties.
 *
 *  Method: walletobjects.eventticketclass.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_EventticketclassInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_EventTicketClass.
 *
 *  Inserts an event ticket class with the given ID and properties.
 *
 *  @param object The @c GTLRWalletobjects_EventTicketClass to include in the
 *    query.
 *
 *  @return GTLRWalletobjectsQuery_EventticketclassInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_EventTicketClass *)object;

@end

/**
 *  Returns a list of all event ticket classes for a given issuer ID.
 *
 *  Method: walletobjects.eventticketclass.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_EventticketclassList : GTLRWalletobjectsQuery

/** The ID of the issuer authorized to list classes. */
@property(nonatomic, assign) long long issuerId;

/**
 *  Identifies the max number of results returned by a list. All results are
 *  returned if `maxResults` isn't defined.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Used to get the next set of results if `maxResults` is specified, but more
 *  than `maxResults` classes are available in a list. For example, if you have
 *  a list of 200 classes and you call list with `maxResults` set to 20, list
 *  will return the first 20 classes and a token. Call list again with
 *  `maxResults` set to 20 and the token to get the next 20 classes.
 */
@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRWalletobjects_EventTicketClassListResponse.
 *
 *  Returns a list of all event ticket classes for a given issuer ID.
 *
 *  @return GTLRWalletobjectsQuery_EventticketclassList
 */
+ (instancetype)query;

@end

/**
 *  Updates the event ticket class referenced by the given class ID. This method
 *  supports patch semantics.
 *
 *  Method: walletobjects.eventticketclass.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_EventticketclassPatch : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_EventTicketClass.
 *
 *  Updates the event ticket class referenced by the given class ID. This method
 *  supports patch semantics.
 *
 *  @param object The @c GTLRWalletobjects_EventTicketClass to include in the
 *    query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_EventticketclassPatch
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_EventTicketClass *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the event ticket class referenced by the given class ID.
 *
 *  Method: walletobjects.eventticketclass.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_EventticketclassUpdate : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_EventTicketClass.
 *
 *  Updates the event ticket class referenced by the given class ID.
 *
 *  @param object The @c GTLRWalletobjects_EventTicketClass to include in the
 *    query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_EventticketclassUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_EventTicketClass *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Adds a message to the event ticket object referenced by the given object ID.
 *
 *  Method: walletobjects.eventticketobject.addmessage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_EventticketobjectAddmessage : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_EventTicketObjectAddMessageResponse.
 *
 *  Adds a message to the event ticket object referenced by the given object ID.
 *
 *  @param object The @c GTLRWalletobjects_AddMessageRequest to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_EventticketobjectAddmessage
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_AddMessageRequest *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the event ticket object with the given object ID.
 *
 *  Method: walletobjects.eventticketobject.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_EventticketobjectGet : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_EventTicketObject.
 *
 *  Returns the event ticket object with the given object ID.
 *
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_EventticketobjectGet
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

@end

/**
 *  Inserts an event ticket object with the given ID and properties.
 *
 *  Method: walletobjects.eventticketobject.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_EventticketobjectInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_EventTicketObject.
 *
 *  Inserts an event ticket object with the given ID and properties.
 *
 *  @param object The @c GTLRWalletobjects_EventTicketObject to include in the
 *    query.
 *
 *  @return GTLRWalletobjectsQuery_EventticketobjectInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_EventTicketObject *)object;

@end

/**
 *  Returns a list of all event ticket objects for a given issuer ID.
 *
 *  Method: walletobjects.eventticketobject.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_EventticketobjectList : GTLRWalletobjectsQuery

/** The ID of the class whose objects will be listed. */
@property(nonatomic, copy, nullable) NSString *classId;

/**
 *  Identifies the max number of results returned by a list. All results are
 *  returned if `maxResults` isn't defined.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Used to get the next set of results if `maxResults` is specified, but more
 *  than `maxResults` objects are available in a list. For example, if you have
 *  a list of 200 objects and you call list with `maxResults` set to 20, list
 *  will return the first 20 objects and a token. Call list again with
 *  `maxResults` set to 20 and the token to get the next 20 objects.
 */
@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRWalletobjects_EventTicketObjectListResponse.
 *
 *  Returns a list of all event ticket objects for a given issuer ID.
 *
 *  @return GTLRWalletobjectsQuery_EventticketobjectList
 */
+ (instancetype)query;

@end

/**
 *  Modifies linked offer objects for the event ticket object with the given ID.
 *
 *  Method: walletobjects.eventticketobject.modifylinkedofferobjects
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_EventticketobjectModifylinkedofferobjects : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_EventTicketObject.
 *
 *  Modifies linked offer objects for the event ticket object with the given ID.
 *
 *  @param object The @c GTLRWalletobjects_ModifyLinkedOfferObjectsRequest to
 *    include in the query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_EventticketobjectModifylinkedofferobjects
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_ModifyLinkedOfferObjectsRequest *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the event ticket object referenced by the given object ID. This
 *  method supports patch semantics.
 *
 *  Method: walletobjects.eventticketobject.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_EventticketobjectPatch : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_EventTicketObject.
 *
 *  Updates the event ticket object referenced by the given object ID. This
 *  method supports patch semantics.
 *
 *  @param object The @c GTLRWalletobjects_EventTicketObject to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_EventticketobjectPatch
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_EventTicketObject *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the event ticket object referenced by the given object ID.
 *
 *  Method: walletobjects.eventticketobject.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_EventticketobjectUpdate : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_EventTicketObject.
 *
 *  Updates the event ticket object referenced by the given object ID.
 *
 *  @param object The @c GTLRWalletobjects_EventTicketObject to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_EventticketobjectUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_EventTicketObject *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Adds a message to the flight class referenced by the given class ID.
 *
 *  Method: walletobjects.flightclass.addmessage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_FlightclassAddmessage : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_FlightClassAddMessageResponse.
 *
 *  Adds a message to the flight class referenced by the given class ID.
 *
 *  @param object The @c GTLRWalletobjects_AddMessageRequest to include in the
 *    query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_FlightclassAddmessage
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_AddMessageRequest *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the flight class with the given class ID.
 *
 *  Method: walletobjects.flightclass.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_FlightclassGet : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_FlightClass.
 *
 *  Returns the flight class with the given class ID.
 *
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_FlightclassGet
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

@end

/**
 *  Inserts an flight class with the given ID and properties.
 *
 *  Method: walletobjects.flightclass.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_FlightclassInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_FlightClass.
 *
 *  Inserts an flight class with the given ID and properties.
 *
 *  @param object The @c GTLRWalletobjects_FlightClass to include in the query.
 *
 *  @return GTLRWalletobjectsQuery_FlightclassInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_FlightClass *)object;

@end

/**
 *  Returns a list of all flight classes for a given issuer ID.
 *
 *  Method: walletobjects.flightclass.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_FlightclassList : GTLRWalletobjectsQuery

/** The ID of the issuer authorized to list classes. */
@property(nonatomic, assign) long long issuerId;

/**
 *  Identifies the max number of results returned by a list. All results are
 *  returned if `maxResults` isn't defined.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Used to get the next set of results if `maxResults` is specified, but more
 *  than `maxResults` classes are available in a list. For example, if you have
 *  a list of 200 classes and you call list with `maxResults` set to 20, list
 *  will return the first 20 classes and a token. Call list again with
 *  `maxResults` set to 20 and the token to get the next 20 classes.
 */
@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRWalletobjects_FlightClassListResponse.
 *
 *  Returns a list of all flight classes for a given issuer ID.
 *
 *  @return GTLRWalletobjectsQuery_FlightclassList
 */
+ (instancetype)query;

@end

/**
 *  Updates the flight class referenced by the given class ID. This method
 *  supports patch semantics.
 *
 *  Method: walletobjects.flightclass.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_FlightclassPatch : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_FlightClass.
 *
 *  Updates the flight class referenced by the given class ID. This method
 *  supports patch semantics.
 *
 *  @param object The @c GTLRWalletobjects_FlightClass to include in the query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_FlightclassPatch
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_FlightClass *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the flight class referenced by the given class ID.
 *
 *  Method: walletobjects.flightclass.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_FlightclassUpdate : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_FlightClass.
 *
 *  Updates the flight class referenced by the given class ID.
 *
 *  @param object The @c GTLRWalletobjects_FlightClass to include in the query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_FlightclassUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_FlightClass *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Adds a message to the flight object referenced by the given object ID.
 *
 *  Method: walletobjects.flightobject.addmessage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_FlightobjectAddmessage : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_FlightObjectAddMessageResponse.
 *
 *  Adds a message to the flight object referenced by the given object ID.
 *
 *  @param object The @c GTLRWalletobjects_AddMessageRequest to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_FlightobjectAddmessage
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_AddMessageRequest *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the flight object with the given object ID.
 *
 *  Method: walletobjects.flightobject.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_FlightobjectGet : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_FlightObject.
 *
 *  Returns the flight object with the given object ID.
 *
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_FlightobjectGet
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

@end

/**
 *  Inserts an flight object with the given ID and properties.
 *
 *  Method: walletobjects.flightobject.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_FlightobjectInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_FlightObject.
 *
 *  Inserts an flight object with the given ID and properties.
 *
 *  @param object The @c GTLRWalletobjects_FlightObject to include in the query.
 *
 *  @return GTLRWalletobjectsQuery_FlightobjectInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_FlightObject *)object;

@end

/**
 *  Returns a list of all flight objects for a given issuer ID.
 *
 *  Method: walletobjects.flightobject.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_FlightobjectList : GTLRWalletobjectsQuery

/** The ID of the class whose objects will be listed. */
@property(nonatomic, copy, nullable) NSString *classId;

/**
 *  Identifies the max number of results returned by a list. All results are
 *  returned if `maxResults` isn't defined.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Used to get the next set of results if `maxResults` is specified, but more
 *  than `maxResults` objects are available in a list. For example, if you have
 *  a list of 200 objects and you call list with `maxResults` set to 20, list
 *  will return the first 20 objects and a token. Call list again with
 *  `maxResults` set to 20 and the token to get the next 20 objects.
 */
@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRWalletobjects_FlightObjectListResponse.
 *
 *  Returns a list of all flight objects for a given issuer ID.
 *
 *  @return GTLRWalletobjectsQuery_FlightobjectList
 */
+ (instancetype)query;

@end

/**
 *  Updates the flight object referenced by the given object ID. This method
 *  supports patch semantics.
 *
 *  Method: walletobjects.flightobject.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_FlightobjectPatch : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_FlightObject.
 *
 *  Updates the flight object referenced by the given object ID. This method
 *  supports patch semantics.
 *
 *  @param object The @c GTLRWalletobjects_FlightObject to include in the query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_FlightobjectPatch
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_FlightObject *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the flight object referenced by the given object ID.
 *
 *  Method: walletobjects.flightobject.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_FlightobjectUpdate : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_FlightObject.
 *
 *  Updates the flight object referenced by the given object ID.
 *
 *  @param object The @c GTLRWalletobjects_FlightObject to include in the query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_FlightobjectUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_FlightObject *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the generic class with the given class ID.
 *
 *  Method: walletobjects.genericclass.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GenericclassGet : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value needs to follow the format `issuerID.identifier`
 *  where `issuerID` is issued by Google and `identifier` is chosen by you. The
 *  unique identifier can only include alphanumeric characters, `.`, `_`, or
 *  `-`.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_GenericClass.
 *
 *  Returns the generic class with the given class ID.
 *
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value needs to follow the format
 *    `issuerID.identifier` where `issuerID` is issued by Google and
 *    `identifier` is chosen by you. The unique identifier can only include
 *    alphanumeric characters, `.`, `_`, or `-`.
 *
 *  @return GTLRWalletobjectsQuery_GenericclassGet
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

@end

/**
 *  Inserts a generic class with the given ID and properties.
 *
 *  Method: walletobjects.genericclass.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GenericclassInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_GenericClass.
 *
 *  Inserts a generic class with the given ID and properties.
 *
 *  @param object The @c GTLRWalletobjects_GenericClass to include in the query.
 *
 *  @return GTLRWalletobjectsQuery_GenericclassInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_GenericClass *)object;

@end

/**
 *  Returns a list of all generic classes for a given issuer ID.
 *
 *  Method: walletobjects.genericclass.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GenericclassList : GTLRWalletobjectsQuery

/** The ID of the issuer authorized to list classes. */
@property(nonatomic, assign) long long issuerId;

/**
 *  Identifies the max number of results returned by a list. All results are
 *  returned if `maxResults` isn't defined.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Used to get the next set of results if `maxResults` is specified, but more
 *  than `maxResults` classes are available in a list. For example, if you have
 *  a list of 200 classes and you call list with `maxResults` set to 20, list
 *  will return the first 20 classes and a token. Call list again with
 *  `maxResults` set to 20 and the token to get the next 20 classes.
 */
@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRWalletobjects_GenericClassListResponse.
 *
 *  Returns a list of all generic classes for a given issuer ID.
 *
 *  @return GTLRWalletobjectsQuery_GenericclassList
 */
+ (instancetype)query;

@end

/**
 *  Updates the generic class referenced by the given class ID. This method
 *  supports patch semantics.
 *
 *  Method: walletobjects.genericclass.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GenericclassPatch : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value needs to follow the format `issuerID.identifier`
 *  where `issuerID` is issued by Google and `identifier` is chosen by you. The
 *  unique identifier can only include alphanumeric characters, `.`, `_`, or
 *  `-`.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_GenericClass.
 *
 *  Updates the generic class referenced by the given class ID. This method
 *  supports patch semantics.
 *
 *  @param object The @c GTLRWalletobjects_GenericClass to include in the query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value needs to follow the format
 *    `issuerID.identifier` where `issuerID` is issued by Google and
 *    `identifier` is chosen by you. The unique identifier can only include
 *    alphanumeric characters, `.`, `_`, or `-`.
 *
 *  @return GTLRWalletobjectsQuery_GenericclassPatch
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_GenericClass *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the Generic class referenced by the given class ID.
 *
 *  Method: walletobjects.genericclass.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GenericclassUpdate : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value needs to follow the format `issuerID.identifier`
 *  where `issuerID` is issued by Google and `identifier` is chosen by you. The
 *  unique identifier can only include alphanumeric characters, `.`, `_`, or
 *  `-`.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_GenericClass.
 *
 *  Updates the Generic class referenced by the given class ID.
 *
 *  @param object The @c GTLRWalletobjects_GenericClass to include in the query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value needs to follow the format
 *    `issuerID.identifier` where `issuerID` is issued by Google and
 *    `identifier` is chosen by you. The unique identifier can only include
 *    alphanumeric characters, `.`, `_`, or `-`.
 *
 *  @return GTLRWalletobjectsQuery_GenericclassUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_GenericClass *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the generic object with the given object ID.
 *
 *  Method: walletobjects.genericobject.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GenericobjectGet : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value needs to follow the format
 *  `issuerID.identifier` where `issuerID` is issued by Google and `identifier`
 *  is chosen by you. The unique identifier can only include alphanumeric
 *  characters, `.`, `_`, or `-`.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_GenericObject.
 *
 *  Returns the generic object with the given object ID.
 *
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value needs to follow the
 *    format `issuerID.identifier` where `issuerID` is issued by Google and
 *    `identifier` is chosen by you. The unique identifier can only include
 *    alphanumeric characters, `.`, `_`, or `-`.
 *
 *  @return GTLRWalletobjectsQuery_GenericobjectGet
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

@end

/**
 *  Inserts a generic object with the given ID and properties.
 *
 *  Method: walletobjects.genericobject.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GenericobjectInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_GenericObject.
 *
 *  Inserts a generic object with the given ID and properties.
 *
 *  @param object The @c GTLRWalletobjects_GenericObject to include in the
 *    query.
 *
 *  @return GTLRWalletobjectsQuery_GenericobjectInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_GenericObject *)object;

@end

/**
 *  Returns a list of all generic objects for a given issuer ID.
 *
 *  Method: walletobjects.genericobject.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GenericobjectList : GTLRWalletobjectsQuery

/** The ID of the class whose objects will be listed. */
@property(nonatomic, copy, nullable) NSString *classId;

/**
 *  Identifies the max number of results returned by a list. All results are
 *  returned if `maxResults` isn't defined.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Used to get the next set of results if `maxResults` is specified, but more
 *  than `maxResults` objects are available in a list. For example, if you have
 *  a list of 200 objects and you call list with `maxResults` set to 20, list
 *  will return the first 20 objects and a token. Call list again with
 *  `maxResults` set to 20 and the token to get the next 20 objects.
 */
@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRWalletobjects_GenericObjectListResponse.
 *
 *  Returns a list of all generic objects for a given issuer ID.
 *
 *  @return GTLRWalletobjectsQuery_GenericobjectList
 */
+ (instancetype)query;

@end

/**
 *  Updates the generic object referenced by the given object ID. This method
 *  supports patch semantics.
 *
 *  Method: walletobjects.genericobject.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GenericobjectPatch : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value needs to follow the format
 *  `issuerID.identifier` where `issuerID` is issued by Google and `identifier`
 *  is chosen by you. The unique identifier can only include alphanumeric
 *  characters, `.`, `_`, or `-`.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_GenericObject.
 *
 *  Updates the generic object referenced by the given object ID. This method
 *  supports patch semantics.
 *
 *  @param object The @c GTLRWalletobjects_GenericObject to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value needs to follow the
 *    format `issuerID.identifier` where `issuerID` is issued by Google and
 *    `identifier` is chosen by you. The unique identifier can only include
 *    alphanumeric characters, `.`, `_`, or `-`.
 *
 *  @return GTLRWalletobjectsQuery_GenericobjectPatch
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_GenericObject *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the generic object referenced by the given object ID.
 *
 *  Method: walletobjects.genericobject.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GenericobjectUpdate : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value needs to follow the format
 *  `issuerID.identifier` where `issuerID` is issued by Google and `identifier`
 *  is chosen by you. The unique identifier can only include alphanumeric
 *  characters, `.`, `_`, or `-`.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_GenericObject.
 *
 *  Updates the generic object referenced by the given object ID.
 *
 *  @param object The @c GTLRWalletobjects_GenericObject to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value needs to follow the
 *    format `issuerID.identifier` where `issuerID` is issued by Google and
 *    `identifier` is chosen by you. The unique identifier can only include
 *    alphanumeric characters, `.`, `_`, or `-`.
 *
 *  @return GTLRWalletobjectsQuery_GenericobjectUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_GenericObject *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Adds a message to the gift card class referenced by the given class ID.
 *
 *  Method: walletobjects.giftcardclass.addmessage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GiftcardclassAddmessage : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_GiftCardClassAddMessageResponse.
 *
 *  Adds a message to the gift card class referenced by the given class ID.
 *
 *  @param object The @c GTLRWalletobjects_AddMessageRequest to include in the
 *    query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_GiftcardclassAddmessage
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_AddMessageRequest *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the gift card class with the given class ID.
 *
 *  Method: walletobjects.giftcardclass.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GiftcardclassGet : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_GiftCardClass.
 *
 *  Returns the gift card class with the given class ID.
 *
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_GiftcardclassGet
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

@end

/**
 *  Inserts an gift card class with the given ID and properties.
 *
 *  Method: walletobjects.giftcardclass.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GiftcardclassInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_GiftCardClass.
 *
 *  Inserts an gift card class with the given ID and properties.
 *
 *  @param object The @c GTLRWalletobjects_GiftCardClass to include in the
 *    query.
 *
 *  @return GTLRWalletobjectsQuery_GiftcardclassInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_GiftCardClass *)object;

@end

/**
 *  Returns a list of all gift card classes for a given issuer ID.
 *
 *  Method: walletobjects.giftcardclass.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GiftcardclassList : GTLRWalletobjectsQuery

/** The ID of the issuer authorized to list classes. */
@property(nonatomic, assign) long long issuerId;

/**
 *  Identifies the max number of results returned by a list. All results are
 *  returned if `maxResults` isn't defined.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Used to get the next set of results if `maxResults` is specified, but more
 *  than `maxResults` classes are available in a list. For example, if you have
 *  a list of 200 classes and you call list with `maxResults` set to 20, list
 *  will return the first 20 classes and a token. Call list again with
 *  `maxResults` set to 20 and the token to get the next 20 classes.
 */
@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRWalletobjects_GiftCardClassListResponse.
 *
 *  Returns a list of all gift card classes for a given issuer ID.
 *
 *  @return GTLRWalletobjectsQuery_GiftcardclassList
 */
+ (instancetype)query;

@end

/**
 *  Updates the gift card class referenced by the given class ID. This method
 *  supports patch semantics.
 *
 *  Method: walletobjects.giftcardclass.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GiftcardclassPatch : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_GiftCardClass.
 *
 *  Updates the gift card class referenced by the given class ID. This method
 *  supports patch semantics.
 *
 *  @param object The @c GTLRWalletobjects_GiftCardClass to include in the
 *    query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_GiftcardclassPatch
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_GiftCardClass *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the gift card class referenced by the given class ID.
 *
 *  Method: walletobjects.giftcardclass.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GiftcardclassUpdate : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_GiftCardClass.
 *
 *  Updates the gift card class referenced by the given class ID.
 *
 *  @param object The @c GTLRWalletobjects_GiftCardClass to include in the
 *    query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_GiftcardclassUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_GiftCardClass *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Adds a message to the gift card object referenced by the given object ID.
 *
 *  Method: walletobjects.giftcardobject.addmessage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GiftcardobjectAddmessage : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_GiftCardObjectAddMessageResponse.
 *
 *  Adds a message to the gift card object referenced by the given object ID.
 *
 *  @param object The @c GTLRWalletobjects_AddMessageRequest to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_GiftcardobjectAddmessage
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_AddMessageRequest *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the gift card object with the given object ID.
 *
 *  Method: walletobjects.giftcardobject.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GiftcardobjectGet : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_GiftCardObject.
 *
 *  Returns the gift card object with the given object ID.
 *
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_GiftcardobjectGet
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

@end

/**
 *  Inserts an gift card object with the given ID and properties.
 *
 *  Method: walletobjects.giftcardobject.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GiftcardobjectInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_GiftCardObject.
 *
 *  Inserts an gift card object with the given ID and properties.
 *
 *  @param object The @c GTLRWalletobjects_GiftCardObject to include in the
 *    query.
 *
 *  @return GTLRWalletobjectsQuery_GiftcardobjectInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_GiftCardObject *)object;

@end

/**
 *  Returns a list of all gift card objects for a given issuer ID.
 *
 *  Method: walletobjects.giftcardobject.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GiftcardobjectList : GTLRWalletobjectsQuery

/** The ID of the class whose objects will be listed. */
@property(nonatomic, copy, nullable) NSString *classId;

/**
 *  Identifies the max number of results returned by a list. All results are
 *  returned if `maxResults` isn't defined.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Used to get the next set of results if `maxResults` is specified, but more
 *  than `maxResults` objects are available in a list. For example, if you have
 *  a list of 200 objects and you call list with `maxResults` set to 20, list
 *  will return the first 20 objects and a token. Call list again with
 *  `maxResults` set to 20 and the token to get the next 20 objects.
 */
@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRWalletobjects_GiftCardObjectListResponse.
 *
 *  Returns a list of all gift card objects for a given issuer ID.
 *
 *  @return GTLRWalletobjectsQuery_GiftcardobjectList
 */
+ (instancetype)query;

@end

/**
 *  Updates the gift card object referenced by the given object ID. This method
 *  supports patch semantics.
 *
 *  Method: walletobjects.giftcardobject.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GiftcardobjectPatch : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_GiftCardObject.
 *
 *  Updates the gift card object referenced by the given object ID. This method
 *  supports patch semantics.
 *
 *  @param object The @c GTLRWalletobjects_GiftCardObject to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_GiftcardobjectPatch
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_GiftCardObject *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the gift card object referenced by the given object ID.
 *
 *  Method: walletobjects.giftcardobject.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_GiftcardobjectUpdate : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_GiftCardObject.
 *
 *  Updates the gift card object referenced by the given object ID.
 *
 *  @param object The @c GTLRWalletobjects_GiftCardObject to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_GiftcardobjectUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_GiftCardObject *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the issuer with the given issuer ID.
 *
 *  Method: walletobjects.issuer.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_IssuerGet : GTLRWalletobjectsQuery

/** The unique identifier for an issuer. */
@property(nonatomic, assign) long long resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_Issuer.
 *
 *  Returns the issuer with the given issuer ID.
 *
 *  @param resourceId The unique identifier for an issuer.
 *
 *  @return GTLRWalletobjectsQuery_IssuerGet
 */
+ (instancetype)queryWithResourceId:(long long)resourceId;

@end

/**
 *  Inserts an issuer with the given ID and properties.
 *
 *  Method: walletobjects.issuer.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_IssuerInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_Issuer.
 *
 *  Inserts an issuer with the given ID and properties.
 *
 *  @param object The @c GTLRWalletobjects_Issuer to include in the query.
 *
 *  @return GTLRWalletobjectsQuery_IssuerInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_Issuer *)object;

@end

/**
 *  Returns a list of all issuers shared to the caller.
 *
 *  Method: walletobjects.issuer.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_IssuerList : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_IssuerListResponse.
 *
 *  Returns a list of all issuers shared to the caller.
 *
 *  @return GTLRWalletobjectsQuery_IssuerList
 */
+ (instancetype)query;

@end

/**
 *  Updates the issuer referenced by the given issuer ID. This method supports
 *  patch semantics.
 *
 *  Method: walletobjects.issuer.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_IssuerPatch : GTLRWalletobjectsQuery

/** The unique identifier for an issuer. */
@property(nonatomic, assign) long long resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_Issuer.
 *
 *  Updates the issuer referenced by the given issuer ID. This method supports
 *  patch semantics.
 *
 *  @param object The @c GTLRWalletobjects_Issuer to include in the query.
 *  @param resourceId The unique identifier for an issuer.
 *
 *  @return GTLRWalletobjectsQuery_IssuerPatch
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_Issuer *)object
                     resourceId:(long long)resourceId;

@end

/**
 *  Updates the issuer referenced by the given issuer ID.
 *
 *  Method: walletobjects.issuer.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_IssuerUpdate : GTLRWalletobjectsQuery

/** The unique identifier for an issuer. */
@property(nonatomic, assign) long long resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_Issuer.
 *
 *  Updates the issuer referenced by the given issuer ID.
 *
 *  @param object The @c GTLRWalletobjects_Issuer to include in the query.
 *  @param resourceId The unique identifier for an issuer.
 *
 *  @return GTLRWalletobjectsQuery_IssuerUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_Issuer *)object
                     resourceId:(long long)resourceId;

@end

/**
 *  Inserts the resources in the JWT.
 *
 *  Method: walletobjects.jwt.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_JwtInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_JwtInsertResponse.
 *
 *  Inserts the resources in the JWT.
 *
 *  @param object The @c GTLRWalletobjects_JwtResource to include in the query.
 *
 *  @return GTLRWalletobjectsQuery_JwtInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_JwtResource *)object;

@end

/**
 *  Adds a message to the loyalty class referenced by the given class ID.
 *
 *  Method: walletobjects.loyaltyclass.addmessage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_LoyaltyclassAddmessage : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_LoyaltyClassAddMessageResponse.
 *
 *  Adds a message to the loyalty class referenced by the given class ID.
 *
 *  @param object The @c GTLRWalletobjects_AddMessageRequest to include in the
 *    query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_LoyaltyclassAddmessage
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_AddMessageRequest *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the loyalty class with the given class ID.
 *
 *  Method: walletobjects.loyaltyclass.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_LoyaltyclassGet : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_LoyaltyClass.
 *
 *  Returns the loyalty class with the given class ID.
 *
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_LoyaltyclassGet
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

@end

/**
 *  Inserts an loyalty class with the given ID and properties.
 *
 *  Method: walletobjects.loyaltyclass.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_LoyaltyclassInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_LoyaltyClass.
 *
 *  Inserts an loyalty class with the given ID and properties.
 *
 *  @param object The @c GTLRWalletobjects_LoyaltyClass to include in the query.
 *
 *  @return GTLRWalletobjectsQuery_LoyaltyclassInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_LoyaltyClass *)object;

@end

/**
 *  Returns a list of all loyalty classes for a given issuer ID.
 *
 *  Method: walletobjects.loyaltyclass.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_LoyaltyclassList : GTLRWalletobjectsQuery

/** The ID of the issuer authorized to list classes. */
@property(nonatomic, assign) long long issuerId;

/**
 *  Identifies the max number of results returned by a list. All results are
 *  returned if `maxResults` isn't defined.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Used to get the next set of results if `maxResults` is specified, but more
 *  than `maxResults` classes are available in a list. For example, if you have
 *  a list of 200 classes and you call list with `maxResults` set to 20, list
 *  will return the first 20 classes and a token. Call list again with
 *  `maxResults` set to 20 and the token to get the next 20 classes.
 */
@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRWalletobjects_LoyaltyClassListResponse.
 *
 *  Returns a list of all loyalty classes for a given issuer ID.
 *
 *  @return GTLRWalletobjectsQuery_LoyaltyclassList
 */
+ (instancetype)query;

@end

/**
 *  Updates the loyalty class referenced by the given class ID. This method
 *  supports patch semantics.
 *
 *  Method: walletobjects.loyaltyclass.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_LoyaltyclassPatch : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_LoyaltyClass.
 *
 *  Updates the loyalty class referenced by the given class ID. This method
 *  supports patch semantics.
 *
 *  @param object The @c GTLRWalletobjects_LoyaltyClass to include in the query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_LoyaltyclassPatch
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_LoyaltyClass *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the loyalty class referenced by the given class ID.
 *
 *  Method: walletobjects.loyaltyclass.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_LoyaltyclassUpdate : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_LoyaltyClass.
 *
 *  Updates the loyalty class referenced by the given class ID.
 *
 *  @param object The @c GTLRWalletobjects_LoyaltyClass to include in the query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_LoyaltyclassUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_LoyaltyClass *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Adds a message to the loyalty object referenced by the given object ID.
 *
 *  Method: walletobjects.loyaltyobject.addmessage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_LoyaltyobjectAddmessage : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_LoyaltyObjectAddMessageResponse.
 *
 *  Adds a message to the loyalty object referenced by the given object ID.
 *
 *  @param object The @c GTLRWalletobjects_AddMessageRequest to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_LoyaltyobjectAddmessage
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_AddMessageRequest *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the loyalty object with the given object ID.
 *
 *  Method: walletobjects.loyaltyobject.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_LoyaltyobjectGet : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_LoyaltyObject.
 *
 *  Returns the loyalty object with the given object ID.
 *
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_LoyaltyobjectGet
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

@end

/**
 *  Inserts an loyalty object with the given ID and properties.
 *
 *  Method: walletobjects.loyaltyobject.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_LoyaltyobjectInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_LoyaltyObject.
 *
 *  Inserts an loyalty object with the given ID and properties.
 *
 *  @param object The @c GTLRWalletobjects_LoyaltyObject to include in the
 *    query.
 *
 *  @return GTLRWalletobjectsQuery_LoyaltyobjectInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_LoyaltyObject *)object;

@end

/**
 *  Returns a list of all loyalty objects for a given issuer ID.
 *
 *  Method: walletobjects.loyaltyobject.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_LoyaltyobjectList : GTLRWalletobjectsQuery

/** The ID of the class whose objects will be listed. */
@property(nonatomic, copy, nullable) NSString *classId;

/**
 *  Identifies the max number of results returned by a list. All results are
 *  returned if `maxResults` isn't defined.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Used to get the next set of results if `maxResults` is specified, but more
 *  than `maxResults` objects are available in a list. For example, if you have
 *  a list of 200 objects and you call list with `maxResults` set to 20, list
 *  will return the first 20 objects and a token. Call list again with
 *  `maxResults` set to 20 and the token to get the next 20 objects.
 */
@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRWalletobjects_LoyaltyObjectListResponse.
 *
 *  Returns a list of all loyalty objects for a given issuer ID.
 *
 *  @return GTLRWalletobjectsQuery_LoyaltyobjectList
 */
+ (instancetype)query;

@end

/**
 *  Modifies linked offer objects for the loyalty object with the given ID.
 *
 *  Method: walletobjects.loyaltyobject.modifylinkedofferobjects
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_LoyaltyobjectModifylinkedofferobjects : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_LoyaltyObject.
 *
 *  Modifies linked offer objects for the loyalty object with the given ID.
 *
 *  @param object The @c GTLRWalletobjects_ModifyLinkedOfferObjectsRequest to
 *    include in the query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_LoyaltyobjectModifylinkedofferobjects
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_ModifyLinkedOfferObjectsRequest *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the loyalty object referenced by the given object ID. This method
 *  supports patch semantics.
 *
 *  Method: walletobjects.loyaltyobject.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_LoyaltyobjectPatch : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_LoyaltyObject.
 *
 *  Updates the loyalty object referenced by the given object ID. This method
 *  supports patch semantics.
 *
 *  @param object The @c GTLRWalletobjects_LoyaltyObject to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_LoyaltyobjectPatch
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_LoyaltyObject *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the loyalty object referenced by the given object ID.
 *
 *  Method: walletobjects.loyaltyobject.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_LoyaltyobjectUpdate : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_LoyaltyObject.
 *
 *  Updates the loyalty object referenced by the given object ID.
 *
 *  @param object The @c GTLRWalletobjects_LoyaltyObject to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_LoyaltyobjectUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_LoyaltyObject *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Downloads rotating barcode values for the transit object referenced by the
 *  given object ID.
 *
 *  Method: walletobjects.media.download
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_MediaDownload : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_Media.
 *
 *  Downloads rotating barcode values for the transit object referenced by the
 *  given object ID.
 *
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_MediaDownload
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

/**
 *  Fetches the requested resource data as a @c GTLRDataObject.
 *
 *  Downloads rotating barcode values for the transit object referenced by the
 *  given object ID.
 *
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_MediaDownload
 */
+ (instancetype)queryForMediaWithResourceId:(NSString *)resourceId;

@end

/**
 *  Uploads rotating barcode values for the transit object referenced by the
 *  given object ID. Note the max upload size is specified in
 *  google3/production/config/cdd/apps-upload/customers/payments-consumer-passes/config.gcl
 *  and enforced by Scotty.
 *
 *  Method: walletobjects.media.upload
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_MediaUpload : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c
 *  GTLRWalletobjects_TransitObjectUploadRotatingBarcodeValuesResponse.
 *
 *  Uploads rotating barcode values for the transit object referenced by the
 *  given object ID. Note the max upload size is specified in
 *  google3/production/config/cdd/apps-upload/customers/payments-consumer-passes/config.gcl
 *  and enforced by Scotty.
 *
 *  @param object The @c
 *    GTLRWalletobjects_TransitObjectUploadRotatingBarcodeValuesRequest to
 *    include in the query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *  @param uploadParameters The media to include in this query. Accepted MIME
 *    type: * / *
 *
 *  @return GTLRWalletobjectsQuery_MediaUpload
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_TransitObjectUploadRotatingBarcodeValuesRequest *)object
                     resourceId:(NSString *)resourceId
               uploadParameters:(nullable GTLRUploadParameters *)uploadParameters;

@end

/**
 *  Adds a message to the offer class referenced by the given class ID.
 *
 *  Method: walletobjects.offerclass.addmessage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_OfferclassAddmessage : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_OfferClassAddMessageResponse.
 *
 *  Adds a message to the offer class referenced by the given class ID.
 *
 *  @param object The @c GTLRWalletobjects_AddMessageRequest to include in the
 *    query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_OfferclassAddmessage
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_AddMessageRequest *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the offer class with the given class ID.
 *
 *  Method: walletobjects.offerclass.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_OfferclassGet : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_OfferClass.
 *
 *  Returns the offer class with the given class ID.
 *
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_OfferclassGet
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

@end

/**
 *  Inserts an offer class with the given ID and properties.
 *
 *  Method: walletobjects.offerclass.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_OfferclassInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_OfferClass.
 *
 *  Inserts an offer class with the given ID and properties.
 *
 *  @param object The @c GTLRWalletobjects_OfferClass to include in the query.
 *
 *  @return GTLRWalletobjectsQuery_OfferclassInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_OfferClass *)object;

@end

/**
 *  Returns a list of all offer classes for a given issuer ID.
 *
 *  Method: walletobjects.offerclass.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_OfferclassList : GTLRWalletobjectsQuery

/** The ID of the issuer authorized to list classes. */
@property(nonatomic, assign) long long issuerId;

/**
 *  Identifies the max number of results returned by a list. All results are
 *  returned if `maxResults` isn't defined.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Used to get the next set of results if `maxResults` is specified, but more
 *  than `maxResults` classes are available in a list. For example, if you have
 *  a list of 200 classes and you call list with `maxResults` set to 20, list
 *  will return the first 20 classes and a token. Call list again with
 *  `maxResults` set to 20 and the token to get the next 20 classes.
 */
@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRWalletobjects_OfferClassListResponse.
 *
 *  Returns a list of all offer classes for a given issuer ID.
 *
 *  @return GTLRWalletobjectsQuery_OfferclassList
 */
+ (instancetype)query;

@end

/**
 *  Updates the offer class referenced by the given class ID. This method
 *  supports patch semantics.
 *
 *  Method: walletobjects.offerclass.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_OfferclassPatch : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_OfferClass.
 *
 *  Updates the offer class referenced by the given class ID. This method
 *  supports patch semantics.
 *
 *  @param object The @c GTLRWalletobjects_OfferClass to include in the query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_OfferclassPatch
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_OfferClass *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the offer class referenced by the given class ID.
 *
 *  Method: walletobjects.offerclass.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_OfferclassUpdate : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_OfferClass.
 *
 *  Updates the offer class referenced by the given class ID.
 *
 *  @param object The @c GTLRWalletobjects_OfferClass to include in the query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_OfferclassUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_OfferClass *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Adds a message to the offer object referenced by the given object ID.
 *
 *  Method: walletobjects.offerobject.addmessage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_OfferobjectAddmessage : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_OfferObjectAddMessageResponse.
 *
 *  Adds a message to the offer object referenced by the given object ID.
 *
 *  @param object The @c GTLRWalletobjects_AddMessageRequest to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_OfferobjectAddmessage
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_AddMessageRequest *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the offer object with the given object ID.
 *
 *  Method: walletobjects.offerobject.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_OfferobjectGet : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_OfferObject.
 *
 *  Returns the offer object with the given object ID.
 *
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_OfferobjectGet
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

@end

/**
 *  Inserts an offer object with the given ID and properties.
 *
 *  Method: walletobjects.offerobject.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_OfferobjectInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_OfferObject.
 *
 *  Inserts an offer object with the given ID and properties.
 *
 *  @param object The @c GTLRWalletobjects_OfferObject to include in the query.
 *
 *  @return GTLRWalletobjectsQuery_OfferobjectInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_OfferObject *)object;

@end

/**
 *  Returns a list of all offer objects for a given issuer ID.
 *
 *  Method: walletobjects.offerobject.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_OfferobjectList : GTLRWalletobjectsQuery

/** The ID of the class whose objects will be listed. */
@property(nonatomic, copy, nullable) NSString *classId;

/**
 *  Identifies the max number of results returned by a list. All results are
 *  returned if `maxResults` isn't defined.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Used to get the next set of results if `maxResults` is specified, but more
 *  than `maxResults` objects are available in a list. For example, if you have
 *  a list of 200 objects and you call list with `maxResults` set to 20, list
 *  will return the first 20 objects and a token. Call list again with
 *  `maxResults` set to 20 and the token to get the next 20 objects.
 */
@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRWalletobjects_OfferObjectListResponse.
 *
 *  Returns a list of all offer objects for a given issuer ID.
 *
 *  @return GTLRWalletobjectsQuery_OfferobjectList
 */
+ (instancetype)query;

@end

/**
 *  Updates the offer object referenced by the given object ID. This method
 *  supports patch semantics.
 *
 *  Method: walletobjects.offerobject.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_OfferobjectPatch : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_OfferObject.
 *
 *  Updates the offer object referenced by the given object ID. This method
 *  supports patch semantics.
 *
 *  @param object The @c GTLRWalletobjects_OfferObject to include in the query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_OfferobjectPatch
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_OfferObject *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the offer object referenced by the given object ID.
 *
 *  Method: walletobjects.offerobject.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_OfferobjectUpdate : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_OfferObject.
 *
 *  Updates the offer object referenced by the given object ID.
 *
 *  @param object The @c GTLRWalletobjects_OfferObject to include in the query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_OfferobjectUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_OfferObject *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the permissions for the given issuer id.
 *
 *  Method: walletobjects.permissions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_PermissionsGet : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an issuer. This ID must be unique across all
 *  issuers.
 */
@property(nonatomic, assign) long long resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_Permissions.
 *
 *  Returns the permissions for the given issuer id.
 *
 *  @param resourceId The unique identifier for an issuer. This ID must be
 *    unique across all issuers.
 *
 *  @return GTLRWalletobjectsQuery_PermissionsGet
 */
+ (instancetype)queryWithResourceId:(long long)resourceId;

@end

/**
 *  Updates the permissions for the given issuer.
 *
 *  Method: walletobjects.permissions.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_PermissionsUpdate : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an issuer. This ID must be unique across all
 *  issuers.
 */
@property(nonatomic, assign) long long resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_Permissions.
 *
 *  Updates the permissions for the given issuer.
 *
 *  @param object The @c GTLRWalletobjects_Permissions to include in the query.
 *  @param resourceId The unique identifier for an issuer. This ID must be
 *    unique across all issuers.
 *
 *  @return GTLRWalletobjectsQuery_PermissionsUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_Permissions *)object
                     resourceId:(long long)resourceId;

@end

/**
 *  Inserts the smart tap.
 *
 *  Method: walletobjects.smarttap.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_SmarttapInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_SmartTap.
 *
 *  Inserts the smart tap.
 *
 *  @param object The @c GTLRWalletobjects_SmartTap to include in the query.
 *
 *  @return GTLRWalletobjectsQuery_SmarttapInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_SmartTap *)object;

@end

/**
 *  Adds a message to the transit class referenced by the given class ID.
 *
 *  Method: walletobjects.transitclass.addmessage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_TransitclassAddmessage : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_TransitClassAddMessageResponse.
 *
 *  Adds a message to the transit class referenced by the given class ID.
 *
 *  @param object The @c GTLRWalletobjects_AddMessageRequest to include in the
 *    query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_TransitclassAddmessage
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_AddMessageRequest *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the transit class with the given class ID.
 *
 *  Method: walletobjects.transitclass.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_TransitclassGet : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_TransitClass.
 *
 *  Returns the transit class with the given class ID.
 *
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_TransitclassGet
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

@end

/**
 *  Inserts a transit class with the given ID and properties.
 *
 *  Method: walletobjects.transitclass.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_TransitclassInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_TransitClass.
 *
 *  Inserts a transit class with the given ID and properties.
 *
 *  @param object The @c GTLRWalletobjects_TransitClass to include in the query.
 *
 *  @return GTLRWalletobjectsQuery_TransitclassInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_TransitClass *)object;

@end

/**
 *  Returns a list of all transit classes for a given issuer ID.
 *
 *  Method: walletobjects.transitclass.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_TransitclassList : GTLRWalletobjectsQuery

/** The ID of the issuer authorized to list classes. */
@property(nonatomic, assign) long long issuerId;

/**
 *  Identifies the max number of results returned by a list. All results are
 *  returned if `maxResults` isn't defined.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Used to get the next set of results if `maxResults` is specified, but more
 *  than `maxResults` classes are available in a list. For example, if you have
 *  a list of 200 classes and you call list with `maxResults` set to 20, list
 *  will return the first 20 classes and a token. Call list again with
 *  `maxResults` set to 20 and the token to get the next 20 classes.
 */
@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRWalletobjects_TransitClassListResponse.
 *
 *  Returns a list of all transit classes for a given issuer ID.
 *
 *  @return GTLRWalletobjectsQuery_TransitclassList
 */
+ (instancetype)query;

@end

/**
 *  Updates the transit class referenced by the given class ID. This method
 *  supports patch semantics.
 *
 *  Method: walletobjects.transitclass.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_TransitclassPatch : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_TransitClass.
 *
 *  Updates the transit class referenced by the given class ID. This method
 *  supports patch semantics.
 *
 *  @param object The @c GTLRWalletobjects_TransitClass to include in the query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_TransitclassPatch
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_TransitClass *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the transit class referenced by the given class ID.
 *
 *  Method: walletobjects.transitclass.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_TransitclassUpdate : GTLRWalletobjectsQuery

/**
 *  The unique identifier for a class. This ID must be unique across all classes
 *  from an issuer. This value should follow the format issuer ID. identifier
 *  where the former is issued by Google and latter is chosen by you. Your
 *  unique identifier should only include alphanumeric characters, '.', '_', or
 *  '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_TransitClass.
 *
 *  Updates the transit class referenced by the given class ID.
 *
 *  @param object The @c GTLRWalletobjects_TransitClass to include in the query.
 *  @param resourceId The unique identifier for a class. This ID must be unique
 *    across all classes from an issuer. This value should follow the format
 *    issuer ID. identifier where the former is issued by Google and latter is
 *    chosen by you. Your unique identifier should only include alphanumeric
 *    characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_TransitclassUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_TransitClass *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Adds a message to the transit object referenced by the given object ID.
 *
 *  Method: walletobjects.transitobject.addmessage
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_TransitobjectAddmessage : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_TransitObjectAddMessageResponse.
 *
 *  Adds a message to the transit object referenced by the given object ID.
 *
 *  @param object The @c GTLRWalletobjects_AddMessageRequest to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_TransitobjectAddmessage
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_AddMessageRequest *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Returns the transit object with the given object ID.
 *
 *  Method: walletobjects.transitobject.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_TransitobjectGet : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_TransitObject.
 *
 *  Returns the transit object with the given object ID.
 *
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_TransitobjectGet
 */
+ (instancetype)queryWithResourceId:(NSString *)resourceId;

@end

/**
 *  Inserts an transit object with the given ID and properties.
 *
 *  Method: walletobjects.transitobject.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_TransitobjectInsert : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_TransitObject.
 *
 *  Inserts an transit object with the given ID and properties.
 *
 *  @param object The @c GTLRWalletobjects_TransitObject to include in the
 *    query.
 *
 *  @return GTLRWalletobjectsQuery_TransitobjectInsert
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_TransitObject *)object;

@end

/**
 *  Returns a list of all transit objects for a given issuer ID.
 *
 *  Method: walletobjects.transitobject.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_TransitobjectList : GTLRWalletobjectsQuery

/** The ID of the class whose objects will be listed. */
@property(nonatomic, copy, nullable) NSString *classId;

/**
 *  Identifies the max number of results returned by a list. All results are
 *  returned if `maxResults` isn't defined.
 */
@property(nonatomic, assign) NSInteger maxResults;

/**
 *  Used to get the next set of results if `maxResults` is specified, but more
 *  than `maxResults` objects are available in a list. For example, if you have
 *  a list of 200 objects and you call list with `maxResults` set to 20, list
 *  will return the first 20 objects and a token. Call list again with
 *  `maxResults` set to 20 and the token to get the next 20 objects.
 */
@property(nonatomic, copy, nullable) NSString *token;

/**
 *  Fetches a @c GTLRWalletobjects_TransitObjectListResponse.
 *
 *  Returns a list of all transit objects for a given issuer ID.
 *
 *  @return GTLRWalletobjectsQuery_TransitobjectList
 */
+ (instancetype)query;

@end

/**
 *  Updates the transit object referenced by the given object ID. This method
 *  supports patch semantics.
 *
 *  Method: walletobjects.transitobject.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_TransitobjectPatch : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_TransitObject.
 *
 *  Updates the transit object referenced by the given object ID. This method
 *  supports patch semantics.
 *
 *  @param object The @c GTLRWalletobjects_TransitObject to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_TransitobjectPatch
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_TransitObject *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Updates the transit object referenced by the given object ID.
 *
 *  Method: walletobjects.transitobject.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_TransitobjectUpdate : GTLRWalletobjectsQuery

/**
 *  The unique identifier for an object. This ID must be unique across all
 *  objects from an issuer. This value should follow the format issuer ID.
 *  identifier where the former is issued by Google and latter is chosen by you.
 *  Your unique identifier should only include alphanumeric characters, '.',
 *  '_', or '-'.
 */
@property(nonatomic, copy, nullable) NSString *resourceId;

/**
 *  Fetches a @c GTLRWalletobjects_TransitObject.
 *
 *  Updates the transit object referenced by the given object ID.
 *
 *  @param object The @c GTLRWalletobjects_TransitObject to include in the
 *    query.
 *  @param resourceId The unique identifier for an object. This ID must be
 *    unique across all objects from an issuer. This value should follow the
 *    format issuer ID. identifier where the former is issued by Google and
 *    latter is chosen by you. Your unique identifier should only include
 *    alphanumeric characters, '.', '_', or '-'.
 *
 *  @return GTLRWalletobjectsQuery_TransitobjectUpdate
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_TransitObject *)object
                     resourceId:(NSString *)resourceId;

@end

/**
 *  Provide Google with information about awaiting private pass update. This
 *  will allow Google to provide the update notification to the device that
 *  currently holds this pass.
 *
 *  Method: walletobjects.walletobjects.v1.privateContent.setPassUpdateNotice
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_WalletobjectsV1PrivateContentSetPassUpdateNotice : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_SetPassUpdateNoticeResponse.
 *
 *  Provide Google with information about awaiting private pass update. This
 *  will allow Google to provide the update notification to the device that
 *  currently holds this pass.
 *
 *  @param object The @c GTLRWalletobjects_SetPassUpdateNoticeRequest to include
 *    in the query.
 *
 *  @return GTLRWalletobjectsQuery_WalletobjectsV1PrivateContentSetPassUpdateNotice
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_SetPassUpdateNoticeRequest *)object;

@end

/**
 *  Upload private data (text or URI) and returns an Id to be used in its place.
 *
 *  Method: walletobjects.walletobjects.v1.privateContent.uploadPrivateData
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeWalletobjectsWalletObjectIssuer
 */
@interface GTLRWalletobjectsQuery_WalletobjectsV1PrivateContentUploadPrivateData : GTLRWalletobjectsQuery

/**
 *  Fetches a @c GTLRWalletobjects_UploadPrivateDataResponse.
 *
 *  Upload private data (text or URI) and returns an Id to be used in its place.
 *
 *  @param object The @c GTLRWalletobjects_UploadPrivateDataRequest to include
 *    in the query.
 *
 *  @return GTLRWalletobjectsQuery_WalletobjectsV1PrivateContentUploadPrivateData
 */
+ (instancetype)queryWithObject:(GTLRWalletobjects_UploadPrivateDataRequest *)object;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
