// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Wallet API (walletobjects/v1)
// Description:
//   API for issuers to save and manage Google Wallet Objects.
// Documentation:
//   https://developers.google.com/pay/passes

#import <GoogleAPIClientForREST/GTLRWalletobjectsObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRWalletobjects_ActivationStatus.state
NSString * const kGTLRWalletobjects_ActivationStatus_State_Activated = @"activated";
NSString * const kGTLRWalletobjects_ActivationStatus_State_NotActivated = @"not_activated";
NSString * const kGTLRWalletobjects_ActivationStatus_State_UnknownState = @"UNKNOWN_STATE";

// GTLRWalletobjects_Barcode.renderEncoding
NSString * const kGTLRWalletobjects_Barcode_RenderEncoding_RenderEncodingUnspecified = @"RENDER_ENCODING_UNSPECIFIED";
NSString * const kGTLRWalletobjects_Barcode_RenderEncoding_Utf8 = @"UTF_8";

// GTLRWalletobjects_Barcode.type
NSString * const kGTLRWalletobjects_Barcode_Type_Aztec         = @"aztec";
NSString * const kGTLRWalletobjects_Barcode_Type_BarcodeTypeUnspecified = @"BARCODE_TYPE_UNSPECIFIED";
NSString * const kGTLRWalletobjects_Barcode_Type_Codabar       = @"codabar";
NSString * const kGTLRWalletobjects_Barcode_Type_Code128       = @"code128";
NSString * const kGTLRWalletobjects_Barcode_Type_Code39        = @"code39";
NSString * const kGTLRWalletobjects_Barcode_Type_DataMatrix    = @"dataMatrix";
NSString * const kGTLRWalletobjects_Barcode_Type_Ean13         = @"EAN13";
NSString * const kGTLRWalletobjects_Barcode_Type_Ean8          = @"ean8";
NSString * const kGTLRWalletobjects_Barcode_Type_Itf14         = @"itf14";
NSString * const kGTLRWalletobjects_Barcode_Type_Pdf417        = @"PDF417";
NSString * const kGTLRWalletobjects_Barcode_Type_Qrcode        = @"qrcode";
NSString * const kGTLRWalletobjects_Barcode_Type_QrCode        = @"qrCode";
NSString * const kGTLRWalletobjects_Barcode_Type_TextOnly      = @"textOnly";
NSString * const kGTLRWalletobjects_Barcode_Type_UpcA          = @"upcA";

// GTLRWalletobjects_BoardingAndSeatingInfo.boardingDoor
NSString * const kGTLRWalletobjects_BoardingAndSeatingInfo_BoardingDoor_Back = @"back";
NSString * const kGTLRWalletobjects_BoardingAndSeatingInfo_BoardingDoor_BoardingDoorUnspecified = @"BOARDING_DOOR_UNSPECIFIED";
NSString * const kGTLRWalletobjects_BoardingAndSeatingInfo_BoardingDoor_Front = @"front";

// GTLRWalletobjects_BoardingAndSeatingPolicy.boardingPolicy
NSString * const kGTLRWalletobjects_BoardingAndSeatingPolicy_BoardingPolicy_BoardingPolicyOther = @"boardingPolicyOther";
NSString * const kGTLRWalletobjects_BoardingAndSeatingPolicy_BoardingPolicy_BoardingPolicyUnspecified = @"BOARDING_POLICY_UNSPECIFIED";
NSString * const kGTLRWalletobjects_BoardingAndSeatingPolicy_BoardingPolicy_GroupBased = @"groupBased";
NSString * const kGTLRWalletobjects_BoardingAndSeatingPolicy_BoardingPolicy_ZoneBased = @"zoneBased";

// GTLRWalletobjects_BoardingAndSeatingPolicy.seatClassPolicy
NSString * const kGTLRWalletobjects_BoardingAndSeatingPolicy_SeatClassPolicy_CabinBased = @"cabinBased";
NSString * const kGTLRWalletobjects_BoardingAndSeatingPolicy_SeatClassPolicy_ClassBased = @"classBased";
NSString * const kGTLRWalletobjects_BoardingAndSeatingPolicy_SeatClassPolicy_SeatClassPolicyOther = @"seatClassPolicyOther";
NSString * const kGTLRWalletobjects_BoardingAndSeatingPolicy_SeatClassPolicy_SeatClassPolicyUnspecified = @"SEAT_CLASS_POLICY_UNSPECIFIED";
NSString * const kGTLRWalletobjects_BoardingAndSeatingPolicy_SeatClassPolicy_TierBased = @"tierBased";

// GTLRWalletobjects_CompositeMedia.referenceType
NSString * const kGTLRWalletobjects_CompositeMedia_ReferenceType_BigstoreRef = @"BIGSTORE_REF";
NSString * const kGTLRWalletobjects_CompositeMedia_ReferenceType_BlobRef = @"BLOB_REF";
NSString * const kGTLRWalletobjects_CompositeMedia_ReferenceType_CosmoBinaryReference = @"COSMO_BINARY_REFERENCE";
NSString * const kGTLRWalletobjects_CompositeMedia_ReferenceType_Inline = @"INLINE";
NSString * const kGTLRWalletobjects_CompositeMedia_ReferenceType_Path = @"PATH";

// GTLRWalletobjects_DiscoverableProgram.state
NSString * const kGTLRWalletobjects_DiscoverableProgram_State_Disabled = @"disabled";
NSString * const kGTLRWalletobjects_DiscoverableProgram_State_Live = @"live";
NSString * const kGTLRWalletobjects_DiscoverableProgram_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRWalletobjects_DiscoverableProgram_State_TrustedTesters = @"trustedTesters";

// GTLRWalletobjects_DiscoverableProgramMerchantSignupInfo.signupSharedDatas
NSString * const kGTLRWalletobjects_DiscoverableProgramMerchantSignupInfo_SignupSharedDatas_AddressLine1 = @"ADDRESS_LINE_1";
NSString * const kGTLRWalletobjects_DiscoverableProgramMerchantSignupInfo_SignupSharedDatas_AddressLine2 = @"ADDRESS_LINE_2";
NSString * const kGTLRWalletobjects_DiscoverableProgramMerchantSignupInfo_SignupSharedDatas_AddressLine3 = @"ADDRESS_LINE_3";
NSString * const kGTLRWalletobjects_DiscoverableProgramMerchantSignupInfo_SignupSharedDatas_City = @"CITY";
NSString * const kGTLRWalletobjects_DiscoverableProgramMerchantSignupInfo_SignupSharedDatas_Country = @"COUNTRY";
NSString * const kGTLRWalletobjects_DiscoverableProgramMerchantSignupInfo_SignupSharedDatas_Email = @"EMAIL";
NSString * const kGTLRWalletobjects_DiscoverableProgramMerchantSignupInfo_SignupSharedDatas_FirstName = @"FIRST_NAME";
NSString * const kGTLRWalletobjects_DiscoverableProgramMerchantSignupInfo_SignupSharedDatas_LastName = @"LAST_NAME";
NSString * const kGTLRWalletobjects_DiscoverableProgramMerchantSignupInfo_SignupSharedDatas_Phone = @"PHONE";
NSString * const kGTLRWalletobjects_DiscoverableProgramMerchantSignupInfo_SignupSharedDatas_SharedDataTypeUnspecified = @"SHARED_DATA_TYPE_UNSPECIFIED";
NSString * const kGTLRWalletobjects_DiscoverableProgramMerchantSignupInfo_SignupSharedDatas_State = @"STATE";
NSString * const kGTLRWalletobjects_DiscoverableProgramMerchantSignupInfo_SignupSharedDatas_StreetAddress = @"STREET_ADDRESS";
NSString * const kGTLRWalletobjects_DiscoverableProgramMerchantSignupInfo_SignupSharedDatas_Zipcode = @"ZIPCODE";

// GTLRWalletobjects_EventDateTime.doorsOpenLabel
NSString * const kGTLRWalletobjects_EventDateTime_DoorsOpenLabel_DoorsOpen = @"doorsOpen";
NSString * const kGTLRWalletobjects_EventDateTime_DoorsOpenLabel_DoorsOpenLabelUnspecified = @"DOORS_OPEN_LABEL_UNSPECIFIED";
NSString * const kGTLRWalletobjects_EventDateTime_DoorsOpenLabel_GatesOpen = @"gatesOpen";

// GTLRWalletobjects_EventTicketClass.confirmationCodeLabel
NSString * const kGTLRWalletobjects_EventTicketClass_ConfirmationCodeLabel_ConfirmationCode = @"confirmationCode";
NSString * const kGTLRWalletobjects_EventTicketClass_ConfirmationCodeLabel_ConfirmationCodeLabelUnspecified = @"CONFIRMATION_CODE_LABEL_UNSPECIFIED";
NSString * const kGTLRWalletobjects_EventTicketClass_ConfirmationCodeLabel_ConfirmationNumber = @"confirmationNumber";
NSString * const kGTLRWalletobjects_EventTicketClass_ConfirmationCodeLabel_OrderNumber = @"orderNumber";
NSString * const kGTLRWalletobjects_EventTicketClass_ConfirmationCodeLabel_ReservationNumber = @"reservationNumber";

// GTLRWalletobjects_EventTicketClass.gateLabel
NSString * const kGTLRWalletobjects_EventTicketClass_GateLabel_Door = @"door";
NSString * const kGTLRWalletobjects_EventTicketClass_GateLabel_Entrance = @"entrance";
NSString * const kGTLRWalletobjects_EventTicketClass_GateLabel_Gate = @"gate";
NSString * const kGTLRWalletobjects_EventTicketClass_GateLabel_GateLabelUnspecified = @"GATE_LABEL_UNSPECIFIED";

// GTLRWalletobjects_EventTicketClass.multipleDevicesAndHoldersAllowedStatus
NSString * const kGTLRWalletobjects_EventTicketClass_MultipleDevicesAndHoldersAllowedStatus_MultipleHolders = @"multipleHolders";
NSString * const kGTLRWalletobjects_EventTicketClass_MultipleDevicesAndHoldersAllowedStatus_OneUserAllDevices = @"oneUserAllDevices";
NSString * const kGTLRWalletobjects_EventTicketClass_MultipleDevicesAndHoldersAllowedStatus_OneUserOneDevice = @"oneUserOneDevice";
NSString * const kGTLRWalletobjects_EventTicketClass_MultipleDevicesAndHoldersAllowedStatus_StatusUnspecified = @"STATUS_UNSPECIFIED";

// GTLRWalletobjects_EventTicketClass.reviewStatus
NSString * const kGTLRWalletobjects_EventTicketClass_ReviewStatus_Approved = @"approved";
NSString * const kGTLRWalletobjects_EventTicketClass_ReviewStatus_Draft = @"draft";
NSString * const kGTLRWalletobjects_EventTicketClass_ReviewStatus_Rejected = @"rejected";
NSString * const kGTLRWalletobjects_EventTicketClass_ReviewStatus_ReviewStatusUnspecified = @"REVIEW_STATUS_UNSPECIFIED";
NSString * const kGTLRWalletobjects_EventTicketClass_ReviewStatus_UnderReview = @"underReview";

// GTLRWalletobjects_EventTicketClass.rowLabel
NSString * const kGTLRWalletobjects_EventTicketClass_RowLabel_Row = @"row";
NSString * const kGTLRWalletobjects_EventTicketClass_RowLabel_RowLabelUnspecified = @"ROW_LABEL_UNSPECIFIED";

// GTLRWalletobjects_EventTicketClass.seatLabel
NSString * const kGTLRWalletobjects_EventTicketClass_SeatLabel_Seat = @"seat";
NSString * const kGTLRWalletobjects_EventTicketClass_SeatLabel_SeatLabelUnspecified = @"SEAT_LABEL_UNSPECIFIED";

// GTLRWalletobjects_EventTicketClass.sectionLabel
NSString * const kGTLRWalletobjects_EventTicketClass_SectionLabel_Section = @"section";
NSString * const kGTLRWalletobjects_EventTicketClass_SectionLabel_SectionLabelUnspecified = @"SECTION_LABEL_UNSPECIFIED";
NSString * const kGTLRWalletobjects_EventTicketClass_SectionLabel_Theater = @"theater";

// GTLRWalletobjects_EventTicketClass.viewUnlockRequirement
NSString * const kGTLRWalletobjects_EventTicketClass_ViewUnlockRequirement_UnlockNotRequired = @"UNLOCK_NOT_REQUIRED";
NSString * const kGTLRWalletobjects_EventTicketClass_ViewUnlockRequirement_UnlockRequiredToView = @"UNLOCK_REQUIRED_TO_VIEW";
NSString * const kGTLRWalletobjects_EventTicketClass_ViewUnlockRequirement_ViewUnlockRequirementUnspecified = @"VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED";

// GTLRWalletobjects_EventTicketObject.state
NSString * const kGTLRWalletobjects_EventTicketObject_State_Active = @"active";
NSString * const kGTLRWalletobjects_EventTicketObject_State_Completed = @"completed";
NSString * const kGTLRWalletobjects_EventTicketObject_State_Expired = @"expired";
NSString * const kGTLRWalletobjects_EventTicketObject_State_Inactive = @"inactive";
NSString * const kGTLRWalletobjects_EventTicketObject_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRWalletobjects_FieldReference.dateFormat
NSString * const kGTLRWalletobjects_FieldReference_DateFormat_DateFormatUnspecified = @"DATE_FORMAT_UNSPECIFIED";
NSString * const kGTLRWalletobjects_FieldReference_DateFormat_DateOnly = @"dateOnly";
NSString * const kGTLRWalletobjects_FieldReference_DateFormat_DateTime = @"dateTime";
NSString * const kGTLRWalletobjects_FieldReference_DateFormat_DateTimeYear = @"dateTimeYear";
NSString * const kGTLRWalletobjects_FieldReference_DateFormat_DateYear = @"dateYear";
NSString * const kGTLRWalletobjects_FieldReference_DateFormat_TimeOnly = @"timeOnly";
NSString * const kGTLRWalletobjects_FieldReference_DateFormat_YearMonth = @"YEAR_MONTH";
NSString * const kGTLRWalletobjects_FieldReference_DateFormat_YearMonthDay = @"YEAR_MONTH_DAY";

// GTLRWalletobjects_FirstRowOption.transitOption
NSString * const kGTLRWalletobjects_FirstRowOption_TransitOption_OriginAndDestinationCodes = @"originAndDestinationCodes";
NSString * const kGTLRWalletobjects_FirstRowOption_TransitOption_OriginAndDestinationNames = @"originAndDestinationNames";
NSString * const kGTLRWalletobjects_FirstRowOption_TransitOption_OriginName = @"originName";
NSString * const kGTLRWalletobjects_FirstRowOption_TransitOption_TransitOptionUnspecified = @"TRANSIT_OPTION_UNSPECIFIED";

// GTLRWalletobjects_FlightClass.flightStatus
NSString * const kGTLRWalletobjects_FlightClass_FlightStatus_Active = @"active";
NSString * const kGTLRWalletobjects_FlightClass_FlightStatus_Cancelled = @"cancelled";
NSString * const kGTLRWalletobjects_FlightClass_FlightStatus_Diverted = @"diverted";
NSString * const kGTLRWalletobjects_FlightClass_FlightStatus_FlightStatusUnspecified = @"FLIGHT_STATUS_UNSPECIFIED";
NSString * const kGTLRWalletobjects_FlightClass_FlightStatus_Landed = @"landed";
NSString * const kGTLRWalletobjects_FlightClass_FlightStatus_Redirected = @"redirected";
NSString * const kGTLRWalletobjects_FlightClass_FlightStatus_Scheduled = @"scheduled";

// GTLRWalletobjects_FlightClass.multipleDevicesAndHoldersAllowedStatus
NSString * const kGTLRWalletobjects_FlightClass_MultipleDevicesAndHoldersAllowedStatus_MultipleHolders = @"multipleHolders";
NSString * const kGTLRWalletobjects_FlightClass_MultipleDevicesAndHoldersAllowedStatus_OneUserAllDevices = @"oneUserAllDevices";
NSString * const kGTLRWalletobjects_FlightClass_MultipleDevicesAndHoldersAllowedStatus_OneUserOneDevice = @"oneUserOneDevice";
NSString * const kGTLRWalletobjects_FlightClass_MultipleDevicesAndHoldersAllowedStatus_StatusUnspecified = @"STATUS_UNSPECIFIED";

// GTLRWalletobjects_FlightClass.reviewStatus
NSString * const kGTLRWalletobjects_FlightClass_ReviewStatus_Approved = @"approved";
NSString * const kGTLRWalletobjects_FlightClass_ReviewStatus_Draft = @"draft";
NSString * const kGTLRWalletobjects_FlightClass_ReviewStatus_Rejected = @"rejected";
NSString * const kGTLRWalletobjects_FlightClass_ReviewStatus_ReviewStatusUnspecified = @"REVIEW_STATUS_UNSPECIFIED";
NSString * const kGTLRWalletobjects_FlightClass_ReviewStatus_UnderReview = @"underReview";

// GTLRWalletobjects_FlightClass.viewUnlockRequirement
NSString * const kGTLRWalletobjects_FlightClass_ViewUnlockRequirement_UnlockNotRequired = @"UNLOCK_NOT_REQUIRED";
NSString * const kGTLRWalletobjects_FlightClass_ViewUnlockRequirement_UnlockRequiredToView = @"UNLOCK_REQUIRED_TO_VIEW";
NSString * const kGTLRWalletobjects_FlightClass_ViewUnlockRequirement_ViewUnlockRequirementUnspecified = @"VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED";

// GTLRWalletobjects_FlightObject.state
NSString * const kGTLRWalletobjects_FlightObject_State_Active  = @"active";
NSString * const kGTLRWalletobjects_FlightObject_State_Completed = @"completed";
NSString * const kGTLRWalletobjects_FlightObject_State_Expired = @"expired";
NSString * const kGTLRWalletobjects_FlightObject_State_Inactive = @"inactive";
NSString * const kGTLRWalletobjects_FlightObject_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRWalletobjects_GenericClass.multipleDevicesAndHoldersAllowedStatus
NSString * const kGTLRWalletobjects_GenericClass_MultipleDevicesAndHoldersAllowedStatus_MultipleHolders = @"multipleHolders";
NSString * const kGTLRWalletobjects_GenericClass_MultipleDevicesAndHoldersAllowedStatus_OneUserAllDevices = @"oneUserAllDevices";
NSString * const kGTLRWalletobjects_GenericClass_MultipleDevicesAndHoldersAllowedStatus_OneUserOneDevice = @"oneUserOneDevice";
NSString * const kGTLRWalletobjects_GenericClass_MultipleDevicesAndHoldersAllowedStatus_StatusUnspecified = @"STATUS_UNSPECIFIED";

// GTLRWalletobjects_GenericClass.viewUnlockRequirement
NSString * const kGTLRWalletobjects_GenericClass_ViewUnlockRequirement_UnlockNotRequired = @"UNLOCK_NOT_REQUIRED";
NSString * const kGTLRWalletobjects_GenericClass_ViewUnlockRequirement_UnlockRequiredToView = @"UNLOCK_REQUIRED_TO_VIEW";
NSString * const kGTLRWalletobjects_GenericClass_ViewUnlockRequirement_ViewUnlockRequirementUnspecified = @"VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED";

// GTLRWalletobjects_GenericObject.genericType
NSString * const kGTLRWalletobjects_GenericObject_GenericType_GenericAutoInsurance = @"GENERIC_AUTO_INSURANCE";
NSString * const kGTLRWalletobjects_GenericObject_GenericType_GenericEntryTicket = @"GENERIC_ENTRY_TICKET";
NSString * const kGTLRWalletobjects_GenericObject_GenericType_GenericGymMembership = @"GENERIC_GYM_MEMBERSHIP";
NSString * const kGTLRWalletobjects_GenericObject_GenericType_GenericHomeInsurance = @"GENERIC_HOME_INSURANCE";
NSString * const kGTLRWalletobjects_GenericObject_GenericType_GenericLibraryMembership = @"GENERIC_LIBRARY_MEMBERSHIP";
NSString * const kGTLRWalletobjects_GenericObject_GenericType_GenericOther = @"GENERIC_OTHER";
NSString * const kGTLRWalletobjects_GenericObject_GenericType_GenericParkingPass = @"GENERIC_PARKING_PASS";
NSString * const kGTLRWalletobjects_GenericObject_GenericType_GenericReceipt = @"GENERIC_RECEIPT";
NSString * const kGTLRWalletobjects_GenericObject_GenericType_GenericReservations = @"GENERIC_RESERVATIONS";
NSString * const kGTLRWalletobjects_GenericObject_GenericType_GenericSeasonPass = @"GENERIC_SEASON_PASS";
NSString * const kGTLRWalletobjects_GenericObject_GenericType_GenericTypeUnspecified = @"GENERIC_TYPE_UNSPECIFIED";
NSString * const kGTLRWalletobjects_GenericObject_GenericType_GenericUtilityBills = @"GENERIC_UTILITY_BILLS";
NSString * const kGTLRWalletobjects_GenericObject_GenericType_GenericVoucher = @"GENERIC_VOUCHER";

// GTLRWalletobjects_GenericObject.state
NSString * const kGTLRWalletobjects_GenericObject_State_Active = @"active";
NSString * const kGTLRWalletobjects_GenericObject_State_Completed = @"completed";
NSString * const kGTLRWalletobjects_GenericObject_State_Expired = @"expired";
NSString * const kGTLRWalletobjects_GenericObject_State_Inactive = @"inactive";
NSString * const kGTLRWalletobjects_GenericObject_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRWalletobjects_GiftCardClass.multipleDevicesAndHoldersAllowedStatus
NSString * const kGTLRWalletobjects_GiftCardClass_MultipleDevicesAndHoldersAllowedStatus_MultipleHolders = @"multipleHolders";
NSString * const kGTLRWalletobjects_GiftCardClass_MultipleDevicesAndHoldersAllowedStatus_OneUserAllDevices = @"oneUserAllDevices";
NSString * const kGTLRWalletobjects_GiftCardClass_MultipleDevicesAndHoldersAllowedStatus_OneUserOneDevice = @"oneUserOneDevice";
NSString * const kGTLRWalletobjects_GiftCardClass_MultipleDevicesAndHoldersAllowedStatus_StatusUnspecified = @"STATUS_UNSPECIFIED";

// GTLRWalletobjects_GiftCardClass.reviewStatus
NSString * const kGTLRWalletobjects_GiftCardClass_ReviewStatus_Approved = @"approved";
NSString * const kGTLRWalletobjects_GiftCardClass_ReviewStatus_Draft = @"draft";
NSString * const kGTLRWalletobjects_GiftCardClass_ReviewStatus_Rejected = @"rejected";
NSString * const kGTLRWalletobjects_GiftCardClass_ReviewStatus_ReviewStatusUnspecified = @"REVIEW_STATUS_UNSPECIFIED";
NSString * const kGTLRWalletobjects_GiftCardClass_ReviewStatus_UnderReview = @"underReview";

// GTLRWalletobjects_GiftCardClass.viewUnlockRequirement
NSString * const kGTLRWalletobjects_GiftCardClass_ViewUnlockRequirement_UnlockNotRequired = @"UNLOCK_NOT_REQUIRED";
NSString * const kGTLRWalletobjects_GiftCardClass_ViewUnlockRequirement_UnlockRequiredToView = @"UNLOCK_REQUIRED_TO_VIEW";
NSString * const kGTLRWalletobjects_GiftCardClass_ViewUnlockRequirement_ViewUnlockRequirementUnspecified = @"VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED";

// GTLRWalletobjects_GiftCardObject.state
NSString * const kGTLRWalletobjects_GiftCardObject_State_Active = @"active";
NSString * const kGTLRWalletobjects_GiftCardObject_State_Completed = @"completed";
NSString * const kGTLRWalletobjects_GiftCardObject_State_Expired = @"expired";
NSString * const kGTLRWalletobjects_GiftCardObject_State_Inactive = @"inactive";
NSString * const kGTLRWalletobjects_GiftCardObject_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRWalletobjects_IssuerToUserInfo.action
NSString * const kGTLRWalletobjects_IssuerToUserInfo_Action_ActionUnspecified = @"ACTION_UNSPECIFIED";
NSString * const kGTLRWalletobjects_IssuerToUserInfo_Action_S2ap = @"s2ap";
NSString * const kGTLRWalletobjects_IssuerToUserInfo_Action_SignUp = @"signUp";

// GTLRWalletobjects_LoyaltyClass.multipleDevicesAndHoldersAllowedStatus
NSString * const kGTLRWalletobjects_LoyaltyClass_MultipleDevicesAndHoldersAllowedStatus_MultipleHolders = @"multipleHolders";
NSString * const kGTLRWalletobjects_LoyaltyClass_MultipleDevicesAndHoldersAllowedStatus_OneUserAllDevices = @"oneUserAllDevices";
NSString * const kGTLRWalletobjects_LoyaltyClass_MultipleDevicesAndHoldersAllowedStatus_OneUserOneDevice = @"oneUserOneDevice";
NSString * const kGTLRWalletobjects_LoyaltyClass_MultipleDevicesAndHoldersAllowedStatus_StatusUnspecified = @"STATUS_UNSPECIFIED";

// GTLRWalletobjects_LoyaltyClass.reviewStatus
NSString * const kGTLRWalletobjects_LoyaltyClass_ReviewStatus_Approved = @"approved";
NSString * const kGTLRWalletobjects_LoyaltyClass_ReviewStatus_Draft = @"draft";
NSString * const kGTLRWalletobjects_LoyaltyClass_ReviewStatus_Rejected = @"rejected";
NSString * const kGTLRWalletobjects_LoyaltyClass_ReviewStatus_ReviewStatusUnspecified = @"REVIEW_STATUS_UNSPECIFIED";
NSString * const kGTLRWalletobjects_LoyaltyClass_ReviewStatus_UnderReview = @"underReview";

// GTLRWalletobjects_LoyaltyClass.viewUnlockRequirement
NSString * const kGTLRWalletobjects_LoyaltyClass_ViewUnlockRequirement_UnlockNotRequired = @"UNLOCK_NOT_REQUIRED";
NSString * const kGTLRWalletobjects_LoyaltyClass_ViewUnlockRequirement_UnlockRequiredToView = @"UNLOCK_REQUIRED_TO_VIEW";
NSString * const kGTLRWalletobjects_LoyaltyClass_ViewUnlockRequirement_ViewUnlockRequirementUnspecified = @"VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED";

// GTLRWalletobjects_LoyaltyObject.state
NSString * const kGTLRWalletobjects_LoyaltyObject_State_Active = @"active";
NSString * const kGTLRWalletobjects_LoyaltyObject_State_Completed = @"completed";
NSString * const kGTLRWalletobjects_LoyaltyObject_State_Expired = @"expired";
NSString * const kGTLRWalletobjects_LoyaltyObject_State_Inactive = @"inactive";
NSString * const kGTLRWalletobjects_LoyaltyObject_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRWalletobjects_Media.referenceType
NSString * const kGTLRWalletobjects_Media_ReferenceType_ArbitraryBytes = @"ARBITRARY_BYTES";
NSString * const kGTLRWalletobjects_Media_ReferenceType_BigstoreRef = @"BIGSTORE_REF";
NSString * const kGTLRWalletobjects_Media_ReferenceType_BlobRef = @"BLOB_REF";
NSString * const kGTLRWalletobjects_Media_ReferenceType_CompositeMedia = @"COMPOSITE_MEDIA";
NSString * const kGTLRWalletobjects_Media_ReferenceType_CosmoBinaryReference = @"COSMO_BINARY_REFERENCE";
NSString * const kGTLRWalletobjects_Media_ReferenceType_DiffChecksumsResponse = @"DIFF_CHECKSUMS_RESPONSE";
NSString * const kGTLRWalletobjects_Media_ReferenceType_DiffDownloadResponse = @"DIFF_DOWNLOAD_RESPONSE";
NSString * const kGTLRWalletobjects_Media_ReferenceType_DiffUploadRequest = @"DIFF_UPLOAD_REQUEST";
NSString * const kGTLRWalletobjects_Media_ReferenceType_DiffUploadResponse = @"DIFF_UPLOAD_RESPONSE";
NSString * const kGTLRWalletobjects_Media_ReferenceType_DiffVersionResponse = @"DIFF_VERSION_RESPONSE";
NSString * const kGTLRWalletobjects_Media_ReferenceType_GetMedia = @"GET_MEDIA";
NSString * const kGTLRWalletobjects_Media_ReferenceType_Inline = @"INLINE";
NSString * const kGTLRWalletobjects_Media_ReferenceType_Path   = @"PATH";

// GTLRWalletobjects_MediaRequestInfo.notificationType
NSString * const kGTLRWalletobjects_MediaRequestInfo_NotificationType_End = @"END";
NSString * const kGTLRWalletobjects_MediaRequestInfo_NotificationType_Error = @"ERROR";
NSString * const kGTLRWalletobjects_MediaRequestInfo_NotificationType_Progress = @"PROGRESS";
NSString * const kGTLRWalletobjects_MediaRequestInfo_NotificationType_ResponseSent = @"RESPONSE_SENT";
NSString * const kGTLRWalletobjects_MediaRequestInfo_NotificationType_Start = @"START";

// GTLRWalletobjects_Message.messageType
NSString * const kGTLRWalletobjects_Message_MessageType_ExpirationNotification = @"expirationNotification";
NSString * const kGTLRWalletobjects_Message_MessageType_MessageTypeUnspecified = @"MESSAGE_TYPE_UNSPECIFIED";
NSString * const kGTLRWalletobjects_Message_MessageType_Text   = @"text";
NSString * const kGTLRWalletobjects_Message_MessageType_TextAndNotify = @"TEXT_AND_NOTIFY";

// GTLRWalletobjects_OfferClass.multipleDevicesAndHoldersAllowedStatus
NSString * const kGTLRWalletobjects_OfferClass_MultipleDevicesAndHoldersAllowedStatus_MultipleHolders = @"multipleHolders";
NSString * const kGTLRWalletobjects_OfferClass_MultipleDevicesAndHoldersAllowedStatus_OneUserAllDevices = @"oneUserAllDevices";
NSString * const kGTLRWalletobjects_OfferClass_MultipleDevicesAndHoldersAllowedStatus_OneUserOneDevice = @"oneUserOneDevice";
NSString * const kGTLRWalletobjects_OfferClass_MultipleDevicesAndHoldersAllowedStatus_StatusUnspecified = @"STATUS_UNSPECIFIED";

// GTLRWalletobjects_OfferClass.redemptionChannel
NSString * const kGTLRWalletobjects_OfferClass_RedemptionChannel_Both = @"both";
NSString * const kGTLRWalletobjects_OfferClass_RedemptionChannel_Instore = @"instore";
NSString * const kGTLRWalletobjects_OfferClass_RedemptionChannel_Online = @"online";
NSString * const kGTLRWalletobjects_OfferClass_RedemptionChannel_RedemptionChannelUnspecified = @"REDEMPTION_CHANNEL_UNSPECIFIED";
NSString * const kGTLRWalletobjects_OfferClass_RedemptionChannel_TemporaryPriceReduction = @"temporaryPriceReduction";

// GTLRWalletobjects_OfferClass.reviewStatus
NSString * const kGTLRWalletobjects_OfferClass_ReviewStatus_Approved = @"approved";
NSString * const kGTLRWalletobjects_OfferClass_ReviewStatus_Draft = @"draft";
NSString * const kGTLRWalletobjects_OfferClass_ReviewStatus_Rejected = @"rejected";
NSString * const kGTLRWalletobjects_OfferClass_ReviewStatus_ReviewStatusUnspecified = @"REVIEW_STATUS_UNSPECIFIED";
NSString * const kGTLRWalletobjects_OfferClass_ReviewStatus_UnderReview = @"underReview";

// GTLRWalletobjects_OfferClass.viewUnlockRequirement
NSString * const kGTLRWalletobjects_OfferClass_ViewUnlockRequirement_UnlockNotRequired = @"UNLOCK_NOT_REQUIRED";
NSString * const kGTLRWalletobjects_OfferClass_ViewUnlockRequirement_UnlockRequiredToView = @"UNLOCK_REQUIRED_TO_VIEW";
NSString * const kGTLRWalletobjects_OfferClass_ViewUnlockRequirement_ViewUnlockRequirementUnspecified = @"VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED";

// GTLRWalletobjects_OfferObject.state
NSString * const kGTLRWalletobjects_OfferObject_State_Active   = @"active";
NSString * const kGTLRWalletobjects_OfferObject_State_Completed = @"completed";
NSString * const kGTLRWalletobjects_OfferObject_State_Expired  = @"expired";
NSString * const kGTLRWalletobjects_OfferObject_State_Inactive = @"inactive";
NSString * const kGTLRWalletobjects_OfferObject_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRWalletobjects_PassConstraints.nfcConstraint
NSString * const kGTLRWalletobjects_PassConstraints_NfcConstraint_BlockClosedLoopTransit = @"BLOCK_CLOSED_LOOP_TRANSIT";
NSString * const kGTLRWalletobjects_PassConstraints_NfcConstraint_BlockPayment = @"BLOCK_PAYMENT";
NSString * const kGTLRWalletobjects_PassConstraints_NfcConstraint_NfcConstraintUnspecified = @"NFC_CONSTRAINT_UNSPECIFIED";

// GTLRWalletobjects_PassConstraints.screenshotEligibility
NSString * const kGTLRWalletobjects_PassConstraints_ScreenshotEligibility_Eligible = @"ELIGIBLE";
NSString * const kGTLRWalletobjects_PassConstraints_ScreenshotEligibility_Ineligible = @"INELIGIBLE";
NSString * const kGTLRWalletobjects_PassConstraints_ScreenshotEligibility_ScreenshotEligibilityUnspecified = @"SCREENSHOT_ELIGIBILITY_UNSPECIFIED";

// GTLRWalletobjects_Permission.role
NSString * const kGTLRWalletobjects_Permission_Role_Owner      = @"owner";
NSString * const kGTLRWalletobjects_Permission_Role_Reader     = @"reader";
NSString * const kGTLRWalletobjects_Permission_Role_RoleUnspecified = @"ROLE_UNSPECIFIED";
NSString * const kGTLRWalletobjects_Permission_Role_Writer     = @"writer";

// GTLRWalletobjects_RotatingBarcode.renderEncoding
NSString * const kGTLRWalletobjects_RotatingBarcode_RenderEncoding_RenderEncodingUnspecified = @"RENDER_ENCODING_UNSPECIFIED";
NSString * const kGTLRWalletobjects_RotatingBarcode_RenderEncoding_Utf8 = @"UTF_8";

// GTLRWalletobjects_RotatingBarcode.type
NSString * const kGTLRWalletobjects_RotatingBarcode_Type_Aztec = @"aztec";
NSString * const kGTLRWalletobjects_RotatingBarcode_Type_BarcodeTypeUnspecified = @"BARCODE_TYPE_UNSPECIFIED";
NSString * const kGTLRWalletobjects_RotatingBarcode_Type_Codabar = @"codabar";
NSString * const kGTLRWalletobjects_RotatingBarcode_Type_Code128 = @"code128";
NSString * const kGTLRWalletobjects_RotatingBarcode_Type_Code39 = @"code39";
NSString * const kGTLRWalletobjects_RotatingBarcode_Type_DataMatrix = @"dataMatrix";
NSString * const kGTLRWalletobjects_RotatingBarcode_Type_Ean13 = @"EAN13";
NSString * const kGTLRWalletobjects_RotatingBarcode_Type_Ean8  = @"ean8";
NSString * const kGTLRWalletobjects_RotatingBarcode_Type_Itf14 = @"itf14";
NSString * const kGTLRWalletobjects_RotatingBarcode_Type_Pdf417 = @"PDF417";
NSString * const kGTLRWalletobjects_RotatingBarcode_Type_Qrcode = @"qrcode";
NSString * const kGTLRWalletobjects_RotatingBarcode_Type_QrCode = @"qrCode";
NSString * const kGTLRWalletobjects_RotatingBarcode_Type_TextOnly = @"textOnly";
NSString * const kGTLRWalletobjects_RotatingBarcode_Type_UpcA  = @"upcA";

// GTLRWalletobjects_RotatingBarcodeTotpDetails.algorithm
NSString * const kGTLRWalletobjects_RotatingBarcodeTotpDetails_Algorithm_TotpAlgorithmUnspecified = @"TOTP_ALGORITHM_UNSPECIFIED";
NSString * const kGTLRWalletobjects_RotatingBarcodeTotpDetails_Algorithm_TotpSha1 = @"TOTP_SHA1";

// GTLRWalletobjects_SecurityAnimation.animationType
NSString * const kGTLRWalletobjects_SecurityAnimation_AnimationType_AnimationUnspecified = @"ANIMATION_UNSPECIFIED";
NSString * const kGTLRWalletobjects_SecurityAnimation_AnimationType_FoilShimmer = @"foilShimmer";

// GTLRWalletobjects_TemplateItem.predefinedItem
NSString * const kGTLRWalletobjects_TemplateItem_PredefinedItem_FlightNumberAndOperatingFlightNumber = @"flightNumberAndOperatingFlightNumber";
NSString * const kGTLRWalletobjects_TemplateItem_PredefinedItem_FrequentFlyerProgramNameAndNumber = @"frequentFlyerProgramNameAndNumber";
NSString * const kGTLRWalletobjects_TemplateItem_PredefinedItem_PredefinedItemUnspecified = @"PREDEFINED_ITEM_UNSPECIFIED";

// GTLRWalletobjects_TicketSeat.fareClass
NSString * const kGTLRWalletobjects_TicketSeat_FareClass_Business = @"business";
NSString * const kGTLRWalletobjects_TicketSeat_FareClass_Economy = @"economy";
NSString * const kGTLRWalletobjects_TicketSeat_FareClass_FareClassUnspecified = @"FARE_CLASS_UNSPECIFIED";
NSString * const kGTLRWalletobjects_TicketSeat_FareClass_First = @"first";

// GTLRWalletobjects_TransitClass.multipleDevicesAndHoldersAllowedStatus
NSString * const kGTLRWalletobjects_TransitClass_MultipleDevicesAndHoldersAllowedStatus_MultipleHolders = @"multipleHolders";
NSString * const kGTLRWalletobjects_TransitClass_MultipleDevicesAndHoldersAllowedStatus_OneUserAllDevices = @"oneUserAllDevices";
NSString * const kGTLRWalletobjects_TransitClass_MultipleDevicesAndHoldersAllowedStatus_OneUserOneDevice = @"oneUserOneDevice";
NSString * const kGTLRWalletobjects_TransitClass_MultipleDevicesAndHoldersAllowedStatus_StatusUnspecified = @"STATUS_UNSPECIFIED";

// GTLRWalletobjects_TransitClass.reviewStatus
NSString * const kGTLRWalletobjects_TransitClass_ReviewStatus_Approved = @"approved";
NSString * const kGTLRWalletobjects_TransitClass_ReviewStatus_Draft = @"draft";
NSString * const kGTLRWalletobjects_TransitClass_ReviewStatus_Rejected = @"rejected";
NSString * const kGTLRWalletobjects_TransitClass_ReviewStatus_ReviewStatusUnspecified = @"REVIEW_STATUS_UNSPECIFIED";
NSString * const kGTLRWalletobjects_TransitClass_ReviewStatus_UnderReview = @"underReview";

// GTLRWalletobjects_TransitClass.transitType
NSString * const kGTLRWalletobjects_TransitClass_TransitType_Bus = @"bus";
NSString * const kGTLRWalletobjects_TransitClass_TransitType_Ferry = @"ferry";
NSString * const kGTLRWalletobjects_TransitClass_TransitType_Other = @"other";
NSString * const kGTLRWalletobjects_TransitClass_TransitType_Rail = @"rail";
NSString * const kGTLRWalletobjects_TransitClass_TransitType_Tram = @"tram";
NSString * const kGTLRWalletobjects_TransitClass_TransitType_TransitTypeUnspecified = @"TRANSIT_TYPE_UNSPECIFIED";

// GTLRWalletobjects_TransitClass.viewUnlockRequirement
NSString * const kGTLRWalletobjects_TransitClass_ViewUnlockRequirement_UnlockNotRequired = @"UNLOCK_NOT_REQUIRED";
NSString * const kGTLRWalletobjects_TransitClass_ViewUnlockRequirement_UnlockRequiredToView = @"UNLOCK_REQUIRED_TO_VIEW";
NSString * const kGTLRWalletobjects_TransitClass_ViewUnlockRequirement_ViewUnlockRequirementUnspecified = @"VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED";

// GTLRWalletobjects_TransitObject.concessionCategory
NSString * const kGTLRWalletobjects_TransitObject_ConcessionCategory_Adult = @"adult";
NSString * const kGTLRWalletobjects_TransitObject_ConcessionCategory_Child = @"child";
NSString * const kGTLRWalletobjects_TransitObject_ConcessionCategory_ConcessionCategoryUnspecified = @"CONCESSION_CATEGORY_UNSPECIFIED";
NSString * const kGTLRWalletobjects_TransitObject_ConcessionCategory_Senior = @"senior";

// GTLRWalletobjects_TransitObject.passengerType
NSString * const kGTLRWalletobjects_TransitObject_PassengerType_MultiplePassengers = @"multiplePassengers";
NSString * const kGTLRWalletobjects_TransitObject_PassengerType_PassengerTypeUnspecified = @"PASSENGER_TYPE_UNSPECIFIED";
NSString * const kGTLRWalletobjects_TransitObject_PassengerType_SinglePassenger = @"singlePassenger";

// GTLRWalletobjects_TransitObject.state
NSString * const kGTLRWalletobjects_TransitObject_State_Active = @"active";
NSString * const kGTLRWalletobjects_TransitObject_State_Completed = @"completed";
NSString * const kGTLRWalletobjects_TransitObject_State_Expired = @"expired";
NSString * const kGTLRWalletobjects_TransitObject_State_Inactive = @"inactive";
NSString * const kGTLRWalletobjects_TransitObject_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRWalletobjects_TransitObject.ticketStatus
NSString * const kGTLRWalletobjects_TransitObject_TicketStatus_Exchanged = @"exchanged";
NSString * const kGTLRWalletobjects_TransitObject_TicketStatus_Refunded = @"refunded";
NSString * const kGTLRWalletobjects_TransitObject_TicketStatus_TicketStatusUnspecified = @"TICKET_STATUS_UNSPECIFIED";
NSString * const kGTLRWalletobjects_TransitObject_TicketStatus_Used = @"used";

// GTLRWalletobjects_TransitObject.tripType
NSString * const kGTLRWalletobjects_TransitObject_TripType_OneWay = @"oneWay";
NSString * const kGTLRWalletobjects_TransitObject_TripType_RoundTrip = @"roundTrip";
NSString * const kGTLRWalletobjects_TransitObject_TripType_TripTypeUnspecified = @"TRIP_TYPE_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_ActivationOptions
//

@implementation GTLRWalletobjects_ActivationOptions
@dynamic activationUrl, allowReactivation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_ActivationStatus
//

@implementation GTLRWalletobjects_ActivationStatus
@dynamic state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_AddMessageRequest
//

@implementation GTLRWalletobjects_AddMessageRequest
@dynamic message;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_AirportInfo
//

@implementation GTLRWalletobjects_AirportInfo
@dynamic airportIataCode, airportNameOverride, gate, kind, terminal;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_AppLinkData
//

@implementation GTLRWalletobjects_AppLinkData
@dynamic androidAppLinkInfo, iosAppLinkInfo, webAppLinkInfo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_AppLinkDataAppLinkInfo
//

@implementation GTLRWalletobjects_AppLinkDataAppLinkInfo
@dynamic appLogoImage, appTarget, descriptionProperty, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_AppLinkDataAppLinkInfoAppTarget
//

@implementation GTLRWalletobjects_AppLinkDataAppLinkInfoAppTarget
@dynamic packageName, targetUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_AuthenticationKey
//

@implementation GTLRWalletobjects_AuthenticationKey
@dynamic identifier, publicKeyPem;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_Barcode
//

@implementation GTLRWalletobjects_Barcode
@dynamic alternateText, kind, renderEncoding, showCodeText, type, value;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_BarcodeSectionDetail
//

@implementation GTLRWalletobjects_BarcodeSectionDetail
@dynamic fieldSelector;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_Blobstore2Info
//

@implementation GTLRWalletobjects_Blobstore2Info
@dynamic blobGeneration, blobId, downloadReadHandle, readToken,
         uploadMetadataContainer;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_BoardingAndSeatingInfo
//

@implementation GTLRWalletobjects_BoardingAndSeatingInfo
@dynamic boardingDoor, boardingGroup, boardingPosition, boardingPrivilegeImage,
         kind, seatAssignment, seatClass, seatNumber, sequenceNumber;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_BoardingAndSeatingPolicy
//

@implementation GTLRWalletobjects_BoardingAndSeatingPolicy
@dynamic boardingPolicy, kind, seatClassPolicy;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_CallbackOptions
//

@implementation GTLRWalletobjects_CallbackOptions
@dynamic updateRequestUrl, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_CardBarcodeSectionDetails
//

@implementation GTLRWalletobjects_CardBarcodeSectionDetails
@dynamic firstBottomDetail, firstTopDetail, secondTopDetail;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_CardRowOneItem
//

@implementation GTLRWalletobjects_CardRowOneItem
@dynamic item;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_CardRowTemplateInfo
//

@implementation GTLRWalletobjects_CardRowTemplateInfo
@dynamic oneItem, threeItems, twoItems;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_CardRowThreeItems
//

@implementation GTLRWalletobjects_CardRowThreeItems
@dynamic endItem, middleItem, startItem;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_CardRowTwoItems
//

@implementation GTLRWalletobjects_CardRowTwoItems
@dynamic endItem, startItem;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_CardTemplateOverride
//

@implementation GTLRWalletobjects_CardTemplateOverride
@dynamic cardRowTemplateInfos;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"cardRowTemplateInfos" : [GTLRWalletobjects_CardRowTemplateInfo class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_ClassTemplateInfo
//

@implementation GTLRWalletobjects_ClassTemplateInfo
@dynamic cardBarcodeSectionDetails, cardTemplateOverride,
         detailsTemplateOverride, listTemplateOverride;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_CompositeMedia
//

@implementation GTLRWalletobjects_CompositeMedia
@dynamic blobRef, blobstore2Info, cosmoBinaryReference, crc32cHash,
         inlineProperty, length, md5Hash, objectId, path, referenceType,
         sha1Hash;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"inlineProperty" : @"inline" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_ContentTypeInfo
//

@implementation GTLRWalletobjects_ContentTypeInfo
@dynamic bestGuess, fromBytes, fromFileName, fromHeader, fromUrlPath;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_DateTime
//

@implementation GTLRWalletobjects_DateTime
@dynamic date;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_DetailsItemInfo
//

@implementation GTLRWalletobjects_DetailsItemInfo
@dynamic item;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_DetailsTemplateOverride
//

@implementation GTLRWalletobjects_DetailsTemplateOverride
@dynamic detailsItemInfos;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"detailsItemInfos" : [GTLRWalletobjects_DetailsItemInfo class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_DeviceContext
//

@implementation GTLRWalletobjects_DeviceContext
@dynamic deviceToken;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_DiffChecksumsResponse
//

@implementation GTLRWalletobjects_DiffChecksumsResponse
@dynamic checksumsLocation, chunkSizeBytes, objectLocation, objectSizeBytes,
         objectVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_DiffDownloadResponse
//

@implementation GTLRWalletobjects_DiffDownloadResponse
@dynamic objectLocation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_DiffUploadRequest
//

@implementation GTLRWalletobjects_DiffUploadRequest
@dynamic checksumsInfo, objectInfo, objectVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_DiffUploadResponse
//

@implementation GTLRWalletobjects_DiffUploadResponse
@dynamic objectVersion, originalObject;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_DiffVersionResponse
//

@implementation GTLRWalletobjects_DiffVersionResponse
@dynamic objectSizeBytes, objectVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_DiscoverableProgram
//

@implementation GTLRWalletobjects_DiscoverableProgram
@dynamic merchantSigninInfo, merchantSignupInfo, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_DiscoverableProgramMerchantSigninInfo
//

@implementation GTLRWalletobjects_DiscoverableProgramMerchantSigninInfo
@dynamic signinWebsite;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_DiscoverableProgramMerchantSignupInfo
//

@implementation GTLRWalletobjects_DiscoverableProgramMerchantSignupInfo
@dynamic signupSharedDatas, signupWebsite;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"signupSharedDatas" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_DownloadParameters
//

@implementation GTLRWalletobjects_DownloadParameters
@dynamic allowGzipCompression, ignoreRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_EventDateTime
//

@implementation GTLRWalletobjects_EventDateTime
@dynamic customDoorsOpenLabel, doorsOpen, doorsOpenLabel, end, kind, start;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_EventReservationInfo
//

@implementation GTLRWalletobjects_EventReservationInfo
@dynamic confirmationCode, kind;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_EventSeat
//

@implementation GTLRWalletobjects_EventSeat
@dynamic gate, kind, row, seat, section;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_EventTicketClass
//

@implementation GTLRWalletobjects_EventTicketClass
@dynamic allowMultipleUsersPerObject, appLinkData, callbackOptions,
         classTemplateInfo, confirmationCodeLabel, countryCode,
         customConfirmationCodeLabel, customGateLabel, customRowLabel,
         customSeatLabel, customSectionLabel, dateTime, enableSmartTap, eventId,
         eventName, finePrint, gateLabel, heroImage, hexBackgroundColor,
         homepageUri, identifier, imageModulesData, infoModuleData, issuerName,
         kind, linksModuleData, localizedIssuerName, locations, logo, messages,
         multipleDevicesAndHoldersAllowedStatus, redemptionIssuers, review,
         reviewStatus, rowLabel, seatLabel, sectionLabel, securityAnimation,
         textModulesData, venue, version, viewUnlockRequirement, wideLogo,
         wordMark;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageModulesData" : [GTLRWalletobjects_ImageModuleData class],
    @"locations" : [GTLRWalletobjects_LatLongPoint class],
    @"messages" : [GTLRWalletobjects_Message class],
    @"redemptionIssuers" : [NSNumber class],
    @"textModulesData" : [GTLRWalletobjects_TextModuleData class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_EventTicketClassAddMessageResponse
//

@implementation GTLRWalletobjects_EventTicketClassAddMessageResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_EventTicketClassListResponse
//

@implementation GTLRWalletobjects_EventTicketClassListResponse
@dynamic pagination, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRWalletobjects_EventTicketClass class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_EventTicketObject
//

@implementation GTLRWalletobjects_EventTicketObject
@dynamic appLinkData, barcode, classId, classReference,
         disableExpirationNotification, faceValue, groupingInfo,
         hasLinkedDevice, hasUsers, heroImage, hexBackgroundColor, identifier,
         imageModulesData, infoModuleData, kind, linkedOfferIds,
         linksModuleData, locations, messages, passConstraints, reservationInfo,
         rotatingBarcode, seatInfo, smartTapRedemptionValue, state,
         textModulesData, ticketHolderName, ticketNumber, ticketType,
         validTimeInterval, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageModulesData" : [GTLRWalletobjects_ImageModuleData class],
    @"linkedOfferIds" : [NSString class],
    @"locations" : [GTLRWalletobjects_LatLongPoint class],
    @"messages" : [GTLRWalletobjects_Message class],
    @"textModulesData" : [GTLRWalletobjects_TextModuleData class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_EventTicketObjectAddMessageResponse
//

@implementation GTLRWalletobjects_EventTicketObjectAddMessageResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_EventTicketObjectListResponse
//

@implementation GTLRWalletobjects_EventTicketObjectListResponse
@dynamic pagination, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRWalletobjects_EventTicketObject class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_EventVenue
//

@implementation GTLRWalletobjects_EventVenue
@dynamic address, kind, name;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_ExpiryNotification
//

@implementation GTLRWalletobjects_ExpiryNotification
@dynamic enableNotification;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_FieldReference
//

@implementation GTLRWalletobjects_FieldReference
@dynamic dateFormat, fieldPath;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_FieldSelector
//

@implementation GTLRWalletobjects_FieldSelector
@dynamic fields;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"fields" : [GTLRWalletobjects_FieldReference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_FirstRowOption
//

@implementation GTLRWalletobjects_FirstRowOption
@dynamic fieldOption, transitOption;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_FlightCarrier
//

@implementation GTLRWalletobjects_FlightCarrier
@dynamic airlineAllianceLogo, airlineLogo, airlineName, carrierIataCode,
         carrierIcaoCode, kind, wideAirlineLogo;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_FlightClass
//

@implementation GTLRWalletobjects_FlightClass
@dynamic allowMultipleUsersPerObject, appLinkData, boardingAndSeatingPolicy,
         callbackOptions, classTemplateInfo, countryCode, destination,
         enableSmartTap, flightHeader, flightStatus, heroImage,
         hexBackgroundColor, homepageUri, identifier, imageModulesData,
         infoModuleData, issuerName, kind, languageOverride, linksModuleData,
         localBoardingDateTime, localEstimatedOrActualArrivalDateTime,
         localEstimatedOrActualDepartureDateTime, localGateClosingDateTime,
         localizedIssuerName, localScheduledArrivalDateTime,
         localScheduledDepartureDateTime, locations, messages,
         multipleDevicesAndHoldersAllowedStatus, origin, redemptionIssuers,
         review, reviewStatus, securityAnimation, textModulesData, version,
         viewUnlockRequirement, wordMark;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageModulesData" : [GTLRWalletobjects_ImageModuleData class],
    @"locations" : [GTLRWalletobjects_LatLongPoint class],
    @"messages" : [GTLRWalletobjects_Message class],
    @"redemptionIssuers" : [NSNumber class],
    @"textModulesData" : [GTLRWalletobjects_TextModuleData class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_FlightClassAddMessageResponse
//

@implementation GTLRWalletobjects_FlightClassAddMessageResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_FlightClassListResponse
//

@implementation GTLRWalletobjects_FlightClassListResponse
@dynamic pagination, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRWalletobjects_FlightClass class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_FlightHeader
//

@implementation GTLRWalletobjects_FlightHeader
@dynamic carrier, flightNumber, flightNumberDisplayOverride, kind,
         operatingCarrier, operatingFlightNumber;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_FlightObject
//

@implementation GTLRWalletobjects_FlightObject
@dynamic appLinkData, barcode, boardingAndSeatingInfo, classId, classReference,
         disableExpirationNotification, groupingInfo, hasLinkedDevice, hasUsers,
         heroImage, hexBackgroundColor, identifier, imageModulesData,
         infoModuleData, kind, linksModuleData, locations, messages,
         passConstraints, passengerName, reservationInfo, rotatingBarcode,
         securityProgramLogo, smartTapRedemptionValue, state, textModulesData,
         validTimeInterval, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageModulesData" : [GTLRWalletobjects_ImageModuleData class],
    @"locations" : [GTLRWalletobjects_LatLongPoint class],
    @"messages" : [GTLRWalletobjects_Message class],
    @"textModulesData" : [GTLRWalletobjects_TextModuleData class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_FlightObjectAddMessageResponse
//

@implementation GTLRWalletobjects_FlightObjectAddMessageResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_FlightObjectListResponse
//

@implementation GTLRWalletobjects_FlightObjectListResponse
@dynamic pagination, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRWalletobjects_FlightObject class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_FrequentFlyerInfo
//

@implementation GTLRWalletobjects_FrequentFlyerInfo
@dynamic frequentFlyerNumber, frequentFlyerProgramName, kind;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_GenericClass
//

@implementation GTLRWalletobjects_GenericClass
@dynamic appLinkData, callbackOptions, classTemplateInfo, enableSmartTap,
         identifier, imageModulesData, linksModuleData, messages,
         multipleDevicesAndHoldersAllowedStatus, redemptionIssuers,
         securityAnimation, textModulesData, viewUnlockRequirement;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageModulesData" : [GTLRWalletobjects_ImageModuleData class],
    @"messages" : [GTLRWalletobjects_Message class],
    @"redemptionIssuers" : [NSNumber class],
    @"textModulesData" : [GTLRWalletobjects_TextModuleData class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_GenericClassAddMessageResponse
//

@implementation GTLRWalletobjects_GenericClassAddMessageResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_GenericClassListResponse
//

@implementation GTLRWalletobjects_GenericClassListResponse
@dynamic pagination, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRWalletobjects_GenericClass class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_GenericObject
//

@implementation GTLRWalletobjects_GenericObject
@dynamic appLinkData, barcode, cardTitle, classId, genericType, groupingInfo,
         hasUsers, header, heroImage, hexBackgroundColor, identifier,
         imageModulesData, linksModuleData, logo, notifications,
         passConstraints, rotatingBarcode, smartTapRedemptionValue, state,
         subheader, textModulesData, validTimeInterval, wideLogo;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageModulesData" : [GTLRWalletobjects_ImageModuleData class],
    @"textModulesData" : [GTLRWalletobjects_TextModuleData class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_GenericObjectAddMessageResponse
//

@implementation GTLRWalletobjects_GenericObjectAddMessageResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_GenericObjectListResponse
//

@implementation GTLRWalletobjects_GenericObjectListResponse
@dynamic pagination, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRWalletobjects_GenericObject class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_GiftCardClass
//

@implementation GTLRWalletobjects_GiftCardClass
@dynamic allowBarcodeRedemption, allowMultipleUsersPerObject, appLinkData,
         callbackOptions, cardNumberLabel, classTemplateInfo, countryCode,
         enableSmartTap, eventNumberLabel, heroImage, hexBackgroundColor,
         homepageUri, identifier, imageModulesData, infoModuleData, issuerName,
         kind, linksModuleData, localizedCardNumberLabel,
         localizedEventNumberLabel, localizedIssuerName, localizedMerchantName,
         localizedPinLabel, locations, merchantName, messages,
         multipleDevicesAndHoldersAllowedStatus, pinLabel, programLogo,
         redemptionIssuers, review, reviewStatus, securityAnimation,
         textModulesData, version, viewUnlockRequirement, wideProgramLogo,
         wordMark;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageModulesData" : [GTLRWalletobjects_ImageModuleData class],
    @"locations" : [GTLRWalletobjects_LatLongPoint class],
    @"messages" : [GTLRWalletobjects_Message class],
    @"redemptionIssuers" : [NSNumber class],
    @"textModulesData" : [GTLRWalletobjects_TextModuleData class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_GiftCardClassAddMessageResponse
//

@implementation GTLRWalletobjects_GiftCardClassAddMessageResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_GiftCardClassListResponse
//

@implementation GTLRWalletobjects_GiftCardClassListResponse
@dynamic pagination, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRWalletobjects_GiftCardClass class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_GiftCardObject
//

@implementation GTLRWalletobjects_GiftCardObject
@dynamic appLinkData, balance, balanceUpdateTime, barcode, cardNumber, classId,
         classReference, disableExpirationNotification, eventNumber,
         groupingInfo, hasLinkedDevice, hasUsers, heroImage, identifier,
         imageModulesData, infoModuleData, kind, linksModuleData, locations,
         messages, passConstraints, pin, rotatingBarcode,
         smartTapRedemptionValue, state, textModulesData, validTimeInterval,
         version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageModulesData" : [GTLRWalletobjects_ImageModuleData class],
    @"locations" : [GTLRWalletobjects_LatLongPoint class],
    @"messages" : [GTLRWalletobjects_Message class],
    @"textModulesData" : [GTLRWalletobjects_TextModuleData class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_GiftCardObjectAddMessageResponse
//

@implementation GTLRWalletobjects_GiftCardObjectAddMessageResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_GiftCardObjectListResponse
//

@implementation GTLRWalletobjects_GiftCardObjectListResponse
@dynamic pagination, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRWalletobjects_GiftCardObject class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_GroupingInfo
//

@implementation GTLRWalletobjects_GroupingInfo
@dynamic groupingId, sortIndex;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_Image
//

@implementation GTLRWalletobjects_Image
@dynamic contentDescription, kind, sourceUri;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_ImageModuleData
//

@implementation GTLRWalletobjects_ImageModuleData
@dynamic identifier, mainImage;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_ImageUri
//

@implementation GTLRWalletobjects_ImageUri
@dynamic descriptionProperty, localizedDescription, uri;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_InfoModuleData
//

@implementation GTLRWalletobjects_InfoModuleData
@dynamic labelValueRows, showLastUpdateTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"labelValueRows" : [GTLRWalletobjects_LabelValueRow class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_Issuer
//

@implementation GTLRWalletobjects_Issuer
@dynamic callbackOptions, contactInfo, homepageUrl, issuerId, name,
         smartTapMerchantData;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_IssuerContactInfo
//

@implementation GTLRWalletobjects_IssuerContactInfo
@dynamic alertsEmails, email, name, phone;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"alertsEmails" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_IssuerListResponse
//

@implementation GTLRWalletobjects_IssuerListResponse
@dynamic resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRWalletobjects_Issuer class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_IssuerToUserInfo
//

@implementation GTLRWalletobjects_IssuerToUserInfo
@dynamic action, signUpInfo, url, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_JwtInsertResponse
//

@implementation GTLRWalletobjects_JwtInsertResponse
@dynamic resources, saveUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_JwtResource
//

@implementation GTLRWalletobjects_JwtResource
@dynamic jwt;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_LabelValue
//

@implementation GTLRWalletobjects_LabelValue
@dynamic label, localizedLabel, localizedValue, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_LabelValueRow
//

@implementation GTLRWalletobjects_LabelValueRow
@dynamic columns;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"columns" : [GTLRWalletobjects_LabelValue class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_LatLongPoint
//

@implementation GTLRWalletobjects_LatLongPoint
@dynamic kind, latitude, longitude;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_LinksModuleData
//

@implementation GTLRWalletobjects_LinksModuleData
@dynamic uris;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"uris" : [GTLRWalletobjects_Uri class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_ListTemplateOverride
//

@implementation GTLRWalletobjects_ListTemplateOverride
@dynamic firstRowOption, secondRowOption, thirdRowOption;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_LocalizedString
//

@implementation GTLRWalletobjects_LocalizedString
@dynamic defaultValue, kind, translatedValues;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"translatedValues" : [GTLRWalletobjects_TranslatedString class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_LoyaltyClass
//

@implementation GTLRWalletobjects_LoyaltyClass
@dynamic accountIdLabel, accountNameLabel, allowMultipleUsersPerObject,
         appLinkData, callbackOptions, classTemplateInfo, countryCode,
         discoverableProgram, enableSmartTap, heroImage, hexBackgroundColor,
         homepageUri, identifier, imageModulesData, infoModuleData, issuerName,
         kind, linksModuleData, localizedAccountIdLabel,
         localizedAccountNameLabel, localizedIssuerName, localizedProgramName,
         localizedRewardsTier, localizedRewardsTierLabel,
         localizedSecondaryRewardsTier, localizedSecondaryRewardsTierLabel,
         locations, messages, multipleDevicesAndHoldersAllowedStatus,
         programLogo, programName, redemptionIssuers, review, reviewStatus,
         rewardsTier, rewardsTierLabel, secondaryRewardsTier,
         secondaryRewardsTierLabel, securityAnimation, textModulesData, version,
         viewUnlockRequirement, wideProgramLogo, wordMark;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageModulesData" : [GTLRWalletobjects_ImageModuleData class],
    @"locations" : [GTLRWalletobjects_LatLongPoint class],
    @"messages" : [GTLRWalletobjects_Message class],
    @"redemptionIssuers" : [NSNumber class],
    @"textModulesData" : [GTLRWalletobjects_TextModuleData class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_LoyaltyClassAddMessageResponse
//

@implementation GTLRWalletobjects_LoyaltyClassAddMessageResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_LoyaltyClassListResponse
//

@implementation GTLRWalletobjects_LoyaltyClassListResponse
@dynamic pagination, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRWalletobjects_LoyaltyClass class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_LoyaltyObject
//

@implementation GTLRWalletobjects_LoyaltyObject
@dynamic accountId, accountName, appLinkData, barcode, classId, classReference,
         disableExpirationNotification, groupingInfo, hasLinkedDevice, hasUsers,
         heroImage, identifier, imageModulesData, infoModuleData, kind,
         linkedOfferIds, linksModuleData, locations, loyaltyPoints, messages,
         passConstraints, rotatingBarcode, secondaryLoyaltyPoints,
         smartTapRedemptionValue, state, textModulesData, validTimeInterval,
         version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageModulesData" : [GTLRWalletobjects_ImageModuleData class],
    @"linkedOfferIds" : [NSString class],
    @"locations" : [GTLRWalletobjects_LatLongPoint class],
    @"messages" : [GTLRWalletobjects_Message class],
    @"textModulesData" : [GTLRWalletobjects_TextModuleData class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_LoyaltyObjectAddMessageResponse
//

@implementation GTLRWalletobjects_LoyaltyObjectAddMessageResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_LoyaltyObjectListResponse
//

@implementation GTLRWalletobjects_LoyaltyObjectListResponse
@dynamic pagination, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRWalletobjects_LoyaltyObject class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_LoyaltyPoints
//

@implementation GTLRWalletobjects_LoyaltyPoints
@dynamic balance, label, localizedLabel;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_LoyaltyPointsBalance
//

@implementation GTLRWalletobjects_LoyaltyPointsBalance
@dynamic doubleProperty, intProperty, money, string;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"doubleProperty" : @"double",
    @"intProperty" : @"int"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_Media
//

@implementation GTLRWalletobjects_Media
@dynamic algorithm, bigstoreObjectRef, blobRef, blobstore2Info, compositeMedia,
         contentType, contentTypeInfo, cosmoBinaryReference, crc32cHash,
         diffChecksumsResponse, diffDownloadResponse, diffUploadRequest,
         diffUploadResponse, diffVersionResponse, downloadParameters, filename,
         hashProperty, hashVerified, inlineProperty, isPotentialRetry, length,
         md5Hash, mediaId, objectId, path, referenceType, sha1Hash, sha256Hash,
         timestamp, token;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"hashProperty" : @"hash",
    @"inlineProperty" : @"inline"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"compositeMedia" : [GTLRWalletobjects_CompositeMedia class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_MediaRequestInfo
//

@implementation GTLRWalletobjects_MediaRequestInfo
@dynamic currentBytes, customData, diffObjectVersion, finalStatus,
         notificationType, requestId, requestReceivedParamsServingInfo,
         totalBytes, totalBytesIsEstimated;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_Message
//

@implementation GTLRWalletobjects_Message
@dynamic body, displayInterval, header, identifier, kind, localizedBody,
         localizedHeader, messageType;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_ModifyLinkedOfferObjects
//

@implementation GTLRWalletobjects_ModifyLinkedOfferObjects
@dynamic addLinkedOfferObjectIds, removeLinkedOfferObjectIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"addLinkedOfferObjectIds" : [NSString class],
    @"removeLinkedOfferObjectIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_ModifyLinkedOfferObjectsRequest
//

@implementation GTLRWalletobjects_ModifyLinkedOfferObjectsRequest
@dynamic linkedOfferObjectIds;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_Money
//

@implementation GTLRWalletobjects_Money
@dynamic currencyCode, kind, micros;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_Notifications
//

@implementation GTLRWalletobjects_Notifications
@dynamic expiryNotification, upcomingNotification;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_ObjectId
//

@implementation GTLRWalletobjects_ObjectId
@dynamic bucketName, generation, objectName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_OfferClass
//

@implementation GTLRWalletobjects_OfferClass
@dynamic allowMultipleUsersPerObject, appLinkData, callbackOptions,
         classTemplateInfo, countryCode, details, enableSmartTap, finePrint,
         helpUri, heroImage, hexBackgroundColor, homepageUri, identifier,
         imageModulesData, infoModuleData, issuerName, kind, linksModuleData,
         localizedDetails, localizedFinePrint, localizedIssuerName,
         localizedProvider, localizedShortTitle, localizedTitle, locations,
         messages, multipleDevicesAndHoldersAllowedStatus, provider,
         redemptionChannel, redemptionIssuers, review, reviewStatus,
         securityAnimation, shortTitle, textModulesData, title, titleImage,
         version, viewUnlockRequirement, wideTitleImage, wordMark;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageModulesData" : [GTLRWalletobjects_ImageModuleData class],
    @"locations" : [GTLRWalletobjects_LatLongPoint class],
    @"messages" : [GTLRWalletobjects_Message class],
    @"redemptionIssuers" : [NSNumber class],
    @"textModulesData" : [GTLRWalletobjects_TextModuleData class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_OfferClassAddMessageResponse
//

@implementation GTLRWalletobjects_OfferClassAddMessageResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_OfferClassListResponse
//

@implementation GTLRWalletobjects_OfferClassListResponse
@dynamic pagination, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRWalletobjects_OfferClass class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_OfferObject
//

@implementation GTLRWalletobjects_OfferObject
@dynamic appLinkData, barcode, classId, classReference,
         disableExpirationNotification, groupingInfo, hasLinkedDevice, hasUsers,
         heroImage, identifier, imageModulesData, infoModuleData, kind,
         linksModuleData, locations, messages, passConstraints, rotatingBarcode,
         smartTapRedemptionValue, state, textModulesData, validTimeInterval,
         version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageModulesData" : [GTLRWalletobjects_ImageModuleData class],
    @"locations" : [GTLRWalletobjects_LatLongPoint class],
    @"messages" : [GTLRWalletobjects_Message class],
    @"textModulesData" : [GTLRWalletobjects_TextModuleData class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_OfferObjectAddMessageResponse
//

@implementation GTLRWalletobjects_OfferObjectAddMessageResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_OfferObjectListResponse
//

@implementation GTLRWalletobjects_OfferObjectListResponse
@dynamic pagination, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRWalletobjects_OfferObject class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_Pagination
//

@implementation GTLRWalletobjects_Pagination
@dynamic kind, nextPageToken, resultsPerPage;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_PassConstraints
//

@implementation GTLRWalletobjects_PassConstraints
@dynamic nfcConstraint, screenshotEligibility;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nfcConstraint" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_Permission
//

@implementation GTLRWalletobjects_Permission
@dynamic emailAddress, role;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_Permissions
//

@implementation GTLRWalletobjects_Permissions
@dynamic issuerId, permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [GTLRWalletobjects_Permission class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_PurchaseDetails
//

@implementation GTLRWalletobjects_PurchaseDetails
@dynamic accountId, confirmationCode, purchaseDateTime, purchaseReceiptNumber,
         ticketCost;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_ReservationInfo
//

@implementation GTLRWalletobjects_ReservationInfo
@dynamic confirmationCode, eticketNumber, frequentFlyerInfo, kind;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_Resources
//

@implementation GTLRWalletobjects_Resources
@dynamic eventTicketClasses, eventTicketObjects, flightClasses, flightObjects,
         genericClasses, genericObjects, giftCardClasses, giftCardObjects,
         loyaltyClasses, loyaltyObjects, offerClasses, offerObjects,
         transitClasses, transitObjects;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"eventTicketClasses" : [GTLRWalletobjects_EventTicketClass class],
    @"eventTicketObjects" : [GTLRWalletobjects_EventTicketObject class],
    @"flightClasses" : [GTLRWalletobjects_FlightClass class],
    @"flightObjects" : [GTLRWalletobjects_FlightObject class],
    @"genericClasses" : [GTLRWalletobjects_GenericClass class],
    @"genericObjects" : [GTLRWalletobjects_GenericObject class],
    @"giftCardClasses" : [GTLRWalletobjects_GiftCardClass class],
    @"giftCardObjects" : [GTLRWalletobjects_GiftCardObject class],
    @"loyaltyClasses" : [GTLRWalletobjects_LoyaltyClass class],
    @"loyaltyObjects" : [GTLRWalletobjects_LoyaltyObject class],
    @"offerClasses" : [GTLRWalletobjects_OfferClass class],
    @"offerObjects" : [GTLRWalletobjects_OfferObject class],
    @"transitClasses" : [GTLRWalletobjects_TransitClass class],
    @"transitObjects" : [GTLRWalletobjects_TransitObject class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_Review
//

@implementation GTLRWalletobjects_Review
@dynamic comments;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_RotatingBarcode
//

@implementation GTLRWalletobjects_RotatingBarcode
@dynamic alternateText, initialRotatingBarcodeValues, renderEncoding,
         showCodeText, totpDetails, type, valuePattern;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_RotatingBarcodeTotpDetails
//

@implementation GTLRWalletobjects_RotatingBarcodeTotpDetails
@dynamic algorithm, parameters, periodMillis;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"parameters" : [GTLRWalletobjects_RotatingBarcodeTotpDetailsTotpParameters class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_RotatingBarcodeTotpDetailsTotpParameters
//

@implementation GTLRWalletobjects_RotatingBarcodeTotpDetailsTotpParameters
@dynamic key, valueLength;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_RotatingBarcodeValues
//

@implementation GTLRWalletobjects_RotatingBarcodeValues
@dynamic periodMillis, startDateTime, values;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"values" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_SecurityAnimation
//

@implementation GTLRWalletobjects_SecurityAnimation
@dynamic animationType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_SignUpInfo
//

@implementation GTLRWalletobjects_SignUpInfo
@dynamic classId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_SmartTap
//

@implementation GTLRWalletobjects_SmartTap
@dynamic identifier, infos, kind, merchantId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"infos" : [GTLRWalletobjects_IssuerToUserInfo class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_SmartTapMerchantData
//

@implementation GTLRWalletobjects_SmartTapMerchantData
@dynamic authenticationKeys, smartTapMerchantId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"authenticationKeys" : [GTLRWalletobjects_AuthenticationKey class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TemplateItem
//

@implementation GTLRWalletobjects_TemplateItem
@dynamic firstValue, predefinedItem, secondValue;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TextModuleData
//

@implementation GTLRWalletobjects_TextModuleData
@dynamic body, header, identifier, localizedBody, localizedHeader;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TicketCost
//

@implementation GTLRWalletobjects_TicketCost
@dynamic discountMessage, faceValue, purchasePrice;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TicketLeg
//

@implementation GTLRWalletobjects_TicketLeg
@dynamic arrivalDateTime, carriage, departureDateTime, destinationName,
         destinationStationCode, fareName, originName, originStationCode,
         platform, ticketSeat, ticketSeats, transitOperatorName,
         transitTerminusName, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"zoneProperty" : @"zone" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"ticketSeats" : [GTLRWalletobjects_TicketSeat class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TicketRestrictions
//

@implementation GTLRWalletobjects_TicketRestrictions
@dynamic otherRestrictions, routeRestrictions, routeRestrictionsDetails,
         timeRestrictions;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TicketSeat
//

@implementation GTLRWalletobjects_TicketSeat
@dynamic coach, customFareClass, fareClass, seat, seatAssignment;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TimeInterval
//

@implementation GTLRWalletobjects_TimeInterval
@dynamic end, kind, start;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TransitClass
//

@implementation GTLRWalletobjects_TransitClass
@dynamic activationOptions, allowMultipleUsersPerObject, appLinkData,
         callbackOptions, classTemplateInfo, countryCode, customCarriageLabel,
         customCoachLabel, customConcessionCategoryLabel,
         customConfirmationCodeLabel, customDiscountMessageLabel,
         customFareClassLabel, customFareNameLabel,
         customOtherRestrictionsLabel, customPlatformLabel,
         customPurchaseFaceValueLabel, customPurchasePriceLabel,
         customPurchaseReceiptNumberLabel, customRouteRestrictionsDetailsLabel,
         customRouteRestrictionsLabel, customSeatLabel, customTicketNumberLabel,
         customTimeRestrictionsLabel, customTransitTerminusNameLabel,
         customZoneLabel, enableSingleLegItinerary, enableSmartTap, heroImage,
         hexBackgroundColor, homepageUri, identifier, imageModulesData,
         infoModuleData, issuerName, languageOverride, linksModuleData,
         localizedIssuerName, locations, logo, messages,
         multipleDevicesAndHoldersAllowedStatus, redemptionIssuers, review,
         reviewStatus, securityAnimation, textModulesData, transitOperatorName,
         transitType, version, viewUnlockRequirement, watermark, wideLogo,
         wordMark;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageModulesData" : [GTLRWalletobjects_ImageModuleData class],
    @"locations" : [GTLRWalletobjects_LatLongPoint class],
    @"messages" : [GTLRWalletobjects_Message class],
    @"redemptionIssuers" : [NSNumber class],
    @"textModulesData" : [GTLRWalletobjects_TextModuleData class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TransitClassAddMessageResponse
//

@implementation GTLRWalletobjects_TransitClassAddMessageResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TransitClassListResponse
//

@implementation GTLRWalletobjects_TransitClassListResponse
@dynamic pagination, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRWalletobjects_TransitClass class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TransitObject
//

@implementation GTLRWalletobjects_TransitObject
@dynamic activationStatus, appLinkData, barcode, classId, classReference,
         concessionCategory, customConcessionCategory, customTicketStatus,
         deviceContext, disableExpirationNotification, groupingInfo,
         hasLinkedDevice, hasUsers, heroImage, hexBackgroundColor, identifier,
         imageModulesData, infoModuleData, linksModuleData, locations, messages,
         passConstraints, passengerNames, passengerType, purchaseDetails,
         rotatingBarcode, smartTapRedemptionValue, state, textModulesData,
         ticketLeg, ticketLegs, ticketNumber, ticketRestrictions, ticketStatus,
         tripId, tripType, validTimeInterval, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"imageModulesData" : [GTLRWalletobjects_ImageModuleData class],
    @"locations" : [GTLRWalletobjects_LatLongPoint class],
    @"messages" : [GTLRWalletobjects_Message class],
    @"textModulesData" : [GTLRWalletobjects_TextModuleData class],
    @"ticketLegs" : [GTLRWalletobjects_TicketLeg class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TransitObjectAddMessageResponse
//

@implementation GTLRWalletobjects_TransitObjectAddMessageResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TransitObjectListResponse
//

@implementation GTLRWalletobjects_TransitObjectListResponse
@dynamic pagination, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRWalletobjects_TransitObject class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TransitObjectUploadRotatingBarcodeValuesRequest
//

@implementation GTLRWalletobjects_TransitObjectUploadRotatingBarcodeValuesRequest
@dynamic blob, mediaRequestInfo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TransitObjectUploadRotatingBarcodeValuesResponse
//

@implementation GTLRWalletobjects_TransitObjectUploadRotatingBarcodeValuesResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_TranslatedString
//

@implementation GTLRWalletobjects_TranslatedString
@dynamic kind, language, value;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_UpcomingNotification
//

@implementation GTLRWalletobjects_UpcomingNotification
@dynamic enableNotification;
@end


// ----------------------------------------------------------------------------
//
//   GTLRWalletobjects_Uri
//

@implementation GTLRWalletobjects_Uri
@dynamic descriptionProperty, identifier, kind, localizedDescription, uri;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end
