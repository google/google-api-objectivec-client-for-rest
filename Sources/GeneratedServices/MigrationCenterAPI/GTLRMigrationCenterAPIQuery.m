// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Migration Center API (migrationcenter/v1)
// Description:
//   A unified platform that helps you accelerate your end-to-end cloud journey
//   from your current on-premises or cloud environments to Google Cloud.
// Documentation:
//   https://cloud.google.com/migration-center

#import <GoogleAPIClientForREST/GTLRMigrationCenterAPIQuery.h>

// ----------------------------------------------------------------------------
// Constants

// view
NSString * const kGTLRMigrationCenterAPIViewAssetViewBasic     = @"ASSET_VIEW_BASIC";
NSString * const kGTLRMigrationCenterAPIViewAssetViewFull      = @"ASSET_VIEW_FULL";
NSString * const kGTLRMigrationCenterAPIViewAssetViewLabels    = @"ASSET_VIEW_LABELS";
NSString * const kGTLRMigrationCenterAPIViewAssetViewStandard  = @"ASSET_VIEW_STANDARD";
NSString * const kGTLRMigrationCenterAPIViewAssetViewUi        = @"ASSET_VIEW_UI";
NSString * const kGTLRMigrationCenterAPIViewAssetViewUnspecified = @"ASSET_VIEW_UNSPECIFIED";
NSString * const kGTLRMigrationCenterAPIViewErrorFrameViewBasic = @"ERROR_FRAME_VIEW_BASIC";
NSString * const kGTLRMigrationCenterAPIViewErrorFrameViewFull = @"ERROR_FRAME_VIEW_FULL";
NSString * const kGTLRMigrationCenterAPIViewErrorFrameViewUnspecified = @"ERROR_FRAME_VIEW_UNSPECIFIED";
NSString * const kGTLRMigrationCenterAPIViewImportJobViewBasic = @"IMPORT_JOB_VIEW_BASIC";
NSString * const kGTLRMigrationCenterAPIViewImportJobViewFull  = @"IMPORT_JOB_VIEW_FULL";
NSString * const kGTLRMigrationCenterAPIViewImportJobViewUnspecified = @"IMPORT_JOB_VIEW_UNSPECIFIED";
NSString * const kGTLRMigrationCenterAPIViewReportViewBasic    = @"REPORT_VIEW_BASIC";
NSString * const kGTLRMigrationCenterAPIViewReportViewFull     = @"REPORT_VIEW_FULL";
NSString * const kGTLRMigrationCenterAPIViewReportViewStandard = @"REPORT_VIEW_STANDARD";
NSString * const kGTLRMigrationCenterAPIViewReportViewUnspecified = @"REPORT_VIEW_UNSPECIFIED";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRMigrationCenterAPIQuery

@dynamic fields;

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsAggregateValues

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_AggregateAssetsValuesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assets:aggregateValues";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsAggregateValues *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_AggregateAssetsValuesResponse class];
  query.loggingName = @"migrationcenter.projects.locations.assets.aggregateValues";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsBatchDelete

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_BatchDeleteAssetsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assets:batchDelete";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsBatchDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Empty class];
  query.loggingName = @"migrationcenter.projects.locations.assets.batchDelete";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsBatchUpdate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_BatchUpdateAssetsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assets:batchUpdate";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsBatchUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_BatchUpdateAssetsResponse class];
  query.loggingName = @"migrationcenter.projects.locations.assets.batchUpdate";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Empty class];
  query.loggingName = @"migrationcenter.projects.locations.assets.delete";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Asset class];
  query.loggingName = @"migrationcenter.projects.locations.assets.get";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsList

@dynamic filter, orderBy, pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assets";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ListAssetsResponse class];
  query.loggingName = @"migrationcenter.projects.locations.assets.list";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_Asset *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Asset class];
  query.loggingName = @"migrationcenter.projects.locations.assets.patch";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsReportAssetFrames

@dynamic parent, source;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_Frames *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assets:reportAssetFrames";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsAssetsReportAssetFrames *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ReportAssetFramesResponse class];
  query.loggingName = @"migrationcenter.projects.locations.assets.reportAssetFrames";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsDiscoveryClientsCreate

@dynamic discoveryClientId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_DiscoveryClient *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/discoveryClients";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsDiscoveryClientsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.discoveryClients.create";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsDiscoveryClientsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsDiscoveryClientsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.discoveryClients.delete";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsDiscoveryClientsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsDiscoveryClientsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_DiscoveryClient class];
  query.loggingName = @"migrationcenter.projects.locations.discoveryClients.get";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsDiscoveryClientsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/discoveryClients";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsDiscoveryClientsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ListDiscoveryClientsResponse class];
  query.loggingName = @"migrationcenter.projects.locations.discoveryClients.list";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsDiscoveryClientsPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_DiscoveryClient *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsDiscoveryClientsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.discoveryClients.patch";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsDiscoveryClientsSendHeartbeat

@dynamic name;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_SendDiscoveryClientHeartbeatRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:sendHeartbeat";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsDiscoveryClientsSendHeartbeat *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.discoveryClients.sendHeartbeat";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Location class];
  query.loggingName = @"migrationcenter.projects.locations.get";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsGetSettings

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsGetSettings *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Settings class];
  query.loggingName = @"migrationcenter.projects.locations.getSettings";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsGroupsAddAssets

@dynamic group;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_AddAssetsToGroupRequest *)object
                          group:(NSString *)group {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"group" ];
  NSString *pathURITemplate = @"v1/{+group}:addAssets";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsGroupsAddAssets *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.group = group;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.groups.addAssets";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsGroupsCreate

@dynamic groupId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_Group *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/groups";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsGroupsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.groups.create";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsGroupsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsGroupsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.groups.delete";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsGroupsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsGroupsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Group class];
  query.loggingName = @"migrationcenter.projects.locations.groups.get";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsGroupsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/groups";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsGroupsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ListGroupsResponse class];
  query.loggingName = @"migrationcenter.projects.locations.groups.list";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsGroupsPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_Group *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsGroupsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.groups.patch";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsGroupsRemoveAssets

@dynamic group;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_RemoveAssetsFromGroupRequest *)object
                          group:(NSString *)group {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"group" ];
  NSString *pathURITemplate = @"v1/{+group}:removeAssets";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsGroupsRemoveAssets *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.group = group;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.groups.removeAssets";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsCreate

@dynamic importJobId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_ImportJob *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/importJobs";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.importJobs.create";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsDelete

@dynamic force, name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.importJobs.delete";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ImportJob class];
  query.loggingName = @"migrationcenter.projects.locations.importJobs.get";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsImportDataFilesCreate

@dynamic importDataFileId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_ImportDataFile *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/importDataFiles";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsImportDataFilesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.importJobs.importDataFiles.create";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsImportDataFilesDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsImportDataFilesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.importJobs.importDataFiles.delete";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsImportDataFilesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsImportDataFilesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ImportDataFile class];
  query.loggingName = @"migrationcenter.projects.locations.importJobs.importDataFiles.get";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsImportDataFilesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/importDataFiles";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsImportDataFilesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ListImportDataFilesResponse class];
  query.loggingName = @"migrationcenter.projects.locations.importJobs.importDataFiles.list";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsList

@dynamic filter, orderBy, pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/importJobs";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ListImportJobsResponse class];
  query.loggingName = @"migrationcenter.projects.locations.importJobs.list";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_ImportJob *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.importJobs.patch";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsRun

@dynamic name;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_RunImportJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:run";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsRun *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.importJobs.run";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsValidate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_ValidateImportJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:validate";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsImportJobsValidate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.importJobs.validate";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/locations";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ListLocationsResponse class];
  query.loggingName = @"migrationcenter.projects.locations.list";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Empty class];
  query.loggingName = @"migrationcenter.projects.locations.operations.cancel";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Empty class];
  query.loggingName = @"migrationcenter.projects.locations.operations.delete";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ListOperationsResponse class];
  query.loggingName = @"migrationcenter.projects.locations.operations.list";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsPreferenceSetsCreate

@dynamic parent, preferenceSetId, requestId;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_PreferenceSet *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/preferenceSets";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsPreferenceSetsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.preferenceSets.create";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsPreferenceSetsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsPreferenceSetsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.preferenceSets.delete";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsPreferenceSetsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsPreferenceSetsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_PreferenceSet class];
  query.loggingName = @"migrationcenter.projects.locations.preferenceSets.get";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsPreferenceSetsList

@dynamic orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/preferenceSets";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsPreferenceSetsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ListPreferenceSetsResponse class];
  query.loggingName = @"migrationcenter.projects.locations.preferenceSets.list";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsPreferenceSetsPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_PreferenceSet *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsPreferenceSetsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.preferenceSets.patch";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsRelationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsRelationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Relation class];
  query.loggingName = @"migrationcenter.projects.locations.relations.get";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsRelationsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/relations";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsRelationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ListRelationsResponse class];
  query.loggingName = @"migrationcenter.projects.locations.relations.list";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsCreate

@dynamic parent, reportConfigId, requestId;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_ReportConfig *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/reportConfigs";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.reportConfigs.create";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsDelete

@dynamic force, name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.reportConfigs.delete";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ReportConfig class];
  query.loggingName = @"migrationcenter.projects.locations.reportConfigs.get";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/reportConfigs";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ListReportConfigsResponse class];
  query.loggingName = @"migrationcenter.projects.locations.reportConfigs.list";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsReportsCreate

@dynamic parent, reportId, requestId;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_Report *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/reports";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsReportsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.reportConfigs.reports.create";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsReportsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsReportsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.reportConfigs.reports.delete";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsReportsGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsReportsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Report class];
  query.loggingName = @"migrationcenter.projects.locations.reportConfigs.reports.get";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsReportsList

@dynamic filter, orderBy, pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/reports";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsReportConfigsReportsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ListReportsResponse class];
  query.loggingName = @"migrationcenter.projects.locations.reportConfigs.reports.list";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsSourcesCreate

@dynamic parent, requestId, sourceId;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_Source *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/sources";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsSourcesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.sources.create";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsSourcesDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsSourcesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.sources.delete";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsSourcesErrorFramesGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsSourcesErrorFramesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ErrorFrame class];
  query.loggingName = @"migrationcenter.projects.locations.sources.errorFrames.get";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsSourcesErrorFramesList

@dynamic pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/errorFrames";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsSourcesErrorFramesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ListErrorFramesResponse class];
  query.loggingName = @"migrationcenter.projects.locations.sources.errorFrames.list";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsSourcesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsSourcesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Source class];
  query.loggingName = @"migrationcenter.projects.locations.sources.get";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsSourcesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/sources";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsSourcesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_ListSourcesResponse class];
  query.loggingName = @"migrationcenter.projects.locations.sources.list";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsSourcesPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_Source *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsSourcesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.sources.patch";
  return query;
}

@end

@implementation GTLRMigrationCenterAPIQuery_ProjectsLocationsUpdateSettings

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRMigrationCenterAPI_Settings *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRMigrationCenterAPIQuery_ProjectsLocationsUpdateSettings *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRMigrationCenterAPI_Operation class];
  query.loggingName = @"migrationcenter.projects.locations.updateSettings";
  return query;
}

@end
