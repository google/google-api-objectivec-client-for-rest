// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Migration Center API (migrationcenter/v1)
// Description:
//   A unified platform that helps you accelerate your end-to-end cloud journey
//   from your current on-premises or cloud environments to Google Cloud.
// Documentation:
//   https://cloud.google.com/migration-center

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRMigrationCenterAPI_Aggregation;
@class GTLRMigrationCenterAPI_AggregationCount;
@class GTLRMigrationCenterAPI_AggregationFrequency;
@class GTLRMigrationCenterAPI_AggregationHistogram;
@class GTLRMigrationCenterAPI_AggregationResult;
@class GTLRMigrationCenterAPI_AggregationResultCount;
@class GTLRMigrationCenterAPI_AggregationResultFrequency;
@class GTLRMigrationCenterAPI_AggregationResultFrequency_Values;
@class GTLRMigrationCenterAPI_AggregationResultHistogram;
@class GTLRMigrationCenterAPI_AggregationResultHistogramBucket;
@class GTLRMigrationCenterAPI_AggregationResultSum;
@class GTLRMigrationCenterAPI_AggregationSum;
@class GTLRMigrationCenterAPI_Asset;
@class GTLRMigrationCenterAPI_Asset_Attributes;
@class GTLRMigrationCenterAPI_Asset_Labels;
@class GTLRMigrationCenterAPI_AssetFrame;
@class GTLRMigrationCenterAPI_AssetFrame_Attributes;
@class GTLRMigrationCenterAPI_AssetFrame_Labels;
@class GTLRMigrationCenterAPI_AssetList;
@class GTLRMigrationCenterAPI_AssetPerformanceData;
@class GTLRMigrationCenterAPI_AwsEc2PlatformDetails;
@class GTLRMigrationCenterAPI_AzureVmPlatformDetails;
@class GTLRMigrationCenterAPI_BiosDetails;
@class GTLRMigrationCenterAPI_ComputeEngineMigrationTarget;
@class GTLRMigrationCenterAPI_ComputeEnginePreferences;
@class GTLRMigrationCenterAPI_ComputeEngineShapeDescriptor;
@class GTLRMigrationCenterAPI_ComputeStorageDescriptor;
@class GTLRMigrationCenterAPI_CpuUsageSample;
@class GTLRMigrationCenterAPI_DailyResourceUsageAggregation;
@class GTLRMigrationCenterAPI_DailyResourceUsageAggregationCPU;
@class GTLRMigrationCenterAPI_DailyResourceUsageAggregationDisk;
@class GTLRMigrationCenterAPI_DailyResourceUsageAggregationMemory;
@class GTLRMigrationCenterAPI_DailyResourceUsageAggregationNetwork;
@class GTLRMigrationCenterAPI_DailyResourceUsageAggregationStats;
@class GTLRMigrationCenterAPI_Date;
@class GTLRMigrationCenterAPI_DiscoveryClient;
@class GTLRMigrationCenterAPI_DiscoveryClient_Labels;
@class GTLRMigrationCenterAPI_DiskEntry;
@class GTLRMigrationCenterAPI_DiskEntryList;
@class GTLRMigrationCenterAPI_DiskPartition;
@class GTLRMigrationCenterAPI_DiskPartitionList;
@class GTLRMigrationCenterAPI_DiskUsageSample;
@class GTLRMigrationCenterAPI_ErrorFrame;
@class GTLRMigrationCenterAPI_ExecutionReport;
@class GTLRMigrationCenterAPI_FileValidationReport;
@class GTLRMigrationCenterAPI_FitDescriptor;
@class GTLRMigrationCenterAPI_FrameViolationEntry;
@class GTLRMigrationCenterAPI_FstabEntry;
@class GTLRMigrationCenterAPI_FstabEntryList;
@class GTLRMigrationCenterAPI_GenericInsight;
@class GTLRMigrationCenterAPI_GenericPlatformDetails;
@class GTLRMigrationCenterAPI_Group;
@class GTLRMigrationCenterAPI_Group_Labels;
@class GTLRMigrationCenterAPI_GuestConfigDetails;
@class GTLRMigrationCenterAPI_GuestInstalledApplication;
@class GTLRMigrationCenterAPI_GuestInstalledApplicationList;
@class GTLRMigrationCenterAPI_GuestOsDetails;
@class GTLRMigrationCenterAPI_GuestRuntimeDetails;
@class GTLRMigrationCenterAPI_HostsEntry;
@class GTLRMigrationCenterAPI_HostsEntryList;
@class GTLRMigrationCenterAPI_ImportDataFile;
@class GTLRMigrationCenterAPI_ImportError;
@class GTLRMigrationCenterAPI_ImportJob;
@class GTLRMigrationCenterAPI_ImportJob_Labels;
@class GTLRMigrationCenterAPI_ImportRowError;
@class GTLRMigrationCenterAPI_ImportRowErrorCsvErrorDetails;
@class GTLRMigrationCenterAPI_ImportRowErrorXlsxErrorDetails;
@class GTLRMigrationCenterAPI_Insight;
@class GTLRMigrationCenterAPI_InsightList;
@class GTLRMigrationCenterAPI_Location;
@class GTLRMigrationCenterAPI_Location_Labels;
@class GTLRMigrationCenterAPI_Location_Metadata;
@class GTLRMigrationCenterAPI_MachineArchitectureDetails;
@class GTLRMigrationCenterAPI_MachineDetails;
@class GTLRMigrationCenterAPI_MachineDiskDetails;
@class GTLRMigrationCenterAPI_MachineNetworkDetails;
@class GTLRMigrationCenterAPI_MachinePreferences;
@class GTLRMigrationCenterAPI_MachineSeries;
@class GTLRMigrationCenterAPI_MemoryUsageSample;
@class GTLRMigrationCenterAPI_MigrationInsight;
@class GTLRMigrationCenterAPI_Money;
@class GTLRMigrationCenterAPI_NetworkAdapterDetails;
@class GTLRMigrationCenterAPI_NetworkAdapterList;
@class GTLRMigrationCenterAPI_NetworkAddress;
@class GTLRMigrationCenterAPI_NetworkAddressList;
@class GTLRMigrationCenterAPI_NetworkConnection;
@class GTLRMigrationCenterAPI_NetworkConnectionList;
@class GTLRMigrationCenterAPI_NetworkUsageSample;
@class GTLRMigrationCenterAPI_NfsExport;
@class GTLRMigrationCenterAPI_NfsExportList;
@class GTLRMigrationCenterAPI_OpenFileDetails;
@class GTLRMigrationCenterAPI_OpenFileList;
@class GTLRMigrationCenterAPI_Operation;
@class GTLRMigrationCenterAPI_Operation_Metadata;
@class GTLRMigrationCenterAPI_Operation_Response;
@class GTLRMigrationCenterAPI_PerformanceSample;
@class GTLRMigrationCenterAPI_PhysicalPlatformDetails;
@class GTLRMigrationCenterAPI_PlatformDetails;
@class GTLRMigrationCenterAPI_PreferenceSet;
@class GTLRMigrationCenterAPI_RegionPreferences;
@class GTLRMigrationCenterAPI_Report;
@class GTLRMigrationCenterAPI_ReportConfig;
@class GTLRMigrationCenterAPI_ReportConfigGroupPreferenceSetAssignment;
@class GTLRMigrationCenterAPI_ReportSummary;
@class GTLRMigrationCenterAPI_ReportSummaryAssetAggregateStats;
@class GTLRMigrationCenterAPI_ReportSummaryChartData;
@class GTLRMigrationCenterAPI_ReportSummaryChartDataDataPoint;
@class GTLRMigrationCenterAPI_ReportSummaryComputeEngineFinding;
@class GTLRMigrationCenterAPI_ReportSummaryGroupFinding;
@class GTLRMigrationCenterAPI_ReportSummaryGroupPreferenceSetFinding;
@class GTLRMigrationCenterAPI_ReportSummaryHistogramChartData;
@class GTLRMigrationCenterAPI_ReportSummaryHistogramChartDataBucket;
@class GTLRMigrationCenterAPI_ReportSummaryMachineSeriesAllocation;
@class GTLRMigrationCenterAPI_ReportSummarySoleTenantFinding;
@class GTLRMigrationCenterAPI_ReportSummarySoleTenantNodeAllocation;
@class GTLRMigrationCenterAPI_ReportSummaryUtilizationChartData;
@class GTLRMigrationCenterAPI_ReportSummaryVmwareEngineFinding;
@class GTLRMigrationCenterAPI_ReportSummaryVmwareNode;
@class GTLRMigrationCenterAPI_ReportSummaryVmwareNodeAllocation;
@class GTLRMigrationCenterAPI_RunningProcess;
@class GTLRMigrationCenterAPI_RunningProcess_Attributes;
@class GTLRMigrationCenterAPI_RunningProcessList;
@class GTLRMigrationCenterAPI_RunningService;
@class GTLRMigrationCenterAPI_RunningServiceList;
@class GTLRMigrationCenterAPI_RuntimeNetworkInfo;
@class GTLRMigrationCenterAPI_SoleTenancyPreferences;
@class GTLRMigrationCenterAPI_SoleTenantNodeType;
@class GTLRMigrationCenterAPI_Source;
@class GTLRMigrationCenterAPI_Status;
@class GTLRMigrationCenterAPI_Status_Details_Item;
@class GTLRMigrationCenterAPI_UpdateAssetRequest;
@class GTLRMigrationCenterAPI_UploadFileInfo;
@class GTLRMigrationCenterAPI_UploadFileInfo_Headers;
@class GTLRMigrationCenterAPI_ValidationReport;
@class GTLRMigrationCenterAPI_VirtualMachinePreferences;
@class GTLRMigrationCenterAPI_VmwareDiskConfig;
@class GTLRMigrationCenterAPI_VmwareEnginePreferences;
@class GTLRMigrationCenterAPI_VmwarePlatformDetails;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_AssetFrame.collectionType

/**
 *  Third-party owned sources.
 *
 *  Value: "SOURCE_TYPE_CUSTOM"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_AssetFrame_CollectionType_SourceTypeCustom;
/**
 *  Discovery clients
 *
 *  Value: "SOURCE_TYPE_DISCOVERY_CLIENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_AssetFrame_CollectionType_SourceTypeDiscoveryClient;
/**
 *  Guest-level info
 *
 *  Value: "SOURCE_TYPE_GUEST_OS_SCAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_AssetFrame_CollectionType_SourceTypeGuestOsScan;
/**
 *  Inventory-level scan
 *
 *  Value: "SOURCE_TYPE_INVENTORY_SCAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_AssetFrame_CollectionType_SourceTypeInventoryScan;
/**
 *  Unspecified
 *
 *  Value: "SOURCE_TYPE_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_AssetFrame_CollectionType_SourceTypeUnknown;
/**
 *  Manually uploaded file (e.g. CSV)
 *
 *  Value: "SOURCE_TYPE_UPLOAD"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_AssetFrame_CollectionType_SourceTypeUpload;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_ComputeEnginePreferences.licenseType

/**
 *  Bring-your-own-license (BYOL) plan. User provides the OS license.
 *
 *  Value: "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ComputeEnginePreferences_LicenseType_LicenseTypeBringYourOwnLicense;
/**
 *  Default Google Cloud licensing plan. Licensing is charged per usage. This a
 *  good value to start with.
 *
 *  Value: "LICENSE_TYPE_DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ComputeEnginePreferences_LicenseType_LicenseTypeDefault;
/**
 *  Unspecified (default value).
 *
 *  Value: "LICENSE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ComputeEnginePreferences_LicenseType_LicenseTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_ComputeEnginePreferences.persistentDiskType

/**
 *  Balanced Persistent Disk.
 *
 *  Value: "PERSISTENT_DISK_TYPE_BALANCED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ComputeEnginePreferences_PersistentDiskType_PersistentDiskTypeBalanced;
/**
 *  SSD Persistent Disk.
 *
 *  Value: "PERSISTENT_DISK_TYPE_SSD"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ComputeEnginePreferences_PersistentDiskType_PersistentDiskTypeSsd;
/**
 *  Standard HDD Persistent Disk.
 *
 *  Value: "PERSISTENT_DISK_TYPE_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ComputeEnginePreferences_PersistentDiskType_PersistentDiskTypeStandard;
/**
 *  Unspecified (default value). Selecting this value allows the system to use
 *  any disk type according to reported usage. This a good value to start with.
 *
 *  Value: "PERSISTENT_DISK_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ComputeEnginePreferences_PersistentDiskType_PersistentDiskTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_ComputeStorageDescriptor.type

/**
 *  Balanced Persistent Disk.
 *
 *  Value: "PERSISTENT_DISK_TYPE_BALANCED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ComputeStorageDescriptor_Type_PersistentDiskTypeBalanced;
/**
 *  SSD Persistent Disk.
 *
 *  Value: "PERSISTENT_DISK_TYPE_SSD"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ComputeStorageDescriptor_Type_PersistentDiskTypeSsd;
/**
 *  Standard HDD Persistent Disk.
 *
 *  Value: "PERSISTENT_DISK_TYPE_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ComputeStorageDescriptor_Type_PersistentDiskTypeStandard;
/**
 *  Unspecified (default value). Selecting this value allows the system to use
 *  any disk type according to reported usage. This a good value to start with.
 *
 *  Value: "PERSISTENT_DISK_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ComputeStorageDescriptor_Type_PersistentDiskTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_DiscoveryClient.state

/**
 *  Client is active.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_DiscoveryClient_State_Active;
/**
 *  Client is in a degraded state. See the `errors` field for details.
 *
 *  Value: "DEGRADED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_DiscoveryClient_State_Degraded;
/**
 *  Client has expired. See the expire_time field for the expire time.
 *
 *  Value: "EXPIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_DiscoveryClient_State_Expired;
/**
 *  Client is offline.
 *
 *  Value: "OFFLINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_DiscoveryClient_State_Offline;
/**
 *  Client state is unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_DiscoveryClient_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_DiskEntry.interfaceType

/**
 *  FC interface type.
 *
 *  Value: "FC"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_Fc;
/**
 *  IDE interface type.
 *
 *  Value: "IDE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_Ide;
/**
 *  Interface type unknown or unspecified.
 *
 *  Value: "INTERFACE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_InterfaceTypeUnspecified;
/**
 *  iSCSI interface type.
 *
 *  Value: "ISCSI"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_Iscsi;
/**
 *  NVME interface type.
 *
 *  Value: "NVME"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_Nvme;
/**
 *  SAS interface type.
 *
 *  Value: "SAS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_Sas;
/**
 *  SATA interface type.
 *
 *  Value: "SATA"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_Sata;
/**
 *  SCSI interface type.
 *
 *  Value: "SCSI"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_Scsi;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_FitDescriptor.fitLevel

/**
 *  Fit.
 *
 *  Value: "FIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_FitDescriptor_FitLevel_Fit;
/**
 *  Not enough information.
 *
 *  Value: "FIT_LEVEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_FitDescriptor_FitLevel_FitLevelUnspecified;
/**
 *  No Fit.
 *
 *  Value: "NO_FIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_FitDescriptor_FitLevel_NoFit;
/**
 *  Fit with effort.
 *
 *  Value: "REQUIRES_EFFORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_FitDescriptor_FitLevel_RequiresEffort;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_GuestConfigDetails.selinuxMode

/**
 *  SELinux is disabled.
 *
 *  Value: "SE_LINUX_MODE_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_GuestConfigDetails_SelinuxMode_SeLinuxModeDisabled;
/**
 *  SELinux enforcing mode.
 *
 *  Value: "SE_LINUX_MODE_ENFORCING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_GuestConfigDetails_SelinuxMode_SeLinuxModeEnforcing;
/**
 *  SELinux permissive mode.
 *
 *  Value: "SE_LINUX_MODE_PERMISSIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_GuestConfigDetails_SelinuxMode_SeLinuxModePermissive;
/**
 *  SELinux mode unknown or unspecified.
 *
 *  Value: "SE_LINUX_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_GuestConfigDetails_SelinuxMode_SeLinuxModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_GuestOsDetails.family

/**
 *  Various Linux flavors.
 *
 *  Value: "OS_FAMILY_LINUX"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_GuestOsDetails_Family_OsFamilyLinux;
/**
 *  Non-Linux Unix flavors.
 *
 *  Value: "OS_FAMILY_UNIX"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_GuestOsDetails_Family_OsFamilyUnix;
/** Value: "OS_FAMILY_UNKNOWN" */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_GuestOsDetails_Family_OsFamilyUnknown;
/**
 *  Microsoft Windows Server and Desktop.
 *
 *  Value: "OS_FAMILY_WINDOWS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_GuestOsDetails_Family_OsFamilyWindows;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_ImportDataFile.format

/**
 *  CSV format exported from AWS using the AWS collection script.
 *
 *  Value: "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportDataFile_Format_ImportJobFormatExportedAwsCsv;
/**
 *  CSV format exported from Azure using the Azure collection script.
 *
 *  Value: "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportDataFile_Format_ImportJobFormatExportedAzureCsv;
/**
 *  RVTools format (CSV).
 *
 *  Value: "IMPORT_JOB_FORMAT_RVTOOLS_CSV"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportDataFile_Format_ImportJobFormatRvtoolsCsv;
/**
 *  RVTools format (XLSX).
 *
 *  Value: "IMPORT_JOB_FORMAT_RVTOOLS_XLSX"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportDataFile_Format_ImportJobFormatRvtoolsXlsx;
/**
 *  CSV format created manually and following the StratoZone format. For more
 *  information, see Manually create and upload data tables.
 *
 *  Value: "IMPORT_JOB_FORMAT_STRATOZONE_CSV"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportDataFile_Format_ImportJobFormatStratozoneCsv;
/**
 *  Default value.
 *
 *  Value: "IMPORT_JOB_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportDataFile_Format_ImportJobFormatUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_ImportDataFile.state

/**
 *  The data file completed initialization.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportDataFile_State_Active;
/**
 *  The data file is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportDataFile_State_Creating;
/**
 *  Default value.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportDataFile_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_ImportError.severity

/** Value: "ERROR" */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportError_Severity_Error;
/** Value: "INFO" */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportError_Severity_Info;
/** Value: "SEVERITY_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportError_Severity_SeverityUnspecified;
/** Value: "WARNING" */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportError_Severity_Warning;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_ImportJob.state

/**
 *  The import job processing has completed.
 *
 *  Value: "IMPORT_JOB_STATE_COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStateCompleted;
/**
 *  The import job failed to be processed.
 *
 *  Value: "IMPORT_JOB_STATE_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStateFailed;
/**
 *  The import job contains blocking errors.
 *
 *  Value: "IMPORT_JOB_STATE_FAILED_VALIDATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStateFailedValidation;
/**
 *  The import job is pending.
 *
 *  Value: "IMPORT_JOB_STATE_PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStatePending;
/**
 *  The validation of the job completed with no blocking errors.
 *
 *  Value: "IMPORT_JOB_STATE_READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStateReady;
/**
 *  The processing of the import job is ongoing.
 *
 *  Value: "IMPORT_JOB_STATE_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStateRunning;
/**
 *  Default value.
 *
 *  Value: "IMPORT_JOB_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStateUnspecified;
/**
 *  The import job is being validated.
 *
 *  Value: "IMPORT_JOB_STATE_VALIDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStateValidating;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_MachineArchitectureDetails.firmwareType

/**
 *  BIOS firmware.
 *
 *  Value: "BIOS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_MachineArchitectureDetails_FirmwareType_Bios;
/**
 *  EFI firmware.
 *
 *  Value: "EFI"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_MachineArchitectureDetails_FirmwareType_Efi;
/**
 *  Unspecified or unknown.
 *
 *  Value: "FIRMWARE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_MachineArchitectureDetails_FirmwareType_FirmwareTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_MachineArchitectureDetails.hyperthreading

/**
 *  Unspecified or unknown.
 *
 *  Value: "CPU_HYPER_THREADING_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_MachineArchitectureDetails_Hyperthreading_CpuHyperThreadingUnspecified;
/**
 *  Hyper-threading is disabled.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_MachineArchitectureDetails_Hyperthreading_Disabled;
/**
 *  Hyper-threading is enabled.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_MachineArchitectureDetails_Hyperthreading_Enabled;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_MachineDetails.powerState

/**
 *  The machine is active.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_MachineDetails_PowerState_Active;
/**
 *  The machine is deleted from the hosting platform.
 *
 *  Value: "DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_MachineDetails_PowerState_Deleted;
/**
 *  The machine is being deleted from the hosting platform.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_MachineDetails_PowerState_Deleting;
/**
 *  The machine is preparing to enter the ACTIVE state. An instance may enter
 *  the PENDING state when it launches for the first time, or when it is started
 *  after being in the SUSPENDED state.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_MachineDetails_PowerState_Pending;
/**
 *  Power state is unknown.
 *
 *  Value: "POWER_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_MachineDetails_PowerState_PowerStateUnspecified;
/**
 *  The machine is off.
 *
 *  Value: "SUSPENDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_MachineDetails_PowerState_Suspended;
/**
 *  The machine is being turned off.
 *
 *  Value: "SUSPENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_MachineDetails_PowerState_Suspending;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_NetworkAddress.assignment

/**
 *  Dynamically assigned IP (DHCP).
 *
 *  Value: "ADDRESS_ASSIGNMENT_DHCP"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_NetworkAddress_Assignment_AddressAssignmentDhcp;
/**
 *  Staticly assigned IP.
 *
 *  Value: "ADDRESS_ASSIGNMENT_STATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_NetworkAddress_Assignment_AddressAssignmentStatic;
/**
 *  Unknown (default value).
 *
 *  Value: "ADDRESS_ASSIGNMENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_NetworkAddress_Assignment_AddressAssignmentUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_NetworkConnection.state

/**
 *  The connection is closed.
 *
 *  Value: "CLOSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_NetworkConnection_State_Closed;
/**
 *  The connection is being closed.
 *
 *  Value: "CLOSING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_NetworkConnection_State_Closing;
/**
 *  Listening for incoming connections.
 *
 *  Value: "LISTEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_NetworkConnection_State_Listen;
/**
 *  The connection is open.
 *
 *  Value: "OPEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_NetworkConnection_State_Open;
/**
 *  The connection is being opened.
 *
 *  Value: "OPENING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_NetworkConnection_State_Opening;
/**
 *  Connection state is unknown or unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_NetworkConnection_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_Report.state

/**
 *  Failed to create Report.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Report_State_Failed;
/**
 *  Creating Report.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Report_State_Pending;
/**
 *  Default Report creation state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Report_State_StateUnspecified;
/**
 *  Successfully created Report.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Report_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_Report.type

/**
 *  Total cost of ownership Report type.
 *
 *  Value: "TOTAL_COST_OF_OWNERSHIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Report_Type_TotalCostOfOwnership;
/**
 *  Default Report type.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Report_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_ReportSummaryComputeEngineFinding.allocatedDiskTypes

/**
 *  Balanced Persistent Disk.
 *
 *  Value: "PERSISTENT_DISK_TYPE_BALANCED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ReportSummaryComputeEngineFinding_AllocatedDiskTypes_PersistentDiskTypeBalanced;
/**
 *  SSD Persistent Disk.
 *
 *  Value: "PERSISTENT_DISK_TYPE_SSD"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ReportSummaryComputeEngineFinding_AllocatedDiskTypes_PersistentDiskTypeSsd;
/**
 *  Standard HDD Persistent Disk.
 *
 *  Value: "PERSISTENT_DISK_TYPE_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ReportSummaryComputeEngineFinding_AllocatedDiskTypes_PersistentDiskTypeStandard;
/**
 *  Unspecified (default value). Selecting this value allows the system to use
 *  any disk type according to reported usage. This a good value to start with.
 *
 *  Value: "PERSISTENT_DISK_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_ReportSummaryComputeEngineFinding_AllocatedDiskTypes_PersistentDiskTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_RunningService.startMode

/**
 *  The service is started by the operating system, at system start-up
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_RunningService_StartMode_Auto;
/**
 *  The service is a device driver started by the system loader.
 *
 *  Value: "BOOT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_RunningService_StartMode_Boot;
/**
 *  The service is disabled.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_RunningService_StartMode_Disabled;
/**
 *  The service is started only manually, by a user.
 *
 *  Value: "MANUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_RunningService_StartMode_Manual;
/**
 *  Start mode unspecified.
 *
 *  Value: "START_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_RunningService_StartMode_StartModeUnspecified;
/**
 *  The service is a device driver started by the IOInitSystem function.
 *
 *  Value: "SYSTEM"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_RunningService_StartMode_System;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_RunningService.state

/**
 *  Service is active.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_RunningService_State_Active;
/**
 *  Service is paused.
 *
 *  Value: "PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_RunningService_State_Paused;
/**
 *  Service state unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_RunningService_State_StateUnspecified;
/**
 *  Service is stopped.
 *
 *  Value: "STOPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_RunningService_State_Stopped;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_SoleTenancyPreferences.commitmentPlan

/**
 *  1 year commitment.
 *
 *  Value: "COMMITMENT_1_YEAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_SoleTenancyPreferences_CommitmentPlan_Commitment1Year;
/**
 *  3 years commitment.
 *
 *  Value: "COMMITMENT_3_YEAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_SoleTenancyPreferences_CommitmentPlan_Commitment3Year;
/**
 *  Unspecified commitment plan.
 *
 *  Value: "COMMITMENT_PLAN_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_SoleTenancyPreferences_CommitmentPlan_CommitmentPlanUnspecified;
/**
 *  No commitment plan (on-demand usage).
 *
 *  Value: "ON_DEMAND"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_SoleTenancyPreferences_CommitmentPlan_OnDemand;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_SoleTenancyPreferences.hostMaintenancePolicy

/**
 *  Default host maintenance policy.
 *
 *  Value: "HOST_MAINTENANCE_POLICY_DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_SoleTenancyPreferences_HostMaintenancePolicy_HostMaintenancePolicyDefault;
/**
 *  Migrate within node group host maintenance policy.
 *
 *  Value: "HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_SoleTenancyPreferences_HostMaintenancePolicy_HostMaintenancePolicyMigrateWithinNodeGroup;
/**
 *  Restart in place host maintenance policy.
 *
 *  Value: "HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_SoleTenancyPreferences_HostMaintenancePolicy_HostMaintenancePolicyRestartInPlace;
/**
 *  Unspecified host maintenance policy.
 *
 *  Value: "HOST_MAINTENANCE_POLICY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_SoleTenancyPreferences_HostMaintenancePolicy_HostMaintenancePolicyUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_Source.state

/**
 *  The source is active and ready to be used.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Source_State_Active;
/**
 *  In the process of being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Source_State_Deleting;
/**
 *  Source is in an invalid state. Asset frames reported to it will be ignored.
 *
 *  Value: "INVALID"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Source_State_Invalid;
/**
 *  Unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Source_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_Source.type

/**
 *  Third-party owned sources.
 *
 *  Value: "SOURCE_TYPE_CUSTOM"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Source_Type_SourceTypeCustom;
/**
 *  Discovery clients
 *
 *  Value: "SOURCE_TYPE_DISCOVERY_CLIENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Source_Type_SourceTypeDiscoveryClient;
/**
 *  Guest-level info
 *
 *  Value: "SOURCE_TYPE_GUEST_OS_SCAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Source_Type_SourceTypeGuestOsScan;
/**
 *  Inventory-level scan
 *
 *  Value: "SOURCE_TYPE_INVENTORY_SCAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Source_Type_SourceTypeInventoryScan;
/**
 *  Unspecified
 *
 *  Value: "SOURCE_TYPE_UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Source_Type_SourceTypeUnknown;
/**
 *  Manually uploaded file (e.g. CSV)
 *
 *  Value: "SOURCE_TYPE_UPLOAD"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_Source_Type_SourceTypeUpload;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_VirtualMachinePreferences.commitmentPlan

/**
 *  No commitment plan.
 *
 *  Value: "COMMITMENT_PLAN_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VirtualMachinePreferences_CommitmentPlan_CommitmentPlanNone;
/**
 *  1 year commitment.
 *
 *  Value: "COMMITMENT_PLAN_ONE_YEAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VirtualMachinePreferences_CommitmentPlan_CommitmentPlanOneYear;
/**
 *  3 years commitment.
 *
 *  Value: "COMMITMENT_PLAN_THREE_YEARS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VirtualMachinePreferences_CommitmentPlan_CommitmentPlanThreeYears;
/**
 *  Unspecified commitment plan.
 *
 *  Value: "COMMITMENT_PLAN_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VirtualMachinePreferences_CommitmentPlan_CommitmentPlanUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_VirtualMachinePreferences.sizingOptimizationStrategy

/**
 *  Virtual machine sizing will match the reported usage, with little slack.
 *  Using this option can help reduce costs.
 *
 *  Value: "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VirtualMachinePreferences_SizingOptimizationStrategy_SizingOptimizationStrategyAggressive;
/**
 *  Virtual machine sizing will match the reported usage and shape, with some
 *  slack. This a good value to start with.
 *
 *  Value: "SIZING_OPTIMIZATION_STRATEGY_MODERATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VirtualMachinePreferences_SizingOptimizationStrategy_SizingOptimizationStrategyModerate;
/**
 *  No optimization applied. Virtual machine sizing matches as closely as
 *  possible the machine shape on the source site, not considering any actual
 *  performance data.
 *
 *  Value: "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VirtualMachinePreferences_SizingOptimizationStrategy_SizingOptimizationStrategySameAsSource;
/**
 *  Unspecified (default value).
 *
 *  Value: "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VirtualMachinePreferences_SizingOptimizationStrategy_SizingOptimizationStrategyUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_VirtualMachinePreferences.targetProduct

/**
 *  Prefer to migrate to Google Cloud Compute Engine.
 *
 *  Value: "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VirtualMachinePreferences_TargetProduct_ComputeMigrationTargetProductComputeEngine;
/**
 *  Prefer to migrate to Google Cloud Sole Tenant Nodes.
 *
 *  Value: "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VirtualMachinePreferences_TargetProduct_ComputeMigrationTargetProductSoleTenancy;
/**
 *  Unspecified (default value).
 *
 *  Value: "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VirtualMachinePreferences_TargetProduct_ComputeMigrationTargetProductUnspecified;
/**
 *  Prefer to migrate to Google Cloud VMware Engine.
 *
 *  Value: "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VirtualMachinePreferences_TargetProduct_ComputeMigrationTargetProductVmwareEngine;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_VmwareDiskConfig.backingType

/**
 *  Flat v1.
 *
 *  Value: "BACKING_TYPE_FLAT_V1"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeFlatV1;
/**
 *  Flat v2.
 *
 *  Value: "BACKING_TYPE_FLAT_V2"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeFlatV2;
/**
 *  Persistent memory, also known as Non-Volatile Memory (NVM).
 *
 *  Value: "BACKING_TYPE_PMEM"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypePmem;
/**
 *  Raw Disk Memory v1.
 *
 *  Value: "BACKING_TYPE_RDM_V1"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeRdmV1;
/**
 *  Raw Disk Memory v2.
 *
 *  Value: "BACKING_TYPE_RDM_V2"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeRdmV2;
/**
 *  SEsparse is a snapshot format introduced in vSphere 5.5 for large disks.
 *
 *  Value: "BACKING_TYPE_SESPARSE"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeSesparse;
/**
 *  SEsparse v1.
 *
 *  Value: "BACKING_TYPE_SESPARSE_V1"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeSesparseV1;
/**
 *  SEsparse v1.
 *
 *  Value: "BACKING_TYPE_SESPARSE_V2"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeSesparseV2;
/**
 *  Default value.
 *
 *  Value: "BACKING_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_VmwareDiskConfig.rdmCompatibility

/**
 *  Physical compatibility mode.
 *
 *  Value: "PHYSICAL_COMPATIBILITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_RdmCompatibility_PhysicalCompatibility;
/**
 *  Compatibility mode unspecified or unknown.
 *
 *  Value: "RDM_COMPATIBILITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_RdmCompatibility_RdmCompatibilityUnspecified;
/**
 *  Virtual compatibility mode.
 *
 *  Value: "VIRTUAL_COMPATIBILITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_RdmCompatibility_VirtualCompatibility;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_VmwareDiskConfig.vmdkMode

/**
 *  Dependent disk mode.
 *
 *  Value: "DEPENDENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_VmdkMode_Dependent;
/**
 *  Independent - Nonpersistent disk mode.
 *
 *  Value: "INDEPENDENT_NONPERSISTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_VmdkMode_IndependentNonpersistent;
/**
 *  Independent - Persistent disk mode.
 *
 *  Value: "INDEPENDENT_PERSISTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_VmdkMode_IndependentPersistent;
/**
 *  VMDK disk mode unspecified or unknown.
 *
 *  Value: "VMDK_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareDiskConfig_VmdkMode_VmdkModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRMigrationCenterAPI_VmwareEnginePreferences.commitmentPlan

/**
 *  1 year commitment (monthly payments).
 *
 *  Value: "COMMITMENT_1_YEAR_MONTHLY_PAYMENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareEnginePreferences_CommitmentPlan_Commitment1YearMonthlyPayments;
/**
 *  1 year commitment (upfront payment).
 *
 *  Value: "COMMITMENT_1_YEAR_UPFRONT_PAYMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareEnginePreferences_CommitmentPlan_Commitment1YearUpfrontPayment;
/**
 *  3 year commitment (monthly payments).
 *
 *  Value: "COMMITMENT_3_YEAR_MONTHLY_PAYMENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareEnginePreferences_CommitmentPlan_Commitment3YearMonthlyPayments;
/**
 *  3 years commitment (upfront payment).
 *
 *  Value: "COMMITMENT_3_YEAR_UPFRONT_PAYMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareEnginePreferences_CommitmentPlan_Commitment3YearUpfrontPayment;
/**
 *  Unspecified commitment plan.
 *
 *  Value: "COMMITMENT_PLAN_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareEnginePreferences_CommitmentPlan_CommitmentPlanUnspecified;
/**
 *  No commitment plan (on-demand usage).
 *
 *  Value: "ON_DEMAND"
 */
FOUNDATION_EXTERN NSString * const kGTLRMigrationCenterAPI_VmwareEnginePreferences_CommitmentPlan_OnDemand;

/**
 *  A request to add assets to a group.
 */
@interface GTLRMigrationCenterAPI_AddAssetsToGroupRequest : GTLRObject

/**
 *  Optional. When this value is set to `false` and one of the given assets is
 *  already an existing member of the group, the operation fails with an
 *  `Already Exists` error. When set to `true` this situation is silently
 *  ignored by the server. Default value is `false`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowExisting;

/**
 *  Required. List of assets to be added. The maximum number of assets that can
 *  be added in a single request is 1000.
 */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AssetList *assets;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

@end


/**
 *  A request to aggregate one or more values.
 */
@interface GTLRMigrationCenterAPI_AggregateAssetsValuesRequest : GTLRObject

/** Array of aggregations to perform. Up to 25 aggregations can be defined. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_Aggregation *> *aggregations;

/**
 *  Optional. The aggregation will be performed on assets that match the
 *  provided filter.
 */
@property(nonatomic, copy, nullable) NSString *filter;

@end


/**
 *  A response to a request to aggregated assets values.
 */
@interface GTLRMigrationCenterAPI_AggregateAssetsValuesResponse : GTLRObject

/** The aggregation results. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_AggregationResult *> *results;

@end


/**
 *  Message describing an aggregation. The message includes the aggregation
 *  type, parameters, and the field on which to perform the aggregation.
 */
@interface GTLRMigrationCenterAPI_Aggregation : GTLRObject

/** Count the number of matching objects. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AggregationCount *count;

/** The name of the field on which to aggregate. */
@property(nonatomic, copy, nullable) NSString *field;

/** Creates a frequency distribution of all field values. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AggregationFrequency *frequency;

/** Creates a bucketed histogram of field values. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AggregationHistogram *histogram;

/** Sum over a numeric field. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AggregationSum *sum;

@end


/**
 *  Object count.
 */
@interface GTLRMigrationCenterAPI_AggregationCount : GTLRObject
@end


/**
 *  Frequency distribution of all field values.
 */
@interface GTLRMigrationCenterAPI_AggregationFrequency : GTLRObject
@end


/**
 *  Histogram of bucketed assets counts by field value.
 */
@interface GTLRMigrationCenterAPI_AggregationHistogram : GTLRObject

/**
 *  Lower bounds of buckets. The response will contain `n+1` buckets for `n`
 *  bounds. The first bucket will count all assets for which the field value is
 *  smaller than the first bound. Subsequent buckets will count assets for which
 *  the field value is greater or equal to a lower bound and smaller than the
 *  next one. The last bucket will count assets for which the field value is
 *  greater or equal to the final lower bound. You can define up to 20 lower
 *  bounds.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *lowerBounds;

@end


/**
 *  Message describing a result of an aggregation.
 */
@interface GTLRMigrationCenterAPI_AggregationResult : GTLRObject

@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AggregationResultCount *count;
@property(nonatomic, copy, nullable) NSString *field;
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AggregationResultFrequency *frequency;
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AggregationResultHistogram *histogram;
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AggregationResultSum *sum;

@end


/**
 *  The result of a count aggregation.
 */
@interface GTLRMigrationCenterAPI_AggregationResultCount : GTLRObject

/**
 *  value
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  The result of a frequency distribution aggregation.
 */
@interface GTLRMigrationCenterAPI_AggregationResultFrequency : GTLRObject

@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AggregationResultFrequency_Values *values;

@end


/**
 *  GTLRMigrationCenterAPI_AggregationResultFrequency_Values
 *
 *  @note This class is documented as having more properties of NSNumber (Uses
 *        NSNumber of longLongValue.). Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRMigrationCenterAPI_AggregationResultFrequency_Values : GTLRObject
@end


/**
 *  The result of a bucketed histogram aggregation.
 */
@interface GTLRMigrationCenterAPI_AggregationResultHistogram : GTLRObject

/**
 *  Buckets in the histogram. There will be `n+1` buckets matching `n` lower
 *  bounds in the request. The first bucket will be from -infinity to the first
 *  bound. Subsequent buckets will be between one bound and the next. The final
 *  bucket will be from the final bound to infinity.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_AggregationResultHistogramBucket *> *buckets;

@end


/**
 *  A histogram bucket with a lower and upper bound, and a count of items with a
 *  field value between those bounds. The lower bound is inclusive and the upper
 *  bound is exclusive. Lower bound may be -infinity and upper bound may be
 *  infinity.
 */
@interface GTLRMigrationCenterAPI_AggregationResultHistogramBucket : GTLRObject

/**
 *  Count of items in the bucket.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/**
 *  Lower bound - inclusive.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *lowerBound;

/**
 *  Upper bound - exclusive.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *upperBound;

@end


/**
 *  The result of a sum aggregation.
 */
@interface GTLRMigrationCenterAPI_AggregationResultSum : GTLRObject

/**
 *  value
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  Sum of field values.
 */
@interface GTLRMigrationCenterAPI_AggregationSum : GTLRObject
@end


/**
 *  An asset represents a resource in your environment. Asset types include
 *  virtual machines and databases.
 */
@interface GTLRMigrationCenterAPI_Asset : GTLRObject

/** Output only. The list of groups that the asset is assigned to. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *assignedGroups;

/** Generic asset attributes. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Asset_Attributes *attributes;

/** Output only. The timestamp when the asset was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. The list of insights associated with the asset. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_InsightList *insightList;

/** Labels as key value pairs. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Asset_Labels *labels;

/**
 *  Output only. Asset information specific for virtual and physical machines.
 */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_MachineDetails *machineDetails;

/** Output only. The full name of the asset. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. Performance data for the asset. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AssetPerformanceData *performanceData;

/** Output only. The list of sources contributing to the asset. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sources;

/** Output only. The timestamp when the asset was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Generic asset attributes.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRMigrationCenterAPI_Asset_Attributes : GTLRObject
@end


/**
 *  Labels as key value pairs.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRMigrationCenterAPI_Asset_Labels : GTLRObject
@end


/**
 *  Contains data reported from an inventory source on an asset.
 */
@interface GTLRMigrationCenterAPI_AssetFrame : GTLRObject

/** Generic asset attributes. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AssetFrame_Attributes *attributes;

/**
 *  Optional. Frame collection type, if not specified the collection type will
 *  be based on the source type of the source the frame was reported on.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_AssetFrame_CollectionType_SourceTypeCustom
 *        Third-party owned sources. (Value: "SOURCE_TYPE_CUSTOM")
 *    @arg @c kGTLRMigrationCenterAPI_AssetFrame_CollectionType_SourceTypeDiscoveryClient
 *        Discovery clients (Value: "SOURCE_TYPE_DISCOVERY_CLIENT")
 *    @arg @c kGTLRMigrationCenterAPI_AssetFrame_CollectionType_SourceTypeGuestOsScan
 *        Guest-level info (Value: "SOURCE_TYPE_GUEST_OS_SCAN")
 *    @arg @c kGTLRMigrationCenterAPI_AssetFrame_CollectionType_SourceTypeInventoryScan
 *        Inventory-level scan (Value: "SOURCE_TYPE_INVENTORY_SCAN")
 *    @arg @c kGTLRMigrationCenterAPI_AssetFrame_CollectionType_SourceTypeUnknown
 *        Unspecified (Value: "SOURCE_TYPE_UNKNOWN")
 *    @arg @c kGTLRMigrationCenterAPI_AssetFrame_CollectionType_SourceTypeUpload
 *        Manually uploaded file (e.g. CSV) (Value: "SOURCE_TYPE_UPLOAD")
 */
@property(nonatomic, copy, nullable) NSString *collectionType;

/** Labels as key value pairs. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AssetFrame_Labels *labels;

/** Asset information specific for virtual machines. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_MachineDetails *machineDetails;

/**
 *  Asset performance data samples. Samples that are from more than 40 days ago
 *  or after tomorrow are ignored.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_PerformanceSample *> *performanceSamples;

/** The time the data was reported. */
@property(nonatomic, strong, nullable) GTLRDateTime *reportTime;

/**
 *  Optional. Trace token is optionally provided to assist with debugging and
 *  traceability.
 */
@property(nonatomic, copy, nullable) NSString *traceToken;

@end


/**
 *  Generic asset attributes.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRMigrationCenterAPI_AssetFrame_Attributes : GTLRObject
@end


/**
 *  Labels as key value pairs.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRMigrationCenterAPI_AssetFrame_Labels : GTLRObject
@end


/**
 *  Lists the asset IDs of all assets.
 */
@interface GTLRMigrationCenterAPI_AssetList : GTLRObject

/** Required. A list of asset IDs */
@property(nonatomic, strong, nullable) NSArray<NSString *> *assetIds;

@end


/**
 *  Performance data for an asset.
 */
@interface GTLRMigrationCenterAPI_AssetPerformanceData : GTLRObject

/**
 *  Daily resource usage aggregations. Contains all of the data available for an
 *  asset, up to the last 420 days. Aggregations are sorted from oldest to most
 *  recent.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_DailyResourceUsageAggregation *> *dailyResourceUsageAggregations;

@end


/**
 *  AWS EC2 specific details.
 */
@interface GTLRMigrationCenterAPI_AwsEc2PlatformDetails : GTLRObject

/** The location of the machine in the AWS format. */
@property(nonatomic, copy, nullable) NSString *location;

/** AWS platform's machine type label. */
@property(nonatomic, copy, nullable) NSString *machineTypeLabel;

@end


/**
 *  Azure VM specific details.
 */
@interface GTLRMigrationCenterAPI_AzureVmPlatformDetails : GTLRObject

/** The location of the machine in the Azure format. */
@property(nonatomic, copy, nullable) NSString *location;

/** Azure platform's machine type label. */
@property(nonatomic, copy, nullable) NSString *machineTypeLabel;

/** Azure platform's provisioning state. */
@property(nonatomic, copy, nullable) NSString *provisioningState;

@end


/**
 *  A request to delete a list of asset.
 */
@interface GTLRMigrationCenterAPI_BatchDeleteAssetsRequest : GTLRObject

/**
 *  Optional. When this value is set to `true` the request is a no-op for
 *  non-existing assets. See https://google.aip.dev/135#delete-if-existing for
 *  additional details. Default value is `false`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowMissing;

/**
 *  Required. The IDs of the assets to delete. A maximum of 1000 assets can be
 *  deleted in a batch. Format:
 *  projects/{project}/locations/{location}/assets/{name}.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

@end


/**
 *  A request to update a list of assets.
 */
@interface GTLRMigrationCenterAPI_BatchUpdateAssetsRequest : GTLRObject

/**
 *  Required. The request message specifying the resources to update. A maximum
 *  of 1000 assets can be modified in a batch.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_UpdateAssetRequest *> *requests;

@end


/**
 *  Response for updating a list of assets.
 */
@interface GTLRMigrationCenterAPI_BatchUpdateAssetsResponse : GTLRObject

/**
 *  Update asset content. The content only includes values after field mask
 *  being applied.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_Asset *> *assets;

@end


/**
 *  Details about the BIOS.
 */
@interface GTLRMigrationCenterAPI_BiosDetails : GTLRObject

/**
 *  BIOS name. This fields is deprecated. Please use the `id` field instead.
 */
@property(nonatomic, copy, nullable) NSString *biosName GTLR_DEPRECATED;

/**
 *  BIOS ID.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** BIOS manufacturer. */
@property(nonatomic, copy, nullable) NSString *manufacturer;

/** BIOS release date. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Date *releaseDate;

/** SMBIOS UUID. */
@property(nonatomic, copy, nullable) NSString *smbiosUuid;

/** BIOS version. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  The request message for Operations.CancelOperation.
 */
@interface GTLRMigrationCenterAPI_CancelOperationRequest : GTLRObject
@end


/**
 *  Compute engine migration target.
 */
@interface GTLRMigrationCenterAPI_ComputeEngineMigrationTarget : GTLRObject

/** Description of the suggested shape for the migration target. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ComputeEngineShapeDescriptor *shape;

@end


/**
 *  The user preferences relating to Compute Engine target platform.
 */
@interface GTLRMigrationCenterAPI_ComputeEnginePreferences : GTLRObject

/**
 *  License type to consider when calculating costs for virtual machine insights
 *  and recommendations. If unspecified, costs are calculated based on the
 *  default licensing plan.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_ComputeEnginePreferences_LicenseType_LicenseTypeBringYourOwnLicense
 *        Bring-your-own-license (BYOL) plan. User provides the OS license.
 *        (Value: "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE")
 *    @arg @c kGTLRMigrationCenterAPI_ComputeEnginePreferences_LicenseType_LicenseTypeDefault
 *        Default Google Cloud licensing plan. Licensing is charged per usage.
 *        This a good value to start with. (Value: "LICENSE_TYPE_DEFAULT")
 *    @arg @c kGTLRMigrationCenterAPI_ComputeEnginePreferences_LicenseType_LicenseTypeUnspecified
 *        Unspecified (default value). (Value: "LICENSE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *licenseType;

/** Preferences concerning the machine types to consider on Compute Engine. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_MachinePreferences *machinePreferences;

/**
 *  Persistent disk type to use. If unspecified (default), all types are
 *  considered, based on available usage data.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_ComputeEnginePreferences_PersistentDiskType_PersistentDiskTypeBalanced
 *        Balanced Persistent Disk. (Value: "PERSISTENT_DISK_TYPE_BALANCED")
 *    @arg @c kGTLRMigrationCenterAPI_ComputeEnginePreferences_PersistentDiskType_PersistentDiskTypeSsd
 *        SSD Persistent Disk. (Value: "PERSISTENT_DISK_TYPE_SSD")
 *    @arg @c kGTLRMigrationCenterAPI_ComputeEnginePreferences_PersistentDiskType_PersistentDiskTypeStandard
 *        Standard HDD Persistent Disk. (Value: "PERSISTENT_DISK_TYPE_STANDARD")
 *    @arg @c kGTLRMigrationCenterAPI_ComputeEnginePreferences_PersistentDiskType_PersistentDiskTypeUnspecified
 *        Unspecified (default value). Selecting this value allows the system to
 *        use any disk type according to reported usage. This a good value to
 *        start with. (Value: "PERSISTENT_DISK_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *persistentDiskType;

@end


/**
 *  Compute Engine target shape descriptor.
 */
@interface GTLRMigrationCenterAPI_ComputeEngineShapeDescriptor : GTLRObject

/**
 *  Output only. Number of logical cores.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *logicalCoreCount;

/** Output only. Compute Engine machine type. */
@property(nonatomic, copy, nullable) NSString *machineType;

/**
 *  Memory in mebibytes.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *memoryMb;

/**
 *  Number of physical cores.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *physicalCoreCount;

/** Output only. Compute Engine machine series. */
@property(nonatomic, copy, nullable) NSString *series;

/** Output only. Compute Engine storage. Never empty. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ComputeStorageDescriptor *> *storage;

@end


/**
 *  Compute Engine storage option descriptor.
 */
@interface GTLRMigrationCenterAPI_ComputeStorageDescriptor : GTLRObject

/**
 *  Output only. Disk size in GiB.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeGb;

/**
 *  Output only. Disk type backing the storage.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_ComputeStorageDescriptor_Type_PersistentDiskTypeBalanced
 *        Balanced Persistent Disk. (Value: "PERSISTENT_DISK_TYPE_BALANCED")
 *    @arg @c kGTLRMigrationCenterAPI_ComputeStorageDescriptor_Type_PersistentDiskTypeSsd
 *        SSD Persistent Disk. (Value: "PERSISTENT_DISK_TYPE_SSD")
 *    @arg @c kGTLRMigrationCenterAPI_ComputeStorageDescriptor_Type_PersistentDiskTypeStandard
 *        Standard HDD Persistent Disk. (Value: "PERSISTENT_DISK_TYPE_STANDARD")
 *    @arg @c kGTLRMigrationCenterAPI_ComputeStorageDescriptor_Type_PersistentDiskTypeUnspecified
 *        Unspecified (default value). Selecting this value allows the system to
 *        use any disk type according to reported usage. This a good value to
 *        start with. (Value: "PERSISTENT_DISK_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  CPU usage sample.
 */
@interface GTLRMigrationCenterAPI_CpuUsageSample : GTLRObject

/**
 *  Percentage of total CPU capacity utilized. Must be in the interval [0, 100].
 *  On most systems can be calculated using 100 - idle percentage.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *utilizedPercentage;

@end


/**
 *  Usage data aggregation for a single day.
 */
@interface GTLRMigrationCenterAPI_DailyResourceUsageAggregation : GTLRObject

/** CPU usage. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_DailyResourceUsageAggregationCPU *cpu;

/** Aggregation date. Day boundaries are at midnight UTC. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Date *date;

/** Disk usage. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_DailyResourceUsageAggregationDisk *disk;

/** Memory usage. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_DailyResourceUsageAggregationMemory *memory;

/** Network usage. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_DailyResourceUsageAggregationNetwork *network;

@end


/**
 *  Statistical aggregation of CPU usage.
 */
@interface GTLRMigrationCenterAPI_DailyResourceUsageAggregationCPU : GTLRObject

/** CPU utilization percentage. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_DailyResourceUsageAggregationStats *utilizationPercentage;

@end


/**
 *  Statistical aggregation of disk usage.
 */
@interface GTLRMigrationCenterAPI_DailyResourceUsageAggregationDisk : GTLRObject

/** Disk I/O operations per second. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_DailyResourceUsageAggregationStats *iops;

@end


/**
 *  Statistical aggregation of memory usage.
 */
@interface GTLRMigrationCenterAPI_DailyResourceUsageAggregationMemory : GTLRObject

/** Memory utilization percentage. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_DailyResourceUsageAggregationStats *utilizationPercentage;

@end


/**
 *  Statistical aggregation of network usage.
 */
@interface GTLRMigrationCenterAPI_DailyResourceUsageAggregationNetwork : GTLRObject

/** Network egress in B/s. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_DailyResourceUsageAggregationStats *egressBps;

/** Network ingress in B/s. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_DailyResourceUsageAggregationStats *ingressBps;

@end


/**
 *  Statistical aggregation of samples for a single resource usage.
 */
@interface GTLRMigrationCenterAPI_DailyResourceUsageAggregationStats : GTLRObject

/**
 *  Average usage value.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *average;

/**
 *  Median usage value.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *median;

/**
 *  95th percentile usage value.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ninteyFifthPercentile;

/**
 *  Peak usage value.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *peak;

@end


/**
 *  Represents a whole or partial calendar date, such as a birthday. The time of
 *  day and time zone are either specified elsewhere or are insignificant. The
 *  date is relative to the Gregorian Calendar. This can represent one of the
 *  following: * A full date, with non-zero year, month, and day values. * A
 *  month and day, with a zero year (for example, an anniversary). * A year on
 *  its own, with a zero month and a zero day. * A year and month, with a zero
 *  day (for example, a credit card expiration date). Related types: *
 *  google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
 */
@interface GTLRMigrationCenterAPI_Date : GTLRObject

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end


/**
 *  Represents an installed Migration Center Discovery Client instance.
 */
@interface GTLRMigrationCenterAPI_DiscoveryClient : GTLRObject

/** Output only. Time when the discovery client was first created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Free text description. Maximum length is 1000 characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Optional. Free text display name. Maximum length is 63 characters. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. Errors affecting client functionality. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_Status *> *errors;

/**
 *  Optional. Client expiration time in UTC. If specified, the backend will not
 *  accept new frames after this time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *expireTime;

/**
 *  Output only. Last heartbeat time. Healthy clients are expected to send
 *  heartbeats regularly (normally every few minutes).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *heartbeatTime;

/** Optional. Labels as key value pairs. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_DiscoveryClient_Labels *labels;

/** Output only. Identifier. Full name of this discovery client. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Service account used by the discovery client for various
 *  operation.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/** Output only. This field is intended for internal use. */
@property(nonatomic, copy, nullable) NSString *signalsEndpoint;

/**
 *  Required. Immutable. Full name of the source object associated with this
 *  discovery client.
 */
@property(nonatomic, copy, nullable) NSString *source;

/**
 *  Output only. Current state of the discovery client.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_DiscoveryClient_State_Active Client is
 *        active. (Value: "ACTIVE")
 *    @arg @c kGTLRMigrationCenterAPI_DiscoveryClient_State_Degraded Client is
 *        in a degraded state. See the `errors` field for details. (Value:
 *        "DEGRADED")
 *    @arg @c kGTLRMigrationCenterAPI_DiscoveryClient_State_Expired Client has
 *        expired. See the expire_time field for the expire time. (Value:
 *        "EXPIRED")
 *    @arg @c kGTLRMigrationCenterAPI_DiscoveryClient_State_Offline Client is
 *        offline. (Value: "OFFLINE")
 *    @arg @c kGTLRMigrationCenterAPI_DiscoveryClient_State_StateUnspecified
 *        Client state is unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Optional. Input only. Client time-to-live. If specified, the backend will
 *  not accept new frames after this time. This field is input only. The derived
 *  expiration time is provided as output through the `expire_time` field.
 */
@property(nonatomic, strong, nullable) GTLRDuration *ttl;

/**
 *  Output only. Time when the discovery client was last updated. This value is
 *  not updated by heartbeats, to view the last heartbeat time please refer to
 *  the `heartbeat_time` field.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** Output only. Client version, as reported in recent heartbeat. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Optional. Labels as key value pairs.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRMigrationCenterAPI_DiscoveryClient_Labels : GTLRObject
@end


/**
 *  Single disk entry.
 */
@interface GTLRMigrationCenterAPI_DiskEntry : GTLRObject

/**
 *  Disk capacity.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *capacityBytes;

/** Disk label. */
@property(nonatomic, copy, nullable) NSString *diskLabel;

/** Disk label type (e.g. BIOS/GPT) */
@property(nonatomic, copy, nullable) NSString *diskLabelType;

/**
 *  Disk free space.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *freeBytes;

/** Disk hardware address (e.g. 0:1 for SCSI). */
@property(nonatomic, copy, nullable) NSString *hwAddress;

/**
 *  Disks interface type.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_Fc FC interface
 *        type. (Value: "FC")
 *    @arg @c kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_Ide IDE interface
 *        type. (Value: "IDE")
 *    @arg @c kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_InterfaceTypeUnspecified
 *        Interface type unknown or unspecified. (Value:
 *        "INTERFACE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_Iscsi iSCSI
 *        interface type. (Value: "ISCSI")
 *    @arg @c kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_Nvme NVME
 *        interface type. (Value: "NVME")
 *    @arg @c kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_Sas SAS interface
 *        type. (Value: "SAS")
 *    @arg @c kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_Sata SATA
 *        interface type. (Value: "SATA")
 *    @arg @c kGTLRMigrationCenterAPI_DiskEntry_InterfaceType_Scsi SCSI
 *        interface type. (Value: "SCSI")
 */
@property(nonatomic, copy, nullable) NSString *interfaceType;

/** Partition layout. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_DiskPartitionList *partitions;

/** VMware disk details. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_VmwareDiskConfig *vmware;

@end


/**
 *  VM disks.
 */
@interface GTLRMigrationCenterAPI_DiskEntryList : GTLRObject

/** Disk entries. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_DiskEntry *> *entries;

@end


/**
 *  Disk Partition details.
 */
@interface GTLRMigrationCenterAPI_DiskPartition : GTLRObject

/**
 *  Partition capacity.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *capacityBytes;

/** Partition file system. */
@property(nonatomic, copy, nullable) NSString *fileSystem;

/**
 *  Partition free space.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *freeBytes;

/** Mount pount (Linux/Windows) or drive letter (Windows). */
@property(nonatomic, copy, nullable) NSString *mountPoint;

/** Sub-partitions. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_DiskPartitionList *subPartitions;

/** Partition type. */
@property(nonatomic, copy, nullable) NSString *type;

/** Partition UUID. */
@property(nonatomic, copy, nullable) NSString *uuid;

@end


/**
 *  Disk partition list.
 */
@interface GTLRMigrationCenterAPI_DiskPartitionList : GTLRObject

/** Partition entries. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_DiskPartition *> *entries;

@end


/**
 *  Disk usage sample. Values are across all disks.
 */
@interface GTLRMigrationCenterAPI_DiskUsageSample : GTLRObject

/**
 *  Average IOPS sampled over a short window. Must be non-negative.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *averageIops;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRMigrationCenterAPI_Empty : GTLRObject
@end


/**
 *  Message representing a frame which failed to be processed due to an error.
 */
@interface GTLRMigrationCenterAPI_ErrorFrame : GTLRObject

/** Output only. Frame ingestion time. */
@property(nonatomic, strong, nullable) GTLRDateTime *ingestionTime;

/** Output only. The identifier of the ErrorFrame. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The frame that was originally reported. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AssetFrame *originalFrame;

/** Output only. All the violations that were detected for the frame. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_FrameViolationEntry *> *violations;

@end


/**
 *  A resource that reports result of the import job execution.
 */
@interface GTLRMigrationCenterAPI_ExecutionReport : GTLRObject

/** Validation errors encountered during the execution of the import job. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ValidationReport *executionErrors;

/**
 *  Total number of asset frames reported for the import job.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *framesReported;

/**
 *  Output only. Total number of rows in the import job.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalRowsCount;

@end


/**
 *  A resource that aggregates the validation errors found in an import job
 *  file.
 */
@interface GTLRMigrationCenterAPI_FileValidationReport : GTLRObject

/** List of file level errors. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ImportError *> *fileErrors;

/** The name of the file. */
@property(nonatomic, copy, nullable) NSString *fileName;

/**
 *  Flag indicating that processing was aborted due to maximum number of errors.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partialReport;

/** Partial list of rows that encountered validation error. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ImportRowError *> *rowErrors;

@end


/**
 *  Describes the fit level of an asset for migration to a specific target.
 */
@interface GTLRMigrationCenterAPI_FitDescriptor : GTLRObject

/**
 *  Output only. Fit level.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_FitDescriptor_FitLevel_Fit Fit. (Value:
 *        "FIT")
 *    @arg @c kGTLRMigrationCenterAPI_FitDescriptor_FitLevel_FitLevelUnspecified
 *        Not enough information. (Value: "FIT_LEVEL_UNSPECIFIED")
 *    @arg @c kGTLRMigrationCenterAPI_FitDescriptor_FitLevel_NoFit No Fit.
 *        (Value: "NO_FIT")
 *    @arg @c kGTLRMigrationCenterAPI_FitDescriptor_FitLevel_RequiresEffort Fit
 *        with effort. (Value: "REQUIRES_EFFORT")
 */
@property(nonatomic, copy, nullable) NSString *fitLevel;

@end


/**
 *  Collection of frame data.
 */
@interface GTLRMigrationCenterAPI_Frames : GTLRObject

/** A repeated field of asset data. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_AssetFrame *> *framesData;

@end


/**
 *  A resource that contains a single violation of a reported `AssetFrame`
 *  resource.
 */
@interface GTLRMigrationCenterAPI_FrameViolationEntry : GTLRObject

/** The field of the original frame where the violation occurred. */
@property(nonatomic, copy, nullable) NSString *field;

/** A message describing the violation. */
@property(nonatomic, copy, nullable) NSString *violation;

@end


/**
 *  Single fstab entry.
 */
@interface GTLRMigrationCenterAPI_FstabEntry : GTLRObject

/** The mount point for the filesystem. */
@property(nonatomic, copy, nullable) NSString *file;

/**
 *  Used by dump to determine which filesystems need to be dumped.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *freq;

/** Mount options associated with the filesystem. */
@property(nonatomic, copy, nullable) NSString *mntops;

/**
 *  Used by the fsck(8) program to determine the order in which filesystem
 *  checks are done at reboot time.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *passno;

/** The block special device or remote filesystem to be mounted. */
@property(nonatomic, copy, nullable) NSString *spec;

/** The type of the filesystem. */
@property(nonatomic, copy, nullable) NSString *vfstype;

@end


/**
 *  Fstab content.
 */
@interface GTLRMigrationCenterAPI_FstabEntryList : GTLRObject

/** Fstab entries. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_FstabEntry *> *entries;

@end


/**
 *  A generic insight about an asset.
 */
@interface GTLRMigrationCenterAPI_GenericInsight : GTLRObject

/**
 *  Output only. Additional information about the insight, each entry can be a
 *  logical entry and must make sense if it is displayed with line breaks
 *  between each entry. Text can contain md style links.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *additionalInformation;

/**
 *  Output only. In case message_code is not yet known by the client
 *  default_message will be the message to be used instead.
 */
@property(nonatomic, copy, nullable) NSString *defaultMessage;

/**
 *  Output only. Represents a globally unique message id for this insight, can
 *  be used for localization purposes, in case message_code is not yet known by
 *  the client use default_message instead.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *messageId;

@end


/**
 *  Generic platform details.
 */
@interface GTLRMigrationCenterAPI_GenericPlatformDetails : GTLRObject

/**
 *  Free text representation of the machine location. The format of this field
 *  should not be relied on. Different VMs in the same location may have
 *  different string values for this field.
 */
@property(nonatomic, copy, nullable) NSString *location;

@end


/**
 *  A resource that represents an asset group. The purpose of an asset group is
 *  to bundle a set of assets that have something in common, while allowing
 *  users to add annotations to the group. An asset can belong to multiple
 *  groups.
 */
@interface GTLRMigrationCenterAPI_Group : GTLRObject

/** Output only. The timestamp when the group was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. The description of the group.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Optional. User-friendly display name. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Labels as key value pairs. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Group_Labels *labels;

/** Output only. The name of the group. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The timestamp when the group was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Labels as key value pairs.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRMigrationCenterAPI_Group_Labels : GTLRObject
@end


/**
 *  Guest OS config information.
 */
@interface GTLRMigrationCenterAPI_GuestConfigDetails : GTLRObject

/** Mount list (Linux fstab). */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_FstabEntryList *fstab;

/** Hosts file (/etc/hosts). */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_HostsEntryList *hosts;

/** OS issue (typically /etc/issue in Linux). */
@property(nonatomic, copy, nullable) NSString *issue;

/** NFS exports. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_NfsExportList *nfsExports;

/**
 *  Security-Enhanced Linux (SELinux) mode.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_GuestConfigDetails_SelinuxMode_SeLinuxModeDisabled
 *        SELinux is disabled. (Value: "SE_LINUX_MODE_DISABLED")
 *    @arg @c kGTLRMigrationCenterAPI_GuestConfigDetails_SelinuxMode_SeLinuxModeEnforcing
 *        SELinux enforcing mode. (Value: "SE_LINUX_MODE_ENFORCING")
 *    @arg @c kGTLRMigrationCenterAPI_GuestConfigDetails_SelinuxMode_SeLinuxModePermissive
 *        SELinux permissive mode. (Value: "SE_LINUX_MODE_PERMISSIVE")
 *    @arg @c kGTLRMigrationCenterAPI_GuestConfigDetails_SelinuxMode_SeLinuxModeUnspecified
 *        SELinux mode unknown or unspecified. (Value:
 *        "SE_LINUX_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *selinuxMode;

@end


/**
 *  Guest installed application information.
 */
@interface GTLRMigrationCenterAPI_GuestInstalledApplication : GTLRObject

/** Installed application name. */
@property(nonatomic, copy, nullable) NSString *applicationName;

/** The time when the application was installed. */
@property(nonatomic, strong, nullable) GTLRDateTime *installTime;

/** License strings associated with the installed application. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *licenses;

/** Source path. */
@property(nonatomic, copy, nullable) NSString *path;

/** Installed application vendor. */
@property(nonatomic, copy, nullable) NSString *vendor;

/** Installed application version. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Guest installed application list.
 */
@interface GTLRMigrationCenterAPI_GuestInstalledApplicationList : GTLRObject

/** Application entries. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_GuestInstalledApplication *> *entries;

@end


/**
 *  Information from Guest-level collections.
 */
@interface GTLRMigrationCenterAPI_GuestOsDetails : GTLRObject

/** OS and app configuration. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_GuestConfigDetails *config;

/**
 *  What family the OS belong to, if known.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_GuestOsDetails_Family_OsFamilyLinux
 *        Various Linux flavors. (Value: "OS_FAMILY_LINUX")
 *    @arg @c kGTLRMigrationCenterAPI_GuestOsDetails_Family_OsFamilyUnix
 *        Non-Linux Unix flavors. (Value: "OS_FAMILY_UNIX")
 *    @arg @c kGTLRMigrationCenterAPI_GuestOsDetails_Family_OsFamilyUnknown
 *        Value "OS_FAMILY_UNKNOWN"
 *    @arg @c kGTLRMigrationCenterAPI_GuestOsDetails_Family_OsFamilyWindows
 *        Microsoft Windows Server and Desktop. (Value: "OS_FAMILY_WINDOWS")
 */
@property(nonatomic, copy, nullable) NSString *family;

/** The name of the operating system. */
@property(nonatomic, copy, nullable) NSString *osName;

/** Runtime information. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_GuestRuntimeDetails *runtime;

/** The version of the operating system. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Guest OS runtime information.
 */
@interface GTLRMigrationCenterAPI_GuestRuntimeDetails : GTLRObject

/** Domain, e.g. c.stratozone-development.internal. */
@property(nonatomic, copy, nullable) NSString *domain;

/** Installed applications information. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_GuestInstalledApplicationList *installedApps;

/** Last time the OS was booted. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastBootTime;

/** Machine name. */
@property(nonatomic, copy, nullable) NSString *machineName;

/** Runtime network information (connections, ports). */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_RuntimeNetworkInfo *network;

/** Open files information. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_OpenFileList *openFileList;

/** Running processes. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_RunningProcessList *processes;

/** Running background services. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_RunningServiceList *services;

@end


/**
 *  Single /etc/hosts entry.
 */
@interface GTLRMigrationCenterAPI_HostsEntry : GTLRObject

/** List of host names / aliases. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *hostNames;

/** IP (raw, IPv4/6 agnostic). */
@property(nonatomic, copy, nullable) NSString *ip;

@end


/**
 *  Hosts content.
 */
@interface GTLRMigrationCenterAPI_HostsEntryList : GTLRObject

/** Hosts entries. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_HostsEntry *> *entries;

@end


/**
 *  A resource that represents a payload file in an import job.
 */
@interface GTLRMigrationCenterAPI_ImportDataFile : GTLRObject

/** Output only. The timestamp when the file was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** User-friendly display name. Maximum length is 63 characters. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Required. The payload format.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_ImportDataFile_Format_ImportJobFormatExportedAwsCsv
 *        CSV format exported from AWS using the AWS collection script. (Value:
 *        "IMPORT_JOB_FORMAT_EXPORTED_AWS_CSV")
 *    @arg @c kGTLRMigrationCenterAPI_ImportDataFile_Format_ImportJobFormatExportedAzureCsv
 *        CSV format exported from Azure using the Azure collection script.
 *        (Value: "IMPORT_JOB_FORMAT_EXPORTED_AZURE_CSV")
 *    @arg @c kGTLRMigrationCenterAPI_ImportDataFile_Format_ImportJobFormatRvtoolsCsv
 *        RVTools format (CSV). (Value: "IMPORT_JOB_FORMAT_RVTOOLS_CSV")
 *    @arg @c kGTLRMigrationCenterAPI_ImportDataFile_Format_ImportJobFormatRvtoolsXlsx
 *        RVTools format (XLSX). (Value: "IMPORT_JOB_FORMAT_RVTOOLS_XLSX")
 *    @arg @c kGTLRMigrationCenterAPI_ImportDataFile_Format_ImportJobFormatStratozoneCsv
 *        CSV format created manually and following the StratoZone format. For
 *        more information, see Manually create and upload data tables. (Value:
 *        "IMPORT_JOB_FORMAT_STRATOZONE_CSV")
 *    @arg @c kGTLRMigrationCenterAPI_ImportDataFile_Format_ImportJobFormatUnspecified
 *        Default value. (Value: "IMPORT_JOB_FORMAT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *format;

/** Output only. The name of the file. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The state of the import data file.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_ImportDataFile_State_Active The data file
 *        completed initialization. (Value: "ACTIVE")
 *    @arg @c kGTLRMigrationCenterAPI_ImportDataFile_State_Creating The data
 *        file is being created. (Value: "CREATING")
 *    @arg @c kGTLRMigrationCenterAPI_ImportDataFile_State_StateUnspecified
 *        Default value. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Information about a file that is uploaded to a storage service. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_UploadFileInfo *uploadFileInfo;

@end


/**
 *  A resource that reports the errors encountered while processing an import
 *  job.
 */
@interface GTLRMigrationCenterAPI_ImportError : GTLRObject

/** The error information. */
@property(nonatomic, copy, nullable) NSString *errorDetails;

/**
 *  The severity of the error.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_ImportError_Severity_Error Value "ERROR"
 *    @arg @c kGTLRMigrationCenterAPI_ImportError_Severity_Info Value "INFO"
 *    @arg @c kGTLRMigrationCenterAPI_ImportError_Severity_SeverityUnspecified
 *        Value "SEVERITY_UNSPECIFIED"
 *    @arg @c kGTLRMigrationCenterAPI_ImportError_Severity_Warning Value
 *        "WARNING"
 */
@property(nonatomic, copy, nullable) NSString *severity;

@end


/**
 *  A resource that represents the background job that imports asset frames.
 */
@interface GTLRMigrationCenterAPI_ImportJob : GTLRObject

/** Required. Reference to a source. */
@property(nonatomic, copy, nullable) NSString *assetSource;

/** Output only. The timestamp when the import job was completed. */
@property(nonatomic, strong, nullable) GTLRDateTime *completeTime;

/** Output only. The timestamp when the import job was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Optional. User-friendly display name. Maximum length is 256 characters. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. The report with the results of running the import job. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ExecutionReport *executionReport;

/** Labels as key value pairs. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ImportJob_Labels *labels;

/** Output only. The full name of the import job. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The state of the import job.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStateCompleted
 *        The import job processing has completed. (Value:
 *        "IMPORT_JOB_STATE_COMPLETED")
 *    @arg @c kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStateFailed The
 *        import job failed to be processed. (Value: "IMPORT_JOB_STATE_FAILED")
 *    @arg @c kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStateFailedValidation
 *        The import job contains blocking errors. (Value:
 *        "IMPORT_JOB_STATE_FAILED_VALIDATION")
 *    @arg @c kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStatePending The
 *        import job is pending. (Value: "IMPORT_JOB_STATE_PENDING")
 *    @arg @c kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStateReady The
 *        validation of the job completed with no blocking errors. (Value:
 *        "IMPORT_JOB_STATE_READY")
 *    @arg @c kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStateRunning The
 *        processing of the import job is ongoing. (Value:
 *        "IMPORT_JOB_STATE_RUNNING")
 *    @arg @c kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStateUnspecified
 *        Default value. (Value: "IMPORT_JOB_STATE_UNSPECIFIED")
 *    @arg @c kGTLRMigrationCenterAPI_ImportJob_State_ImportJobStateValidating
 *        The import job is being validated. (Value:
 *        "IMPORT_JOB_STATE_VALIDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. The timestamp when the import job was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** Output only. The report with the validation results of the import job. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ValidationReport *validationReport;

@end


/**
 *  Labels as key value pairs.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRMigrationCenterAPI_ImportJob_Labels : GTLRObject
@end


/**
 *  A resource that reports the import job errors at row level.
 */
@interface GTLRMigrationCenterAPI_ImportRowError : GTLRObject

/** Error details for a CSV file. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ImportRowErrorCsvErrorDetails *csvError;

/** The list of errors detected in the row. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ImportError *> *errors;

/**
 *  The row number where the error was detected.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rowNumber GTLR_DEPRECATED;

/** The name of the VM in the row. */
@property(nonatomic, copy, nullable) NSString *vmName;

/** The VM UUID. */
@property(nonatomic, copy, nullable) NSString *vmUuid;

/** Error details for an XLSX file. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ImportRowErrorXlsxErrorDetails *xlsxError;

@end


/**
 *  Error details for a CSV file.
 */
@interface GTLRMigrationCenterAPI_ImportRowErrorCsvErrorDetails : GTLRObject

/**
 *  The row number where the error was detected.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rowNumber;

@end


/**
 *  Error details for an XLSX file.
 */
@interface GTLRMigrationCenterAPI_ImportRowErrorXlsxErrorDetails : GTLRObject

/**
 *  The row number where the error was detected.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rowNumber;

/** The name of the sheet where the error was detected. */
@property(nonatomic, copy, nullable) NSString *sheet;

@end


/**
 *  An insight about an asset.
 */
@interface GTLRMigrationCenterAPI_Insight : GTLRObject

/** Output only. A generic insight about an asset */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_GenericInsight *genericInsight;

/** Output only. An insight about potential migrations for an asset. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_MigrationInsight *migrationInsight;

@end


/**
 *  Message containing insights list.
 */
@interface GTLRMigrationCenterAPI_InsightList : GTLRObject

/** Output only. Insights of the list. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_Insight *> *insights;

/** Output only. Update timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response message for listing assets.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "assets" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRMigrationCenterAPI_ListAssetsResponse : GTLRCollectionObject

/**
 *  A list of assets.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_Asset *> *assets;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response message for listing discovery clients.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "discoveryClients" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRMigrationCenterAPI_ListDiscoveryClientsResponse : GTLRCollectionObject

/**
 *  List of discovery clients.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_DiscoveryClient *> *discoveryClients;

/**
 *  A token that can be sent as `page_token` to retrieve the next page. If this
 *  field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  A response for listing error frames.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "errorFrames" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRMigrationCenterAPI_ListErrorFramesResponse : GTLRCollectionObject

/**
 *  The list of error frames.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ErrorFrame *> *errorFrames;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  A response for listing groups.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "groups" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRMigrationCenterAPI_ListGroupsResponse : GTLRCollectionObject

/**
 *  The list of Group
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_Group *> *groups;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response for listing payload files of an import job.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "importDataFiles" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRMigrationCenterAPI_ListImportDataFilesResponse : GTLRCollectionObject

/**
 *  The list of import data files.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ImportDataFile *> *importDataFiles;

/**
 *  A token that can be sent as `page_token` to retrieve the next page. If this
 *  field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  A response for listing import jobs.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "importJobs" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRMigrationCenterAPI_ListImportJobsResponse : GTLRCollectionObject

/**
 *  The list of import jobs.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ImportJob *> *importJobs;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRMigrationCenterAPI_ListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_Location *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRMigrationCenterAPI_ListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_Operation *> *operations;

@end


/**
 *  Response message for listing preference sets.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "preferenceSets" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRMigrationCenterAPI_ListPreferenceSetsResponse : GTLRCollectionObject

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of PreferenceSets
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_PreferenceSet *> *preferenceSets;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response message for listing report configs.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "reportConfigs" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRMigrationCenterAPI_ListReportConfigsResponse : GTLRCollectionObject

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of report configs.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ReportConfig *> *reportConfigs;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response message for listing Reports.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "reports" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRMigrationCenterAPI_ListReportsResponse : GTLRCollectionObject

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of Reports.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_Report *> *reports;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Response message for listing sources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "sources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRMigrationCenterAPI_ListSourcesResponse : GTLRCollectionObject

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of sources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_Source *> *sources;

/** Locations that could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  A resource that represents a Google Cloud location.
 */
@interface GTLRMigrationCenterAPI_Location : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name. For
 *  example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Location_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Location_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations. For
 *  example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRMigrationCenterAPI_Location_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRMigrationCenterAPI_Location_Metadata : GTLRObject
@end


/**
 *  Details of the machine architecture.
 */
@interface GTLRMigrationCenterAPI_MachineArchitectureDetails : GTLRObject

/** BIOS Details. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_BiosDetails *bios;

/** CPU architecture, e.g., "x64-based PC", "x86_64", "i686" etc. */
@property(nonatomic, copy, nullable) NSString *cpuArchitecture;

/** CPU name, e.g., "Intel Xeon E5-2690", "AMD EPYC 7571" etc. */
@property(nonatomic, copy, nullable) NSString *cpuName;

/**
 *  Number of processor sockets allocated to the machine.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cpuSocketCount;

/**
 *  Number of CPU threads allocated to the machine.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cpuThreadCount;

/**
 *  Firmware type.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_MachineArchitectureDetails_FirmwareType_Bios
 *        BIOS firmware. (Value: "BIOS")
 *    @arg @c kGTLRMigrationCenterAPI_MachineArchitectureDetails_FirmwareType_Efi
 *        EFI firmware. (Value: "EFI")
 *    @arg @c kGTLRMigrationCenterAPI_MachineArchitectureDetails_FirmwareType_FirmwareTypeUnspecified
 *        Unspecified or unknown. (Value: "FIRMWARE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *firmwareType;

/**
 *  CPU hyper-threading support.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_MachineArchitectureDetails_Hyperthreading_CpuHyperThreadingUnspecified
 *        Unspecified or unknown. (Value: "CPU_HYPER_THREADING_UNSPECIFIED")
 *    @arg @c kGTLRMigrationCenterAPI_MachineArchitectureDetails_Hyperthreading_Disabled
 *        Hyper-threading is disabled. (Value: "DISABLED")
 *    @arg @c kGTLRMigrationCenterAPI_MachineArchitectureDetails_Hyperthreading_Enabled
 *        Hyper-threading is enabled. (Value: "ENABLED")
 */
@property(nonatomic, copy, nullable) NSString *hyperthreading;

/** Hardware vendor. */
@property(nonatomic, copy, nullable) NSString *vendor;

@end


/**
 *  Details of a machine.
 */
@interface GTLRMigrationCenterAPI_MachineDetails : GTLRObject

/** Architecture details (vendor, CPU architecture). */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_MachineArchitectureDetails *architecture;

/**
 *  Number of logical CPU cores in the machine. Must be non-negative.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *coreCount;

/** Machine creation time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Disk details. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_MachineDiskDetails *disks;

/** Guest OS information. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_GuestOsDetails *guestOs;

/** Machine name. */
@property(nonatomic, copy, nullable) NSString *machineName;

/**
 *  The amount of memory in the machine. Must be non-negative.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *memoryMb;

/** Network details. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_MachineNetworkDetails *network;

/** Platform specific information. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_PlatformDetails *platform;

/**
 *  Power state of the machine.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_MachineDetails_PowerState_Active The
 *        machine is active. (Value: "ACTIVE")
 *    @arg @c kGTLRMigrationCenterAPI_MachineDetails_PowerState_Deleted The
 *        machine is deleted from the hosting platform. (Value: "DELETED")
 *    @arg @c kGTLRMigrationCenterAPI_MachineDetails_PowerState_Deleting The
 *        machine is being deleted from the hosting platform. (Value:
 *        "DELETING")
 *    @arg @c kGTLRMigrationCenterAPI_MachineDetails_PowerState_Pending The
 *        machine is preparing to enter the ACTIVE state. An instance may enter
 *        the PENDING state when it launches for the first time, or when it is
 *        started after being in the SUSPENDED state. (Value: "PENDING")
 *    @arg @c kGTLRMigrationCenterAPI_MachineDetails_PowerState_PowerStateUnspecified
 *        Power state is unknown. (Value: "POWER_STATE_UNSPECIFIED")
 *    @arg @c kGTLRMigrationCenterAPI_MachineDetails_PowerState_Suspended The
 *        machine is off. (Value: "SUSPENDED")
 *    @arg @c kGTLRMigrationCenterAPI_MachineDetails_PowerState_Suspending The
 *        machine is being turned off. (Value: "SUSPENDING")
 */
@property(nonatomic, copy, nullable) NSString *powerState;

/** Machine unique identifier. */
@property(nonatomic, copy, nullable) NSString *uuid;

@end


/**
 *  Details of machine disks.
 */
@interface GTLRMigrationCenterAPI_MachineDiskDetails : GTLRObject

/** List of disks. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_DiskEntryList *disks;

/**
 *  Disk total Capacity.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalCapacityBytes;

/**
 *  Total disk free space.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalFreeBytes;

@end


/**
 *  Details of network adapters and settings.
 */
@interface GTLRMigrationCenterAPI_MachineNetworkDetails : GTLRObject

/** List of network adapters. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_NetworkAdapterList *adapters;

/** The primary IP address of the machine. */
@property(nonatomic, copy, nullable) NSString *primaryIpAddress;

/**
 *  MAC address of the machine. This property is used to uniqly identify the
 *  machine.
 */
@property(nonatomic, copy, nullable) NSString *primaryMacAddress;

/** The public IP address of the machine. */
@property(nonatomic, copy, nullable) NSString *publicIpAddress;

@end


/**
 *  The type of machines to consider when calculating virtual machine migration
 *  insights and recommendations. Not all machine types are available in all
 *  zones and regions.
 */
@interface GTLRMigrationCenterAPI_MachinePreferences : GTLRObject

/**
 *  Compute Engine machine series to consider for insights and recommendations.
 *  If empty, no restriction is applied on the machine series.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_MachineSeries *> *allowedMachineSeries;

@end


/**
 *  A machine series, for a target product (e.g. Compute Engine, Google Cloud
 *  VMware Engine).
 */
@interface GTLRMigrationCenterAPI_MachineSeries : GTLRObject

/**
 *  Code to identify a machine series. Consult this for more details on the
 *  available series for Compute Engine:
 *  https://cloud.google.com/compute/docs/machine-resource#machine_type_comparison
 *  Consult this for more details on the available series for Google Cloud
 *  VMware Engine: https://cloud.google.com/vmware-engine/pricing
 */
@property(nonatomic, copy, nullable) NSString *code;

@end


/**
 *  Memory usage sample.
 */
@interface GTLRMigrationCenterAPI_MemoryUsageSample : GTLRObject

/**
 *  Percentage of system memory utilized. Must be in the interval [0, 100].
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *utilizedPercentage;

@end


/**
 *  An insight about potential migrations for an asset.
 */
@interface GTLRMigrationCenterAPI_MigrationInsight : GTLRObject

/** Output only. A Google Compute Engine target. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ComputeEngineMigrationTarget *computeEngineTarget;

/**
 *  Output only. Description of how well the asset this insight is associated
 *  with fits the proposed migration.
 */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_FitDescriptor *fit;

@end


/**
 *  Represents an amount of money with its currency type.
 */
@interface GTLRMigrationCenterAPI_Money : GTLRObject

/** The three-letter currency code defined in ISO 4217. */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Number of nano (10^-9) units of the amount. The value must be between
 *  -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos`
 *  must be positive or zero. If `units` is zero, `nanos` can be positive, zero,
 *  or negative. If `units` is negative, `nanos` must be negative or zero. For
 *  example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  The whole units of the amount. For example if `currencyCode` is `"USD"`,
 *  then 1 unit is one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *units;

@end


/**
 *  Details of network adapter.
 */
@interface GTLRMigrationCenterAPI_NetworkAdapterDetails : GTLRObject

/** Network adapter type (e.g. VMXNET3). */
@property(nonatomic, copy, nullable) NSString *adapterType;

/** NetworkAddressList */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_NetworkAddressList *addresses;

/** MAC address. */
@property(nonatomic, copy, nullable) NSString *macAddress;

@end


/**
 *  List of network adapters.
 */
@interface GTLRMigrationCenterAPI_NetworkAdapterList : GTLRObject

/** Network adapter entries. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_NetworkAdapterDetails *> *entries;

@end


/**
 *  Details of network address.
 */
@interface GTLRMigrationCenterAPI_NetworkAddress : GTLRObject

/**
 *  Whether DHCP is used to assign addresses.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_NetworkAddress_Assignment_AddressAssignmentDhcp
 *        Dynamically assigned IP (DHCP). (Value: "ADDRESS_ASSIGNMENT_DHCP")
 *    @arg @c kGTLRMigrationCenterAPI_NetworkAddress_Assignment_AddressAssignmentStatic
 *        Staticly assigned IP. (Value: "ADDRESS_ASSIGNMENT_STATIC")
 *    @arg @c kGTLRMigrationCenterAPI_NetworkAddress_Assignment_AddressAssignmentUnspecified
 *        Unknown (default value). (Value: "ADDRESS_ASSIGNMENT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *assignment;

/** Broadcast address. */
@property(nonatomic, copy, nullable) NSString *bcast;

/** Fully qualified domain name. */
@property(nonatomic, copy, nullable) NSString *fqdn;

/** Assigned or configured IP Address. */
@property(nonatomic, copy, nullable) NSString *ipAddress;

/** Subnet mask. */
@property(nonatomic, copy, nullable) NSString *subnetMask;

@end


/**
 *  List of allocated/assigned network addresses.
 */
@interface GTLRMigrationCenterAPI_NetworkAddressList : GTLRObject

/** Network address entries. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_NetworkAddress *> *entries;

@end


/**
 *  GTLRMigrationCenterAPI_NetworkConnection
 */
@interface GTLRMigrationCenterAPI_NetworkConnection : GTLRObject

/** Local IP address. */
@property(nonatomic, copy, nullable) NSString *localIpAddress;

/**
 *  Local port.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *localPort;

/**
 *  Process ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pid;

/** Process or service name. */
@property(nonatomic, copy, nullable) NSString *processName;

/** Connection protocol (e.g. TCP/UDP). */
@property(nonatomic, copy, nullable) NSString *protocol;

/** Remote IP address. */
@property(nonatomic, copy, nullable) NSString *remoteIpAddress;

/**
 *  Remote port.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *remotePort;

/**
 *  Network connection state.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_NetworkConnection_State_Closed The
 *        connection is closed. (Value: "CLOSED")
 *    @arg @c kGTLRMigrationCenterAPI_NetworkConnection_State_Closing The
 *        connection is being closed. (Value: "CLOSING")
 *    @arg @c kGTLRMigrationCenterAPI_NetworkConnection_State_Listen Listening
 *        for incoming connections. (Value: "LISTEN")
 *    @arg @c kGTLRMigrationCenterAPI_NetworkConnection_State_Open The
 *        connection is open. (Value: "OPEN")
 *    @arg @c kGTLRMigrationCenterAPI_NetworkConnection_State_Opening The
 *        connection is being opened. (Value: "OPENING")
 *    @arg @c kGTLRMigrationCenterAPI_NetworkConnection_State_StateUnspecified
 *        Connection state is unknown or unspecified. (Value:
 *        "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Network connection list.
 */
@interface GTLRMigrationCenterAPI_NetworkConnectionList : GTLRObject

/** Network connection entries. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_NetworkConnection *> *entries;

@end


/**
 *  Network usage sample. Values are across all network interfaces.
 */
@interface GTLRMigrationCenterAPI_NetworkUsageSample : GTLRObject

/**
 *  Average network egress in B/s sampled over a short window. Must be
 *  non-negative.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *averageEgressBps;

/**
 *  Average network ingress in B/s sampled over a short window. Must be
 *  non-negative.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *averageIngressBps;

@end


/**
 *  NFS export.
 */
@interface GTLRMigrationCenterAPI_NfsExport : GTLRObject

/** The directory being exported. */
@property(nonatomic, copy, nullable) NSString *exportDirectory;

/** The hosts or networks to which the export is being shared. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *hosts;

@end


/**
 *  NFS exports.
 */
@interface GTLRMigrationCenterAPI_NfsExportList : GTLRObject

/** NFS export entries. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_NfsExport *> *entries;

@end


/**
 *  Open file Information.
 */
@interface GTLRMigrationCenterAPI_OpenFileDetails : GTLRObject

/** Opened file command. */
@property(nonatomic, copy, nullable) NSString *command;

/** Opened file file path. */
@property(nonatomic, copy, nullable) NSString *filePath;

/** Opened file file type. */
@property(nonatomic, copy, nullable) NSString *fileType;

/** Opened file user. */
@property(nonatomic, copy, nullable) NSString *user;

@end


/**
 *  Open file list.
 */
@interface GTLRMigrationCenterAPI_OpenFileList : GTLRObject

/** Open file details entries. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_OpenFileDetails *> *entries;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRMigrationCenterAPI_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRMigrationCenterAPI_Operation_Metadata : GTLRObject
@end


/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRMigrationCenterAPI_Operation_Response : GTLRObject
@end


/**
 *  Represents the metadata of the long-running operation.
 */
@interface GTLRMigrationCenterAPI_OperationMetadata : GTLRObject

/** Output only. API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/** Output only. The time the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. The time the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Identifies whether the user has requested cancellation of the
 *  operation. Operations that have been cancelled successfully have
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedCancellation;

/** Output only. Human-readable status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  Output only. Server-defined resource path for the target of the operation.
 */
@property(nonatomic, copy, nullable) NSString *target;

/** Output only. Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  Performance data sample.
 */
@interface GTLRMigrationCenterAPI_PerformanceSample : GTLRObject

/** CPU usage sample. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_CpuUsageSample *cpu;

/** Disk usage sample. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_DiskUsageSample *disk;

/** Memory usage sample. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_MemoryUsageSample *memory;

/** Network usage sample. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_NetworkUsageSample *network;

/**
 *  Time the sample was collected. If omitted, the frame report time will be
 *  used.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *sampleTime;

@end


/**
 *  Platform specific details for Physical Machines.
 */
@interface GTLRMigrationCenterAPI_PhysicalPlatformDetails : GTLRObject

/**
 *  Free text representation of the machine location. The format of this field
 *  should not be relied on. Different machines in the same location may have
 *  different string values for this field.
 */
@property(nonatomic, copy, nullable) NSString *location;

@end


/**
 *  Information about the platform.
 */
@interface GTLRMigrationCenterAPI_PlatformDetails : GTLRObject

/** AWS EC2 specific details. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AwsEc2PlatformDetails *awsEc2Details;

/** Azure VM specific details. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AzureVmPlatformDetails *azureVmDetails;

/** Generic platform details. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_GenericPlatformDetails *genericDetails;

/** Physical machines platform details. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_PhysicalPlatformDetails *physicalDetails;

/** VMware specific details. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_VmwarePlatformDetails *vmwareDetails;

@end


/**
 *  The preferences that apply to all assets in a given context.
 */
@interface GTLRMigrationCenterAPI_PreferenceSet : GTLRObject

/** Output only. The timestamp when the preference set was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  A description of the preference set.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** User-friendly display name. Maximum length is 63 characters. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. Name of the preference set. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The timestamp when the preference set was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Optional. A set of preferences that applies to all virtual machines in the
 *  context.
 */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_VirtualMachinePreferences *virtualMachinePreferences;

@end


/**
 *  The user preferences relating to target regions.
 */
@interface GTLRMigrationCenterAPI_RegionPreferences : GTLRObject

/**
 *  A list of preferred regions, ordered by the most preferred region first. Set
 *  only valid Google Cloud region names. See
 *  https://cloud.google.com/compute/docs/regions-zones for available regions.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *preferredRegions;

@end


/**
 *  A request to remove assets from a group.
 */
@interface GTLRMigrationCenterAPI_RemoveAssetsFromGroupRequest : GTLRObject

/**
 *  Optional. When this value is set to `false` and one of the given assets is
 *  not an existing member of the group, the operation fails with a `Not Found`
 *  error. When set to `true` this situation is silently ignored by the server.
 *  Default value is `false`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowMissing;

/**
 *  Required. List of assets to be removed. The maximum number of assets that
 *  can be removed in a single request is 1000.
 */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_AssetList *assets;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

@end


/**
 *  Report represents a point-in-time rendering of the ReportConfig results.
 */
@interface GTLRMigrationCenterAPI_Report : GTLRObject

/** Output only. Creation timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Free-text description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** User-friendly display name. Maximum length is 63 characters. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. Name of resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Report creation state.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_Report_State_Failed Failed to create
 *        Report. (Value: "FAILED")
 *    @arg @c kGTLRMigrationCenterAPI_Report_State_Pending Creating Report.
 *        (Value: "PENDING")
 *    @arg @c kGTLRMigrationCenterAPI_Report_State_StateUnspecified Default
 *        Report creation state. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRMigrationCenterAPI_Report_State_Succeeded Successfully
 *        created Report. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. Summary view of the Report. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ReportSummary *summary;

/**
 *  Report type.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_Report_Type_TotalCostOfOwnership Total
 *        cost of ownership Report type. (Value: "TOTAL_COST_OF_OWNERSHIP")
 *    @arg @c kGTLRMigrationCenterAPI_Report_Type_TypeUnspecified Default Report
 *        type. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

/** Output only. Last update timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  A response to a call to `ReportAssetFrame`.
 */
@interface GTLRMigrationCenterAPI_ReportAssetFramesResponse : GTLRObject
@end


/**
 *  The groups and associated preference sets on which we can generate reports.
 */
@interface GTLRMigrationCenterAPI_ReportConfig : GTLRObject

/** Output only. The timestamp when the resource was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Free-text description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** User-friendly display name. Maximum length is 63 characters. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Required. Collection of combinations of groups and preference sets. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ReportConfigGroupPreferenceSetAssignment *> *groupPreferencesetAssignments;

/** Output only. Name of resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The timestamp when the resource was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Represents a combination of a group with a preference set.
 */
@interface GTLRMigrationCenterAPI_ReportConfigGroupPreferenceSetAssignment : GTLRObject

/** Required. Name of the group. */
@property(nonatomic, copy, nullable) NSString *group;

/** Required. Name of the Preference Set. */
@property(nonatomic, copy, nullable) NSString *preferenceSet;

@end


/**
 *  Describes the Summary view of a Report, which contains aggregated values for
 *  all the groups and preference sets included in this Report.
 */
@interface GTLRMigrationCenterAPI_ReportSummary : GTLRObject

/** Aggregate statistics for all the assets across all the groups. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ReportSummaryAssetAggregateStats *allAssetsStats;

/** Findings for each Group included in this report. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ReportSummaryGroupFinding *> *groupFindings;

@end


/**
 *  Aggregate statistics for a collection of assets.
 */
@interface GTLRMigrationCenterAPI_ReportSummaryAssetAggregateStats : GTLRObject

/** Histogram showing a distribution of CPU core counts. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ReportSummaryHistogramChartData *coreCountHistogram;

/** Histogram showing a distribution of memory sizes. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ReportSummaryHistogramChartData *memoryBytesHistogram;

/** Total memory split into Used/Free buckets. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ReportSummaryUtilizationChartData *memoryUtilizationChart;

/** Count of assets grouped by Operating System families. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ReportSummaryChartData *operatingSystem;

/** Histogram showing a distribution of storage sizes. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ReportSummaryHistogramChartData *storageBytesHistogram;

/** Total memory split into Used/Free buckets. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ReportSummaryUtilizationChartData *storageUtilizationChart;

/**
 *  Count of the number of unique assets in this collection.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalAssets;

/**
 *  Sum of the CPU core count of all the assets in this collection.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalCores;

/**
 *  Sum of the memory in bytes of all the assets in this collection.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalMemoryBytes;

/**
 *  Sum of persistent storage in bytes of all the assets in this collection.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalStorageBytes;

@end


/**
 *  Describes a collection of data points rendered as a Chart.
 */
@interface GTLRMigrationCenterAPI_ReportSummaryChartData : GTLRObject

/**
 *  Each data point in the chart is represented as a name-value pair with the
 *  name being the x-axis label, and the value being the y-axis value.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ReportSummaryChartDataDataPoint *> *dataPoints;

@end


/**
 *  Describes a single data point in the Chart.
 */
@interface GTLRMigrationCenterAPI_ReportSummaryChartDataDataPoint : GTLRObject

/** The X-axis label for this data point. */
@property(nonatomic, copy, nullable) NSString *label;

/**
 *  The Y-axis value for this data point.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  A set of findings that applies to assets destined for Compute Engine.
 */
@interface GTLRMigrationCenterAPI_ReportSummaryComputeEngineFinding : GTLRObject

/**
 *  Count of assets which were allocated.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allocatedAssetCount;

/** Set of disk types allocated to assets. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allocatedDiskTypes;

/** Set of regions in which the assets were allocated. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allocatedRegions;

/** Distribution of assets based on the Machine Series. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ReportSummaryMachineSeriesAllocation *> *machineSeriesAllocations;

@end


/**
 *  Summary Findings for a specific Group.
 */
@interface GTLRMigrationCenterAPI_ReportSummaryGroupFinding : GTLRObject

/** Summary statistics for all the assets in this group. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ReportSummaryAssetAggregateStats *assetAggregateStats;

/**
 *  Description for the Group.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Display Name for the Group. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  This field is deprecated, do not rely on it having a value.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *overlappingAssetCount GTLR_DEPRECATED;

/** Findings for each of the PreferenceSets for this group. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ReportSummaryGroupPreferenceSetFinding *> *preferenceSetFindings;

@end


/**
 *  Summary Findings for a specific Group/PreferenceSet combination.
 */
@interface GTLRMigrationCenterAPI_ReportSummaryGroupPreferenceSetFinding : GTLRObject

/** A set of findings that applies to Compute Engine machines in the input. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ReportSummaryComputeEngineFinding *computeEngineFinding;

/**
 *  Description for the Preference Set.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Display Name of the Preference Set */
@property(nonatomic, copy, nullable) NSString *displayName;

/** A set of preferences that applies to all machines in the context. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_VirtualMachinePreferences *machinePreferences;

/** Compute monthly cost for this preference set. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Money *monthlyCostCompute;

/** Network Egress monthly cost for this preference set. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Money *monthlyCostNetworkEgress;

/** Licensing monthly cost for this preference set. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Money *monthlyCostOsLicense;

/** Miscellaneous monthly cost for this preference set. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Money *monthlyCostOther;

/** Storage monthly cost for this preference set. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Money *monthlyCostStorage;

/** Total monthly cost for this preference set. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Money *monthlyCostTotal;

/** A set of findings that applies to Sole-Tenant machines in the input. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ReportSummarySoleTenantFinding *soleTenantFinding;

/** A set of findings that applies to VMWare machines in the input. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ReportSummaryVmwareEngineFinding *vmwareEngineFinding;

@end


/**
 *  A Histogram Chart shows a distribution of values into buckets, showing a
 *  count of values which fall into a bucket.
 */
@interface GTLRMigrationCenterAPI_ReportSummaryHistogramChartData : GTLRObject

/**
 *  Buckets in the histogram. There will be `n+1` buckets matching `n` lower
 *  bounds in the request. The first bucket will be from -infinity to the first
 *  bound. Subsequent buckets will be between one bound and the next. The final
 *  bucket will be from the final bound to infinity.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ReportSummaryHistogramChartDataBucket *> *buckets;

@end


/**
 *  A histogram bucket with a lower and upper bound, and a count of items with a
 *  field value between those bounds. The lower bound is inclusive and the upper
 *  bound is exclusive. Lower bound may be -infinity and upper bound may be
 *  infinity.
 */
@interface GTLRMigrationCenterAPI_ReportSummaryHistogramChartDataBucket : GTLRObject

/**
 *  Count of items in the bucket.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/**
 *  Lower bound - inclusive.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *lowerBound;

/**
 *  Upper bound - exclusive.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *upperBound;

@end


/**
 *  Represents a data point tracking the count of assets allocated for a
 *  specific Machine Series.
 */
@interface GTLRMigrationCenterAPI_ReportSummaryMachineSeriesAllocation : GTLRObject

/**
 *  Count of assets allocated to this machine series.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allocatedAssetCount;

/** The Machine Series (e.g. "E2", "N2") */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_MachineSeries *machineSeries;

@end


/**
 *  A set of findings that applies to assets destined for Sole-Tenant nodes.
 */
@interface GTLRMigrationCenterAPI_ReportSummarySoleTenantFinding : GTLRObject

/**
 *  Count of assets which are allocated
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allocatedAssetCount;

/** Set of regions in which the assets are allocated */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allocatedRegions;

/** Set of per-nodetype allocation records */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ReportSummarySoleTenantNodeAllocation *> *nodeAllocations;

@end


/**
 *  Represents the assets allocated to a specific Sole-Tenant node type.
 */
@interface GTLRMigrationCenterAPI_ReportSummarySoleTenantNodeAllocation : GTLRObject

/**
 *  Count of assets allocated to these nodes
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allocatedAssetCount;

/** Sole Tenant node type, e.g. "m3-node-128-3904" */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_SoleTenantNodeType *node;

/**
 *  Count of this node type to be provisioned
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nodeCount;

@end


/**
 *  Utilization Chart is a specific type of visualization which displays a
 *  metric classified into "Used" and "Free" buckets.
 */
@interface GTLRMigrationCenterAPI_ReportSummaryUtilizationChartData : GTLRObject

/**
 *  Aggregate value which falls into the "Free" bucket.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *free;

/**
 *  Aggregate value which falls into the "Used" bucket.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *used;

@end


/**
 *  A set of findings that applies to assets destined for VMWare Engine.
 */
@interface GTLRMigrationCenterAPI_ReportSummaryVmwareEngineFinding : GTLRObject

/**
 *  Count of assets which are allocated
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allocatedAssetCount;

/** Set of regions in which the assets were allocated */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allocatedRegions;

/** Set of per-nodetype allocation records */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ReportSummaryVmwareNodeAllocation *> *nodeAllocations;

@end


/**
 *  A VMWare Engine Node
 */
@interface GTLRMigrationCenterAPI_ReportSummaryVmwareNode : GTLRObject

/**
 *  Code to identify VMware Engine node series, e.g. "ve1-standard-72". Based on
 *  the displayName of
 *  cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.nodeTypes
 */
@property(nonatomic, copy, nullable) NSString *code;

@end


/**
 *  Represents assets allocated to a specific VMWare Node type.
 */
@interface GTLRMigrationCenterAPI_ReportSummaryVmwareNodeAllocation : GTLRObject

/**
 *  Count of assets allocated to these nodes
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allocatedAssetCount;

/**
 *  Count of this node type to be provisioned
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nodeCount;

/** VMWare node type, e.g. "ve1-standard-72" */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ReportSummaryVmwareNode *vmwareNode;

@end


/**
 *  A request to run an import job.
 */
@interface GTLRMigrationCenterAPI_RunImportJobRequest : GTLRObject

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

@end


/**
 *  Guest OS running process details.
 */
@interface GTLRMigrationCenterAPI_RunningProcess : GTLRObject

/** Process extended attributes. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_RunningProcess_Attributes *attributes;

/** Process full command line. */
@property(nonatomic, copy, nullable) NSString *cmdline;

/** Process binary path. */
@property(nonatomic, copy, nullable) NSString *exePath;

/**
 *  Process ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pid;

/** User running the process. */
@property(nonatomic, copy, nullable) NSString *user;

@end


/**
 *  Process extended attributes.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRMigrationCenterAPI_RunningProcess_Attributes : GTLRObject
@end


/**
 *  List of running guest OS processes.
 */
@interface GTLRMigrationCenterAPI_RunningProcessList : GTLRObject

/** Running process entries. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_RunningProcess *> *entries;

@end


/**
 *  Guest OS running service details.
 */
@interface GTLRMigrationCenterAPI_RunningService : GTLRObject

/** Service command line. */
@property(nonatomic, copy, nullable) NSString *cmdline;

/** Service binary path. */
@property(nonatomic, copy, nullable) NSString *exePath;

/**
 *  Service pid.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pid;

/** Service name. */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  Service start mode (OS-agnostic).
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_RunningService_StartMode_Auto The service
 *        is started by the operating system, at system start-up (Value: "AUTO")
 *    @arg @c kGTLRMigrationCenterAPI_RunningService_StartMode_Boot The service
 *        is a device driver started by the system loader. (Value: "BOOT")
 *    @arg @c kGTLRMigrationCenterAPI_RunningService_StartMode_Disabled The
 *        service is disabled. (Value: "DISABLED")
 *    @arg @c kGTLRMigrationCenterAPI_RunningService_StartMode_Manual The
 *        service is started only manually, by a user. (Value: "MANUAL")
 *    @arg @c kGTLRMigrationCenterAPI_RunningService_StartMode_StartModeUnspecified
 *        Start mode unspecified. (Value: "START_MODE_UNSPECIFIED")
 *    @arg @c kGTLRMigrationCenterAPI_RunningService_StartMode_System The
 *        service is a device driver started by the IOInitSystem function.
 *        (Value: "SYSTEM")
 */
@property(nonatomic, copy, nullable) NSString *startMode;

/**
 *  Service state (OS-agnostic).
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_RunningService_State_Active Service is
 *        active. (Value: "ACTIVE")
 *    @arg @c kGTLRMigrationCenterAPI_RunningService_State_Paused Service is
 *        paused. (Value: "PAUSED")
 *    @arg @c kGTLRMigrationCenterAPI_RunningService_State_StateUnspecified
 *        Service state unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRMigrationCenterAPI_RunningService_State_Stopped Service is
 *        stopped. (Value: "STOPPED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  List of running guest OS services.
 */
@interface GTLRMigrationCenterAPI_RunningServiceList : GTLRObject

/** Running service entries. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_RunningService *> *entries;

@end


/**
 *  Runtime networking information.
 */
@interface GTLRMigrationCenterAPI_RuntimeNetworkInfo : GTLRObject

/** Network connections. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_NetworkConnectionList *connections;

/** Time of the last network scan. */
@property(nonatomic, strong, nullable) GTLRDateTime *scanTime;

@end


/**
 *  A request to send a discovery client heartbeat.
 */
@interface GTLRMigrationCenterAPI_SendDiscoveryClientHeartbeatRequest : GTLRObject

/** Optional. Errors affecting client functionality. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_Status *> *errors;

/** Optional. Client application version. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Describes the Migration Center settings related to the project.
 */
@interface GTLRMigrationCenterAPI_Settings : GTLRObject

/**
 *  Disable Cloud Logging for the Migration Center API. Users are billed for the
 *  logs.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableCloudLogging;

/** Output only. The name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The preference set used by default for a project. */
@property(nonatomic, copy, nullable) NSString *preferenceSet;

@end


/**
 *  Preferences concerning Sole Tenancy nodes and VMs.
 */
@interface GTLRMigrationCenterAPI_SoleTenancyPreferences : GTLRObject

/**
 *  Commitment plan to consider when calculating costs for virtual machine
 *  insights and recommendations. If you are unsure which value to set, a 3 year
 *  commitment plan is often a good value to start with.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_SoleTenancyPreferences_CommitmentPlan_Commitment1Year
 *        1 year commitment. (Value: "COMMITMENT_1_YEAR")
 *    @arg @c kGTLRMigrationCenterAPI_SoleTenancyPreferences_CommitmentPlan_Commitment3Year
 *        3 years commitment. (Value: "COMMITMENT_3_YEAR")
 *    @arg @c kGTLRMigrationCenterAPI_SoleTenancyPreferences_CommitmentPlan_CommitmentPlanUnspecified
 *        Unspecified commitment plan. (Value: "COMMITMENT_PLAN_UNSPECIFIED")
 *    @arg @c kGTLRMigrationCenterAPI_SoleTenancyPreferences_CommitmentPlan_OnDemand
 *        No commitment plan (on-demand usage). (Value: "ON_DEMAND")
 */
@property(nonatomic, copy, nullable) NSString *commitmentPlan;

/**
 *  CPU overcommit ratio. Acceptable values are between 1.0 and 2.0 inclusive.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cpuOvercommitRatio;

/**
 *  Sole Tenancy nodes maintenance policy.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_SoleTenancyPreferences_HostMaintenancePolicy_HostMaintenancePolicyDefault
 *        Default host maintenance policy. (Value:
 *        "HOST_MAINTENANCE_POLICY_DEFAULT")
 *    @arg @c kGTLRMigrationCenterAPI_SoleTenancyPreferences_HostMaintenancePolicy_HostMaintenancePolicyMigrateWithinNodeGroup
 *        Migrate within node group host maintenance policy. (Value:
 *        "HOST_MAINTENANCE_POLICY_MIGRATE_WITHIN_NODE_GROUP")
 *    @arg @c kGTLRMigrationCenterAPI_SoleTenancyPreferences_HostMaintenancePolicy_HostMaintenancePolicyRestartInPlace
 *        Restart in place host maintenance policy. (Value:
 *        "HOST_MAINTENANCE_POLICY_RESTART_IN_PLACE")
 *    @arg @c kGTLRMigrationCenterAPI_SoleTenancyPreferences_HostMaintenancePolicy_HostMaintenancePolicyUnspecified
 *        Unspecified host maintenance policy. (Value:
 *        "HOST_MAINTENANCE_POLICY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *hostMaintenancePolicy;

/**
 *  A list of sole tenant node types. An empty list means that all possible node
 *  types will be considered.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_SoleTenantNodeType *> *nodeTypes;

@end


/**
 *  A Sole Tenant node type.
 */
@interface GTLRMigrationCenterAPI_SoleTenantNodeType : GTLRObject

/**
 *  Name of the Sole Tenant node. Consult
 *  https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes
 */
@property(nonatomic, copy, nullable) NSString *nodeName;

@end


/**
 *  Source represents an object from which asset information is streamed to
 *  Migration Center.
 */
@interface GTLRMigrationCenterAPI_Source : GTLRObject

/** Output only. The timestamp when the source was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Free-text description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** User-friendly display name. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The number of frames that were reported by the source and
 *  contained errors.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *errorFrameCount;

/**
 *  If `true`, the source is managed by other service(s).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *managed;

/** Output only. The full name of the source. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Number of frames that are still being processed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pendingFrameCount;

/**
 *  The information confidence of the source. The higher the value, the higher
 *  the confidence.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priority;

/**
 *  Output only. The state of the source.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_Source_State_Active The source is active
 *        and ready to be used. (Value: "ACTIVE")
 *    @arg @c kGTLRMigrationCenterAPI_Source_State_Deleting In the process of
 *        being deleted. (Value: "DELETING")
 *    @arg @c kGTLRMigrationCenterAPI_Source_State_Invalid Source is in an
 *        invalid state. Asset frames reported to it will be ignored. (Value:
 *        "INVALID")
 *    @arg @c kGTLRMigrationCenterAPI_Source_State_StateUnspecified Unspecified.
 *        (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Data source type.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_Source_Type_SourceTypeCustom Third-party
 *        owned sources. (Value: "SOURCE_TYPE_CUSTOM")
 *    @arg @c kGTLRMigrationCenterAPI_Source_Type_SourceTypeDiscoveryClient
 *        Discovery clients (Value: "SOURCE_TYPE_DISCOVERY_CLIENT")
 *    @arg @c kGTLRMigrationCenterAPI_Source_Type_SourceTypeGuestOsScan
 *        Guest-level info (Value: "SOURCE_TYPE_GUEST_OS_SCAN")
 *    @arg @c kGTLRMigrationCenterAPI_Source_Type_SourceTypeInventoryScan
 *        Inventory-level scan (Value: "SOURCE_TYPE_INVENTORY_SCAN")
 *    @arg @c kGTLRMigrationCenterAPI_Source_Type_SourceTypeUnknown Unspecified
 *        (Value: "SOURCE_TYPE_UNKNOWN")
 *    @arg @c kGTLRMigrationCenterAPI_Source_Type_SourceTypeUpload Manually
 *        uploaded file (e.g. CSV) (Value: "SOURCE_TYPE_UPLOAD")
 */
@property(nonatomic, copy, nullable) NSString *type;

/** Output only. The timestamp when the source was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRMigrationCenterAPI_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRMigrationCenterAPI_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRMigrationCenterAPI_Status_Details_Item : GTLRObject
@end


/**
 *  A request to update an asset.
 */
@interface GTLRMigrationCenterAPI_UpdateAssetRequest : GTLRObject

/** Required. The resource being updated. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_Asset *asset;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  `Asset` resource by the update. The values specified in the `update_mask`
 *  field are relative to the resource, not the full request. A field will be
 *  overwritten if it is in the mask. A single * value in the mask lets you to
 *  overwrite all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  A resource that contains a URI to which a data file can be uploaded.
 */
@interface GTLRMigrationCenterAPI_UploadFileInfo : GTLRObject

/** Output only. The headers that were used to sign the URI. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_UploadFileInfo_Headers *headers;

/** Output only. Upload URI for the file. */
@property(nonatomic, copy, nullable) NSString *signedUri;

/** Output only. Expiration time of the upload URI. */
@property(nonatomic, strong, nullable) GTLRDateTime *uriExpirationTime;

@end


/**
 *  Output only. The headers that were used to sign the URI.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRMigrationCenterAPI_UploadFileInfo_Headers : GTLRObject
@end


/**
 *  A request to validate an import job.
 */
@interface GTLRMigrationCenterAPI_ValidateImportJobRequest : GTLRObject

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

@end


/**
 *  A resource that aggregates errors across import job files.
 */
@interface GTLRMigrationCenterAPI_ValidationReport : GTLRObject

/** List of errors found in files. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_FileValidationReport *> *fileValidations;

/** List of job level errors. */
@property(nonatomic, strong, nullable) NSArray<GTLRMigrationCenterAPI_ImportError *> *jobErrors;

@end


/**
 *  VirtualMachinePreferences enables you to create sets of assumptions, for
 *  example, a geographical location and pricing track, for your migrated
 *  virtual machines. The set of preferences influence recommendations for
 *  migrating virtual machine assets.
 */
@interface GTLRMigrationCenterAPI_VirtualMachinePreferences : GTLRObject

/**
 *  Commitment plan to consider when calculating costs for virtual machine
 *  insights and recommendations. If you are unsure which value to set, a 3 year
 *  commitment plan is often a good value to start with.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_VirtualMachinePreferences_CommitmentPlan_CommitmentPlanNone
 *        No commitment plan. (Value: "COMMITMENT_PLAN_NONE")
 *    @arg @c kGTLRMigrationCenterAPI_VirtualMachinePreferences_CommitmentPlan_CommitmentPlanOneYear
 *        1 year commitment. (Value: "COMMITMENT_PLAN_ONE_YEAR")
 *    @arg @c kGTLRMigrationCenterAPI_VirtualMachinePreferences_CommitmentPlan_CommitmentPlanThreeYears
 *        3 years commitment. (Value: "COMMITMENT_PLAN_THREE_YEARS")
 *    @arg @c kGTLRMigrationCenterAPI_VirtualMachinePreferences_CommitmentPlan_CommitmentPlanUnspecified
 *        Unspecified commitment plan. (Value: "COMMITMENT_PLAN_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *commitmentPlan;

/**
 *  Compute Engine preferences concern insights and recommendations for Compute
 *  Engine target.
 */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_ComputeEnginePreferences *computeEnginePreferences;

/**
 *  Region preferences for assets using this preference set. If you are unsure
 *  which value to set, the migration service API region is often a good value
 *  to start with.
 */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_RegionPreferences *regionPreferences;

/**
 *  Sizing optimization strategy specifies the preferred strategy used when
 *  extrapolating usage data to calculate insights and recommendations for a
 *  virtual machine. If you are unsure which value to set, a moderate sizing
 *  optimization strategy is often a good value to start with.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_VirtualMachinePreferences_SizingOptimizationStrategy_SizingOptimizationStrategyAggressive
 *        Virtual machine sizing will match the reported usage, with little
 *        slack. Using this option can help reduce costs. (Value:
 *        "SIZING_OPTIMIZATION_STRATEGY_AGGRESSIVE")
 *    @arg @c kGTLRMigrationCenterAPI_VirtualMachinePreferences_SizingOptimizationStrategy_SizingOptimizationStrategyModerate
 *        Virtual machine sizing will match the reported usage and shape, with
 *        some slack. This a good value to start with. (Value:
 *        "SIZING_OPTIMIZATION_STRATEGY_MODERATE")
 *    @arg @c kGTLRMigrationCenterAPI_VirtualMachinePreferences_SizingOptimizationStrategy_SizingOptimizationStrategySameAsSource
 *        No optimization applied. Virtual machine sizing matches as closely as
 *        possible the machine shape on the source site, not considering any
 *        actual performance data. (Value:
 *        "SIZING_OPTIMIZATION_STRATEGY_SAME_AS_SOURCE")
 *    @arg @c kGTLRMigrationCenterAPI_VirtualMachinePreferences_SizingOptimizationStrategy_SizingOptimizationStrategyUnspecified
 *        Unspecified (default value). (Value:
 *        "SIZING_OPTIMIZATION_STRATEGY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *sizingOptimizationStrategy;

/** Preferences concerning Sole Tenant nodes and virtual machines. */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_SoleTenancyPreferences *soleTenancyPreferences;

/**
 *  Target product for assets using this preference set. Specify either target
 *  product or business goal, but not both.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_VirtualMachinePreferences_TargetProduct_ComputeMigrationTargetProductComputeEngine
 *        Prefer to migrate to Google Cloud Compute Engine. (Value:
 *        "COMPUTE_MIGRATION_TARGET_PRODUCT_COMPUTE_ENGINE")
 *    @arg @c kGTLRMigrationCenterAPI_VirtualMachinePreferences_TargetProduct_ComputeMigrationTargetProductSoleTenancy
 *        Prefer to migrate to Google Cloud Sole Tenant Nodes. (Value:
 *        "COMPUTE_MIGRATION_TARGET_PRODUCT_SOLE_TENANCY")
 *    @arg @c kGTLRMigrationCenterAPI_VirtualMachinePreferences_TargetProduct_ComputeMigrationTargetProductUnspecified
 *        Unspecified (default value). (Value:
 *        "COMPUTE_MIGRATION_TARGET_PRODUCT_UNSPECIFIED")
 *    @arg @c kGTLRMigrationCenterAPI_VirtualMachinePreferences_TargetProduct_ComputeMigrationTargetProductVmwareEngine
 *        Prefer to migrate to Google Cloud VMware Engine. (Value:
 *        "COMPUTE_MIGRATION_TARGET_PRODUCT_VMWARE_ENGINE")
 */
@property(nonatomic, copy, nullable) NSString *targetProduct;

/**
 *  Preferences concerning insights and recommendations for Google Cloud VMware
 *  Engine.
 */
@property(nonatomic, strong, nullable) GTLRMigrationCenterAPI_VmwareEnginePreferences *vmwareEnginePreferences;

@end


/**
 *  VMware disk config details.
 */
@interface GTLRMigrationCenterAPI_VmwareDiskConfig : GTLRObject

/**
 *  VMDK backing type.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeFlatV1
 *        Flat v1. (Value: "BACKING_TYPE_FLAT_V1")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeFlatV2
 *        Flat v2. (Value: "BACKING_TYPE_FLAT_V2")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypePmem
 *        Persistent memory, also known as Non-Volatile Memory (NVM). (Value:
 *        "BACKING_TYPE_PMEM")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeRdmV1
 *        Raw Disk Memory v1. (Value: "BACKING_TYPE_RDM_V1")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeRdmV2
 *        Raw Disk Memory v2. (Value: "BACKING_TYPE_RDM_V2")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeSesparse
 *        SEsparse is a snapshot format introduced in vSphere 5.5 for large
 *        disks. (Value: "BACKING_TYPE_SESPARSE")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeSesparseV1
 *        SEsparse v1. (Value: "BACKING_TYPE_SESPARSE_V1")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeSesparseV2
 *        SEsparse v1. (Value: "BACKING_TYPE_SESPARSE_V2")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_BackingType_BackingTypeUnspecified
 *        Default value. (Value: "BACKING_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *backingType;

/**
 *  RDM compatibility mode.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_RdmCompatibility_PhysicalCompatibility
 *        Physical compatibility mode. (Value: "PHYSICAL_COMPATIBILITY")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_RdmCompatibility_RdmCompatibilityUnspecified
 *        Compatibility mode unspecified or unknown. (Value:
 *        "RDM_COMPATIBILITY_UNSPECIFIED")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_RdmCompatibility_VirtualCompatibility
 *        Virtual compatibility mode. (Value: "VIRTUAL_COMPATIBILITY")
 */
@property(nonatomic, copy, nullable) NSString *rdmCompatibility;

/**
 *  Is VMDK shared with other VMs.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shared;

/**
 *  VMDK disk mode.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_VmdkMode_Dependent
 *        Dependent disk mode. (Value: "DEPENDENT")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_VmdkMode_IndependentNonpersistent
 *        Independent - Nonpersistent disk mode. (Value:
 *        "INDEPENDENT_NONPERSISTENT")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_VmdkMode_IndependentPersistent
 *        Independent - Persistent disk mode. (Value: "INDEPENDENT_PERSISTENT")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareDiskConfig_VmdkMode_VmdkModeUnspecified
 *        VMDK disk mode unspecified or unknown. (Value:
 *        "VMDK_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *vmdkMode;

@end


/**
 *  The user preferences relating to Google Cloud VMware Engine target platform.
 */
@interface GTLRMigrationCenterAPI_VmwareEnginePreferences : GTLRObject

/**
 *  Commitment plan to consider when calculating costs for virtual machine
 *  insights and recommendations. If you are unsure which value to set, a 3 year
 *  commitment plan is often a good value to start with.
 *
 *  Likely values:
 *    @arg @c kGTLRMigrationCenterAPI_VmwareEnginePreferences_CommitmentPlan_Commitment1YearMonthlyPayments
 *        1 year commitment (monthly payments). (Value:
 *        "COMMITMENT_1_YEAR_MONTHLY_PAYMENTS")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareEnginePreferences_CommitmentPlan_Commitment1YearUpfrontPayment
 *        1 year commitment (upfront payment). (Value:
 *        "COMMITMENT_1_YEAR_UPFRONT_PAYMENT")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareEnginePreferences_CommitmentPlan_Commitment3YearMonthlyPayments
 *        3 year commitment (monthly payments). (Value:
 *        "COMMITMENT_3_YEAR_MONTHLY_PAYMENTS")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareEnginePreferences_CommitmentPlan_Commitment3YearUpfrontPayment
 *        3 years commitment (upfront payment). (Value:
 *        "COMMITMENT_3_YEAR_UPFRONT_PAYMENT")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareEnginePreferences_CommitmentPlan_CommitmentPlanUnspecified
 *        Unspecified commitment plan. (Value: "COMMITMENT_PLAN_UNSPECIFIED")
 *    @arg @c kGTLRMigrationCenterAPI_VmwareEnginePreferences_CommitmentPlan_OnDemand
 *        No commitment plan (on-demand usage). (Value: "ON_DEMAND")
 */
@property(nonatomic, copy, nullable) NSString *commitmentPlan;

/**
 *  CPU overcommit ratio. Acceptable values are between 1.0 and 8.0, with 0.1
 *  increment.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cpuOvercommitRatio;

/**
 *  Memory overcommit ratio. Acceptable values are 1.0, 1.25, 1.5, 1.75 and 2.0.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *memoryOvercommitRatio;

/**
 *  The Deduplication and Compression ratio is based on the logical (Used
 *  Before) space required to store data before applying deduplication and
 *  compression, in relation to the physical (Used After) space required after
 *  applying deduplication and compression. Specifically, the ratio is the Used
 *  Before space divided by the Used After space. For example, if the Used
 *  Before space is 3 GB, but the physical Used After space is 1 GB, the
 *  deduplication and compression ratio is 3x. Acceptable values are between 1.0
 *  and 4.0.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *storageDeduplicationCompressionRatio;

@end


/**
 *  VMware specific details.
 */
@interface GTLRMigrationCenterAPI_VmwarePlatformDetails : GTLRObject

/** ESX version. */
@property(nonatomic, copy, nullable) NSString *esxVersion;

/**
 *  VMware os enum -
 *  https://vdc-repo.vmware.com/vmwb-repository/dcr-public/da47f910-60ac-438b-8b9b-6122f4d14524/16b7274a-bf8b-4b4c-a05e-746f2aa93c8c/doc/vim.vm.GuestOsDescriptor.GuestOsIdentifier.html.
 */
@property(nonatomic, copy, nullable) NSString *osid;

/** Folder name in vCenter where asset resides. */
@property(nonatomic, copy, nullable) NSString *vcenterFolder;

/** vCenter URI used in collection. */
@property(nonatomic, copy, nullable) NSString *vcenterUri;

/** vCenter version. */
@property(nonatomic, copy, nullable) NSString *vcenterVersion;

/** vCenter VM ID. */
@property(nonatomic, copy, nullable) NSString *vcenterVmId;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
