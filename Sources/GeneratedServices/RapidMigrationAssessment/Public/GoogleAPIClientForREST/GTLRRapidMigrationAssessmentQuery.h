// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Rapid Migration Assessment API (rapidmigrationassessment/v1)
// Description:
//   The Rapid Migration Assessment service is our first-party migration
//   assessment and planning tool.
// Documentation:
//   https://cloud.google.com/migration-center

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRRapidMigrationAssessmentObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Rapid Migration Assessment query classes.
 */
@interface GTLRRapidMigrationAssessmentQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates an Annotation
 *
 *  Method: rapidmigrationassessment.projects.locations.annotations.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsAnnotationsCreate : GTLRRapidMigrationAssessmentQuery

/** Required. Name of the parent (project+location). */
@property(nonatomic, copy, nullable) NSString *parent;

/** Optional. An optional request ID to identify requests. */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_Operation.
 *
 *  Creates an Annotation
 *
 *  @param object The @c GTLRRapidMigrationAssessment_Annotation to include in
 *    the query.
 *  @param parent Required. Name of the parent (project+location).
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsAnnotationsCreate
 */
+ (instancetype)queryWithObject:(GTLRRapidMigrationAssessment_Annotation *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets details of a single Annotation.
 *
 *  Method: rapidmigrationassessment.projects.locations.annotations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsAnnotationsGet : GTLRRapidMigrationAssessmentQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_Annotation.
 *
 *  Gets details of a single Annotation.
 *
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsAnnotationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Create a Collector to manage the on-prem appliance which collects
 *  information about Customer assets.
 *
 *  Method: rapidmigrationassessment.projects.locations.collectors.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsCreate : GTLRRapidMigrationAssessmentQuery

/** Required. Id of the requesting object. */
@property(nonatomic, copy, nullable) NSString *collectorId;

/** Required. Name of the parent (project+location). */
@property(nonatomic, copy, nullable) NSString *parent;

/** Optional. An optional request ID to identify requests. */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_Operation.
 *
 *  Create a Collector to manage the on-prem appliance which collects
 *  information about Customer assets.
 *
 *  @param object The @c GTLRRapidMigrationAssessment_Collector to include in
 *    the query.
 *  @param parent Required. Name of the parent (project+location).
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsCreate
 */
+ (instancetype)queryWithObject:(GTLRRapidMigrationAssessment_Collector *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Collector - changes state of collector to "Deleting".
 *  Background jobs does final deletion thorugh producer api.
 *
 *  Method: rapidmigrationassessment.projects.locations.collectors.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsDelete : GTLRRapidMigrationAssessmentQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_Operation.
 *
 *  Deletes a single Collector - changes state of collector to "Deleting".
 *  Background jobs does final deletion thorugh producer api.
 *
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single Collector.
 *
 *  Method: rapidmigrationassessment.projects.locations.collectors.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsGet : GTLRRapidMigrationAssessmentQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_Collector.
 *
 *  Gets details of a single Collector.
 *
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Collectors in a given project and location.
 *
 *  Method: rapidmigrationassessment.projects.locations.collectors.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsList : GTLRRapidMigrationAssessmentQuery

/** Filtering results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Hint for how to order the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Requested page size. Server may return fewer items than requested. If
 *  unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** A token identifying a page of results the server should return. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Parent value for ListCollectorsRequest. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_ListCollectorsResponse.
 *
 *  Lists Collectors in a given project and location.
 *
 *  @param parent Required. Parent value for ListCollectorsRequest.
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single Collector.
 *
 *  Method: rapidmigrationassessment.projects.locations.collectors.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsPatch : GTLRRapidMigrationAssessmentQuery

/** name of resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Field mask is used to specify the fields to be overwritten in the
 *  Collector resource by the update. The fields specified in the update_mask
 *  are relative to the resource, not the full request. A field will be
 *  overwritten if it is in the mask. If the user does not provide a mask then
 *  all fields will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_Operation.
 *
 *  Updates the parameters of a single Collector.
 *
 *  @param object The @c GTLRRapidMigrationAssessment_Collector to include in
 *    the query.
 *  @param name name of resource.
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsPatch
 */
+ (instancetype)queryWithObject:(GTLRRapidMigrationAssessment_Collector *)object
                           name:(NSString *)name;

@end

/**
 *  Pauses the given collector.
 *
 *  Method: rapidmigrationassessment.projects.locations.collectors.pause
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsPause : GTLRRapidMigrationAssessmentQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_Operation.
 *
 *  Pauses the given collector.
 *
 *  @param object The @c GTLRRapidMigrationAssessment_PauseCollectorRequest to
 *    include in the query.
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsPause
 */
+ (instancetype)queryWithObject:(GTLRRapidMigrationAssessment_PauseCollectorRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Registers the given collector.
 *
 *  Method: rapidmigrationassessment.projects.locations.collectors.register
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsRegister : GTLRRapidMigrationAssessmentQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_Operation.
 *
 *  Registers the given collector.
 *
 *  @param object The @c GTLRRapidMigrationAssessment_RegisterCollectorRequest
 *    to include in the query.
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsRegister
 */
+ (instancetype)queryWithObject:(GTLRRapidMigrationAssessment_RegisterCollectorRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Resumes the given collector.
 *
 *  Method: rapidmigrationassessment.projects.locations.collectors.resume
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsResume : GTLRRapidMigrationAssessmentQuery

/** Required. Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_Operation.
 *
 *  Resumes the given collector.
 *
 *  @param object The @c GTLRRapidMigrationAssessment_ResumeCollectorRequest to
 *    include in the query.
 *  @param name Required. Name of the resource.
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsCollectorsResume
 */
+ (instancetype)queryWithObject:(GTLRRapidMigrationAssessment_ResumeCollectorRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets information about a location.
 *
 *  Method: rapidmigrationassessment.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsGet : GTLRRapidMigrationAssessmentQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: rapidmigrationassessment.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsList : GTLRRapidMigrationAssessmentQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: rapidmigrationassessment.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsOperationsCancel : GTLRRapidMigrationAssessmentQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRRapidMigrationAssessment_CancelOperationRequest to
 *    include in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRRapidMigrationAssessment_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: rapidmigrationassessment.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsOperationsDelete : GTLRRapidMigrationAssessmentQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: rapidmigrationassessment.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsOperationsGet : GTLRRapidMigrationAssessmentQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: rapidmigrationassessment.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeRapidMigrationAssessmentCloudPlatform
 */
@interface GTLRRapidMigrationAssessmentQuery_ProjectsLocationsOperationsList : GTLRRapidMigrationAssessmentQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRRapidMigrationAssessment_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRRapidMigrationAssessmentQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
