// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   AdSense Management API (adsense/v2)
// Description:
//   The AdSense Management API allows publishers to access their inventory and
//   run earnings and performance reports.
// Documentation:
//   https://developers.google.com/adsense/management/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRAdsenseObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// dateRange

/**
 *  A custom date range specified using the `start_date` and `end_date` fields.
 *  This is the default if no ReportingDateRange is provided.
 *
 *  Value: "CUSTOM"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDateRangeCustom;
/**
 *  Last 30 days, excluding current day.
 *
 *  Value: "LAST_30_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDateRangeLast30Days;
/**
 *  Last 7 days, excluding current day.
 *
 *  Value: "LAST_7_DAYS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDateRangeLast7Days;
/**
 *  From the start of the current month to the current day. e.g. if the current
 *  date is 2020-03-12 then the range will be [2020-03-01, 2020-03-12].
 *
 *  Value: "MONTH_TO_DATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDateRangeMonthToDate;
/**
 *  Unspecified date range.
 *
 *  Value: "REPORTING_DATE_RANGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDateRangeReportingDateRangeUnspecified;
/**
 *  Current day.
 *
 *  Value: "TODAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDateRangeToday;
/**
 *  From the start of the current year to the current day. e.g. if the current
 *  date is 2020-03-12 then the range will be [2020-01-01, 2020-03-12].
 *
 *  Value: "YEAR_TO_DATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDateRangeYearToDate;
/**
 *  Yesterday.
 *
 *  Value: "YESTERDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDateRangeYesterday;

// ----------------------------------------------------------------------------
// dimensions

/**
 *  Account name. The members of this dimension match the values from
 *  Account.display_name.
 *
 *  Value: "ACCOUNT_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsAccountName;
/**
 *  Unique ID of an ad client. The members of this dimension match the values
 *  from AdClient.reporting_dimension_id.
 *
 *  Value: "AD_CLIENT_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsAdClientId;
/**
 *  Ad format code indicating the way an ad is shown to the users on your site
 *  (e.g. "ON_PAGE", "ANCHOR", "INTERSTITIAL").
 *
 *  Value: "AD_FORMAT_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsAdFormatCode;
/**
 *  Localized ad format name indicating the way an ad is shown to the users on
 *  your site (e.g. "In-page", "Anchor", "Vignette").
 *
 *  Value: "AD_FORMAT_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsAdFormatName;
/**
 *  Ad placement code (e.g. "AD_UNIT", "ca-pub-123456:78910", "OTHER").
 *
 *  Value: "AD_PLACEMENT_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsAdPlacementCode;
/**
 *  Localized ad placement name (e.g. "Ad unit", "Global settings", "Manual").
 *
 *  Value: "AD_PLACEMENT_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsAdPlacementName;
/**
 *  Unique ID of an ad unit (within which an ad was served). The members of this
 *  dimension match the values from AdUnit.reporting_dimension_id.
 *
 *  Value: "AD_UNIT_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsAdUnitId;
/**
 *  Ad unit name (within which an ad was served). The members of this dimension
 *  match the values from AdUnit.display_name.
 *
 *  Value: "AD_UNIT_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsAdUnitName;
/**
 *  The size code of an ad unit (e.g. "728x90", "responsive").
 *
 *  Value: "AD_UNIT_SIZE_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsAdUnitSizeCode;
/**
 *  Localized size of an ad unit (e.g. "728x90", "Responsive").
 *
 *  Value: "AD_UNIT_SIZE_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsAdUnitSizeName;
/**
 *  Type of a bid (e.g. "cpc", "cpm") for a served ad.
 *
 *  Value: "BID_TYPE_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsBidTypeCode;
/**
 *  Localized bid type name (e.g. "CPC bids", "CPM bids") for a served ad.
 *
 *  Value: "BID_TYPE_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsBidTypeName;
/**
 *  Unique (opaque) ID of an ad network that returned the winning ads for an ad
 *  request.
 *
 *  Value: "BUYER_NETWORK_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsBuyerNetworkId;
/**
 *  Name of an ad network that returned the winning ads for an ad request (e.g.
 *  "Google AdWords"). Note that unlike other "NAME" dimensions, the members of
 *  this dimensions are not localized.
 *
 *  Value: "BUYER_NETWORK_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsBuyerNetworkName;
/**
 *  Content platform code an ad request was made from (e.g. "AMP", "HTML").
 *
 *  Value: "CONTENT_PLATFORM_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsContentPlatformCode;
/**
 *  Localized content platform name an ad request was made from (e.g. "AMP",
 *  "Web").
 *
 *  Value: "CONTENT_PLATFORM_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsContentPlatformName;
/**
 *  CLDR region code of a user viewing an ad (e.g. "US", "FR").
 *
 *  Value: "COUNTRY_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsCountryCode;
/**
 *  Localized region name of a user viewing an ad (e.g. "United States",
 *  "France").
 *
 *  Value: "COUNTRY_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsCountryName;
/**
 *  Creative size code (e.g. "728x90", "dynamic") of a served ad.
 *
 *  Value: "CREATIVE_SIZE_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsCreativeSizeCode;
/**
 *  Localized creative size name (e.g. "728x90", "Dynamic") of a served ad.
 *
 *  Value: "CREATIVE_SIZE_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsCreativeSizeName;
/**
 *  Unique ID of a custom channel. The members of this dimension match the
 *  values from CustomChannel.reporting_dimension_id.
 *
 *  Value: "CUSTOM_CHANNEL_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsCustomChannelId;
/**
 *  Custom channel name. The members of this dimension match the values from
 *  CustomChannel.display_name.
 *
 *  Value: "CUSTOM_CHANNEL_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsCustomChannelName;
/**
 *  Custom search style id.
 *
 *  Value: "CUSTOM_SEARCH_STYLE_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsCustomSearchStyleId;
/**
 *  Custom search style name.
 *
 *  Value: "CUSTOM_SEARCH_STYLE_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsCustomSearchStyleName;
/**
 *  Date dimension in YYYY-MM-DD format (e.g. "2010-02-10").
 *
 *  Value: "DATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsDate;
/**
 *  Unspecified dimension.
 *
 *  Value: "DIMENSION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsDimensionUnspecified;
/**
 *  Name of a host on which an ad was served (e.g. "www.google.com",
 *  "webcaches", "xn--bcher-kva.example").
 *
 *  Value: "DOMAIN_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsDomainCode;
/**
 *  Localized name of a host on which an ad was served, after IDNA decoding
 *  (e.g. "www.google.com", "Web caches and other", "b√ºcher.example").
 *
 *  Value: "DOMAIN_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsDomainName;
/**
 *  Domain registrants.
 *
 *  Value: "DOMAIN_REGISTRANT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsDomainRegistrant;
/**
 *  Unique ID of a sub-account's ad client. The members of this dimension match
 *  the values from AdClient.reporting_dimension_id (for the sub-account).
 *
 *  Value: "HOSTED_AD_CLIENT_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsHostedAdClientId;
/**
 *  Month dimension in YYYY-MM format (e.g. "2010-02").
 *
 *  Value: "MONTH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsMonth;
/**
 *  Domain name of a verified site (e.g. "example.com"). The members of this
 *  dimension match the values from Site.domain.
 *
 *  Value: "OWNED_SITE_DOMAIN_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsOwnedSiteDomainName;
/**
 *  Unique ID of a verified site. The members of this dimension match the values
 *  from Site.reporting_dimension_id.
 *
 *  Value: "OWNED_SITE_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsOwnedSiteId;
/**
 *  Platform type code (e.g. "HighEndMobile", "Desktop").
 *
 *  Value: "PLATFORM_TYPE_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsPlatformTypeCode;
/**
 *  Localized platform type name (e.g. "High-end mobile devices", "Desktop").
 *
 *  Value: "PLATFORM_TYPE_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsPlatformTypeName;
/**
 *  Product code (e.g. "AFC", "AFS"). The members of this dimension match the
 *  values from AdClient.product_code.
 *
 *  Value: "PRODUCT_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsProductCode;
/**
 *  Localized product name (e.g. "AdSense for Content", "AdSense for Search").
 *
 *  Value: "PRODUCT_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsProductName;
/**
 *  Requested ad type code (e.g. "IMAGE", "RADLINK", "OTHER").
 *
 *  Value: "REQUESTED_AD_TYPE_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsRequestedAdTypeCode;
/**
 *  Localized requested ad type name (e.g. "Display", "Link unit", "Other").
 *
 *  Value: "REQUESTED_AD_TYPE_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsRequestedAdTypeName;
/**
 *  Served ad type code (e.g. "IMAGE", "RADLINK", "OTHER").
 *
 *  Value: "SERVED_AD_TYPE_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsServedAdTypeCode;
/**
 *  Localized served ad type name (e.g. "Display", "Link unit", "Other").
 *
 *  Value: "SERVED_AD_TYPE_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsServedAdTypeName;
/**
 *  Targeting type code (e.g. "Keyword", "UserInterest", "RunOfNetwork").
 *
 *  Value: "TARGETING_TYPE_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsTargetingTypeCode;
/**
 *  Localized targeting type name (e.g. "Contextual", "Personalized", "Run of
 *  Network").
 *
 *  Value: "TARGETING_TYPE_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsTargetingTypeName;
/**
 *  Unique ID of a URL channel. The members of this dimension match the values
 *  from UrlChannel.reporting_dimension_id.
 *
 *  Value: "URL_CHANNEL_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsUrlChannelId;
/**
 *  Name of a URL channel. The members of this dimension match the values from
 *  UrlChannel.uri_pattern.
 *
 *  Value: "URL_CHANNEL_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsUrlChannelName;
/**
 *  Query strings for web searches.
 *
 *  Value: "WEBSEARCH_QUERY_STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsWebsearchQueryString;
/**
 *  Week dimension in YYYY-MM-DD format, representing the first day of each week
 *  (e.g. "2010-02-08"). The first day of the week is determined by the
 *  language_code specified in a report generation request (so e.g. this would
 *  be a Monday for "en-GB" or "es", but a Sunday for "en" or "fr-CA").
 *
 *  Value: "WEEK"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseDimensionsWeek;

// ----------------------------------------------------------------------------
// metrics

/**
 *  Ratio of requests that were measurable for viewability.
 *
 *  Value: "ACTIVE_VIEW_MEASURABILITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsActiveViewMeasurability;
/**
 *  Mean time an ad was displayed on screen.
 *
 *  Value: "ACTIVE_VIEW_TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsActiveViewTime;
/**
 *  Ratio of requests that were viewable.
 *
 *  Value: "ACTIVE_VIEW_VIEWABILITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsActiveViewViewability;
/**
 *  Number of ad units that requested ads (for content ads) or search queries
 *  (for search ads). An ad request may result in zero, one, or multiple
 *  individual ad impressions depending on the size of the ad unit and whether
 *  any ads were available.
 *
 *  Value: "AD_REQUESTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsAdRequests;
/**
 *  Ratio of requested ad units or queries to the number returned to the site.
 *
 *  Value: "AD_REQUESTS_COVERAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsAdRequestsCoverage;
/**
 *  Ratio of ad requests that resulted in a click.
 *
 *  Value: "AD_REQUESTS_CTR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsAdRequestsCtr;
/**
 *  Revenue per thousand ad requests. This is calculated by dividing estimated
 *  revenue by the number of ad requests multiplied by 1000.
 *
 *  Value: "AD_REQUESTS_RPM"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsAdRequestsRpm;
/**
 *  Fraction of ad requests considered to be spam. Only available to premium
 *  accounts.
 *
 *  Value: "AD_REQUESTS_SPAM_RATIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsAdRequestsSpamRatio;
/**
 *  Number of ad views per impression.
 *
 *  Value: "ADS_PER_IMPRESSION"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsAdsPerImpression;
/**
 *  Number of times a user clicked on a standard content ad.
 *
 *  Value: "CLICKS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsClicks;
/**
 *  Fraction of clicks considered to be spam. Only available to premium
 *  accounts.
 *
 *  Value: "CLICKS_SPAM_RATIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsClicksSpamRatio;
/**
 *  Amount the publisher earns each time a user clicks on an ad. CPC is
 *  calculated by dividing the estimated revenue by the number of clicks
 *  received.
 *
 *  Value: "COST_PER_CLICK"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsCostPerClick;
/**
 *  Estimated earnings of the publisher. Note that earnings up to yesterday are
 *  accurate, more recent earnings are estimated due to the possibility of spam,
 *  or exchange rate fluctuations.
 *
 *  Value: "ESTIMATED_EARNINGS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsEstimatedEarnings;
/**
 *  Impressions. An impression is counted for each ad request where at least one
 *  ad has been downloaded to the user‚Äôs device and has begun to load. It is the
 *  number of ad units (for content ads) or search queries (for search ads) that
 *  showed ads.
 *
 *  Value: "IMPRESSIONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsImpressions;
/**
 *  Ratio of IMPRESSIONS that resulted in a click.
 *
 *  Value: "IMPRESSIONS_CTR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsImpressionsCtr;
/**
 *  Revenue per thousand ad impressions. This is calculated by dividing
 *  estimated revenue by the number of ad impressions multiplied by 1000.
 *
 *  Value: "IMPRESSIONS_RPM"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsImpressionsRpm;
/**
 *  Fraction of impressions considered to be spam. Only available to premium
 *  accounts.
 *
 *  Value: "IMPRESSIONS_SPAM_RATIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsImpressionsSpamRatio;
/**
 *  Ads shown. Different ad formats will display varying numbers of ads. For
 *  example, a vertical banner may consist of 2 or more ads. Also, the number of
 *  ads in an ad unit may vary depending on whether the ad unit is displaying
 *  standard text ads, expanded text ads or image ads.
 *
 *  Value: "INDIVIDUAL_AD_IMPRESSIONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsIndividualAdImpressions;
/**
 *  Ratio of individual ad impressions that resulted in a click.
 *
 *  Value: "INDIVIDUAL_AD_IMPRESSIONS_CTR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsIndividualAdImpressionsCtr;
/**
 *  Revenue per thousand individual ad impressions. This is calculated by
 *  dividing estimated revenue by the number of individual ad impressions
 *  multiplied by 1000.
 *
 *  Value: "INDIVIDUAL_AD_IMPRESSIONS_RPM"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsIndividualAdImpressionsRpm;
/**
 *  Fraction of ad impressions considered to be spam. Only available to premium
 *  accounts.
 *
 *  Value: "INDIVIDUAL_AD_IMPRESSIONS_SPAM_RATIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsIndividualAdImpressionsSpamRatio;
/**
 *  Requests that returned at least one ad.
 *
 *  Value: "MATCHED_AD_REQUESTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsMatchedAdRequests;
/**
 *  Ratio of clicks to matched requests.
 *
 *  Value: "MATCHED_AD_REQUESTS_CTR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsMatchedAdRequestsCtr;
/**
 *  Revenue per thousand matched ad requests. This is calculated by dividing
 *  estimated revenue by the number of matched ad requests multiplied by 1000.
 *
 *  Value: "MATCHED_AD_REQUESTS_RPM"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsMatchedAdRequestsRpm;
/**
 *  Fraction of ad requests that returned ads considered to be spam. Only
 *  available to premium accounts.
 *
 *  Value: "MATCHED_AD_REQUESTS_SPAM_RATIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsMatchedAdRequestsSpamRatio;
/**
 *  Unspecified metric.
 *
 *  Value: "METRIC_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsMetricUnspecified;
/**
 *  Number of page views.
 *
 *  Value: "PAGE_VIEWS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsPageViews;
/**
 *  Ratio of individual page views that resulted in a click.
 *
 *  Value: "PAGE_VIEWS_CTR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsPageViewsCtr;
/**
 *  Revenue per thousand page views. This is calculated by dividing the
 *  estimated revenue by the number of page views multiplied by 1000.
 *
 *  Value: "PAGE_VIEWS_RPM"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsPageViewsRpm;
/**
 *  Fraction of page views considered to be spam. Only available to premium
 *  accounts.
 *
 *  Value: "PAGE_VIEWS_SPAM_RATIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsPageViewsSpamRatio;
/**
 *  Total earnings are the gross estimated earnings from revenue shared traffic
 *  before any parent and child account revenue share is applied.
 *
 *  Value: "TOTAL_EARNINGS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsTotalEarnings;
/**
 *  Impressions. An impression is counted for each ad request where at least one
 *  ad has been downloaded to the user‚Äôs device and has begun to load. It is the
 *  number of ad units (for content ads) or search queries (for search ads) that
 *  showed ads.
 *
 *  Value: "TOTAL_IMPRESSIONS"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsTotalImpressions;
/**
 *  Number of results pages.
 *
 *  Value: "WEBSEARCH_RESULT_PAGES"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseMetricsWebsearchResultPages;

// ----------------------------------------------------------------------------
// reportingTimeZone

/**
 *  Use the account timezone in the report.
 *
 *  Value: "ACCOUNT_TIME_ZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseReportingTimeZoneAccountTimeZone;
/**
 *  Use the Google timezone in the report (America/Los_Angeles).
 *
 *  Value: "GOOGLE_TIME_ZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseReportingTimeZoneGoogleTimeZone;
/**
 *  Unspecified timezone.
 *
 *  Value: "REPORTING_TIME_ZONE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAdsenseReportingTimeZoneReportingTimeZoneUnspecified;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Adsense query classes.
 */
@interface GTLRAdsenseQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates an ad unit. This method can only be used by projects enabled for the
 *  [AdSense for Platforms](https://developers.google.com/adsense/platforms/)
 *  product. Note that ad units can only be created for ad clients with an "AFC"
 *  product code. For more info see the [AdClient
 *  resource](/adsense/management/reference/rest/v2/accounts.adclients). For
 *  now, this method can only be used to create `DISPLAY` ad units. See:
 *  https://support.google.com/adsense/answer/9183566
 *
 *  Method: adsense.accounts.adclients.adunits.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 */
@interface GTLRAdsenseQuery_AccountsAdclientsAdunitsCreate : GTLRAdsenseQuery

/**
 *  Required. Ad client to create an ad unit under. Format:
 *  accounts/{account}/adclients/{adclient}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAdsense_AdUnit.
 *
 *  Creates an ad unit. This method can only be used by projects enabled for the
 *  [AdSense for Platforms](https://developers.google.com/adsense/platforms/)
 *  product. Note that ad units can only be created for ad clients with an "AFC"
 *  product code. For more info see the [AdClient
 *  resource](/adsense/management/reference/rest/v2/accounts.adclients). For
 *  now, this method can only be used to create `DISPLAY` ad units. See:
 *  https://support.google.com/adsense/answer/9183566
 *
 *  @param object The @c GTLRAdsense_AdUnit to include in the query.
 *  @param parent Required. Ad client to create an ad unit under. Format:
 *    accounts/{account}/adclients/{adclient}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsAdunitsCreate
 */
+ (instancetype)queryWithObject:(GTLRAdsense_AdUnit *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets an ad unit from a specified account and ad client.
 *
 *  Method: adsense.accounts.adclients.adunits.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsAdclientsAdunitsGet : GTLRAdsenseQuery

/**
 *  Required. AdUnit to get information about. Format:
 *  accounts/{account}/adclients/{adclient}/adunits/{adunit}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAdsense_AdUnit.
 *
 *  Gets an ad unit from a specified account and ad client.
 *
 *  @param name Required. AdUnit to get information about. Format:
 *    accounts/{account}/adclients/{adclient}/adunits/{adunit}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsAdunitsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the ad unit code for a given ad unit. For more information, see [About
 *  the AdSense code](https://support.google.com/adsense/answer/9274634) and
 *  [Where to place the ad code in your
 *  HTML](https://support.google.com/adsense/answer/9190028).
 *
 *  Method: adsense.accounts.adclients.adunits.getAdcode
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsAdclientsAdunitsGetAdcode : GTLRAdsenseQuery

/**
 *  Required. Name of the adunit for which to get the adcode. Format:
 *  accounts/{account}/adclients/{adclient}/adunits/{adunit}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAdsense_AdUnitAdCode.
 *
 *  Gets the ad unit code for a given ad unit. For more information, see [About
 *  the AdSense code](https://support.google.com/adsense/answer/9274634) and
 *  [Where to place the ad code in your
 *  HTML](https://support.google.com/adsense/answer/9190028).
 *
 *  @param name Required. Name of the adunit for which to get the adcode.
 *    Format: accounts/{account}/adclients/{adclient}/adunits/{adunit}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsAdunitsGetAdcode
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all ad units under a specified account and ad client.
 *
 *  Method: adsense.accounts.adclients.adunits.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsAdclientsAdunitsList : GTLRAdsenseQuery

/**
 *  The maximum number of ad units to include in the response, used for paging.
 *  If unspecified, at most 10000 ad units will be returned. The maximum value
 *  is 10000; values above 10000 will be coerced to 10000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListAdUnits` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListAdUnits` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The ad client which owns the collection of ad units. Format:
 *  accounts/{account}/adclients/{adclient}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAdsense_ListAdUnitsResponse.
 *
 *  Lists all ad units under a specified account and ad client.
 *
 *  @param parent Required. The ad client which owns the collection of ad units.
 *    Format: accounts/{account}/adclients/{adclient}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsAdunitsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists all the custom channels available for an ad unit.
 *
 *  Method: adsense.accounts.adclients.adunits.listLinkedCustomChannels
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsAdclientsAdunitsListLinkedCustomChannels : GTLRAdsenseQuery

/**
 *  The maximum number of custom channels to include in the response, used for
 *  paging. If unspecified, at most 10000 custom channels will be returned. The
 *  maximum value is 10000; values above 10000 will be coerced to 10000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListLinkedCustomChannels` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListLinkedCustomChannels` must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The ad unit which owns the collection of custom channels. Format:
 *  accounts/{account}/adclients/{adclient}/adunits/{adunit}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAdsense_ListLinkedCustomChannelsResponse.
 *
 *  Lists all the custom channels available for an ad unit.
 *
 *  @param parent Required. The ad unit which owns the collection of custom
 *    channels. Format: accounts/{account}/adclients/{adclient}/adunits/{adunit}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsAdunitsListLinkedCustomChannels
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an ad unit. This method can only be used by projects enabled for the
 *  [AdSense for Platforms](https://developers.google.com/adsense/platforms/)
 *  product. For now, this method can only be used to update `DISPLAY` ad units.
 *  See: https://support.google.com/adsense/answer/9183566
 *
 *  Method: adsense.accounts.adclients.adunits.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 */
@interface GTLRAdsenseQuery_AccountsAdclientsAdunitsPatch : GTLRAdsenseQuery

/**
 *  Output only. Resource name of the ad unit. Format:
 *  accounts/{account}/adclients/{adclient}/adunits/{adunit}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to update. If empty, a full update is performed.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAdsense_AdUnit.
 *
 *  Updates an ad unit. This method can only be used by projects enabled for the
 *  [AdSense for Platforms](https://developers.google.com/adsense/platforms/)
 *  product. For now, this method can only be used to update `DISPLAY` ad units.
 *  See: https://support.google.com/adsense/answer/9183566
 *
 *  @param object The @c GTLRAdsense_AdUnit to include in the query.
 *  @param name Output only. Resource name of the ad unit. Format:
 *    accounts/{account}/adclients/{adclient}/adunits/{adunit}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsAdunitsPatch
 */
+ (instancetype)queryWithObject:(GTLRAdsense_AdUnit *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a custom channel. This method can only be used by projects enabled
 *  for the [AdSense for
 *  Platforms](https://developers.google.com/adsense/platforms/) product.
 *
 *  Method: adsense.accounts.adclients.customchannels.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 */
@interface GTLRAdsenseQuery_AccountsAdclientsCustomchannelsCreate : GTLRAdsenseQuery

/**
 *  Required. The ad client to create a custom channel under. Format:
 *  accounts/{account}/adclients/{adclient}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAdsense_CustomChannel.
 *
 *  Creates a custom channel. This method can only be used by projects enabled
 *  for the [AdSense for
 *  Platforms](https://developers.google.com/adsense/platforms/) product.
 *
 *  @param object The @c GTLRAdsense_CustomChannel to include in the query.
 *  @param parent Required. The ad client to create a custom channel under.
 *    Format: accounts/{account}/adclients/{adclient}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsCustomchannelsCreate
 */
+ (instancetype)queryWithObject:(GTLRAdsense_CustomChannel *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a custom channel. This method can only be used by projects enabled
 *  for the [AdSense for
 *  Platforms](https://developers.google.com/adsense/platforms/) product.
 *
 *  Method: adsense.accounts.adclients.customchannels.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 */
@interface GTLRAdsenseQuery_AccountsAdclientsCustomchannelsDelete : GTLRAdsenseQuery

/**
 *  Required. Name of the custom channel to delete. Format:
 *  accounts/{account}/adclients/{adclient}/customchannels/{customchannel}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAdsense_Empty.
 *
 *  Deletes a custom channel. This method can only be used by projects enabled
 *  for the [AdSense for
 *  Platforms](https://developers.google.com/adsense/platforms/) product.
 *
 *  @param name Required. Name of the custom channel to delete. Format:
 *    accounts/{account}/adclients/{adclient}/customchannels/{customchannel}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsCustomchannelsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets information about the selected custom channel.
 *
 *  Method: adsense.accounts.adclients.customchannels.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsAdclientsCustomchannelsGet : GTLRAdsenseQuery

/**
 *  Required. Name of the custom channel. Format:
 *  accounts/{account}/adclients/{adclient}/customchannels/{customchannel}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAdsense_CustomChannel.
 *
 *  Gets information about the selected custom channel.
 *
 *  @param name Required. Name of the custom channel. Format:
 *    accounts/{account}/adclients/{adclient}/customchannels/{customchannel}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsCustomchannelsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all the custom channels available in an ad client.
 *
 *  Method: adsense.accounts.adclients.customchannels.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsAdclientsCustomchannelsList : GTLRAdsenseQuery

/**
 *  The maximum number of custom channels to include in the response, used for
 *  paging. If unspecified, at most 10000 custom channels will be returned. The
 *  maximum value is 10000; values above 10000 will be coerced to 10000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListCustomChannels` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListCustomChannels` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The ad client which owns the collection of custom channels.
 *  Format: accounts/{account}/adclients/{adclient}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAdsense_ListCustomChannelsResponse.
 *
 *  Lists all the custom channels available in an ad client.
 *
 *  @param parent Required. The ad client which owns the collection of custom
 *    channels. Format: accounts/{account}/adclients/{adclient}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsCustomchannelsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists all the ad units available for a custom channel.
 *
 *  Method: adsense.accounts.adclients.customchannels.listLinkedAdUnits
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsAdclientsCustomchannelsListLinkedAdUnits : GTLRAdsenseQuery

/**
 *  The maximum number of ad units to include in the response, used for paging.
 *  If unspecified, at most 10000 ad units will be returned. The maximum value
 *  is 10000; values above 10000 will be coerced to 10000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListLinkedAdUnits` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListLinkedAdUnits` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The custom channel which owns the collection of ad units. Format:
 *  accounts/{account}/adclients/{adclient}/customchannels/{customchannel}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAdsense_ListLinkedAdUnitsResponse.
 *
 *  Lists all the ad units available for a custom channel.
 *
 *  @param parent Required. The custom channel which owns the collection of ad
 *    units. Format:
 *    accounts/{account}/adclients/{adclient}/customchannels/{customchannel}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsCustomchannelsListLinkedAdUnits
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a custom channel. This method can only be used by projects enabled
 *  for the [AdSense for
 *  Platforms](https://developers.google.com/adsense/platforms/) product.
 *
 *  Method: adsense.accounts.adclients.customchannels.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 */
@interface GTLRAdsenseQuery_AccountsAdclientsCustomchannelsPatch : GTLRAdsenseQuery

/**
 *  Output only. Resource name of the custom channel. Format:
 *  accounts/{account}/adclients/{adclient}/customchannels/{customchannel}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to update. If empty, a full update is performed.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRAdsense_CustomChannel.
 *
 *  Updates a custom channel. This method can only be used by projects enabled
 *  for the [AdSense for
 *  Platforms](https://developers.google.com/adsense/platforms/) product.
 *
 *  @param object The @c GTLRAdsense_CustomChannel to include in the query.
 *  @param name Output only. Resource name of the custom channel. Format:
 *    accounts/{account}/adclients/{adclient}/customchannels/{customchannel}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsCustomchannelsPatch
 */
+ (instancetype)queryWithObject:(GTLRAdsense_CustomChannel *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the ad client from the given resource name.
 *
 *  Method: adsense.accounts.adclients.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsAdclientsGet : GTLRAdsenseQuery

/**
 *  Required. The name of the ad client to retrieve. Format:
 *  accounts/{account}/adclients/{adclient}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAdsense_AdClient.
 *
 *  Gets the ad client from the given resource name.
 *
 *  @param name Required. The name of the ad client to retrieve. Format:
 *    accounts/{account}/adclients/{adclient}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the AdSense code for a given ad client. This returns what was
 *  previously known as the 'auto ad code'. This is only supported for ad
 *  clients with a product_code of AFC. For more information, see [About the
 *  AdSense code](https://support.google.com/adsense/answer/9274634).
 *
 *  Method: adsense.accounts.adclients.getAdcode
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsAdclientsGetAdcode : GTLRAdsenseQuery

/**
 *  Required. Name of the ad client for which to get the adcode. Format:
 *  accounts/{account}/adclients/{adclient}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAdsense_AdClientAdCode.
 *
 *  Gets the AdSense code for a given ad client. This returns what was
 *  previously known as the 'auto ad code'. This is only supported for ad
 *  clients with a product_code of AFC. For more information, see [About the
 *  AdSense code](https://support.google.com/adsense/answer/9274634).
 *
 *  @param name Required. Name of the ad client for which to get the adcode.
 *    Format: accounts/{account}/adclients/{adclient}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsGetAdcode
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all the ad clients available in an account.
 *
 *  Method: adsense.accounts.adclients.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsAdclientsList : GTLRAdsenseQuery

/**
 *  The maximum number of ad clients to include in the response, used for
 *  paging. If unspecified, at most 10000 ad clients will be returned. The
 *  maximum value is 10000; values above 10000 will be coerced to 10000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListAdClients` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListAdClients` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The account which owns the collection of ad clients. Format:
 *  accounts/{account}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAdsense_ListAdClientsResponse.
 *
 *  Lists all the ad clients available in an account.
 *
 *  @param parent Required. The account which owns the collection of ad clients.
 *    Format: accounts/{account}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets information about the selected url channel.
 *
 *  Method: adsense.accounts.adclients.urlchannels.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsAdclientsUrlchannelsGet : GTLRAdsenseQuery

/**
 *  Required. The name of the url channel to retrieve. Format:
 *  accounts/{account}/adclients/{adclient}/urlchannels/{urlchannel}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAdsense_UrlChannel.
 *
 *  Gets information about the selected url channel.
 *
 *  @param name Required. The name of the url channel to retrieve. Format:
 *    accounts/{account}/adclients/{adclient}/urlchannels/{urlchannel}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsUrlchannelsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists active url channels.
 *
 *  Method: adsense.accounts.adclients.urlchannels.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsAdclientsUrlchannelsList : GTLRAdsenseQuery

/**
 *  The maximum number of url channels to include in the response, used for
 *  paging. If unspecified, at most 10000 url channels will be returned. The
 *  maximum value is 10000; values above 10000 will be coerced to 10000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListUrlChannels` call. Provide this
 *  to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListUrlChannels` must match the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The ad client which owns the collection of url channels. Format:
 *  accounts/{account}/adclients/{adclient}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAdsense_ListUrlChannelsResponse.
 *
 *  Lists active url channels.
 *
 *  @param parent Required. The ad client which owns the collection of url
 *    channels. Format: accounts/{account}/adclients/{adclient}
 *
 *  @return GTLRAdsenseQuery_AccountsAdclientsUrlchannelsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists all the alerts available in an account.
 *
 *  Method: adsense.accounts.alerts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsAlertsList : GTLRAdsenseQuery

/**
 *  The language to use for translating alert messages. If unspecified, this
 *  defaults to the user's display language. If the given language is not
 *  supported, alerts will be returned in English. The language is specified as
 *  an [IETF BCP-47 language
 *  code](https://en.wikipedia.org/wiki/IETF_language_tag).
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. The account which owns the collection of alerts. Format:
 *  accounts/{account}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAdsense_ListAlertsResponse.
 *
 *  Lists all the alerts available in an account.
 *
 *  @param parent Required. The account which owns the collection of alerts.
 *    Format: accounts/{account}
 *
 *  @return GTLRAdsenseQuery_AccountsAlertsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets information about the selected AdSense account.
 *
 *  Method: adsense.accounts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsGet : GTLRAdsenseQuery

/** Required. Account to get information about. Format: accounts/{account} */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAdsense_Account.
 *
 *  Gets information about the selected AdSense account.
 *
 *  @param name Required. Account to get information about. Format:
 *    accounts/{account}
 *
 *  @return GTLRAdsenseQuery_AccountsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the ad blocking recovery tag of an account.
 *
 *  Method: adsense.accounts.getAdBlockingRecoveryTag
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsGetAdBlockingRecoveryTag : GTLRAdsenseQuery

/**
 *  Required. The name of the account to get the tag for. Format:
 *  accounts/{account}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAdsense_AdBlockingRecoveryTag.
 *
 *  Gets the ad blocking recovery tag of an account.
 *
 *  @param name Required. The name of the account to get the tag for. Format:
 *    accounts/{account}
 *
 *  @return GTLRAdsenseQuery_AccountsGetAdBlockingRecoveryTag
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all accounts available to this user.
 *
 *  Method: adsense.accounts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsList : GTLRAdsenseQuery

/**
 *  The maximum number of accounts to include in the response, used for paging.
 *  If unspecified, at most 10000 accounts will be returned. The maximum value
 *  is 10000; values above 10000 will be coerced to 10000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListAccounts` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListAccounts` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRAdsense_ListAccountsResponse.
 *
 *  Lists all accounts available to this user.
 *
 *  @return GTLRAdsenseQuery_AccountsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Lists all accounts directly managed by the given AdSense account.
 *
 *  Method: adsense.accounts.listChildAccounts
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsListChildAccounts : GTLRAdsenseQuery

/**
 *  The maximum number of accounts to include in the response, used for paging.
 *  If unspecified, at most 10000 accounts will be returned. The maximum value
 *  is 10000; values above 10000 will be coerced to 10000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListAccounts` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListAccounts` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent account, which owns the child accounts. Format:
 *  accounts/{account}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAdsense_ListChildAccountsResponse.
 *
 *  Lists all accounts directly managed by the given AdSense account.
 *
 *  @param parent Required. The parent account, which owns the child accounts.
 *    Format: accounts/{account}
 *
 *  @return GTLRAdsenseQuery_AccountsListChildAccounts
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists all the payments available for an account.
 *
 *  Method: adsense.accounts.payments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsPaymentsList : GTLRAdsenseQuery

/**
 *  Required. The account which owns the collection of payments. Format:
 *  accounts/{account}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAdsense_ListPaymentsResponse.
 *
 *  Lists all the payments available for an account.
 *
 *  @param parent Required. The account which owns the collection of payments.
 *    Format: accounts/{account}
 *
 *  @return GTLRAdsenseQuery_AccountsPaymentsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Generates an ad hoc report.
 *
 *  Method: adsense.accounts.reports.generate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsReportsGenerate : GTLRAdsenseQuery

/**
 *  Required. The account which owns the collection of reports. Format:
 *  accounts/{account}
 */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  The [ISO-4217 currency code](https://en.wikipedia.org/wiki/ISO_4217) to use
 *  when reporting on monetary metrics. Defaults to the account's currency if
 *  not set.
 */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Date range of the report, if unset the range will be considered CUSTOM.
 *
 *  Likely values:
 *    @arg @c kGTLRAdsenseDateRangeReportingDateRangeUnspecified Unspecified
 *        date range. (Value: "REPORTING_DATE_RANGE_UNSPECIFIED")
 *    @arg @c kGTLRAdsenseDateRangeCustom A custom date range specified using
 *        the `start_date` and `end_date` fields. This is the default if no
 *        ReportingDateRange is provided. (Value: "CUSTOM")
 *    @arg @c kGTLRAdsenseDateRangeToday Current day. (Value: "TODAY")
 *    @arg @c kGTLRAdsenseDateRangeYesterday Yesterday. (Value: "YESTERDAY")
 *    @arg @c kGTLRAdsenseDateRangeMonthToDate From the start of the current
 *        month to the current day. e.g. if the current date is 2020-03-12 then
 *        the range will be [2020-03-01, 2020-03-12]. (Value: "MONTH_TO_DATE")
 *    @arg @c kGTLRAdsenseDateRangeYearToDate From the start of the current year
 *        to the current day. e.g. if the current date is 2020-03-12 then the
 *        range will be [2020-01-01, 2020-03-12]. (Value: "YEAR_TO_DATE")
 *    @arg @c kGTLRAdsenseDateRangeLast7Days Last 7 days, excluding current day.
 *        (Value: "LAST_7_DAYS")
 *    @arg @c kGTLRAdsenseDateRangeLast30Days Last 30 days, excluding current
 *        day. (Value: "LAST_30_DAYS")
 */
@property(nonatomic, copy, nullable) NSString *dateRange;

/**
 *  Dimensions to base the report on.
 *
 *  Likely values:
 *    @arg @c kGTLRAdsenseDimensionsDimensionUnspecified Unspecified dimension.
 *        (Value: "DIMENSION_UNSPECIFIED")
 *    @arg @c kGTLRAdsenseDimensionsDate Date dimension in YYYY-MM-DD format
 *        (e.g. "2010-02-10"). (Value: "DATE")
 *    @arg @c kGTLRAdsenseDimensionsWeek Week dimension in YYYY-MM-DD format,
 *        representing the first day of each week (e.g. "2010-02-08"). The first
 *        day of the week is determined by the language_code specified in a
 *        report generation request (so e.g. this would be a Monday for "en-GB"
 *        or "es", but a Sunday for "en" or "fr-CA"). (Value: "WEEK")
 *    @arg @c kGTLRAdsenseDimensionsMonth Month dimension in YYYY-MM format
 *        (e.g. "2010-02"). (Value: "MONTH")
 *    @arg @c kGTLRAdsenseDimensionsAccountName Account name. The members of
 *        this dimension match the values from Account.display_name. (Value:
 *        "ACCOUNT_NAME")
 *    @arg @c kGTLRAdsenseDimensionsAdClientId Unique ID of an ad client. The
 *        members of this dimension match the values from
 *        AdClient.reporting_dimension_id. (Value: "AD_CLIENT_ID")
 *    @arg @c kGTLRAdsenseDimensionsHostedAdClientId Unique ID of a
 *        sub-account's ad client. The members of this dimension match the
 *        values from AdClient.reporting_dimension_id (for the sub-account).
 *        (Value: "HOSTED_AD_CLIENT_ID")
 *    @arg @c kGTLRAdsenseDimensionsProductName Localized product name (e.g.
 *        "AdSense for Content", "AdSense for Search"). (Value: "PRODUCT_NAME")
 *    @arg @c kGTLRAdsenseDimensionsProductCode Product code (e.g. "AFC",
 *        "AFS"). The members of this dimension match the values from
 *        AdClient.product_code. (Value: "PRODUCT_CODE")
 *    @arg @c kGTLRAdsenseDimensionsAdUnitName Ad unit name (within which an ad
 *        was served). The members of this dimension match the values from
 *        AdUnit.display_name. (Value: "AD_UNIT_NAME")
 *    @arg @c kGTLRAdsenseDimensionsAdUnitId Unique ID of an ad unit (within
 *        which an ad was served). The members of this dimension match the
 *        values from AdUnit.reporting_dimension_id. (Value: "AD_UNIT_ID")
 *    @arg @c kGTLRAdsenseDimensionsAdUnitSizeName Localized size of an ad unit
 *        (e.g. "728x90", "Responsive"). (Value: "AD_UNIT_SIZE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsAdUnitSizeCode The size code of an ad unit
 *        (e.g. "728x90", "responsive"). (Value: "AD_UNIT_SIZE_CODE")
 *    @arg @c kGTLRAdsenseDimensionsCustomChannelName Custom channel name. The
 *        members of this dimension match the values from
 *        CustomChannel.display_name. (Value: "CUSTOM_CHANNEL_NAME")
 *    @arg @c kGTLRAdsenseDimensionsCustomChannelId Unique ID of a custom
 *        channel. The members of this dimension match the values from
 *        CustomChannel.reporting_dimension_id. (Value: "CUSTOM_CHANNEL_ID")
 *    @arg @c kGTLRAdsenseDimensionsOwnedSiteDomainName Domain name of a
 *        verified site (e.g. "example.com"). The members of this dimension
 *        match the values from Site.domain. (Value: "OWNED_SITE_DOMAIN_NAME")
 *    @arg @c kGTLRAdsenseDimensionsOwnedSiteId Unique ID of a verified site.
 *        The members of this dimension match the values from
 *        Site.reporting_dimension_id. (Value: "OWNED_SITE_ID")
 *    @arg @c kGTLRAdsenseDimensionsUrlChannelName Name of a URL channel. The
 *        members of this dimension match the values from
 *        UrlChannel.uri_pattern. (Value: "URL_CHANNEL_NAME")
 *    @arg @c kGTLRAdsenseDimensionsUrlChannelId Unique ID of a URL channel. The
 *        members of this dimension match the values from
 *        UrlChannel.reporting_dimension_id. (Value: "URL_CHANNEL_ID")
 *    @arg @c kGTLRAdsenseDimensionsBuyerNetworkName Name of an ad network that
 *        returned the winning ads for an ad request (e.g. "Google AdWords").
 *        Note that unlike other "NAME" dimensions, the members of this
 *        dimensions are not localized. (Value: "BUYER_NETWORK_NAME")
 *    @arg @c kGTLRAdsenseDimensionsBuyerNetworkId Unique (opaque) ID of an ad
 *        network that returned the winning ads for an ad request. (Value:
 *        "BUYER_NETWORK_ID")
 *    @arg @c kGTLRAdsenseDimensionsBidTypeName Localized bid type name (e.g.
 *        "CPC bids", "CPM bids") for a served ad. (Value: "BID_TYPE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsBidTypeCode Type of a bid (e.g. "cpc",
 *        "cpm") for a served ad. (Value: "BID_TYPE_CODE")
 *    @arg @c kGTLRAdsenseDimensionsCreativeSizeName Localized creative size
 *        name (e.g. "728x90", "Dynamic") of a served ad. (Value:
 *        "CREATIVE_SIZE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsCreativeSizeCode Creative size code (e.g.
 *        "728x90", "dynamic") of a served ad. (Value: "CREATIVE_SIZE_CODE")
 *    @arg @c kGTLRAdsenseDimensionsDomainName Localized name of a host on which
 *        an ad was served, after IDNA decoding (e.g. "www.google.com", "Web
 *        caches and other", "b√ºcher.example"). (Value: "DOMAIN_NAME")
 *    @arg @c kGTLRAdsenseDimensionsDomainCode Name of a host on which an ad was
 *        served (e.g. "www.google.com", "webcaches", "xn--bcher-kva.example").
 *        (Value: "DOMAIN_CODE")
 *    @arg @c kGTLRAdsenseDimensionsCountryName Localized region name of a user
 *        viewing an ad (e.g. "United States", "France"). (Value:
 *        "COUNTRY_NAME")
 *    @arg @c kGTLRAdsenseDimensionsCountryCode CLDR region code of a user
 *        viewing an ad (e.g. "US", "FR"). (Value: "COUNTRY_CODE")
 *    @arg @c kGTLRAdsenseDimensionsPlatformTypeName Localized platform type
 *        name (e.g. "High-end mobile devices", "Desktop"). (Value:
 *        "PLATFORM_TYPE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsPlatformTypeCode Platform type code (e.g.
 *        "HighEndMobile", "Desktop"). (Value: "PLATFORM_TYPE_CODE")
 *    @arg @c kGTLRAdsenseDimensionsTargetingTypeName Localized targeting type
 *        name (e.g. "Contextual", "Personalized", "Run of Network"). (Value:
 *        "TARGETING_TYPE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsTargetingTypeCode Targeting type code (e.g.
 *        "Keyword", "UserInterest", "RunOfNetwork"). (Value:
 *        "TARGETING_TYPE_CODE")
 *    @arg @c kGTLRAdsenseDimensionsContentPlatformName Localized content
 *        platform name an ad request was made from (e.g. "AMP", "Web"). (Value:
 *        "CONTENT_PLATFORM_NAME")
 *    @arg @c kGTLRAdsenseDimensionsContentPlatformCode Content platform code an
 *        ad request was made from (e.g. "AMP", "HTML"). (Value:
 *        "CONTENT_PLATFORM_CODE")
 *    @arg @c kGTLRAdsenseDimensionsAdPlacementName Localized ad placement name
 *        (e.g. "Ad unit", "Global settings", "Manual"). (Value:
 *        "AD_PLACEMENT_NAME")
 *    @arg @c kGTLRAdsenseDimensionsAdPlacementCode Ad placement code (e.g.
 *        "AD_UNIT", "ca-pub-123456:78910", "OTHER"). (Value:
 *        "AD_PLACEMENT_CODE")
 *    @arg @c kGTLRAdsenseDimensionsRequestedAdTypeName Localized requested ad
 *        type name (e.g. "Display", "Link unit", "Other"). (Value:
 *        "REQUESTED_AD_TYPE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsRequestedAdTypeCode Requested ad type code
 *        (e.g. "IMAGE", "RADLINK", "OTHER"). (Value: "REQUESTED_AD_TYPE_CODE")
 *    @arg @c kGTLRAdsenseDimensionsServedAdTypeName Localized served ad type
 *        name (e.g. "Display", "Link unit", "Other"). (Value:
 *        "SERVED_AD_TYPE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsServedAdTypeCode Served ad type code (e.g.
 *        "IMAGE", "RADLINK", "OTHER"). (Value: "SERVED_AD_TYPE_CODE")
 *    @arg @c kGTLRAdsenseDimensionsAdFormatName Localized ad format name
 *        indicating the way an ad is shown to the users on your site (e.g.
 *        "In-page", "Anchor", "Vignette"). (Value: "AD_FORMAT_NAME")
 *    @arg @c kGTLRAdsenseDimensionsAdFormatCode Ad format code indicating the
 *        way an ad is shown to the users on your site (e.g. "ON_PAGE",
 *        "ANCHOR", "INTERSTITIAL"). (Value: "AD_FORMAT_CODE")
 *    @arg @c kGTLRAdsenseDimensionsCustomSearchStyleName Custom search style
 *        name. (Value: "CUSTOM_SEARCH_STYLE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsCustomSearchStyleId Custom search style id.
 *        (Value: "CUSTOM_SEARCH_STYLE_ID")
 *    @arg @c kGTLRAdsenseDimensionsDomainRegistrant Domain registrants. (Value:
 *        "DOMAIN_REGISTRANT")
 *    @arg @c kGTLRAdsenseDimensionsWebsearchQueryString Query strings for web
 *        searches. (Value: "WEBSEARCH_QUERY_STRING")
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *dimensions;

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 */
@property(nonatomic, assign) NSInteger endDateDay;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 */
@property(nonatomic, assign) NSInteger endDateMonth;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 */
@property(nonatomic, assign) NSInteger endDateYear;

/**
 *  A list of [filters](/adsense/management/reporting/filtering) to apply to the
 *  report. All provided filters must match in order for the data to be included
 *  in the report.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *filters;

/**
 *  The language to use for translating report output. If unspecified, this
 *  defaults to English ("en"). If the given language is not supported, report
 *  output will be returned in English. The language is specified as an [IETF
 *  BCP-47 language code](https://en.wikipedia.org/wiki/IETF_language_tag).
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The maximum number of rows of report data to return. Reports producing more
 *  rows than the requested limit will be truncated. If unset, this defaults to
 *  100,000 rows for `Reports.GenerateReport` and 1,000,000 rows for
 *  `Reports.GenerateCsvReport`, which are also the maximum values permitted
 *  here. Report truncation can be identified (for `Reports.GenerateReport`
 *  only) by comparing the number of rows returned to the value returned in
 *  `total_matched_rows`.
 */
@property(nonatomic, assign) NSInteger limit;

/**
 *  Required. Reporting metrics.
 *
 *  Likely values:
 *    @arg @c kGTLRAdsenseMetricsMetricUnspecified Unspecified metric. (Value:
 *        "METRIC_UNSPECIFIED")
 *    @arg @c kGTLRAdsenseMetricsPageViews Number of page views. (Value:
 *        "PAGE_VIEWS")
 *    @arg @c kGTLRAdsenseMetricsAdRequests Number of ad units that requested
 *        ads (for content ads) or search queries (for search ads). An ad
 *        request may result in zero, one, or multiple individual ad impressions
 *        depending on the size of the ad unit and whether any ads were
 *        available. (Value: "AD_REQUESTS")
 *    @arg @c kGTLRAdsenseMetricsMatchedAdRequests Requests that returned at
 *        least one ad. (Value: "MATCHED_AD_REQUESTS")
 *    @arg @c kGTLRAdsenseMetricsTotalImpressions Impressions. An impression is
 *        counted for each ad request where at least one ad has been downloaded
 *        to the user‚Äôs device and has begun to load. It is the number of ad
 *        units (for content ads) or search queries (for search ads) that showed
 *        ads. (Value: "TOTAL_IMPRESSIONS")
 *    @arg @c kGTLRAdsenseMetricsImpressions Impressions. An impression is
 *        counted for each ad request where at least one ad has been downloaded
 *        to the user‚Äôs device and has begun to load. It is the number of ad
 *        units (for content ads) or search queries (for search ads) that showed
 *        ads. (Value: "IMPRESSIONS")
 *    @arg @c kGTLRAdsenseMetricsIndividualAdImpressions Ads shown. Different ad
 *        formats will display varying numbers of ads. For example, a vertical
 *        banner may consist of 2 or more ads. Also, the number of ads in an ad
 *        unit may vary depending on whether the ad unit is displaying standard
 *        text ads, expanded text ads or image ads. (Value:
 *        "INDIVIDUAL_AD_IMPRESSIONS")
 *    @arg @c kGTLRAdsenseMetricsClicks Number of times a user clicked on a
 *        standard content ad. (Value: "CLICKS")
 *    @arg @c kGTLRAdsenseMetricsPageViewsSpamRatio Fraction of page views
 *        considered to be spam. Only available to premium accounts. (Value:
 *        "PAGE_VIEWS_SPAM_RATIO")
 *    @arg @c kGTLRAdsenseMetricsAdRequestsSpamRatio Fraction of ad requests
 *        considered to be spam. Only available to premium accounts. (Value:
 *        "AD_REQUESTS_SPAM_RATIO")
 *    @arg @c kGTLRAdsenseMetricsMatchedAdRequestsSpamRatio Fraction of ad
 *        requests that returned ads considered to be spam. Only available to
 *        premium accounts. (Value: "MATCHED_AD_REQUESTS_SPAM_RATIO")
 *    @arg @c kGTLRAdsenseMetricsImpressionsSpamRatio Fraction of impressions
 *        considered to be spam. Only available to premium accounts. (Value:
 *        "IMPRESSIONS_SPAM_RATIO")
 *    @arg @c kGTLRAdsenseMetricsIndividualAdImpressionsSpamRatio Fraction of ad
 *        impressions considered to be spam. Only available to premium accounts.
 *        (Value: "INDIVIDUAL_AD_IMPRESSIONS_SPAM_RATIO")
 *    @arg @c kGTLRAdsenseMetricsClicksSpamRatio Fraction of clicks considered
 *        to be spam. Only available to premium accounts. (Value:
 *        "CLICKS_SPAM_RATIO")
 *    @arg @c kGTLRAdsenseMetricsAdRequestsCoverage Ratio of requested ad units
 *        or queries to the number returned to the site. (Value:
 *        "AD_REQUESTS_COVERAGE")
 *    @arg @c kGTLRAdsenseMetricsPageViewsCtr Ratio of individual page views
 *        that resulted in a click. (Value: "PAGE_VIEWS_CTR")
 *    @arg @c kGTLRAdsenseMetricsAdRequestsCtr Ratio of ad requests that
 *        resulted in a click. (Value: "AD_REQUESTS_CTR")
 *    @arg @c kGTLRAdsenseMetricsMatchedAdRequestsCtr Ratio of clicks to matched
 *        requests. (Value: "MATCHED_AD_REQUESTS_CTR")
 *    @arg @c kGTLRAdsenseMetricsImpressionsCtr Ratio of IMPRESSIONS that
 *        resulted in a click. (Value: "IMPRESSIONS_CTR")
 *    @arg @c kGTLRAdsenseMetricsIndividualAdImpressionsCtr Ratio of individual
 *        ad impressions that resulted in a click. (Value:
 *        "INDIVIDUAL_AD_IMPRESSIONS_CTR")
 *    @arg @c kGTLRAdsenseMetricsActiveViewMeasurability Ratio of requests that
 *        were measurable for viewability. (Value: "ACTIVE_VIEW_MEASURABILITY")
 *    @arg @c kGTLRAdsenseMetricsActiveViewViewability Ratio of requests that
 *        were viewable. (Value: "ACTIVE_VIEW_VIEWABILITY")
 *    @arg @c kGTLRAdsenseMetricsActiveViewTime Mean time an ad was displayed on
 *        screen. (Value: "ACTIVE_VIEW_TIME")
 *    @arg @c kGTLRAdsenseMetricsEstimatedEarnings Estimated earnings of the
 *        publisher. Note that earnings up to yesterday are accurate, more
 *        recent earnings are estimated due to the possibility of spam, or
 *        exchange rate fluctuations. (Value: "ESTIMATED_EARNINGS")
 *    @arg @c kGTLRAdsenseMetricsPageViewsRpm Revenue per thousand page views.
 *        This is calculated by dividing the estimated revenue by the number of
 *        page views multiplied by 1000. (Value: "PAGE_VIEWS_RPM")
 *    @arg @c kGTLRAdsenseMetricsAdRequestsRpm Revenue per thousand ad requests.
 *        This is calculated by dividing estimated revenue by the number of ad
 *        requests multiplied by 1000. (Value: "AD_REQUESTS_RPM")
 *    @arg @c kGTLRAdsenseMetricsMatchedAdRequestsRpm Revenue per thousand
 *        matched ad requests. This is calculated by dividing estimated revenue
 *        by the number of matched ad requests multiplied by 1000. (Value:
 *        "MATCHED_AD_REQUESTS_RPM")
 *    @arg @c kGTLRAdsenseMetricsImpressionsRpm Revenue per thousand ad
 *        impressions. This is calculated by dividing estimated revenue by the
 *        number of ad impressions multiplied by 1000. (Value:
 *        "IMPRESSIONS_RPM")
 *    @arg @c kGTLRAdsenseMetricsIndividualAdImpressionsRpm Revenue per thousand
 *        individual ad impressions. This is calculated by dividing estimated
 *        revenue by the number of individual ad impressions multiplied by 1000.
 *        (Value: "INDIVIDUAL_AD_IMPRESSIONS_RPM")
 *    @arg @c kGTLRAdsenseMetricsCostPerClick Amount the publisher earns each
 *        time a user clicks on an ad. CPC is calculated by dividing the
 *        estimated revenue by the number of clicks received. (Value:
 *        "COST_PER_CLICK")
 *    @arg @c kGTLRAdsenseMetricsAdsPerImpression Number of ad views per
 *        impression. (Value: "ADS_PER_IMPRESSION")
 *    @arg @c kGTLRAdsenseMetricsTotalEarnings Total earnings are the gross
 *        estimated earnings from revenue shared traffic before any parent and
 *        child account revenue share is applied. (Value: "TOTAL_EARNINGS")
 *    @arg @c kGTLRAdsenseMetricsWebsearchResultPages Number of results pages.
 *        (Value: "WEBSEARCH_RESULT_PAGES")
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *metrics;

/**
 *  The name of a dimension or metric to sort the resulting report on, can be
 *  prefixed with "+" to sort ascending or "-" to sort descending. If no prefix
 *  is specified, the column is sorted ascending.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *orderBy;

/**
 *  Timezone in which to generate the report. If unspecified, this defaults to
 *  the account timezone. For more information, see [changing the time zone of
 *  your reports](https://support.google.com/adsense/answer/9830725).
 *
 *  Likely values:
 *    @arg @c kGTLRAdsenseReportingTimeZoneReportingTimeZoneUnspecified
 *        Unspecified timezone. (Value: "REPORTING_TIME_ZONE_UNSPECIFIED")
 *    @arg @c kGTLRAdsenseReportingTimeZoneAccountTimeZone Use the account
 *        timezone in the report. (Value: "ACCOUNT_TIME_ZONE")
 *    @arg @c kGTLRAdsenseReportingTimeZoneGoogleTimeZone Use the Google
 *        timezone in the report (America/Los_Angeles). (Value:
 *        "GOOGLE_TIME_ZONE")
 */
@property(nonatomic, copy, nullable) NSString *reportingTimeZone;

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 */
@property(nonatomic, assign) NSInteger startDateDay;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 */
@property(nonatomic, assign) NSInteger startDateMonth;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 */
@property(nonatomic, assign) NSInteger startDateYear;

/**
 *  Fetches a @c GTLRAdsense_ReportResult.
 *
 *  Generates an ad hoc report.
 *
 *  @param account Required. The account which owns the collection of reports.
 *    Format: accounts/{account}
 *
 *  @return GTLRAdsenseQuery_AccountsReportsGenerate
 */
+ (instancetype)queryWithAccount:(NSString *)account;

@end

/**
 *  Generates a csv formatted ad hoc report.
 *
 *  Method: adsense.accounts.reports.generateCsv
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsReportsGenerateCsv : GTLRAdsenseQuery

/**
 *  Required. The account which owns the collection of reports. Format:
 *  accounts/{account}
 */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  The [ISO-4217 currency code](https://en.wikipedia.org/wiki/ISO_4217) to use
 *  when reporting on monetary metrics. Defaults to the account's currency if
 *  not set.
 */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Date range of the report, if unset the range will be considered CUSTOM.
 *
 *  Likely values:
 *    @arg @c kGTLRAdsenseDateRangeReportingDateRangeUnspecified Unspecified
 *        date range. (Value: "REPORTING_DATE_RANGE_UNSPECIFIED")
 *    @arg @c kGTLRAdsenseDateRangeCustom A custom date range specified using
 *        the `start_date` and `end_date` fields. This is the default if no
 *        ReportingDateRange is provided. (Value: "CUSTOM")
 *    @arg @c kGTLRAdsenseDateRangeToday Current day. (Value: "TODAY")
 *    @arg @c kGTLRAdsenseDateRangeYesterday Yesterday. (Value: "YESTERDAY")
 *    @arg @c kGTLRAdsenseDateRangeMonthToDate From the start of the current
 *        month to the current day. e.g. if the current date is 2020-03-12 then
 *        the range will be [2020-03-01, 2020-03-12]. (Value: "MONTH_TO_DATE")
 *    @arg @c kGTLRAdsenseDateRangeYearToDate From the start of the current year
 *        to the current day. e.g. if the current date is 2020-03-12 then the
 *        range will be [2020-01-01, 2020-03-12]. (Value: "YEAR_TO_DATE")
 *    @arg @c kGTLRAdsenseDateRangeLast7Days Last 7 days, excluding current day.
 *        (Value: "LAST_7_DAYS")
 *    @arg @c kGTLRAdsenseDateRangeLast30Days Last 30 days, excluding current
 *        day. (Value: "LAST_30_DAYS")
 */
@property(nonatomic, copy, nullable) NSString *dateRange;

/**
 *  Dimensions to base the report on.
 *
 *  Likely values:
 *    @arg @c kGTLRAdsenseDimensionsDimensionUnspecified Unspecified dimension.
 *        (Value: "DIMENSION_UNSPECIFIED")
 *    @arg @c kGTLRAdsenseDimensionsDate Date dimension in YYYY-MM-DD format
 *        (e.g. "2010-02-10"). (Value: "DATE")
 *    @arg @c kGTLRAdsenseDimensionsWeek Week dimension in YYYY-MM-DD format,
 *        representing the first day of each week (e.g. "2010-02-08"). The first
 *        day of the week is determined by the language_code specified in a
 *        report generation request (so e.g. this would be a Monday for "en-GB"
 *        or "es", but a Sunday for "en" or "fr-CA"). (Value: "WEEK")
 *    @arg @c kGTLRAdsenseDimensionsMonth Month dimension in YYYY-MM format
 *        (e.g. "2010-02"). (Value: "MONTH")
 *    @arg @c kGTLRAdsenseDimensionsAccountName Account name. The members of
 *        this dimension match the values from Account.display_name. (Value:
 *        "ACCOUNT_NAME")
 *    @arg @c kGTLRAdsenseDimensionsAdClientId Unique ID of an ad client. The
 *        members of this dimension match the values from
 *        AdClient.reporting_dimension_id. (Value: "AD_CLIENT_ID")
 *    @arg @c kGTLRAdsenseDimensionsHostedAdClientId Unique ID of a
 *        sub-account's ad client. The members of this dimension match the
 *        values from AdClient.reporting_dimension_id (for the sub-account).
 *        (Value: "HOSTED_AD_CLIENT_ID")
 *    @arg @c kGTLRAdsenseDimensionsProductName Localized product name (e.g.
 *        "AdSense for Content", "AdSense for Search"). (Value: "PRODUCT_NAME")
 *    @arg @c kGTLRAdsenseDimensionsProductCode Product code (e.g. "AFC",
 *        "AFS"). The members of this dimension match the values from
 *        AdClient.product_code. (Value: "PRODUCT_CODE")
 *    @arg @c kGTLRAdsenseDimensionsAdUnitName Ad unit name (within which an ad
 *        was served). The members of this dimension match the values from
 *        AdUnit.display_name. (Value: "AD_UNIT_NAME")
 *    @arg @c kGTLRAdsenseDimensionsAdUnitId Unique ID of an ad unit (within
 *        which an ad was served). The members of this dimension match the
 *        values from AdUnit.reporting_dimension_id. (Value: "AD_UNIT_ID")
 *    @arg @c kGTLRAdsenseDimensionsAdUnitSizeName Localized size of an ad unit
 *        (e.g. "728x90", "Responsive"). (Value: "AD_UNIT_SIZE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsAdUnitSizeCode The size code of an ad unit
 *        (e.g. "728x90", "responsive"). (Value: "AD_UNIT_SIZE_CODE")
 *    @arg @c kGTLRAdsenseDimensionsCustomChannelName Custom channel name. The
 *        members of this dimension match the values from
 *        CustomChannel.display_name. (Value: "CUSTOM_CHANNEL_NAME")
 *    @arg @c kGTLRAdsenseDimensionsCustomChannelId Unique ID of a custom
 *        channel. The members of this dimension match the values from
 *        CustomChannel.reporting_dimension_id. (Value: "CUSTOM_CHANNEL_ID")
 *    @arg @c kGTLRAdsenseDimensionsOwnedSiteDomainName Domain name of a
 *        verified site (e.g. "example.com"). The members of this dimension
 *        match the values from Site.domain. (Value: "OWNED_SITE_DOMAIN_NAME")
 *    @arg @c kGTLRAdsenseDimensionsOwnedSiteId Unique ID of a verified site.
 *        The members of this dimension match the values from
 *        Site.reporting_dimension_id. (Value: "OWNED_SITE_ID")
 *    @arg @c kGTLRAdsenseDimensionsUrlChannelName Name of a URL channel. The
 *        members of this dimension match the values from
 *        UrlChannel.uri_pattern. (Value: "URL_CHANNEL_NAME")
 *    @arg @c kGTLRAdsenseDimensionsUrlChannelId Unique ID of a URL channel. The
 *        members of this dimension match the values from
 *        UrlChannel.reporting_dimension_id. (Value: "URL_CHANNEL_ID")
 *    @arg @c kGTLRAdsenseDimensionsBuyerNetworkName Name of an ad network that
 *        returned the winning ads for an ad request (e.g. "Google AdWords").
 *        Note that unlike other "NAME" dimensions, the members of this
 *        dimensions are not localized. (Value: "BUYER_NETWORK_NAME")
 *    @arg @c kGTLRAdsenseDimensionsBuyerNetworkId Unique (opaque) ID of an ad
 *        network that returned the winning ads for an ad request. (Value:
 *        "BUYER_NETWORK_ID")
 *    @arg @c kGTLRAdsenseDimensionsBidTypeName Localized bid type name (e.g.
 *        "CPC bids", "CPM bids") for a served ad. (Value: "BID_TYPE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsBidTypeCode Type of a bid (e.g. "cpc",
 *        "cpm") for a served ad. (Value: "BID_TYPE_CODE")
 *    @arg @c kGTLRAdsenseDimensionsCreativeSizeName Localized creative size
 *        name (e.g. "728x90", "Dynamic") of a served ad. (Value:
 *        "CREATIVE_SIZE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsCreativeSizeCode Creative size code (e.g.
 *        "728x90", "dynamic") of a served ad. (Value: "CREATIVE_SIZE_CODE")
 *    @arg @c kGTLRAdsenseDimensionsDomainName Localized name of a host on which
 *        an ad was served, after IDNA decoding (e.g. "www.google.com", "Web
 *        caches and other", "b√ºcher.example"). (Value: "DOMAIN_NAME")
 *    @arg @c kGTLRAdsenseDimensionsDomainCode Name of a host on which an ad was
 *        served (e.g. "www.google.com", "webcaches", "xn--bcher-kva.example").
 *        (Value: "DOMAIN_CODE")
 *    @arg @c kGTLRAdsenseDimensionsCountryName Localized region name of a user
 *        viewing an ad (e.g. "United States", "France"). (Value:
 *        "COUNTRY_NAME")
 *    @arg @c kGTLRAdsenseDimensionsCountryCode CLDR region code of a user
 *        viewing an ad (e.g. "US", "FR"). (Value: "COUNTRY_CODE")
 *    @arg @c kGTLRAdsenseDimensionsPlatformTypeName Localized platform type
 *        name (e.g. "High-end mobile devices", "Desktop"). (Value:
 *        "PLATFORM_TYPE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsPlatformTypeCode Platform type code (e.g.
 *        "HighEndMobile", "Desktop"). (Value: "PLATFORM_TYPE_CODE")
 *    @arg @c kGTLRAdsenseDimensionsTargetingTypeName Localized targeting type
 *        name (e.g. "Contextual", "Personalized", "Run of Network"). (Value:
 *        "TARGETING_TYPE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsTargetingTypeCode Targeting type code (e.g.
 *        "Keyword", "UserInterest", "RunOfNetwork"). (Value:
 *        "TARGETING_TYPE_CODE")
 *    @arg @c kGTLRAdsenseDimensionsContentPlatformName Localized content
 *        platform name an ad request was made from (e.g. "AMP", "Web"). (Value:
 *        "CONTENT_PLATFORM_NAME")
 *    @arg @c kGTLRAdsenseDimensionsContentPlatformCode Content platform code an
 *        ad request was made from (e.g. "AMP", "HTML"). (Value:
 *        "CONTENT_PLATFORM_CODE")
 *    @arg @c kGTLRAdsenseDimensionsAdPlacementName Localized ad placement name
 *        (e.g. "Ad unit", "Global settings", "Manual"). (Value:
 *        "AD_PLACEMENT_NAME")
 *    @arg @c kGTLRAdsenseDimensionsAdPlacementCode Ad placement code (e.g.
 *        "AD_UNIT", "ca-pub-123456:78910", "OTHER"). (Value:
 *        "AD_PLACEMENT_CODE")
 *    @arg @c kGTLRAdsenseDimensionsRequestedAdTypeName Localized requested ad
 *        type name (e.g. "Display", "Link unit", "Other"). (Value:
 *        "REQUESTED_AD_TYPE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsRequestedAdTypeCode Requested ad type code
 *        (e.g. "IMAGE", "RADLINK", "OTHER"). (Value: "REQUESTED_AD_TYPE_CODE")
 *    @arg @c kGTLRAdsenseDimensionsServedAdTypeName Localized served ad type
 *        name (e.g. "Display", "Link unit", "Other"). (Value:
 *        "SERVED_AD_TYPE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsServedAdTypeCode Served ad type code (e.g.
 *        "IMAGE", "RADLINK", "OTHER"). (Value: "SERVED_AD_TYPE_CODE")
 *    @arg @c kGTLRAdsenseDimensionsAdFormatName Localized ad format name
 *        indicating the way an ad is shown to the users on your site (e.g.
 *        "In-page", "Anchor", "Vignette"). (Value: "AD_FORMAT_NAME")
 *    @arg @c kGTLRAdsenseDimensionsAdFormatCode Ad format code indicating the
 *        way an ad is shown to the users on your site (e.g. "ON_PAGE",
 *        "ANCHOR", "INTERSTITIAL"). (Value: "AD_FORMAT_CODE")
 *    @arg @c kGTLRAdsenseDimensionsCustomSearchStyleName Custom search style
 *        name. (Value: "CUSTOM_SEARCH_STYLE_NAME")
 *    @arg @c kGTLRAdsenseDimensionsCustomSearchStyleId Custom search style id.
 *        (Value: "CUSTOM_SEARCH_STYLE_ID")
 *    @arg @c kGTLRAdsenseDimensionsDomainRegistrant Domain registrants. (Value:
 *        "DOMAIN_REGISTRANT")
 *    @arg @c kGTLRAdsenseDimensionsWebsearchQueryString Query strings for web
 *        searches. (Value: "WEBSEARCH_QUERY_STRING")
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *dimensions;

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 */
@property(nonatomic, assign) NSInteger endDateDay;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 */
@property(nonatomic, assign) NSInteger endDateMonth;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 */
@property(nonatomic, assign) NSInteger endDateYear;

/**
 *  A list of [filters](/adsense/management/reporting/filtering) to apply to the
 *  report. All provided filters must match in order for the data to be included
 *  in the report.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *filters;

/**
 *  The language to use for translating report output. If unspecified, this
 *  defaults to English ("en"). If the given language is not supported, report
 *  output will be returned in English. The language is specified as an [IETF
 *  BCP-47 language code](https://en.wikipedia.org/wiki/IETF_language_tag).
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The maximum number of rows of report data to return. Reports producing more
 *  rows than the requested limit will be truncated. If unset, this defaults to
 *  100,000 rows for `Reports.GenerateReport` and 1,000,000 rows for
 *  `Reports.GenerateCsvReport`, which are also the maximum values permitted
 *  here. Report truncation can be identified (for `Reports.GenerateReport`
 *  only) by comparing the number of rows returned to the value returned in
 *  `total_matched_rows`.
 */
@property(nonatomic, assign) NSInteger limit;

/**
 *  Required. Reporting metrics.
 *
 *  Likely values:
 *    @arg @c kGTLRAdsenseMetricsMetricUnspecified Unspecified metric. (Value:
 *        "METRIC_UNSPECIFIED")
 *    @arg @c kGTLRAdsenseMetricsPageViews Number of page views. (Value:
 *        "PAGE_VIEWS")
 *    @arg @c kGTLRAdsenseMetricsAdRequests Number of ad units that requested
 *        ads (for content ads) or search queries (for search ads). An ad
 *        request may result in zero, one, or multiple individual ad impressions
 *        depending on the size of the ad unit and whether any ads were
 *        available. (Value: "AD_REQUESTS")
 *    @arg @c kGTLRAdsenseMetricsMatchedAdRequests Requests that returned at
 *        least one ad. (Value: "MATCHED_AD_REQUESTS")
 *    @arg @c kGTLRAdsenseMetricsTotalImpressions Impressions. An impression is
 *        counted for each ad request where at least one ad has been downloaded
 *        to the user‚Äôs device and has begun to load. It is the number of ad
 *        units (for content ads) or search queries (for search ads) that showed
 *        ads. (Value: "TOTAL_IMPRESSIONS")
 *    @arg @c kGTLRAdsenseMetricsImpressions Impressions. An impression is
 *        counted for each ad request where at least one ad has been downloaded
 *        to the user‚Äôs device and has begun to load. It is the number of ad
 *        units (for content ads) or search queries (for search ads) that showed
 *        ads. (Value: "IMPRESSIONS")
 *    @arg @c kGTLRAdsenseMetricsIndividualAdImpressions Ads shown. Different ad
 *        formats will display varying numbers of ads. For example, a vertical
 *        banner may consist of 2 or more ads. Also, the number of ads in an ad
 *        unit may vary depending on whether the ad unit is displaying standard
 *        text ads, expanded text ads or image ads. (Value:
 *        "INDIVIDUAL_AD_IMPRESSIONS")
 *    @arg @c kGTLRAdsenseMetricsClicks Number of times a user clicked on a
 *        standard content ad. (Value: "CLICKS")
 *    @arg @c kGTLRAdsenseMetricsPageViewsSpamRatio Fraction of page views
 *        considered to be spam. Only available to premium accounts. (Value:
 *        "PAGE_VIEWS_SPAM_RATIO")
 *    @arg @c kGTLRAdsenseMetricsAdRequestsSpamRatio Fraction of ad requests
 *        considered to be spam. Only available to premium accounts. (Value:
 *        "AD_REQUESTS_SPAM_RATIO")
 *    @arg @c kGTLRAdsenseMetricsMatchedAdRequestsSpamRatio Fraction of ad
 *        requests that returned ads considered to be spam. Only available to
 *        premium accounts. (Value: "MATCHED_AD_REQUESTS_SPAM_RATIO")
 *    @arg @c kGTLRAdsenseMetricsImpressionsSpamRatio Fraction of impressions
 *        considered to be spam. Only available to premium accounts. (Value:
 *        "IMPRESSIONS_SPAM_RATIO")
 *    @arg @c kGTLRAdsenseMetricsIndividualAdImpressionsSpamRatio Fraction of ad
 *        impressions considered to be spam. Only available to premium accounts.
 *        (Value: "INDIVIDUAL_AD_IMPRESSIONS_SPAM_RATIO")
 *    @arg @c kGTLRAdsenseMetricsClicksSpamRatio Fraction of clicks considered
 *        to be spam. Only available to premium accounts. (Value:
 *        "CLICKS_SPAM_RATIO")
 *    @arg @c kGTLRAdsenseMetricsAdRequestsCoverage Ratio of requested ad units
 *        or queries to the number returned to the site. (Value:
 *        "AD_REQUESTS_COVERAGE")
 *    @arg @c kGTLRAdsenseMetricsPageViewsCtr Ratio of individual page views
 *        that resulted in a click. (Value: "PAGE_VIEWS_CTR")
 *    @arg @c kGTLRAdsenseMetricsAdRequestsCtr Ratio of ad requests that
 *        resulted in a click. (Value: "AD_REQUESTS_CTR")
 *    @arg @c kGTLRAdsenseMetricsMatchedAdRequestsCtr Ratio of clicks to matched
 *        requests. (Value: "MATCHED_AD_REQUESTS_CTR")
 *    @arg @c kGTLRAdsenseMetricsImpressionsCtr Ratio of IMPRESSIONS that
 *        resulted in a click. (Value: "IMPRESSIONS_CTR")
 *    @arg @c kGTLRAdsenseMetricsIndividualAdImpressionsCtr Ratio of individual
 *        ad impressions that resulted in a click. (Value:
 *        "INDIVIDUAL_AD_IMPRESSIONS_CTR")
 *    @arg @c kGTLRAdsenseMetricsActiveViewMeasurability Ratio of requests that
 *        were measurable for viewability. (Value: "ACTIVE_VIEW_MEASURABILITY")
 *    @arg @c kGTLRAdsenseMetricsActiveViewViewability Ratio of requests that
 *        were viewable. (Value: "ACTIVE_VIEW_VIEWABILITY")
 *    @arg @c kGTLRAdsenseMetricsActiveViewTime Mean time an ad was displayed on
 *        screen. (Value: "ACTIVE_VIEW_TIME")
 *    @arg @c kGTLRAdsenseMetricsEstimatedEarnings Estimated earnings of the
 *        publisher. Note that earnings up to yesterday are accurate, more
 *        recent earnings are estimated due to the possibility of spam, or
 *        exchange rate fluctuations. (Value: "ESTIMATED_EARNINGS")
 *    @arg @c kGTLRAdsenseMetricsPageViewsRpm Revenue per thousand page views.
 *        This is calculated by dividing the estimated revenue by the number of
 *        page views multiplied by 1000. (Value: "PAGE_VIEWS_RPM")
 *    @arg @c kGTLRAdsenseMetricsAdRequestsRpm Revenue per thousand ad requests.
 *        This is calculated by dividing estimated revenue by the number of ad
 *        requests multiplied by 1000. (Value: "AD_REQUESTS_RPM")
 *    @arg @c kGTLRAdsenseMetricsMatchedAdRequestsRpm Revenue per thousand
 *        matched ad requests. This is calculated by dividing estimated revenue
 *        by the number of matched ad requests multiplied by 1000. (Value:
 *        "MATCHED_AD_REQUESTS_RPM")
 *    @arg @c kGTLRAdsenseMetricsImpressionsRpm Revenue per thousand ad
 *        impressions. This is calculated by dividing estimated revenue by the
 *        number of ad impressions multiplied by 1000. (Value:
 *        "IMPRESSIONS_RPM")
 *    @arg @c kGTLRAdsenseMetricsIndividualAdImpressionsRpm Revenue per thousand
 *        individual ad impressions. This is calculated by dividing estimated
 *        revenue by the number of individual ad impressions multiplied by 1000.
 *        (Value: "INDIVIDUAL_AD_IMPRESSIONS_RPM")
 *    @arg @c kGTLRAdsenseMetricsCostPerClick Amount the publisher earns each
 *        time a user clicks on an ad. CPC is calculated by dividing the
 *        estimated revenue by the number of clicks received. (Value:
 *        "COST_PER_CLICK")
 *    @arg @c kGTLRAdsenseMetricsAdsPerImpression Number of ad views per
 *        impression. (Value: "ADS_PER_IMPRESSION")
 *    @arg @c kGTLRAdsenseMetricsTotalEarnings Total earnings are the gross
 *        estimated earnings from revenue shared traffic before any parent and
 *        child account revenue share is applied. (Value: "TOTAL_EARNINGS")
 *    @arg @c kGTLRAdsenseMetricsWebsearchResultPages Number of results pages.
 *        (Value: "WEBSEARCH_RESULT_PAGES")
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *metrics;

/**
 *  The name of a dimension or metric to sort the resulting report on, can be
 *  prefixed with "+" to sort ascending or "-" to sort descending. If no prefix
 *  is specified, the column is sorted ascending.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *orderBy;

/**
 *  Timezone in which to generate the report. If unspecified, this defaults to
 *  the account timezone. For more information, see [changing the time zone of
 *  your reports](https://support.google.com/adsense/answer/9830725).
 *
 *  Likely values:
 *    @arg @c kGTLRAdsenseReportingTimeZoneReportingTimeZoneUnspecified
 *        Unspecified timezone. (Value: "REPORTING_TIME_ZONE_UNSPECIFIED")
 *    @arg @c kGTLRAdsenseReportingTimeZoneAccountTimeZone Use the account
 *        timezone in the report. (Value: "ACCOUNT_TIME_ZONE")
 *    @arg @c kGTLRAdsenseReportingTimeZoneGoogleTimeZone Use the Google
 *        timezone in the report (America/Los_Angeles). (Value:
 *        "GOOGLE_TIME_ZONE")
 */
@property(nonatomic, copy, nullable) NSString *reportingTimeZone;

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 */
@property(nonatomic, assign) NSInteger startDateDay;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 */
@property(nonatomic, assign) NSInteger startDateMonth;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 */
@property(nonatomic, assign) NSInteger startDateYear;

/**
 *  Fetches a @c GTLRAdsense_HttpBody.
 *
 *  Generates a csv formatted ad hoc report.
 *
 *  @param account Required. The account which owns the collection of reports.
 *    Format: accounts/{account}
 *
 *  @return GTLRAdsenseQuery_AccountsReportsGenerateCsv
 */
+ (instancetype)queryWithAccount:(NSString *)account;

@end

/**
 *  Gets the saved report from the given resource name.
 *
 *  Method: adsense.accounts.reports.getSaved
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsReportsGetSaved : GTLRAdsenseQuery

/**
 *  Required. The name of the saved report to retrieve. Format:
 *  accounts/{account}/reports/{report}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAdsense_SavedReport.
 *
 *  Gets the saved report from the given resource name.
 *
 *  @param name Required. The name of the saved report to retrieve. Format:
 *    accounts/{account}/reports/{report}
 *
 *  @return GTLRAdsenseQuery_AccountsReportsGetSaved
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Generates a saved report.
 *
 *  Method: adsense.accounts.reports.saved.generate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsReportsSavedGenerate : GTLRAdsenseQuery

/**
 *  The [ISO-4217 currency code](https://en.wikipedia.org/wiki/ISO_4217) to use
 *  when reporting on monetary metrics. Defaults to the account's currency if
 *  not set.
 */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Date range of the report, if unset the range will be considered CUSTOM.
 *
 *  Likely values:
 *    @arg @c kGTLRAdsenseDateRangeReportingDateRangeUnspecified Unspecified
 *        date range. (Value: "REPORTING_DATE_RANGE_UNSPECIFIED")
 *    @arg @c kGTLRAdsenseDateRangeCustom A custom date range specified using
 *        the `start_date` and `end_date` fields. This is the default if no
 *        ReportingDateRange is provided. (Value: "CUSTOM")
 *    @arg @c kGTLRAdsenseDateRangeToday Current day. (Value: "TODAY")
 *    @arg @c kGTLRAdsenseDateRangeYesterday Yesterday. (Value: "YESTERDAY")
 *    @arg @c kGTLRAdsenseDateRangeMonthToDate From the start of the current
 *        month to the current day. e.g. if the current date is 2020-03-12 then
 *        the range will be [2020-03-01, 2020-03-12]. (Value: "MONTH_TO_DATE")
 *    @arg @c kGTLRAdsenseDateRangeYearToDate From the start of the current year
 *        to the current day. e.g. if the current date is 2020-03-12 then the
 *        range will be [2020-01-01, 2020-03-12]. (Value: "YEAR_TO_DATE")
 *    @arg @c kGTLRAdsenseDateRangeLast7Days Last 7 days, excluding current day.
 *        (Value: "LAST_7_DAYS")
 *    @arg @c kGTLRAdsenseDateRangeLast30Days Last 30 days, excluding current
 *        day. (Value: "LAST_30_DAYS")
 */
@property(nonatomic, copy, nullable) NSString *dateRange;

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 */
@property(nonatomic, assign) NSInteger endDateDay;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 */
@property(nonatomic, assign) NSInteger endDateMonth;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 */
@property(nonatomic, assign) NSInteger endDateYear;

/**
 *  The language to use for translating report output. If unspecified, this
 *  defaults to English ("en"). If the given language is not supported, report
 *  output will be returned in English. The language is specified as an [IETF
 *  BCP-47 language code](https://en.wikipedia.org/wiki/IETF_language_tag).
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. Name of the saved report. Format:
 *  accounts/{account}/reports/{report}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Timezone in which to generate the report. If unspecified, this defaults to
 *  the account timezone. For more information, see [changing the time zone of
 *  your reports](https://support.google.com/adsense/answer/9830725).
 *
 *  Likely values:
 *    @arg @c kGTLRAdsenseReportingTimeZoneReportingTimeZoneUnspecified
 *        Unspecified timezone. (Value: "REPORTING_TIME_ZONE_UNSPECIFIED")
 *    @arg @c kGTLRAdsenseReportingTimeZoneAccountTimeZone Use the account
 *        timezone in the report. (Value: "ACCOUNT_TIME_ZONE")
 *    @arg @c kGTLRAdsenseReportingTimeZoneGoogleTimeZone Use the Google
 *        timezone in the report (America/Los_Angeles). (Value:
 *        "GOOGLE_TIME_ZONE")
 */
@property(nonatomic, copy, nullable) NSString *reportingTimeZone;

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 */
@property(nonatomic, assign) NSInteger startDateDay;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 */
@property(nonatomic, assign) NSInteger startDateMonth;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 */
@property(nonatomic, assign) NSInteger startDateYear;

/**
 *  Fetches a @c GTLRAdsense_ReportResult.
 *
 *  Generates a saved report.
 *
 *  @param name Required. Name of the saved report. Format:
 *    accounts/{account}/reports/{report}
 *
 *  @return GTLRAdsenseQuery_AccountsReportsSavedGenerate
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Generates a csv formatted saved report.
 *
 *  Method: adsense.accounts.reports.saved.generateCsv
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsReportsSavedGenerateCsv : GTLRAdsenseQuery

/**
 *  The [ISO-4217 currency code](https://en.wikipedia.org/wiki/ISO_4217) to use
 *  when reporting on monetary metrics. Defaults to the account's currency if
 *  not set.
 */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Date range of the report, if unset the range will be considered CUSTOM.
 *
 *  Likely values:
 *    @arg @c kGTLRAdsenseDateRangeReportingDateRangeUnspecified Unspecified
 *        date range. (Value: "REPORTING_DATE_RANGE_UNSPECIFIED")
 *    @arg @c kGTLRAdsenseDateRangeCustom A custom date range specified using
 *        the `start_date` and `end_date` fields. This is the default if no
 *        ReportingDateRange is provided. (Value: "CUSTOM")
 *    @arg @c kGTLRAdsenseDateRangeToday Current day. (Value: "TODAY")
 *    @arg @c kGTLRAdsenseDateRangeYesterday Yesterday. (Value: "YESTERDAY")
 *    @arg @c kGTLRAdsenseDateRangeMonthToDate From the start of the current
 *        month to the current day. e.g. if the current date is 2020-03-12 then
 *        the range will be [2020-03-01, 2020-03-12]. (Value: "MONTH_TO_DATE")
 *    @arg @c kGTLRAdsenseDateRangeYearToDate From the start of the current year
 *        to the current day. e.g. if the current date is 2020-03-12 then the
 *        range will be [2020-01-01, 2020-03-12]. (Value: "YEAR_TO_DATE")
 *    @arg @c kGTLRAdsenseDateRangeLast7Days Last 7 days, excluding current day.
 *        (Value: "LAST_7_DAYS")
 *    @arg @c kGTLRAdsenseDateRangeLast30Days Last 30 days, excluding current
 *        day. (Value: "LAST_30_DAYS")
 */
@property(nonatomic, copy, nullable) NSString *dateRange;

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 */
@property(nonatomic, assign) NSInteger endDateDay;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 */
@property(nonatomic, assign) NSInteger endDateMonth;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 */
@property(nonatomic, assign) NSInteger endDateYear;

/**
 *  The language to use for translating report output. If unspecified, this
 *  defaults to English ("en"). If the given language is not supported, report
 *  output will be returned in English. The language is specified as an [IETF
 *  BCP-47 language code](https://en.wikipedia.org/wiki/IETF_language_tag).
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. Name of the saved report. Format:
 *  accounts/{account}/reports/{report}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Timezone in which to generate the report. If unspecified, this defaults to
 *  the account timezone. For more information, see [changing the time zone of
 *  your reports](https://support.google.com/adsense/answer/9830725).
 *
 *  Likely values:
 *    @arg @c kGTLRAdsenseReportingTimeZoneReportingTimeZoneUnspecified
 *        Unspecified timezone. (Value: "REPORTING_TIME_ZONE_UNSPECIFIED")
 *    @arg @c kGTLRAdsenseReportingTimeZoneAccountTimeZone Use the account
 *        timezone in the report. (Value: "ACCOUNT_TIME_ZONE")
 *    @arg @c kGTLRAdsenseReportingTimeZoneGoogleTimeZone Use the Google
 *        timezone in the report (America/Los_Angeles). (Value:
 *        "GOOGLE_TIME_ZONE")
 */
@property(nonatomic, copy, nullable) NSString *reportingTimeZone;

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 */
@property(nonatomic, assign) NSInteger startDateDay;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 */
@property(nonatomic, assign) NSInteger startDateMonth;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 */
@property(nonatomic, assign) NSInteger startDateYear;

/**
 *  Fetches a @c GTLRAdsense_HttpBody.
 *
 *  Generates a csv formatted saved report.
 *
 *  @param name Required. Name of the saved report. Format:
 *    accounts/{account}/reports/{report}
 *
 *  @return GTLRAdsenseQuery_AccountsReportsSavedGenerateCsv
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists saved reports.
 *
 *  Method: adsense.accounts.reports.saved.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsReportsSavedList : GTLRAdsenseQuery

/**
 *  The maximum number of reports to include in the response, used for paging.
 *  If unspecified, at most 10000 reports will be returned. The maximum value is
 *  10000; values above 10000 will be coerced to 10000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListPayments` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListPayments` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The account which owns the collection of reports. Format:
 *  accounts/{account}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAdsense_ListSavedReportsResponse.
 *
 *  Lists saved reports.
 *
 *  @param parent Required. The account which owns the collection of reports.
 *    Format: accounts/{account}
 *
 *  @return GTLRAdsenseQuery_AccountsReportsSavedList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets information about the selected site.
 *
 *  Method: adsense.accounts.sites.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsSitesGet : GTLRAdsenseQuery

/** Required. Name of the site. Format: accounts/{account}/sites/{site} */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRAdsense_Site.
 *
 *  Gets information about the selected site.
 *
 *  @param name Required. Name of the site. Format:
 *    accounts/{account}/sites/{site}
 *
 *  @return GTLRAdsenseQuery_AccountsSitesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all the sites available in an account.
 *
 *  Method: adsense.accounts.sites.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeAdsense
 *    @c kGTLRAuthScopeAdsenseReadonly
 */
@interface GTLRAdsenseQuery_AccountsSitesList : GTLRAdsenseQuery

/**
 *  The maximum number of sites to include in the response, used for paging. If
 *  unspecified, at most 10000 sites will be returned. The maximum value is
 *  10000; values above 10000 will be coerced to 10000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListSites` call. Provide this to
 *  retrieve the subsequent page. When paginating, all other parameters provided
 *  to `ListSites` must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The account which owns the collection of sites. Format:
 *  accounts/{account}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRAdsense_ListSitesResponse.
 *
 *  Lists all the sites available in an account.
 *
 *  @param parent Required. The account which owns the collection of sites.
 *    Format: accounts/{account}
 *
 *  @return GTLRAdsenseQuery_AccountsSitesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
