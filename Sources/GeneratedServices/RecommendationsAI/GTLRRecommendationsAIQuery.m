// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Recommendations AI (Beta) (recommendationengine/v1beta1)
// Description:
//   Note that we now highly recommend new customers to use Retail API, which
//   incorporates the GA version of the Recommendations AI funtionalities. To
//   enable Retail API, please visit
//   https://console.cloud.google.com/apis/library/retail.googleapis.com. The
//   Recommendations AI service enables customers to build end-to-end
//   personalized recommendation systems without requiring a high level of
//   expertise in machine learning, recommendation system, or Google Cloud.
// Documentation:
//   https://cloud.google.com/recommendations-ai/docs

#import <GoogleAPIClientForREST/GTLRRecommendationsAIQuery.h>

@implementation GTLRRecommendationsAIQuery

@dynamic fields;

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/catalogItems";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.catalogItems.create";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleProtobufEmpty class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.catalogItems.delete";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.catalogItems.get";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportCatalogItemsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/catalogItems:import";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleLongrunningOperation class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.catalogItems.import";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/catalogItems";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ListCatalogItemsResponse class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.catalogItems.list";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsCatalogItemsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.catalogItems.patch";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleLongrunningOperation class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.eventStores.operations.get";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}/operations";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.eventStores.operations.list";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPlacementsPredict

@dynamic name;

+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}:predict";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPlacementsPredict *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictResponse class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.eventStores.placements.predict";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CreatePredictionApiKeyRegistrationRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/predictionApiKeyRegistrations";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.eventStores.predictionApiKeyRegistrations.create";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleProtobufEmpty class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.eventStores.predictionApiKeyRegistrations.delete";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/predictionApiKeyRegistrations";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresPredictionApiKeyRegistrationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ListPredictionApiKeyRegistrationsResponse class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.eventStores.predictionApiKeyRegistrations.list";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsCollect

@dynamic ets, parent, uri, userEvent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/userEvents:collect";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsCollect *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleApiHttpBody class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.eventStores.userEvents.collect";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/userEvents:import";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleLongrunningOperation class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.eventStores.userEvents.import";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/userEvents";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ListUserEventsResponse class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.eventStores.userEvents.list";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurgeUserEventsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/userEvents:purge";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleLongrunningOperation class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.eventStores.userEvents.purge";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsRejoin

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/userEvents:rejoin";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsRejoin *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleLongrunningOperation class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.eventStores.userEvents.rejoin";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsWrite

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/userEvents:write";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsEventStoresUserEventsWrite *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.eventStores.userEvents.write";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/catalogs";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ListCatalogsResponse class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.list";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleLongrunningOperation class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.operations.get";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}/operations";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.operations.list";
  return query;
}

@end

@implementation GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1Catalog *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRRecommendationsAIQuery_ProjectsLocationsCatalogsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1Catalog class];
  query.loggingName = @"recommendationengine.projects.locations.catalogs.patch";
  return query;
}

@end
