// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Recommendations AI (Beta) (recommendationengine/v1beta1)
// Description:
//   Note that we now highly recommend new customers to use Retail API, which
//   incorporates the GA version of the Recommendations AI funtionalities. To
//   enable Retail API, please visit
//   https://console.cloud.google.com/apis/library/retail.googleapis.com. The
//   Recommendations AI service enables customers to build end-to-end
//   personalized recommendation systems without requiring a high level of
//   expertise in machine learning, recommendation system, or Google Cloud.
// Documentation:
//   https://cloud.google.com/recommendations-ai/docs

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRRecommendationsAI_GoogleApiHttpBody_Extensions_Item;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1BigQuerySource;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1Catalog;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogInlineSource;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1EventDetail;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMap;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMap_CategoricalFeatures;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMap_NumericalFeatures;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMapFloatList;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMapStringList;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1GcsSource;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1Image;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportErrorsConfig;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1InputConfig;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictRequest_Labels;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictRequest_Params;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictResponse_Metadata;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult_ItemMetadata;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem_Costs;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductDetail;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductEventDetail;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurchaseTransaction;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurchaseTransaction_Costs;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurchaseTransaction_Taxes;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEventImportSummary;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEventInlineSource;
@class GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserInfo;
@class GTLRRecommendationsAI_GoogleLongrunningOperation;
@class GTLRRecommendationsAI_GoogleLongrunningOperation_Metadata;
@class GTLRRecommendationsAI_GoogleLongrunningOperation_Response;
@class GTLRRecommendationsAI_GoogleRpcStatus;
@class GTLRRecommendationsAI_GoogleRpcStatus_Details_Item;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig.eventItemLevel

/**
 *  Unknown value - should never be used.
 *
 *  Value: "CATALOG_ITEM_LEVEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig_EventItemLevel_CatalogItemLevelUnspecified;
/**
 *  Catalog items are at master level.
 *
 *  Value: "MASTER"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig_EventItemLevel_Master;
/**
 *  Catalog items are at variant level.
 *
 *  Value: "VARIANT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig_EventItemLevel_Variant;

// ----------------------------------------------------------------------------
// GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig.predictItemLevel

/**
 *  Unknown value - should never be used.
 *
 *  Value: "CATALOG_ITEM_LEVEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig_PredictItemLevel_CatalogItemLevelUnspecified;
/**
 *  Catalog items are at master level.
 *
 *  Value: "MASTER"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig_PredictItemLevel_Master;
/**
 *  Catalog items are at variant level.
 *
 *  Value: "VARIANT"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig_PredictItemLevel_Variant;

// ----------------------------------------------------------------------------
// GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem.stockState

/**
 *  Item that is back-ordered (i.e. temporarily out of stock).
 *
 *  Value: "BACKORDER"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem_StockState_Backorder;
/**
 *  Item in stock.
 *
 *  Value: "IN_STOCK"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem_StockState_InStock;
/**
 *  Item out of stock.
 *
 *  Value: "OUT_OF_STOCK"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem_StockState_OutOfStock;
/**
 *  Item that is in pre-order state.
 *
 *  Value: "PREORDER"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem_StockState_Preorder;
/**
 *  Default item stock status. Should never be used.
 *
 *  Value: "STOCK_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem_StockState_StockStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductDetail.stockState

/**
 *  Item that is back-ordered (i.e. temporarily out of stock).
 *
 *  Value: "BACKORDER"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductDetail_StockState_Backorder;
/**
 *  Item in stock.
 *
 *  Value: "IN_STOCK"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductDetail_StockState_InStock;
/**
 *  Item out of stock.
 *
 *  Value: "OUT_OF_STOCK"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductDetail_StockState_OutOfStock;
/**
 *  Item that is in pre-order state.
 *
 *  Value: "PREORDER"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductDetail_StockState_Preorder;
/**
 *  Default item stock status. Should never be used.
 *
 *  Value: "STOCK_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductDetail_StockState_StockStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest.userEventRejoinScope

/**
 *  Only rejoin catalogs with joined events.
 *
 *  Value: "JOINED_EVENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest_UserEventRejoinScope_JoinedEvents;
/**
 *  Only rejoin catalogs with unjoined events.
 *
 *  Value: "UNJOINED_EVENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest_UserEventRejoinScope_UnjoinedEvents;
/**
 *  Rejoin catalogs with all events including both joined events and unjoined
 *  events.
 *
 *  Value: "USER_EVENT_REJOIN_SCOPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest_UserEventRejoinScope_UserEventRejoinScopeUnspecified;

// ----------------------------------------------------------------------------
// GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent.eventSource

/**
 *  The event is ingested via a javascript pixel or Recommendations AI Tag
 *  through automl datalayer or JS Macros.
 *
 *  Value: "AUTOML"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent_EventSource_Automl;
/**
 *  The event is ingested via Import user events API.
 *
 *  Value: "BATCH_UPLOAD"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent_EventSource_BatchUpload;
/**
 *  The event is ingested via Recommendations AI Tag through Enhanced Ecommerce
 *  datalayer.
 *
 *  Value: "ECOMMERCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent_EventSource_Ecommerce;
/**
 *  Unspecified event source.
 *
 *  Value: "EVENT_SOURCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent_EventSource_EventSourceUnspecified;

/**
 *  Message that represents an arbitrary HTTP body. It should only be used for
 *  payload formats that can't be represented as JSON, such as raw binary or an
 *  HTML page. This message can be used both in streaming and non-streaming API
 *  methods in the request as well as the response. It can be used as a
 *  top-level request field, which is convenient if one wants to extract
 *  parameters from either the URL or HTTP template into the request fields and
 *  also want access to the raw HTTP body. Example: message GetResourceRequest {
 *  // A unique request id. string request_id = 1; // The raw HTTP body is bound
 *  to this field. google.api.HttpBody http_body = 2; } service ResourceService
 *  { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc
 *  UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); }
 *  Example with streaming methods: service CaldavService { rpc
 *  GetCalendar(stream google.api.HttpBody) returns (stream
 *  google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns
 *  (stream google.api.HttpBody); } Use of this type only changes how the
 *  request and response bodies are handled, all other features will continue to
 *  work unchanged.
 */
@interface GTLRRecommendationsAI_GoogleApiHttpBody : GTLRObject

/**
 *  The HTTP Content-Type header value specifying the content type of the body.
 */
@property(nonatomic, copy, nullable) NSString *contentType;

/**
 *  The HTTP request/response body as raw binary.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *data;

/**
 *  Application specific response metadata. Must be set in the first response
 *  for streaming APIs.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleApiHttpBody_Extensions_Item *> *extensions;

@end


/**
 *  GTLRRecommendationsAI_GoogleApiHttpBody_Extensions_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRRecommendationsAI_GoogleApiHttpBody_Extensions_Item : GTLRObject
@end


/**
 *  Metadata for TriggerCatalogRejoin method.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1alphaRejoinCatalogMetadata : GTLRObject
@end


/**
 *  Response message for TriggerCatalogRejoin method.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1alphaRejoinCatalogResponse : GTLRObject

/**
 *  Number of user events that were joined with latest catalog items.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rejoinedUserEventsCount;

@end


/**
 *  Metadata associated with a tune operation.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1alphaTuningMetadata : GTLRObject

/**
 *  The resource name of the recommendation model that this tune applies to.
 *  Format:
 *  projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/eventStores/{event_store_id}/recommendationModels/{recommendation_model_id}
 */
@property(nonatomic, copy, nullable) NSString *recommendationModel;

@end


/**
 *  Response associated with a tune operation.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1alphaTuningResponse : GTLRObject
@end


/**
 *  BigQuery source import data from.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1BigQuerySource : GTLRObject

/**
 *  Optional. The schema to use when parsing the data from the source. Supported
 *  values for catalog imports: 1: "catalog_recommendations_ai" using
 *  https://cloud.google.com/recommendations-ai/docs/upload-catalog#json
 *  (Default for catalogItems.import) 2: "catalog_merchant_center" using
 *  https://cloud.google.com/recommendations-ai/docs/upload-catalog#mc Supported
 *  values for user event imports: 1: "user_events_recommendations_ai" using
 *  https://cloud.google.com/recommendations-ai/docs/manage-user-events#import
 *  (Default for userEvents.import) 2. "user_events_ga360" using
 *  https://support.google.com/analytics/answer/3437719?hl=en
 */
@property(nonatomic, copy, nullable) NSString *dataSchema;

/** Required. The BigQuery data set to copy the data from. */
@property(nonatomic, copy, nullable) NSString *datasetId;

/**
 *  Optional. Intermediate Cloud Storage directory used for the import. Can be
 *  specified if one wants to have the BigQuery export to a specific Cloud
 *  Storage directory.
 */
@property(nonatomic, copy, nullable) NSString *gcsStagingDir;

/**
 *  Optional. The project id (can be project # or id) that the BigQuery source
 *  is in. If not specified, inherits the project id from the parent request.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

/** Required. The BigQuery table to copy the data from. */
@property(nonatomic, copy, nullable) NSString *tableId;

@end


/**
 *  The catalog configuration. Next ID: 5.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1Catalog : GTLRObject

/** Required. The catalog item level configuration. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig *catalogItemLevelConfig;

/** Required. The ID of the default event store. */
@property(nonatomic, copy, nullable) NSString *defaultEventStoreId;

/** Required. The catalog display name. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** The fully qualified resource name of the catalog. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  The inline source for the input config for ImportCatalogItems method.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogInlineSource : GTLRObject

/**
 *  Optional. A list of catalog items to update/create. Recommended max of 10k
 *  items.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem *> *catalogItems;

@end


/**
 *  CatalogItem captures all metadata information of items to be recommended.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem : GTLRObject

/**
 *  Required. Catalog item categories. This field is repeated for supporting one
 *  catalog item belonging to several parallel category hierarchies. For
 *  example, if a shoes product belongs to both ["Shoes & Accessories" ->
 *  "Shoes"] and ["Sports & Fitness" -> "Athletic Clothing" -> "Shoes"], it
 *  could be represented as: "categoryHierarchies": [ { "categories": ["Shoes &
 *  Accessories", "Shoes"]}, { "categories": ["Sports & Fitness", "Athletic
 *  Clothing", "Shoes"] } ]
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy *> *categoryHierarchies;

/**
 *  Optional. Catalog item description. UTF-8 encoded string with a length limit
 *  of 5 KiB.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. Catalog item identifier. UTF-8 encoded string with a length limit
 *  of 128 bytes. This id must be unique among all catalog items within the same
 *  catalog. It should also be used when logging user events in order for the
 *  user events to be joined with the Catalog.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Optional. Highly encouraged. Extra catalog item attributes to be included in
 *  the recommendation model. For example, for retail products, this could
 *  include the store name, vendor, style, color, etc. These are very strong
 *  signals for recommendation model, thus we highly recommend providing the
 *  item attributes here.
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMap *itemAttributes;

/**
 *  Optional. Variant group identifier for prediction results. UTF-8 encoded
 *  string with a length limit of 128 bytes. This field must be enabled before
 *  it can be used. [Learn
 *  more](/recommendations-ai/docs/catalog#item-group-id).
 */
@property(nonatomic, copy, nullable) NSString *itemGroupId;

/**
 *  Optional. Deprecated. The model automatically detects the text language.
 *  Your catalog can include text in different languages, but duplicating
 *  catalog items to provide text in multiple languages can result in degraded
 *  model performance.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/** Optional. Metadata specific to retail products. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem *productMetadata;

/**
 *  Optional. Filtering tags associated with the catalog item. Each tag should
 *  be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used
 *  for filtering recommendation results by passing the tag as part of the
 *  predict request filter.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tags;

/**
 *  Required. Catalog item title. UTF-8 encoded string with a length limit of 1
 *  KiB.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Category represents catalog item category hierarchy.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy : GTLRObject

/**
 *  Required. Catalog item categories. Each category should be a UTF-8 encoded
 *  string with a length limit of 2 KiB. Note that the order in the list denotes
 *  the specificity (from least to most specific).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *categories;

@end


/**
 *  Configures the catalog level that users send events to, and the level at
 *  which predictions are made.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig : GTLRObject

/**
 *  Optional. Level of the catalog at which events are uploaded. See
 *  https://cloud.google.com/recommendations-ai/docs/catalog#catalog-levels for
 *  more details.
 *
 *  Likely values:
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig_EventItemLevel_CatalogItemLevelUnspecified
 *        Unknown value - should never be used. (Value:
 *        "CATALOG_ITEM_LEVEL_UNSPECIFIED")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig_EventItemLevel_Master
 *        Catalog items are at master level. (Value: "MASTER")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig_EventItemLevel_Variant
 *        Catalog items are at variant level. (Value: "VARIANT")
 */
@property(nonatomic, copy, nullable) NSString *eventItemLevel;

/**
 *  Optional. Level of the catalog at which predictions are made. See
 *  https://cloud.google.com/recommendations-ai/docs/catalog#catalog-levels for
 *  more details.
 *
 *  Likely values:
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig_PredictItemLevel_CatalogItemLevelUnspecified
 *        Unknown value - should never be used. (Value:
 *        "CATALOG_ITEM_LEVEL_UNSPECIFIED")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig_PredictItemLevel_Master
 *        Catalog items are at master level. (Value: "MASTER")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemLevelConfig_PredictItemLevel_Variant
 *        Catalog items are at variant level. (Value: "VARIANT")
 */
@property(nonatomic, copy, nullable) NSString *predictItemLevel;

@end


/**
 *  Request message for the `CreatePredictionApiKeyRegistration` method.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CreatePredictionApiKeyRegistrationRequest : GTLRObject

/** Required. The prediction API key registration. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration *predictionApiKeyRegistration;

@end


/**
 *  User event details shared by all recommendation types.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1EventDetail : GTLRObject

/**
 *  Optional. Extra user event features to include in the recommendation model.
 *  For product recommendation, an example of extra user information is
 *  traffic_channel, i.e. how user arrives at the site. Users can arrive at the
 *  site by coming to the site directly, or coming through Google search, and
 *  etc.
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMap *eventAttributes;

/**
 *  Optional. A list of identifiers for the independent experiment groups this
 *  user event belongs to. This is used to distinguish between user events
 *  associated with different experiment setups (e.g. using Recommendation
 *  Engine system, using different recommendation models).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *experimentIds;

/**
 *  Optional. A unique id of a web page view. This should be kept the same for
 *  all user events triggered from the same pageview. For example, an item
 *  detail page view could trigger multiple events as the user is browsing the
 *  page. The `pageViewId` property should be kept the same for all these events
 *  so that they can be grouped together properly. This `pageViewId` will be
 *  automatically generated if using the JavaScript pixel.
 */
@property(nonatomic, copy, nullable) NSString *pageViewId;

/**
 *  Optional. Recommendation token included in the recommendation prediction
 *  response. This field enables accurate attribution of recommendation model
 *  performance. This token enables us to accurately attribute page view or
 *  purchase back to the event and the particular predict response containing
 *  this clicked/purchased item. If user clicks on product K in the
 *  recommendation results, pass the `PredictResponse.recommendationToken`
 *  property as a url parameter to product K's page. When recording events on
 *  product K's page, log the PredictResponse.recommendation_token to this
 *  field. Optional, but highly encouraged for user events that are the result
 *  of a recommendation prediction query.
 */
@property(nonatomic, copy, nullable) NSString *recommendationToken;

/**
 *  Optional. The referrer url of the current page. When using the JavaScript
 *  pixel, this value is filled in automatically.
 */
@property(nonatomic, copy, nullable) NSString *referrerUri;

/**
 *  Optional. Complete url (window.location.href) of the user's current page.
 *  When using the JavaScript pixel, this value is filled in automatically.
 *  Maximum length 5KB.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  FeatureMap represents extra features that customers want to include in the
 *  recommendation model for catalogs/user events as categorical/numerical
 *  features.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMap : GTLRObject

/**
 *  Categorical features that can take on one of a limited number of possible
 *  values. Some examples would be the brand/maker of a product, or country of a
 *  customer. Feature names and values must be UTF-8 encoded strings. For
 *  example: `{ "colors": {"value": ["yellow", "green"]}, "sizes":
 *  {"value":["S", "M"]}`
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMap_CategoricalFeatures *categoricalFeatures;

/**
 *  Numerical features. Some examples would be the height/weight of a product,
 *  or age of a customer. Feature names must be UTF-8 encoded strings. For
 *  example: `{ "lengths_cm": {"value":[2.3, 15.4]}, "heights_cm":
 *  {"value":[8.1, 6.4]} }`
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMap_NumericalFeatures *numericalFeatures;

@end


/**
 *  Categorical features that can take on one of a limited number of possible
 *  values. Some examples would be the brand/maker of a product, or country of a
 *  customer. Feature names and values must be UTF-8 encoded strings. For
 *  example: `{ "colors": {"value": ["yellow", "green"]}, "sizes":
 *  {"value":["S", "M"]}`
 *
 *  @note This class is documented as having more properties of
 *        GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMapStringList.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMap_CategoricalFeatures : GTLRObject
@end


/**
 *  Numerical features. Some examples would be the height/weight of a product,
 *  or age of a customer. Feature names must be UTF-8 encoded strings. For
 *  example: `{ "lengths_cm": {"value":[2.3, 15.4]}, "heights_cm":
 *  {"value":[8.1, 6.4]} }`
 *
 *  @note This class is documented as having more properties of
 *        GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMapFloatList.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMap_NumericalFeatures : GTLRObject
@end


/**
 *  A list of float features.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMapFloatList : GTLRObject

/**
 *  Float feature value.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *value;

@end


/**
 *  A list of string features.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMapStringList : GTLRObject

/** String feature value with a length limit of 128 bytes. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *value;

@end


/**
 *  Google Cloud Storage location for input content. format.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1GcsSource : GTLRObject

/**
 *  Required. Google Cloud Storage URIs to input files. URI can be up to 2000
 *  characters long. URIs can match the full object path (for example,
 *  `gs://bucket/directory/object.json`) or a pattern matching one or more
 *  files, such as `gs://bucket/directory/ *.json`. A request can contain at
 *  most 100 files, and each file can be up to 2 GB. See [Importing catalog
 *  information](/recommendations-ai/docs/upload-catalog) for the expected file
 *  format and setup instructions.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *inputUris;

/**
 *  Optional. The schema to use when parsing the data from the source. Supported
 *  values for catalog imports: 1: "catalog_recommendations_ai" using
 *  https://cloud.google.com/recommendations-ai/docs/upload-catalog#json
 *  (Default for catalogItems.import) 2: "catalog_merchant_center" using
 *  https://cloud.google.com/recommendations-ai/docs/upload-catalog#mc Supported
 *  values for user events imports: 1: "user_events_recommendations_ai" using
 *  https://cloud.google.com/recommendations-ai/docs/manage-user-events#import
 *  (Default for userEvents.import) 2. "user_events_ga360" using
 *  https://support.google.com/analytics/answer/3437719?hl=en
 */
@property(nonatomic, copy, nullable) NSString *jsonSchema;

@end


/**
 *  Catalog item thumbnail/detail image.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1Image : GTLRObject

/**
 *  Optional. Height of the image in number of pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/** Required. URL of the image with a length limit of 5 KiB. */
@property(nonatomic, copy, nullable) NSString *uri;

/**
 *  Optional. Width of the image in number of pixels.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  Request message for Import methods.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportCatalogItemsRequest : GTLRObject

/** Optional. The desired location of errors incurred during the Import. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportErrorsConfig *errorsConfig;

/** Required. The desired input location of the data. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1InputConfig *inputConfig;

/**
 *  Optional. Unique identifier provided by client, within the ancestor dataset
 *  scope. Ensures idempotency and used for request deduplication.
 *  Server-generated if unspecified. Up to 128 characters long. This is returned
 *  as google.longrunning.Operation.name in the response.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. Indicates which fields in the provided imported 'items' to update.
 *  If not set, will by default update all fields.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Response of the ImportCatalogItemsRequest. If the long running operation is
 *  done, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportCatalogItemsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleRpcStatus *> *errorSamples;

/** Echoes the destination for the complete errors in the request if set. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportErrorsConfig *errorsConfig;

@end


/**
 *  Configuration of destination for Import related errors.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportErrorsConfig : GTLRObject

/**
 *  Google Cloud Storage path for import errors. This must be an empty, existing
 *  Cloud Storage bucket. Import errors will be written to a file in this
 *  bucket, one per line, as a JSON-encoded `google.rpc.Status` message.
 */
@property(nonatomic, copy, nullable) NSString *gcsPrefix;

@end


/**
 *  Metadata related to the progress of the Import operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/** Name of the operation. */
@property(nonatomic, copy, nullable) NSString *operationName;

/**
 *  Id of the request / operation. This is parroting back the requestId that was
 *  passed in the request.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Count of entries that were processed successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for the ImportUserEvents request.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportUserEventsRequest : GTLRObject

/** Optional. The desired location of errors incurred during the Import. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportErrorsConfig *errorsConfig;

/** Required. The desired input location of the data. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1InputConfig *inputConfig;

/**
 *  Optional. Unique identifier provided by client, within the ancestor dataset
 *  scope. Ensures idempotency for expensive long running operations.
 *  Server-generated if unspecified. Up to 128 characters long. This is returned
 *  as google.longrunning.Operation.name in the response. Note that this field
 *  must not be set if the desired input config is catalog_inline_source.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

@end


/**
 *  Response of the ImportUserEventsRequest. If the long running operation was
 *  successful, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportUserEventsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleRpcStatus *> *errorSamples;

/**
 *  Echoes the destination for the complete errors if this field was set in the
 *  request.
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ImportErrorsConfig *errorsConfig;

/** Aggregated statistics of user event import status. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEventImportSummary *importSummary;

@end


/**
 *  The input config source.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1InputConfig : GTLRObject

/** BigQuery input source. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1BigQuerySource *bigQuerySource;

/** The Inline source for the input content for Catalog items. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogInlineSource *catalogInlineSource;

/** Google Cloud Storage location for the input content. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1GcsSource *gcsSource;

/** The Inline source for the input content for UserEvents. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEventInlineSource *userEventInlineSource;

@end


/**
 *  Response message for ListCatalogItems method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "catalogItems" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ListCatalogItemsResponse : GTLRCollectionObject

/**
 *  The catalog items.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItem *> *catalogItems;

/**
 *  If empty, the list is complete. If nonempty, the token to pass to the next
 *  request's ListCatalogItemRequest.page_token.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response for ListCatalogs method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "catalogs" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ListCatalogsResponse : GTLRCollectionObject

/**
 *  Output only. All the customer's catalogs.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1Catalog *> *catalogs;

/** Pagination token, if not returned indicates the last page. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for the `ListPredictionApiKeyRegistrations`.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "predictionApiKeyRegistrations" property. If returned as the
 *        result of a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ListPredictionApiKeyRegistrationsResponse : GTLRCollectionObject

/**
 *  If empty, the list is complete. If nonempty, pass the token to the next
 *  request's `ListPredictionApiKeysRegistrationsRequest.pageToken`.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of registered API keys.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration *> *predictionApiKeyRegistrations;

@end


/**
 *  Response message for ListUserEvents method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "userEvents" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ListUserEventsResponse : GTLRCollectionObject

/**
 *  If empty, the list is complete. If nonempty, the token to pass to the next
 *  request's ListUserEvents.page_token.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The user events.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent *> *userEvents;

@end


/**
 *  Registered Api Key.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictionApiKeyRegistration : GTLRObject

/** The API key. */
@property(nonatomic, copy, nullable) NSString *apiKey;

@end


/**
 *  Request message for Predict method. Full resource name of the format:
 *  `{name=projects/ *
 *  /locations/global/catalogs/default_catalog/eventStores/default_event_store/placements/
 *  *}` The id of the recommendation engine placement. This id is used to
 *  identify the set of models that will be used to make the prediction. We
 *  currently support three placements with the following IDs by default: // *
 *  `shopping_cart`: Predicts items frequently bought together with one or more
 *  catalog items in the same shopping session. Commonly displayed after
 *  `add-to-cart` event, on product detail pages, or on the shopping cart page.
 *  * `home_page`: Predicts the next product that a user will most likely engage
 *  with or purchase based on the shopping or viewing history of the specified
 *  `userId` or `visitorId`. For example - Recommendations for you. *
 *  `product_detail`: Predicts the next product that a user will most likely
 *  engage with or purchase. The prediction is based on the shopping or viewing
 *  history of the specified `userId` or `visitorId` and its relevance to a
 *  specified `CatalogItem`. Typically used on product detail pages. For example
 *  - More items like this. * `recently_viewed_default`: Returns up to 75 items
 *  recently viewed by the specified `userId` or `visitorId`, most recent ones
 *  first. Returns nothing if neither of them has viewed any items yet. For
 *  example - Recently viewed. The full list of available placements can be seen
 *  at
 *  https://console.cloud.google.com/recommendation/catalogs/default_catalog/placements
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictRequest : GTLRObject

/**
 *  Optional. Use dryRun mode for this prediction query. If set to true, a fake
 *  model will be used that returns arbitrary catalog items. Note that the
 *  dryRun mode should only be used for testing the API, or if the model is not
 *  ready.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dryRun;

/**
 *  Optional. Filter for restricting prediction results. Accepts values for tags
 *  and the `filterOutOfStockItems` flag. * Tag expressions. Restricts
 *  predictions to items that match all of the specified tags. Boolean operators
 *  `OR` and `NOT` are supported if the expression is enclosed in parentheses,
 *  and must be separated from the tag values by a space. `-"tagA"` is also
 *  supported and is equivalent to `NOT "tagA"`. Tag values must be double
 *  quoted UTF-8 encoded strings with a size limit of 1 KiB. *
 *  filterOutOfStockItems. Restricts predictions to items that do not have a
 *  stockState value of OUT_OF_STOCK. Examples: * tag=("Red" OR "Blue")
 *  tag="New-Arrival" tag=(NOT "promotional") * filterOutOfStockItems
 *  tag=(-"promotional") * filterOutOfStockItems If your filter blocks all
 *  prediction results, nothing will be returned. If you want generic
 *  (unfiltered) popular items to be returned instead, set `strictFiltering` to
 *  false in `PredictRequest.params`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The labels for the predict request. * Label keys can contain
 *  lowercase letters, digits and hyphens, must start with a letter, and must
 *  end with a letter or digit. * Non-zero label values can contain lowercase
 *  letters, digits and hyphens, must start with a letter, and must end with a
 *  letter or digit. * No more than 64 labels can be associated with a given
 *  request. See https://goo.gl/xmQnxf for more information on and examples of
 *  labels.
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictRequest_Labels *labels;

/**
 *  Optional. Maximum number of results to return per page. Set this property to
 *  the number of prediction results required. If zero, the service will choose
 *  a reasonable default.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/** Optional. The previous PredictResponse.next_page_token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Optional. Additional domain specific parameters for the predictions. Allowed
 *  values: * `returnCatalogItem`: Boolean. If set to true, the associated
 *  catalogItem object will be returned in the
 *  `PredictResponse.PredictionResult.itemMetadata` object in the method
 *  response. * `returnItemScore`: Boolean. If set to true, the prediction
 *  'score' corresponding to each returned item will be set in the `metadata`
 *  field in the prediction response. The given 'score' indicates the
 *  probability of an item being clicked/purchased given the user's context and
 *  history. * `strictFiltering`: Boolean. True by default. If set to false, the
 *  service will return generic (unfiltered) popular items instead of empty if
 *  your filter blocks all prediction results. * `priceRerankLevel`: String.
 *  Default empty. If set to be non-empty, then it needs to be one of
 *  {'no-price-reranking', 'low-price-reranking', 'medium-price-reranking',
 *  'high-price-reranking'}. This gives request level control and adjust
 *  prediction results based on product price. * `diversityLevel`: String.
 *  Default empty. If set to be non-empty, then it needs to be one of
 *  {'no-diversity', 'low-diversity', 'medium-diversity', 'high-diversity',
 *  'auto-diversity'}. This gives request level control and adjust prediction
 *  results based on product category.
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictRequest_Params *params;

/**
 *  Required. Context about the user, what they are looking at and what action
 *  they took to trigger the predict request. Note that this user event detail
 *  won't be ingested to userEvent logs. Thus, a separate userEvent write
 *  request is required for event logging. Don't set UserInfo.visitor_id or
 *  UserInfo.user_id to the same fixed ID for different users. If you are trying
 *  to receive non-personalized recommendations (not recommended; this can
 *  negatively impact model performance), instead set UserInfo.visitor_id to a
 *  random unique ID and leave UserInfo.user_id unset.
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent *userEvent;

@end


/**
 *  Optional. The labels for the predict request. * Label keys can contain
 *  lowercase letters, digits and hyphens, must start with a letter, and must
 *  end with a letter or digit. * Non-zero label values can contain lowercase
 *  letters, digits and hyphens, must start with a letter, and must end with a
 *  letter or digit. * No more than 64 labels can be associated with a given
 *  request. See https://goo.gl/xmQnxf for more information on and examples of
 *  labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictRequest_Labels : GTLRObject
@end


/**
 *  Optional. Additional domain specific parameters for the predictions. Allowed
 *  values: * `returnCatalogItem`: Boolean. If set to true, the associated
 *  catalogItem object will be returned in the
 *  `PredictResponse.PredictionResult.itemMetadata` object in the method
 *  response. * `returnItemScore`: Boolean. If set to true, the prediction
 *  'score' corresponding to each returned item will be set in the `metadata`
 *  field in the prediction response. The given 'score' indicates the
 *  probability of an item being clicked/purchased given the user's context and
 *  history. * `strictFiltering`: Boolean. True by default. If set to false, the
 *  service will return generic (unfiltered) popular items instead of empty if
 *  your filter blocks all prediction results. * `priceRerankLevel`: String.
 *  Default empty. If set to be non-empty, then it needs to be one of
 *  {'no-price-reranking', 'low-price-reranking', 'medium-price-reranking',
 *  'high-price-reranking'}. This gives request level control and adjust
 *  prediction results based on product price. * `diversityLevel`: String.
 *  Default empty. If set to be non-empty, then it needs to be one of
 *  {'no-diversity', 'low-diversity', 'medium-diversity', 'high-diversity',
 *  'auto-diversity'}. This gives request level control and adjust prediction
 *  results based on product category.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictRequest_Params : GTLRObject
@end


/**
 *  Response message for predict method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "results" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictResponse : GTLRCollectionObject

/**
 *  True if the dryRun property was set in the request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dryRun;

/** IDs of items in the request that were missing from the catalog. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *itemsMissingInCatalog;

/** Additional domain specific prediction response metadata. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictResponse_Metadata *metadata;

/**
 *  If empty, the list is complete. If nonempty, the token to pass to the next
 *  request's PredictRequest.page_token.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A unique recommendation token. This should be included in the user event
 *  logs resulting from this recommendation, which enables accurate attribution
 *  of recommendation model performance.
 */
@property(nonatomic, copy, nullable) NSString *recommendationToken;

/**
 *  A list of recommended items. The order represents the ranking (from the most
 *  relevant item to the least).
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult *> *results;

@end


/**
 *  Additional domain specific prediction response metadata.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictResponse_Metadata : GTLRObject
@end


/**
 *  PredictionResult represents the recommendation prediction results.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult : GTLRObject

/**
 *  ID of the recommended catalog item
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Additional item metadata / annotations. Possible values: * `catalogItem`:
 *  JSON representation of the catalogItem. Will be set if `returnCatalogItem`
 *  is set to true in `PredictRequest.params`. * `score`: Prediction score in
 *  double value. Will be set if `returnItemScore` is set to true in
 *  `PredictRequest.params`.
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult_ItemMetadata *itemMetadata;

@end


/**
 *  Additional item metadata / annotations. Possible values: * `catalogItem`:
 *  JSON representation of the catalogItem. Will be set if `returnCatalogItem`
 *  is set to true in `PredictRequest.params`. * `score`: Prediction score in
 *  double value. Will be set if `returnItemScore` is set to true in
 *  `PredictRequest.params`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult_ItemMetadata : GTLRObject
@end


/**
 *  ProductCatalogItem captures item metadata specific to retail products.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem : GTLRObject

/**
 *  Optional. The available quantity of the item.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *availableQuantity;

/**
 *  Optional. Canonical URL directly linking to the item detail page with a
 *  length limit of 5 KiB..
 */
@property(nonatomic, copy, nullable) NSString *canonicalProductUri;

/**
 *  Optional. A map to pass the costs associated with the product. For example:
 *  {"manufacturing": 45.5} The profit of selling this item is computed like so:
 *  * If 'exactPrice' is provided, profit = displayPrice - sum(costs) * If
 *  'priceRange' is provided, profit = minPrice - sum(costs)
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem_Costs *costs;

/**
 *  Optional. Only required if the price is set. Currency code for price/costs.
 *  Use three-character ISO-4217 code.
 */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/** Optional. The exact product price. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice *exactPrice;

/** Optional. Product images for the catalog item. */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1Image *> *images;

/** Optional. The product price range. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange *priceRange;

/**
 *  Optional. Online stock state of the catalog item. Default is `IN_STOCK`.
 *
 *  Likely values:
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem_StockState_Backorder
 *        Item that is back-ordered (i.e. temporarily out of stock). (Value:
 *        "BACKORDER")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem_StockState_InStock
 *        Item in stock. (Value: "IN_STOCK")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem_StockState_OutOfStock
 *        Item out of stock. (Value: "OUT_OF_STOCK")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem_StockState_Preorder
 *        Item that is in pre-order state. (Value: "PREORDER")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem_StockState_StockStateUnspecified
 *        Default item stock status. Should never be used. (Value:
 *        "STOCK_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *stockState;

@end


/**
 *  Optional. A map to pass the costs associated with the product. For example:
 *  {"manufacturing": 45.5} The profit of selling this item is computed like so:
 *  * If 'exactPrice' is provided, profit = displayPrice - sum(costs) * If
 *  'priceRange' is provided, profit = minPrice - sum(costs)
 *
 *  @note This class is documented as having more properties of NSNumber (Uses
 *        NSNumber of floatValue.). Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItem_Costs : GTLRObject
@end


/**
 *  Exact product price.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPrice : GTLRObject

/**
 *  Optional. Display price of the product.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *displayPrice;

/**
 *  Optional. Price of the product without any discount. If zero, by default set
 *  to be the 'displayPrice'.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *originalPrice;

@end


/**
 *  Product price range when there are a range of prices for different
 *  variations of the same product.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRange : GTLRObject

/**
 *  Required. The maximum product price.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *max;

/**
 *  Required. The minimum product price.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *min;

@end


/**
 *  Detailed product information associated with a user event.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductDetail : GTLRObject

/**
 *  Optional. Quantity of the products in stock when a user event happens.
 *  Optional. If provided, this overrides the available quantity in Catalog for
 *  this event. and can only be set if `stock_status` is set to `IN_STOCK`. Note
 *  that if an item is out of stock, you must set the `stock_state` field to be
 *  `OUT_OF_STOCK`. Leaving this field unspecified / as zero is not sufficient
 *  to mark the item out of stock.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *availableQuantity;

/**
 *  Optional. Currency code for price/costs. Use three-character ISO-4217 code.
 *  Required only if originalPrice or displayPrice is set.
 */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Optional. Display price of the product (e.g. discounted price). If provided,
 *  this will override the display price in Catalog for this product.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *displayPrice;

/**
 *  Required. Catalog item ID. UTF-8 encoded string with a length limit of 128
 *  characters.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Optional. Extra features associated with a product in the user event. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1FeatureMap *itemAttributes;

/**
 *  Optional. Original price of the product. If provided, this will override the
 *  original price in Catalog for this product.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *originalPrice;

/**
 *  Optional. Quantity of the product associated with the user event. For
 *  example, this field will be 2 if two products are added to the shopping cart
 *  for `add-to-cart` event. Required for `add-to-cart`, `add-to-list`,
 *  `remove-from-cart`, `checkout-start`, `purchase-complete`, `refund` event
 *  types.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/**
 *  Optional. Item stock state. If provided, this overrides the stock state in
 *  Catalog for items in this event.
 *
 *  Likely values:
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductDetail_StockState_Backorder
 *        Item that is back-ordered (i.e. temporarily out of stock). (Value:
 *        "BACKORDER")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductDetail_StockState_InStock
 *        Item in stock. (Value: "IN_STOCK")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductDetail_StockState_OutOfStock
 *        Item out of stock. (Value: "OUT_OF_STOCK")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductDetail_StockState_Preorder
 *        Item that is in pre-order state. (Value: "PREORDER")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductDetail_StockState_StockStateUnspecified
 *        Default item stock status. Should never be used. (Value:
 *        "STOCK_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *stockState;

@end


/**
 *  ProductEventDetail captures user event information specific to retail
 *  products.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductEventDetail : GTLRObject

/**
 *  Optional. The id or name of the associated shopping cart. This id is used to
 *  associate multiple items added or present in the cart before purchase. This
 *  can only be set for `add-to-cart`, `remove-from-cart`, `checkout-start`,
 *  `purchase-complete`, or `shopping-cart-page-view` events.
 */
@property(nonatomic, copy, nullable) NSString *cartId;

/**
 *  Required for `add-to-list` and `remove-from-list` events. The id or name of
 *  the list that the item is being added to or removed from. Other event types
 *  should not set this field.
 */
@property(nonatomic, copy, nullable) NSString *listId;

/**
 *  Required for `category-page-view` events. At least one of search_query or
 *  page_categories is required for `search` events. Other event types should
 *  not set this field. The categories associated with a category page. Category
 *  pages include special pages such as sales or promotions. For instance, a
 *  special sale page may have the category hierarchy: categories : ["Sales",
 *  "2017 Black Friday Deals"].
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy *> *pageCategories;

/**
 *  The main product details related to the event. This field is required for
 *  the following event types: * `add-to-cart` * `add-to-list` *
 *  `checkout-start` * `detail-page-view` * `purchase-complete` * `refund` *
 *  `remove-from-cart` * `remove-from-list` This field is optional for the
 *  following event types: * `page-visit` * `shopping-cart-page-view` - note
 *  that 'product_details' should be set for this unless the shopping cart is
 *  empty. * `search` (highly encouraged) In a `search` event, this field
 *  represents the products returned to the end user on the current page (the
 *  end user may have not finished broswing the whole page yet). When a new page
 *  is returned to the end user, after pagination/filtering/ordering even for
 *  the same query, a new SEARCH event with different product_details is
 *  desired. The end user may have not finished broswing the whole page yet.
 *  This field is not allowed for the following event types: *
 *  `category-page-view` * `home-page-view`
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductDetail *> *productDetails;

/**
 *  Optional. A transaction represents the entire purchase transaction. Required
 *  for `purchase-complete` events. Optional for `checkout-start` events. Other
 *  event types should not set this field.
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurchaseTransaction *purchaseTransaction;

/**
 *  At least one of search_query or page_categories is required for `search`
 *  events. Other event types should not set this field. The user's search query
 *  as UTF-8 encoded text with a length limit of 5 KiB.
 */
@property(nonatomic, copy, nullable) NSString *searchQuery;

@end


/**
 *  A transaction represents the entire purchase transaction.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurchaseTransaction : GTLRObject

/**
 *  Optional. All the costs associated with the product. These can be
 *  manufacturing costs, shipping expenses not borne by the end user, or any
 *  other costs. Total product cost such that profit = revenue - (sum(taxes) +
 *  sum(costs)) If product_cost is not set, then profit = revenue - tax -
 *  shipping - sum(CatalogItem.costs). If CatalogItem.cost is not specified for
 *  one of the items, CatalogItem.cost based profit *cannot* be calculated for
 *  this Transaction.
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurchaseTransaction_Costs *costs;

/**
 *  Required. Currency code. Use three-character ISO-4217 code. This field is
 *  not required if the event type is `refund`.
 */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Optional. The transaction ID with a length limit of 128 bytes.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Required. Total revenue or grand total associated with the transaction. This
 *  value include shipping, tax, or other adjustments to total revenue that you
 *  want to include as part of your revenue calculations. This field is not
 *  required if the event type is `refund`.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *revenue;

/** Optional. All the taxes associated with the transaction. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurchaseTransaction_Taxes *taxes;

@end


/**
 *  Optional. All the costs associated with the product. These can be
 *  manufacturing costs, shipping expenses not borne by the end user, or any
 *  other costs. Total product cost such that profit = revenue - (sum(taxes) +
 *  sum(costs)) If product_cost is not set, then profit = revenue - tax -
 *  shipping - sum(CatalogItem.costs). If CatalogItem.cost is not specified for
 *  one of the items, CatalogItem.cost based profit *cannot* be calculated for
 *  this Transaction.
 *
 *  @note This class is documented as having more properties of NSNumber (Uses
 *        NSNumber of floatValue.). Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurchaseTransaction_Costs : GTLRObject
@end


/**
 *  Optional. All the taxes associated with the transaction.
 *
 *  @note This class is documented as having more properties of NSNumber (Uses
 *        NSNumber of floatValue.). Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurchaseTransaction_Taxes : GTLRObject
@end


/**
 *  Metadata related to the progress of the PurgeUserEvents operation. This will
 *  be returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurgeUserEventsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The ID of the request / operation. */
@property(nonatomic, copy, nullable) NSString *operationName;

@end


/**
 *  Request message for PurgeUserEvents method.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurgeUserEventsRequest : GTLRObject

/**
 *  Required. The filter string to specify the events to be deleted. Empty
 *  string filter is not allowed. The eligible fields for filtering are: *
 *  `eventType`: UserEvent.eventType field of type string. * `eventTime`: in ISO
 *  8601 "zulu" format. * `visitorId`: field of type string. Specifying this
 *  will delete all events associated with a visitor. * `userId`: field of type
 *  string. Specifying this will delete all events associated with a user.
 *  Examples: * Deleting all events in a time range: `eventTime >
 *  "2012-04-23T18:25:43.511Z" eventTime < "2012-04-23T18:30:43.511Z"` *
 *  Deleting specific eventType in time range: `eventTime >
 *  "2012-04-23T18:25:43.511Z" eventType = "detail-page-view"` * Deleting all
 *  events for a specific visitor: `visitorId = "visitor1024"` The filtering
 *  fields are assumed to have an implicit AND.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. The default value is false. Override this flag to true to actually
 *  perform the purge. If the field is not set to true, a sampling of events to
 *  be deleted will be returned.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *force;

@end


/**
 *  Response of the PurgeUserEventsRequest. If the long running operation is
 *  successfully done, then this message is returned by the
 *  google.longrunning.Operations.response field.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1PurgeUserEventsResponse : GTLRObject

/**
 *  The total count of events purged as a result of the operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgedEventsCount;

/**
 *  A sampling of events deleted (or will be deleted) depending on the `force`
 *  property in the request. Max of 500 items will be returned.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent *> *userEventsSample;

@end


/**
 *  Metadata for RejoinUserEvents method.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1RejoinUserEventsMetadata : GTLRObject
@end


/**
 *  Request message for CatalogRejoin method.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest : GTLRObject

/**
 *  Required. The type of the catalog rejoin to define the scope and range of
 *  the user events to be rejoined with catalog items.
 *
 *  Likely values:
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest_UserEventRejoinScope_JoinedEvents
 *        Only rejoin catalogs with joined events. (Value: "JOINED_EVENTS")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest_UserEventRejoinScope_UnjoinedEvents
 *        Only rejoin catalogs with unjoined events. (Value: "UNJOINED_EVENTS")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1RejoinUserEventsRequest_UserEventRejoinScope_UserEventRejoinScopeUnspecified
 *        Rejoin catalogs with all events including both joined events and
 *        unjoined events. (Value: "USER_EVENT_REJOIN_SCOPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *userEventRejoinScope;

@end


/**
 *  Response message for RejoinUserEvents method.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1RejoinUserEventsResponse : GTLRObject

/**
 *  Number of user events that were joined with latest catalog items.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rejoinedUserEventsCount;

@end


/**
 *  UserEvent captures all metadata information recommendation engine needs to
 *  know about how end users interact with customers' website.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent : GTLRObject

/**
 *  Optional. User event detailed information common across different
 *  recommendation types.
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1EventDetail *eventDetail;

/**
 *  Optional. This field should *not* be set when using JavaScript pixel or the
 *  Recommendations AI Tag. Defaults to `EVENT_SOURCE_UNSPECIFIED`.
 *
 *  Likely values:
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent_EventSource_Automl
 *        The event is ingested via a javascript pixel or Recommendations AI Tag
 *        through automl datalayer or JS Macros. (Value: "AUTOML")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent_EventSource_BatchUpload
 *        The event is ingested via Import user events API. (Value:
 *        "BATCH_UPLOAD")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent_EventSource_Ecommerce
 *        The event is ingested via Recommendations AI Tag through Enhanced
 *        Ecommerce datalayer. (Value: "ECOMMERCE")
 *    @arg @c kGTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent_EventSource_EventSourceUnspecified
 *        Unspecified event source. (Value: "EVENT_SOURCE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *eventSource;

/**
 *  Optional. Only required for ImportUserEvents method. Timestamp of user event
 *  created.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *eventTime;

/**
 *  Required. User event type. Allowed values are: * `add-to-cart` Products
 *  being added to cart. * `add-to-list` Items being added to a list (shopping
 *  list, favorites etc). * `category-page-view` Special pages such as sale or
 *  promotion pages viewed. * `checkout-start` User starting a checkout process.
 *  * `detail-page-view` Products detail page viewed. * `home-page-view`
 *  Homepage viewed. * `page-visit` Generic page visits not included in the
 *  event types above. * `purchase-complete` User finishing a purchase. *
 *  `refund` Purchased items being refunded or returned. * `remove-from-cart`
 *  Products being removed from cart. * `remove-from-list` Items being removed
 *  from a list. * `search` Product search. * `shopping-cart-page-view` User
 *  viewing a shopping cart. * `impression` List of items displayed. Used by
 *  Google Tag Manager.
 */
@property(nonatomic, copy, nullable) NSString *eventType;

/**
 *  Optional. Retail product specific user event metadata. This field is
 *  required for the following event types: * `add-to-cart` * `add-to-list` *
 *  `category-page-view` * `checkout-start` * `detail-page-view` *
 *  `purchase-complete` * `refund` * `remove-from-cart` * `remove-from-list` *
 *  `search` This field is optional for the following event types: *
 *  `page-visit` * `shopping-cart-page-view` - note that 'product_event_detail'
 *  should be set for this unless the shopping cart is empty. This field is not
 *  allowed for the following event types: * `home-page-view`
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1ProductEventDetail *productEventDetail;

/** Required. User information. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserInfo *userInfo;

@end


/**
 *  A summary of import result. The UserEventImportSummary summarizes the import
 *  status for user events.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEventImportSummary : GTLRObject

/**
 *  Count of user events imported with complete existing catalog information.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *joinedEventsCount;

/**
 *  Count of user events imported, but with catalog information not found in the
 *  imported catalog.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unjoinedEventsCount;

@end


/**
 *  The inline source for the input config for ImportUserEvents method.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEventInlineSource : GTLRObject

/**
 *  Optional. A list of user events to import. Recommended max of 10k items.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserEvent *> *userEvents;

@end


/**
 *  Information of end users.
 */
@interface GTLRRecommendationsAI_GoogleCloudRecommendationengineV1beta1UserInfo : GTLRObject

/**
 *  Optional. Indicates if the request is made directly from the end user in
 *  which case the user_agent and ip_address fields can be populated from the
 *  HTTP request. This should *not* be set when using the javascript pixel. This
 *  flag should be set only if the API request is made directly from the end
 *  user such as a mobile app (and not if a gateway or a server is processing
 *  and pushing the user events).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *directUserRequest;

/**
 *  Optional. IP address of the user. This could be either IPv4 (e.g.
 *  104.133.9.80) or IPv6 (e.g. 2001:0db8:85a3:0000:0000:8a2e:0370:7334). This
 *  should *not* be set when using the javascript pixel or if
 *  `direct_user_request` is set. Used to extract location information for
 *  personalization.
 */
@property(nonatomic, copy, nullable) NSString *ipAddress;

/**
 *  Optional. User agent as included in the HTTP header. UTF-8 encoded string
 *  with a length limit of 1 KiB. This should *not* be set when using the
 *  JavaScript pixel or if `directUserRequest` is set.
 */
@property(nonatomic, copy, nullable) NSString *userAgent;

/**
 *  Optional. Unique identifier for logged-in user with a length limit of 128
 *  bytes. Required only for logged-in users. Don't set for anonymous users.
 *  Don't set the field to the same fixed ID for different users. This mixes the
 *  event history of those users together, which results in degraded model
 *  quality.
 */
@property(nonatomic, copy, nullable) NSString *userId;

/**
 *  Required. A unique identifier for tracking visitors with a length limit of
 *  128 bytes. For example, this could be implemented with an HTTP cookie, which
 *  should be able to uniquely identify a visitor on a single device. This
 *  unique identifier should not change if the visitor logs in or out of the
 *  website. Maximum length 128 bytes. Cannot be empty. Don't set the field to
 *  the same fixed ID for different users. This mixes the event history of those
 *  users together, which results in degraded model quality.
 */
@property(nonatomic, copy, nullable) NSString *visitorId;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRRecommendationsAI_GoogleLongrunningListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleLongrunningOperation *> *operations;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRRecommendationsAI_GoogleLongrunningOperation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleRpcStatus *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleLongrunningOperation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRRecommendationsAI_GoogleLongrunningOperation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRRecommendationsAI_GoogleLongrunningOperation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRRecommendationsAI_GoogleLongrunningOperation_Response : GTLRObject
@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRRecommendationsAI_GoogleProtobufEmpty : GTLRObject
@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRRecommendationsAI_GoogleRpcStatus : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRRecommendationsAI_GoogleRpcStatus_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRRecommendationsAI_GoogleRpcStatus_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRRecommendationsAI_GoogleRpcStatus_Details_Item : GTLRObject
@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
