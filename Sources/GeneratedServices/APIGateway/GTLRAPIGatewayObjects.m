// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   API Gateway API (apigateway/v1)
// Documentation:
//   https://cloud.google.com/api-gateway/docs

#import <GoogleAPIClientForREST/GTLRAPIGatewayObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRAPIGateway_Api.state
NSString * const kGTLRAPIGateway_Api_State_Active           = @"ACTIVE";
NSString * const kGTLRAPIGateway_Api_State_Creating         = @"CREATING";
NSString * const kGTLRAPIGateway_Api_State_Deleting         = @"DELETING";
NSString * const kGTLRAPIGateway_Api_State_Failed           = @"FAILED";
NSString * const kGTLRAPIGateway_Api_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRAPIGateway_Api_State_Updating         = @"UPDATING";

// GTLRAPIGateway_ApiConfig.state
NSString * const kGTLRAPIGateway_ApiConfig_State_Activating    = @"ACTIVATING";
NSString * const kGTLRAPIGateway_ApiConfig_State_Active        = @"ACTIVE";
NSString * const kGTLRAPIGateway_ApiConfig_State_Creating      = @"CREATING";
NSString * const kGTLRAPIGateway_ApiConfig_State_Deleting      = @"DELETING";
NSString * const kGTLRAPIGateway_ApiConfig_State_Failed        = @"FAILED";
NSString * const kGTLRAPIGateway_ApiConfig_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRAPIGateway_ApiConfig_State_Updating      = @"UPDATING";

// GTLRAPIGateway_AuditLogConfig.logType
NSString * const kGTLRAPIGateway_AuditLogConfig_LogType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRAPIGateway_AuditLogConfig_LogType_DataRead = @"DATA_READ";
NSString * const kGTLRAPIGateway_AuditLogConfig_LogType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRAPIGateway_AuditLogConfig_LogType_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";

// GTLRAPIGateway_Gateway.state
NSString * const kGTLRAPIGateway_Gateway_State_Active          = @"ACTIVE";
NSString * const kGTLRAPIGateway_Gateway_State_Creating        = @"CREATING";
NSString * const kGTLRAPIGateway_Gateway_State_Deleting        = @"DELETING";
NSString * const kGTLRAPIGateway_Gateway_State_Failed          = @"FAILED";
NSString * const kGTLRAPIGateway_Gateway_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRAPIGateway_Gateway_State_Updating        = @"UPDATING";

// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Api
//

@implementation GTLRAPIGateway_Api
@dynamic createTime, displayName, labels, managedService, name, state,
         updateTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Api_Labels
//

@implementation GTLRAPIGateway_Api_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_ApiConfig
//

@implementation GTLRAPIGateway_ApiConfig
@dynamic createTime, displayName, gatewayServiceAccount, grpcServices, labels,
         managedServiceConfigs, name, openapiDocuments, serviceConfigId, state,
         updateTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"grpcServices" : [GTLRAPIGateway_ApiConfigGrpcServiceDefinition class],
    @"managedServiceConfigs" : [GTLRAPIGateway_ApiConfigFile class],
    @"openapiDocuments" : [GTLRAPIGateway_ApiConfigOpenApiDocument class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_ApiConfig_Labels
//

@implementation GTLRAPIGateway_ApiConfig_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_ApiConfigFile
//

@implementation GTLRAPIGateway_ApiConfigFile
@dynamic contents, path;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_ApiConfigGrpcServiceDefinition
//

@implementation GTLRAPIGateway_ApiConfigGrpcServiceDefinition
@dynamic fileDescriptorSet, source;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"source" : [GTLRAPIGateway_ApiConfigFile class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_ApiConfigOpenApiDocument
//

@implementation GTLRAPIGateway_ApiConfigOpenApiDocument
@dynamic document;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_AuditConfig
//

@implementation GTLRAPIGateway_AuditConfig
@dynamic auditLogConfigs, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditLogConfigs" : [GTLRAPIGateway_AuditLogConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_AuditLogConfig
//

@implementation GTLRAPIGateway_AuditLogConfig
@dynamic exemptedMembers, logType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Binding
//

@implementation GTLRAPIGateway_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_CancelOperationRequest
//

@implementation GTLRAPIGateway_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Empty
//

@implementation GTLRAPIGateway_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Expr
//

@implementation GTLRAPIGateway_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Gateway
//

@implementation GTLRAPIGateway_Gateway
@dynamic apiConfig, createTime, defaultHostname, displayName, labels, name,
         state, updateTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Gateway_Labels
//

@implementation GTLRAPIGateway_Gateway_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_ListApiConfigsResponse
//

@implementation GTLRAPIGateway_ListApiConfigsResponse
@dynamic apiConfigs, nextPageToken, unreachableLocations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"apiConfigs" : [GTLRAPIGateway_ApiConfig class],
    @"unreachableLocations" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"apiConfigs";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_ListApisResponse
//

@implementation GTLRAPIGateway_ListApisResponse
@dynamic apis, nextPageToken, unreachableLocations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"apis" : [GTLRAPIGateway_Api class],
    @"unreachableLocations" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"apis";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_ListGatewaysResponse
//

@implementation GTLRAPIGateway_ListGatewaysResponse
@dynamic gateways, nextPageToken, unreachableLocations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"gateways" : [GTLRAPIGateway_Gateway class],
    @"unreachableLocations" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"gateways";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_ListLocationsResponse
//

@implementation GTLRAPIGateway_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRAPIGateway_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_ListOperationsResponse
//

@implementation GTLRAPIGateway_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRAPIGateway_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Location
//

@implementation GTLRAPIGateway_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Location_Labels
//

@implementation GTLRAPIGateway_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Location_Metadata
//

@implementation GTLRAPIGateway_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Operation
//

@implementation GTLRAPIGateway_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Operation_Metadata
//

@implementation GTLRAPIGateway_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Operation_Response
//

@implementation GTLRAPIGateway_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_OperationMetadata
//

@implementation GTLRAPIGateway_OperationMetadata
@dynamic apiVersion, createTime, diagnostics, endTime, requestedCancellation,
         statusMessage, target, verb;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"diagnostics" : [GTLRAPIGateway_OperationMetadataDiagnostic class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_OperationMetadataDiagnostic
//

@implementation GTLRAPIGateway_OperationMetadataDiagnostic
@dynamic location, message;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Policy
//

@implementation GTLRAPIGateway_Policy
@dynamic auditConfigs, bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditConfigs" : [GTLRAPIGateway_AuditConfig class],
    @"bindings" : [GTLRAPIGateway_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_SetIamPolicyRequest
//

@implementation GTLRAPIGateway_SetIamPolicyRequest
@dynamic policy, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Status
//

@implementation GTLRAPIGateway_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRAPIGateway_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_Status_Details_Item
//

@implementation GTLRAPIGateway_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_TestIamPermissionsRequest
//

@implementation GTLRAPIGateway_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAPIGateway_TestIamPermissionsResponse
//

@implementation GTLRAPIGateway_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end
