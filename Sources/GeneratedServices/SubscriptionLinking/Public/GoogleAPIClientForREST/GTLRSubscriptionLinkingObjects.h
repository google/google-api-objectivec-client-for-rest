// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Reader Revenue Subscription Linking API (readerrevenuesubscriptionlinking/v1)
// Description:
//   readerrevenuesubscriptionlinking.googleapis.com API.
// Documentation:
//   https://developers.google.com/news/subscribe/subscription-linking/overview

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRSubscriptionLinking_Entitlement;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Response to deleting a reader of a publication.
 */
@interface GTLRSubscriptionLinking_DeleteReaderResponse : GTLRObject
@end


/**
 *  A single entitlement for a publication reader
 */
@interface GTLRSubscriptionLinking_Entitlement : GTLRObject

/**
 *  The detail field can carry a description of the SKU that corresponds to what
 *  the user has been granted access to. This description, which is opaque to
 *  Google, can be displayed in the Google user subscription console for users
 *  who linked the subscription to a Google Account. Max 80 character limit.
 */
@property(nonatomic, copy, nullable) NSString *detail;

/**
 *  Required. Expiration time of the entitlement. Entitlements that have expired
 *  over 30 days will be purged. Required. LINT.IfChange(expire_time) The max
 *  expire_time is 398 days from now().
 *  LINT.ThenChange(//depot/google3/java/com/google/subscribewithgoogle/accountlinking/subscriptionlink/service/config/protoconf.pi:max_expiry_age)
 */
@property(nonatomic, strong, nullable) GTLRDateTime *expireTime;

/**
 *  Required. The publication's product ID that the user has access to. This is
 *  the same product ID as can be found in Schema.org markup
 *  (http://schema.org/productID). E.g. "dailybugle.com:basic"
 */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  A source-specific subscription token. This is an opaque string that the
 *  publisher provides to Google. This token is opaque and has no meaning to
 *  Google.
 */
@property(nonatomic, copy, nullable) NSString *subscriptionToken;

@end


/**
 *  A reader of a publication.
 */
@interface GTLRSubscriptionLinking_Reader : GTLRObject

/**
 *  Output only. Time the publication reader was created and associated with a
 *  Google user.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The resource name of the reader. The last part of ppid in the
 *  resource name is the publisher provided id.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  A singleton containing all of a reader's entitlements for a publication.
 */
@interface GTLRSubscriptionLinking_ReaderEntitlements : GTLRObject

/** All of the entitlements for a publication reader. */
@property(nonatomic, strong, nullable) NSArray<GTLRSubscriptionLinking_Entitlement *> *entitlements;

/** Output only. The resource name of the singleton. */
@property(nonatomic, copy, nullable) NSString *name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
