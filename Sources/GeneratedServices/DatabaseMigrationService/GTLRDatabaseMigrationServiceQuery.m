// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Database Migration API (datamigration/v1)
// Description:
//   Manage Cloud Database Migration Service resources on Google Cloud Platform.
// Documentation:
//   https://cloud.google.com/database-migration/

#import <GoogleAPIClientForREST/GTLRDatabaseMigrationServiceQuery.h>

@implementation GTLRDatabaseMigrationServiceQuery

@dynamic fields;

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesCreate

@dynamic connectionProfileId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_ConnectionProfile *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/connectionProfiles";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Operation class];
  query.loggingName = @"datamigration.projects.locations.connectionProfiles.create";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesDelete

@dynamic force, name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Operation class];
  query.loggingName = @"datamigration.projects.locations.connectionProfiles.delete";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_ConnectionProfile class];
  query.loggingName = @"datamigration.projects.locations.connectionProfiles.get";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Policy class];
  query.loggingName = @"datamigration.projects.locations.connectionProfiles.getIamPolicy";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/connectionProfiles";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_ListConnectionProfilesResponse class];
  query.loggingName = @"datamigration.projects.locations.connectionProfiles.list";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_ConnectionProfile *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Operation class];
  query.loggingName = @"datamigration.projects.locations.connectionProfiles.patch";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Policy class];
  query.loggingName = @"datamigration.projects.locations.connectionProfiles.setIamPolicy";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsConnectionProfilesTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_TestIamPermissionsResponse class];
  query.loggingName = @"datamigration.projects.locations.connectionProfiles.testIamPermissions";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Location class];
  query.loggingName = @"datamigration.projects.locations.get";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/locations";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_ListLocationsResponse class];
  query.loggingName = @"datamigration.projects.locations.list";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsCreate

@dynamic migrationJobId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_MigrationJob *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/migrationJobs";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Operation class];
  query.loggingName = @"datamigration.projects.locations.migrationJobs.create";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsDelete

@dynamic force, name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Operation class];
  query.loggingName = @"datamigration.projects.locations.migrationJobs.delete";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsGenerateSshScript

@dynamic migrationJob;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_GenerateSshScriptRequest *)object
                   migrationJob:(NSString *)migrationJob {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"migrationJob" ];
  NSString *pathURITemplate = @"v1/{+migrationJob}:generateSshScript";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsGenerateSshScript *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.migrationJob = migrationJob;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_SshScript class];
  query.loggingName = @"datamigration.projects.locations.migrationJobs.generateSshScript";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_MigrationJob class];
  query.loggingName = @"datamigration.projects.locations.migrationJobs.get";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Policy class];
  query.loggingName = @"datamigration.projects.locations.migrationJobs.getIamPolicy";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/migrationJobs";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_ListMigrationJobsResponse class];
  query.loggingName = @"datamigration.projects.locations.migrationJobs.list";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_MigrationJob *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Operation class];
  query.loggingName = @"datamigration.projects.locations.migrationJobs.patch";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsPromote

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_PromoteMigrationJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:promote";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsPromote *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Operation class];
  query.loggingName = @"datamigration.projects.locations.migrationJobs.promote";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsRestart

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_RestartMigrationJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:restart";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsRestart *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Operation class];
  query.loggingName = @"datamigration.projects.locations.migrationJobs.restart";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsResume

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_ResumeMigrationJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:resume";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsResume *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Operation class];
  query.loggingName = @"datamigration.projects.locations.migrationJobs.resume";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Policy class];
  query.loggingName = @"datamigration.projects.locations.migrationJobs.setIamPolicy";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsStart

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_StartMigrationJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:start";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsStart *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Operation class];
  query.loggingName = @"datamigration.projects.locations.migrationJobs.start";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsStop

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_StopMigrationJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:stop";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsStop *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Operation class];
  query.loggingName = @"datamigration.projects.locations.migrationJobs.stop";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_TestIamPermissionsResponse class];
  query.loggingName = @"datamigration.projects.locations.migrationJobs.testIamPermissions";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsVerify

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_VerifyMigrationJobRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:verify";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsMigrationJobsVerify *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Operation class];
  query.loggingName = @"datamigration.projects.locations.migrationJobs.verify";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDatabaseMigrationService_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Empty class];
  query.loggingName = @"datamigration.projects.locations.operations.cancel";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Empty class];
  query.loggingName = @"datamigration.projects.locations.operations.delete";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_Operation class];
  query.loggingName = @"datamigration.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRDatabaseMigrationServiceQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRDatabaseMigrationServiceQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDatabaseMigrationService_ListOperationsResponse class];
  query.loggingName = @"datamigration.projects.locations.operations.list";
  return query;
}

@end
