// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Database Migration API (datamigration/v1)
// Description:
//   Manage Cloud Database Migration Service resources on Google Cloud Platform.
// Documentation:
//   https://cloud.google.com/database-migration/

#import <GoogleAPIClientForREST/GTLRDatabaseMigrationServiceObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRDatabaseMigrationService_AlloyDbSettings.databaseVersion
NSString * const kGTLRDatabaseMigrationService_AlloyDbSettings_DatabaseVersion_DatabaseVersionUnspecified = @"DATABASE_VERSION_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_AlloyDbSettings_DatabaseVersion_Postgres14 = @"POSTGRES_14";
NSString * const kGTLRDatabaseMigrationService_AlloyDbSettings_DatabaseVersion_Postgres15 = @"POSTGRES_15";
NSString * const kGTLRDatabaseMigrationService_AlloyDbSettings_DatabaseVersion_Postgres16 = @"POSTGRES_16";

// GTLRDatabaseMigrationService_AuditLogConfig.logType
NSString * const kGTLRDatabaseMigrationService_AuditLogConfig_LogType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRDatabaseMigrationService_AuditLogConfig_LogType_DataRead = @"DATA_READ";
NSString * const kGTLRDatabaseMigrationService_AuditLogConfig_LogType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRDatabaseMigrationService_AuditLogConfig_LogType_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";

// GTLRDatabaseMigrationService_BackgroundJobLogEntry.completionState
NSString * const kGTLRDatabaseMigrationService_BackgroundJobLogEntry_CompletionState_Failed = @"FAILED";
NSString * const kGTLRDatabaseMigrationService_BackgroundJobLogEntry_CompletionState_JobCompletionStateUnspecified = @"JOB_COMPLETION_STATE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_BackgroundJobLogEntry_CompletionState_Succeeded = @"SUCCEEDED";

// GTLRDatabaseMigrationService_BackgroundJobLogEntry.jobType
NSString * const kGTLRDatabaseMigrationService_BackgroundJobLogEntry_JobType_BackgroundJobTypeApplyDestination = @"BACKGROUND_JOB_TYPE_APPLY_DESTINATION";
NSString * const kGTLRDatabaseMigrationService_BackgroundJobLogEntry_JobType_BackgroundJobTypeConvert = @"BACKGROUND_JOB_TYPE_CONVERT";
NSString * const kGTLRDatabaseMigrationService_BackgroundJobLogEntry_JobType_BackgroundJobTypeImportRulesFile = @"BACKGROUND_JOB_TYPE_IMPORT_RULES_FILE";
NSString * const kGTLRDatabaseMigrationService_BackgroundJobLogEntry_JobType_BackgroundJobTypeSourceSeed = @"BACKGROUND_JOB_TYPE_SOURCE_SEED";
NSString * const kGTLRDatabaseMigrationService_BackgroundJobLogEntry_JobType_BackgroundJobTypeUnspecified = @"BACKGROUND_JOB_TYPE_UNSPECIFIED";

// GTLRDatabaseMigrationService_CloudSqlSettings.activationPolicy
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_ActivationPolicy_Always = @"ALWAYS";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_ActivationPolicy_Never = @"NEVER";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_ActivationPolicy_SqlActivationPolicyUnspecified = @"SQL_ACTIVATION_POLICY_UNSPECIFIED";

// GTLRDatabaseMigrationService_CloudSqlSettings.availabilityType
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_AvailabilityType_Regional = @"REGIONAL";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_AvailabilityType_SqlAvailabilityTypeUnspecified = @"SQL_AVAILABILITY_TYPE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_AvailabilityType_Zonal = @"ZONAL";

// GTLRDatabaseMigrationService_CloudSqlSettings.databaseVersion
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql56 = @"MYSQL_5_6";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql57 = @"MYSQL_5_7";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql80 = @"MYSQL_8_0";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql8018 = @"MYSQL_8_0_18";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql8026 = @"MYSQL_8_0_26";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql8027 = @"MYSQL_8_0_27";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql8028 = @"MYSQL_8_0_28";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql8030 = @"MYSQL_8_0_30";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql8031 = @"MYSQL_8_0_31";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql8032 = @"MYSQL_8_0_32";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql8033 = @"MYSQL_8_0_33";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql8034 = @"MYSQL_8_0_34";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql8035 = @"MYSQL_8_0_35";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql8036 = @"MYSQL_8_0_36";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql8037 = @"MYSQL_8_0_37";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Mysql84 = @"MYSQL_8_4";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Postgres10 = @"POSTGRES_10";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Postgres11 = @"POSTGRES_11";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Postgres12 = @"POSTGRES_12";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Postgres13 = @"POSTGRES_13";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Postgres14 = @"POSTGRES_14";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Postgres15 = @"POSTGRES_15";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Postgres16 = @"POSTGRES_16";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_Postgres96 = @"POSTGRES_9_6";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DatabaseVersion_SqlDatabaseVersionUnspecified = @"SQL_DATABASE_VERSION_UNSPECIFIED";

// GTLRDatabaseMigrationService_CloudSqlSettings.dataDiskType
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DataDiskType_PdHdd = @"PD_HDD";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DataDiskType_PdSsd = @"PD_SSD";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_DataDiskType_SqlDataDiskTypeUnspecified = @"SQL_DATA_DISK_TYPE_UNSPECIFIED";

// GTLRDatabaseMigrationService_CloudSqlSettings.edition
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_Edition_EditionUnspecified = @"EDITION_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_Edition_Enterprise = @"ENTERPRISE";
NSString * const kGTLRDatabaseMigrationService_CloudSqlSettings_Edition_EnterprisePlus = @"ENTERPRISE_PLUS";

// GTLRDatabaseMigrationService_ConnectionProfile.provider
NSString * const kGTLRDatabaseMigrationService_ConnectionProfile_Provider_Alloydb = @"ALLOYDB";
NSString * const kGTLRDatabaseMigrationService_ConnectionProfile_Provider_Aurora = @"AURORA";
NSString * const kGTLRDatabaseMigrationService_ConnectionProfile_Provider_Cloudsql = @"CLOUDSQL";
NSString * const kGTLRDatabaseMigrationService_ConnectionProfile_Provider_DatabaseProviderUnspecified = @"DATABASE_PROVIDER_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_ConnectionProfile_Provider_Rds = @"RDS";

// GTLRDatabaseMigrationService_ConnectionProfile.state
NSString * const kGTLRDatabaseMigrationService_ConnectionProfile_State_Creating = @"CREATING";
NSString * const kGTLRDatabaseMigrationService_ConnectionProfile_State_Deleted = @"DELETED";
NSString * const kGTLRDatabaseMigrationService_ConnectionProfile_State_Deleting = @"DELETING";
NSString * const kGTLRDatabaseMigrationService_ConnectionProfile_State_Draft = @"DRAFT";
NSString * const kGTLRDatabaseMigrationService_ConnectionProfile_State_Failed = @"FAILED";
NSString * const kGTLRDatabaseMigrationService_ConnectionProfile_State_Ready = @"READY";
NSString * const kGTLRDatabaseMigrationService_ConnectionProfile_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_ConnectionProfile_State_Updating = @"UPDATING";

// GTLRDatabaseMigrationService_DatabaseEngineInfo.engine
NSString * const kGTLRDatabaseMigrationService_DatabaseEngineInfo_Engine_DatabaseEngineUnspecified = @"DATABASE_ENGINE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_DatabaseEngineInfo_Engine_Mysql = @"MYSQL";
NSString * const kGTLRDatabaseMigrationService_DatabaseEngineInfo_Engine_Oracle = @"ORACLE";
NSString * const kGTLRDatabaseMigrationService_DatabaseEngineInfo_Engine_Postgresql = @"POSTGRESQL";
NSString * const kGTLRDatabaseMigrationService_DatabaseEngineInfo_Engine_Sqlserver = @"SQLSERVER";

// GTLRDatabaseMigrationService_DatabaseEntity.entityType
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeColumn = @"DATABASE_ENTITY_TYPE_COLUMN";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeConstraint = @"DATABASE_ENTITY_TYPE_CONSTRAINT";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeDatabase = @"DATABASE_ENTITY_TYPE_DATABASE";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeDatabasePackage = @"DATABASE_ENTITY_TYPE_DATABASE_PACKAGE";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeFunction = @"DATABASE_ENTITY_TYPE_FUNCTION";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeIndex = @"DATABASE_ENTITY_TYPE_INDEX";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeMaterializedView = @"DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeSchema = @"DATABASE_ENTITY_TYPE_SCHEMA";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeSequence = @"DATABASE_ENTITY_TYPE_SEQUENCE";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeStoredProcedure = @"DATABASE_ENTITY_TYPE_STORED_PROCEDURE";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeSynonym = @"DATABASE_ENTITY_TYPE_SYNONYM";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeTable = @"DATABASE_ENTITY_TYPE_TABLE";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeTrigger = @"DATABASE_ENTITY_TYPE_TRIGGER";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeUdt = @"DATABASE_ENTITY_TYPE_UDT";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeUnspecified = @"DATABASE_ENTITY_TYPE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_EntityType_DatabaseEntityTypeView = @"DATABASE_ENTITY_TYPE_VIEW";

// GTLRDatabaseMigrationService_DatabaseEntity.tree
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_Tree_Destination = @"DESTINATION";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_Tree_Draft = @"DRAFT";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_Tree_Source = @"SOURCE";
NSString * const kGTLRDatabaseMigrationService_DatabaseEntity_Tree_TreeTypeUnspecified = @"TREE_TYPE_UNSPECIFIED";

// GTLRDatabaseMigrationService_DatabaseType.engine
NSString * const kGTLRDatabaseMigrationService_DatabaseType_Engine_DatabaseEngineUnspecified = @"DATABASE_ENGINE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_DatabaseType_Engine_Mysql = @"MYSQL";
NSString * const kGTLRDatabaseMigrationService_DatabaseType_Engine_Oracle = @"ORACLE";
NSString * const kGTLRDatabaseMigrationService_DatabaseType_Engine_Postgresql = @"POSTGRESQL";
NSString * const kGTLRDatabaseMigrationService_DatabaseType_Engine_Sqlserver = @"SQLSERVER";

// GTLRDatabaseMigrationService_DatabaseType.provider
NSString * const kGTLRDatabaseMigrationService_DatabaseType_Provider_Alloydb = @"ALLOYDB";
NSString * const kGTLRDatabaseMigrationService_DatabaseType_Provider_Aurora = @"AURORA";
NSString * const kGTLRDatabaseMigrationService_DatabaseType_Provider_Cloudsql = @"CLOUDSQL";
NSString * const kGTLRDatabaseMigrationService_DatabaseType_Provider_DatabaseProviderUnspecified = @"DATABASE_PROVIDER_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_DatabaseType_Provider_Rds = @"RDS";

// GTLRDatabaseMigrationService_DoubleComparisonFilter.valueComparison
NSString * const kGTLRDatabaseMigrationService_DoubleComparisonFilter_ValueComparison_ValueComparisonIfValueLargerEqualThan = @"VALUE_COMPARISON_IF_VALUE_LARGER_EQUAL_THAN";
NSString * const kGTLRDatabaseMigrationService_DoubleComparisonFilter_ValueComparison_ValueComparisonIfValueLargerThan = @"VALUE_COMPARISON_IF_VALUE_LARGER_THAN";
NSString * const kGTLRDatabaseMigrationService_DoubleComparisonFilter_ValueComparison_ValueComparisonIfValueSmallerEqualThan = @"VALUE_COMPARISON_IF_VALUE_SMALLER_EQUAL_THAN";
NSString * const kGTLRDatabaseMigrationService_DoubleComparisonFilter_ValueComparison_ValueComparisonIfValueSmallerThan = @"VALUE_COMPARISON_IF_VALUE_SMALLER_THAN";
NSString * const kGTLRDatabaseMigrationService_DoubleComparisonFilter_ValueComparison_ValueComparisonUnspecified = @"VALUE_COMPARISON_UNSPECIFIED";

// GTLRDatabaseMigrationService_EntityDdl.entityType
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeColumn = @"DATABASE_ENTITY_TYPE_COLUMN";
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeConstraint = @"DATABASE_ENTITY_TYPE_CONSTRAINT";
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeDatabase = @"DATABASE_ENTITY_TYPE_DATABASE";
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeDatabasePackage = @"DATABASE_ENTITY_TYPE_DATABASE_PACKAGE";
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeFunction = @"DATABASE_ENTITY_TYPE_FUNCTION";
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeIndex = @"DATABASE_ENTITY_TYPE_INDEX";
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeMaterializedView = @"DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW";
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeSchema = @"DATABASE_ENTITY_TYPE_SCHEMA";
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeSequence = @"DATABASE_ENTITY_TYPE_SEQUENCE";
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeStoredProcedure = @"DATABASE_ENTITY_TYPE_STORED_PROCEDURE";
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeSynonym = @"DATABASE_ENTITY_TYPE_SYNONYM";
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeTable = @"DATABASE_ENTITY_TYPE_TABLE";
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeTrigger = @"DATABASE_ENTITY_TYPE_TRIGGER";
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeUdt = @"DATABASE_ENTITY_TYPE_UDT";
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeUnspecified = @"DATABASE_ENTITY_TYPE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_EntityDdl_EntityType_DatabaseEntityTypeView = @"DATABASE_ENTITY_TYPE_VIEW";

// GTLRDatabaseMigrationService_EntityIssue.entityType
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeColumn = @"DATABASE_ENTITY_TYPE_COLUMN";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeConstraint = @"DATABASE_ENTITY_TYPE_CONSTRAINT";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeDatabase = @"DATABASE_ENTITY_TYPE_DATABASE";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeDatabasePackage = @"DATABASE_ENTITY_TYPE_DATABASE_PACKAGE";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeFunction = @"DATABASE_ENTITY_TYPE_FUNCTION";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeIndex = @"DATABASE_ENTITY_TYPE_INDEX";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeMaterializedView = @"DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeSchema = @"DATABASE_ENTITY_TYPE_SCHEMA";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeSequence = @"DATABASE_ENTITY_TYPE_SEQUENCE";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeStoredProcedure = @"DATABASE_ENTITY_TYPE_STORED_PROCEDURE";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeSynonym = @"DATABASE_ENTITY_TYPE_SYNONYM";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeTable = @"DATABASE_ENTITY_TYPE_TABLE";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeTrigger = @"DATABASE_ENTITY_TYPE_TRIGGER";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeUdt = @"DATABASE_ENTITY_TYPE_UDT";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeUnspecified = @"DATABASE_ENTITY_TYPE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_EntityType_DatabaseEntityTypeView = @"DATABASE_ENTITY_TYPE_VIEW";

// GTLRDatabaseMigrationService_EntityIssue.severity
NSString * const kGTLRDatabaseMigrationService_EntityIssue_Severity_IssueSeverityError = @"ISSUE_SEVERITY_ERROR";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_Severity_IssueSeverityInfo = @"ISSUE_SEVERITY_INFO";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_Severity_IssueSeverityUnspecified = @"ISSUE_SEVERITY_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_Severity_IssueSeverityWarning = @"ISSUE_SEVERITY_WARNING";

// GTLRDatabaseMigrationService_EntityIssue.type
NSString * const kGTLRDatabaseMigrationService_EntityIssue_Type_IssueTypeApply = @"ISSUE_TYPE_APPLY";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_Type_IssueTypeConvert = @"ISSUE_TYPE_CONVERT";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_Type_IssueTypeDdl = @"ISSUE_TYPE_DDL";
NSString * const kGTLRDatabaseMigrationService_EntityIssue_Type_IssueTypeUnspecified = @"ISSUE_TYPE_UNSPECIFIED";

// GTLRDatabaseMigrationService_EntityMapping.draftType
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeColumn = @"DATABASE_ENTITY_TYPE_COLUMN";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeConstraint = @"DATABASE_ENTITY_TYPE_CONSTRAINT";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeDatabase = @"DATABASE_ENTITY_TYPE_DATABASE";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeDatabasePackage = @"DATABASE_ENTITY_TYPE_DATABASE_PACKAGE";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeFunction = @"DATABASE_ENTITY_TYPE_FUNCTION";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeIndex = @"DATABASE_ENTITY_TYPE_INDEX";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeMaterializedView = @"DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeSchema = @"DATABASE_ENTITY_TYPE_SCHEMA";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeSequence = @"DATABASE_ENTITY_TYPE_SEQUENCE";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeStoredProcedure = @"DATABASE_ENTITY_TYPE_STORED_PROCEDURE";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeSynonym = @"DATABASE_ENTITY_TYPE_SYNONYM";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeTable = @"DATABASE_ENTITY_TYPE_TABLE";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeTrigger = @"DATABASE_ENTITY_TYPE_TRIGGER";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeUdt = @"DATABASE_ENTITY_TYPE_UDT";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeUnspecified = @"DATABASE_ENTITY_TYPE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_DraftType_DatabaseEntityTypeView = @"DATABASE_ENTITY_TYPE_VIEW";

// GTLRDatabaseMigrationService_EntityMapping.sourceType
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeColumn = @"DATABASE_ENTITY_TYPE_COLUMN";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeConstraint = @"DATABASE_ENTITY_TYPE_CONSTRAINT";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeDatabase = @"DATABASE_ENTITY_TYPE_DATABASE";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeDatabasePackage = @"DATABASE_ENTITY_TYPE_DATABASE_PACKAGE";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeFunction = @"DATABASE_ENTITY_TYPE_FUNCTION";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeIndex = @"DATABASE_ENTITY_TYPE_INDEX";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeMaterializedView = @"DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeSchema = @"DATABASE_ENTITY_TYPE_SCHEMA";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeSequence = @"DATABASE_ENTITY_TYPE_SEQUENCE";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeStoredProcedure = @"DATABASE_ENTITY_TYPE_STORED_PROCEDURE";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeSynonym = @"DATABASE_ENTITY_TYPE_SYNONYM";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeTable = @"DATABASE_ENTITY_TYPE_TABLE";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeTrigger = @"DATABASE_ENTITY_TYPE_TRIGGER";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeUdt = @"DATABASE_ENTITY_TYPE_UDT";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeUnspecified = @"DATABASE_ENTITY_TYPE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_EntityMapping_SourceType_DatabaseEntityTypeView = @"DATABASE_ENTITY_TYPE_VIEW";

// GTLRDatabaseMigrationService_ImportMappingRulesRequest.rulesFormat
NSString * const kGTLRDatabaseMigrationService_ImportMappingRulesRequest_RulesFormat_ImportRulesFileFormatHarbourBridgeSessionFile = @"IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE";
NSString * const kGTLRDatabaseMigrationService_ImportMappingRulesRequest_RulesFormat_ImportRulesFileFormatOratopgConfigFile = @"IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE";
NSString * const kGTLRDatabaseMigrationService_ImportMappingRulesRequest_RulesFormat_ImportRulesFileFormatUnspecified = @"IMPORT_RULES_FILE_FORMAT_UNSPECIFIED";

// GTLRDatabaseMigrationService_ImportRulesJobDetails.fileFormat
NSString * const kGTLRDatabaseMigrationService_ImportRulesJobDetails_FileFormat_ImportRulesFileFormatHarbourBridgeSessionFile = @"IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE";
NSString * const kGTLRDatabaseMigrationService_ImportRulesJobDetails_FileFormat_ImportRulesFileFormatOratopgConfigFile = @"IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE";
NSString * const kGTLRDatabaseMigrationService_ImportRulesJobDetails_FileFormat_ImportRulesFileFormatUnspecified = @"IMPORT_RULES_FILE_FORMAT_UNSPECIFIED";

// GTLRDatabaseMigrationService_IntComparisonFilter.valueComparison
NSString * const kGTLRDatabaseMigrationService_IntComparisonFilter_ValueComparison_ValueComparisonIfValueLargerEqualThan = @"VALUE_COMPARISON_IF_VALUE_LARGER_EQUAL_THAN";
NSString * const kGTLRDatabaseMigrationService_IntComparisonFilter_ValueComparison_ValueComparisonIfValueLargerThan = @"VALUE_COMPARISON_IF_VALUE_LARGER_THAN";
NSString * const kGTLRDatabaseMigrationService_IntComparisonFilter_ValueComparison_ValueComparisonIfValueSmallerEqualThan = @"VALUE_COMPARISON_IF_VALUE_SMALLER_EQUAL_THAN";
NSString * const kGTLRDatabaseMigrationService_IntComparisonFilter_ValueComparison_ValueComparisonIfValueSmallerThan = @"VALUE_COMPARISON_IF_VALUE_SMALLER_THAN";
NSString * const kGTLRDatabaseMigrationService_IntComparisonFilter_ValueComparison_ValueComparisonUnspecified = @"VALUE_COMPARISON_UNSPECIFIED";

// GTLRDatabaseMigrationService_MappingRule.ruleScope
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeColumn = @"DATABASE_ENTITY_TYPE_COLUMN";
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeConstraint = @"DATABASE_ENTITY_TYPE_CONSTRAINT";
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeDatabase = @"DATABASE_ENTITY_TYPE_DATABASE";
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeDatabasePackage = @"DATABASE_ENTITY_TYPE_DATABASE_PACKAGE";
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeFunction = @"DATABASE_ENTITY_TYPE_FUNCTION";
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeIndex = @"DATABASE_ENTITY_TYPE_INDEX";
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeMaterializedView = @"DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW";
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeSchema = @"DATABASE_ENTITY_TYPE_SCHEMA";
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeSequence = @"DATABASE_ENTITY_TYPE_SEQUENCE";
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeStoredProcedure = @"DATABASE_ENTITY_TYPE_STORED_PROCEDURE";
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeSynonym = @"DATABASE_ENTITY_TYPE_SYNONYM";
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeTable = @"DATABASE_ENTITY_TYPE_TABLE";
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeTrigger = @"DATABASE_ENTITY_TYPE_TRIGGER";
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeUdt = @"DATABASE_ENTITY_TYPE_UDT";
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeUnspecified = @"DATABASE_ENTITY_TYPE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_MappingRule_RuleScope_DatabaseEntityTypeView = @"DATABASE_ENTITY_TYPE_VIEW";

// GTLRDatabaseMigrationService_MappingRule.state
NSString * const kGTLRDatabaseMigrationService_MappingRule_State_Deleted = @"DELETED";
NSString * const kGTLRDatabaseMigrationService_MappingRule_State_Disabled = @"DISABLED";
NSString * const kGTLRDatabaseMigrationService_MappingRule_State_Enabled = @"ENABLED";
NSString * const kGTLRDatabaseMigrationService_MappingRule_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRDatabaseMigrationService_MigrationJob.dumpType
NSString * const kGTLRDatabaseMigrationService_MigrationJob_DumpType_DumpTypeUnspecified = @"DUMP_TYPE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_DumpType_Logical = @"LOGICAL";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_DumpType_Physical = @"PHYSICAL";

// GTLRDatabaseMigrationService_MigrationJob.phase
NSString * const kGTLRDatabaseMigrationService_MigrationJob_Phase_Cdc = @"CDC";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_Phase_FullDump = @"FULL_DUMP";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_Phase_PhaseUnspecified = @"PHASE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_Phase_PreparingTheDump = @"PREPARING_THE_DUMP";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_Phase_PromoteInProgress = @"PROMOTE_IN_PROGRESS";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_Phase_ReadyForPromote = @"READY_FOR_PROMOTE";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_Phase_WaitingForSourceWritesToStop = @"WAITING_FOR_SOURCE_WRITES_TO_STOP";

// GTLRDatabaseMigrationService_MigrationJob.state
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_Completed = @"COMPLETED";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_Creating = @"CREATING";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_Deleted = @"DELETED";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_Deleting = @"DELETING";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_Draft = @"DRAFT";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_Failed = @"FAILED";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_Maintenance = @"MAINTENANCE";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_NotStarted = @"NOT_STARTED";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_Restarting = @"RESTARTING";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_Resuming = @"RESUMING";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_Running = @"RUNNING";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_Starting = @"STARTING";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_Stopped = @"STOPPED";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_Stopping = @"STOPPING";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_State_Updating = @"UPDATING";

// GTLRDatabaseMigrationService_MigrationJob.type
NSString * const kGTLRDatabaseMigrationService_MigrationJob_Type_Continuous = @"CONTINUOUS";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_Type_OneTime = @"ONE_TIME";
NSString * const kGTLRDatabaseMigrationService_MigrationJob_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRDatabaseMigrationService_MigrationJobVerificationError.errorCode
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_AuthenticationFailure = @"AUTHENTICATION_FAILURE";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_CantRestartRunningMigration = @"CANT_RESTART_RUNNING_MIGRATION";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_ConnectionFailure = @"CONNECTION_FAILURE";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_ConnectionProfileTypesIncompatibility = @"CONNECTION_PROFILE_TYPES_INCOMPATIBILITY";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_ErrorCodeUnspecified = @"ERROR_CODE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_ErrorRdbms = @"ERROR_RDBMS";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_ExistingConflictingDatabases = @"EXISTING_CONFLICTING_DATABASES";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_ExistingData = @"EXISTING_DATA";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_InsufficientMaxReplicationSlots = @"INSUFFICIENT_MAX_REPLICATION_SLOTS";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_InsufficientMaxWalSenders = @"INSUFFICIENT_MAX_WAL_SENDERS";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_InsufficientMaxWorkerProcesses = @"INSUFFICIENT_MAX_WORKER_PROCESSES";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_InvalidConnectionProfileConfig = @"INVALID_CONNECTION_PROFILE_CONFIG";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_InvalidRdsLogicalReplication = @"INVALID_RDS_LOGICAL_REPLICATION";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_InvalidSharedPreloadLibrary = @"INVALID_SHARED_PRELOAD_LIBRARY";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_InvalidWalLevel = @"INVALID_WAL_LEVEL";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_NoPglogicalInstalled = @"NO_PGLOGICAL_INSTALLED";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_ParallelImportInsufficientPrivilege = @"PARALLEL_IMPORT_INSUFFICIENT_PRIVILEGE";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_PglogicalNodeAlreadyExists = @"PGLOGICAL_NODE_ALREADY_EXISTS";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_SourceAlreadySetup = @"SOURCE_ALREADY_SETUP";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_SourceMaxSubscriptions = @"SOURCE_MAX_SUBSCRIPTIONS";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_SourceSizeExceedsThreshold = @"SOURCE_SIZE_EXCEEDS_THRESHOLD";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_TablesWithLimitedSupport = @"TABLES_WITH_LIMITED_SUPPORT";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_UnsupportedDatabaseFdwConfig = @"UNSUPPORTED_DATABASE_FDW_CONFIG";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_UnsupportedDatabaseLocale = @"UNSUPPORTED_DATABASE_LOCALE";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_UnsupportedDefiner = @"UNSUPPORTED_DEFINER";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_UnsupportedExtensions = @"UNSUPPORTED_EXTENSIONS";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_UnsupportedGtidMode = @"UNSUPPORTED_GTID_MODE";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_UnsupportedMigrationType = @"UNSUPPORTED_MIGRATION_TYPE";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_UnsupportedTableDefinition = @"UNSUPPORTED_TABLE_DEFINITION";
NSString * const kGTLRDatabaseMigrationService_MigrationJobVerificationError_ErrorCode_VersionIncompatibility = @"VERSION_INCOMPATIBILITY";

// GTLRDatabaseMigrationService_MultiEntityRename.sourceNameTransformation
NSString * const kGTLRDatabaseMigrationService_MultiEntityRename_SourceNameTransformation_EntityNameTransformationCapitalizedCase = @"ENTITY_NAME_TRANSFORMATION_CAPITALIZED_CASE";
NSString * const kGTLRDatabaseMigrationService_MultiEntityRename_SourceNameTransformation_EntityNameTransformationLowerCase = @"ENTITY_NAME_TRANSFORMATION_LOWER_CASE";
NSString * const kGTLRDatabaseMigrationService_MultiEntityRename_SourceNameTransformation_EntityNameTransformationNoTransformation = @"ENTITY_NAME_TRANSFORMATION_NO_TRANSFORMATION";
NSString * const kGTLRDatabaseMigrationService_MultiEntityRename_SourceNameTransformation_EntityNameTransformationUnspecified = @"ENTITY_NAME_TRANSFORMATION_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_MultiEntityRename_SourceNameTransformation_EntityNameTransformationUpperCase = @"ENTITY_NAME_TRANSFORMATION_UPPER_CASE";

// GTLRDatabaseMigrationService_PerformanceConfig.dumpParallelLevel
NSString * const kGTLRDatabaseMigrationService_PerformanceConfig_DumpParallelLevel_DumpParallelLevelUnspecified = @"DUMP_PARALLEL_LEVEL_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_PerformanceConfig_DumpParallelLevel_Max = @"MAX";
NSString * const kGTLRDatabaseMigrationService_PerformanceConfig_DumpParallelLevel_Min = @"MIN";
NSString * const kGTLRDatabaseMigrationService_PerformanceConfig_DumpParallelLevel_Optimal = @"OPTIMAL";

// GTLRDatabaseMigrationService_PostgreSqlConnectionProfile.networkArchitecture
NSString * const kGTLRDatabaseMigrationService_PostgreSqlConnectionProfile_NetworkArchitecture_NetworkArchitectureNewCsqlProducer = @"NETWORK_ARCHITECTURE_NEW_CSQL_PRODUCER";
NSString * const kGTLRDatabaseMigrationService_PostgreSqlConnectionProfile_NetworkArchitecture_NetworkArchitectureOldCsqlProducer = @"NETWORK_ARCHITECTURE_OLD_CSQL_PRODUCER";
NSString * const kGTLRDatabaseMigrationService_PostgreSqlConnectionProfile_NetworkArchitecture_NetworkArchitectureUnspecified = @"NETWORK_ARCHITECTURE_UNSPECIFIED";

// GTLRDatabaseMigrationService_PrivateConnection.state
NSString * const kGTLRDatabaseMigrationService_PrivateConnection_State_Created = @"CREATED";
NSString * const kGTLRDatabaseMigrationService_PrivateConnection_State_Creating = @"CREATING";
NSString * const kGTLRDatabaseMigrationService_PrivateConnection_State_Deleted = @"DELETED";
NSString * const kGTLRDatabaseMigrationService_PrivateConnection_State_Deleting = @"DELETING";
NSString * const kGTLRDatabaseMigrationService_PrivateConnection_State_Failed = @"FAILED";
NSString * const kGTLRDatabaseMigrationService_PrivateConnection_State_FailedToDelete = @"FAILED_TO_DELETE";
NSString * const kGTLRDatabaseMigrationService_PrivateConnection_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRDatabaseMigrationService_SourceNumericFilter.numericFilterOption
NSString * const kGTLRDatabaseMigrationService_SourceNumericFilter_NumericFilterOption_NumericFilterOptionAll = @"NUMERIC_FILTER_OPTION_ALL";
NSString * const kGTLRDatabaseMigrationService_SourceNumericFilter_NumericFilterOption_NumericFilterOptionLimit = @"NUMERIC_FILTER_OPTION_LIMIT";
NSString * const kGTLRDatabaseMigrationService_SourceNumericFilter_NumericFilterOption_NumericFilterOptionLimitless = @"NUMERIC_FILTER_OPTION_LIMITLESS";
NSString * const kGTLRDatabaseMigrationService_SourceNumericFilter_NumericFilterOption_NumericFilterOptionUnspecified = @"NUMERIC_FILTER_OPTION_UNSPECIFIED";

// GTLRDatabaseMigrationService_SslConfig.type
NSString * const kGTLRDatabaseMigrationService_SslConfig_Type_ServerClient = @"SERVER_CLIENT";
NSString * const kGTLRDatabaseMigrationService_SslConfig_Type_ServerOnly = @"SERVER_ONLY";
NSString * const kGTLRDatabaseMigrationService_SslConfig_Type_SslTypeUnspecified = @"SSL_TYPE_UNSPECIFIED";

// GTLRDatabaseMigrationService_SynonymEntity.sourceType
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeColumn = @"DATABASE_ENTITY_TYPE_COLUMN";
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeConstraint = @"DATABASE_ENTITY_TYPE_CONSTRAINT";
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeDatabase = @"DATABASE_ENTITY_TYPE_DATABASE";
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeDatabasePackage = @"DATABASE_ENTITY_TYPE_DATABASE_PACKAGE";
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeFunction = @"DATABASE_ENTITY_TYPE_FUNCTION";
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeIndex = @"DATABASE_ENTITY_TYPE_INDEX";
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeMaterializedView = @"DATABASE_ENTITY_TYPE_MATERIALIZED_VIEW";
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeSchema = @"DATABASE_ENTITY_TYPE_SCHEMA";
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeSequence = @"DATABASE_ENTITY_TYPE_SEQUENCE";
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeStoredProcedure = @"DATABASE_ENTITY_TYPE_STORED_PROCEDURE";
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeSynonym = @"DATABASE_ENTITY_TYPE_SYNONYM";
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeTable = @"DATABASE_ENTITY_TYPE_TABLE";
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeTrigger = @"DATABASE_ENTITY_TYPE_TRIGGER";
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeUdt = @"DATABASE_ENTITY_TYPE_UDT";
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeUnspecified = @"DATABASE_ENTITY_TYPE_UNSPECIFIED";
NSString * const kGTLRDatabaseMigrationService_SynonymEntity_SourceType_DatabaseEntityTypeView = @"DATABASE_ENTITY_TYPE_VIEW";

// GTLRDatabaseMigrationService_ValueListFilter.valuePresentList
NSString * const kGTLRDatabaseMigrationService_ValueListFilter_ValuePresentList_ValuePresentInListIfValueList = @"VALUE_PRESENT_IN_LIST_IF_VALUE_LIST";
NSString * const kGTLRDatabaseMigrationService_ValueListFilter_ValuePresentList_ValuePresentInListIfValueNotList = @"VALUE_PRESENT_IN_LIST_IF_VALUE_NOT_LIST";
NSString * const kGTLRDatabaseMigrationService_ValueListFilter_ValuePresentList_ValuePresentInListUnspecified = @"VALUE_PRESENT_IN_LIST_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_AlloyDbConnectionProfile
//

@implementation GTLRDatabaseMigrationService_AlloyDbConnectionProfile
@dynamic clusterId, settings;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_AlloyDbSettings
//

@implementation GTLRDatabaseMigrationService_AlloyDbSettings
@dynamic databaseVersion, encryptionConfig, initialUser, labels,
         primaryInstanceSettings, vpcNetwork;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_AlloyDbSettings_Labels
//

@implementation GTLRDatabaseMigrationService_AlloyDbSettings_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ApplyConversionWorkspaceRequest
//

@implementation GTLRDatabaseMigrationService_ApplyConversionWorkspaceRequest
@dynamic autoCommit, connectionProfile, dryRun, filter;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ApplyHash
//

@implementation GTLRDatabaseMigrationService_ApplyHash
@dynamic uuidFromBytes;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ApplyJobDetails
//

@implementation GTLRDatabaseMigrationService_ApplyJobDetails
@dynamic connectionProfile, filter;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_AssignSpecificValue
//

@implementation GTLRDatabaseMigrationService_AssignSpecificValue
@dynamic value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_AuditConfig
//

@implementation GTLRDatabaseMigrationService_AuditConfig
@dynamic auditLogConfigs, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditLogConfigs" : [GTLRDatabaseMigrationService_AuditLogConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_AuditLogConfig
//

@implementation GTLRDatabaseMigrationService_AuditLogConfig
@dynamic exemptedMembers, logType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_AuthorizedNetwork
//

@implementation GTLRDatabaseMigrationService_AuthorizedNetwork
@dynamic cidrRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_BackgroundJobLogEntry
//

@implementation GTLRDatabaseMigrationService_BackgroundJobLogEntry
@dynamic applyJobDetails, completionComment, completionState, convertJobDetails,
         finishTime, identifier, importRulesJobDetails, jobType,
         requestAutocommit, seedJobDetails, startTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_Binding
//

@implementation GTLRDatabaseMigrationService_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_CancelOperationRequest
//

@implementation GTLRDatabaseMigrationService_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_CloudSqlConnectionProfile
//

@implementation GTLRDatabaseMigrationService_CloudSqlConnectionProfile
@dynamic additionalPublicIp, cloudSqlId, privateIp, publicIp, settings;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_CloudSqlSettings
//

@implementation GTLRDatabaseMigrationService_CloudSqlSettings
@dynamic activationPolicy, autoStorageIncrease, availabilityType, cmekKeyName,
         collation, databaseFlags, databaseVersion, databaseVersionName,
         dataCacheConfig, dataDiskSizeGb, dataDiskType, edition, ipConfig,
         rootPassword, rootPasswordSet, secondaryZone, sourceId,
         storageAutoResizeLimit, tier, userLabels, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"zoneProperty" : @"zone" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_CloudSqlSettings_DatabaseFlags
//

@implementation GTLRDatabaseMigrationService_CloudSqlSettings_DatabaseFlags

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_CloudSqlSettings_UserLabels
//

@implementation GTLRDatabaseMigrationService_CloudSqlSettings_UserLabels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ColumnEntity
//

@implementation GTLRDatabaseMigrationService_ColumnEntity
@dynamic array, arrayLength, autoGenerated, charset, collation, comment,
         customFeatures, dataType, defaultValue, fractionalSecondsPrecision,
         length, name, nullable, ordinalPosition, precision, scale, setValues,
         udt;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"setValues" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ColumnEntity_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_ColumnEntity_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_CommitConversionWorkspaceRequest
//

@implementation GTLRDatabaseMigrationService_CommitConversionWorkspaceRequest
@dynamic commitName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ConditionalColumnSetValue
//

@implementation GTLRDatabaseMigrationService_ConditionalColumnSetValue
@dynamic customFeatures, sourceNumericFilter, sourceTextFilter,
         valueTransformation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ConditionalColumnSetValue_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_ConditionalColumnSetValue_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ConnectionProfile
//

@implementation GTLRDatabaseMigrationService_ConnectionProfile
@dynamic alloydb, cloudsql, createTime, displayName, error, labels, mysql, name,
         oracle, postgresql, provider, sqlserver, state, updateTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ConnectionProfile_Labels
//

@implementation GTLRDatabaseMigrationService_ConnectionProfile_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ConstraintEntity
//

@implementation GTLRDatabaseMigrationService_ConstraintEntity
@dynamic customFeatures, name, referenceColumns, referenceTable, tableColumns,
         tableName, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"referenceColumns" : [NSString class],
    @"tableColumns" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ConstraintEntity_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_ConstraintEntity_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ConversionWorkspace
//

@implementation GTLRDatabaseMigrationService_ConversionWorkspace
@dynamic createTime, destination, displayName, globalSettings,
         hasUncommittedChanges, latestCommitId, latestCommitTime, name, source,
         updateTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ConversionWorkspace_GlobalSettings
//

@implementation GTLRDatabaseMigrationService_ConversionWorkspace_GlobalSettings

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ConversionWorkspaceInfo
//

@implementation GTLRDatabaseMigrationService_ConversionWorkspaceInfo
@dynamic commitId, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ConvertConversionWorkspaceRequest
//

@implementation GTLRDatabaseMigrationService_ConvertConversionWorkspaceRequest
@dynamic autoCommit, convertFullPath, filter;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ConvertJobDetails
//

@implementation GTLRDatabaseMigrationService_ConvertJobDetails
@dynamic filter;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ConvertRowIdToColumn
//

@implementation GTLRDatabaseMigrationService_ConvertRowIdToColumn
@dynamic onlyIfNoPrimaryKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_DatabaseEngineInfo
//

@implementation GTLRDatabaseMigrationService_DatabaseEngineInfo
@dynamic engine, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_DatabaseEntity
//

@implementation GTLRDatabaseMigrationService_DatabaseEntity
@dynamic database, databaseFunction, databasePackage, entityDdl, entityType,
         issues, mappings, materializedView, parentEntity, schema, sequence,
         shortName, storedProcedure, synonym, table, tree, udt, view;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"entityDdl" : [GTLRDatabaseMigrationService_EntityDdl class],
    @"issues" : [GTLRDatabaseMigrationService_EntityIssue class],
    @"mappings" : [GTLRDatabaseMigrationService_EntityMapping class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_DatabaseInstanceEntity
//

@implementation GTLRDatabaseMigrationService_DatabaseInstanceEntity
@dynamic customFeatures;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_DatabaseInstanceEntity_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_DatabaseInstanceEntity_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_DatabaseType
//

@implementation GTLRDatabaseMigrationService_DatabaseType
@dynamic engine, provider;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_DataCacheConfig
//

@implementation GTLRDatabaseMigrationService_DataCacheConfig
@dynamic dataCacheEnabled;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_DemoteDestinationRequest
//

@implementation GTLRDatabaseMigrationService_DemoteDestinationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_DescribeConversionWorkspaceRevisionsResponse
//

@implementation GTLRDatabaseMigrationService_DescribeConversionWorkspaceRevisionsResponse
@dynamic revisions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"revisions" : [GTLRDatabaseMigrationService_ConversionWorkspace class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_DescribeDatabaseEntitiesResponse
//

@implementation GTLRDatabaseMigrationService_DescribeDatabaseEntitiesResponse
@dynamic databaseEntities, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"databaseEntities" : [GTLRDatabaseMigrationService_DatabaseEntity class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"databaseEntities";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_DoubleComparisonFilter
//

@implementation GTLRDatabaseMigrationService_DoubleComparisonFilter
@dynamic value, valueComparison;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_DumpFlag
//

@implementation GTLRDatabaseMigrationService_DumpFlag
@dynamic name, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_DumpFlags
//

@implementation GTLRDatabaseMigrationService_DumpFlags
@dynamic dumpFlags;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"dumpFlags" : [GTLRDatabaseMigrationService_DumpFlag class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_Empty
//

@implementation GTLRDatabaseMigrationService_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_EncryptionConfig
//

@implementation GTLRDatabaseMigrationService_EncryptionConfig
@dynamic kmsKeyName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_EntityDdl
//

@implementation GTLRDatabaseMigrationService_EntityDdl
@dynamic ddl, ddlType, entity, entityType, issueId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"issueId" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_EntityIssue
//

@implementation GTLRDatabaseMigrationService_EntityIssue
@dynamic code, ddl, entityType, identifier, message, position, severity, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_EntityMapping
//

@implementation GTLRDatabaseMigrationService_EntityMapping
@dynamic draftEntity, draftType, mappingLog, sourceEntity, sourceType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"mappingLog" : [GTLRDatabaseMigrationService_EntityMappingLogEntry class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_EntityMappingLogEntry
//

@implementation GTLRDatabaseMigrationService_EntityMappingLogEntry
@dynamic mappingComment, ruleId, ruleRevisionId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_EntityMove
//

@implementation GTLRDatabaseMigrationService_EntityMove
@dynamic newSchema;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_Expr
//

@implementation GTLRDatabaseMigrationService_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_FetchStaticIpsResponse
//

@implementation GTLRDatabaseMigrationService_FetchStaticIpsResponse
@dynamic nextPageToken, staticIps;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"staticIps" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_FilterTableColumns
//

@implementation GTLRDatabaseMigrationService_FilterTableColumns
@dynamic excludeColumns, includeColumns;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"excludeColumns" : [NSString class],
    @"includeColumns" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ForwardSshTunnelConnectivity
//

@implementation GTLRDatabaseMigrationService_ForwardSshTunnelConnectivity
@dynamic hostname, password, port, privateKey, username;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_FunctionEntity
//

@implementation GTLRDatabaseMigrationService_FunctionEntity
@dynamic customFeatures, sqlCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_FunctionEntity_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_FunctionEntity_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_GenerateSshScriptRequest
//

@implementation GTLRDatabaseMigrationService_GenerateSshScriptRequest
@dynamic vm, vmCreationConfig, vmPort, vmSelectionConfig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_GenerateTcpProxyScriptRequest
//

@implementation GTLRDatabaseMigrationService_GenerateTcpProxyScriptRequest
@dynamic vmMachineType, vmName, vmSubnet, vmZone;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_GoogleCloudClouddmsV1OperationMetadata
//

@implementation GTLRDatabaseMigrationService_GoogleCloudClouddmsV1OperationMetadata
@dynamic apiVersion, createTime, endTime, requestedCancellation, statusMessage,
         target, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ImportMappingRulesRequest
//

@implementation GTLRDatabaseMigrationService_ImportMappingRulesRequest
@dynamic autoCommit, rulesFiles, rulesFormat;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"rulesFiles" : [GTLRDatabaseMigrationService_RulesFile class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ImportRulesJobDetails
//

@implementation GTLRDatabaseMigrationService_ImportRulesJobDetails
@dynamic fileFormat, files;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"files" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_IndexEntity
//

@implementation GTLRDatabaseMigrationService_IndexEntity
@dynamic customFeatures, name, tableColumns, tableColumnsDescending, type,
         unique;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"tableColumns" : [NSString class],
    @"tableColumnsDescending" : [NSNumber class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_IndexEntity_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_IndexEntity_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_InstanceNetworkConfig
//

@implementation GTLRDatabaseMigrationService_InstanceNetworkConfig
@dynamic authorizedExternalNetworks, enableOutboundPublicIp, enablePublicIp;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"authorizedExternalNetworks" : [GTLRDatabaseMigrationService_AuthorizedNetwork class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_IntComparisonFilter
//

@implementation GTLRDatabaseMigrationService_IntComparisonFilter
@dynamic value, valueComparison;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ListConnectionProfilesResponse
//

@implementation GTLRDatabaseMigrationService_ListConnectionProfilesResponse
@dynamic connectionProfiles, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"connectionProfiles" : [GTLRDatabaseMigrationService_ConnectionProfile class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"connectionProfiles";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ListConversionWorkspacesResponse
//

@implementation GTLRDatabaseMigrationService_ListConversionWorkspacesResponse
@dynamic conversionWorkspaces, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"conversionWorkspaces" : [GTLRDatabaseMigrationService_ConversionWorkspace class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"conversionWorkspaces";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ListLocationsResponse
//

@implementation GTLRDatabaseMigrationService_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRDatabaseMigrationService_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ListMappingRulesResponse
//

@implementation GTLRDatabaseMigrationService_ListMappingRulesResponse
@dynamic mappingRules, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"mappingRules" : [GTLRDatabaseMigrationService_MappingRule class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"mappingRules";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ListMigrationJobsResponse
//

@implementation GTLRDatabaseMigrationService_ListMigrationJobsResponse
@dynamic migrationJobs, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"migrationJobs" : [GTLRDatabaseMigrationService_MigrationJob class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"migrationJobs";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ListOperationsResponse
//

@implementation GTLRDatabaseMigrationService_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRDatabaseMigrationService_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ListPrivateConnectionsResponse
//

@implementation GTLRDatabaseMigrationService_ListPrivateConnectionsResponse
@dynamic nextPageToken, privateConnections, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"privateConnections" : [GTLRDatabaseMigrationService_PrivateConnection class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"privateConnections";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_Location
//

@implementation GTLRDatabaseMigrationService_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_Location_Labels
//

@implementation GTLRDatabaseMigrationService_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_Location_Metadata
//

@implementation GTLRDatabaseMigrationService_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_MachineConfig
//

@implementation GTLRDatabaseMigrationService_MachineConfig
@dynamic cpuCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_MappingRule
//

@implementation GTLRDatabaseMigrationService_MappingRule
@dynamic conditionalColumnSetValue, convertRowidColumn, displayName, entityMove,
         filter, filterTableColumns, multiColumnDataTypeChange,
         multiEntityRename, name, revisionCreateTime, revisionId, ruleOrder,
         ruleScope, setTablePrimaryKey, singleColumnChange, singleEntityRename,
         singlePackageChange, sourceSqlChange, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_MappingRuleFilter
//

@implementation GTLRDatabaseMigrationService_MappingRuleFilter
@dynamic entities, entityNameContains, entityNamePrefix, entityNameSuffix,
         parentEntity;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"entities" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_MaterializedViewEntity
//

@implementation GTLRDatabaseMigrationService_MaterializedViewEntity
@dynamic customFeatures, sqlCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_MaterializedViewEntity_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_MaterializedViewEntity_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_MigrationJob
//

@implementation GTLRDatabaseMigrationService_MigrationJob
@dynamic cmekKeyName, conversionWorkspace, createTime, destination,
         destinationDatabase, displayName, dumpFlags, dumpPath, dumpType,
         duration, endTime, error, filter, labels, name, performanceConfig,
         phase, reverseSshConnectivity, source, sourceDatabase,
         sqlserverHomogeneousMigrationJobConfig, state, staticIpConnectivity,
         type, updateTime, vpcPeeringConnectivity;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_MigrationJob_Labels
//

@implementation GTLRDatabaseMigrationService_MigrationJob_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_MigrationJobVerificationError
//

@implementation GTLRDatabaseMigrationService_MigrationJobVerificationError
@dynamic errorCode, errorDetailMessage, errorMessage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_MultiColumnDatatypeChange
//

@implementation GTLRDatabaseMigrationService_MultiColumnDatatypeChange
@dynamic customFeatures, newDataType, overrideFractionalSecondsPrecision,
         overrideLength, overridePrecision, overrideScale, sourceDataTypeFilter,
         sourceNumericFilter, sourceTextFilter;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_MultiColumnDatatypeChange_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_MultiColumnDatatypeChange_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_MultiEntityRename
//

@implementation GTLRDatabaseMigrationService_MultiEntityRename
@dynamic newNamePattern, sourceNameTransformation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_MySqlConnectionProfile
//

@implementation GTLRDatabaseMigrationService_MySqlConnectionProfile
@dynamic cloudSqlId, host, password, passwordSet, port, ssl, username;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_Operation
//

@implementation GTLRDatabaseMigrationService_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_Operation_Metadata
//

@implementation GTLRDatabaseMigrationService_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_Operation_Response
//

@implementation GTLRDatabaseMigrationService_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_OracleAsmConfig
//

@implementation GTLRDatabaseMigrationService_OracleAsmConfig
@dynamic asmService, hostname, password, passwordSet, port, ssl, username;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_OracleConnectionProfile
//

@implementation GTLRDatabaseMigrationService_OracleConnectionProfile
@dynamic databaseService, forwardSshConnectivity, host, oracleAsmConfig,
         password, passwordSet, port, privateConnectivity, ssl,
         staticServiceIpConnectivity, username;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_PackageEntity
//

@implementation GTLRDatabaseMigrationService_PackageEntity
@dynamic customFeatures, packageBody, packageSqlCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_PackageEntity_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_PackageEntity_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_PerformanceConfig
//

@implementation GTLRDatabaseMigrationService_PerformanceConfig
@dynamic dumpParallelLevel;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_Policy
//

@implementation GTLRDatabaseMigrationService_Policy
@dynamic auditConfigs, bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditConfigs" : [GTLRDatabaseMigrationService_AuditConfig class],
    @"bindings" : [GTLRDatabaseMigrationService_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_Position
//

@implementation GTLRDatabaseMigrationService_Position
@dynamic column, length, line, offset;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_PostgreSqlConnectionProfile
//

@implementation GTLRDatabaseMigrationService_PostgreSqlConnectionProfile
@dynamic alloydbClusterId, cloudSqlId, host, networkArchitecture, password,
         passwordSet, port, privateServiceConnectConnectivity, ssl,
         staticIpConnectivity, username;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_PrimaryInstanceSettings
//

@implementation GTLRDatabaseMigrationService_PrimaryInstanceSettings
@dynamic databaseFlags, identifier, instanceNetworkConfig, labels,
         machineConfig, outboundPublicIpAddresses, privateIp;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"outboundPublicIpAddresses" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_PrimaryInstanceSettings_DatabaseFlags
//

@implementation GTLRDatabaseMigrationService_PrimaryInstanceSettings_DatabaseFlags

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_PrimaryInstanceSettings_Labels
//

@implementation GTLRDatabaseMigrationService_PrimaryInstanceSettings_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_PrivateConnection
//

@implementation GTLRDatabaseMigrationService_PrivateConnection
@dynamic createTime, displayName, error, labels, name, state, updateTime,
         vpcPeeringConfig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_PrivateConnection_Labels
//

@implementation GTLRDatabaseMigrationService_PrivateConnection_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_PrivateConnectivity
//

@implementation GTLRDatabaseMigrationService_PrivateConnectivity
@dynamic privateConnection;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_PrivateServiceConnectConnectivity
//

@implementation GTLRDatabaseMigrationService_PrivateServiceConnectConnectivity
@dynamic serviceAttachment;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_PromoteMigrationJobRequest
//

@implementation GTLRDatabaseMigrationService_PromoteMigrationJobRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_RestartMigrationJobRequest
//

@implementation GTLRDatabaseMigrationService_RestartMigrationJobRequest
@dynamic skipValidation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ResumeMigrationJobRequest
//

@implementation GTLRDatabaseMigrationService_ResumeMigrationJobRequest
@dynamic skipValidation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ReverseSshConnectivity
//

@implementation GTLRDatabaseMigrationService_ReverseSshConnectivity
@dynamic vm, vmIp, vmPort, vpc;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_RollbackConversionWorkspaceRequest
//

@implementation GTLRDatabaseMigrationService_RollbackConversionWorkspaceRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_RoundToScale
//

@implementation GTLRDatabaseMigrationService_RoundToScale
@dynamic scale;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_RulesFile
//

@implementation GTLRDatabaseMigrationService_RulesFile
@dynamic rulesContent, rulesSourceFilename;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SchemaEntity
//

@implementation GTLRDatabaseMigrationService_SchemaEntity
@dynamic customFeatures;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SchemaEntity_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_SchemaEntity_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SearchBackgroundJobsResponse
//

@implementation GTLRDatabaseMigrationService_SearchBackgroundJobsResponse
@dynamic jobs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"jobs" : [GTLRDatabaseMigrationService_BackgroundJobLogEntry class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SeedConversionWorkspaceRequest
//

@implementation GTLRDatabaseMigrationService_SeedConversionWorkspaceRequest
@dynamic autoCommit, destinationConnectionProfile, sourceConnectionProfile;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SeedJobDetails
//

@implementation GTLRDatabaseMigrationService_SeedJobDetails
@dynamic connectionProfile;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SequenceEntity
//

@implementation GTLRDatabaseMigrationService_SequenceEntity
@dynamic cache, customFeatures, cycle, increment, maxValue, minValue,
         startValue;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SequenceEntity_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_SequenceEntity_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SetIamPolicyRequest
//

@implementation GTLRDatabaseMigrationService_SetIamPolicyRequest
@dynamic policy, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SetTablePrimaryKey
//

@implementation GTLRDatabaseMigrationService_SetTablePrimaryKey
@dynamic primaryKey, primaryKeyColumns;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"primaryKeyColumns" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SingleColumnChange
//

@implementation GTLRDatabaseMigrationService_SingleColumnChange
@dynamic array, arrayLength, autoGenerated, charset, collation, comment,
         customFeatures, dataType, fractionalSecondsPrecision, length, nullable,
         precision, scale, setValues, udt;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"setValues" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SingleColumnChange_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_SingleColumnChange_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SingleEntityRename
//

@implementation GTLRDatabaseMigrationService_SingleEntityRename
@dynamic newName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SinglePackageChange
//

@implementation GTLRDatabaseMigrationService_SinglePackageChange
@dynamic packageBody, packageDescription;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SourceNumericFilter
//

@implementation GTLRDatabaseMigrationService_SourceNumericFilter
@dynamic numericFilterOption, sourceMaxPrecisionFilter, sourceMaxScaleFilter,
         sourceMinPrecisionFilter, sourceMinScaleFilter;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SourceSqlChange
//

@implementation GTLRDatabaseMigrationService_SourceSqlChange
@dynamic sqlCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SourceTextFilter
//

@implementation GTLRDatabaseMigrationService_SourceTextFilter
@dynamic sourceMaxLengthFilter, sourceMinLengthFilter;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SqlAclEntry
//

@implementation GTLRDatabaseMigrationService_SqlAclEntry
@dynamic expireTime, label, ttl, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SqlIpConfig
//

@implementation GTLRDatabaseMigrationService_SqlIpConfig
@dynamic allocatedIpRange, authorizedNetworks, enableIpv4, privateNetwork,
         requireSsl;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"authorizedNetworks" : [GTLRDatabaseMigrationService_SqlAclEntry class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SqlServerBackups
//

@implementation GTLRDatabaseMigrationService_SqlServerBackups
@dynamic gcsBucket, gcsPrefix;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SqlServerConnectionProfile
//

@implementation GTLRDatabaseMigrationService_SqlServerConnectionProfile
@dynamic backups, cloudSqlId, forwardSshConnectivity, host, password,
         passwordSet, port, privateConnectivity,
         privateServiceConnectConnectivity, ssl, staticIpConnectivity, username;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SqlServerDatabaseBackup
//

@implementation GTLRDatabaseMigrationService_SqlServerDatabaseBackup
@dynamic database, encryptionOptions;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SqlServerEncryptionOptions
//

@implementation GTLRDatabaseMigrationService_SqlServerEncryptionOptions
@dynamic certPath, pvkPassword, pvkPath;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SqlServerHomogeneousMigrationJobConfig
//

@implementation GTLRDatabaseMigrationService_SqlServerHomogeneousMigrationJobConfig
@dynamic backupFilePattern, databaseBackups, promoteWhenReady, useDiffBackup;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"databaseBackups" : [GTLRDatabaseMigrationService_SqlServerDatabaseBackup class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SshScript
//

@implementation GTLRDatabaseMigrationService_SshScript
@dynamic script;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SslConfig
//

@implementation GTLRDatabaseMigrationService_SslConfig
@dynamic caCertificate, clientCertificate, clientKey, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_StartMigrationJobRequest
//

@implementation GTLRDatabaseMigrationService_StartMigrationJobRequest
@dynamic skipValidation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_StaticIpConnectivity
//

@implementation GTLRDatabaseMigrationService_StaticIpConnectivity
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_StaticServiceIpConnectivity
//

@implementation GTLRDatabaseMigrationService_StaticServiceIpConnectivity
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_Status
//

@implementation GTLRDatabaseMigrationService_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRDatabaseMigrationService_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_Status_Details_Item
//

@implementation GTLRDatabaseMigrationService_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_StopMigrationJobRequest
//

@implementation GTLRDatabaseMigrationService_StopMigrationJobRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_StoredProcedureEntity
//

@implementation GTLRDatabaseMigrationService_StoredProcedureEntity
@dynamic customFeatures, sqlCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_StoredProcedureEntity_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_StoredProcedureEntity_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SynonymEntity
//

@implementation GTLRDatabaseMigrationService_SynonymEntity
@dynamic customFeatures, sourceEntity, sourceType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_SynonymEntity_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_SynonymEntity_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_TableEntity
//

@implementation GTLRDatabaseMigrationService_TableEntity
@dynamic columns, comment, constraints, customFeatures, indices, triggers;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"columns" : [GTLRDatabaseMigrationService_ColumnEntity class],
    @"constraints" : [GTLRDatabaseMigrationService_ConstraintEntity class],
    @"indices" : [GTLRDatabaseMigrationService_IndexEntity class],
    @"triggers" : [GTLRDatabaseMigrationService_TriggerEntity class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_TableEntity_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_TableEntity_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_TcpProxyScript
//

@implementation GTLRDatabaseMigrationService_TcpProxyScript
@dynamic script;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_TestIamPermissionsRequest
//

@implementation GTLRDatabaseMigrationService_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_TestIamPermissionsResponse
//

@implementation GTLRDatabaseMigrationService_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_TriggerEntity
//

@implementation GTLRDatabaseMigrationService_TriggerEntity
@dynamic customFeatures, name, sqlCode, triggeringEvents, triggerType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"triggeringEvents" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_TriggerEntity_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_TriggerEntity_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_UDTEntity
//

@implementation GTLRDatabaseMigrationService_UDTEntity
@dynamic customFeatures, udtBody, udtSqlCode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_UDTEntity_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_UDTEntity_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_UserPassword
//

@implementation GTLRDatabaseMigrationService_UserPassword
@dynamic password, passwordSet, user;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ValueListFilter
//

@implementation GTLRDatabaseMigrationService_ValueListFilter
@dynamic ignoreCase, valuePresentList, values;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"values" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ValueTransformation
//

@implementation GTLRDatabaseMigrationService_ValueTransformation
@dynamic applyHash, assignMaxValue, assignMinValue, assignNull,
         assignSpecificValue, doubleComparison, intComparison, isNull,
         roundScale, valueList;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_VerifyMigrationJobRequest
//

@implementation GTLRDatabaseMigrationService_VerifyMigrationJobRequest
@dynamic migrationJob, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ViewEntity
//

@implementation GTLRDatabaseMigrationService_ViewEntity
@dynamic constraints, customFeatures, sqlCode;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"constraints" : [GTLRDatabaseMigrationService_ConstraintEntity class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_ViewEntity_CustomFeatures
//

@implementation GTLRDatabaseMigrationService_ViewEntity_CustomFeatures

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_VmCreationConfig
//

@implementation GTLRDatabaseMigrationService_VmCreationConfig
@dynamic subnet, vmMachineType, vmZone;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_VmSelectionConfig
//

@implementation GTLRDatabaseMigrationService_VmSelectionConfig
@dynamic vmZone;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_VpcPeeringConfig
//

@implementation GTLRDatabaseMigrationService_VpcPeeringConfig
@dynamic subnet, vpcName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDatabaseMigrationService_VpcPeeringConnectivity
//

@implementation GTLRDatabaseMigrationService_VpcPeeringConnectivity
@dynamic vpc;
@end
