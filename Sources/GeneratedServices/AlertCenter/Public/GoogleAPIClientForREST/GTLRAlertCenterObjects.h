// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Workspace Alert Center API (alertcenter/v1beta1)
// Description:
//   Manages alerts on issues affecting your domain. Note: The current version
//   of this API (v1beta1) is available to all Google Workspace customers.
// Documentation:
//   https://developers.google.com/admin-sdk/alertcenter/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRAlertCenter_AccountSuspensionDetails;
@class GTLRAlertCenter_ActionInfo;
@class GTLRAlertCenter_Alert;
@class GTLRAlertCenter_Alert_Data;
@class GTLRAlertCenter_AlertFeedback;
@class GTLRAlertCenter_AlertMetadata;
@class GTLRAlertCenter_Attachment;
@class GTLRAlertCenter_BatchDeleteAlertsResponse_FailedAlertStatus;
@class GTLRAlertCenter_BatchUndeleteAlertsResponse_FailedAlertStatus;
@class GTLRAlertCenter_CloudPubsubTopic;
@class GTLRAlertCenter_Csv;
@class GTLRAlertCenter_CsvRow;
@class GTLRAlertCenter_DeviceCompromisedSecurityDetail;
@class GTLRAlertCenter_DomainId;
@class GTLRAlertCenter_Entity;
@class GTLRAlertCenter_EntityList;
@class GTLRAlertCenter_GmailMessageInfo;
@class GTLRAlertCenter_LoginDetails;
@class GTLRAlertCenter_MaliciousEntity;
@class GTLRAlertCenter_MatchInfo;
@class GTLRAlertCenter_MergeInfo;
@class GTLRAlertCenter_Notification;
@class GTLRAlertCenter_PredefinedDetectorInfo;
@class GTLRAlertCenter_PrimaryAdminChangedEvent;
@class GTLRAlertCenter_RequestInfo;
@class GTLRAlertCenter_ResourceInfo;
@class GTLRAlertCenter_RuleInfo;
@class GTLRAlertCenter_RuleViolationInfo;
@class GTLRAlertCenter_SSOProfileCreatedEvent;
@class GTLRAlertCenter_SSOProfileDeletedEvent;
@class GTLRAlertCenter_SSOProfileUpdatedEvent;
@class GTLRAlertCenter_Status;
@class GTLRAlertCenter_Status_Details_Item;
@class GTLRAlertCenter_SuperAdminPasswordResetEvent;
@class GTLRAlertCenter_SuspiciousActivitySecurityDetail;
@class GTLRAlertCenter_User;
@class GTLRAlertCenter_UserDefinedDetectorInfo;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRAlertCenter_AccountSuspensionDetails.abuseReason

/**
 *  Abuse reason is unspecified.
 *
 *  Value: "ACCOUNT_SUSPENSION_ABUSE_REASON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_AccountSuspensionAbuseReasonUnspecified;
/**
 *  This account is being suspended for fraud.
 *
 *  Value: "FRAUD"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_Fraud;
/**
 *  This account is being suspended for number harvesting.
 *
 *  Value: "NUMBER_HARVESTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_NumberHarvesting;
/**
 *  This account is being suspended for payments fraud.
 *
 *  Value: "PAYMENTS_FRAUD"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_PaymentsFraud;
/**
 *  This account is being suspended for phishing.
 *
 *  Value: "PHISHING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_Phishing;
/**
 *  This account is being suspended for spam.
 *
 *  Value: "SPAM"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_Spam;
/**
 *  This account is being suspended for a Terms of Service violation.
 *
 *  Value: "TOS_VIOLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_TosViolation;
/**
 *  This account is being suspended for artificially boosting traffic to a
 *  website.
 *
 *  Value: "TRAFFIC_PUMPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_TrafficPumping;
/**
 *  This account is being suspended for unwanted content.
 *
 *  Value: "UNWANTED_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_UnwantedContent;

// ----------------------------------------------------------------------------
// GTLRAlertCenter_AccountSuspensionWarning.state

/**
 *  State is unspecified.
 *
 *  Value: "ACCOUNT_SUSPENSION_WARNING_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AccountSuspensionWarning_State_AccountSuspensionWarningStateUnspecified;
/**
 *  Customer is being notified that their suspension appeal was approved.
 *
 *  Value: "APPEAL_APPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AccountSuspensionWarning_State_AppealApproved;
/**
 *  Customer has submitted their appeal, which is pending review.
 *
 *  Value: "APPEAL_SUBMITTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AccountSuspensionWarning_State_AppealSubmitted;
/**
 *  Customer is being notified that their account has been suspended.
 *
 *  Value: "SUSPENDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AccountSuspensionWarning_State_Suspended;
/**
 *  Customer is receiving a warning about imminent suspension.
 *
 *  Value: "WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AccountSuspensionWarning_State_Warning;

// ----------------------------------------------------------------------------
// GTLRAlertCenter_AlertFeedback.type

/**
 *  The feedback type is not specified.
 *
 *  Value: "ALERT_FEEDBACK_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AlertFeedback_Type_AlertFeedbackTypeUnspecified;
/**
 *  The alert report is not useful.
 *
 *  Value: "NOT_USEFUL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AlertFeedback_Type_NotUseful;
/**
 *  The alert report is somewhat useful.
 *
 *  Value: "SOMEWHAT_USEFUL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AlertFeedback_Type_SomewhatUseful;
/**
 *  The alert report is very useful.
 *
 *  Value: "VERY_USEFUL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AlertFeedback_Type_VeryUseful;

// ----------------------------------------------------------------------------
// GTLRAlertCenter_AppsOutage.status

/**
 *  The incident has lower impact than initially anticipated.
 *
 *  Value: "DOWNGRADED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AppsOutage_Status_Downgraded;
/**
 *  Further assessment indicated no customer impact.
 *
 *  Value: "FALSE_POSITIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AppsOutage_Status_FalsePositive;
/**
 *  The incident was merged into a parent.
 *
 *  Value: "MERGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AppsOutage_Status_Merged;
/**
 *  The incident has just been reported.
 *
 *  Value: "NEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AppsOutage_Status_New;
/**
 *  The incident is ongoing.
 *
 *  Value: "ONGOING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AppsOutage_Status_Ongoing;
/**
 *  The incident has been partially resolved.
 *
 *  Value: "PARTIALLY_RESOLVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AppsOutage_Status_PartiallyResolved;
/**
 *  The incident has been resolved.
 *
 *  Value: "RESOLVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AppsOutage_Status_Resolved;
/**
 *  Status is unspecified.
 *
 *  Value: "STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_AppsOutage_Status_StatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRAlertCenter_CloudPubsubTopic.payloadFormat

/**
 *  Use JSON.
 *
 *  Value: "JSON"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_CloudPubsubTopic_PayloadFormat_Json;
/**
 *  Payload format is not specified (will use JSON as default).
 *
 *  Value: "PAYLOAD_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_CloudPubsubTopic_PayloadFormat_PayloadFormatUnspecified;

// ----------------------------------------------------------------------------
// GTLRAlertCenter_MailPhishing.systemActionType

/**
 *  No operation.
 *
 *  Value: "NO_OPERATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_MailPhishing_SystemActionType_NoOperation;
/**
 *  Messages were removed from the inbox.
 *
 *  Value: "REMOVED_FROM_INBOX"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_MailPhishing_SystemActionType_RemovedFromInbox;
/**
 *  System action is unspecified.
 *
 *  Value: "SYSTEM_ACTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_MailPhishing_SystemActionType_SystemActionTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAlertCenter_RuleViolationInfo.dataSource

/**
 *  Data source is unspecified.
 *
 *  Value: "DATA_SOURCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_DataSource_DataSourceUnspecified;
/**
 *  Drive data source.
 *
 *  Value: "DRIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_DataSource_Drive;

// ----------------------------------------------------------------------------
// GTLRAlertCenter_RuleViolationInfo.suppressedActionTypes

/**
 *  Action type is unspecified.
 *
 *  Value: "ACTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_SuppressedActionTypes_ActionTypeUnspecified;
/**
 *  Send alert.
 *
 *  Value: "ALERT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_SuppressedActionTypes_Alert;
/**
 *  Block sharing a file externally.
 *
 *  Value: "DRIVE_BLOCK_EXTERNAL_SHARING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_SuppressedActionTypes_DriveBlockExternalSharing;
/**
 *  Show a warning message when sharing a file externally.
 *
 *  Value: "DRIVE_WARN_ON_EXTERNAL_SHARING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_SuppressedActionTypes_DriveWarnOnExternalSharing;
/**
 *  Activate Rule Action
 *
 *  Value: "RULE_ACTIVATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_SuppressedActionTypes_RuleActivate;
/**
 *  Deactivate Rule Action
 *
 *  Value: "RULE_DEACTIVATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_SuppressedActionTypes_RuleDeactivate;

// ----------------------------------------------------------------------------
// GTLRAlertCenter_RuleViolationInfo.trigger

/**
 *  A Drive file is shared.
 *
 *  Value: "DRIVE_SHARE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_Trigger_DriveShare;
/**
 *  Trigger is unspecified.
 *
 *  Value: "TRIGGER_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_Trigger_TriggerUnspecified;

// ----------------------------------------------------------------------------
// GTLRAlertCenter_RuleViolationInfo.triggeredActionTypes

/**
 *  Action type is unspecified.
 *
 *  Value: "ACTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_TriggeredActionTypes_ActionTypeUnspecified;
/**
 *  Send alert.
 *
 *  Value: "ALERT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_TriggeredActionTypes_Alert;
/**
 *  Block sharing a file externally.
 *
 *  Value: "DRIVE_BLOCK_EXTERNAL_SHARING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_TriggeredActionTypes_DriveBlockExternalSharing;
/**
 *  Show a warning message when sharing a file externally.
 *
 *  Value: "DRIVE_WARN_ON_EXTERNAL_SHARING"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_TriggeredActionTypes_DriveWarnOnExternalSharing;
/**
 *  Activate Rule Action
 *
 *  Value: "RULE_ACTIVATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_TriggeredActionTypes_RuleActivate;
/**
 *  Deactivate Rule Action
 *
 *  Value: "RULE_DEACTIVATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAlertCenter_RuleViolationInfo_TriggeredActionTypes_RuleDeactivate;

/**
 *  A generic alert for abusive user activity occurring with a customer.
 */
@interface GTLRAlertCenter_AbuseDetected : GTLRObject

/** List of abusive users/entities to be displayed in a table in the alert. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_EntityList *additionalDetails;

/**
 *  Displayed after Customer abuse detected - {alert_descriptor}. If missing,
 *  alert name will be displayed as Customer abuse detected.
 */
@property(nonatomic, copy, nullable) NSString *alertDescriptor;

/**
 *  Customizable text to display in the next steps section of the alert. Will be
 *  parsed as HTML to allow new paragraphs and hyperlinks.
 */
@property(nonatomic, copy, nullable) NSString *nextSteps;

/** Product that the abuse is originating from. */
@property(nonatomic, copy, nullable) NSString *product;

/** Unique identifier of each alert that is onboarded. */
@property(nonatomic, copy, nullable) NSString *subAlertId;

/**
 *  Customizable text to display in the summary section of the alert. Will be
 *  parsed as HTML to allow new paragraphs and hyperlinks.
 */
@property(nonatomic, copy, nullable) NSString *summary;

@end


/**
 *  Details about why an account is receiving an account suspension warning.
 */
@interface GTLRAlertCenter_AccountSuspensionDetails : GTLRObject

/**
 *  The reason why this account is receiving an account suspension warning.
 *
 *  Likely values:
 *    @arg @c kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_AccountSuspensionAbuseReasonUnspecified
 *        Abuse reason is unspecified. (Value:
 *        "ACCOUNT_SUSPENSION_ABUSE_REASON_UNSPECIFIED")
 *    @arg @c kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_Fraud This
 *        account is being suspended for fraud. (Value: "FRAUD")
 *    @arg @c kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_NumberHarvesting
 *        This account is being suspended for number harvesting. (Value:
 *        "NUMBER_HARVESTING")
 *    @arg @c kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_PaymentsFraud
 *        This account is being suspended for payments fraud. (Value:
 *        "PAYMENTS_FRAUD")
 *    @arg @c kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_Phishing
 *        This account is being suspended for phishing. (Value: "PHISHING")
 *    @arg @c kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_Spam This
 *        account is being suspended for spam. (Value: "SPAM")
 *    @arg @c kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_TosViolation
 *        This account is being suspended for a Terms of Service violation.
 *        (Value: "TOS_VIOLATION")
 *    @arg @c kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_TrafficPumping
 *        This account is being suspended for artificially boosting traffic to a
 *        website. (Value: "TRAFFIC_PUMPING")
 *    @arg @c kGTLRAlertCenter_AccountSuspensionDetails_AbuseReason_UnwantedContent
 *        This account is being suspended for unwanted content. (Value:
 *        "UNWANTED_CONTENT")
 */
@property(nonatomic, copy, nullable) NSString *abuseReason;

/**
 *  The name of the product being abused. This is restricted to only the
 *  following values: "Gmail" "Google Workspace" "Payments" "Voice" "YouTube"
 *  "Other"
 */
@property(nonatomic, copy, nullable) NSString *productName;

@end


/**
 *  A warning that the customer's account is about to be suspended.
 */
@interface GTLRAlertCenter_AccountSuspensionWarning : GTLRObject

/**
 *  The amount of time remaining to appeal an imminent suspension. After this
 *  window has elapsed, the account will be suspended. Only populated if the
 *  account suspension is in WARNING state.
 */
@property(nonatomic, strong, nullable) GTLRDuration *appealWindow;

/**
 *  Account suspension warning state.
 *
 *  Likely values:
 *    @arg @c kGTLRAlertCenter_AccountSuspensionWarning_State_AccountSuspensionWarningStateUnspecified
 *        State is unspecified. (Value:
 *        "ACCOUNT_SUSPENSION_WARNING_STATE_UNSPECIFIED")
 *    @arg @c kGTLRAlertCenter_AccountSuspensionWarning_State_AppealApproved
 *        Customer is being notified that their suspension appeal was approved.
 *        (Value: "APPEAL_APPROVED")
 *    @arg @c kGTLRAlertCenter_AccountSuspensionWarning_State_AppealSubmitted
 *        Customer has submitted their appeal, which is pending review. (Value:
 *        "APPEAL_SUBMITTED")
 *    @arg @c kGTLRAlertCenter_AccountSuspensionWarning_State_Suspended Customer
 *        is being notified that their account has been suspended. (Value:
 *        "SUSPENDED")
 *    @arg @c kGTLRAlertCenter_AccountSuspensionWarning_State_Warning Customer
 *        is receiving a warning about imminent suspension. (Value: "WARNING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Details about why an account is being suspended. */
@property(nonatomic, strong, nullable) NSArray<GTLRAlertCenter_AccountSuspensionDetails *> *suspensionDetails;

@end


/**
 *  Alerts for user account warning events.
 */
@interface GTLRAlertCenter_AccountWarning : GTLRObject

/** Required. The email of the user that this event belongs to. */
@property(nonatomic, copy, nullable) NSString *email;

/**
 *  Optional. Details of the login action associated with the warning event.
 *  This is only available for: * Suspicious login * Suspicious login (less
 *  secure app) * Suspicious programmatic login * User suspended (suspicious
 *  activity)
 */
@property(nonatomic, strong, nullable) GTLRAlertCenter_LoginDetails *loginDetails;

@end


/**
 *  Metadata related to the action.
 */
@interface GTLRAlertCenter_ActionInfo : GTLRObject
@end


/**
 *  Alerts from Google Workspace Security Center rules service configured by an
 *  admin.
 */
@interface GTLRAlertCenter_ActivityRule : GTLRObject

/** List of action names associated with the rule threshold. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *actionNames;

/** Rule create timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Description of the rule.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Alert display name. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Rule name. */
@property(nonatomic, copy, nullable) NSString *name;

/** Query that is used to get the data from the associated source. */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  List of alert IDs superseded by this alert. It is used to indicate that this
 *  alert is essentially extension of superseded alerts and we found the
 *  relationship after creating these alerts.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *supersededAlerts;

/**
 *  Alert ID superseding this alert. It is used to indicate that superseding
 *  alert is essentially extension of this alert and we found the relationship
 *  after creating both alerts.
 */
@property(nonatomic, copy, nullable) NSString *supersedingAlert;

/** Alert threshold is for example “COUNT > 5”. */
@property(nonatomic, copy, nullable) NSString *threshold;

/**
 *  The trigger sources for this rule. * GMAIL_EVENTS * DEVICE_EVENTS *
 *  USER_EVENTS
 */
@property(nonatomic, copy, nullable) NSString *triggerSource;

/** The timestamp of the last update to the rule. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** Rule window size. Possible values are 1 hour or 24 hours. */
@property(nonatomic, strong, nullable) GTLRDuration *windowSize;

@end


/**
 *  An alert affecting a customer.
 */
@interface GTLRAlertCenter_Alert : GTLRObject

/** Output only. The unique identifier for the alert. */
@property(nonatomic, copy, nullable) NSString *alertId;

/** Output only. The time this alert was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The unique identifier of the Google account of the customer.
 */
@property(nonatomic, copy, nullable) NSString *customerId;

/**
 *  Optional. The data associated with this alert, for example
 *  google.apps.alertcenter.type.DeviceCompromised.
 */
@property(nonatomic, strong, nullable) GTLRAlertCenter_Alert_Data *data;

/**
 *  Output only. `True` if this alert is marked for deletion.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deleted;

/**
 *  Optional. The time the event that caused this alert ceased being active. If
 *  provided, the end time must not be earlier than the start time. If not
 *  provided, it indicates an ongoing alert.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Optional. `etag` is used for optimistic concurrency control as a way to help
 *  prevent simultaneous updates of an alert from overwriting each other. It is
 *  strongly suggested that systems make use of the `etag` in the
 *  read-modify-write cycle to perform alert updates in order to avoid race
 *  conditions: An `etag` is returned in the response which contains alerts, and
 *  systems are expected to put that etag in the request to update alert to
 *  ensure that their change will be applied to the same version of the alert.
 *  If no `etag` is provided in the call to update alert, then the existing
 *  alert is overwritten blindly.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Output only. The metadata associated with this alert. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_AlertMetadata *metadata;

/**
 *  Output only. An optional [Security Investigation
 *  Tool](https://support.google.com/a/answer/7575955) query for this alert.
 */
@property(nonatomic, copy, nullable) NSString *securityInvestigationToolLink;

/**
 *  Required. A unique identifier for the system that reported the alert. This
 *  is output only after alert is created. Supported sources are any of the
 *  following: * Google Operations * Mobile device management * Gmail phishing *
 *  Data Loss Prevention * Domain wide takeout * State sponsored attack * Google
 *  identity * Apps outage
 */
@property(nonatomic, copy, nullable) NSString *source;

/**
 *  Required. The time the event that caused this alert was started or detected.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Required. The type of the alert. This is output only after alert is created.
 *  For a list of available alert types see [Google Workspace Alert
 *  types](https://developers.google.com/admin-sdk/alertcenter/reference/alert-types).
 */
@property(nonatomic, copy, nullable) NSString *type;

/** Output only. The time this alert was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. The data associated with this alert, for example
 *  google.apps.alertcenter.type.DeviceCompromised.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAlertCenter_Alert_Data : GTLRObject
@end


/**
 *  A customer feedback about an alert.
 */
@interface GTLRAlertCenter_AlertFeedback : GTLRObject

/** Output only. The alert identifier. */
@property(nonatomic, copy, nullable) NSString *alertId;

/** Output only. The time this feedback was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The unique identifier of the Google account of the customer.
 */
@property(nonatomic, copy, nullable) NSString *customerId;

/** Output only. The email of the user that provided the feedback. */
@property(nonatomic, copy, nullable) NSString *email;

/** Output only. The unique identifier for the feedback. */
@property(nonatomic, copy, nullable) NSString *feedbackId;

/**
 *  Required. The type of the feedback.
 *
 *  Likely values:
 *    @arg @c kGTLRAlertCenter_AlertFeedback_Type_AlertFeedbackTypeUnspecified
 *        The feedback type is not specified. (Value:
 *        "ALERT_FEEDBACK_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAlertCenter_AlertFeedback_Type_NotUseful The alert report is
 *        not useful. (Value: "NOT_USEFUL")
 *    @arg @c kGTLRAlertCenter_AlertFeedback_Type_SomewhatUseful The alert
 *        report is somewhat useful. (Value: "SOMEWHAT_USEFUL")
 *    @arg @c kGTLRAlertCenter_AlertFeedback_Type_VeryUseful The alert report is
 *        very useful. (Value: "VERY_USEFUL")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  An alert metadata.
 */
@interface GTLRAlertCenter_AlertMetadata : GTLRObject

/** Output only. The alert identifier. */
@property(nonatomic, copy, nullable) NSString *alertId;

/** The email address of the user assigned to the alert. */
@property(nonatomic, copy, nullable) NSString *assignee;

/**
 *  Output only. The unique identifier of the Google account of the customer.
 */
@property(nonatomic, copy, nullable) NSString *customerId;

/**
 *  Optional. `etag` is used for optimistic concurrency control as a way to help
 *  prevent simultaneous updates of an alert metadata from overwriting each
 *  other. It is strongly suggested that systems make use of the `etag` in the
 *  read-modify-write cycle to perform metadata updates in order to avoid race
 *  conditions: An `etag` is returned in the response which contains alert
 *  metadata, and systems are expected to put that etag in the request to update
 *  alert metadata to ensure that their change will be applied to the same
 *  version of the alert metadata. If no `etag` is provided in the call to
 *  update alert metadata, then the existing alert metadata is overwritten
 *  blindly.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The severity value of the alert. Alert Center will set this field at alert
 *  creation time, default's to an empty string when it could not be determined.
 *  The supported values for update actions on this field are the following: *
 *  HIGH * MEDIUM * LOW
 */
@property(nonatomic, copy, nullable) NSString *severity;

/**
 *  The current status of the alert. The supported values are the following: *
 *  NOT_STARTED * IN_PROGRESS * CLOSED
 */
@property(nonatomic, copy, nullable) NSString *status;

/** Output only. The time this metadata was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The explanation message associated with ApnsCertificationExpiring and
 *  ApnsCertificationExpired alerts.
 */
@interface GTLRAlertCenter_ApnsCertificateExpirationInfo : GTLRObject

/**
 *  The Apple ID used for the certificate, may be blank if admins did not enter
 *  it.
 */
@property(nonatomic, copy, nullable) NSString *appleId;

/** The expiration date of the APNS Certificate. */
@property(nonatomic, strong, nullable) GTLRDateTime *expirationTime;

/** The UID for the certificate. */
@property(nonatomic, copy, nullable) NSString *uid;

@end


/**
 *  Alerts from App Maker to notify admins to set up default SQL instance.
 */
@interface GTLRAlertCenter_AppMakerSqlSetupNotification : GTLRObject

/** List of applications with requests for default SQL set up. */
@property(nonatomic, strong, nullable) NSArray<GTLRAlertCenter_RequestInfo *> *requestInfo;

@end


/**
 *  Alerts from AppSettingsChanged bucket Rules configured by Admin which
 *  contain the below rules. Calendar settings changed Drive settings changed
 *  Email settings changed Mobile settings changed
 */
@interface GTLRAlertCenter_AppSettingsChanged : GTLRObject

/**
 *  Any other associated alert details, for example, AlertConfiguration.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *alertDetails;

/** Rule name */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  An outage incident reported for a Google Workspace service.
 */
@interface GTLRAlertCenter_AppsOutage : GTLRObject

/** Link to the outage event in Google Workspace Status Dashboard */
@property(nonatomic, copy, nullable) NSString *dashboardUri;

/** Incident tracking ID. */
@property(nonatomic, copy, nullable) NSString *incidentTrackingId;

/**
 *  Indicates new alert details under which the outage is communicated. Only
 *  populated when Status is MERGED.
 */
@property(nonatomic, strong, nullable) GTLRAlertCenter_MergeInfo *mergeInfo;

/** Timestamp by which the next update is expected to arrive. */
@property(nonatomic, strong, nullable) GTLRDateTime *nextUpdateTime;

/** List of products impacted by the outage. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *products;

/**
 *  Timestamp when the outage is expected to be resolved, or has confirmed
 *  resolution. Provided only when known.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *resolutionTime;

/**
 *  Current outage status.
 *
 *  Likely values:
 *    @arg @c kGTLRAlertCenter_AppsOutage_Status_Downgraded The incident has
 *        lower impact than initially anticipated. (Value: "DOWNGRADED")
 *    @arg @c kGTLRAlertCenter_AppsOutage_Status_FalsePositive Further
 *        assessment indicated no customer impact. (Value: "FALSE_POSITIVE")
 *    @arg @c kGTLRAlertCenter_AppsOutage_Status_Merged The incident was merged
 *        into a parent. (Value: "MERGED")
 *    @arg @c kGTLRAlertCenter_AppsOutage_Status_New The incident has just been
 *        reported. (Value: "NEW")
 *    @arg @c kGTLRAlertCenter_AppsOutage_Status_Ongoing The incident is
 *        ongoing. (Value: "ONGOING")
 *    @arg @c kGTLRAlertCenter_AppsOutage_Status_PartiallyResolved The incident
 *        has been partially resolved. (Value: "PARTIALLY_RESOLVED")
 *    @arg @c kGTLRAlertCenter_AppsOutage_Status_Resolved The incident has been
 *        resolved. (Value: "RESOLVED")
 *    @arg @c kGTLRAlertCenter_AppsOutage_Status_StatusUnspecified Status is
 *        unspecified. (Value: "STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  Attachment with application-specific information about an alert.
 */
@interface GTLRAlertCenter_Attachment : GTLRObject

/** A CSV file attachment. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_Csv *csv;

@end


/**
 *  Alert for setting the domain or IP that malicious email comes from as
 *  whitelisted domain or IP in Gmail advanced settings.
 */
@interface GTLRAlertCenter_BadWhitelist : GTLRObject

/** The domain ID. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_DomainId *domainId;

/** The entity whose actions triggered a Gmail phishing alert. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_MaliciousEntity *maliciousEntity;

/** The list of messages contained by this alert. */
@property(nonatomic, strong, nullable) NSArray<GTLRAlertCenter_GmailMessageInfo *> *messages;

/** The source IP address of the malicious email, for example, `127.0.0.1`. */
@property(nonatomic, copy, nullable) NSString *sourceIp;

@end


/**
 *  A request to perform batch delete on alerts.
 */
@interface GTLRAlertCenter_BatchDeleteAlertsRequest : GTLRObject

/** Required. list of alert IDs. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *alertId;

/**
 *  Optional. The unique identifier of the Google Workspace organization account
 *  of the customer the alerts are associated with.
 */
@property(nonatomic, copy, nullable) NSString *customerId;

@end


/**
 *  Response to batch delete operation on alerts.
 */
@interface GTLRAlertCenter_BatchDeleteAlertsResponse : GTLRObject

/** The status details for each failed alert_id. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_BatchDeleteAlertsResponse_FailedAlertStatus *failedAlertStatus;

/** The successful list of alert IDs. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *successAlertIds;

@end


/**
 *  The status details for each failed alert_id.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAlertCenter_Status. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRAlertCenter_BatchDeleteAlertsResponse_FailedAlertStatus : GTLRObject
@end


/**
 *  A request to perform batch undelete on alerts.
 */
@interface GTLRAlertCenter_BatchUndeleteAlertsRequest : GTLRObject

/** Required. list of alert IDs. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *alertId;

/**
 *  Optional. The unique identifier of the Google Workspace organization account
 *  of the customer the alerts are associated with.
 */
@property(nonatomic, copy, nullable) NSString *customerId;

@end


/**
 *  Response to batch undelete operation on alerts.
 */
@interface GTLRAlertCenter_BatchUndeleteAlertsResponse : GTLRObject

/** The status details for each failed alert_id. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_BatchUndeleteAlertsResponse_FailedAlertStatus *failedAlertStatus;

/** The successful list of alert IDs. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *successAlertIds;

@end


/**
 *  The status details for each failed alert_id.
 *
 *  @note This class is documented as having more properties of
 *        GTLRAlertCenter_Status. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRAlertCenter_BatchUndeleteAlertsResponse_FailedAlertStatus : GTLRObject
@end


/**
 *  A reference to a Cloud Pubsub topic. To register for notifications, the
 *  owner of the topic must grant
 *  `alerts-api-push-notifications\@system.gserviceaccount.com` the
 *  `projects.topics.publish` permission.
 */
@interface GTLRAlertCenter_CloudPubsubTopic : GTLRObject

/**
 *  Optional. The format of the payload that would be sent. If not specified the
 *  format will be JSON.
 *
 *  Likely values:
 *    @arg @c kGTLRAlertCenter_CloudPubsubTopic_PayloadFormat_Json Use JSON.
 *        (Value: "JSON")
 *    @arg @c kGTLRAlertCenter_CloudPubsubTopic_PayloadFormat_PayloadFormatUnspecified
 *        Payload format is not specified (will use JSON as default). (Value:
 *        "PAYLOAD_FORMAT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *payloadFormat;

/**
 *  The `name` field of a Cloud Pubsub [Topic]
 *  (https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic).
 */
@property(nonatomic, copy, nullable) NSString *topicName;

@end


/**
 *  A representation of a CSV file attachment, as a list of column headers and a
 *  list of data rows.
 */
@interface GTLRAlertCenter_Csv : GTLRObject

/**
 *  The list of data rows in a CSV file, as string arrays rather than as a
 *  single comma-separated string.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAlertCenter_CsvRow *> *dataRows;

/** The list of headers for data columns in a CSV file. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *headers;

@end


/**
 *  A representation of a single data row in a CSV file.
 */
@interface GTLRAlertCenter_CsvRow : GTLRObject

/**
 *  The data entries in a CSV file row, as a string array rather than a single
 *  comma-separated string.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *entries;

@end


/**
 *  A mobile device compromised alert. Derived from audit logs.
 */
@interface GTLRAlertCenter_DeviceCompromised : GTLRObject

/** The email of the user this alert was created for. */
@property(nonatomic, copy, nullable) NSString *email;

/** Required. The list of security events. */
@property(nonatomic, strong, nullable) NSArray<GTLRAlertCenter_DeviceCompromisedSecurityDetail *> *events;

@end


/**
 *  Detailed information of a single MDM device compromised event.
 */
@interface GTLRAlertCenter_DeviceCompromisedSecurityDetail : GTLRObject

/**
 *  The device compromised state. Possible values are "`Compromised`" or "`Not
 *  Compromised`".
 */
@property(nonatomic, copy, nullable) NSString *deviceCompromisedState;

/** Required. The device ID. */
@property(nonatomic, copy, nullable) NSString *deviceId;

/** The model of the device. */
@property(nonatomic, copy, nullable) NSString *deviceModel;

/** The type of the device. */
@property(nonatomic, copy, nullable) NSString *deviceType;

/** Required for iOS, empty for others. */
@property(nonatomic, copy, nullable) NSString *iosVendorId;

/** The device resource ID. */
@property(nonatomic, copy, nullable) NSString *resourceId;

/** The serial number of the device. */
@property(nonatomic, copy, nullable) NSString *serialNumber;

@end


/**
 *  Alerts that get triggered on violations of Data Loss Prevention (DLP) rules.
 */
@interface GTLRAlertCenter_DlpRuleViolation : GTLRObject

/**
 *  Details about the violated DLP rule. Admins can use the predefined detectors
 *  provided by Google Cloud DLP https://cloud.google.com/dlp/ when setting up a
 *  DLP rule. Matched Cloud DLP detectors in this violation if any will be
 *  captured in the MatchInfo.predefined_detector.
 */
@property(nonatomic, strong, nullable) GTLRAlertCenter_RuleViolationInfo *ruleViolationInfo;

@end


/**
 *  Domain ID of Gmail phishing alerts.
 */
@interface GTLRAlertCenter_DomainId : GTLRObject

/** The primary domain for the customer. */
@property(nonatomic, copy, nullable) NSString *customerPrimaryDomain;

@end


/**
 *  A takeout operation for the entire domain was initiated by an admin. Derived
 *  from audit logs.
 */
@interface GTLRAlertCenter_DomainWideTakeoutInitiated : GTLRObject

/** The email of the admin who initiated the takeout. */
@property(nonatomic, copy, nullable) NSString *email;

/** The takeout request ID. */
@property(nonatomic, copy, nullable) NSString *takeoutRequestId;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRAlertCenter_Empty : GTLRObject
@end


/**
 *  Individual entity affected by, or related to, an alert.
 */
@interface GTLRAlertCenter_Entity : GTLRObject

/**
 *  Link to a Security Investigation Tool search based on this entity, if
 *  available.
 */
@property(nonatomic, copy, nullable) NSString *link;

/**
 *  Human-readable name of this entity, such as an email address, file ID, or
 *  device name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Extra values beyond name. The order of values should align with headers in
 *  EntityList.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end


/**
 *  EntityList stores entities in a format that can be translated to a table in
 *  the Alert Center UI.
 */
@interface GTLRAlertCenter_EntityList : GTLRObject

/** List of entities affected by the alert. */
@property(nonatomic, strong, nullable) NSArray<GTLRAlertCenter_Entity *> *entities;

/**
 *  Headers of the values in entities. If no value is defined in Entity, this
 *  field should be empty.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *headers;

/** Name of the key detail used to display this entity list. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Details of a message in phishing spike alert.
 */
@interface GTLRAlertCenter_GmailMessageInfo : GTLRObject

/** The `SHA256` hash of email's attachment and all MIME parts. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *attachmentsSha256Hash;

/** The date of the event related to this email. */
@property(nonatomic, strong, nullable) GTLRDateTime *date;

/** The hash of the message body text. */
@property(nonatomic, copy, nullable) NSString *md5HashMessageBody;

/** The MD5 Hash of email's subject (only available for reported emails). */
@property(nonatomic, copy, nullable) NSString *md5HashSubject;

/**
 *  The snippet of the message body text (only available for reported emails).
 */
@property(nonatomic, copy, nullable) NSString *messageBodySnippet;

/** The message ID. */
@property(nonatomic, copy, nullable) NSString *messageId;

/** The recipient of this email. */
@property(nonatomic, copy, nullable) NSString *recipient;

/** The email subject text (only available for reported emails). */
@property(nonatomic, copy, nullable) NSString *subjectText;

@end


/**
 *  An incident reported by Google Operations for a Google Workspace
 *  application.
 */
@interface GTLRAlertCenter_GoogleOperations : GTLRObject

/**
 *  The list of emails which correspond to the users directly affected by the
 *  incident.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *affectedUserEmails;

/**
 *  Optional. Application-specific data for an incident, provided when the
 *  Google Workspace application which reported the incident cannot be
 *  completely restored to a valid state.
 */
@property(nonatomic, strong, nullable) GTLRAlertCenter_Attachment *attachmentData;

/**
 *  A detailed, freeform incident description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Customer domain for email template personalization. */
@property(nonatomic, copy, nullable) NSString *domain;

/**
 *  A header to display above the incident message. Typically used to attach a
 *  localized notice on the timeline for followup comms translations.
 */
@property(nonatomic, copy, nullable) NSString *header;

/** A one-line incident description. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Response message for an alert feedback listing request.
 */
@interface GTLRAlertCenter_ListAlertFeedbackResponse : GTLRObject

/**
 *  The list of alert feedback. Feedback entries for each alert are ordered by
 *  creation time descending.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAlertCenter_AlertFeedback *> *feedback;

@end


/**
 *  Response message for an alert listing request.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "alerts" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAlertCenter_ListAlertsResponse : GTLRCollectionObject

/**
 *  The list of alerts.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAlertCenter_Alert *> *alerts;

/**
 *  The token for the next page. If not empty, indicates that there may be more
 *  alerts that match the listing request; this value can be used in a
 *  subsequent ListAlertsRequest to get alerts continuing from last result of
 *  the current list call.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The details of the login action.
 */
@interface GTLRAlertCenter_LoginDetails : GTLRObject

/**
 *  Optional. The human-readable IP address (for example, `11.22.33.44`) that is
 *  associated with the warning event.
 */
@property(nonatomic, copy, nullable) NSString *ipAddress;

/**
 *  Optional. The successful login time that is associated with the warning
 *  event. This isn't present for blocked login attempts.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *loginTime;

@end


/**
 *  Proto for all phishing alerts with common payload. Supported types are any
 *  of the following: * User reported phishing * User reported spam spike *
 *  Suspicious message reported * Phishing reclassification * Malware
 *  reclassification * Gmail potential employee spoofing
 */
@interface GTLRAlertCenter_MailPhishing : GTLRObject

/** The domain ID. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_DomainId *domainId;

/**
 *  If `true`, the email originated from within the organization.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isInternal;

/** The entity whose actions triggered a Gmail phishing alert. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_MaliciousEntity *maliciousEntity;

/** The list of messages contained by this alert. */
@property(nonatomic, strong, nullable) NSArray<GTLRAlertCenter_GmailMessageInfo *> *messages;

/**
 *  System actions on the messages.
 *
 *  Likely values:
 *    @arg @c kGTLRAlertCenter_MailPhishing_SystemActionType_NoOperation No
 *        operation. (Value: "NO_OPERATION")
 *    @arg @c kGTLRAlertCenter_MailPhishing_SystemActionType_RemovedFromInbox
 *        Messages were removed from the inbox. (Value: "REMOVED_FROM_INBOX")
 *    @arg @c kGTLRAlertCenter_MailPhishing_SystemActionType_SystemActionTypeUnspecified
 *        System action is unspecified. (Value:
 *        "SYSTEM_ACTION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *systemActionType;

@end


/**
 *  Entity whose actions triggered a Gmail phishing alert.
 */
@interface GTLRAlertCenter_MaliciousEntity : GTLRObject

/** The header from display name. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** The actor who triggered a gmail phishing alert. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_User *entity;

/** The sender email address. */
@property(nonatomic, copy, nullable) NSString *fromHeader;

@end


/**
 *  Alert Created by the MSA team for communications necessary for continued use
 *  of Google Workspace Products.
 */
@interface GTLRAlertCenter_MandatoryServiceAnnouncement : GTLRObject

/**
 *  Detailed, freeform text describing the announcement
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** One line summary of the announcement */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Proto that contains match information from the condition part of the rule.
 */
@interface GTLRAlertCenter_MatchInfo : GTLRObject

/** For matched detector predefined by Google. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_PredefinedDetectorInfo *predefinedDetector;

/** For matched detector defined by administrators. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_UserDefinedDetectorInfo *userDefinedDetector;

@end


/**
 *  New alert tracking numbers.
 */
@interface GTLRAlertCenter_MergeInfo : GTLRObject

/**
 *  Optional. New alert ID. Reference the [google.apps.alertcenter.Alert] with
 *  this ID for the current state.
 */
@property(nonatomic, copy, nullable) NSString *newAlertId NS_RETURNS_NOT_RETAINED;

/** The new tracking ID from the parent incident. */
@property(nonatomic, copy, nullable) NSString *newIncidentTrackingId NS_RETURNS_NOT_RETAINED;

@end


/**
 *  Settings for callback notifications. For more details see [Google Workspace
 *  Alert
 *  Notification](https://developers.google.com/admin-sdk/alertcenter/guides/notifications).
 */
@interface GTLRAlertCenter_Notification : GTLRObject

/** A Google Cloud Pub/sub topic destination. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_CloudPubsubTopic *cloudPubsubTopic;

@end


/**
 *  Alert for a spike in user reported phishing. *Warning*: This type has been
 *  deprecated. Use
 *  [MailPhishing](/admin-sdk/alertcenter/reference/rest/v1beta1/MailPhishing)
 *  instead.
 */
@interface GTLRAlertCenter_PhishingSpike : GTLRObject

/** The domain ID. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_DomainId *domainId;

/**
 *  If `true`, the email originated from within the organization.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isInternal;

/** The entity whose actions triggered a Gmail phishing alert. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_MaliciousEntity *maliciousEntity;

/** The list of messages contained by this alert. */
@property(nonatomic, strong, nullable) NSArray<GTLRAlertCenter_GmailMessageInfo *> *messages;

@end


/**
 *  Detector provided by Google.
 */
@interface GTLRAlertCenter_PredefinedDetectorInfo : GTLRObject

/** Name that uniquely identifies the detector. */
@property(nonatomic, copy, nullable) NSString *detectorName;

@end


/**
 *  Event occurred when primary admin changed in customer's account. The event
 *  are being received from insight forwarder
 */
@interface GTLRAlertCenter_PrimaryAdminChangedEvent : GTLRObject

/** domain in which actioned occurred */
@property(nonatomic, copy, nullable) NSString *domain;

/** Email of person who was the primary admin before the action */
@property(nonatomic, copy, nullable) NSString *previousAdminEmail;

/** Email of person who is the primary admin after the action */
@property(nonatomic, copy, nullable) NSString *updatedAdminEmail;

@end


/**
 *  Alerts from Reporting Rules configured by Admin.
 */
@interface GTLRAlertCenter_ReportingRule : GTLRObject

/**
 *  Any other associated alert details, for example, AlertConfiguration.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *alertDetails;

/** Rule name */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Alert Rule query Sample Query query { condition { filter {
 *  expected_application_id: 777491262838 expected_event_name:
 *  "indexable_content_change" filter_op: IN } } conjunction_operator: OR }
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *query;

@end


/**
 *  Requests for one application that needs default SQL setup.
 */
@interface GTLRAlertCenter_RequestInfo : GTLRObject

/**
 *  List of app developers who triggered notifications for above application.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *appDeveloperEmail;

/** Required. The application that requires the SQL setup. */
@property(nonatomic, copy, nullable) NSString *appKey;

/**
 *  Required. Number of requests sent for this application to set up default SQL
 *  instance.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numberOfRequests;

@end


/**
 *  Proto that contains resource information.
 */
@interface GTLRAlertCenter_ResourceInfo : GTLRObject

/** Drive file ID. */
@property(nonatomic, copy, nullable) NSString *documentId;

/** Title of the resource, for example email subject, or document title. */
@property(nonatomic, copy, nullable) NSString *resourceTitle;

@end


/**
 *  Proto that contains rule information.
 */
@interface GTLRAlertCenter_RuleInfo : GTLRObject

/** User provided name of the rule. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Resource name that uniquely identifies the rule. */
@property(nonatomic, copy, nullable) NSString *resourceName;

@end


/**
 *  Common alert information about violated rules that are configured by Google
 *  Workspace administrators.
 */
@interface GTLRAlertCenter_RuleViolationInfo : GTLRObject

/**
 *  Source of the data.
 *
 *  Likely values:
 *    @arg @c kGTLRAlertCenter_RuleViolationInfo_DataSource_DataSourceUnspecified
 *        Data source is unspecified. (Value: "DATA_SOURCE_UNSPECIFIED")
 *    @arg @c kGTLRAlertCenter_RuleViolationInfo_DataSource_Drive Drive data
 *        source. (Value: "DRIVE")
 */
@property(nonatomic, copy, nullable) NSString *dataSource;

/** List of matches that were found in the resource content. */
@property(nonatomic, strong, nullable) NSArray<GTLRAlertCenter_MatchInfo *> *matchInfo;

/**
 *  Resource recipients. For Drive, they are grantees that the Drive file was
 *  shared with at the time of rule triggering. Valid values include user
 *  emails, group emails, domains, or 'anyone' if the file was publicly
 *  accessible. If the file was private the recipients list will be empty. For
 *  Gmail, they are emails of the users or groups that the Gmail message was
 *  sent to.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *recipients;

/** Details of the resource which violated the rule. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_ResourceInfo *resourceInfo;

/** Details of the violated rule. */
@property(nonatomic, strong, nullable) GTLRAlertCenter_RuleInfo *ruleInfo;

/** Actions suppressed due to other actions with higher priority. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *suppressedActionTypes;

/**
 *  Trigger of the rule.
 *
 *  Likely values:
 *    @arg @c kGTLRAlertCenter_RuleViolationInfo_Trigger_DriveShare A Drive file
 *        is shared. (Value: "DRIVE_SHARE")
 *    @arg @c kGTLRAlertCenter_RuleViolationInfo_Trigger_TriggerUnspecified
 *        Trigger is unspecified. (Value: "TRIGGER_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *trigger;

/** Metadata related to the triggered actions. */
@property(nonatomic, strong, nullable) NSArray<GTLRAlertCenter_ActionInfo *> *triggeredActionInfo;

/** Actions applied as a consequence of the rule being triggered. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *triggeredActionTypes;

/**
 *  Email of the user who caused the violation. Value could be empty if not
 *  applicable, for example, a violation found by drive continuous scan.
 */
@property(nonatomic, copy, nullable) NSString *triggeringUserEmail;

@end


/**
 *  Alert that is triggered when Sensitive Admin Action occur in customer
 *  account.
 */
@interface GTLRAlertCenter_SensitiveAdminAction : GTLRObject

/** Email of person who performed the action */
@property(nonatomic, copy, nullable) NSString *actorEmail;

/** The time at which event occurred */
@property(nonatomic, strong, nullable) GTLRDateTime *eventTime;

/** Event occurred when primary admin changed in customer's account */
@property(nonatomic, strong, nullable) GTLRAlertCenter_PrimaryAdminChangedEvent *primaryAdminChangedEvent;

/** Event occurred when SSO Profile created in customer's account */
@property(nonatomic, strong, nullable) GTLRAlertCenter_SSOProfileCreatedEvent *ssoProfileCreatedEvent;

/** Event occurred when SSO Profile deleted in customer's account */
@property(nonatomic, strong, nullable) GTLRAlertCenter_SSOProfileDeletedEvent *ssoProfileDeletedEvent;

/** Event occurred when SSO Profile updated in customer's account */
@property(nonatomic, strong, nullable) GTLRAlertCenter_SSOProfileUpdatedEvent *ssoProfileUpdatedEvent;

/**
 *  Event occurred when password was reset for super admin in customer's account
 */
@property(nonatomic, strong, nullable) GTLRAlertCenter_SuperAdminPasswordResetEvent *superAdminPasswordResetEvent;

@end


/**
 *  Customer-level settings.
 */
@interface GTLRAlertCenter_Settings : GTLRObject

/** The list of notifications. */
@property(nonatomic, strong, nullable) NSArray<GTLRAlertCenter_Notification *> *notifications;

@end


/**
 *  Event occurred when SSO Profile created in customer's account. The event are
 *  being received from insight forwarder
 */
@interface GTLRAlertCenter_SSOProfileCreatedEvent : GTLRObject

/** sso profile name which got created */
@property(nonatomic, copy, nullable) NSString *inboundSsoProfileName;

@end


/**
 *  Event occurred when SSO Profile deleted in customer's account. The event are
 *  being received from insight forwarder
 */
@interface GTLRAlertCenter_SSOProfileDeletedEvent : GTLRObject

/** sso profile name which got deleted */
@property(nonatomic, copy, nullable) NSString *inboundSsoProfileName;

@end


/**
 *  Event occurred when SSO Profile updated in customer's account. The event are
 *  being received from insight forwarder
 */
@interface GTLRAlertCenter_SSOProfileUpdatedEvent : GTLRObject

/** changes made to sso profile */
@property(nonatomic, copy, nullable) NSString *inboundSsoProfileChanges;

/** sso profile name which got updated */
@property(nonatomic, copy, nullable) NSString *inboundSsoProfileName;

@end


/**
 *  A state-sponsored attack alert. Derived from audit logs.
 */
@interface GTLRAlertCenter_StateSponsoredAttack : GTLRObject

/** The email of the user this incident was created for. */
@property(nonatomic, copy, nullable) NSString *email;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRAlertCenter_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAlertCenter_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRAlertCenter_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRAlertCenter_Status_Details_Item : GTLRObject
@end


/**
 *  Event occurred when password was reset for super admin in customer's
 *  account. The event are being received from insight forwarder
 */
@interface GTLRAlertCenter_SuperAdminPasswordResetEvent : GTLRObject

/** email of person whose password was reset */
@property(nonatomic, copy, nullable) NSString *userEmail;

@end


/**
 *  A mobile suspicious activity alert. Derived from audit logs.
 */
@interface GTLRAlertCenter_SuspiciousActivity : GTLRObject

/** The email of the user this alert was created for. */
@property(nonatomic, copy, nullable) NSString *email;

/** Required. The list of security events. */
@property(nonatomic, strong, nullable) NSArray<GTLRAlertCenter_SuspiciousActivitySecurityDetail *> *events;

@end


/**
 *  Detailed information of a single MDM suspicious activity event.
 */
@interface GTLRAlertCenter_SuspiciousActivitySecurityDetail : GTLRObject

/** Required. The device ID. */
@property(nonatomic, copy, nullable) NSString *deviceId;

/** The model of the device. */
@property(nonatomic, copy, nullable) NSString *deviceModel;

/** The device property which was changed. */
@property(nonatomic, copy, nullable) NSString *deviceProperty;

/** The type of the device. */
@property(nonatomic, copy, nullable) NSString *deviceType;

/** Required for iOS, empty for others. */
@property(nonatomic, copy, nullable) NSString *iosVendorId;

/** The new value of the device property after the change. */
@property(nonatomic, copy, nullable) NSString *newValue NS_RETURNS_NOT_RETAINED;

/** The old value of the device property before the change. */
@property(nonatomic, copy, nullable) NSString *oldValue;

/** The device resource ID. */
@property(nonatomic, copy, nullable) NSString *resourceId;

/** The serial number of the device. */
@property(nonatomic, copy, nullable) NSString *serialNumber;

@end


/**
 *  A request to undelete a specific alert that was marked for deletion.
 */
@interface GTLRAlertCenter_UndeleteAlertRequest : GTLRObject

/**
 *  Optional. The unique identifier of the Google Workspace organization account
 *  of the customer the alert is associated with. Inferred from the caller
 *  identity if not provided.
 */
@property(nonatomic, copy, nullable) NSString *customerId;

@end


/**
 *  A user.
 */
@interface GTLRAlertCenter_User : GTLRObject

/** Display name of the user. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Email address of the user. */
@property(nonatomic, copy, nullable) NSString *emailAddress;

@end


/**
 *  Alerts from UserChanges bucket Rules for predefined rules which contain the
 *  below rules. Suspended user made active New user Added User suspended (by
 *  admin) User granted admin privileges User admin privileges revoked User
 *  deleted Users password changed
 */
@interface GTLRAlertCenter_UserChanges : GTLRObject

/** Rule name */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Detector defined by administrators.
 */
@interface GTLRAlertCenter_UserDefinedDetectorInfo : GTLRObject

/** Display name of the detector. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Resource name that uniquely identifies the detector. */
@property(nonatomic, copy, nullable) NSString *resourceName;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
