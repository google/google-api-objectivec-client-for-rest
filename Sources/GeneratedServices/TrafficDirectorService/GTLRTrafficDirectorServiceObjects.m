// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Traffic Director API (trafficdirector/v2)
// Documentation:
//   https://cloud.google.com/traffic-director

#import <GoogleAPIClientForREST/GTLRTrafficDirectorServiceObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRTrafficDirectorService_PerXdsConfig.status
NSString * const kGTLRTrafficDirectorService_PerXdsConfig_Status_Error = @"ERROR";
NSString * const kGTLRTrafficDirectorService_PerXdsConfig_Status_NotSent = @"NOT_SENT";
NSString * const kGTLRTrafficDirectorService_PerXdsConfig_Status_Stale = @"STALE";
NSString * const kGTLRTrafficDirectorService_PerXdsConfig_Status_Synced = @"SYNCED";
NSString * const kGTLRTrafficDirectorService_PerXdsConfig_Status_Unknown = @"UNKNOWN";

// GTLRTrafficDirectorService_SocketAddress.protocol
NSString * const kGTLRTrafficDirectorService_SocketAddress_Protocol_Tcp = @"TCP";
NSString * const kGTLRTrafficDirectorService_SocketAddress_Protocol_Udp = @"UDP";

// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_Address
//

@implementation GTLRTrafficDirectorService_Address
@dynamic pipe, socketAddress;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_BuildVersion
//

@implementation GTLRTrafficDirectorService_BuildVersion
@dynamic metadata, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_BuildVersion_Metadata
//

@implementation GTLRTrafficDirectorService_BuildVersion_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_ClientConfig
//

@implementation GTLRTrafficDirectorService_ClientConfig
@dynamic node, xdsConfig;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"xdsConfig" : [GTLRTrafficDirectorService_PerXdsConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_ClientStatusRequest
//

@implementation GTLRTrafficDirectorService_ClientStatusRequest
@dynamic nodeMatchers;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nodeMatchers" : [GTLRTrafficDirectorService_NodeMatcher class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_ClientStatusResponse
//

@implementation GTLRTrafficDirectorService_ClientStatusResponse
@dynamic config;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"config" : [GTLRTrafficDirectorService_ClientConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_ClustersConfigDump
//

@implementation GTLRTrafficDirectorService_ClustersConfigDump
@dynamic dynamicActiveClusters, dynamicWarmingClusters, staticClusters,
         versionInfo;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"dynamicActiveClusters" : [GTLRTrafficDirectorService_DynamicCluster class],
    @"dynamicWarmingClusters" : [GTLRTrafficDirectorService_DynamicCluster class],
    @"staticClusters" : [GTLRTrafficDirectorService_StaticCluster class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_DoubleMatcher
//

@implementation GTLRTrafficDirectorService_DoubleMatcher
@dynamic exact, range;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_DoubleRange
//

@implementation GTLRTrafficDirectorService_DoubleRange
@dynamic end, start;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_DynamicCluster
//

@implementation GTLRTrafficDirectorService_DynamicCluster
@dynamic cluster, lastUpdated, versionInfo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_DynamicCluster_Cluster
//

@implementation GTLRTrafficDirectorService_DynamicCluster_Cluster

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_DynamicListener
//

@implementation GTLRTrafficDirectorService_DynamicListener
@dynamic activeState, drainingState, errorState, name, warmingState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_DynamicListenerState
//

@implementation GTLRTrafficDirectorService_DynamicListenerState
@dynamic lastUpdated, listener, versionInfo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_DynamicListenerState_Listener
//

@implementation GTLRTrafficDirectorService_DynamicListenerState_Listener

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_DynamicRouteConfig
//

@implementation GTLRTrafficDirectorService_DynamicRouteConfig
@dynamic lastUpdated, routeConfig, versionInfo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_DynamicRouteConfig_RouteConfig
//

@implementation GTLRTrafficDirectorService_DynamicRouteConfig_RouteConfig

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_DynamicScopedRouteConfigs
//

@implementation GTLRTrafficDirectorService_DynamicScopedRouteConfigs
@dynamic lastUpdated, name, scopedRouteConfigs, versionInfo;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"scopedRouteConfigs" : [GTLRTrafficDirectorService_DynamicScopedRouteConfigs_ScopedRouteConfigs_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_DynamicScopedRouteConfigs_ScopedRouteConfigs_Item
//

@implementation GTLRTrafficDirectorService_DynamicScopedRouteConfigs_ScopedRouteConfigs_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_Extension
//

@implementation GTLRTrafficDirectorService_Extension
@dynamic category, disabled, name, typeDescriptor, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_GoogleRE2
//

@implementation GTLRTrafficDirectorService_GoogleRE2
@dynamic maxProgramSize;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_InlineScopedRouteConfigs
//

@implementation GTLRTrafficDirectorService_InlineScopedRouteConfigs
@dynamic lastUpdated, name, scopedRouteConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"scopedRouteConfigs" : [GTLRTrafficDirectorService_InlineScopedRouteConfigs_ScopedRouteConfigs_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_InlineScopedRouteConfigs_ScopedRouteConfigs_Item
//

@implementation GTLRTrafficDirectorService_InlineScopedRouteConfigs_ScopedRouteConfigs_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_ListenersConfigDump
//

@implementation GTLRTrafficDirectorService_ListenersConfigDump
@dynamic dynamicListeners, staticListeners, versionInfo;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"dynamicListeners" : [GTLRTrafficDirectorService_DynamicListener class],
    @"staticListeners" : [GTLRTrafficDirectorService_StaticListener class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_ListMatcher
//

@implementation GTLRTrafficDirectorService_ListMatcher
@dynamic oneOf;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_Locality
//

@implementation GTLRTrafficDirectorService_Locality
@dynamic region, subZone, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"zoneProperty" : @"zone" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_Node
//

@implementation GTLRTrafficDirectorService_Node
@dynamic buildVersion, clientFeatures, cluster, extensions, identifier,
         listeningAddresses, locality, metadata, userAgentBuildVersion,
         userAgentName, userAgentVersion;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"clientFeatures" : [NSString class],
    @"extensions" : [GTLRTrafficDirectorService_Extension class],
    @"listeningAddresses" : [GTLRTrafficDirectorService_Address class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_Node_Metadata
//

@implementation GTLRTrafficDirectorService_Node_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_NodeMatcher
//

@implementation GTLRTrafficDirectorService_NodeMatcher
@dynamic nodeId, nodeMetadatas;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nodeMetadatas" : [GTLRTrafficDirectorService_StructMatcher class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_NullMatch
//

@implementation GTLRTrafficDirectorService_NullMatch
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_PathSegment
//

@implementation GTLRTrafficDirectorService_PathSegment
@dynamic key;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_PerXdsConfig
//

@implementation GTLRTrafficDirectorService_PerXdsConfig
@dynamic clusterConfig, listenerConfig, routeConfig, scopedRouteConfig, status;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_Pipe
//

@implementation GTLRTrafficDirectorService_Pipe
@dynamic mode, path;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_RegexMatcher
//

@implementation GTLRTrafficDirectorService_RegexMatcher
@dynamic googleRe2, regex;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_RoutesConfigDump
//

@implementation GTLRTrafficDirectorService_RoutesConfigDump
@dynamic dynamicRouteConfigs, staticRouteConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"dynamicRouteConfigs" : [GTLRTrafficDirectorService_DynamicRouteConfig class],
    @"staticRouteConfigs" : [GTLRTrafficDirectorService_StaticRouteConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_ScopedRoutesConfigDump
//

@implementation GTLRTrafficDirectorService_ScopedRoutesConfigDump
@dynamic dynamicScopedRouteConfigs, inlineScopedRouteConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"dynamicScopedRouteConfigs" : [GTLRTrafficDirectorService_DynamicScopedRouteConfigs class],
    @"inlineScopedRouteConfigs" : [GTLRTrafficDirectorService_InlineScopedRouteConfigs class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_SemanticVersion
//

@implementation GTLRTrafficDirectorService_SemanticVersion
@dynamic majorNumber, minorNumber, patch;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_SocketAddress
//

@implementation GTLRTrafficDirectorService_SocketAddress
@dynamic address, ipv4Compat, namedPort, portValue, protocol, resolverName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_StaticCluster
//

@implementation GTLRTrafficDirectorService_StaticCluster
@dynamic cluster, lastUpdated;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_StaticCluster_Cluster
//

@implementation GTLRTrafficDirectorService_StaticCluster_Cluster

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_StaticListener
//

@implementation GTLRTrafficDirectorService_StaticListener
@dynamic lastUpdated, listener;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_StaticListener_Listener
//

@implementation GTLRTrafficDirectorService_StaticListener_Listener

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_StaticRouteConfig
//

@implementation GTLRTrafficDirectorService_StaticRouteConfig
@dynamic lastUpdated, routeConfig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_StaticRouteConfig_RouteConfig
//

@implementation GTLRTrafficDirectorService_StaticRouteConfig_RouteConfig

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_StringMatcher
//

@implementation GTLRTrafficDirectorService_StringMatcher
@dynamic exact, ignoreCase, prefix, regex, safeRegex, suffix;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_StructMatcher
//

@implementation GTLRTrafficDirectorService_StructMatcher
@dynamic path, value;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"path" : [GTLRTrafficDirectorService_PathSegment class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_UpdateFailureState
//

@implementation GTLRTrafficDirectorService_UpdateFailureState
@dynamic details, failedConfiguration, lastUpdateAttempt;
@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_UpdateFailureState_FailedConfiguration
//

@implementation GTLRTrafficDirectorService_UpdateFailureState_FailedConfiguration

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRTrafficDirectorService_ValueMatcher
//

@implementation GTLRTrafficDirectorService_ValueMatcher
@dynamic boolMatch, doubleMatch, listMatch, nullMatch, presentMatch,
         stringMatch;
@end
