// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Data Lineage API (datalineage/v1)
// Documentation:
//   https://cloud.google.com/data-catalog

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRDatalineageObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Datalineage query classes.
 */
@interface GTLRDatalineageQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Retrieve information about LineageProcesses associated with specific links.
 *  LineageProcesses are transformation pipelines that result in data flowing
 *  from **source** to **target** assets. Links between assets represent this
 *  operation. If you have specific link names, you can use this method to
 *  verify which LineageProcesses contribute to creating those links. See the
 *  SearchLinks method for more information on how to retrieve link name. You
 *  can retrieve the LineageProcess information in every project where you have
 *  the `datalineage.events.get` permission. The project provided in the URL is
 *  used for Billing and Quota.
 *
 *  Method: datalineage.projects.locations.batchSearchLinkProcesses
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsBatchSearchLinkProcesses : GTLRDatalineageQuery

/** Required. The project and location where you want to search. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDatalineage_GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesResponse.
 *
 *  Retrieve information about LineageProcesses associated with specific links.
 *  LineageProcesses are transformation pipelines that result in data flowing
 *  from **source** to **target** assets. Links between assets represent this
 *  operation. If you have specific link names, you can use this method to
 *  verify which LineageProcesses contribute to creating those links. See the
 *  SearchLinks method for more information on how to retrieve link name. You
 *  can retrieve the LineageProcess information in every project where you have
 *  the `datalineage.events.get` permission. The project provided in the URL is
 *  used for Billing and Quota.
 *
 *  @param object The @c
 *    GTLRDatalineage_GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesRequest
 *    to include in the query.
 *  @param parent Required. The project and location where you want to search.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsBatchSearchLinkProcesses
 */
+ (instancetype)queryWithObject:(GTLRDatalineage_GoogleCloudDatacatalogLineageV1BatchSearchLinkProcessesRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: datalineage.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsOperationsCancel : GTLRDatalineageQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatalineage_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRDatalineage_GoogleLongrunningCancelOperationRequest
 *    to include in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRDatalineage_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: datalineage.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsOperationsDelete : GTLRDatalineageQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatalineage_GoogleProtobufEmpty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: datalineage.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsOperationsGet : GTLRDatalineageQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatalineage_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: datalineage.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsOperationsList : GTLRDatalineageQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDatalineage_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new process.
 *
 *  Method: datalineage.projects.locations.processes.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsProcessesCreate : GTLRDatalineageQuery

/**
 *  Required. The name of the project and its location that should own the
 *  process.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  A unique identifier for this request. Restricted to 36 ASCII characters. A
 *  random UUID is recommended. This request is idempotent only if a
 *  `request_id` is provided.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRDatalineage_GoogleCloudDatacatalogLineageV1Process.
 *
 *  Creates a new process.
 *
 *  @param object The @c GTLRDatalineage_GoogleCloudDatacatalogLineageV1Process
 *    to include in the query.
 *  @param parent Required. The name of the project and its location that should
 *    own the process.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsProcessesCreate
 */
+ (instancetype)queryWithObject:(GTLRDatalineage_GoogleCloudDatacatalogLineageV1Process *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the process with the specified name.
 *
 *  Method: datalineage.projects.locations.processes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsProcessesDelete : GTLRDatalineageQuery

/**
 *  If set to true and the process is not found, the request succeeds but the
 *  server doesn't perform any actions.
 */
@property(nonatomic, assign) BOOL allowMissing;

/** Required. The name of the process to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatalineage_GoogleLongrunningOperation.
 *
 *  Deletes the process with the specified name.
 *
 *  @param name Required. The name of the process to delete.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsProcessesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the details of the specified process.
 *
 *  Method: datalineage.projects.locations.processes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsProcessesGet : GTLRDatalineageQuery

/** Required. The name of the process to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatalineage_GoogleCloudDatacatalogLineageV1Process.
 *
 *  Gets the details of the specified process.
 *
 *  @param name Required. The name of the process to get.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsProcessesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List processes in the given project and location. List order is descending
 *  by insertion time.
 *
 *  Method: datalineage.projects.locations.processes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsProcessesList : GTLRDatalineageQuery

/**
 *  The maximum number of processes to return. The service may return fewer than
 *  this value. If unspecified, at most 50 processes are returned. The maximum
 *  value is 100; values greater than 100 are cut to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The page token received from a previous `ListProcesses` call. Specify it to
 *  get the next page. When paginating, all other parameters specified in this
 *  call must match the parameters of the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the project and its location that owns this collection
 *  of processes.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDatalineage_GoogleCloudDatacatalogLineageV1ListProcessesResponse.
 *
 *  List processes in the given project and location. List order is descending
 *  by insertion time.
 *
 *  @param parent Required. The name of the project and its location that owns
 *    this collection of processes.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsProcessesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a process.
 *
 *  Method: datalineage.projects.locations.processes.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsProcessesPatch : GTLRDatalineageQuery

/** If set to true and the process is not found, the request inserts it. */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Immutable. The resource name of the lineage process. Format:
 *  `projects/{project}/locations/{location}/processes/{process}`. Can be
 *  specified or auto-assigned. {process} must be not longer than 200 characters
 *  and only contain characters in a set: `a-zA-Z0-9_-:.`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to update. Currently not used. The whole message is
 *  updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDatalineage_GoogleCloudDatacatalogLineageV1Process.
 *
 *  Updates a process.
 *
 *  @param object The @c GTLRDatalineage_GoogleCloudDatacatalogLineageV1Process
 *    to include in the query.
 *  @param name Immutable. The resource name of the lineage process. Format:
 *    `projects/{project}/locations/{location}/processes/{process}`. Can be
 *    specified or auto-assigned. {process} must be not longer than 200
 *    characters and only contain characters in a set: `a-zA-Z0-9_-:.`
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsProcessesPatch
 */
+ (instancetype)queryWithObject:(GTLRDatalineage_GoogleCloudDatacatalogLineageV1Process *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new run.
 *
 *  Method: datalineage.projects.locations.processes.runs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsProcessesRunsCreate : GTLRDatalineageQuery

/** Required. The name of the process that should own the run. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  A unique identifier for this request. Restricted to 36 ASCII characters. A
 *  random UUID is recommended. This request is idempotent only if a
 *  `request_id` is provided.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRDatalineage_GoogleCloudDatacatalogLineageV1Run.
 *
 *  Creates a new run.
 *
 *  @param object The @c GTLRDatalineage_GoogleCloudDatacatalogLineageV1Run to
 *    include in the query.
 *  @param parent Required. The name of the process that should own the run.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsProcessesRunsCreate
 */
+ (instancetype)queryWithObject:(GTLRDatalineage_GoogleCloudDatacatalogLineageV1Run *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the run with the specified name.
 *
 *  Method: datalineage.projects.locations.processes.runs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsProcessesRunsDelete : GTLRDatalineageQuery

/**
 *  If set to true and the run is not found, the request succeeds but the server
 *  doesn't perform any actions.
 */
@property(nonatomic, assign) BOOL allowMissing;

/** Required. The name of the run to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatalineage_GoogleLongrunningOperation.
 *
 *  Deletes the run with the specified name.
 *
 *  @param name Required. The name of the run to delete.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsProcessesRunsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the details of the specified run.
 *
 *  Method: datalineage.projects.locations.processes.runs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsProcessesRunsGet : GTLRDatalineageQuery

/** Required. The name of the run to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatalineage_GoogleCloudDatacatalogLineageV1Run.
 *
 *  Gets the details of the specified run.
 *
 *  @param name Required. The name of the run to get.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsProcessesRunsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new lineage event.
 *
 *  Method: datalineage.projects.locations.processes.runs.lineageEvents.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsProcessesRunsLineageEventsCreate : GTLRDatalineageQuery

/** Required. The name of the run that should own the lineage event. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  A unique identifier for this request. Restricted to 36 ASCII characters. A
 *  random UUID is recommended. This request is idempotent only if a
 *  `request_id` is provided.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRDatalineage_GoogleCloudDatacatalogLineageV1LineageEvent.
 *
 *  Creates a new lineage event.
 *
 *  @param object The @c
 *    GTLRDatalineage_GoogleCloudDatacatalogLineageV1LineageEvent to include in
 *    the query.
 *  @param parent Required. The name of the run that should own the lineage
 *    event.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsProcessesRunsLineageEventsCreate
 */
+ (instancetype)queryWithObject:(GTLRDatalineage_GoogleCloudDatacatalogLineageV1LineageEvent *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the lineage event with the specified name.
 *
 *  Method: datalineage.projects.locations.processes.runs.lineageEvents.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsProcessesRunsLineageEventsDelete : GTLRDatalineageQuery

/**
 *  If set to true and the lineage event is not found, the request succeeds but
 *  the server doesn't perform any actions.
 */
@property(nonatomic, assign) BOOL allowMissing;

/** Required. The name of the lineage event to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatalineage_GoogleProtobufEmpty.
 *
 *  Deletes the lineage event with the specified name.
 *
 *  @param name Required. The name of the lineage event to delete.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsProcessesRunsLineageEventsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a specified lineage event.
 *
 *  Method: datalineage.projects.locations.processes.runs.lineageEvents.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsProcessesRunsLineageEventsGet : GTLRDatalineageQuery

/** Required. The name of the lineage event to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDatalineage_GoogleCloudDatacatalogLineageV1LineageEvent.
 *
 *  Gets details of a specified lineage event.
 *
 *  @param name Required. The name of the lineage event to get.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsProcessesRunsLineageEventsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists lineage events in the given project and location. The list order is
 *  not defined.
 *
 *  Method: datalineage.projects.locations.processes.runs.lineageEvents.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsProcessesRunsLineageEventsList : GTLRDatalineageQuery

/**
 *  The maximum number of lineage events to return. The service may return fewer
 *  events than this value. If unspecified, at most 50 events are returned. The
 *  maximum value is 100; values greater than 100 are cut to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The page token received from a previous `ListLineageEvents` call. Specify it
 *  to get the next page. When paginating, all other parameters specified in
 *  this call must match the parameters of the call that provided the page
 *  token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the run that owns the collection of lineage events to
 *  get.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDatalineage_GoogleCloudDatacatalogLineageV1ListLineageEventsResponse.
 *
 *  Lists lineage events in the given project and location. The list order is
 *  not defined.
 *
 *  @param parent Required. The name of the run that owns the collection of
 *    lineage events to get.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsProcessesRunsLineageEventsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists runs in the given project and location. List order is descending by
 *  `start_time`.
 *
 *  Method: datalineage.projects.locations.processes.runs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsProcessesRunsList : GTLRDatalineageQuery

/**
 *  The maximum number of runs to return. The service may return fewer than this
 *  value. If unspecified, at most 50 runs are returned. The maximum value is
 *  100; values greater than 100 are cut to 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The page token received from a previous `ListRuns` call. Specify it to get
 *  the next page. When paginating, all other parameters specified in this call
 *  must match the parameters of the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The name of process that owns this collection of runs. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDatalineage_GoogleCloudDatacatalogLineageV1ListRunsResponse.
 *
 *  Lists runs in the given project and location. List order is descending by
 *  `start_time`.
 *
 *  @param parent Required. The name of process that owns this collection of
 *    runs.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsProcessesRunsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a run.
 *
 *  Method: datalineage.projects.locations.processes.runs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsProcessesRunsPatch : GTLRDatalineageQuery

/** If set to true and the run is not found, the request creates it. */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Immutable. The resource name of the run. Format:
 *  `projects/{project}/locations/{location}/processes/{process}/runs/{run}`.
 *  Can be specified or auto-assigned. {run} must be not longer than 200
 *  characters and only contain characters in a set: `a-zA-Z0-9_-:.`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to update. Currently not used. The whole message is
 *  updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDatalineage_GoogleCloudDatacatalogLineageV1Run.
 *
 *  Updates a run.
 *
 *  @param object The @c GTLRDatalineage_GoogleCloudDatacatalogLineageV1Run to
 *    include in the query.
 *  @param name Immutable. The resource name of the run. Format:
 *    `projects/{project}/locations/{location}/processes/{process}/runs/{run}`.
 *    Can be specified or auto-assigned. {run} must be not longer than 200
 *    characters and only contain characters in a set: `a-zA-Z0-9_-:.`
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsProcessesRunsPatch
 */
+ (instancetype)queryWithObject:(GTLRDatalineage_GoogleCloudDatacatalogLineageV1Run *)object
                           name:(NSString *)name;

@end

/**
 *  Retrieve a list of links connected to a specific asset. Links represent the
 *  data flow between **source** (upstream) and **target** (downstream) assets
 *  in transformation pipelines. Links are stored in the same project as the
 *  Lineage Events that create them. You can retrieve links in every project
 *  where you have the `datalineage.events.get` permission. The project provided
 *  in the URL is used for Billing and Quota.
 *
 *  Method: datalineage.projects.locations.searchLinks
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDatalineageCloudPlatform
 */
@interface GTLRDatalineageQuery_ProjectsLocationsSearchLinks : GTLRDatalineageQuery

/** Required. The project and location you want search in. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDatalineage_GoogleCloudDatacatalogLineageV1SearchLinksResponse.
 *
 *  Retrieve a list of links connected to a specific asset. Links represent the
 *  data flow between **source** (upstream) and **target** (downstream) assets
 *  in transformation pipelines. Links are stored in the same project as the
 *  Lineage Events that create them. You can retrieve links in every project
 *  where you have the `datalineage.events.get` permission. The project provided
 *  in the URL is used for Billing and Quota.
 *
 *  @param object The @c
 *    GTLRDatalineage_GoogleCloudDatacatalogLineageV1SearchLinksRequest to
 *    include in the query.
 *  @param parent Required. The project and location you want search in.
 *
 *  @return GTLRDatalineageQuery_ProjectsLocationsSearchLinks
 */
+ (instancetype)queryWithObject:(GTLRDatalineage_GoogleCloudDatacatalogLineageV1SearchLinksRequest *)object
                         parent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
