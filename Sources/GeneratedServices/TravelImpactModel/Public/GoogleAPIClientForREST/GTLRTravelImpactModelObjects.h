// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Travel Impact Model API (travelimpactmodel/v1)
// Description:
//   Travel Impact Model API lets you query travel carbon emission estimates.
// Documentation:
//   https://developers.google.com/travel/impact-model

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRTravelImpactModel_Date;
@class GTLRTravelImpactModel_EmissionsGramsPerPax;
@class GTLRTravelImpactModel_Flight;
@class GTLRTravelImpactModel_FlightWithEmissions;
@class GTLRTravelImpactModel_ModelVersion;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Input definition for the ComputeFlightEmissions request.
 */
@interface GTLRTravelImpactModel_ComputeFlightEmissionsRequest : GTLRObject

/** Required. Direct flights to return emission estimates for. */
@property(nonatomic, strong, nullable) NSArray<GTLRTravelImpactModel_Flight *> *flights;

@end


/**
 *  Output definition for the ComputeFlightEmissions response.
 */
@interface GTLRTravelImpactModel_ComputeFlightEmissionsResponse : GTLRObject

/** List of flight legs with emission estimates. */
@property(nonatomic, strong, nullable) NSArray<GTLRTravelImpactModel_FlightWithEmissions *> *flightEmissions;

/**
 *  The model version under which emission estimates for all flights in this
 *  response were computed.
 */
@property(nonatomic, strong, nullable) GTLRTravelImpactModel_ModelVersion *modelVersion;

@end


/**
 *  Represents a whole or partial calendar date, such as a birthday. The time of
 *  day and time zone are either specified elsewhere or are insignificant. The
 *  date is relative to the Gregorian Calendar. This can represent one of the
 *  following: * A full date, with non-zero year, month, and day values. * A
 *  month and day, with a zero year (for example, an anniversary). * A year on
 *  its own, with a zero month and a zero day. * A year and month, with a zero
 *  day (for example, a credit card expiration date). Related types: *
 *  google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
 */
@interface GTLRTravelImpactModel_Date : GTLRObject

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end


/**
 *  Grouped emissions per seating class results.
 */
@interface GTLRTravelImpactModel_EmissionsGramsPerPax : GTLRObject

/**
 *  Emissions for one passenger in business class in grams. This field is always
 *  computed and populated, regardless of whether the aircraft has business
 *  class seats or not.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *business;

/**
 *  Emissions for one passenger in economy class in grams. This field is always
 *  computed and populated, regardless of whether the aircraft has economy class
 *  seats or not.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *economy;

/**
 *  Emissions for one passenger in first class in grams. This field is always
 *  computed and populated, regardless of whether the aircraft has first class
 *  seats or not.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *first;

/**
 *  Emissions for one passenger in premium economy class in grams. This field is
 *  always computed and populated, regardless of whether the aircraft has
 *  premium economy class seats or not.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *premiumEconomy;

@end


/**
 *  All details related to a single request item for a direct flight emission
 *  estimates.
 */
@interface GTLRTravelImpactModel_Flight : GTLRObject

/**
 *  Required. Date of the flight in the time zone of the origin airport. Must be
 *  a date in the present or future.
 */
@property(nonatomic, strong, nullable) GTLRTravelImpactModel_Date *departureDate;

/** Required. IATA airport code for flight destination, e.g. "JFK". */
@property(nonatomic, copy, nullable) NSString *destination;

/**
 *  Required. Flight number, e.g. 324.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *flightNumber;

/** Required. IATA carrier code, e.g. "AA". */
@property(nonatomic, copy, nullable) NSString *operatingCarrierCode;

/** Required. IATA airport code for flight origin, e.g. "LHR". */
@property(nonatomic, copy, nullable) NSString *origin;

@end


/**
 *  Direct flight with emission estimates.
 */
@interface GTLRTravelImpactModel_FlightWithEmissions : GTLRObject

/**
 *  Optional. Per-passenger emission estimate numbers. Will not be present if
 *  emissions could not be computed. For the list of reasons why emissions could
 *  not be computed, see ComputeFlightEmissions.
 */
@property(nonatomic, strong, nullable) GTLRTravelImpactModel_EmissionsGramsPerPax *emissionsGramsPerPax;

/**
 *  Required. Matches the flight identifiers in the request. Note: all IATA
 *  codes are capitalized.
 */
@property(nonatomic, strong, nullable) GTLRTravelImpactModel_Flight *flight;

@end


/**
 *  Travel Impact Model version. For more information about the model versioning
 *  see https://github.com/google/travel-impact-model/#versioning.
 */
@interface GTLRTravelImpactModel_ModelVersion : GTLRObject

/**
 *  Dated versions: Model datasets are recreated with refreshed input data but
 *  no change to the algorithms regularly.
 */
@property(nonatomic, copy, nullable) NSString *dated;

/**
 *  Major versions: Major changes to methodology (e.g. adding new data sources
 *  to the model that lead to major output changes). Such changes will be
 *  infrequent and announced well in advance. Might involve API version changes,
 *  which will respect guidelines in
 *  https://cloud.google.com/endpoints/docs/openapi/versioning-an-api#backwards-incompatible
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *major;

/**
 *  Minor versions: Changes to the model that, while being consistent across
 *  schema versions, change the model parameters or implementation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minor;

/**
 *  Patch versions: Implementation changes meant to address bugs or inaccuracies
 *  in the model implementation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *patch;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
