// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Travel Impact Model API (travelimpactmodel/v1)
// Description:
//   Travel Impact Model API lets you query travel carbon emission estimates.
// Documentation:
//   https://developers.google.com/travel/impact-model

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRTravelImpactModelObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Travel Impact Model query classes.
 */
@interface GTLRTravelImpactModelQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Stateless method to retrieve emission estimates. Details on how emission
 *  estimates are computed are in
 *  [GitHub](https://github.com/google/travel-impact-model) The response will
 *  contain all entries that match the input flight legs, in the same order. If
 *  there are no estimates available for a certain flight leg, the response will
 *  return the flight leg object with empty emission fields. The request will
 *  still be considered successful. Reasons for missing emission estimates
 *  include: * The flight is unknown to the server. * The input flight leg is
 *  missing one or more identifiers. * The flight date is in the past. * The
 *  aircraft type is not supported by the model. * Missing seat configuration.
 *  The request can contain up to 1000 flight legs. If the request has more than
 *  1000 direct flights, if will fail with an INVALID_ARGUMENT error.
 *
 *  Method: travelimpactmodel.flights.computeFlightEmissions
 */
@interface GTLRTravelImpactModelQuery_FlightsComputeFlightEmissions : GTLRTravelImpactModelQuery

/**
 *  Fetches a @c GTLRTravelImpactModel_ComputeFlightEmissionsResponse.
 *
 *  Stateless method to retrieve emission estimates. Details on how emission
 *  estimates are computed are in
 *  [GitHub](https://github.com/google/travel-impact-model) The response will
 *  contain all entries that match the input flight legs, in the same order. If
 *  there are no estimates available for a certain flight leg, the response will
 *  return the flight leg object with empty emission fields. The request will
 *  still be considered successful. Reasons for missing emission estimates
 *  include: * The flight is unknown to the server. * The input flight leg is
 *  missing one or more identifiers. * The flight date is in the past. * The
 *  aircraft type is not supported by the model. * Missing seat configuration.
 *  The request can contain up to 1000 flight legs. If the request has more than
 *  1000 direct flights, if will fail with an INVALID_ARGUMENT error.
 *
 *  @param object The @c GTLRTravelImpactModel_ComputeFlightEmissionsRequest to
 *    include in the query.
 *
 *  @return GTLRTravelImpactModelQuery_FlightsComputeFlightEmissions
 */
+ (instancetype)queryWithObject:(GTLRTravelImpactModel_ComputeFlightEmissionsRequest *)object;

@end

/**
 *  Retrieves typical flight emissions estimates between two airports, also
 *  known as a market. If there are no estimates available for a certain market,
 *  the response will return the market object with empty emission fields. The
 *  request will still be considered successful. Details on how the typical
 *  emissions estimates are computed are on
 *  [GitHub](https://github.com/google/travel-impact-model/blob/main/projects/typical_flight_emissions.md).
 *  The request can contain up to 1000 markets. If the request has more than
 *  1000 markets, it will fail with an INVALID_ARGUMENT error.
 *
 *  Method: travelimpactmodel.flights.computeTypicalFlightEmissions
 */
@interface GTLRTravelImpactModelQuery_FlightsComputeTypicalFlightEmissions : GTLRTravelImpactModelQuery

/**
 *  Fetches a @c GTLRTravelImpactModel_ComputeTypicalFlightEmissionsResponse.
 *
 *  Retrieves typical flight emissions estimates between two airports, also
 *  known as a market. If there are no estimates available for a certain market,
 *  the response will return the market object with empty emission fields. The
 *  request will still be considered successful. Details on how the typical
 *  emissions estimates are computed are on
 *  [GitHub](https://github.com/google/travel-impact-model/blob/main/projects/typical_flight_emissions.md).
 *  The request can contain up to 1000 markets. If the request has more than
 *  1000 markets, it will fail with an INVALID_ARGUMENT error.
 *
 *  @param object The @c
 *    GTLRTravelImpactModel_ComputeTypicalFlightEmissionsRequest to include in
 *    the query.
 *
 *  @return GTLRTravelImpactModelQuery_FlightsComputeTypicalFlightEmissions
 */
+ (instancetype)queryWithObject:(GTLRTravelImpactModel_ComputeTypicalFlightEmissionsRequest *)object;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
