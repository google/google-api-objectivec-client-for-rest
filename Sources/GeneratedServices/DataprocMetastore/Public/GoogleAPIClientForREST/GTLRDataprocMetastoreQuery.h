// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Dataproc Metastore API (metastore/v2)
// Description:
//   The Dataproc Metastore API is used to manage the lifecycle and
//   configuration of metastore services.
// Documentation:
//   https://cloud.google.com/dataproc-metastore/docs

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRDataprocMetastoreObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Dataproc Metastore query classes.
 */
@interface GTLRDataprocMetastoreQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Alter metadata resource location. The metadata resource can be a database,
 *  table, or partition. This functionality only updates the parent directory
 *  for the respective metadata resource and does not transfer any existing data
 *  to the new location.
 *
 *  Method: metastore.projects.locations.services.alterLocation
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesAlterLocation : GTLRDataprocMetastoreQuery

/**
 *  Required. The relative resource name of the metastore service to mutate
 *  metadata, in the following
 *  format:projects/{project_id}/locations/{location_id}/services/{service_id}.
 */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  Fetches a @c GTLRDataprocMetastore_GoogleLongrunningOperation.
 *
 *  Alter metadata resource location. The metadata resource can be a database,
 *  table, or partition. This functionality only updates the parent directory
 *  for the respective metadata resource and does not transfer any existing data
 *  to the new location.
 *
 *  @param object The @c
 *    GTLRDataprocMetastore_GoogleCloudMetastoreV2AlterMetadataResourceLocationRequest
 *    to include in the query.
 *  @param service Required. The relative resource name of the metastore service
 *    to mutate metadata, in the following
 *    format:projects/{project_id}/locations/{location_id}/services/{service_id}.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesAlterLocation
 */
+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2AlterMetadataResourceLocationRequest *)object
                        service:(NSString *)service;

@end

/**
 *  Alter metadata table properties.
 *
 *  Method: metastore.projects.locations.services.alterTableProperties
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesAlterTableProperties : GTLRDataprocMetastoreQuery

/**
 *  Required. The relative resource name of the Dataproc Metastore service
 *  that's being used to mutate metadata table properties, in the following
 *  format:projects/{project_id}/locations/{location_id}/services/{service_id}.
 */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  Fetches a @c GTLRDataprocMetastore_GoogleLongrunningOperation.
 *
 *  Alter metadata table properties.
 *
 *  @param object The @c
 *    GTLRDataprocMetastore_GoogleCloudMetastoreV2AlterTablePropertiesRequest to
 *    include in the query.
 *  @param service Required. The relative resource name of the Dataproc
 *    Metastore service that's being used to mutate metadata table properties,
 *    in the following
 *    format:projects/{project_id}/locations/{location_id}/services/{service_id}.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesAlterTableProperties
 */
+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2AlterTablePropertiesRequest *)object
                        service:(NSString *)service;

@end

/**
 *  Creates a new backup in a given project and location.
 *
 *  Method: metastore.projects.locations.services.backups.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsCreate : GTLRDataprocMetastoreQuery

/**
 *  Required. The ID of the backup, which is used as the final component of the
 *  backup's name.This value must be between 1 and 64 characters long, begin
 *  with a letter, end with a letter or number, and consist of alpha-numeric
 *  ASCII characters or hyphens.
 */
@property(nonatomic, copy, nullable) NSString *backupId;

/**
 *  Required. The relative resource name of the service in which to create a
 *  backup of the following
 *  form:projects/{project_number}/locations/{location_id}/services/{service_id}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A request ID. Specify a unique request ID to allow the server to
 *  ignore the request if it has completed. The server will ignore subsequent
 *  requests that provide a duplicate request ID for at least 60 minutes after
 *  the first request.For example, if an initial request times out, followed by
 *  another request with the same request ID, the server ignores the second
 *  request to prevent the creation of duplicate commitments.The request ID must
 *  be a valid UUID
 *  (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero
 *  UUID (00000000-0000-0000-0000-000000000000) is not supported.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRDataprocMetastore_GoogleLongrunningOperation.
 *
 *  Creates a new backup in a given project and location.
 *
 *  @param object The @c GTLRDataprocMetastore_GoogleCloudMetastoreV2Backup to
 *    include in the query.
 *  @param parent Required. The relative resource name of the service in which
 *    to create a backup of the following
 *    form:projects/{project_number}/locations/{location_id}/services/{service_id}.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2Backup *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single backup.
 *
 *  Method: metastore.projects.locations.services.backups.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsDelete : GTLRDataprocMetastoreQuery

/**
 *  Required. The relative resource name of the backup to delete, in the
 *  following
 *  form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID. Specify a unique request ID to allow the server to
 *  ignore the request if it has completed. The server will ignore subsequent
 *  requests that provide a duplicate request ID for at least 60 minutes after
 *  the first request.For example, if an initial request times out, followed by
 *  another request with the same request ID, the server ignores the second
 *  request to prevent the creation of duplicate commitments.The request ID must
 *  be a valid UUID
 *  (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero
 *  UUID (00000000-0000-0000-0000-000000000000) is not supported.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRDataprocMetastore_GoogleLongrunningOperation.
 *
 *  Deletes a single backup.
 *
 *  @param name Required. The relative resource name of the backup to delete, in
 *    the following
 *    form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single backup.
 *
 *  Method: metastore.projects.locations.services.backups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsGet : GTLRDataprocMetastoreQuery

/**
 *  Required. The relative resource name of the backup to retrieve, in the
 *  following
 *  form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataprocMetastore_GoogleCloudMetastoreV2Backup.
 *
 *  Gets details of a single backup.
 *
 *  @param name Required. The relative resource name of the backup to retrieve,
 *    in the following
 *    form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists backups in a service.
 *
 *  Method: metastore.projects.locations.services.backups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsList : GTLRDataprocMetastoreQuery

/** Optional. The filter to apply to list results. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Specify the ordering of results as described in Sorting Order
 *  (https://cloud.google.com/apis/design/design_patterns#sorting_order). If not
 *  specified, the results will be sorted in the default order.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of backups to return. The response may contain
 *  less than the maximum number. If unspecified, no more than 500 backups are
 *  returned. The maximum value is 1000; values above 1000 are changed to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous
 *  DataprocMetastore.ListBackups call. Provide this token to retrieve the
 *  subsequent page.To retrieve the first page, supply an empty page token.When
 *  paginating, other parameters provided to DataprocMetastore.ListBackups must
 *  match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The relative resource name of the service whose backups to list,
 *  in the following
 *  form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataprocMetastore_GoogleCloudMetastoreV2ListBackupsResponse.
 *
 *  Lists backups in a service.
 *
 *  @param parent Required. The relative resource name of the service whose
 *    backups to list, in the following
 *    form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a metastore service in a project and location.
 *
 *  Method: metastore.projects.locations.services.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesCreate : GTLRDataprocMetastoreQuery

/**
 *  Required. The relative resource name of the location in which to create a
 *  metastore service, in the following
 *  form:projects/{project_number}/locations/{location_id}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A request ID. Specify a unique request ID to allow the server to
 *  ignore the request if it has completed. The server will ignore subsequent
 *  requests that provide a duplicate request ID for at least 60 minutes after
 *  the first request.For example, if an initial request times out, followed by
 *  another request with the same request ID, the server ignores the second
 *  request to prevent the creation of duplicate commitments.The request ID must
 *  be a valid UUID
 *  (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero
 *  UUID (00000000-0000-0000-0000-000000000000) is not supported.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. The ID of the metastore service, which is used as the final
 *  component of the metastore service's name.This value must be between 2 and
 *  63 characters long inclusive, begin with a letter, end with a letter or
 *  number, and consist of alpha-numeric ASCII characters or hyphens.
 */
@property(nonatomic, copy, nullable) NSString *serviceId;

/**
 *  Fetches a @c GTLRDataprocMetastore_GoogleLongrunningOperation.
 *
 *  Creates a metastore service in a project and location.
 *
 *  @param object The @c GTLRDataprocMetastore_GoogleCloudMetastoreV2Service to
 *    include in the query.
 *  @param parent Required. The relative resource name of the location in which
 *    to create a metastore service, in the following
 *    form:projects/{project_number}/locations/{location_id}.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesCreate
 */
+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2Service *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single service.
 *
 *  Method: metastore.projects.locations.services.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesDelete : GTLRDataprocMetastoreQuery

/**
 *  Required. The relative resource name of the metastore service to delete, in
 *  the following
 *  form:projects/{project_number}/locations/{location_id}/services/{service_id}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID. Specify a unique request ID to allow the server to
 *  ignore the request if it has completed. The server will ignore subsequent
 *  requests that provide a duplicate request ID for at least 60 minutes after
 *  the first request.For example, if an initial request times out, followed by
 *  another request with the same request ID, the server ignores the second
 *  request to prevent the creation of duplicate commitments.The request ID must
 *  be a valid UUID
 *  (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero
 *  UUID (00000000-0000-0000-0000-000000000000) is not supported.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRDataprocMetastore_GoogleLongrunningOperation.
 *
 *  Deletes a single service.
 *
 *  @param name Required. The relative resource name of the metastore service to
 *    delete, in the following
 *    form:projects/{project_number}/locations/{location_id}/services/{service_id}.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Exports metadata from a service.
 *
 *  Method: metastore.projects.locations.services.exportMetadata
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesExportMetadata : GTLRDataprocMetastoreQuery

/**
 *  Required. The relative resource name of the metastore service to run export,
 *  in the following
 *  form:projects/{project_id}/locations/{location_id}/services/{service_id}.
 */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  Fetches a @c GTLRDataprocMetastore_GoogleLongrunningOperation.
 *
 *  Exports metadata from a service.
 *
 *  @param object The @c
 *    GTLRDataprocMetastore_GoogleCloudMetastoreV2ExportMetadataRequest to
 *    include in the query.
 *  @param service Required. The relative resource name of the metastore service
 *    to run export, in the following
 *    form:projects/{project_id}/locations/{location_id}/services/{service_id}.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesExportMetadata
 */
+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2ExportMetadataRequest *)object
                        service:(NSString *)service;

@end

/**
 *  Gets the details of a single service.
 *
 *  Method: metastore.projects.locations.services.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesGet : GTLRDataprocMetastoreQuery

/**
 *  Required. The relative resource name of the metastore service to retrieve,
 *  in the following
 *  form:projects/{project_number}/locations/{location_id}/services/{service_id}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataprocMetastore_GoogleCloudMetastoreV2Service.
 *
 *  Gets the details of a single service.
 *
 *  @param name Required. The relative resource name of the metastore service to
 *    retrieve, in the following
 *    form:projects/{project_number}/locations/{location_id}/services/{service_id}.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Imports Metadata into a Dataproc Metastore service.
 *
 *  Method: metastore.projects.locations.services.importMetadata
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesImportMetadata : GTLRDataprocMetastoreQuery

/**
 *  Immutable. The relative resource name of the metastore service to run
 *  import, in the following
 *  form:projects/{project_id}/locations/{location_id}/services/{service_id}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataprocMetastore_GoogleLongrunningOperation.
 *
 *  Imports Metadata into a Dataproc Metastore service.
 *
 *  @param object The @c
 *    GTLRDataprocMetastore_GoogleCloudMetastoreV2ImportMetadataRequest to
 *    include in the query.
 *  @param name Immutable. The relative resource name of the metastore service
 *    to run import, in the following
 *    form:projects/{project_id}/locations/{location_id}/services/{service_id}.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesImportMetadata
 */
+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2ImportMetadataRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists services in a project and location.
 *
 *  Method: metastore.projects.locations.services.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesList : GTLRDataprocMetastoreQuery

/** Optional. The filter to apply to list results. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Specify the ordering of results as described in Sorting Order
 *  (https://cloud.google.com/apis/design/design_patterns#sorting_order). If not
 *  specified, the results will be sorted in the default order.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of services to return. The response may contain
 *  less than the maximum number. If unspecified, no more than 500 services are
 *  returned. The maximum value is 1000; values above 1000 are changed to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous
 *  DataprocMetastore.ListServices call. Provide this token to retrieve the
 *  subsequent page.To retrieve the first page, supply an empty page token.When
 *  paginating, other parameters provided to DataprocMetastore.ListServices must
 *  match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The relative resource name of the location of metastore services
 *  to list, in the following
 *  form:projects/{project_number}/locations/{location_id}.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataprocMetastore_GoogleCloudMetastoreV2ListServicesResponse.
 *
 *  Lists services in a project and location.
 *
 *  @param parent Required. The relative resource name of the location of
 *    metastore services to list, in the following
 *    form:projects/{project_number}/locations/{location_id}.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Move a table to another database.
 *
 *  Method: metastore.projects.locations.services.moveTableToDatabase
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesMoveTableToDatabase : GTLRDataprocMetastoreQuery

/**
 *  Required. The relative resource name of the metastore service to mutate
 *  metadata, in the following
 *  format:projects/{project_id}/locations/{location_id}/services/{service_id}.
 */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  Fetches a @c GTLRDataprocMetastore_GoogleLongrunningOperation.
 *
 *  Move a table to another database.
 *
 *  @param object The @c
 *    GTLRDataprocMetastore_GoogleCloudMetastoreV2MoveTableToDatabaseRequest to
 *    include in the query.
 *  @param service Required. The relative resource name of the metastore service
 *    to mutate metadata, in the following
 *    format:projects/{project_id}/locations/{location_id}/services/{service_id}.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesMoveTableToDatabase
 */
+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2MoveTableToDatabaseRequest *)object
                        service:(NSString *)service;

@end

/**
 *  Updates the parameters of a single service.
 *
 *  Method: metastore.projects.locations.services.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesPatch : GTLRDataprocMetastoreQuery

/**
 *  Immutable. The relative resource name of the metastore service, in the
 *  following
 *  format:projects/{project_number}/locations/{location_id}/services/{service_id}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. A request ID. Specify a unique request ID to allow the server to
 *  ignore the request if it has completed. The server will ignore subsequent
 *  requests that provide a duplicate request ID for at least 60 minutes after
 *  the first request.For example, if an initial request times out, followed by
 *  another request with the same request ID, the server ignores the second
 *  request to prevent the creation of duplicate commitments.The request ID must
 *  be a valid UUID
 *  (https://en.wikipedia.org/wiki/Universally_unique_identifier#Format) A zero
 *  UUID (00000000-0000-0000-0000-000000000000) is not supported.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. A field mask used to specify the fields to be overwritten in the
 *  metastore service resource by the update. Fields specified in the
 *  update_mask are relative to the resource (not to the full request). A field
 *  is overwritten if it is in the mask.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataprocMetastore_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single service.
 *
 *  @param object The @c GTLRDataprocMetastore_GoogleCloudMetastoreV2Service to
 *    include in the query.
 *  @param name Immutable. The relative resource name of the metastore service,
 *    in the following
 *    format:projects/{project_number}/locations/{location_id}/services/{service_id}.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesPatch
 */
+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2Service *)object
                           name:(NSString *)name;

@end

/**
 *  Query Dataproc Metastore metadata.
 *
 *  Method: metastore.projects.locations.services.queryMetadata
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesQueryMetadata : GTLRDataprocMetastoreQuery

/**
 *  Required. The relative resource name of the metastore service to query
 *  metadata, in the following
 *  format:projects/{project_id}/locations/{location_id}/services/{service_id}.
 */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  Fetches a @c GTLRDataprocMetastore_GoogleLongrunningOperation.
 *
 *  Query Dataproc Metastore metadata.
 *
 *  @param object The @c
 *    GTLRDataprocMetastore_GoogleCloudMetastoreV2QueryMetadataRequest to
 *    include in the query.
 *  @param service Required. The relative resource name of the metastore service
 *    to query metadata, in the following
 *    format:projects/{project_id}/locations/{location_id}/services/{service_id}.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesQueryMetadata
 */
+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2QueryMetadataRequest *)object
                        service:(NSString *)service;

@end

/**
 *  Restores a service from a backup.
 *
 *  Method: metastore.projects.locations.services.restore
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataprocMetastoreCloudPlatform
 */
@interface GTLRDataprocMetastoreQuery_ProjectsLocationsServicesRestore : GTLRDataprocMetastoreQuery

/**
 *  Required. The relative resource name of the metastore service to run
 *  restore, in the following
 *  form:projects/{project_id}/locations/{location_id}/services/{service_id}.
 */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  Fetches a @c GTLRDataprocMetastore_GoogleLongrunningOperation.
 *
 *  Restores a service from a backup.
 *
 *  @param object The @c
 *    GTLRDataprocMetastore_GoogleCloudMetastoreV2RestoreServiceRequest to
 *    include in the query.
 *  @param service Required. The relative resource name of the metastore service
 *    to run restore, in the following
 *    form:projects/{project_id}/locations/{location_id}/services/{service_id}.
 *
 *  @return GTLRDataprocMetastoreQuery_ProjectsLocationsServicesRestore
 */
+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2RestoreServiceRequest *)object
                        service:(NSString *)service;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
