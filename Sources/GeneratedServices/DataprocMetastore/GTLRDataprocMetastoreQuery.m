// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Dataproc Metastore API (metastore/v2)
// Description:
//   The Dataproc Metastore API is used to manage the lifecycle and
//   configuration of metastore services.
// Documentation:
//   https://cloud.google.com/dataproc-metastore/docs

#import <GoogleAPIClientForREST/GTLRDataprocMetastoreQuery.h>

@implementation GTLRDataprocMetastoreQuery

@dynamic fields;

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesAlterLocation

@dynamic service;

+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2AlterMetadataResourceLocationRequest *)object
                        service:(NSString *)service {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"service" ];
  NSString *pathURITemplate = @"v2/{+service}:alterLocation";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesAlterLocation *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.service = service;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleLongrunningOperation class];
  query.loggingName = @"metastore.projects.locations.services.alterLocation";
  return query;
}

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesAlterTableProperties

@dynamic service;

+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2AlterTablePropertiesRequest *)object
                        service:(NSString *)service {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"service" ];
  NSString *pathURITemplate = @"v2/{+service}:alterTableProperties";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesAlterTableProperties *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.service = service;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleLongrunningOperation class];
  query.loggingName = @"metastore.projects.locations.services.alterTableProperties";
  return query;
}

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsCreate

@dynamic backupId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2Backup *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/backups";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleLongrunningOperation class];
  query.loggingName = @"metastore.projects.locations.services.backups.create";
  return query;
}

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleLongrunningOperation class];
  query.loggingName = @"metastore.projects.locations.services.backups.delete";
  return query;
}

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleCloudMetastoreV2Backup class];
  query.loggingName = @"metastore.projects.locations.services.backups.get";
  return query;
}

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/backups";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesBackupsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleCloudMetastoreV2ListBackupsResponse class];
  query.loggingName = @"metastore.projects.locations.services.backups.list";
  return query;
}

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesCreate

@dynamic parent, requestId, serviceId;

+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2Service *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/services";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleLongrunningOperation class];
  query.loggingName = @"metastore.projects.locations.services.create";
  return query;
}

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleLongrunningOperation class];
  query.loggingName = @"metastore.projects.locations.services.delete";
  return query;
}

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesExportMetadata

@dynamic service;

+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2ExportMetadataRequest *)object
                        service:(NSString *)service {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"service" ];
  NSString *pathURITemplate = @"v2/{+service}:exportMetadata";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesExportMetadata *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.service = service;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleLongrunningOperation class];
  query.loggingName = @"metastore.projects.locations.services.exportMetadata";
  return query;
}

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleCloudMetastoreV2Service class];
  query.loggingName = @"metastore.projects.locations.services.get";
  return query;
}

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesImportMetadata

@dynamic name;

+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2ImportMetadataRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:importMetadata";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesImportMetadata *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleLongrunningOperation class];
  query.loggingName = @"metastore.projects.locations.services.importMetadata";
  return query;
}

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/services";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleCloudMetastoreV2ListServicesResponse class];
  query.loggingName = @"metastore.projects.locations.services.list";
  return query;
}

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesMoveTableToDatabase

@dynamic service;

+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2MoveTableToDatabaseRequest *)object
                        service:(NSString *)service {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"service" ];
  NSString *pathURITemplate = @"v2/{+service}:moveTableToDatabase";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesMoveTableToDatabase *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.service = service;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleLongrunningOperation class];
  query.loggingName = @"metastore.projects.locations.services.moveTableToDatabase";
  return query;
}

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesPatch

@dynamic name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2Service *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleLongrunningOperation class];
  query.loggingName = @"metastore.projects.locations.services.patch";
  return query;
}

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesQueryMetadata

@dynamic service;

+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2QueryMetadataRequest *)object
                        service:(NSString *)service {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"service" ];
  NSString *pathURITemplate = @"v2/{+service}:queryMetadata";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesQueryMetadata *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.service = service;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleLongrunningOperation class];
  query.loggingName = @"metastore.projects.locations.services.queryMetadata";
  return query;
}

@end

@implementation GTLRDataprocMetastoreQuery_ProjectsLocationsServicesRestore

@dynamic service;

+ (instancetype)queryWithObject:(GTLRDataprocMetastore_GoogleCloudMetastoreV2RestoreServiceRequest *)object
                        service:(NSString *)service {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"service" ];
  NSString *pathURITemplate = @"v2/{+service}:restore";
  GTLRDataprocMetastoreQuery_ProjectsLocationsServicesRestore *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.service = service;
  query.expectedObjectClass = [GTLRDataprocMetastore_GoogleLongrunningOperation class];
  query.loggingName = @"metastore.projects.locations.services.restore";
  return query;
}

@end
