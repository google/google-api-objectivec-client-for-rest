// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Cloud Data Catalog API (datacatalog/v1)
// Description:
//   A fully managed and highly scalable data discovery and metadata management
//   service.
// Documentation:
//   https://cloud.google.com/data-catalog/docs/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRDataCatalogObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Data Catalog query classes.
 */
@interface GTLRDataCatalogQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Searches Data Catalog for multiple resources like entries and tags that
 *  match a query. This is a [Custom Method]
 *  (https://cloud.google.com/apis/design/custom_methods) that doesn't return
 *  all information on a resource, only its ID and high level fields. To get
 *  more information, you can subsequently call specific get methods. Note: Data
 *  Catalog search queries don't guarantee full recall. Results that match your
 *  query might not be returned, even in subsequent result pages. Additionally,
 *  returned (and not returned) results can vary if you repeat search queries.
 *  For more information, see [Data Catalog search syntax]
 *  (https://cloud.google.com/data-catalog/docs/how-to/search-reference).
 *
 *  Method: datacatalog.catalog.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_CatalogSearch : GTLRDataCatalogQuery

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResponse.
 *
 *  Searches Data Catalog for multiple resources like entries and tags that
 *  match a query. This is a [Custom Method]
 *  (https://cloud.google.com/apis/design/custom_methods) that doesn't return
 *  all information on a resource, only its ID and high level fields. To get
 *  more information, you can subsequently call specific get methods. Note: Data
 *  Catalog search queries don't guarantee full recall. Results that match your
 *  query might not be returned, even in subsequent result pages. Additionally,
 *  returned (and not returned) results can vary if you repeat search queries.
 *  For more information, see [Data Catalog search syntax]
 *  (https://cloud.google.com/data-catalog/docs/how-to/search-reference).
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogRequest to include in
 *    the query.
 *
 *  @return GTLRDataCatalogQuery_CatalogSearch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogRequest *)object;

@end

/**
 *  Gets an entry by its target resource name. The resource name comes from the
 *  source Google Cloud Platform service.
 *
 *  Method: datacatalog.entries.lookup
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_EntriesLookup : GTLRDataCatalogQuery

/**
 *  Fully qualified name (FQN) of the resource. FQNs take two forms: * For
 *  non-regionalized resources:
 *  `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For
 *  regionalized resources:
 *  `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}`
 *  Example for a DPMS table:
 *  `dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}`
 */
@property(nonatomic, copy, nullable) NSString *fullyQualifiedName;

/**
 *  The full name of the Google Cloud Platform resource the Data Catalog entry
 *  represents. For more information, see [Full Resource Name]
 *  (https://cloud.google.com/apis/design/resource_names#full_resource_name).
 *  Full names are case-sensitive. For example: *
 *  `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}`
 *  * `//pubsub.googleapis.com/projects/{PROJECT_ID}/topics/{TOPIC_ID}`
 */
@property(nonatomic, copy, nullable) NSString *linkedResource;

/**
 *  The SQL name of the entry. SQL names are case-sensitive. Examples: *
 *  `pubsub.topic.{PROJECT_ID}.{TOPIC_ID}` *
 *  `pubsub.topic.{PROJECT_ID}.`\\``{TOPIC.ID.SEPARATED.WITH.DOTS}`\\` *
 *  `bigquery.table.{PROJECT_ID}.{DATASET_ID}.{TABLE_ID}` *
 *  `bigquery.dataset.{PROJECT_ID}.{DATASET_ID}` *
 *  `datacatalog.entry.{PROJECT_ID}.{LOCATION_ID}.{ENTRY_GROUP_ID}.{ENTRY_ID}`
 *  Identifiers (`*_ID`) should comply with the [Lexical structure in Standard
 *  SQL]
 *  (https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical).
 */
@property(nonatomic, copy, nullable) NSString *sqlResource;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1Entry.
 *
 *  Gets an entry by its target resource name. The resource name comes from the
 *  source Google Cloud Platform service.
 *
 *  @return GTLRDataCatalogQuery_EntriesLookup
 */
+ (instancetype)query;

@end

/**
 *  Creates an entry group. An entry group contains logically related entries
 *  together with [Cloud Identity and Access
 *  Management](/data-catalog/docs/concepts/iam) policies. These policies
 *  specify users who can create, edit, and view entries within entry groups.
 *  Data Catalog automatically creates entry groups with names that start with
 *  the `\@` symbol for the following resources: * BigQuery entries
 *  (`\@bigquery`) * Pub/Sub topics (`\@pubsub`) * Dataproc Metastore services
 *  (`\@dataproc_metastore_{SERVICE_NAME_HASH}`) You can create your own entry
 *  groups for Cloud Storage fileset entries and custom entries together with
 *  the corresponding IAM policies. User-created entry groups can't contain the
 *  `\@` symbol, it is reserved for automatically created groups. Entry groups,
 *  like entries, can be searched. A maximum of 10,000 entry groups may be
 *  created per organization across all locations. You must enable the Data
 *  Catalog API in the project identified by the `parent` parameter. For more
 *  information, see [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  Method: datacatalog.projects.locations.entryGroups.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsCreate : GTLRDataCatalogQuery

/**
 *  Required. The ID of the entry group to create. The ID must contain only
 *  letters (a-z, A-Z), numbers (0-9), underscores (_), and must start with a
 *  letter or underscore. The maximum size is 64 bytes when encoded in UTF-8.
 */
@property(nonatomic, copy, nullable) NSString *entryGroupId;

/**
 *  Required. The names of the project and location that the new entry group
 *  belongs to. Note: The entry group itself and its child resources might not
 *  be stored in the location specified in its name.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1EntryGroup.
 *
 *  Creates an entry group. An entry group contains logically related entries
 *  together with [Cloud Identity and Access
 *  Management](/data-catalog/docs/concepts/iam) policies. These policies
 *  specify users who can create, edit, and view entries within entry groups.
 *  Data Catalog automatically creates entry groups with names that start with
 *  the `\@` symbol for the following resources: * BigQuery entries
 *  (`\@bigquery`) * Pub/Sub topics (`\@pubsub`) * Dataproc Metastore services
 *  (`\@dataproc_metastore_{SERVICE_NAME_HASH}`) You can create your own entry
 *  groups for Cloud Storage fileset entries and custom entries together with
 *  the corresponding IAM policies. User-created entry groups can't contain the
 *  `\@` symbol, it is reserved for automatically created groups. Entry groups,
 *  like entries, can be searched. A maximum of 10,000 entry groups may be
 *  created per organization across all locations. You must enable the Data
 *  Catalog API in the project identified by the `parent` parameter. For more
 *  information, see [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1EntryGroup to
 *    include in the query.
 *  @param parent Required. The names of the project and location that the new
 *    entry group belongs to. Note: The entry group itself and its child
 *    resources might not be stored in the location specified in its name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1EntryGroup *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an entry group. You must enable the Data Catalog API in the project
 *  identified by the `name` parameter. For more information, see [Data Catalog
 *  resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  Method: datacatalog.projects.locations.entryGroups.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsDelete : GTLRDataCatalogQuery

/** Optional. If true, deletes all entries in the entry group. */
@property(nonatomic, assign) BOOL force;

/** Required. The name of the entry group to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes an entry group. You must enable the Data Catalog API in the project
 *  identified by the `name` parameter. For more information, see [Data Catalog
 *  resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  @param name Required. The name of the entry group to delete.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates an entry. You can create entries only with 'FILESET', 'CLUSTER',
 *  'DATA_STREAM', or custom types. Data Catalog automatically creates entries
 *  with other types during metadata ingestion from integrated systems. You must
 *  enable the Data Catalog API in the project identified by the `parent`
 *  parameter. For more information, see [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *  An entry group can have a maximum of 100,000 entries.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesCreate : GTLRDataCatalogQuery

/**
 *  Required. The ID of the entry to create. The ID must contain only letters
 *  (a-z, A-Z), numbers (0-9), and underscores (_). The maximum size is 64 bytes
 *  when encoded in UTF-8.
 */
@property(nonatomic, copy, nullable) NSString *entryId;

/**
 *  Required. The name of the entry group this entry belongs to. Note: The entry
 *  itself and its child resources might not be stored in the location specified
 *  in its name.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1Entry.
 *
 *  Creates an entry. You can create entries only with 'FILESET', 'CLUSTER',
 *  'DATA_STREAM', or custom types. Data Catalog automatically creates entries
 *  with other types during metadata ingestion from integrated systems. You must
 *  enable the Data Catalog API in the project identified by the `parent`
 *  parameter. For more information, see [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *  An entry group can have a maximum of 100,000 entries.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1Entry to
 *    include in the query.
 *  @param parent Required. The name of the entry group this entry belongs to.
 *    Note: The entry itself and its child resources might not be stored in the
 *    location specified in its name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1Entry *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an existing entry. You can delete only the entries created by the
 *  CreateEntry method. You must enable the Data Catalog API in the project
 *  identified by the `name` parameter. For more information, see [Data Catalog
 *  resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesDelete : GTLRDataCatalogQuery

/** Required. The name of the entry to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes an existing entry. You can delete only the entries created by the
 *  CreateEntry method. You must enable the Data Catalog API in the project
 *  identified by the `name` parameter. For more information, see [Data Catalog
 *  resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  @param name Required. The name of the entry to delete.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an entry.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesGet : GTLRDataCatalogQuery

/** Required. The name of the entry to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1Entry.
 *
 *  Gets an entry.
 *
 *  @param name Required. The name of the entry to get.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. May return: * A`NOT_FOUND`
 *  error if the resource doesn't exist or you don't have the permission to view
 *  it. * An empty policy if the resource exists but doesn't have a set policy.
 *  Supported resources are: - Tag templates - Entry groups Note: This method
 *  doesn't get policies from Google Cloud Platform resources ingested into Data
 *  Catalog. To call this method, you must have the following Google IAM
 *  permissions: - `datacatalog.tagTemplates.getIamPolicy` to get policies on
 *  tag templates. - `datacatalog.entryGroups.getIamPolicy` to get policies on
 *  entry groups.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesGetIamPolicy : GTLRDataCatalogQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Gets the access control policy for a resource. May return: * A`NOT_FOUND`
 *  error if the resource doesn't exist or you don't have the permission to view
 *  it. * An empty policy if the resource exists but doesn't have a set policy.
 *  Supported resources are: - Tag templates - Entry groups Note: This method
 *  doesn't get policies from Google Cloud Platform resources ingested into Data
 *  Catalog. To call this method, you must have the following Google IAM
 *  permissions: - `datacatalog.tagTemplates.getIamPolicy` to get policies on
 *  tag templates. - `datacatalog.entryGroups.getIamPolicy` to get policies on
 *  entry groups.
 *
 *  @param object The @c GTLRDataCatalog_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists entries. Note: Currently, this method can list only custom entries. To
 *  get a list of both custom and automatically created entries, use
 *  SearchCatalog.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesList : GTLRDataCatalogQuery

/**
 *  The maximum number of items to return. Default is 10. Maximum limit is 1000.
 *  Throws an invalid argument if `page_size` is more than 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Pagination token that specifies the next page to return. If empty, the first
 *  page is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the entry group that contains the entries to list. Can
 *  be provided in URL format.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The fields to return for each entry. If empty or omitted, all fields are
 *  returned. For example, to return a list of entries with only the `name`
 *  field, set `read_mask` to only one path with the `name` value.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1ListEntriesResponse.
 *
 *  Lists entries. Note: Currently, this method can list only custom entries. To
 *  get a list of both custom and automatically created entries, use
 *  SearchCatalog.
 *
 *  @param parent Required. The name of the entry group that contains the
 *    entries to list. Can be provided in URL format.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Modifies contacts, part of the business context of an Entry. To call this
 *  method, you must have the `datacatalog.entries.updateContacts` IAM
 *  permission on the corresponding project.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.modifyEntryContacts
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesModifyEntryContacts : GTLRDataCatalogQuery

/** Required. The full resource name of the entry. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1Contacts.
 *
 *  Modifies contacts, part of the business context of an Entry. To call this
 *  method, you must have the `datacatalog.entries.updateContacts` IAM
 *  permission on the corresponding project.
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1ModifyEntryContactsRequest to
 *    include in the query.
 *  @param name Required. The full resource name of the entry.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesModifyEntryContacts
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1ModifyEntryContactsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Modifies entry overview, part of the business context of an Entry. To call
 *  this method, you must have the `datacatalog.entries.updateOverview` IAM
 *  permission on the corresponding project.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.modifyEntryOverview
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesModifyEntryOverview : GTLRDataCatalogQuery

/** Required. The full resource name of the entry. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1EntryOverview.
 *
 *  Modifies entry overview, part of the business context of an Entry. To call
 *  this method, you must have the `datacatalog.entries.updateOverview` IAM
 *  permission on the corresponding project.
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1ModifyEntryOverviewRequest to
 *    include in the query.
 *  @param name Required. The full resource name of the entry.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesModifyEntryOverview
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1ModifyEntryOverviewRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates an existing entry. You must enable the Data Catalog API in the
 *  project identified by the `entry.name` parameter. For more information, see
 *  [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesPatch : GTLRDataCatalogQuery

/**
 *  Output only. The resource name of an entry in URL format. Note: The entry
 *  itself and its child resources might not be stored in the location specified
 *  in its name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Names of fields whose values to overwrite on an entry. If this parameter is
 *  absent or empty, all modifiable fields are overwritten. If such fields are
 *  non-required and omitted in the request body, their values are emptied. You
 *  can modify only the fields listed below. For entries with type
 *  `DATA_STREAM`: * `schema` For entries with type `FILESET`: * `schema` *
 *  `display_name` * `description` * `gcs_fileset_spec` *
 *  `gcs_fileset_spec.file_patterns` For entries with `user_specified_type`: *
 *  `schema` * `display_name` * `description` * `user_specified_type` *
 *  `user_specified_system` * `linked_resource` * `source_system_timestamps`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1Entry.
 *
 *  Updates an existing entry. You must enable the Data Catalog API in the
 *  project identified by the `entry.name` parameter. For more information, see
 *  [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1Entry to
 *    include in the query.
 *  @param name Output only. The resource name of an entry in URL format. Note:
 *    The entry itself and its child resources might not be stored in the
 *    location specified in its name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1Entry *)object
                           name:(NSString *)name;

@end

/**
 *  Marks an Entry as starred by the current user. Starring information is
 *  private to each user.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.star
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesStar : GTLRDataCatalogQuery

/** Required. The name of the entry to mark as starred. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1StarEntryResponse.
 *
 *  Marks an Entry as starred by the current user. Starring information is
 *  private to each user.
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1StarEntryRequest to include in the
 *    query.
 *  @param name Required. The name of the entry to mark as starred.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesStar
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1StarEntryRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a tag and assigns it to: * An Entry if the method name is
 *  `projects.locations.entryGroups.entries.tags.create`. * Or EntryGroupif the
 *  method name is `projects.locations.entryGroups.tags.create`. Note: The
 *  project identified by the `parent` parameter for the [tag]
 *  (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries.tags/create#path-parameters)
 *  and the [tag template]
 *  (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.tagTemplates/create#path-parameters)
 *  used to create the tag must be in the same organization.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.tags.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsCreate : GTLRDataCatalogQuery

/**
 *  Required. The name of the resource to attach this tag to. Tags can be
 *  attached to entries or entry groups. An entry can have up to 1000 attached
 *  tags. Note: The tag and its child resources might not be stored in the
 *  location specified in its name.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1Tag.
 *
 *  Creates a tag and assigns it to: * An Entry if the method name is
 *  `projects.locations.entryGroups.entries.tags.create`. * Or EntryGroupif the
 *  method name is `projects.locations.entryGroups.tags.create`. Note: The
 *  project identified by the `parent` parameter for the [tag]
 *  (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries.tags/create#path-parameters)
 *  and the [tag template]
 *  (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.tagTemplates/create#path-parameters)
 *  used to create the tag must be in the same organization.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1Tag to include
 *    in the query.
 *  @param parent Required. The name of the resource to attach this tag to. Tags
 *    can be attached to entries or entry groups. An entry can have up to 1000
 *    attached tags. Note: The tag and its child resources might not be stored
 *    in the location specified in its name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1Tag *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a tag.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.tags.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsDelete : GTLRDataCatalogQuery

/** Required. The name of the tag to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes a tag.
 *
 *  @param name Required. The name of the tag to delete.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists tags assigned to an Entry. The columns in the response are lowercased.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.tags.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsList : GTLRDataCatalogQuery

/**
 *  The maximum number of tags to return. Default is 10. Maximum limit is 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Pagination token that specifies the next page to return. If empty, the first
 *  page is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the Data Catalog resource to list the tags of. The
 *  resource can be an Entry or an EntryGroup (without `/entries/{entries}` at
 *  the end).
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1ListTagsResponse.
 *
 *  Lists tags assigned to an Entry. The columns in the response are lowercased.
 *
 *  @param parent Required. The name of the Data Catalog resource to list the
 *    tags of. The resource can be an Entry or an EntryGroup (without
 *    `/entries/{entries}` at the end).
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing tag.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.tags.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsPatch : GTLRDataCatalogQuery

/**
 *  The resource name of the tag in URL format where tag ID is a
 *  system-generated identifier. Note: The tag itself might not be stored in the
 *  location specified in its name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Names of fields whose values to overwrite on a tag. Currently, a tag has the
 *  only modifiable field with the name `fields`. In general, if this parameter
 *  is absent or empty, all modifiable fields are overwritten. If such fields
 *  are non-required and omitted in the request body, their values are emptied.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1Tag.
 *
 *  Updates an existing tag.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1Tag to include
 *    in the query.
 *  @param name The resource name of the tag in URL format where tag ID is a
 *    system-generated identifier. Note: The tag itself might not be stored in
 *    the location specified in its name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTagsPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1Tag *)object
                           name:(NSString *)name;

@end

/**
 *  Gets your permissions on a resource. Returns an empty set of permissions if
 *  the resource doesn't exist. Supported resources are: - Tag templates - Entry
 *  groups Note: This method gets policies only within Data Catalog and can't be
 *  used to get policies from BigQuery, Pub/Sub, Dataproc Metastore, and any
 *  external Google Cloud Platform resources ingested into Data Catalog. No
 *  Google IAM permissions are required to call this method.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTestIamPermissions : GTLRDataCatalogQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_TestIamPermissionsResponse.
 *
 *  Gets your permissions on a resource. Returns an empty set of permissions if
 *  the resource doesn't exist. Supported resources are: - Tag templates - Entry
 *  groups Note: This method gets policies only within Data Catalog and can't be
 *  used to get policies from BigQuery, Pub/Sub, Dataproc Metastore, and any
 *  external Google Cloud Platform resources ingested into Data Catalog. No
 *  Google IAM permissions are required to call this method.
 *
 *  @param object The @c GTLRDataCatalog_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Marks an Entry as NOT starred by the current user. Starring information is
 *  private to each user.
 *
 *  Method: datacatalog.projects.locations.entryGroups.entries.unstar
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesUnstar : GTLRDataCatalogQuery

/** Required. The name of the entry to mark as **not** starred. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1UnstarEntryResponse.
 *
 *  Marks an Entry as NOT starred by the current user. Starring information is
 *  private to each user.
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1UnstarEntryRequest to include in
 *    the query.
 *  @param name Required. The name of the entry to mark as **not** starred.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsEntriesUnstar
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1UnstarEntryRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets an entry group.
 *
 *  Method: datacatalog.projects.locations.entryGroups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsGet : GTLRDataCatalogQuery

/** Required. The name of the entry group to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The fields to return. If empty or omitted, all fields are returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1EntryGroup.
 *
 *  Gets an entry group.
 *
 *  @param name Required. The name of the entry group to get.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. May return: * A`NOT_FOUND`
 *  error if the resource doesn't exist or you don't have the permission to view
 *  it. * An empty policy if the resource exists but doesn't have a set policy.
 *  Supported resources are: - Tag templates - Entry groups Note: This method
 *  doesn't get policies from Google Cloud Platform resources ingested into Data
 *  Catalog. To call this method, you must have the following Google IAM
 *  permissions: - `datacatalog.tagTemplates.getIamPolicy` to get policies on
 *  tag templates. - `datacatalog.entryGroups.getIamPolicy` to get policies on
 *  entry groups.
 *
 *  Method: datacatalog.projects.locations.entryGroups.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsGetIamPolicy : GTLRDataCatalogQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Gets the access control policy for a resource. May return: * A`NOT_FOUND`
 *  error if the resource doesn't exist or you don't have the permission to view
 *  it. * An empty policy if the resource exists but doesn't have a set policy.
 *  Supported resources are: - Tag templates - Entry groups Note: This method
 *  doesn't get policies from Google Cloud Platform resources ingested into Data
 *  Catalog. To call this method, you must have the following Google IAM
 *  permissions: - `datacatalog.tagTemplates.getIamPolicy` to get policies on
 *  tag templates. - `datacatalog.entryGroups.getIamPolicy` to get policies on
 *  entry groups.
 *
 *  @param object The @c GTLRDataCatalog_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists entry groups.
 *
 *  Method: datacatalog.projects.locations.entryGroups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsList : GTLRDataCatalogQuery

/**
 *  Optional. The maximum number of items to return. Default is 10. Maximum
 *  limit is 1000. Throws an invalid argument if `page_size` is greater than
 *  1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Pagination token that specifies the next page to return. If empty,
 *  returns the first page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the location that contains the entry groups to list.
 *  Can be provided as a URL.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1ListEntryGroupsResponse.
 *
 *  Lists entry groups.
 *
 *  @param parent Required. The name of the location that contains the entry
 *    groups to list. Can be provided as a URL.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an entry group. You must enable the Data Catalog API in the project
 *  identified by the `entry_group.name` parameter. For more information, see
 *  [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  Method: datacatalog.projects.locations.entryGroups.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsPatch : GTLRDataCatalogQuery

/**
 *  The resource name of the entry group in URL format. Note: The entry group
 *  itself and its child resources might not be stored in the location specified
 *  in its name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Names of fields whose values to overwrite on an entry group. If this
 *  parameter is absent or empty, all modifiable fields are overwritten. If such
 *  fields are non-required and omitted in the request body, their values are
 *  emptied.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1EntryGroup.
 *
 *  Updates an entry group. You must enable the Data Catalog API in the project
 *  identified by the `entry_group.name` parameter. For more information, see
 *  [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1EntryGroup to
 *    include in the query.
 *  @param name The resource name of the entry group in URL format. Note: The
 *    entry group itself and its child resources might not be stored in the
 *    location specified in its name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1EntryGroup *)object
                           name:(NSString *)name;

@end

/**
 *  Sets an access control policy for a resource. Replaces any existing policy.
 *  Supported resources are: - Tag templates - Entry groups Note: This method
 *  sets policies only within Data Catalog and can't be used to manage policies
 *  in BigQuery, Pub/Sub, Dataproc Metastore, and any external Google Cloud
 *  Platform resources synced with the Data Catalog. To call this method, you
 *  must have the following Google IAM permissions: -
 *  `datacatalog.tagTemplates.setIamPolicy` to set policies on tag templates. -
 *  `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
 *
 *  Method: datacatalog.projects.locations.entryGroups.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsSetIamPolicy : GTLRDataCatalogQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Sets an access control policy for a resource. Replaces any existing policy.
 *  Supported resources are: - Tag templates - Entry groups Note: This method
 *  sets policies only within Data Catalog and can't be used to manage policies
 *  in BigQuery, Pub/Sub, Dataproc Metastore, and any external Google Cloud
 *  Platform resources synced with the Data Catalog. To call this method, you
 *  must have the following Google IAM permissions: -
 *  `datacatalog.tagTemplates.setIamPolicy` to set policies on tag templates. -
 *  `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
 *
 *  @param object The @c GTLRDataCatalog_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a tag and assigns it to: * An Entry if the method name is
 *  `projects.locations.entryGroups.entries.tags.create`. * Or EntryGroupif the
 *  method name is `projects.locations.entryGroups.tags.create`. Note: The
 *  project identified by the `parent` parameter for the [tag]
 *  (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries.tags/create#path-parameters)
 *  and the [tag template]
 *  (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.tagTemplates/create#path-parameters)
 *  used to create the tag must be in the same organization.
 *
 *  Method: datacatalog.projects.locations.entryGroups.tags.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsCreate : GTLRDataCatalogQuery

/**
 *  Required. The name of the resource to attach this tag to. Tags can be
 *  attached to entries or entry groups. An entry can have up to 1000 attached
 *  tags. Note: The tag and its child resources might not be stored in the
 *  location specified in its name.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1Tag.
 *
 *  Creates a tag and assigns it to: * An Entry if the method name is
 *  `projects.locations.entryGroups.entries.tags.create`. * Or EntryGroupif the
 *  method name is `projects.locations.entryGroups.tags.create`. Note: The
 *  project identified by the `parent` parameter for the [tag]
 *  (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.entryGroups.entries.tags/create#path-parameters)
 *  and the [tag template]
 *  (https://cloud.google.com/data-catalog/docs/reference/rest/v1/projects.locations.tagTemplates/create#path-parameters)
 *  used to create the tag must be in the same organization.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1Tag to include
 *    in the query.
 *  @param parent Required. The name of the resource to attach this tag to. Tags
 *    can be attached to entries or entry groups. An entry can have up to 1000
 *    attached tags. Note: The tag and its child resources might not be stored
 *    in the location specified in its name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1Tag *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a tag.
 *
 *  Method: datacatalog.projects.locations.entryGroups.tags.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsDelete : GTLRDataCatalogQuery

/** Required. The name of the tag to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes a tag.
 *
 *  @param name Required. The name of the tag to delete.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists tags assigned to an Entry. The columns in the response are lowercased.
 *
 *  Method: datacatalog.projects.locations.entryGroups.tags.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsList : GTLRDataCatalogQuery

/**
 *  The maximum number of tags to return. Default is 10. Maximum limit is 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Pagination token that specifies the next page to return. If empty, the first
 *  page is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the Data Catalog resource to list the tags of. The
 *  resource can be an Entry or an EntryGroup (without `/entries/{entries}` at
 *  the end).
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1ListTagsResponse.
 *
 *  Lists tags assigned to an Entry. The columns in the response are lowercased.
 *
 *  @param parent Required. The name of the Data Catalog resource to list the
 *    tags of. The resource can be an Entry or an EntryGroup (without
 *    `/entries/{entries}` at the end).
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing tag.
 *
 *  Method: datacatalog.projects.locations.entryGroups.tags.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsPatch : GTLRDataCatalogQuery

/**
 *  The resource name of the tag in URL format where tag ID is a
 *  system-generated identifier. Note: The tag itself might not be stored in the
 *  location specified in its name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Names of fields whose values to overwrite on a tag. Currently, a tag has the
 *  only modifiable field with the name `fields`. In general, if this parameter
 *  is absent or empty, all modifiable fields are overwritten. If such fields
 *  are non-required and omitted in the request body, their values are emptied.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1Tag.
 *
 *  Updates an existing tag.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1Tag to include
 *    in the query.
 *  @param name The resource name of the tag in URL format where tag ID is a
 *    system-generated identifier. Note: The tag itself might not be stored in
 *    the location specified in its name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTagsPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1Tag *)object
                           name:(NSString *)name;

@end

/**
 *  Gets your permissions on a resource. Returns an empty set of permissions if
 *  the resource doesn't exist. Supported resources are: - Tag templates - Entry
 *  groups Note: This method gets policies only within Data Catalog and can't be
 *  used to get policies from BigQuery, Pub/Sub, Dataproc Metastore, and any
 *  external Google Cloud Platform resources ingested into Data Catalog. No
 *  Google IAM permissions are required to call this method.
 *
 *  Method: datacatalog.projects.locations.entryGroups.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTestIamPermissions : GTLRDataCatalogQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_TestIamPermissionsResponse.
 *
 *  Gets your permissions on a resource. Returns an empty set of permissions if
 *  the resource doesn't exist. Supported resources are: - Tag templates - Entry
 *  groups Note: This method gets policies only within Data Catalog and can't be
 *  used to get policies from BigQuery, Pub/Sub, Dataproc Metastore, and any
 *  external Google Cloud Platform resources ingested into Data Catalog. No
 *  Google IAM permissions are required to call this method.
 *
 *  @param object The @c GTLRDataCatalog_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsEntryGroupsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a tag template. You must enable the Data Catalog API in the project
 *  identified by the `parent` parameter. For more information, see [Data
 *  Catalog resource project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  Method: datacatalog.projects.locations.tagTemplates.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesCreate : GTLRDataCatalogQuery

/**
 *  Required. The name of the project and the template location
 *  [region](https://cloud.google.com/data-catalog/docs/concepts/regions).
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID of the tag template to create. The ID must contain only
 *  lowercase letters (a-z), numbers (0-9), or underscores (_), and must start
 *  with a letter or underscore. The maximum size is 64 bytes when encoded in
 *  UTF-8.
 */
@property(nonatomic, copy, nullable) NSString *tagTemplateId;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplate.
 *
 *  Creates a tag template. You must enable the Data Catalog API in the project
 *  identified by the `parent` parameter. For more information, see [Data
 *  Catalog resource project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplate to
 *    include in the query.
 *  @param parent Required. The name of the project and the template location
 *    [region](https://cloud.google.com/data-catalog/docs/concepts/regions).
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplate *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a tag template and all tags that use it. You must enable the Data
 *  Catalog API in the project identified by the `name` parameter. For more
 *  information, see [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  Method: datacatalog.projects.locations.tagTemplates.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesDelete : GTLRDataCatalogQuery

/**
 *  Required. If true, deletes all tags that use this template. Currently,
 *  `true` is the only supported value.
 */
@property(nonatomic, assign) BOOL force;

/** Required. The name of the tag template to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes a tag template and all tags that use it. You must enable the Data
 *  Catalog API in the project identified by the `name` parameter. For more
 *  information, see [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  @param name Required. The name of the tag template to delete.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a field in a tag template. You must enable the Data Catalog API in
 *  the project identified by the `parent` parameter. For more information, see
 *  [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  Method: datacatalog.projects.locations.tagTemplates.fields.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsCreate : GTLRDataCatalogQuery

/**
 *  Required. The name of the project and the template location
 *  [region](https://cloud.google.com/data-catalog/docs/concepts/regions).
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID of the tag template field to create. Note: Adding a
 *  required field to an existing template is *not* allowed. Field IDs can
 *  contain letters (both uppercase and lowercase), numbers (0-9), underscores
 *  (_) and dashes (-). Field IDs must be at least 1 character long and at most
 *  128 characters long. Field IDs must also be unique within their template.
 */
@property(nonatomic, copy, nullable) NSString *tagTemplateFieldId;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplateField.
 *
 *  Creates a field in a tag template. You must enable the Data Catalog API in
 *  the project identified by the `parent` parameter. For more information, see
 *  [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplateField to include in the
 *    query.
 *  @param parent Required. The name of the project and the template location
 *    [region](https://cloud.google.com/data-catalog/docs/concepts/regions).
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplateField *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a field in a tag template and all uses of this field from the tags
 *  based on this template. You must enable the Data Catalog API in the project
 *  identified by the `name` parameter. For more information, see [Data Catalog
 *  resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  Method: datacatalog.projects.locations.tagTemplates.fields.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsDelete : GTLRDataCatalogQuery

/**
 *  Required. If true, deletes this field from any tags that use it. Currently,
 *  `true` is the only supported value.
 */
@property(nonatomic, assign) BOOL force;

/** Required. The name of the tag template field to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes a field in a tag template and all uses of this field from the tags
 *  based on this template. You must enable the Data Catalog API in the project
 *  identified by the `name` parameter. For more information, see [Data Catalog
 *  resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  @param name Required. The name of the tag template field to delete.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Renames an enum value in a tag template. Within a single enum field, enum
 *  values must be unique.
 *
 *  Method: datacatalog.projects.locations.tagTemplates.fields.enumValues.rename
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsEnumValuesRename : GTLRDataCatalogQuery

/** Required. The name of the enum field value. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplateField.
 *
 *  Renames an enum value in a tag template. Within a single enum field, enum
 *  values must be unique.
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1RenameTagTemplateFieldEnumValueRequest
 *    to include in the query.
 *  @param name Required. The name of the enum field value.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsEnumValuesRename
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1RenameTagTemplateFieldEnumValueRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Updates a field in a tag template. You can't update the field type with this
 *  method. You must enable the Data Catalog API in the project identified by
 *  the `name` parameter. For more information, see [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  Method: datacatalog.projects.locations.tagTemplates.fields.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsPatch : GTLRDataCatalogQuery

/** Required. The name of the tag template field. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Names of fields whose values to overwrite on an individual field
 *  of a tag template. The following fields are modifiable: * `display_name` *
 *  `type.enum_type` * `is_required` If this parameter is absent or empty, all
 *  modifiable fields are overwritten. If such fields are non-required and
 *  omitted in the request body, their values are emptied with one exception:
 *  when updating an enum type, the provided values are merged with the existing
 *  values. Therefore, enum values can only be added, existing enum values
 *  cannot be deleted or renamed. Additionally, updating a template field from
 *  optional to required is *not* allowed.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplateField.
 *
 *  Updates a field in a tag template. You can't update the field type with this
 *  method. You must enable the Data Catalog API in the project identified by
 *  the `name` parameter. For more information, see [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplateField to include in the
 *    query.
 *  @param name Required. The name of the tag template field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplateField *)object
                           name:(NSString *)name;

@end

/**
 *  Renames a field in a tag template. You must enable the Data Catalog API in
 *  the project identified by the `name` parameter. For more information, see
 *  [Data Catalog resource project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  Method: datacatalog.projects.locations.tagTemplates.fields.rename
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsRename : GTLRDataCatalogQuery

/** Required. The name of the tag template field. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplateField.
 *
 *  Renames a field in a tag template. You must enable the Data Catalog API in
 *  the project identified by the `name` parameter. For more information, see
 *  [Data Catalog resource project]
 *  (https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1RenameTagTemplateFieldRequest to
 *    include in the query.
 *  @param name Required. The name of the tag template field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesFieldsRename
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1RenameTagTemplateFieldRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets a tag template.
 *
 *  Method: datacatalog.projects.locations.tagTemplates.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesGet : GTLRDataCatalogQuery

/** Required. The name of the tag template to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplate.
 *
 *  Gets a tag template.
 *
 *  @param name Required. The name of the tag template to get.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. May return: * A`NOT_FOUND`
 *  error if the resource doesn't exist or you don't have the permission to view
 *  it. * An empty policy if the resource exists but doesn't have a set policy.
 *  Supported resources are: - Tag templates - Entry groups Note: This method
 *  doesn't get policies from Google Cloud Platform resources ingested into Data
 *  Catalog. To call this method, you must have the following Google IAM
 *  permissions: - `datacatalog.tagTemplates.getIamPolicy` to get policies on
 *  tag templates. - `datacatalog.entryGroups.getIamPolicy` to get policies on
 *  entry groups.
 *
 *  Method: datacatalog.projects.locations.tagTemplates.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesGetIamPolicy : GTLRDataCatalogQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Gets the access control policy for a resource. May return: * A`NOT_FOUND`
 *  error if the resource doesn't exist or you don't have the permission to view
 *  it. * An empty policy if the resource exists but doesn't have a set policy.
 *  Supported resources are: - Tag templates - Entry groups Note: This method
 *  doesn't get policies from Google Cloud Platform resources ingested into Data
 *  Catalog. To call this method, you must have the following Google IAM
 *  permissions: - `datacatalog.tagTemplates.getIamPolicy` to get policies on
 *  tag templates. - `datacatalog.entryGroups.getIamPolicy` to get policies on
 *  entry groups.
 *
 *  @param object The @c GTLRDataCatalog_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Updates a tag template. You can't update template fields with this method.
 *  These fields are separate resources with their own create, update, and
 *  delete methods. You must enable the Data Catalog API in the project
 *  identified by the `tag_template.name` parameter. For more information, see
 *  [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  Method: datacatalog.projects.locations.tagTemplates.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesPatch : GTLRDataCatalogQuery

/**
 *  The resource name of the tag template in URL format. Note: The tag template
 *  itself and its child resources might not be stored in the location specified
 *  in its name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Names of fields whose values to overwrite on a tag template. Currently, only
 *  `display_name` and `is_publicly_readable` can be overwritten. If this
 *  parameter is absent or empty, all modifiable fields are overwritten. If such
 *  fields are non-required and omitted in the request body, their values are
 *  emptied. Note: Updating the `is_publicly_readable` field may require up to
 *  12 hours to take effect in search results.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplate.
 *
 *  Updates a tag template. You can't update template fields with this method.
 *  These fields are separate resources with their own create, update, and
 *  delete methods. You must enable the Data Catalog API in the project
 *  identified by the `tag_template.name` parameter. For more information, see
 *  [Data Catalog resource
 *  project](https://cloud.google.com/data-catalog/docs/concepts/resource-project).
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplate to
 *    include in the query.
 *  @param name The resource name of the tag template in URL format. Note: The
 *    tag template itself and its child resources might not be stored in the
 *    location specified in its name.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplate *)object
                           name:(NSString *)name;

@end

/**
 *  Sets an access control policy for a resource. Replaces any existing policy.
 *  Supported resources are: - Tag templates - Entry groups Note: This method
 *  sets policies only within Data Catalog and can't be used to manage policies
 *  in BigQuery, Pub/Sub, Dataproc Metastore, and any external Google Cloud
 *  Platform resources synced with the Data Catalog. To call this method, you
 *  must have the following Google IAM permissions: -
 *  `datacatalog.tagTemplates.setIamPolicy` to set policies on tag templates. -
 *  `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
 *
 *  Method: datacatalog.projects.locations.tagTemplates.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesSetIamPolicy : GTLRDataCatalogQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Sets an access control policy for a resource. Replaces any existing policy.
 *  Supported resources are: - Tag templates - Entry groups Note: This method
 *  sets policies only within Data Catalog and can't be used to manage policies
 *  in BigQuery, Pub/Sub, Dataproc Metastore, and any external Google Cloud
 *  Platform resources synced with the Data Catalog. To call this method, you
 *  must have the following Google IAM permissions: -
 *  `datacatalog.tagTemplates.setIamPolicy` to set policies on tag templates. -
 *  `datacatalog.entryGroups.setIamPolicy` to set policies on entry groups.
 *
 *  @param object The @c GTLRDataCatalog_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets your permissions on a resource. Returns an empty set of permissions if
 *  the resource doesn't exist. Supported resources are: - Tag templates - Entry
 *  groups Note: This method gets policies only within Data Catalog and can't be
 *  used to get policies from BigQuery, Pub/Sub, Dataproc Metastore, and any
 *  external Google Cloud Platform resources ingested into Data Catalog. No
 *  Google IAM permissions are required to call this method.
 *
 *  Method: datacatalog.projects.locations.tagTemplates.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesTestIamPermissions : GTLRDataCatalogQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_TestIamPermissionsResponse.
 *
 *  Gets your permissions on a resource. Returns an empty set of permissions if
 *  the resource doesn't exist. Supported resources are: - Tag templates - Entry
 *  groups Note: This method gets policies only within Data Catalog and can't be
 *  used to get policies from BigQuery, Pub/Sub, Dataproc Metastore, and any
 *  external Google Cloud Platform resources ingested into Data Catalog. No
 *  Google IAM permissions are required to call this method.
 *
 *  @param object The @c GTLRDataCatalog_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTagTemplatesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a taxonomy in a specified project. The taxonomy is initially empty,
 *  that is, it doesn't contain policy tags.
 *
 *  Method: datacatalog.projects.locations.taxonomies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesCreate : GTLRDataCatalogQuery

/**
 *  Required. Resource name of the project that the taxonomy will belong to.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1Taxonomy.
 *
 *  Creates a taxonomy in a specified project. The taxonomy is initially empty,
 *  that is, it doesn't contain policy tags.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1Taxonomy to
 *    include in the query.
 *  @param parent Required. Resource name of the project that the taxonomy will
 *    belong to.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1Taxonomy *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a taxonomy, including all policy tags in this taxonomy, their
 *  associated policies, and the policy tags references from BigQuery columns.
 *
 *  Method: datacatalog.projects.locations.taxonomies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesDelete : GTLRDataCatalogQuery

/**
 *  Required. Resource name of the taxonomy to delete. Note: All policy tags in
 *  this taxonomy are also deleted.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes a taxonomy, including all policy tags in this taxonomy, their
 *  associated policies, and the policy tags references from BigQuery columns.
 *
 *  @param name Required. Resource name of the taxonomy to delete. Note: All
 *    policy tags in this taxonomy are also deleted.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Exports taxonomies in the requested type and returns them, including their
 *  policy tags. The requested taxonomies must belong to the same project. This
 *  method generates `SerializedTaxonomy` protocol buffers with nested policy
 *  tags that can be used as input for `ImportTaxonomies` calls.
 *
 *  Method: datacatalog.projects.locations.taxonomies.export
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesExport : GTLRDataCatalogQuery

/**
 *  Required. Resource name of the project that the exported taxonomies belong
 *  to.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Serialized export taxonomies that contain all the policy tags as nested
 *  protocol buffers.
 */
@property(nonatomic, assign) BOOL serializedTaxonomies;

/** Required. Resource names of the taxonomies to export. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *taxonomies;

/**
 *  Fetches a @c
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1ExportTaxonomiesResponse.
 *
 *  Exports taxonomies in the requested type and returns them, including their
 *  policy tags. The requested taxonomies must belong to the same project. This
 *  method generates `SerializedTaxonomy` protocol buffers with nested policy
 *  tags that can be used as input for `ImportTaxonomies` calls.
 *
 *  @param parent Required. Resource name of the project that the exported
 *    taxonomies belong to.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesExport
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a taxonomy.
 *
 *  Method: datacatalog.projects.locations.taxonomies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesGet : GTLRDataCatalogQuery

/** Required. Resource name of the taxonomy to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1Taxonomy.
 *
 *  Gets a taxonomy.
 *
 *  @param name Required. Resource name of the taxonomy to get.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the IAM policy for a policy tag or a taxonomy.
 *
 *  Method: datacatalog.projects.locations.taxonomies.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesGetIamPolicy : GTLRDataCatalogQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Gets the IAM policy for a policy tag or a taxonomy.
 *
 *  @param object The @c GTLRDataCatalog_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates new taxonomies (including their policy tags) in a given project by
 *  importing from inlined or cross-regional sources. For a cross-regional
 *  source, new taxonomies are created by copying from a source in another
 *  region. For an inlined source, taxonomies and policy tags are created in
 *  bulk using nested protocol buffer structures.
 *
 *  Method: datacatalog.projects.locations.taxonomies.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesImport : GTLRDataCatalogQuery

/**
 *  Required. Resource name of project that the imported taxonomies will belong
 *  to.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1ImportTaxonomiesResponse.
 *
 *  Creates new taxonomies (including their policy tags) in a given project by
 *  importing from inlined or cross-regional sources. For a cross-regional
 *  source, new taxonomies are created by copying from a source in another
 *  region. For an inlined source, taxonomies and policy tags are created in
 *  bulk using nested protocol buffer structures.
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1ImportTaxonomiesRequest to include
 *    in the query.
 *  @param parent Required. Resource name of project that the imported
 *    taxonomies will belong to.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesImport
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1ImportTaxonomiesRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists all taxonomies in a project in a particular location that you have a
 *  permission to view.
 *
 *  Method: datacatalog.projects.locations.taxonomies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesList : GTLRDataCatalogQuery

/**
 *  The maximum number of items to return. Must be a value between 1 and 1000
 *  inclusively. If not set, defaults to 50.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The pagination token of the next results page. If not set, the first page is
 *  returned. The token is returned in the response to a previous list request.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Resource name of the project to list the taxonomies of. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1ListTaxonomiesResponse.
 *
 *  Lists all taxonomies in a project in a particular location that you have a
 *  permission to view.
 *
 *  @param parent Required. Resource name of the project to list the taxonomies
 *    of.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a taxonomy, including its display name, description, and activated
 *  policy types.
 *
 *  Method: datacatalog.projects.locations.taxonomies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPatch : GTLRDataCatalogQuery

/**
 *  Output only. Resource name of this taxonomy in URL format. Note: Policy tag
 *  manager generates unique taxonomy IDs.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Specifies fields to update. If not set, defaults to all fields you can
 *  update. For more information, see [FieldMask]
 *  (https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1Taxonomy.
 *
 *  Updates a taxonomy, including its display name, description, and activated
 *  policy types.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1Taxonomy to
 *    include in the query.
 *  @param name Output only. Resource name of this taxonomy in URL format. Note:
 *    Policy tag manager generates unique taxonomy IDs.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1Taxonomy *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a policy tag in a taxonomy.
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsCreate : GTLRDataCatalogQuery

/**
 *  Required. Resource name of the taxonomy that the policy tag will belong to.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1PolicyTag.
 *
 *  Creates a policy tag in a taxonomy.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1PolicyTag to
 *    include in the query.
 *  @param parent Required. Resource name of the taxonomy that the policy tag
 *    will belong to.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1PolicyTag *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a policy tag together with the following: * All of its descendant
 *  policy tags, if any * Policies associated with the policy tag and its
 *  descendants * References from BigQuery table schema of the policy tag and
 *  its descendants
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsDelete : GTLRDataCatalogQuery

/**
 *  Required. Resource name of the policy tag to delete. Note: All of its
 *  descendant policy tags are also deleted.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_Empty.
 *
 *  Deletes a policy tag together with the following: * All of its descendant
 *  policy tags, if any * Policies associated with the policy tag and its
 *  descendants * References from BigQuery table schema of the policy tag and
 *  its descendants
 *
 *  @param name Required. Resource name of the policy tag to delete. Note: All
 *    of its descendant policy tags are also deleted.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a policy tag.
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsGet : GTLRDataCatalogQuery

/** Required. Resource name of the policy tag. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1PolicyTag.
 *
 *  Gets a policy tag.
 *
 *  @param name Required. Resource name of the policy tag.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the IAM policy for a policy tag or a taxonomy.
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsGetIamPolicy : GTLRDataCatalogQuery

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Gets the IAM policy for a policy tag or a taxonomy.
 *
 *  @param object The @c GTLRDataCatalog_GetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsGetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists all policy tags in a taxonomy.
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsList : GTLRDataCatalogQuery

/**
 *  The maximum number of items to return. Must be a value between 1 and 1000
 *  inclusively. If not set, defaults to 50.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The pagination token of the next results page. If not set, returns the first
 *  page. The token is returned in the response to a previous list request.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. Resource name of the taxonomy to list the policy tags of. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1ListPolicyTagsResponse.
 *
 *  Lists all policy tags in a taxonomy.
 *
 *  @param parent Required. Resource name of the taxonomy to list the policy
 *    tags of.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a policy tag, including its display name, description, and parent
 *  policy tag.
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsPatch : GTLRDataCatalogQuery

/**
 *  Output only. Resource name of this policy tag in the URL format. The policy
 *  tag manager generates unique taxonomy IDs and policy tag IDs.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Specifies the fields to update. You can update only display name,
 *  description, and parent policy tag. If not set, defaults to all updatable
 *  fields. For more information, see [FieldMask]
 *  (https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask).
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1PolicyTag.
 *
 *  Updates a policy tag, including its display name, description, and parent
 *  policy tag.
 *
 *  @param object The @c GTLRDataCatalog_GoogleCloudDatacatalogV1PolicyTag to
 *    include in the query.
 *  @param name Output only. Resource name of this policy tag in the URL format.
 *    The policy tag manager generates unique taxonomy IDs and policy tag IDs.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsPatch
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1PolicyTag *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the IAM policy for a policy tag or a taxonomy.
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsSetIamPolicy : GTLRDataCatalogQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Sets the IAM policy for a policy tag or a taxonomy.
 *
 *  @param object The @c GTLRDataCatalog_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns your permissions on a specified policy tag or taxonomy.
 *
 *  Method: datacatalog.projects.locations.taxonomies.policyTags.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsTestIamPermissions : GTLRDataCatalogQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_TestIamPermissionsResponse.
 *
 *  Returns your permissions on a specified policy tag or taxonomy.
 *
 *  @param object The @c GTLRDataCatalog_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesPolicyTagsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Replaces (updates) a taxonomy and all its policy tags. The taxonomy and its
 *  entire hierarchy of policy tags must be represented literally by
 *  `SerializedTaxonomy` and the nested `SerializedPolicyTag` messages. This
 *  operation automatically does the following: - Deletes the existing policy
 *  tags that are missing from the `SerializedPolicyTag`. - Creates policy tags
 *  that don't have resource names. They are considered new. - Updates policy
 *  tags with valid resources names accordingly.
 *
 *  Method: datacatalog.projects.locations.taxonomies.replace
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesReplace : GTLRDataCatalogQuery

/** Required. Resource name of the taxonomy to update. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataCatalog_GoogleCloudDatacatalogV1Taxonomy.
 *
 *  Replaces (updates) a taxonomy and all its policy tags. The taxonomy and its
 *  entire hierarchy of policy tags must be represented literally by
 *  `SerializedTaxonomy` and the nested `SerializedPolicyTag` messages. This
 *  operation automatically does the following: - Deletes the existing policy
 *  tags that are missing from the `SerializedPolicyTag`. - Creates policy tags
 *  that don't have resource names. They are considered new. - Updates policy
 *  tags with valid resources names accordingly.
 *
 *  @param object The @c
 *    GTLRDataCatalog_GoogleCloudDatacatalogV1ReplaceTaxonomyRequest to include
 *    in the query.
 *  @param name Required. Resource name of the taxonomy to update.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesReplace
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_GoogleCloudDatacatalogV1ReplaceTaxonomyRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the IAM policy for a policy tag or a taxonomy.
 *
 *  Method: datacatalog.projects.locations.taxonomies.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesSetIamPolicy : GTLRDataCatalogQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_Policy.
 *
 *  Sets the IAM policy for a policy tag or a taxonomy.
 *
 *  @param object The @c GTLRDataCatalog_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns your permissions on a specified policy tag or taxonomy.
 *
 *  Method: datacatalog.projects.locations.taxonomies.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataCatalogCloudPlatform
 */
@interface GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesTestIamPermissions : GTLRDataCatalogQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataCatalog_TestIamPermissionsResponse.
 *
 *  Returns your permissions on a specified policy tag or taxonomy.
 *
 *  @param object The @c GTLRDataCatalog_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataCatalogQuery_ProjectsLocationsTaxonomiesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRDataCatalog_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
