// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Cloud Data Catalog API (datacatalog/v1)
// Description:
//   A fully managed and highly scalable data discovery and metadata management
//   service.
// Documentation:
//   https://cloud.google.com/data-catalog/docs/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDataCatalog_Binding;
@class GTLRDataCatalog_Expr;
@class GTLRDataCatalog_GetPolicyOptions;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryConnectionSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryDateShardedSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryRoutineSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryTableSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1BusinessContext;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1ColumnSchema;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1Contacts;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1ContactsPerson;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1CrossRegionalSource;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1DatabaseTableSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1DataplexExternalTable;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1DataplexFilesetSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1DataplexSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1DataplexTableSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1DataSource;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1DataSourceConnectionSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1Entry;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Labels;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1EntryGroup;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1EntryOverview;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1FieldType;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1FieldTypeEnumType;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1FilesetSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1GcsFilesetSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1GcsFileSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1InlineSource;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1PersonalDetails;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchema;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaCsvSchema;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaOrcSchema;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaParquetSchema;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1PolicyTag;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpecArgument;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1Schema;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogRequestScope;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1SerializedPolicyTag;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1SerializedTaxonomy;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1StorageProperties;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1SystemTimestamps;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1TableSpec;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1Tag;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1Tag_Fields;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1TagField;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1TagFieldEnumValue;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplate_Fields;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplateField;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1Taxonomy;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1UsageSignal;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1UsageSignal_UsageWithinTimeRange;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1UsageStats;
@class GTLRDataCatalog_GoogleCloudDatacatalogV1ViewSpec;
@class GTLRDataCatalog_Policy;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryConnectionSpec.connectionType

/**
 *  Cloud SQL connection.
 *
 *  Value: "CLOUD_SQL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryConnectionSpec_ConnectionType_CloudSql;
/**
 *  Unspecified type.
 *
 *  Value: "CONNECTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryConnectionSpec_ConnectionType_ConnectionTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryTableSpec.tableSourceType

/**
 *  BigQuery materialized view.
 *
 *  Value: "BIGQUERY_MATERIALIZED_VIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryTableSpec_TableSourceType_BigqueryMaterializedView;
/**
 *  BigQuery native table.
 *
 *  Value: "BIGQUERY_TABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryTableSpec_TableSourceType_BigqueryTable;
/**
 *  Table view.
 *
 *  Value: "BIGQUERY_VIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryTableSpec_TableSourceType_BigqueryView;
/**
 *  Default unknown type.
 *
 *  Value: "TABLE_SOURCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryTableSpec_TableSourceType_TableSourceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec.type

/**
 *  Unspecified database type.
 *
 *  Value: "DATABASE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec_Type_DatabaseTypeUnspecified;
/**
 *  Cloud SQL for MySQL.
 *
 *  Value: "MYSQL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec_Type_Mysql;
/**
 *  Cloud SQL for PostgreSQL.
 *
 *  Value: "POSTGRES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec_Type_Postgres;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1DatabaseTableSpec.type

/**
 *  External table.
 *
 *  Value: "EXTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1DatabaseTableSpec_Type_External;
/**
 *  Native table.
 *
 *  Value: "NATIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1DatabaseTableSpec_Type_Native;
/**
 *  Default unknown table type.
 *
 *  Value: "TABLE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1DatabaseTableSpec_Type_TableTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1DataplexExternalTable.system

/**
 *  BigQuery.
 *
 *  Value: "BIGQUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1DataplexExternalTable_System_Bigquery;
/**
 *  Cloud Pub/Sub.
 *
 *  Value: "CLOUD_PUBSUB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1DataplexExternalTable_System_CloudPubsub;
/**
 *  Dataplex.
 *
 *  Value: "DATAPLEX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1DataplexExternalTable_System_Dataplex;
/**
 *  Dataproc Metastore.
 *
 *  Value: "DATAPROC_METASTORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1DataplexExternalTable_System_DataprocMetastore;
/**
 *  Default unknown system.
 *
 *  Value: "INTEGRATED_SYSTEM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1DataplexExternalTable_System_IntegratedSystemUnspecified;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1DataSource.service

/**
 *  BigQuery service.
 *
 *  Value: "BIGQUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1DataSource_Service_Bigquery;
/**
 *  Google Cloud Storage service.
 *
 *  Value: "CLOUD_STORAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1DataSource_Service_CloudStorage;
/**
 *  Default unknown service.
 *
 *  Value: "SERVICE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1DataSource_Service_ServiceUnspecified;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1Entry.integratedSystem

/**
 *  BigQuery.
 *
 *  Value: "BIGQUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_IntegratedSystem_Bigquery;
/**
 *  Cloud Pub/Sub.
 *
 *  Value: "CLOUD_PUBSUB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_IntegratedSystem_CloudPubsub;
/**
 *  Dataplex.
 *
 *  Value: "DATAPLEX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_IntegratedSystem_Dataplex;
/**
 *  Dataproc Metastore.
 *
 *  Value: "DATAPROC_METASTORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_IntegratedSystem_DataprocMetastore;
/**
 *  Default unknown system.
 *
 *  Value: "INTEGRATED_SYSTEM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_IntegratedSystem_IntegratedSystemUnspecified;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1Entry.type

/**
 *  A group of servers that work together. For example, a Kafka cluster.
 *
 *  Value: "CLUSTER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Cluster;
/**
 *  A database.
 *
 *  Value: "DATABASE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Database;
/**
 *  Output only. Connection to a data source. For example, a BigQuery
 *  connection.
 *
 *  Value: "DATA_SOURCE_CONNECTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_DataSourceConnection;
/**
 *  An entry type for streaming entries. For example, a Pub/Sub topic.
 *
 *  Value: "DATA_STREAM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_DataStream;
/**
 *  Default unknown type.
 *
 *  Value: "ENTRY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_EntryTypeUnspecified;
/**
 *  An entry type for a set of files or objects. For example, a Cloud Storage
 *  fileset.
 *
 *  Value: "FILESET"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Fileset;
/**
 *  A Dataplex lake.
 *
 *  Value: "LAKE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Lake;
/**
 *  Output only. The type of models. For more information, see [Supported models
 *  in BigQuery ML]
 *  (https://cloud.google.com/bigquery-ml/docs/introduction#supported_models_in).
 *
 *  Value: "MODEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Model;
/**
 *  Output only. Routine, for example, a BigQuery routine.
 *
 *  Value: "ROUTINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Routine;
/**
 *  A service, for example, a Dataproc Metastore service.
 *
 *  Value: "SERVICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Service;
/**
 *  The entry type that has a GoogleSQL schema, including logical views.
 *
 *  Value: "TABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Table;
/**
 *  A Dataplex zone.
 *
 *  Value: "ZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Zone;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1FieldType.primitiveType

/**
 *  A boolean value.
 *
 *  Value: "BOOL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1FieldType_PrimitiveType_Bool;
/**
 *  A double precision number.
 *
 *  Value: "DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1FieldType_PrimitiveType_Double;
/**
 *  The default invalid value for a type.
 *
 *  Value: "PRIMITIVE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1FieldType_PrimitiveType_PrimitiveTypeUnspecified;
/**
 *  A Richtext description.
 *
 *  Value: "RICHTEXT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1FieldType_PrimitiveType_Richtext;
/**
 *  An UTF-8 string.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1FieldType_PrimitiveType_String;
/**
 *  A timestamp.
 *
 *  Value: "TIMESTAMP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1FieldType_PrimitiveType_Timestamp;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpec.routineType

/**
 *  Stored procedure.
 *
 *  Value: "PROCEDURE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpec_RoutineType_Procedure;
/**
 *  Unspecified type.
 *
 *  Value: "ROUTINE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpec_RoutineType_RoutineTypeUnspecified;
/**
 *  Non-builtin permanent scalar function.
 *
 *  Value: "SCALAR_FUNCTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpec_RoutineType_ScalarFunction;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpecArgument.mode

/**
 *  The argument is input-only.
 *
 *  Value: "IN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpecArgument_Mode_In;
/**
 *  The argument is both an input and an output.
 *
 *  Value: "INOUT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpecArgument_Mode_Inout;
/**
 *  Unspecified mode.
 *
 *  Value: "MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpecArgument_Mode_ModeUnspecified;
/**
 *  The argument is output-only.
 *
 *  Value: "OUT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpecArgument_Mode_Out;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult.integratedSystem

/**
 *  BigQuery.
 *
 *  Value: "BIGQUERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_IntegratedSystem_Bigquery;
/**
 *  Cloud Pub/Sub.
 *
 *  Value: "CLOUD_PUBSUB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_IntegratedSystem_CloudPubsub;
/**
 *  Dataplex.
 *
 *  Value: "DATAPLEX"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_IntegratedSystem_Dataplex;
/**
 *  Dataproc Metastore.
 *
 *  Value: "DATAPROC_METASTORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_IntegratedSystem_DataprocMetastore;
/**
 *  Default unknown system.
 *
 *  Value: "INTEGRATED_SYSTEM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_IntegratedSystem_IntegratedSystemUnspecified;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult.searchResultType

/**
 *  An Entry.
 *
 *  Value: "ENTRY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_SearchResultType_Entry;
/**
 *  An EntryGroup.
 *
 *  Value: "ENTRY_GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_SearchResultType_EntryGroup;
/**
 *  Default unknown type.
 *
 *  Value: "SEARCH_RESULT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_SearchResultType_SearchResultTypeUnspecified;
/**
 *  A TagTemplate.
 *
 *  Value: "TAG_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_SearchResultType_TagTemplate;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1SerializedTaxonomy.activatedPolicyTypes

/**
 *  Fine-grained access control policy that enables access control on tagged
 *  sub-resources.
 *
 *  Value: "FINE_GRAINED_ACCESS_CONTROL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1SerializedTaxonomy_ActivatedPolicyTypes_FineGrainedAccessControl;
/**
 *  Unspecified policy type.
 *
 *  Value: "POLICY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1SerializedTaxonomy_ActivatedPolicyTypes_PolicyTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDataCatalog_GoogleCloudDatacatalogV1Taxonomy.activatedPolicyTypes

/**
 *  Fine-grained access control policy that enables access control on tagged
 *  sub-resources.
 *
 *  Value: "FINE_GRAINED_ACCESS_CONTROL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Taxonomy_ActivatedPolicyTypes_FineGrainedAccessControl;
/**
 *  Unspecified policy type.
 *
 *  Value: "POLICY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataCatalog_GoogleCloudDatacatalogV1Taxonomy_ActivatedPolicyTypes_PolicyTypeUnspecified;

/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRDataCatalog_Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_Expr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`:
 *  An email address (plus unique identifier) representing a user that has been
 *  recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. * `domain:{domain}`: The G Suite domain (primary) that
 *  represents all the users of that domain. For example, `google.com` or
 *  `example.com`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRDataCatalog_Empty : GTLRObject
@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRDataCatalog_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Request message for `GetIamPolicy` method.
 */
@interface GTLRDataCatalog_GetIamPolicyRequest : GTLRObject

/**
 *  OPTIONAL: A `GetPolicyOptions` object for specifying options to
 *  `GetIamPolicy`.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GetPolicyOptions *options;

@end


/**
 *  Encapsulates settings provided to GetIamPolicy.
 */
@interface GTLRDataCatalog_GetPolicyOptions : GTLRObject

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedPolicyVersion;

@end


/**
 *  Specification for the BigQuery connection.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryConnectionSpec : GTLRObject

/** Specification for the BigQuery connection to a Cloud SQL instance. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec *cloudSql;

/**
 *  The type of the BigQuery connection.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryConnectionSpec_ConnectionType_CloudSql
 *        Cloud SQL connection. (Value: "CLOUD_SQL")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryConnectionSpec_ConnectionType_ConnectionTypeUnspecified
 *        Unspecified type. (Value: "CONNECTION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *connectionType;

/**
 *  True if there are credentials attached to the BigQuery connection; false
 *  otherwise.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hasCredential;

@end


/**
 *  Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD`
 *  name pattern. For more information, see [Introduction to partitioned tables]
 *  (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryDateShardedSpec : GTLRObject

/**
 *  Output only. The Data Catalog resource name of the dataset entry the current
 *  table belongs to. For example:
 *  `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`.
 */
@property(nonatomic, copy, nullable) NSString *dataset;

/** Output only. BigQuery resource name of the latest shard. */
@property(nonatomic, copy, nullable) NSString *latestShardResource;

/**
 *  Output only. Total number of shards.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shardCount;

/**
 *  Output only. The table name prefix of the shards. The name of any given
 *  shard is `[table_prefix]YYYYMMDD`. For example, for the `MyTable20180101`
 *  shard, the `table_prefix` is `MyTable`.
 */
@property(nonatomic, copy, nullable) NSString *tablePrefix;

@end


/**
 *  Fields specific for BigQuery routines.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryRoutineSpec : GTLRObject

/** Paths of the imported libraries. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *importedLibraries;

@end


/**
 *  Describes a BigQuery table.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryTableSpec : GTLRObject

/**
 *  Output only. The table source type.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryTableSpec_TableSourceType_BigqueryMaterializedView
 *        BigQuery materialized view. (Value: "BIGQUERY_MATERIALIZED_VIEW")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryTableSpec_TableSourceType_BigqueryTable
 *        BigQuery native table. (Value: "BIGQUERY_TABLE")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryTableSpec_TableSourceType_BigqueryView
 *        Table view. (Value: "BIGQUERY_VIEW")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryTableSpec_TableSourceType_TableSourceTypeUnspecified
 *        Default unknown type. (Value: "TABLE_SOURCE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *tableSourceType;

/**
 *  Specification of a BigQuery table. Populated only if the `table_source_type`
 *  is `BIGQUERY_TABLE`.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1TableSpec *tableSpec;

/**
 *  Table view specification. Populated only if the `table_source_type` is
 *  `BIGQUERY_VIEW`.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1ViewSpec *viewSpec;

@end


/**
 *  Business Context of the entry.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1BusinessContext : GTLRObject

/** Contact people for the entry. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1Contacts *contacts;

/** Entry overview fields for rich text descriptions of entries. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1EntryOverview *entryOverview;

@end


/**
 *  Specification for the BigQuery connection to a Cloud SQL instance.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec : GTLRObject

/** Database name. */
@property(nonatomic, copy, nullable) NSString *database;

/** Cloud SQL instance ID in the format of `project:location:instance`. */
@property(nonatomic, copy, nullable) NSString *instanceId;

/**
 *  Type of the Cloud SQL database.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec_Type_DatabaseTypeUnspecified
 *        Unspecified database type. (Value: "DATABASE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec_Type_Mysql
 *        Cloud SQL for MySQL. (Value: "MYSQL")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1CloudSqlBigQueryConnectionSpec_Type_Postgres
 *        Cloud SQL for PostgreSQL. (Value: "POSTGRES")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  A column within a schema. Columns can be nested inside other columns.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1ColumnSchema : GTLRObject

/**
 *  Required. Name of the column. Must be a UTF-8 string without dots (.). The
 *  maximum size is 64 bytes.
 */
@property(nonatomic, copy, nullable) NSString *column;

/**
 *  Optional. Description of the column. Default value is an empty string. The
 *  description must be a UTF-8 string with the maximum size of 2000 bytes.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. Garbage collection policy for the column or column family. Applies
 *  to systems like Cloud Bigtable.
 */
@property(nonatomic, copy, nullable) NSString *gcRule;

/**
 *  Optional. A column's mode indicates whether values in this column are
 *  required, nullable, or repeated. Only `NULLABLE`, `REQUIRED`, and `REPEATED`
 *  values are supported. Default mode is `NULLABLE`.
 */
@property(nonatomic, copy, nullable) NSString *mode;

/**
 *  Optional. Schema of sub-columns. A column can have zero or more sub-columns.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1ColumnSchema *> *subcolumns;

/**
 *  Required. Type of the column. Must be a UTF-8 string with the maximum size
 *  of 128 bytes.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Contact people for the entry.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1Contacts : GTLRObject

/** The list of contact people for the entry. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1ContactsPerson *> *people;

@end


/**
 *  A contact person for the entry.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1ContactsPerson : GTLRObject

/** Designation of the person, for example, Data Steward. */
@property(nonatomic, copy, nullable) NSString *designation;

/**
 *  Email of the person in the format of `john.doe\@xyz`, ``, or `John Doe`.
 */
@property(nonatomic, copy, nullable) NSString *email;

@end


/**
 *  Cross-regional source used to import an existing taxonomy into a different
 *  region.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1CrossRegionalSource : GTLRObject

/** Required. The resource name of the source taxonomy to import. */
@property(nonatomic, copy, nullable) NSString *taxonomy;

@end


/**
 *  Specification that applies to a table resource. Valid only for entries with
 *  the `TABLE` type.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1DatabaseTableSpec : GTLRObject

/**
 *  Output only. Fields specific to a Dataplex table and present only in the
 *  Dataplex table entries.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1DataplexTableSpec *dataplexTable;

/**
 *  Type of this table.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1DatabaseTableSpec_Type_External
 *        External table. (Value: "EXTERNAL")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1DatabaseTableSpec_Type_Native
 *        Native table. (Value: "NATIVE")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1DatabaseTableSpec_Type_TableTypeUnspecified
 *        Default unknown table type. (Value: "TABLE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  External table registered by Dataplex. Dataplex publishes data discovered
 *  from an asset into multiple other systems (BigQuery, DPMS) in form of
 *  tables. We call them "external tables". External tables are also synced into
 *  the Data Catalog. This message contains pointers to those external tables
 *  (fully qualified name, resource name et cetera) within the Data Catalog.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1DataplexExternalTable : GTLRObject

/** Name of the Data Catalog entry representing the external table. */
@property(nonatomic, copy, nullable) NSString *dataCatalogEntry;

/** Fully qualified name (FQN) of the external table. */
@property(nonatomic, copy, nullable) NSString *fullyQualifiedName;

/** Google Cloud resource name of the external table. */
@property(nonatomic, copy, nullable) NSString *googleCloudResource;

/**
 *  Service in which the external table is registered.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1DataplexExternalTable_System_Bigquery
 *        BigQuery. (Value: "BIGQUERY")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1DataplexExternalTable_System_CloudPubsub
 *        Cloud Pub/Sub. (Value: "CLOUD_PUBSUB")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1DataplexExternalTable_System_Dataplex
 *        Dataplex. (Value: "DATAPLEX")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1DataplexExternalTable_System_DataprocMetastore
 *        Dataproc Metastore. (Value: "DATAPROC_METASTORE")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1DataplexExternalTable_System_IntegratedSystemUnspecified
 *        Default unknown system. (Value: "INTEGRATED_SYSTEM_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *system;

@end


/**
 *  Entry specyfication for a Dataplex fileset.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1DataplexFilesetSpec : GTLRObject

/** Common Dataplex fields. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1DataplexSpec *dataplexSpec;

@end


/**
 *  Common Dataplex fields.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1DataplexSpec : GTLRObject

/**
 *  Fully qualified resource name of an asset in Dataplex, to which the
 *  underlying data source (Cloud Storage bucket or BigQuery dataset) of the
 *  entity is attached.
 */
@property(nonatomic, copy, nullable) NSString *asset;

/** Compression format of the data, e.g., zip, gzip etc. */
@property(nonatomic, copy, nullable) NSString *compressionFormat;

/** Format of the data. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchema *dataFormat;

/**
 *  Project ID of the underlying Cloud Storage or BigQuery data. Note that this
 *  may not be the same project as the correspondingly Dataplex lake / zone /
 *  asset.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

@end


/**
 *  Entry specification for a Dataplex table.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1DataplexTableSpec : GTLRObject

/** Common Dataplex fields. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1DataplexSpec *dataplexSpec;

/**
 *  List of external tables registered by Dataplex in other systems based on the
 *  same underlying data. External tables allow to query this data in those
 *  systems.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1DataplexExternalTable *> *externalTables;

/**
 *  Indicates if the table schema is managed by the user or not.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *userManaged;

@end


/**
 *  Physical location of an entry.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1DataSource : GTLRObject

/**
 *  Full name of a resource as defined by the service. For example:
 *  `//bigquery.googleapis.com/projects/{PROJECT_ID}/locations/{LOCATION}/datasets/{DATASET_ID}/tables/{TABLE_ID}`
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Service that physically stores the data.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1DataSource_Service_Bigquery
 *        BigQuery service. (Value: "BIGQUERY")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1DataSource_Service_CloudStorage
 *        Google Cloud Storage service. (Value: "CLOUD_STORAGE")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1DataSource_Service_ServiceUnspecified
 *        Default unknown service. (Value: "SERVICE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *service;

/** Output only. Data Catalog entry name, if applicable. */
@property(nonatomic, copy, nullable) NSString *sourceEntry;

/** Detailed properties of the underlying storage. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1StorageProperties *storageProperties;

@end


/**
 *  Specification that applies to a data source connection. Valid only for
 *  entries with the `DATA_SOURCE_CONNECTION` type. Only one of internal specs
 *  can be set at the time, and cannot be changed later.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1DataSourceConnectionSpec : GTLRObject

/** Output only. Fields specific to BigQuery connections. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryConnectionSpec *bigqueryConnectionSpec;

@end


/**
 *  Entry metadata. A Data Catalog entry represents another resource in Google
 *  Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic) or outside of
 *  it. You can use the `linked_resource` field in the entry resource to refer
 *  to the original resource ID of the source system. An entry resource contains
 *  resource details, for example, its schema. Additionally, you can attach
 *  flexible metadata to an entry in the form of a Tag.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1Entry : GTLRObject

/**
 *  Output only. Specification for a group of BigQuery tables with the
 *  `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to
 *  partitioned tables]
 *  (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryDateShardedSpec *bigqueryDateShardedSpec;

/**
 *  Output only. Specification that applies to a BigQuery table. Valid only for
 *  entries with the `TABLE` type.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryTableSpec *bigqueryTableSpec;

/** Business Context of the entry. Not supported for BigQuery datasets */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1BusinessContext *businessContext;

/**
 *  Specification that applies to a table resource. Valid only for entries with
 *  the `TABLE` type.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1DatabaseTableSpec *databaseTableSpec;

/** Output only. Physical location of the entry. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1DataSource *dataSource;

/**
 *  Specification that applies to a data source connection. Valid only for
 *  entries with the `DATA_SOURCE_CONNECTION` type.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1DataSourceConnectionSpec *dataSourceConnectionSpec;

/**
 *  Entry description that can consist of several sentences or paragraphs that
 *  describe entry contents. The description must not contain Unicode
 *  non-characters as well as C0 and C1 control codes except tabs (HT), new
 *  lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is
 *  2000 bytes when encoded in UTF-8. Default value is an empty string.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Display name of an entry. The name must contain only Unicode letters,
 *  numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or
 *  end with spaces. The maximum size is 200 bytes when encoded in UTF-8.
 *  Default value is an empty string.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Specification that applies to a fileset resource. Valid only for entries
 *  with the `FILESET` type.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1FilesetSpec *filesetSpec;

/**
 *  Fully qualified name (FQN) of the resource. Set automatically for entries
 *  representing resources from synced systems. Settable only during creation
 *  and read-only afterwards. Can be used for search and lookup of the entries.
 *  FQNs take two forms: * For non-regionalized resources:
 *  `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For
 *  regionalized resources:
 *  `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}`
 *  Example for a DPMS table:
 *  `dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}`
 */
@property(nonatomic, copy, nullable) NSString *fullyQualifiedName;

/**
 *  Specification that applies to a Cloud Storage fileset. Valid only for
 *  entries with the `FILESET` type.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1GcsFilesetSpec *gcsFilesetSpec;

/**
 *  Output only. Indicates the entry's source system that Data Catalog
 *  integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_IntegratedSystem_Bigquery
 *        BigQuery. (Value: "BIGQUERY")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_IntegratedSystem_CloudPubsub
 *        Cloud Pub/Sub. (Value: "CLOUD_PUBSUB")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_IntegratedSystem_Dataplex
 *        Dataplex. (Value: "DATAPLEX")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_IntegratedSystem_DataprocMetastore
 *        Dataproc Metastore. (Value: "DATAPROC_METASTORE")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_IntegratedSystem_IntegratedSystemUnspecified
 *        Default unknown system. (Value: "INTEGRATED_SYSTEM_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *integratedSystem;

/**
 *  Cloud labels attached to the entry. In Data Catalog, you can create and
 *  modify labels attached only to custom entries. Synced entries have
 *  unmodifiable labels that come from the source system.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Labels *labels;

/**
 *  The resource this metadata entry refers to. For Google Cloud Platform
 *  resources, `linked_resource` is the [Full Resource Name]
 *  (https://cloud.google.com/apis/design/resource_names#full_resource_name).
 *  For example, the `linked_resource` for a table resource from BigQuery is:
 *  `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}`
 *  Output only when the entry is one of the types in the `EntryType` enum. For
 *  entries with a `user_specified_type`, this field is optional and defaults to
 *  an empty string. The resource string must contain only letters (a-z, A-Z),
 *  numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes
 *  (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8.
 */
@property(nonatomic, copy, nullable) NSString *linkedResource;

/**
 *  Output only. The resource name of an entry in URL format. Note: The entry
 *  itself and its child resources might not be stored in the location specified
 *  in its name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Additional information related to the entry. Private to the
 *  current user.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1PersonalDetails *personalDetails;

/**
 *  Specification that applies to a user-defined function or procedure. Valid
 *  only for entries with the `ROUTINE` type.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpec *routineSpec;

/** Schema of the entry. An entry might not have any schema attached to it. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1Schema *schema;

/**
 *  Timestamps from the underlying resource, not from the Data Catalog entry.
 *  Output only when the entry has a system listed in the `IntegratedSystem`
 *  enum. For entries with `user_specified_system`, this field is optional and
 *  defaults to an empty timestamp.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1SystemTimestamps *sourceSystemTimestamps;

/**
 *  The type of the entry. Only used for entries with types listed in the
 *  `EntryType` enum. Currently, only `FILESET` enum value is allowed. All other
 *  entries created in Data Catalog must use the `user_specified_type`.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Cluster A
 *        group of servers that work together. For example, a Kafka cluster.
 *        (Value: "CLUSTER")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Database A
 *        database. (Value: "DATABASE")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_DataSourceConnection
 *        Output only. Connection to a data source. For example, a BigQuery
 *        connection. (Value: "DATA_SOURCE_CONNECTION")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_DataStream An
 *        entry type for streaming entries. For example, a Pub/Sub topic.
 *        (Value: "DATA_STREAM")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_EntryTypeUnspecified
 *        Default unknown type. (Value: "ENTRY_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Fileset An
 *        entry type for a set of files or objects. For example, a Cloud Storage
 *        fileset. (Value: "FILESET")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Lake A
 *        Dataplex lake. (Value: "LAKE")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Model Output
 *        only. The type of models. For more information, see [Supported models
 *        in BigQuery ML]
 *        (https://cloud.google.com/bigquery-ml/docs/introduction#supported_models_in).
 *        (Value: "MODEL")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Routine Output
 *        only. Routine, for example, a BigQuery routine. (Value: "ROUTINE")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Service A
 *        service, for example, a Dataproc Metastore service. (Value: "SERVICE")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Table The
 *        entry type that has a GoogleSQL schema, including logical views.
 *        (Value: "TABLE")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Type_Zone A
 *        Dataplex zone. (Value: "ZONE")
 */
@property(nonatomic, copy, nullable) NSString *type;

/** Resource usage statistics. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1UsageSignal *usageSignal;

/**
 *  Indicates the entry's source system that Data Catalog doesn't automatically
 *  integrate with. The `user_specified_system` string has the following
 *  limitations: * Is case insensitive. * Must begin with a letter or
 *  underscore. * Can only contain letters, numbers, and underscores. * Must be
 *  at least 1 character and at most 64 characters long.
 */
@property(nonatomic, copy, nullable) NSString *userSpecifiedSystem;

/**
 *  Custom entry type that doesn't match any of the values allowed for input and
 *  listed in the `EntryType` enum. When creating an entry, first check the type
 *  values in the enum. If there are no appropriate types for the new entry,
 *  provide a custom value, for example, `my_special_type`. The
 *  `user_specified_type` string has the following limitations: * Is case
 *  insensitive. * Must begin with a letter or underscore. * Can only contain
 *  letters, numbers, and underscores. * Must be at least 1 character and at
 *  most 64 characters long.
 */
@property(nonatomic, copy, nullable) NSString *userSpecifiedType;

@end


/**
 *  Cloud labels attached to the entry. In Data Catalog, you can create and
 *  modify labels attached only to custom entries. Synced entries have
 *  unmodifiable labels that come from the source system.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1Entry_Labels : GTLRObject
@end


/**
 *  Entry group metadata. An `EntryGroup` resource represents a logical grouping
 *  of zero or more Data Catalog Entry resources.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1EntryGroup : GTLRObject

/** Output only. Timestamps of the entry group. Default value is empty. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1SystemTimestamps *dataCatalogTimestamps;

/**
 *  Entry group description. Can consist of several sentences or paragraphs that
 *  describe the entry group contents. Default value is an empty string.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  A short name to identify the entry group, for example, "analytics data - jan
 *  2011". Default value is an empty string.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The resource name of the entry group in URL format. Note: The entry group
 *  itself and its child resources might not be stored in the location specified
 *  in its name.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Entry overview fields for rich text descriptions of entries.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1EntryOverview : GTLRObject

/**
 *  Entry overview with support for rich text. The overview must only contain
 *  Unicode characters, and should be formatted using HTML. The maximum length
 *  is 10 MiB as this value holds HTML descriptions including encoded images.
 *  The maximum length of the text without images is 100 KiB.
 */
@property(nonatomic, copy, nullable) NSString *overview;

@end


/**
 *  Response message for ExportTaxonomies.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1ExportTaxonomiesResponse : GTLRObject

/** List of taxonomies and policy tags as nested protocol buffers. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1SerializedTaxonomy *> *taxonomies;

@end


/**
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1FieldType
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1FieldType : GTLRObject

/** An enum type. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1FieldTypeEnumType *enumType;

/**
 *  Primitive types, such as string, boolean, etc.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1FieldType_PrimitiveType_Bool
 *        A boolean value. (Value: "BOOL")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1FieldType_PrimitiveType_Double
 *        A double precision number. (Value: "DOUBLE")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1FieldType_PrimitiveType_PrimitiveTypeUnspecified
 *        The default invalid value for a type. (Value:
 *        "PRIMITIVE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1FieldType_PrimitiveType_Richtext
 *        A Richtext description. (Value: "RICHTEXT")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1FieldType_PrimitiveType_String
 *        An UTF-8 string. (Value: "STRING")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1FieldType_PrimitiveType_Timestamp
 *        A timestamp. (Value: "TIMESTAMP")
 */
@property(nonatomic, copy, nullable) NSString *primitiveType;

@end


/**
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1FieldTypeEnumType
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1FieldTypeEnumType : GTLRObject

/**
 *  The set of allowed values for this enum. This set must not be empty and can
 *  include up to 100 allowed values. The display names of the values in this
 *  set must not be empty and must be case-insensitively unique within this set.
 *  The order of items in this set is preserved. This field can be used to
 *  create, remove, and reorder enum values. To rename enum values, use the
 *  `RenameTagTemplateFieldEnumValue` method.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue *> *allowedValues;

@end


/**
 *  GTLRDataCatalog_GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue : GTLRObject

/**
 *  Required. The display name of the enum value. Must not be an empty string.
 *  The name must contain only Unicode letters, numbers (0-9), underscores (_),
 *  dashes (-), spaces ( ), and can't start or end with spaces. The maximum
 *  length is 200 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  Specification that applies to a fileset. Valid only for entries with the
 *  'FILESET' type.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1FilesetSpec : GTLRObject

/**
 *  Fields specific to a Dataplex fileset and present only in the Dataplex
 *  fileset entries.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1DataplexFilesetSpec *dataplexFileset;

@end


/**
 *  Describes a Cloud Storage fileset entry.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1GcsFilesetSpec : GTLRObject

/**
 *  Required. Patterns to identify a set of files in Google Cloud Storage. For
 *  more information, see [Wildcard Names]
 *  (https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames). Note:
 *  Currently, bucket wildcards are not supported. Examples of valid
 *  `file_patterns`: * `gs://bucket_name/dir/ *`: matches all files in
 *  `bucket_name/dir` directory * `gs://bucket_name/dir/ **`: matches all files
 *  in `bucket_name/dir` and all subdirectories * `gs://bucket_name/file*`:
 *  matches files prefixed by `file` in `bucket_name` *
 *  `gs://bucket_name/??.txt`: matches files with two characters followed by
 *  `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that
 *  contain a single vowel character followed by `.txt` in `bucket_name` *
 *  `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or
 *  `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/ * /b`:
 *  matches all files in `bucket_name` that match the `a/ * /b` pattern, such as
 *  `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches
 *  `gs://another_bucket/a.txt` You can combine wildcards to match complex sets
 *  of files, for example: `gs://bucket_name/[a-m]??.j*g`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *filePatterns;

/**
 *  Output only. Sample files contained in this fileset, not all files contained
 *  in this fileset are represented here.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1GcsFileSpec *> *sampleGcsFileSpecs;

@end


/**
 *  Specification of a single file in Cloud Storage.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1GcsFileSpec : GTLRObject

/** Required. Full file path. Example: `gs://bucket_name/a/b.txt`. */
@property(nonatomic, copy, nullable) NSString *filePath;

/**
 *  Output only. Creation, modification, and expiration timestamps of a Cloud
 *  Storage file.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1SystemTimestamps *gcsTimestamps;

/**
 *  Output only. File size in bytes.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeBytes;

@end


/**
 *  Request message for ImportTaxonomies.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1ImportTaxonomiesRequest : GTLRObject

/** Cross-regional source taxonomy to import. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1CrossRegionalSource *crossRegionalSource;

/** Inline source taxonomy to import. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1InlineSource *inlineSource;

@end


/**
 *  Response message for ImportTaxonomies.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1ImportTaxonomiesResponse : GTLRObject

/** Imported taxonomies. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1Taxonomy *> *taxonomies;

@end


/**
 *  Inline source containing taxonomies to import.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1InlineSource : GTLRObject

/** Required. Taxonomies to import. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1SerializedTaxonomy *> *taxonomies;

@end


/**
 *  Response message for ListEntries.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "entries" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1ListEntriesResponse : GTLRCollectionObject

/**
 *  Entry details.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1Entry *> *entries;

/**
 *  Pagination token of the next results page. Empty if there are no more items
 *  in results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ListEntryGroups.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "entryGroups" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1ListEntryGroupsResponse : GTLRCollectionObject

/**
 *  Entry group details.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1EntryGroup *> *entryGroups;

/**
 *  Pagination token to specify in the next call to retrieve the next page of
 *  results. Empty if there are no more items.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ListPolicyTags.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "policyTags" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1ListPolicyTagsResponse : GTLRCollectionObject

/**
 *  Pagination token of the next results page. Empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The policy tags that belong to the taxonomy.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1PolicyTag *> *policyTags;

@end


/**
 *  Response message for ListTags.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "tags" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1ListTagsResponse : GTLRCollectionObject

/**
 *  Pagination token of the next results page. Empty if there are no more items
 *  in results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Tag details.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1Tag *> *tags;

@end


/**
 *  Response message for ListTaxonomies.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "taxonomies" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1ListTaxonomiesResponse : GTLRCollectionObject

/**
 *  Pagination token of the next results page. Empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Taxonomies that the project contains.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1Taxonomy *> *taxonomies;

@end


/**
 *  Request message for ModifyEntryContacts.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1ModifyEntryContactsRequest : GTLRObject

/** Required. The new value for the Contacts. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1Contacts *contacts;

@end


/**
 *  Request message for ModifyEntryOverview.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1ModifyEntryOverviewRequest : GTLRObject

/** Required. The new value for the Entry Overview. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1EntryOverview *entryOverview;

@end


/**
 *  Entry metadata relevant only to the user and private to them.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1PersonalDetails : GTLRObject

/**
 *  True if the entry is starred by the user; false otherwise.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *starred;

/** Set if the entry is starred; unset otherwise. */
@property(nonatomic, strong, nullable) GTLRDateTime *starTime;

@end


/**
 *  Native schema used by a resource represented as an entry. Used by query
 *  engines for deserializing and parsing source data.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchema : GTLRObject

/** Schema in Avro JSON format. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema *avro;

/** Marks a CSV-encoded data source. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaCsvSchema *csv;

/** Marks an ORC-encoded data source. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaOrcSchema *orc;

/** Marks a Parquet-encoded data source. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaParquetSchema *parquet;

/** Schema in protocol buffer format. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema *protobuf;

/** Schema in Thrift format. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema *thrift;

@end


/**
 *  Schema in Avro JSON format.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaAvroSchema : GTLRObject

/** JSON source of the Avro schema. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Marks a CSV-encoded data source.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaCsvSchema : GTLRObject
@end


/**
 *  Marks an ORC-encoded data source.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaOrcSchema : GTLRObject
@end


/**
 *  Marks a Parquet-encoded data source.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaParquetSchema : GTLRObject
@end


/**
 *  Schema in protocol buffer format.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaProtobufSchema : GTLRObject

/** Protocol buffer source of the schema. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Schema in Thrift format.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1PhysicalSchemaThriftSchema : GTLRObject

/** Thrift IDL source of the schema. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Denotes one policy tag in a taxonomy, for example, SSN. Policy tags can be
 *  defined in a hierarchy. For example: ``` + Geolocation + LatLong + City +
 *  ZipCode ``` Where the "Geolocation" policy tag contains three children.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1PolicyTag : GTLRObject

/** Output only. Resource names of child policy tags of this policy tag. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *childPolicyTags;

/**
 *  Description of this policy tag. If not set, defaults to empty. The
 *  description must contain only Unicode characters, tabs, newlines, carriage
 *  returns and page breaks, and be at most 2000 bytes long when encoded in
 *  UTF-8.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. User-defined name of this policy tag. The name can't start or end
 *  with spaces and must be unique within the parent taxonomy, contain only
 *  Unicode letters, numbers, underscores, dashes and spaces, and be at most 200
 *  bytes long when encoded in UTF-8.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. Resource name of this policy tag in the URL format. The policy
 *  tag manager generates unique taxonomy IDs and policy tag IDs.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Resource name of this policy tag's parent policy tag. If empty, this is a
 *  top level tag. If not set, defaults to an empty string. For example, for the
 *  "LatLong" policy tag in the example above, this field contains the resource
 *  name of the "Geolocation" policy tag, and, for "Geolocation", this field is
 *  empty.
 */
@property(nonatomic, copy, nullable) NSString *parentPolicyTag;

@end


/**
 *  Request message for RenameTagTemplateFieldEnumValue.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1RenameTagTemplateFieldEnumValueRequest : GTLRObject

/**
 *  Required. The new display name of the enum value. For example,
 *  `my_new_enum_value`.
 */
@property(nonatomic, copy, nullable) NSString *newEnumValueDisplayName NS_RETURNS_NOT_RETAINED;

@end


/**
 *  Request message for RenameTagTemplateField.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1RenameTagTemplateFieldRequest : GTLRObject

/**
 *  Required. The new ID of this tag template field. For example,
 *  `my_new_field`.
 */
@property(nonatomic, copy, nullable) NSString *newTagTemplateFieldId NS_RETURNS_NOT_RETAINED;

@end


/**
 *  Request message for ReplaceTaxonomy.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1ReplaceTaxonomyRequest : GTLRObject

/** Required. Taxonomy to update along with its child policy tags. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1SerializedTaxonomy *serializedTaxonomy;

@end


/**
 *  Specification that applies to a routine. Valid only for entries with the
 *  `ROUTINE` type.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpec : GTLRObject

/** Fields specific for BigQuery routines. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1BigQueryRoutineSpec *bigqueryRoutineSpec;

/** The body of the routine. */
@property(nonatomic, copy, nullable) NSString *definitionBody;

/**
 *  The language the routine is written in. The exact value depends on the
 *  source system. For BigQuery routines, possible values are: * `SQL` *
 *  `JAVASCRIPT`
 */
@property(nonatomic, copy, nullable) NSString *language;

/**
 *  Return type of the argument. The exact value depends on the source system
 *  and the language.
 */
@property(nonatomic, copy, nullable) NSString *returnType;

/** Arguments of the routine. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpecArgument *> *routineArguments;

/**
 *  The type of the routine.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpec_RoutineType_Procedure
 *        Stored procedure. (Value: "PROCEDURE")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpec_RoutineType_RoutineTypeUnspecified
 *        Unspecified type. (Value: "ROUTINE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpec_RoutineType_ScalarFunction
 *        Non-builtin permanent scalar function. (Value: "SCALAR_FUNCTION")
 */
@property(nonatomic, copy, nullable) NSString *routineType;

@end


/**
 *  Input or output argument of a function or stored procedure.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpecArgument : GTLRObject

/**
 *  Specifies whether the argument is input or output.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpecArgument_Mode_In
 *        The argument is input-only. (Value: "IN")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpecArgument_Mode_Inout
 *        The argument is both an input and an output. (Value: "INOUT")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpecArgument_Mode_ModeUnspecified
 *        Unspecified mode. (Value: "MODE_UNSPECIFIED")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1RoutineSpecArgument_Mode_Out
 *        The argument is output-only. (Value: "OUT")
 */
@property(nonatomic, copy, nullable) NSString *mode;

/**
 *  The name of the argument. A return argument of a function might not have a
 *  name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Type of the argument. The exact value depends on the source system and the
 *  language.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents a schema, for example, a BigQuery, GoogleSQL, or Avro schema.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1Schema : GTLRObject

/**
 *  The unified GoogleSQL-like schema of columns. The overall maximum number of
 *  columns and nested columns is 10,000. The maximum nested depth is 15 levels.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1ColumnSchema *> *columns;

@end


/**
 *  Request message for SearchCatalog.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogRequest : GTLRObject

/**
 *  Specifies the order of results. Currently supported case-sensitive values
 *  are: * `relevance` that can only be descending * `last_modified_timestamp
 *  [asc|desc]` with descending (`desc`) as default * `default` that can only be
 *  descending If this parameter is omitted, it defaults to the descending
 *  `relevance`.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Number of results to return in a single search page. Can't be negative or 0,
 *  defaults to 10 in this case. The maximum number is 1000. If exceeded, throws
 *  an "invalid argument" exception.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  Optional. Pagination token that, if specified, returns the next page of
 *  search results. If empty, returns the first page. This token is returned in
 *  the SearchCatalogResponse.next_page_token field of the response to a
 *  previous SearchCatalogRequest call.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Optional. The query string with a minimum of 3 characters and specific
 *  syntax. For more information, see [Data Catalog search
 *  syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference).
 *  An empty query string returns all data assets (in the specified scope) that
 *  you have access to. A query string can be a simple `xyz` or qualified by
 *  predicates: * `name:x` * `column:y` * `description:z`
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Required. The scope of this search request. The `scope` is invalid if
 *  `include_org_ids`, `include_project_ids` are empty AND
 *  `include_gcp_public_datasets` is set to `false`. In this case, the request
 *  returns an error.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogRequestScope *scope;

@end


/**
 *  The criteria that select the subspace used for query matching.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogRequestScope : GTLRObject

/**
 *  If `true`, include Google Cloud Platform (GCP) public datasets in search
 *  results. By default, they are excluded. See [Google Cloud Public
 *  Datasets](/public-datasets) for more information.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeGcpPublicDatasets;

/**
 *  The list of organization IDs to search within. To find your organization ID,
 *  follow the steps from [Creating and managing organizations]
 *  (/resource-manager/docs/creating-managing-organization).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includeOrgIds;

/**
 *  The list of project IDs to search within. For more information on the
 *  distinction between project names, IDs, and numbers, see
 *  [Projects](/docs/overview/#projects).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includeProjectIds;

/**
 *  Optional. This field is deprecated. The search mechanism for public and
 *  private tag templates is the same.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includePublicTagTemplates;

/**
 *  Optional. The list of locations to search within. If empty, all locations
 *  are searched. Returns an error if any location in the list isn't one of the
 *  [Supported
 *  regions](https://cloud.google.com/data-catalog/docs/concepts/regions#supported_regions).
 *  If a location is unreachable, its name is returned in the
 *  `SearchCatalogResponse.unreachable` field. To get additional information on
 *  the error, repeat the search request and set the location name as the value
 *  of this parameter.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *restrictedLocations;

/**
 *  Optional. If `true`, search only among starred entries. By default, all
 *  results are returned, starred or not.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *starredOnly;

@end


/**
 *  Response message for SearchCatalog.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "results" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResponse : GTLRCollectionObject

/**
 *  Pagination token that can be used in subsequent calls to retrieve the next
 *  page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Search results.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult *> *results;

/**
 *  Unreachable locations. Search results don't include data from those
 *  locations. To get additional information on an error, repeat the search
 *  request and restrict it to specific locations by setting the
 *  `SearchCatalogRequest.scope.restricted_locations` parameter.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  Result in the response to a search request. Each result captures details of
 *  one entry that matches the search.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult : GTLRObject

/**
 *  Entry description that can consist of several sentences or paragraphs that
 *  describe entry contents.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The display name of the result. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Fully qualified name (FQN) of the resource. FQNs take two forms: * For
 *  non-regionalized resources:
 *  `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For
 *  regionalized resources:
 *  `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}`
 *  Example for a DPMS table:
 *  `dataproc_metastore:PROJECT_ID.LOCATION_ID.INSTANCE_ID.DATABASE_ID.TABLE_ID`
 */
@property(nonatomic, copy, nullable) NSString *fullyQualifiedName;

/**
 *  Output only. The source system that Data Catalog automatically integrates
 *  with, such as BigQuery, Cloud Pub/Sub, or Dataproc Metastore.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_IntegratedSystem_Bigquery
 *        BigQuery. (Value: "BIGQUERY")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_IntegratedSystem_CloudPubsub
 *        Cloud Pub/Sub. (Value: "CLOUD_PUBSUB")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_IntegratedSystem_Dataplex
 *        Dataplex. (Value: "DATAPLEX")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_IntegratedSystem_DataprocMetastore
 *        Dataproc Metastore. (Value: "DATAPROC_METASTORE")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_IntegratedSystem_IntegratedSystemUnspecified
 *        Default unknown system. (Value: "INTEGRATED_SYSTEM_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *integratedSystem;

/**
 *  The full name of the Google Cloud resource the entry belongs to. For more
 *  information, see [Full Resource Name]
 *  (/apis/design/resource_names#full_resource_name). Example:
 *  `//bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID/tables/TABLE_ID`
 */
@property(nonatomic, copy, nullable) NSString *linkedResource;

/** The last modification timestamp of the entry in the source system. */
@property(nonatomic, strong, nullable) GTLRDateTime *modifyTime;

/**
 *  The relative name of the resource in URL format. Examples: *
 *  `projects/{PROJECT_ID}/locations/{LOCATION_ID}/entryGroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`
 *  * `projects/{PROJECT_ID}/tagTemplates/{TAG_TEMPLATE_ID}`
 */
@property(nonatomic, copy, nullable) NSString *relativeResourceName;

/**
 *  Sub-type of the search result. A dot-delimited full type of the resource.
 *  The same type you specify in the `type` search predicate. Examples:
 *  `entry.table`, `entry.dataStream`, `tagTemplate`.
 */
@property(nonatomic, copy, nullable) NSString *searchResultSubtype;

/**
 *  Type of the search result. You can use this field to determine which get
 *  method to call to fetch the full resource.
 *
 *  Likely values:
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_SearchResultType_Entry
 *        An Entry. (Value: "ENTRY")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_SearchResultType_EntryGroup
 *        An EntryGroup. (Value: "ENTRY_GROUP")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_SearchResultType_SearchResultTypeUnspecified
 *        Default unknown type. (Value: "SEARCH_RESULT_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDataCatalog_GoogleCloudDatacatalogV1SearchCatalogResult_SearchResultType_TagTemplate
 *        A TagTemplate. (Value: "TAG_TEMPLATE")
 */
@property(nonatomic, copy, nullable) NSString *searchResultType;

/** Custom source system that you can manually integrate Data Catalog with. */
@property(nonatomic, copy, nullable) NSString *userSpecifiedSystem;

@end


/**
 *  A nested protocol buffer that represents a policy tag and all its
 *  descendants.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1SerializedPolicyTag : GTLRObject

/** Children of the policy tag, if any. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1SerializedPolicyTag *> *childPolicyTags;

/**
 *  Description of the serialized policy tag. At most 2000 bytes when encoded in
 *  UTF-8. If not set, defaults to an empty description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. Display name of the policy tag. At most 200 bytes when encoded in
 *  UTF-8.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Resource name of the policy tag. This field is ignored when calling
 *  `ImportTaxonomies`.
 */
@property(nonatomic, copy, nullable) NSString *policyTag;

@end


/**
 *  A nested protocol buffer that represents a taxonomy and the hierarchy of its
 *  policy tags. Used for taxonomy replacement, import, and export.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1SerializedTaxonomy : GTLRObject

/** A list of policy types that are activated per taxonomy. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *activatedPolicyTypes;

/**
 *  Description of the serialized taxonomy. At most 2000 bytes when encoded in
 *  UTF-8. If not set, defaults to an empty description.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. Display name of the taxonomy. At most 200 bytes when encoded in
 *  UTF-8.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Top level policy tags associated with the taxonomy, if any. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_GoogleCloudDatacatalogV1SerializedPolicyTag *> *policyTags;

@end


/**
 *  Request message for StarEntry.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1StarEntryRequest : GTLRObject
@end


/**
 *  Response message for StarEntry. Empty for now
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1StarEntryResponse : GTLRObject
@end


/**
 *  Details the properties of the underlying storage.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1StorageProperties : GTLRObject

/**
 *  Patterns to identify a set of files for this fileset. Examples of a valid
 *  `file_pattern`: * `gs://bucket_name/dir/ *`: matches all files in the
 *  `bucket_name/dir` directory * `gs://bucket_name/dir/ **`: matches all files
 *  in the `bucket_name/dir` and all subdirectories recursively *
 *  `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name`
 *  * `gs://bucket_name/??.txt`: matches files with two characters followed by
 *  `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that
 *  contain a single vowel character followed by `.txt` in `bucket_name` *
 *  `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or
 *  `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/ * /b`:
 *  matches all files in `bucket_name` that match the `a/ * /b` pattern, such as
 *  `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches
 *  `gs://another_bucket/a.txt`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *filePattern;

/** File type in MIME format, for example, `text/plain`. */
@property(nonatomic, copy, nullable) NSString *fileType;

@end


/**
 *  Timestamps associated with this resource in a particular system.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1SystemTimestamps : GTLRObject

/** Creation timestamp of the resource within the given system. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. Expiration timestamp of the resource within the given system.
 *  Currently only applicable to BigQuery resources.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *expireTime;

/**
 *  Timestamp of the last modification of the resource or its metadata within a
 *  given system. Note: Depending on the source system, not every modification
 *  updates this timestamp. For example, BigQuery timestamps every metadata
 *  modification but not data or permission changes.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Normal BigQuery table specification.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1TableSpec : GTLRObject

/**
 *  Output only. If the table is date-sharded, that is, it matches the
 *  `[prefix]YYYYMMDD` name pattern, this field is the Data Catalog resource
 *  name of the date-sharded grouped entry. For example:
 *  `projects/{PROJECT_ID}/locations/{LOCATION}/entrygroups/{ENTRY_GROUP_ID}/entries/{ENTRY_ID}`.
 *  Otherwise, `grouped_entry` is empty.
 */
@property(nonatomic, copy, nullable) NSString *groupedEntry;

@end


/**
 *  Tags contain custom metadata and are attached to Data Catalog resources.
 *  Tags conform with the specification of their tag template. See [Data Catalog
 *  IAM](https://cloud.google.com/data-catalog/docs/concepts/iam) for
 *  information on the permissions needed to create or view tags.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1Tag : GTLRObject

/**
 *  Resources like entry can have schemas associated with them. This scope
 *  allows you to attach tags to an individual column based on that schema. To
 *  attach a tag to a nested column, separate column names with a dot (`.`).
 *  Example: `column.nested_column`.
 */
@property(nonatomic, copy, nullable) NSString *column;

/**
 *  Required. Maps the ID of a tag field to its value and additional information
 *  about that field. Tag template defines valid field IDs. A tag must have at
 *  least 1 field and at most 500 fields.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1Tag_Fields *fields;

/**
 *  The resource name of the tag in URL format where tag ID is a
 *  system-generated identifier. Note: The tag itself might not be stored in the
 *  location specified in its name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The resource name of the tag template this tag uses. Example:
 *  `projects/{PROJECT_ID}/locations/{LOCATION}/tagTemplates/{TAG_TEMPLATE_ID}`
 *  This field cannot be modified after creation.
 *
 *  Remapped to 'templateProperty' to avoid language reserved word 'template'.
 */
@property(nonatomic, copy, nullable) NSString *templateProperty;

/** Output only. The display name of the tag template. */
@property(nonatomic, copy, nullable) NSString *templateDisplayName;

@end


/**
 *  Required. Maps the ID of a tag field to its value and additional information
 *  about that field. Tag template defines valid field IDs. A tag must have at
 *  least 1 field and at most 500 fields.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDataCatalog_GoogleCloudDatacatalogV1TagField. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1Tag_Fields : GTLRObject
@end


/**
 *  Contains the value and additional information on a field within a Tag.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1TagField : GTLRObject

/**
 *  The value of a tag field with a boolean type.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boolValue;

/** Output only. The display name of this field. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The value of a tag field with a double type.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *doubleValue;

/**
 *  The value of a tag field with an enum type. This value must be one of the
 *  allowed values listed in this enum.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1TagFieldEnumValue *enumValue;

/**
 *  Output only. The order of this field with respect to other fields in this
 *  tag. Can be set by Tag. For example, a higher value can indicate a more
 *  important field. The value can be negative. Multiple fields can have the
 *  same order, and field orders within a tag don't have to be sequential.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *order;

/**
 *  The value of a tag field with a rich text type. The maximum length is 10 MiB
 *  as this value holds HTML descriptions including encoded images. The maximum
 *  length of the text without images is 100 KiB.
 */
@property(nonatomic, copy, nullable) NSString *richtextValue;

/**
 *  The value of a tag field with a string type. The maximum length is 2000
 *  UTF-8 characters.
 */
@property(nonatomic, copy, nullable) NSString *stringValue;

/** The value of a tag field with a timestamp type. */
@property(nonatomic, strong, nullable) GTLRDateTime *timestampValue;

@end


/**
 *  An enum value.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1TagFieldEnumValue : GTLRObject

/** The display name of the enum value. */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  A tag template defines a tag that can have one or more typed fields. The
 *  template is used to create tags that are attached to GCP resources. [Tag
 *  template roles]
 *  (https://cloud.google.com/iam/docs/understanding-roles#data-catalog-roles)
 *  provide permissions to create, edit, and use the template. For example, see
 *  the [TagTemplate User]
 *  (https://cloud.google.com/data-catalog/docs/how-to/template-user) role that
 *  includes a permission to use the tag template to tag resources.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplate : GTLRObject

/**
 *  Display name for this template. Defaults to an empty string. The name must
 *  contain only Unicode letters, numbers (0-9), underscores (_), dashes (-),
 *  spaces ( ), and can't start or end with spaces. The maximum length is 200
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Required. Map of tag template field IDs to the settings for the field. This
 *  map is an exhaustive list of the allowed fields. The map must contain at
 *  least one field and at most 500 fields. The keys to this map are tag
 *  template field IDs. The IDs have the following limitations: * Can contain
 *  uppercase and lowercase letters, numbers (0-9) and underscores (_). * Must
 *  be at least 1 character and at most 64 characters long. * Must start with a
 *  letter or underscore.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplate_Fields *fields;

/**
 *  Indicates whether tags created with this template are public. Public tags do
 *  not require tag template access to appear in ListTags API response.
 *  Additionally, you can search for a public tag by value with a simple search
 *  query in addition to using a ``tag:`` predicate.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isPubliclyReadable;

/**
 *  The resource name of the tag template in URL format. Note: The tag template
 *  itself and its child resources might not be stored in the location specified
 *  in its name.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Required. Map of tag template field IDs to the settings for the field. This
 *  map is an exhaustive list of the allowed fields. The map must contain at
 *  least one field and at most 500 fields. The keys to this map are tag
 *  template field IDs. The IDs have the following limitations: * Can contain
 *  uppercase and lowercase letters, numbers (0-9) and underscores (_). * Must
 *  be at least 1 character and at most 64 characters long. * Must start with a
 *  letter or underscore.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplateField. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplate_Fields : GTLRObject
@end


/**
 *  The template for an individual field within a tag template.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1TagTemplateField : GTLRObject

/**
 *  The description for this field. Defaults to an empty string.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The display name for this field. Defaults to an empty string. The name must
 *  contain only Unicode letters, numbers (0-9), underscores (_), dashes (-),
 *  spaces ( ), and can't start or end with spaces. The maximum length is 200
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  If true, this field is required. Defaults to false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isRequired;

/**
 *  Output only. The resource name of the tag template field in URL format.
 *  Example:
 *  `projects/{PROJECT_ID}/locations/{LOCATION}/tagTemplates/{TAG_TEMPLATE}/fields/{FIELD}`
 *  Note: The tag template field itself might not be stored in the location
 *  specified in its name. The name must contain only letters (a-z, A-Z),
 *  numbers (0-9), or underscores (_), and must start with a letter or
 *  underscore. The maximum length is 64 characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The order of this field with respect to other fields in this tag template.
 *  For example, a higher value can indicate a more important field. The value
 *  can be negative. Multiple fields can have the same order and field orders
 *  within a tag don't have to be sequential.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *order;

/** Required. The type of value this tag field can contain. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1FieldType *type;

@end


/**
 *  A taxonomy is a collection of hierarchical policy tags that classify data
 *  along a common axis. For example, a "data sensitivity" taxonomy might
 *  contain the following policy tags: ``` + PII + Account number + Age + SSN +
 *  Zipcode + Financials + Revenue ``` A "data origin" taxonomy might contain
 *  the following policy tags: ``` + User data + Employee data + Partner data +
 *  Public data ```
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1Taxonomy : GTLRObject

/**
 *  Optional. A list of policy types that are activated for this taxonomy. If
 *  not set, defaults to an empty list.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *activatedPolicyTypes;

/**
 *  Optional. Description of this taxonomy. If not set, defaults to empty. The
 *  description must contain only Unicode characters, tabs, newlines, carriage
 *  returns, and page breaks, and be at most 2000 bytes long when encoded in
 *  UTF-8.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. User-defined name of this taxonomy. The name can't start or end
 *  with spaces, must contain only Unicode letters, numbers, underscores,
 *  dashes, and spaces, and be at most 200 bytes long when encoded in UTF-8. The
 *  taxonomy display name must be unique within an organization.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. Resource name of this taxonomy in URL format. Note: Policy tag
 *  manager generates unique taxonomy IDs.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Number of policy tags in this taxonomy.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *policyTagCount;

/** Output only. Creation and modification timestamps of this taxonomy. */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1SystemTimestamps *taxonomyTimestamps;

@end


/**
 *  Request message for UnstarEntry.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1UnstarEntryRequest : GTLRObject
@end


/**
 *  Response message for UnstarEntry. Empty for now
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1UnstarEntryResponse : GTLRObject
@end


/**
 *  The set of all usage signals that Data Catalog stores. Note: Usually, these
 *  signals are updated daily. In rare cases, an update may fail but will be
 *  performed again on the next day.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1UsageSignal : GTLRObject

/** The end timestamp of the duration of usage statistics. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Output only. BigQuery usage statistics over each of the predefined time
 *  ranges. Supported time ranges are `{"24H", "7D", "30D"}`.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_GoogleCloudDatacatalogV1UsageSignal_UsageWithinTimeRange *usageWithinTimeRange;

@end


/**
 *  Output only. BigQuery usage statistics over each of the predefined time
 *  ranges. Supported time ranges are `{"24H", "7D", "30D"}`.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDataCatalog_GoogleCloudDatacatalogV1UsageStats. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1UsageSignal_UsageWithinTimeRange : GTLRObject
@end


/**
 *  Detailed statistics on the entry's usage. Usage statistics have the
 *  following limitations: - Only BigQuery tables have them. - They only include
 *  BigQuery query jobs. - They might be underestimated because wildcard table
 *  references are not yet counted. For more information, see [Querying multiple
 *  tables using a wildcard table]
 *  (https://cloud.google.com/bigquery/docs/querying-wildcard-tables)
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1UsageStats : GTLRObject

/**
 *  The number of cancelled attempts to use the underlying entry.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalCancellations;

/**
 *  The number of successful uses of the underlying entry.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalCompletions;

/**
 *  Total time spent only on successful uses, in milliseconds.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalExecutionTimeForCompletionsMillis;

/**
 *  The number of failed attempts to use the underlying entry.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalFailures;

@end


/**
 *  Table view specification.
 */
@interface GTLRDataCatalog_GoogleCloudDatacatalogV1ViewSpec : GTLRObject

/** Output only. The query that defines the table view. */
@property(nonatomic, copy, nullable) NSString *viewQuery;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
 *  user:mike\@example.com - group:admins\@example.com - domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRDataCatalog_Policy : GTLRObject

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataCatalog_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRDataCatalog_SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Google Cloud services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRDataCatalog_Policy *policy;

@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRDataCatalog_TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRDataCatalog_TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
