// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Gmail Postmaster Tools API (gmailpostmastertools/v1)
// Description:
//   The Postmaster Tools API is a RESTful API that provides programmatic access
//   to email traffic metrics (like spam reports, delivery errors etc) otherwise
//   available through the Gmail Postmaster Tools UI currently.
// Documentation:
//   https://developers.google.com/gmail/postmaster

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Postmaster Tools query classes.
 */
@interface GTLRPostmasterToolsQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets a specific domain registered by the client. Returns NOT_FOUND if the
 *  domain does not exist.
 *
 *  Method: gmailpostmastertools.domains.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopePostmasterToolsPostmasterReadonly
 */
@interface GTLRPostmasterToolsQuery_DomainsGet : GTLRPostmasterToolsQuery

/**
 *  The resource name of the domain. It should have the form
 *  `domains/{domain_name}`, where domain_name is the fully qualified domain
 *  name.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRPostmasterTools_Domain.
 *
 *  Gets a specific domain registered by the client. Returns NOT_FOUND if the
 *  domain does not exist.
 *
 *  @param name The resource name of the domain. It should have the form
 *    `domains/{domain_name}`, where domain_name is the fully qualified domain
 *    name.
 *
 *  @return GTLRPostmasterToolsQuery_DomainsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the domains that have been registered by the client. The order of
 *  domains in the response is unspecified and non-deterministic. Newly created
 *  domains will not necessarily be added to the end of this list.
 *
 *  Method: gmailpostmastertools.domains.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopePostmasterToolsPostmasterReadonly
 */
@interface GTLRPostmasterToolsQuery_DomainsList : GTLRPostmasterToolsQuery

/**
 *  Requested page size. Server may return fewer domains than requested. If
 *  unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous List request, if any.
 *  This is the value of ListDomainsResponse.next_page_token returned from the
 *  previous call to `ListDomains` method.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRPostmasterTools_ListDomainsResponse.
 *
 *  Lists the domains that have been registered by the client. The order of
 *  domains in the response is unspecified and non-deterministic. Newly created
 *  domains will not necessarily be added to the end of this list.
 *
 *  @return GTLRPostmasterToolsQuery_DomainsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Get traffic statistics for a domain on a specific date. Returns
 *  PERMISSION_DENIED if user does not have permission to access TrafficStats
 *  for the domain.
 *
 *  Method: gmailpostmastertools.domains.trafficStats.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopePostmasterToolsPostmasterReadonly
 */
@interface GTLRPostmasterToolsQuery_DomainsTrafficStatsGet : GTLRPostmasterToolsQuery

/**
 *  The resource name of the traffic statistics to get. E.g.,
 *  domains/mymail.mydomain.com/trafficStats/20160807.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRPostmasterTools_TrafficStats.
 *
 *  Get traffic statistics for a domain on a specific date. Returns
 *  PERMISSION_DENIED if user does not have permission to access TrafficStats
 *  for the domain.
 *
 *  @param name The resource name of the traffic statistics to get. E.g.,
 *    domains/mymail.mydomain.com/trafficStats/20160807.
 *
 *  @return GTLRPostmasterToolsQuery_DomainsTrafficStatsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List traffic statistics for all available days. Returns PERMISSION_DENIED if
 *  user does not have permission to access TrafficStats for the domain.
 *
 *  Method: gmailpostmastertools.domains.trafficStats.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopePostmasterToolsPostmasterReadonly
 */
@interface GTLRPostmasterToolsQuery_DomainsTrafficStatsList : GTLRPostmasterToolsQuery

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 */
@property(nonatomic, assign) NSInteger endDateDay;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 */
@property(nonatomic, assign) NSInteger endDateMonth;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 */
@property(nonatomic, assign) NSInteger endDateYear;

/**
 *  Requested page size. Server may return fewer TrafficStats than requested. If
 *  unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The next_page_token value returned from a previous List request, if any.
 *  This is the value of ListTrafficStatsResponse.next_page_token returned from
 *  the previous call to `ListTrafficStats` method.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The resource name of the domain whose traffic statistics we'd like to list.
 *  It should have the form `domains/{domain_name}`, where domain_name is the
 *  fully qualified domain name.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 */
@property(nonatomic, assign) NSInteger startDateDay;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 */
@property(nonatomic, assign) NSInteger startDateMonth;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 */
@property(nonatomic, assign) NSInteger startDateYear;

/**
 *  Fetches a @c GTLRPostmasterTools_ListTrafficStatsResponse.
 *
 *  List traffic statistics for all available days. Returns PERMISSION_DENIED if
 *  user does not have permission to access TrafficStats for the domain.
 *
 *  @param parent The resource name of the domain whose traffic statistics we'd
 *    like to list. It should have the form `domains/{domain_name}`, where
 *    domain_name is the fully qualified domain name.
 *
 *  @return GTLRPostmasterToolsQuery_DomainsTrafficStatsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
