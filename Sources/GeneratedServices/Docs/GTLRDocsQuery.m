// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Docs API (docs/v1)
// Description:
//   Reads and writes Google Docs documents.
// Documentation:
//   https://developers.google.com/docs/

#import <GoogleAPIClientForREST/GTLRDocsQuery.h>

// ----------------------------------------------------------------------------
// Constants

// suggestionsViewMode
NSString * const kGTLRDocsSuggestionsViewModeDefaultForCurrentAccess = @"DEFAULT_FOR_CURRENT_ACCESS";
NSString * const kGTLRDocsSuggestionsViewModePreviewSuggestionsAccepted = @"PREVIEW_SUGGESTIONS_ACCEPTED";
NSString * const kGTLRDocsSuggestionsViewModePreviewWithoutSuggestions = @"PREVIEW_WITHOUT_SUGGESTIONS";
NSString * const kGTLRDocsSuggestionsViewModeSuggestionsInline = @"SUGGESTIONS_INLINE";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRDocsQuery

@dynamic fields;

@end

@implementation GTLRDocsQuery_DocumentsBatchUpdate

@dynamic documentId;

+ (instancetype)queryWithObject:(GTLRDocs_BatchUpdateDocumentRequest *)object
                     documentId:(NSString *)documentId {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"documentId" ];
  NSString *pathURITemplate = @"v1/documents/{documentId}:batchUpdate";
  GTLRDocsQuery_DocumentsBatchUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.documentId = documentId;
  query.expectedObjectClass = [GTLRDocs_BatchUpdateDocumentResponse class];
  query.loggingName = @"docs.documents.batchUpdate";
  return query;
}

@end

@implementation GTLRDocsQuery_DocumentsCreate

+ (instancetype)queryWithObject:(GTLRDocs_Document *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v1/documents";
  GTLRDocsQuery_DocumentsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRDocs_Document class];
  query.loggingName = @"docs.documents.create";
  return query;
}

@end

@implementation GTLRDocsQuery_DocumentsGet

@dynamic documentId, suggestionsViewMode;

+ (instancetype)queryWithDocumentId:(NSString *)documentId {
  NSArray *pathParams = @[ @"documentId" ];
  NSString *pathURITemplate = @"v1/documents/{documentId}";
  GTLRDocsQuery_DocumentsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.documentId = documentId;
  query.expectedObjectClass = [GTLRDocs_Document class];
  query.loggingName = @"docs.documents.get";
  return query;
}

@end
