// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Docs API (docs/v1)
// Description:
//   Reads and writes Google Docs documents.
// Documentation:
//   https://developers.google.com/docs/

#import <GoogleAPIClientForREST/GTLRDocsObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRDocs_AutoText.type
NSString * const kGTLRDocs_AutoText_Type_PageCount       = @"PAGE_COUNT";
NSString * const kGTLRDocs_AutoText_Type_PageNumber      = @"PAGE_NUMBER";
NSString * const kGTLRDocs_AutoText_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRDocs_CreateFooterRequest.type
NSString * const kGTLRDocs_CreateFooterRequest_Type_Default    = @"DEFAULT";
NSString * const kGTLRDocs_CreateFooterRequest_Type_HeaderFooterTypeUnspecified = @"HEADER_FOOTER_TYPE_UNSPECIFIED";

// GTLRDocs_CreateHeaderRequest.type
NSString * const kGTLRDocs_CreateHeaderRequest_Type_Default    = @"DEFAULT";
NSString * const kGTLRDocs_CreateHeaderRequest_Type_HeaderFooterTypeUnspecified = @"HEADER_FOOTER_TYPE_UNSPECIFIED";

// GTLRDocs_CreateParagraphBulletsRequest.bulletPreset
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_BulletArrow3dCircleSquare = @"BULLET_ARROW3D_CIRCLE_SQUARE";
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_BulletArrowDiamondDisc = @"BULLET_ARROW_DIAMOND_DISC";
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_BulletCheckbox = @"BULLET_CHECKBOX";
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_BulletDiamondCircleSquare = @"BULLET_DIAMOND_CIRCLE_SQUARE";
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_BulletDiamondxArrow3dSquare = @"BULLET_DIAMONDX_ARROW3D_SQUARE";
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_BulletDiamondxHollowdiamondSquare = @"BULLET_DIAMONDX_HOLLOWDIAMOND_SQUARE";
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_BulletDiscCircleSquare = @"BULLET_DISC_CIRCLE_SQUARE";
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_BulletGlyphPresetUnspecified = @"BULLET_GLYPH_PRESET_UNSPECIFIED";
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_BulletLefttriangleDiamondDisc = @"BULLET_LEFTTRIANGLE_DIAMOND_DISC";
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_BulletStarCircleSquare = @"BULLET_STAR_CIRCLE_SQUARE";
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_NumberedDecimalAlphaRoman = @"NUMBERED_DECIMAL_ALPHA_ROMAN";
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_NumberedDecimalAlphaRomanParens = @"NUMBERED_DECIMAL_ALPHA_ROMAN_PARENS";
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_NumberedDecimalNested = @"NUMBERED_DECIMAL_NESTED";
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_NumberedUpperalphaAlphaRoman = @"NUMBERED_UPPERALPHA_ALPHA_ROMAN";
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_NumberedUpperromanUpperalphaDecimal = @"NUMBERED_UPPERROMAN_UPPERALPHA_DECIMAL";
NSString * const kGTLRDocs_CreateParagraphBulletsRequest_BulletPreset_NumberedZerodecimalAlphaRoman = @"NUMBERED_ZERODECIMAL_ALPHA_ROMAN";

// GTLRDocs_Dimension.unit
NSString * const kGTLRDocs_Dimension_Unit_Pt              = @"PT";
NSString * const kGTLRDocs_Dimension_Unit_UnitUnspecified = @"UNIT_UNSPECIFIED";

// GTLRDocs_Document.suggestionsViewMode
NSString * const kGTLRDocs_Document_SuggestionsViewMode_DefaultForCurrentAccess = @"DEFAULT_FOR_CURRENT_ACCESS";
NSString * const kGTLRDocs_Document_SuggestionsViewMode_PreviewSuggestionsAccepted = @"PREVIEW_SUGGESTIONS_ACCEPTED";
NSString * const kGTLRDocs_Document_SuggestionsViewMode_PreviewWithoutSuggestions = @"PREVIEW_WITHOUT_SUGGESTIONS";
NSString * const kGTLRDocs_Document_SuggestionsViewMode_SuggestionsInline = @"SUGGESTIONS_INLINE";

// GTLRDocs_EmbeddedObjectBorder.dashStyle
NSString * const kGTLRDocs_EmbeddedObjectBorder_DashStyle_Dash = @"DASH";
NSString * const kGTLRDocs_EmbeddedObjectBorder_DashStyle_DashStyleUnspecified = @"DASH_STYLE_UNSPECIFIED";
NSString * const kGTLRDocs_EmbeddedObjectBorder_DashStyle_Dot  = @"DOT";
NSString * const kGTLRDocs_EmbeddedObjectBorder_DashStyle_Solid = @"SOLID";

// GTLRDocs_EmbeddedObjectBorder.propertyState
NSString * const kGTLRDocs_EmbeddedObjectBorder_PropertyState_NotRendered = @"NOT_RENDERED";
NSString * const kGTLRDocs_EmbeddedObjectBorder_PropertyState_Rendered = @"RENDERED";

// GTLRDocs_InsertSectionBreakRequest.sectionType
NSString * const kGTLRDocs_InsertSectionBreakRequest_SectionType_Continuous = @"CONTINUOUS";
NSString * const kGTLRDocs_InsertSectionBreakRequest_SectionType_NextPage = @"NEXT_PAGE";
NSString * const kGTLRDocs_InsertSectionBreakRequest_SectionType_SectionTypeUnspecified = @"SECTION_TYPE_UNSPECIFIED";

// GTLRDocs_NamedStyle.namedStyleType
NSString * const kGTLRDocs_NamedStyle_NamedStyleType_Heading1  = @"HEADING_1";
NSString * const kGTLRDocs_NamedStyle_NamedStyleType_Heading2  = @"HEADING_2";
NSString * const kGTLRDocs_NamedStyle_NamedStyleType_Heading3  = @"HEADING_3";
NSString * const kGTLRDocs_NamedStyle_NamedStyleType_Heading4  = @"HEADING_4";
NSString * const kGTLRDocs_NamedStyle_NamedStyleType_Heading5  = @"HEADING_5";
NSString * const kGTLRDocs_NamedStyle_NamedStyleType_Heading6  = @"HEADING_6";
NSString * const kGTLRDocs_NamedStyle_NamedStyleType_NamedStyleTypeUnspecified = @"NAMED_STYLE_TYPE_UNSPECIFIED";
NSString * const kGTLRDocs_NamedStyle_NamedStyleType_NormalText = @"NORMAL_TEXT";
NSString * const kGTLRDocs_NamedStyle_NamedStyleType_Subtitle  = @"SUBTITLE";
NSString * const kGTLRDocs_NamedStyle_NamedStyleType_Title     = @"TITLE";

// GTLRDocs_NamedStyleSuggestionState.namedStyleType
NSString * const kGTLRDocs_NamedStyleSuggestionState_NamedStyleType_Heading1 = @"HEADING_1";
NSString * const kGTLRDocs_NamedStyleSuggestionState_NamedStyleType_Heading2 = @"HEADING_2";
NSString * const kGTLRDocs_NamedStyleSuggestionState_NamedStyleType_Heading3 = @"HEADING_3";
NSString * const kGTLRDocs_NamedStyleSuggestionState_NamedStyleType_Heading4 = @"HEADING_4";
NSString * const kGTLRDocs_NamedStyleSuggestionState_NamedStyleType_Heading5 = @"HEADING_5";
NSString * const kGTLRDocs_NamedStyleSuggestionState_NamedStyleType_Heading6 = @"HEADING_6";
NSString * const kGTLRDocs_NamedStyleSuggestionState_NamedStyleType_NamedStyleTypeUnspecified = @"NAMED_STYLE_TYPE_UNSPECIFIED";
NSString * const kGTLRDocs_NamedStyleSuggestionState_NamedStyleType_NormalText = @"NORMAL_TEXT";
NSString * const kGTLRDocs_NamedStyleSuggestionState_NamedStyleType_Subtitle = @"SUBTITLE";
NSString * const kGTLRDocs_NamedStyleSuggestionState_NamedStyleType_Title = @"TITLE";

// GTLRDocs_NestingLevel.bulletAlignment
NSString * const kGTLRDocs_NestingLevel_BulletAlignment_BulletAlignmentUnspecified = @"BULLET_ALIGNMENT_UNSPECIFIED";
NSString * const kGTLRDocs_NestingLevel_BulletAlignment_Center = @"CENTER";
NSString * const kGTLRDocs_NestingLevel_BulletAlignment_End    = @"END";
NSString * const kGTLRDocs_NestingLevel_BulletAlignment_Start  = @"START";

// GTLRDocs_NestingLevel.glyphType
NSString * const kGTLRDocs_NestingLevel_GlyphType_Alpha        = @"ALPHA";
NSString * const kGTLRDocs_NestingLevel_GlyphType_Decimal      = @"DECIMAL";
NSString * const kGTLRDocs_NestingLevel_GlyphType_GlyphTypeUnspecified = @"GLYPH_TYPE_UNSPECIFIED";
NSString * const kGTLRDocs_NestingLevel_GlyphType_None         = @"NONE";
NSString * const kGTLRDocs_NestingLevel_GlyphType_Roman        = @"ROMAN";
NSString * const kGTLRDocs_NestingLevel_GlyphType_UpperAlpha   = @"UPPER_ALPHA";
NSString * const kGTLRDocs_NestingLevel_GlyphType_UpperRoman   = @"UPPER_ROMAN";
NSString * const kGTLRDocs_NestingLevel_GlyphType_ZeroDecimal  = @"ZERO_DECIMAL";

// GTLRDocs_ParagraphBorder.dashStyle
NSString * const kGTLRDocs_ParagraphBorder_DashStyle_Dash      = @"DASH";
NSString * const kGTLRDocs_ParagraphBorder_DashStyle_DashStyleUnspecified = @"DASH_STYLE_UNSPECIFIED";
NSString * const kGTLRDocs_ParagraphBorder_DashStyle_Dot       = @"DOT";
NSString * const kGTLRDocs_ParagraphBorder_DashStyle_Solid     = @"SOLID";

// GTLRDocs_ParagraphStyle.alignment
NSString * const kGTLRDocs_ParagraphStyle_Alignment_AlignmentUnspecified = @"ALIGNMENT_UNSPECIFIED";
NSString * const kGTLRDocs_ParagraphStyle_Alignment_Center     = @"CENTER";
NSString * const kGTLRDocs_ParagraphStyle_Alignment_End        = @"END";
NSString * const kGTLRDocs_ParagraphStyle_Alignment_Justified  = @"JUSTIFIED";
NSString * const kGTLRDocs_ParagraphStyle_Alignment_Start      = @"START";

// GTLRDocs_ParagraphStyle.direction
NSString * const kGTLRDocs_ParagraphStyle_Direction_ContentDirectionUnspecified = @"CONTENT_DIRECTION_UNSPECIFIED";
NSString * const kGTLRDocs_ParagraphStyle_Direction_LeftToRight = @"LEFT_TO_RIGHT";
NSString * const kGTLRDocs_ParagraphStyle_Direction_RightToLeft = @"RIGHT_TO_LEFT";

// GTLRDocs_ParagraphStyle.namedStyleType
NSString * const kGTLRDocs_ParagraphStyle_NamedStyleType_Heading1 = @"HEADING_1";
NSString * const kGTLRDocs_ParagraphStyle_NamedStyleType_Heading2 = @"HEADING_2";
NSString * const kGTLRDocs_ParagraphStyle_NamedStyleType_Heading3 = @"HEADING_3";
NSString * const kGTLRDocs_ParagraphStyle_NamedStyleType_Heading4 = @"HEADING_4";
NSString * const kGTLRDocs_ParagraphStyle_NamedStyleType_Heading5 = @"HEADING_5";
NSString * const kGTLRDocs_ParagraphStyle_NamedStyleType_Heading6 = @"HEADING_6";
NSString * const kGTLRDocs_ParagraphStyle_NamedStyleType_NamedStyleTypeUnspecified = @"NAMED_STYLE_TYPE_UNSPECIFIED";
NSString * const kGTLRDocs_ParagraphStyle_NamedStyleType_NormalText = @"NORMAL_TEXT";
NSString * const kGTLRDocs_ParagraphStyle_NamedStyleType_Subtitle = @"SUBTITLE";
NSString * const kGTLRDocs_ParagraphStyle_NamedStyleType_Title = @"TITLE";

// GTLRDocs_ParagraphStyle.spacingMode
NSString * const kGTLRDocs_ParagraphStyle_SpacingMode_CollapseLists = @"COLLAPSE_LISTS";
NSString * const kGTLRDocs_ParagraphStyle_SpacingMode_NeverCollapse = @"NEVER_COLLAPSE";
NSString * const kGTLRDocs_ParagraphStyle_SpacingMode_SpacingModeUnspecified = @"SPACING_MODE_UNSPECIFIED";

// GTLRDocs_PositionedObjectPositioning.layout
NSString * const kGTLRDocs_PositionedObjectPositioning_Layout_BehindText = @"BEHIND_TEXT";
NSString * const kGTLRDocs_PositionedObjectPositioning_Layout_BreakLeft = @"BREAK_LEFT";
NSString * const kGTLRDocs_PositionedObjectPositioning_Layout_BreakLeftRight = @"BREAK_LEFT_RIGHT";
NSString * const kGTLRDocs_PositionedObjectPositioning_Layout_BreakRight = @"BREAK_RIGHT";
NSString * const kGTLRDocs_PositionedObjectPositioning_Layout_InFrontOfText = @"IN_FRONT_OF_TEXT";
NSString * const kGTLRDocs_PositionedObjectPositioning_Layout_PositionedObjectLayoutUnspecified = @"POSITIONED_OBJECT_LAYOUT_UNSPECIFIED";
NSString * const kGTLRDocs_PositionedObjectPositioning_Layout_WrapText = @"WRAP_TEXT";

// GTLRDocs_ReplaceImageRequest.imageReplaceMethod
NSString * const kGTLRDocs_ReplaceImageRequest_ImageReplaceMethod_CenterCrop = @"CENTER_CROP";
NSString * const kGTLRDocs_ReplaceImageRequest_ImageReplaceMethod_ImageReplaceMethodUnspecified = @"IMAGE_REPLACE_METHOD_UNSPECIFIED";

// GTLRDocs_SectionStyle.columnSeparatorStyle
NSString * const kGTLRDocs_SectionStyle_ColumnSeparatorStyle_BetweenEachColumn = @"BETWEEN_EACH_COLUMN";
NSString * const kGTLRDocs_SectionStyle_ColumnSeparatorStyle_ColumnSeparatorStyleUnspecified = @"COLUMN_SEPARATOR_STYLE_UNSPECIFIED";
NSString * const kGTLRDocs_SectionStyle_ColumnSeparatorStyle_None = @"NONE";

// GTLRDocs_SectionStyle.contentDirection
NSString * const kGTLRDocs_SectionStyle_ContentDirection_ContentDirectionUnspecified = @"CONTENT_DIRECTION_UNSPECIFIED";
NSString * const kGTLRDocs_SectionStyle_ContentDirection_LeftToRight = @"LEFT_TO_RIGHT";
NSString * const kGTLRDocs_SectionStyle_ContentDirection_RightToLeft = @"RIGHT_TO_LEFT";

// GTLRDocs_SectionStyle.sectionType
NSString * const kGTLRDocs_SectionStyle_SectionType_Continuous = @"CONTINUOUS";
NSString * const kGTLRDocs_SectionStyle_SectionType_NextPage   = @"NEXT_PAGE";
NSString * const kGTLRDocs_SectionStyle_SectionType_SectionTypeUnspecified = @"SECTION_TYPE_UNSPECIFIED";

// GTLRDocs_TableCellBorder.dashStyle
NSString * const kGTLRDocs_TableCellBorder_DashStyle_Dash      = @"DASH";
NSString * const kGTLRDocs_TableCellBorder_DashStyle_DashStyleUnspecified = @"DASH_STYLE_UNSPECIFIED";
NSString * const kGTLRDocs_TableCellBorder_DashStyle_Dot       = @"DOT";
NSString * const kGTLRDocs_TableCellBorder_DashStyle_Solid     = @"SOLID";

// GTLRDocs_TableCellStyle.contentAlignment
NSString * const kGTLRDocs_TableCellStyle_ContentAlignment_Bottom = @"BOTTOM";
NSString * const kGTLRDocs_TableCellStyle_ContentAlignment_ContentAlignmentUnspecified = @"CONTENT_ALIGNMENT_UNSPECIFIED";
NSString * const kGTLRDocs_TableCellStyle_ContentAlignment_ContentAlignmentUnsupported = @"CONTENT_ALIGNMENT_UNSUPPORTED";
NSString * const kGTLRDocs_TableCellStyle_ContentAlignment_Middle = @"MIDDLE";
NSString * const kGTLRDocs_TableCellStyle_ContentAlignment_Top = @"TOP";

// GTLRDocs_TableColumnProperties.widthType
NSString * const kGTLRDocs_TableColumnProperties_WidthType_EvenlyDistributed = @"EVENLY_DISTRIBUTED";
NSString * const kGTLRDocs_TableColumnProperties_WidthType_FixedWidth = @"FIXED_WIDTH";
NSString * const kGTLRDocs_TableColumnProperties_WidthType_WidthTypeUnspecified = @"WIDTH_TYPE_UNSPECIFIED";

// GTLRDocs_TabStop.alignment
NSString * const kGTLRDocs_TabStop_Alignment_Center            = @"CENTER";
NSString * const kGTLRDocs_TabStop_Alignment_End               = @"END";
NSString * const kGTLRDocs_TabStop_Alignment_Start             = @"START";
NSString * const kGTLRDocs_TabStop_Alignment_TabStopAlignmentUnspecified = @"TAB_STOP_ALIGNMENT_UNSPECIFIED";

// GTLRDocs_TextStyle.baselineOffset
NSString * const kGTLRDocs_TextStyle_BaselineOffset_BaselineOffsetUnspecified = @"BASELINE_OFFSET_UNSPECIFIED";
NSString * const kGTLRDocs_TextStyle_BaselineOffset_None       = @"NONE";
NSString * const kGTLRDocs_TextStyle_BaselineOffset_Subscript  = @"SUBSCRIPT";
NSString * const kGTLRDocs_TextStyle_BaselineOffset_Superscript = @"SUPERSCRIPT";

// ----------------------------------------------------------------------------
//
//   GTLRDocs_AutoText
//

@implementation GTLRDocs_AutoText
@dynamic suggestedDeletionIds, suggestedInsertionIds, suggestedTextStyleChanges,
         textStyle, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class],
    @"suggestedInsertionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_AutoText_SuggestedTextStyleChanges
//

@implementation GTLRDocs_AutoText_SuggestedTextStyleChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedTextStyle class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Background
//

@implementation GTLRDocs_Background
@dynamic color;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_BackgroundSuggestionState
//

@implementation GTLRDocs_BackgroundSuggestionState
@dynamic backgroundColorSuggested;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_BatchUpdateDocumentRequest
//

@implementation GTLRDocs_BatchUpdateDocumentRequest
@dynamic requests, writeControl;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"requests" : [GTLRDocs_Request class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_BatchUpdateDocumentResponse
//

@implementation GTLRDocs_BatchUpdateDocumentResponse
@dynamic documentId, replies, writeControl;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"replies" : [GTLRDocs_Response class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Body
//

@implementation GTLRDocs_Body
@dynamic content;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"content" : [GTLRDocs_StructuralElement class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Bullet
//

@implementation GTLRDocs_Bullet
@dynamic listId, nestingLevel, textStyle;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_BulletSuggestionState
//

@implementation GTLRDocs_BulletSuggestionState
@dynamic listIdSuggested, nestingLevelSuggested, textStyleSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Color
//

@implementation GTLRDocs_Color
@dynamic rgbColor;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ColumnBreak
//

@implementation GTLRDocs_ColumnBreak
@dynamic suggestedDeletionIds, suggestedInsertionIds, suggestedTextStyleChanges,
         textStyle;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class],
    @"suggestedInsertionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ColumnBreak_SuggestedTextStyleChanges
//

@implementation GTLRDocs_ColumnBreak_SuggestedTextStyleChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedTextStyle class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_CreateFooterRequest
//

@implementation GTLRDocs_CreateFooterRequest
@dynamic sectionBreakLocation, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_CreateFooterResponse
//

@implementation GTLRDocs_CreateFooterResponse
@dynamic footerId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_CreateFootnoteRequest
//

@implementation GTLRDocs_CreateFootnoteRequest
@dynamic endOfSegmentLocation, location;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_CreateFootnoteResponse
//

@implementation GTLRDocs_CreateFootnoteResponse
@dynamic footnoteId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_CreateHeaderRequest
//

@implementation GTLRDocs_CreateHeaderRequest
@dynamic sectionBreakLocation, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_CreateHeaderResponse
//

@implementation GTLRDocs_CreateHeaderResponse
@dynamic headerId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_CreateNamedRangeRequest
//

@implementation GTLRDocs_CreateNamedRangeRequest
@dynamic name, range;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_CreateNamedRangeResponse
//

@implementation GTLRDocs_CreateNamedRangeResponse
@dynamic namedRangeId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_CreateParagraphBulletsRequest
//

@implementation GTLRDocs_CreateParagraphBulletsRequest
@dynamic bulletPreset, range;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_CropProperties
//

@implementation GTLRDocs_CropProperties
@dynamic angle, offsetBottom, offsetLeft, offsetRight, offsetTop;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_CropPropertiesSuggestionState
//

@implementation GTLRDocs_CropPropertiesSuggestionState
@dynamic angleSuggested, offsetBottomSuggested, offsetLeftSuggested,
         offsetRightSuggested, offsetTopSuggested;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_DeleteContentRangeRequest
//

@implementation GTLRDocs_DeleteContentRangeRequest
@dynamic range;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_DeleteFooterRequest
//

@implementation GTLRDocs_DeleteFooterRequest
@dynamic footerId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_DeleteHeaderRequest
//

@implementation GTLRDocs_DeleteHeaderRequest
@dynamic headerId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_DeleteNamedRangeRequest
//

@implementation GTLRDocs_DeleteNamedRangeRequest
@dynamic name, namedRangeId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_DeleteParagraphBulletsRequest
//

@implementation GTLRDocs_DeleteParagraphBulletsRequest
@dynamic range;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_DeletePositionedObjectRequest
//

@implementation GTLRDocs_DeletePositionedObjectRequest
@dynamic objectId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_DeleteTableColumnRequest
//

@implementation GTLRDocs_DeleteTableColumnRequest
@dynamic tableCellLocation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_DeleteTableRowRequest
//

@implementation GTLRDocs_DeleteTableRowRequest
@dynamic tableCellLocation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Dimension
//

@implementation GTLRDocs_Dimension
@dynamic magnitude, unit;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Document
//

@implementation GTLRDocs_Document
@dynamic body, documentId, documentStyle, footers, footnotes, headers,
         inlineObjects, lists, namedRanges, namedStyles, positionedObjects,
         revisionId, suggestedDocumentStyleChanges, suggestedNamedStylesChanges,
         suggestionsViewMode, title;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Document_Footers
//

@implementation GTLRDocs_Document_Footers

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_Footer class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Document_Footnotes
//

@implementation GTLRDocs_Document_Footnotes

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_Footnote class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Document_Headers
//

@implementation GTLRDocs_Document_Headers

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_Header class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Document_InlineObjects
//

@implementation GTLRDocs_Document_InlineObjects

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_InlineObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Document_Lists
//

@implementation GTLRDocs_Document_Lists

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_List class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Document_NamedRanges
//

@implementation GTLRDocs_Document_NamedRanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_NamedRanges class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Document_PositionedObjects
//

@implementation GTLRDocs_Document_PositionedObjects

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_PositionedObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Document_SuggestedDocumentStyleChanges
//

@implementation GTLRDocs_Document_SuggestedDocumentStyleChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedDocumentStyle class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Document_SuggestedNamedStylesChanges
//

@implementation GTLRDocs_Document_SuggestedNamedStylesChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedNamedStyles class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_DocumentStyle
//

@implementation GTLRDocs_DocumentStyle
@dynamic background, defaultFooterId, defaultHeaderId, evenPageFooterId,
         evenPageHeaderId, firstPageFooterId, firstPageHeaderId, marginBottom,
         marginFooter, marginHeader, marginLeft, marginRight, marginTop,
         pageNumberStart, pageSize, useCustomHeaderFooterMargins,
         useEvenPageHeaderFooter, useFirstPageHeaderFooter;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_DocumentStyleSuggestionState
//

@implementation GTLRDocs_DocumentStyleSuggestionState
@dynamic backgroundSuggestionState, defaultFooterIdSuggested,
         defaultHeaderIdSuggested, evenPageFooterIdSuggested,
         evenPageHeaderIdSuggested, firstPageFooterIdSuggested,
         firstPageHeaderIdSuggested, marginBottomSuggested,
         marginFooterSuggested, marginHeaderSuggested, marginLeftSuggested,
         marginRightSuggested, marginTopSuggested, pageNumberStartSuggested,
         pageSizeSuggestionState, useCustomHeaderFooterMarginsSuggested,
         useEvenPageHeaderFooterSuggested, useFirstPageHeaderFooterSuggested;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_EmbeddedDrawingProperties
//

@implementation GTLRDocs_EmbeddedDrawingProperties
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_EmbeddedDrawingPropertiesSuggestionState
//

@implementation GTLRDocs_EmbeddedDrawingPropertiesSuggestionState
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_EmbeddedObject
//

@implementation GTLRDocs_EmbeddedObject
@dynamic descriptionProperty, embeddedDrawingProperties, embeddedObjectBorder,
         imageProperties, linkedContentReference, marginBottom, marginLeft,
         marginRight, marginTop, size, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_EmbeddedObjectBorder
//

@implementation GTLRDocs_EmbeddedObjectBorder
@dynamic color, dashStyle, propertyState, width;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_EmbeddedObjectBorderSuggestionState
//

@implementation GTLRDocs_EmbeddedObjectBorderSuggestionState
@dynamic colorSuggested, dashStyleSuggested, propertyStateSuggested,
         widthSuggested;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_EmbeddedObjectSuggestionState
//

@implementation GTLRDocs_EmbeddedObjectSuggestionState
@dynamic descriptionSuggested, embeddedDrawingPropertiesSuggestionState,
         embeddedObjectBorderSuggestionState, imagePropertiesSuggestionState,
         linkedContentReferenceSuggestionState, marginBottomSuggested,
         marginLeftSuggested, marginRightSuggested, marginTopSuggested,
         sizeSuggestionState, titleSuggested;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_EndOfSegmentLocation
//

@implementation GTLRDocs_EndOfSegmentLocation
@dynamic segmentId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Equation
//

@implementation GTLRDocs_Equation
@dynamic suggestedDeletionIds, suggestedInsertionIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class],
    @"suggestedInsertionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Footer
//

@implementation GTLRDocs_Footer
@dynamic content, footerId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"content" : [GTLRDocs_StructuralElement class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Footnote
//

@implementation GTLRDocs_Footnote
@dynamic content, footnoteId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"content" : [GTLRDocs_StructuralElement class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_FootnoteReference
//

@implementation GTLRDocs_FootnoteReference
@dynamic footnoteId, footnoteNumber, suggestedDeletionIds,
         suggestedInsertionIds, suggestedTextStyleChanges, textStyle;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class],
    @"suggestedInsertionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_FootnoteReference_SuggestedTextStyleChanges
//

@implementation GTLRDocs_FootnoteReference_SuggestedTextStyleChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedTextStyle class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Header
//

@implementation GTLRDocs_Header
@dynamic content, headerId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"content" : [GTLRDocs_StructuralElement class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_HorizontalRule
//

@implementation GTLRDocs_HorizontalRule
@dynamic suggestedDeletionIds, suggestedInsertionIds, suggestedTextStyleChanges,
         textStyle;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class],
    @"suggestedInsertionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_HorizontalRule_SuggestedTextStyleChanges
//

@implementation GTLRDocs_HorizontalRule_SuggestedTextStyleChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedTextStyle class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ImageProperties
//

@implementation GTLRDocs_ImageProperties
@dynamic angle, brightness, contentUri, contrast, cropProperties, sourceUri,
         transparency;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ImagePropertiesSuggestionState
//

@implementation GTLRDocs_ImagePropertiesSuggestionState
@dynamic angleSuggested, brightnessSuggested, contentUriSuggested,
         contrastSuggested, cropPropertiesSuggestionState, sourceUriSuggested,
         transparencySuggested;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_InlineObject
//

@implementation GTLRDocs_InlineObject
@dynamic inlineObjectProperties, objectId, suggestedDeletionIds,
         suggestedInlineObjectPropertiesChanges, suggestedInsertionId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_InlineObject_SuggestedInlineObjectPropertiesChanges
//

@implementation GTLRDocs_InlineObject_SuggestedInlineObjectPropertiesChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedInlineObjectProperties class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_InlineObjectElement
//

@implementation GTLRDocs_InlineObjectElement
@dynamic inlineObjectId, suggestedDeletionIds, suggestedInsertionIds,
         suggestedTextStyleChanges, textStyle;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class],
    @"suggestedInsertionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_InlineObjectElement_SuggestedTextStyleChanges
//

@implementation GTLRDocs_InlineObjectElement_SuggestedTextStyleChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedTextStyle class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_InlineObjectProperties
//

@implementation GTLRDocs_InlineObjectProperties
@dynamic embeddedObject;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_InlineObjectPropertiesSuggestionState
//

@implementation GTLRDocs_InlineObjectPropertiesSuggestionState
@dynamic embeddedObjectSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_InsertInlineImageRequest
//

@implementation GTLRDocs_InsertInlineImageRequest
@dynamic endOfSegmentLocation, location, objectSize, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_InsertInlineImageResponse
//

@implementation GTLRDocs_InsertInlineImageResponse
@dynamic objectId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_InsertInlineSheetsChartResponse
//

@implementation GTLRDocs_InsertInlineSheetsChartResponse
@dynamic objectId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_InsertPageBreakRequest
//

@implementation GTLRDocs_InsertPageBreakRequest
@dynamic endOfSegmentLocation, location;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_InsertSectionBreakRequest
//

@implementation GTLRDocs_InsertSectionBreakRequest
@dynamic endOfSegmentLocation, location, sectionType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_InsertTableColumnRequest
//

@implementation GTLRDocs_InsertTableColumnRequest
@dynamic insertRight, tableCellLocation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_InsertTableRequest
//

@implementation GTLRDocs_InsertTableRequest
@dynamic columns, endOfSegmentLocation, location, rows;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_InsertTableRowRequest
//

@implementation GTLRDocs_InsertTableRowRequest
@dynamic insertBelow, tableCellLocation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_InsertTextRequest
//

@implementation GTLRDocs_InsertTextRequest
@dynamic endOfSegmentLocation, location, text;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Link
//

@implementation GTLRDocs_Link
@dynamic bookmarkId, headingId, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_LinkedContentReference
//

@implementation GTLRDocs_LinkedContentReference
@dynamic sheetsChartReference;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_LinkedContentReferenceSuggestionState
//

@implementation GTLRDocs_LinkedContentReferenceSuggestionState
@dynamic sheetsChartReferenceSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_List
//

@implementation GTLRDocs_List
@dynamic listProperties, suggestedDeletionIds, suggestedInsertionId,
         suggestedListPropertiesChanges;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_List_SuggestedListPropertiesChanges
//

@implementation GTLRDocs_List_SuggestedListPropertiesChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedListProperties class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ListProperties
//

@implementation GTLRDocs_ListProperties
@dynamic nestingLevels;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nestingLevels" : [GTLRDocs_NestingLevel class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ListPropertiesSuggestionState
//

@implementation GTLRDocs_ListPropertiesSuggestionState
@dynamic nestingLevelsSuggestionStates;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nestingLevelsSuggestionStates" : [GTLRDocs_NestingLevelSuggestionState class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Location
//

@implementation GTLRDocs_Location
@dynamic index, segmentId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_MergeTableCellsRequest
//

@implementation GTLRDocs_MergeTableCellsRequest
@dynamic tableRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_NamedRange
//

@implementation GTLRDocs_NamedRange
@dynamic name, namedRangeId, ranges;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"ranges" : [GTLRDocs_Range class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_NamedRanges
//

@implementation GTLRDocs_NamedRanges
@dynamic name, namedRanges;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"namedRanges" : [GTLRDocs_NamedRange class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_NamedStyle
//

@implementation GTLRDocs_NamedStyle
@dynamic namedStyleType, paragraphStyle, textStyle;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_NamedStyles
//

@implementation GTLRDocs_NamedStyles
@dynamic styles;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"styles" : [GTLRDocs_NamedStyle class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_NamedStylesSuggestionState
//

@implementation GTLRDocs_NamedStylesSuggestionState
@dynamic stylesSuggestionStates;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"stylesSuggestionStates" : [GTLRDocs_NamedStyleSuggestionState class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_NamedStyleSuggestionState
//

@implementation GTLRDocs_NamedStyleSuggestionState
@dynamic namedStyleType, paragraphStyleSuggestionState,
         textStyleSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_NestingLevel
//

@implementation GTLRDocs_NestingLevel
@dynamic bulletAlignment, glyphFormat, glyphSymbol, glyphType, indentFirstLine,
         indentStart, startNumber, textStyle;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_NestingLevelSuggestionState
//

@implementation GTLRDocs_NestingLevelSuggestionState
@dynamic bulletAlignmentSuggested, glyphFormatSuggested, glyphSymbolSuggested,
         glyphTypeSuggested, indentFirstLineSuggested, indentStartSuggested,
         startNumberSuggested, textStyleSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ObjectReferences
//

@implementation GTLRDocs_ObjectReferences
@dynamic objectIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"objectIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_OptionalColor
//

@implementation GTLRDocs_OptionalColor
@dynamic color;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_PageBreak
//

@implementation GTLRDocs_PageBreak
@dynamic suggestedDeletionIds, suggestedInsertionIds, suggestedTextStyleChanges,
         textStyle;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class],
    @"suggestedInsertionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_PageBreak_SuggestedTextStyleChanges
//

@implementation GTLRDocs_PageBreak_SuggestedTextStyleChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedTextStyle class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Paragraph
//

@implementation GTLRDocs_Paragraph
@dynamic bullet, elements, paragraphStyle, positionedObjectIds,
         suggestedBulletChanges, suggestedParagraphStyleChanges,
         suggestedPositionedObjectIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"elements" : [GTLRDocs_ParagraphElement class],
    @"positionedObjectIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Paragraph_SuggestedBulletChanges
//

@implementation GTLRDocs_Paragraph_SuggestedBulletChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedBullet class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Paragraph_SuggestedParagraphStyleChanges
//

@implementation GTLRDocs_Paragraph_SuggestedParagraphStyleChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedParagraphStyle class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Paragraph_SuggestedPositionedObjectIds
//

@implementation GTLRDocs_Paragraph_SuggestedPositionedObjectIds

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_ObjectReferences class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ParagraphBorder
//

@implementation GTLRDocs_ParagraphBorder
@dynamic color, dashStyle, padding, width;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ParagraphElement
//

@implementation GTLRDocs_ParagraphElement
@dynamic autoText, columnBreak, endIndex, equation, footnoteReference,
         horizontalRule, inlineObjectElement, pageBreak, person, richLink,
         startIndex, textRun;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ParagraphStyle
//

@implementation GTLRDocs_ParagraphStyle
@dynamic alignment, avoidWidowAndOrphan, borderBetween, borderBottom,
         borderLeft, borderRight, borderTop, direction, headingId, indentEnd,
         indentFirstLine, indentStart, keepLinesTogether, keepWithNext,
         lineSpacing, namedStyleType, pageBreakBefore, shading, spaceAbove,
         spaceBelow, spacingMode, tabStops;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"tabStops" : [GTLRDocs_TabStop class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ParagraphStyleSuggestionState
//

@implementation GTLRDocs_ParagraphStyleSuggestionState
@dynamic alignmentSuggested, avoidWidowAndOrphanSuggested,
         borderBetweenSuggested, borderBottomSuggested, borderLeftSuggested,
         borderRightSuggested, borderTopSuggested, directionSuggested,
         headingIdSuggested, indentEndSuggested, indentFirstLineSuggested,
         indentStartSuggested, keepLinesTogetherSuggested,
         keepWithNextSuggested, lineSpacingSuggested, namedStyleTypeSuggested,
         pageBreakBeforeSuggested, shadingSuggestionState, spaceAboveSuggested,
         spaceBelowSuggested, spacingModeSuggested;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Person
//

@implementation GTLRDocs_Person
@dynamic personId, personProperties, suggestedDeletionIds,
         suggestedInsertionIds, suggestedTextStyleChanges, textStyle;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class],
    @"suggestedInsertionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Person_SuggestedTextStyleChanges
//

@implementation GTLRDocs_Person_SuggestedTextStyleChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedTextStyle class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_PersonProperties
//

@implementation GTLRDocs_PersonProperties
@dynamic email, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_PinTableHeaderRowsRequest
//

@implementation GTLRDocs_PinTableHeaderRowsRequest
@dynamic pinnedHeaderRowsCount, tableStartLocation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_PositionedObject
//

@implementation GTLRDocs_PositionedObject
@dynamic objectId, positionedObjectProperties, suggestedDeletionIds,
         suggestedInsertionId, suggestedPositionedObjectPropertiesChanges;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_PositionedObject_SuggestedPositionedObjectPropertiesChanges
//

@implementation GTLRDocs_PositionedObject_SuggestedPositionedObjectPropertiesChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedPositionedObjectProperties class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_PositionedObjectPositioning
//

@implementation GTLRDocs_PositionedObjectPositioning
@dynamic layout, leftOffset, topOffset;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_PositionedObjectPositioningSuggestionState
//

@implementation GTLRDocs_PositionedObjectPositioningSuggestionState
@dynamic layoutSuggested, leftOffsetSuggested, topOffsetSuggested;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_PositionedObjectProperties
//

@implementation GTLRDocs_PositionedObjectProperties
@dynamic embeddedObject, positioning;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_PositionedObjectPropertiesSuggestionState
//

@implementation GTLRDocs_PositionedObjectPropertiesSuggestionState
@dynamic embeddedObjectSuggestionState, positioningSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Range
//

@implementation GTLRDocs_Range
@dynamic endIndex, segmentId, startIndex;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ReplaceAllTextRequest
//

@implementation GTLRDocs_ReplaceAllTextRequest
@dynamic containsText, replaceText;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ReplaceAllTextResponse
//

@implementation GTLRDocs_ReplaceAllTextResponse
@dynamic occurrencesChanged;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ReplaceImageRequest
//

@implementation GTLRDocs_ReplaceImageRequest
@dynamic imageObjectId, imageReplaceMethod, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ReplaceNamedRangeContentRequest
//

@implementation GTLRDocs_ReplaceNamedRangeContentRequest
@dynamic namedRangeId, namedRangeName, text;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Request
//

@implementation GTLRDocs_Request
@dynamic createFooter, createFootnote, createHeader, createNamedRange,
         createParagraphBullets, deleteContentRange, deleteFooter, deleteHeader,
         deleteNamedRange, deleteParagraphBullets, deletePositionedObject,
         deleteTableColumn, deleteTableRow, insertInlineImage, insertPageBreak,
         insertSectionBreak, insertTable, insertTableColumn, insertTableRow,
         insertText, mergeTableCells, pinTableHeaderRows, replaceAllText,
         replaceImage, replaceNamedRangeContent, unmergeTableCells,
         updateDocumentStyle, updateParagraphStyle, updateSectionStyle,
         updateTableCellStyle, updateTableColumnProperties, updateTableRowStyle,
         updateTextStyle;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Response
//

@implementation GTLRDocs_Response
@dynamic createFooter, createFootnote, createHeader, createNamedRange,
         insertInlineImage, insertInlineSheetsChart, replaceAllText;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_RgbColor
//

@implementation GTLRDocs_RgbColor
@dynamic blue, green, red;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_RichLink
//

@implementation GTLRDocs_RichLink
@dynamic richLinkId, richLinkProperties, suggestedDeletionIds,
         suggestedInsertionIds, suggestedTextStyleChanges, textStyle;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class],
    @"suggestedInsertionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_RichLink_SuggestedTextStyleChanges
//

@implementation GTLRDocs_RichLink_SuggestedTextStyleChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedTextStyle class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_RichLinkProperties
//

@implementation GTLRDocs_RichLinkProperties
@dynamic mimeType, title, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SectionBreak
//

@implementation GTLRDocs_SectionBreak
@dynamic sectionStyle, suggestedDeletionIds, suggestedInsertionIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class],
    @"suggestedInsertionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SectionColumnProperties
//

@implementation GTLRDocs_SectionColumnProperties
@dynamic paddingEnd, width;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SectionStyle
//

@implementation GTLRDocs_SectionStyle
@dynamic columnProperties, columnSeparatorStyle, contentDirection,
         defaultFooterId, defaultHeaderId, evenPageFooterId, evenPageHeaderId,
         firstPageFooterId, firstPageHeaderId, marginBottom, marginFooter,
         marginHeader, marginLeft, marginRight, marginTop, pageNumberStart,
         sectionType, useFirstPageHeaderFooter;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"columnProperties" : [GTLRDocs_SectionColumnProperties class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Shading
//

@implementation GTLRDocs_Shading
@dynamic backgroundColor;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_ShadingSuggestionState
//

@implementation GTLRDocs_ShadingSuggestionState
@dynamic backgroundColorSuggested;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SheetsChartReference
//

@implementation GTLRDocs_SheetsChartReference
@dynamic chartId, spreadsheetId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SheetsChartReferenceSuggestionState
//

@implementation GTLRDocs_SheetsChartReferenceSuggestionState
@dynamic chartIdSuggested, spreadsheetIdSuggested;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Size
//

@implementation GTLRDocs_Size
@dynamic height, width;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SizeSuggestionState
//

@implementation GTLRDocs_SizeSuggestionState
@dynamic heightSuggested, widthSuggested;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_StructuralElement
//

@implementation GTLRDocs_StructuralElement
@dynamic endIndex, paragraph, sectionBreak, startIndex, table, tableOfContents;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SubstringMatchCriteria
//

@implementation GTLRDocs_SubstringMatchCriteria
@dynamic matchCase, text;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SuggestedBullet
//

@implementation GTLRDocs_SuggestedBullet
@dynamic bullet, bulletSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SuggestedDocumentStyle
//

@implementation GTLRDocs_SuggestedDocumentStyle
@dynamic documentStyle, documentStyleSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SuggestedInlineObjectProperties
//

@implementation GTLRDocs_SuggestedInlineObjectProperties
@dynamic inlineObjectProperties, inlineObjectPropertiesSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SuggestedListProperties
//

@implementation GTLRDocs_SuggestedListProperties
@dynamic listProperties, listPropertiesSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SuggestedNamedStyles
//

@implementation GTLRDocs_SuggestedNamedStyles
@dynamic namedStyles, namedStylesSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SuggestedParagraphStyle
//

@implementation GTLRDocs_SuggestedParagraphStyle
@dynamic paragraphStyle, paragraphStyleSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SuggestedPositionedObjectProperties
//

@implementation GTLRDocs_SuggestedPositionedObjectProperties
@dynamic positionedObjectProperties, positionedObjectPropertiesSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SuggestedTableCellStyle
//

@implementation GTLRDocs_SuggestedTableCellStyle
@dynamic tableCellStyle, tableCellStyleSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SuggestedTableRowStyle
//

@implementation GTLRDocs_SuggestedTableRowStyle
@dynamic tableRowStyle, tableRowStyleSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_SuggestedTextStyle
//

@implementation GTLRDocs_SuggestedTextStyle
@dynamic textStyle, textStyleSuggestionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_Table
//

@implementation GTLRDocs_Table
@dynamic columns, rows, suggestedDeletionIds, suggestedInsertionIds, tableRows,
         tableStyle;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class],
    @"suggestedInsertionIds" : [NSString class],
    @"tableRows" : [GTLRDocs_TableRow class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TableCell
//

@implementation GTLRDocs_TableCell
@dynamic content, endIndex, startIndex, suggestedDeletionIds,
         suggestedInsertionIds, suggestedTableCellStyleChanges, tableCellStyle;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"content" : [GTLRDocs_StructuralElement class],
    @"suggestedDeletionIds" : [NSString class],
    @"suggestedInsertionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TableCell_SuggestedTableCellStyleChanges
//

@implementation GTLRDocs_TableCell_SuggestedTableCellStyleChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedTableCellStyle class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TableCellBorder
//

@implementation GTLRDocs_TableCellBorder
@dynamic color, dashStyle, width;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TableCellLocation
//

@implementation GTLRDocs_TableCellLocation
@dynamic columnIndex, rowIndex, tableStartLocation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TableCellStyle
//

@implementation GTLRDocs_TableCellStyle
@dynamic backgroundColor, borderBottom, borderLeft, borderRight, borderTop,
         columnSpan, contentAlignment, paddingBottom, paddingLeft, paddingRight,
         paddingTop, rowSpan;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TableCellStyleSuggestionState
//

@implementation GTLRDocs_TableCellStyleSuggestionState
@dynamic backgroundColorSuggested, borderBottomSuggested, borderLeftSuggested,
         borderRightSuggested, borderTopSuggested, columnSpanSuggested,
         contentAlignmentSuggested, paddingBottomSuggested,
         paddingLeftSuggested, paddingRightSuggested, paddingTopSuggested,
         rowSpanSuggested;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TableColumnProperties
//

@implementation GTLRDocs_TableColumnProperties
@dynamic width, widthType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TableOfContents
//

@implementation GTLRDocs_TableOfContents
@dynamic content, suggestedDeletionIds, suggestedInsertionIds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"content" : [GTLRDocs_StructuralElement class],
    @"suggestedDeletionIds" : [NSString class],
    @"suggestedInsertionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TableRange
//

@implementation GTLRDocs_TableRange
@dynamic columnSpan, rowSpan, tableCellLocation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TableRow
//

@implementation GTLRDocs_TableRow
@dynamic endIndex, startIndex, suggestedDeletionIds, suggestedInsertionIds,
         suggestedTableRowStyleChanges, tableCells, tableRowStyle;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class],
    @"suggestedInsertionIds" : [NSString class],
    @"tableCells" : [GTLRDocs_TableCell class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TableRow_SuggestedTableRowStyleChanges
//

@implementation GTLRDocs_TableRow_SuggestedTableRowStyleChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedTableRowStyle class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TableRowStyle
//

@implementation GTLRDocs_TableRowStyle
@dynamic minRowHeight, preventOverflow, tableHeader;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TableRowStyleSuggestionState
//

@implementation GTLRDocs_TableRowStyleSuggestionState
@dynamic minRowHeightSuggested;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TableStyle
//

@implementation GTLRDocs_TableStyle
@dynamic tableColumnProperties;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"tableColumnProperties" : [GTLRDocs_TableColumnProperties class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TabStop
//

@implementation GTLRDocs_TabStop
@dynamic alignment, offset;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TextRun
//

@implementation GTLRDocs_TextRun
@dynamic content, suggestedDeletionIds, suggestedInsertionIds,
         suggestedTextStyleChanges, textStyle;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"suggestedDeletionIds" : [NSString class],
    @"suggestedInsertionIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TextRun_SuggestedTextStyleChanges
//

@implementation GTLRDocs_TextRun_SuggestedTextStyleChanges

+ (Class)classForAdditionalProperties {
  return [GTLRDocs_SuggestedTextStyle class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TextStyle
//

@implementation GTLRDocs_TextStyle
@dynamic backgroundColor, baselineOffset, bold, fontSize, foregroundColor,
         italic, link, smallCaps, strikethrough, underline, weightedFontFamily;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_TextStyleSuggestionState
//

@implementation GTLRDocs_TextStyleSuggestionState
@dynamic backgroundColorSuggested, baselineOffsetSuggested, boldSuggested,
         fontSizeSuggested, foregroundColorSuggested, italicSuggested,
         linkSuggested, smallCapsSuggested, strikethroughSuggested,
         underlineSuggested, weightedFontFamilySuggested;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_UnmergeTableCellsRequest
//

@implementation GTLRDocs_UnmergeTableCellsRequest
@dynamic tableRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_UpdateDocumentStyleRequest
//

@implementation GTLRDocs_UpdateDocumentStyleRequest
@dynamic documentStyle, fields;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_UpdateParagraphStyleRequest
//

@implementation GTLRDocs_UpdateParagraphStyleRequest
@dynamic fields, paragraphStyle, range;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_UpdateSectionStyleRequest
//

@implementation GTLRDocs_UpdateSectionStyleRequest
@dynamic fields, range, sectionStyle;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_UpdateTableCellStyleRequest
//

@implementation GTLRDocs_UpdateTableCellStyleRequest
@dynamic fields, tableCellStyle, tableRange, tableStartLocation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_UpdateTableColumnPropertiesRequest
//

@implementation GTLRDocs_UpdateTableColumnPropertiesRequest
@dynamic columnIndices, fields, tableColumnProperties, tableStartLocation;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"columnIndices" : [NSNumber class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_UpdateTableRowStyleRequest
//

@implementation GTLRDocs_UpdateTableRowStyleRequest
@dynamic fields, rowIndices, tableRowStyle, tableStartLocation;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"rowIndices" : [NSNumber class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_UpdateTextStyleRequest
//

@implementation GTLRDocs_UpdateTextStyleRequest
@dynamic fields, range, textStyle;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_WeightedFontFamily
//

@implementation GTLRDocs_WeightedFontFamily
@dynamic fontFamily, weight;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDocs_WriteControl
//

@implementation GTLRDocs_WriteControl
@dynamic requiredRevisionId, targetRevisionId;
@end
