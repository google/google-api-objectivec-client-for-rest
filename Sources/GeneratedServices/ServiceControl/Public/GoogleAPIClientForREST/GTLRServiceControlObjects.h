// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Service Control API (servicecontrol/v2)
// Description:
//   Provides admission control and telemetry reporting for services integrated
//   with Service Infrastructure.
// Documentation:
//   https://cloud.google.com/service-control/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRServiceControl_Api;
@class GTLRServiceControl_AttributeContext;
@class GTLRServiceControl_AttributeContext_Extensions_Item;
@class GTLRServiceControl_AuditLog_Metadata;
@class GTLRServiceControl_AuditLog_Request;
@class GTLRServiceControl_AuditLog_ResourceOriginalState;
@class GTLRServiceControl_AuditLog_Response;
@class GTLRServiceControl_AuditLog_ServiceData;
@class GTLRServiceControl_Auth;
@class GTLRServiceControl_Auth_Claims;
@class GTLRServiceControl_AuthenticationInfo;
@class GTLRServiceControl_AuthenticationInfo_ThirdPartyPrincipal;
@class GTLRServiceControl_AuthorizationInfo;
@class GTLRServiceControl_CheckResponse_Headers;
@class GTLRServiceControl_FirstPartyPrincipal;
@class GTLRServiceControl_FirstPartyPrincipal_ServiceMetadata;
@class GTLRServiceControl_OrgPolicyViolationInfo;
@class GTLRServiceControl_OrgPolicyViolationInfo_Payload;
@class GTLRServiceControl_OrgPolicyViolationInfo_ResourceTags;
@class GTLRServiceControl_Peer;
@class GTLRServiceControl_Peer_Labels;
@class GTLRServiceControl_PolicyViolationInfo;
@class GTLRServiceControl_Request;
@class GTLRServiceControl_Request_Headers;
@class GTLRServiceControl_RequestMetadata;
@class GTLRServiceControl_Resource;
@class GTLRServiceControl_Resource_Annotations;
@class GTLRServiceControl_Resource_Labels;
@class GTLRServiceControl_ResourceInfo;
@class GTLRServiceControl_ResourceLocation;
@class GTLRServiceControl_Response;
@class GTLRServiceControl_Response_Headers;
@class GTLRServiceControl_ServiceAccountDelegationInfo;
@class GTLRServiceControl_Status;
@class GTLRServiceControl_Status_Details_Item;
@class GTLRServiceControl_ThirdPartyPrincipal;
@class GTLRServiceControl_ThirdPartyPrincipal_ThirdPartyClaims;
@class GTLRServiceControl_V2HttpRequest;
@class GTLRServiceControl_V2LogEntry_Labels;
@class GTLRServiceControl_V2LogEntry_MonitoredResourceLabels;
@class GTLRServiceControl_V2LogEntry_ProtoPayload;
@class GTLRServiceControl_V2LogEntry_StructPayload;
@class GTLRServiceControl_V2LogEntryOperation;
@class GTLRServiceControl_V2LogEntrySourceLocation;
@class GTLRServiceControl_ViolationInfo;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRServiceControl_V2LogEntry.severity

/**
 *  (700) A person must take an action immediately.
 *
 *  Value: "ALERT"
 */
FOUNDATION_EXTERN NSString * const kGTLRServiceControl_V2LogEntry_Severity_Alert;
/**
 *  (600) Critical events cause more severe problems or outages.
 *
 *  Value: "CRITICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRServiceControl_V2LogEntry_Severity_Critical;
/**
 *  (100) Debug or trace information.
 *
 *  Value: "DEBUG"
 */
FOUNDATION_EXTERN NSString * const kGTLRServiceControl_V2LogEntry_Severity_Debug;
/**
 *  (0) The log entry has no assigned severity level.
 *
 *  Value: "DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRServiceControl_V2LogEntry_Severity_Default;
/**
 *  (800) One or more systems are unusable.
 *
 *  Value: "EMERGENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRServiceControl_V2LogEntry_Severity_Emergency;
/**
 *  (500) Error events are likely to cause problems.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRServiceControl_V2LogEntry_Severity_Error;
/**
 *  (200) Routine information, such as ongoing status or performance.
 *
 *  Value: "INFO"
 */
FOUNDATION_EXTERN NSString * const kGTLRServiceControl_V2LogEntry_Severity_Info;
/**
 *  (300) Normal but significant events, such as start up, shut down, or a
 *  configuration change.
 *
 *  Value: "NOTICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRServiceControl_V2LogEntry_Severity_Notice;
/**
 *  (400) Warning events might cause problems.
 *
 *  Value: "WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRServiceControl_V2LogEntry_Severity_Warning;

// ----------------------------------------------------------------------------
// GTLRServiceControl_ViolationInfo.policyType

/**
 *  Indicates boolean policy constraint
 *
 *  Value: "BOOLEAN_CONSTRAINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRServiceControl_ViolationInfo_PolicyType_BooleanConstraint;
/**
 *  Indicates custom policy constraint
 *
 *  Value: "CUSTOM_CONSTRAINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRServiceControl_ViolationInfo_PolicyType_CustomConstraint;
/**
 *  Indicates list policy constraint
 *
 *  Value: "LIST_CONSTRAINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRServiceControl_ViolationInfo_PolicyType_ListConstraint;
/**
 *  Default value. This value should not be used.
 *
 *  Value: "POLICY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRServiceControl_ViolationInfo_PolicyType_PolicyTypeUnspecified;

/**
 *  This message defines attributes associated with API operations, such as a
 *  network API request. The terminology is based on the conventions used by
 *  Google APIs, Istio, and OpenAPI.
 */
@interface GTLRServiceControl_Api : GTLRObject

/**
 *  The API operation name. For gRPC requests, it is the fully qualified API
 *  method name, such as "google.pubsub.v1.Publisher.Publish". For OpenAPI
 *  requests, it is the `operationId`, such as "getPet".
 */
@property(nonatomic, copy, nullable) NSString *operation;

/**
 *  The API protocol used for sending the request, such as "http", "https",
 *  "grpc", or "internal".
 */
@property(nonatomic, copy, nullable) NSString *protocol;

/**
 *  The API service name. It is a logical identifier for a networked API, such
 *  as "pubsub.googleapis.com". The naming syntax depends on the API management
 *  system being used for handling the request.
 */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  The API version associated with the API operation above, such as "v1" or
 *  "v1alpha1".
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  This message defines the standard attribute vocabulary for Google APIs. An
 *  attribute is a piece of metadata that describes an activity on a network
 *  service. For example, the size of an HTTP request, or the status code of an
 *  HTTP response. Each attribute has a type and a name, which is logically
 *  defined as a proto message field in `AttributeContext`. The field type
 *  becomes the attribute type, and the field path becomes the attribute name.
 *  For example, the attribute `source.ip` maps to field
 *  `AttributeContext.source.ip`. This message definition is guaranteed not to
 *  have any wire breaking change. So you can use it directly for passing
 *  attributes across different systems. NOTE: Different system may generate
 *  different subset of attributes. Please verify the system specification
 *  before relying on an attribute generated a system.
 */
@interface GTLRServiceControl_AttributeContext : GTLRObject

/** Represents an API operation that is involved to a network activity. */
@property(nonatomic, strong, nullable) GTLRServiceControl_Api *api;

/**
 *  The destination of a network activity, such as accepting a TCP connection.
 *  In a multi hop network activity, the destination represents the receiver of
 *  the last hop.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_Peer *destination;

/** Supports extensions for advanced use cases, such as logs and metrics. */
@property(nonatomic, strong, nullable) NSArray<GTLRServiceControl_AttributeContext_Extensions_Item *> *extensions;

/**
 *  The origin of a network activity. In a multi hop network activity, the
 *  origin represents the sender of the first hop. For the first hop, the
 *  `source` and the `origin` must have the same content.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_Peer *origin;

/** Represents a network request, such as an HTTP request. */
@property(nonatomic, strong, nullable) GTLRServiceControl_Request *request;

/**
 *  Represents a target resource that is involved with a network activity. If
 *  multiple resources are involved with an activity, this must be the primary
 *  one.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_Resource *resource;

/** Represents a network response, such as an HTTP response. */
@property(nonatomic, strong, nullable) GTLRServiceControl_Response *response;

/**
 *  The source of a network activity, such as starting a TCP connection. In a
 *  multi hop network activity, the source represents the sender of the last
 *  hop.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_Peer *source;

@end


/**
 *  GTLRServiceControl_AttributeContext_Extensions_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRServiceControl_AttributeContext_Extensions_Item : GTLRObject
@end


/**
 *  Common audit log format for Google Cloud Platform API operations.
 */
@interface GTLRServiceControl_AuditLog : GTLRObject

/** Authentication information. */
@property(nonatomic, strong, nullable) GTLRServiceControl_AuthenticationInfo *authenticationInfo;

/**
 *  Authorization information. If there are multiple resources or permissions
 *  involved, then there is one AuthorizationInfo element for each {resource,
 *  permission} tuple.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRServiceControl_AuthorizationInfo *> *authorizationInfo;

/**
 *  Other service-specific data about the request, response, and other
 *  information associated with the current audited event.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_AuditLog_Metadata *metadata;

/**
 *  The name of the service method or operation. For API calls, this should be
 *  the name of the API method. For example,
 *  "google.cloud.bigquery.v2.TableService.InsertTable"
 *  "google.logging.v2.ConfigServiceV2.CreateSink"
 */
@property(nonatomic, copy, nullable) NSString *methodName;

/**
 *  The number of items returned from a List or Query API method, if applicable.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numResponseItems;

/**
 *  Indicates the policy violations for this request. If the request is denied
 *  by the policy, violation information will be logged here.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_PolicyViolationInfo *policyViolationInfo;

/**
 *  The operation request. This may not include all request parameters, such as
 *  those that are too large, privacy-sensitive, or duplicated elsewhere in the
 *  log record. It should never include user-generated data, such as file
 *  contents. When the JSON object represented here has a proto equivalent, the
 *  proto name will be indicated in the `\@type` property.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_AuditLog_Request *request;

/** Metadata about the operation. */
@property(nonatomic, strong, nullable) GTLRServiceControl_RequestMetadata *requestMetadata;

/** The resource location information. */
@property(nonatomic, strong, nullable) GTLRServiceControl_ResourceLocation *resourceLocation;

/**
 *  The resource or collection that is the target of the operation. The name is
 *  a scheme-less URI, not including the API service name. For example:
 *  "projects/PROJECT_ID/zones/us-central1-a/instances"
 *  "projects/PROJECT_ID/datasets/DATASET_ID"
 */
@property(nonatomic, copy, nullable) NSString *resourceName;

/**
 *  The resource's original state before mutation. Present only for operations
 *  which have successfully modified the targeted resource(s). In general, this
 *  field should contain all changed fields, except those that are already been
 *  included in `request`, `response`, `metadata` or `service_data` fields. When
 *  the JSON object represented here has a proto equivalent, the proto name will
 *  be indicated in the `\@type` property.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_AuditLog_ResourceOriginalState *resourceOriginalState;

/**
 *  The operation response. This may not include all response elements, such as
 *  those that are too large, privacy-sensitive, or duplicated elsewhere in the
 *  log record. It should never include user-generated data, such as file
 *  contents. When the JSON object represented here has a proto equivalent, the
 *  proto name will be indicated in the `\@type` property.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_AuditLog_Response *response;

/**
 *  Deprecated. Use the `metadata` field instead. Other service-specific data
 *  about the request, response, and other activities.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_AuditLog_ServiceData *serviceData;

/**
 *  The name of the API service performing the operation. For example,
 *  `"compute.googleapis.com"`.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/** The status of the overall operation. */
@property(nonatomic, strong, nullable) GTLRServiceControl_Status *status;

@end


/**
 *  Other service-specific data about the request, response, and other
 *  information associated with the current audited event.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRServiceControl_AuditLog_Metadata : GTLRObject
@end


/**
 *  The operation request. This may not include all request parameters, such as
 *  those that are too large, privacy-sensitive, or duplicated elsewhere in the
 *  log record. It should never include user-generated data, such as file
 *  contents. When the JSON object represented here has a proto equivalent, the
 *  proto name will be indicated in the `\@type` property.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRServiceControl_AuditLog_Request : GTLRObject
@end


/**
 *  The resource's original state before mutation. Present only for operations
 *  which have successfully modified the targeted resource(s). In general, this
 *  field should contain all changed fields, except those that are already been
 *  included in `request`, `response`, `metadata` or `service_data` fields. When
 *  the JSON object represented here has a proto equivalent, the proto name will
 *  be indicated in the `\@type` property.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRServiceControl_AuditLog_ResourceOriginalState : GTLRObject
@end


/**
 *  The operation response. This may not include all response elements, such as
 *  those that are too large, privacy-sensitive, or duplicated elsewhere in the
 *  log record. It should never include user-generated data, such as file
 *  contents. When the JSON object represented here has a proto equivalent, the
 *  proto name will be indicated in the `\@type` property.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRServiceControl_AuditLog_Response : GTLRObject
@end


/**
 *  Deprecated. Use the `metadata` field instead. Other service-specific data
 *  about the request, response, and other activities.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRServiceControl_AuditLog_ServiceData : GTLRObject
@end


/**
 *  This message defines request authentication attributes. Terminology is based
 *  on the JSON Web Token (JWT) standard, but the terms also correlate to
 *  concepts in other standards.
 */
@interface GTLRServiceControl_Auth : GTLRObject

/**
 *  A list of access level resource names that allow resources to be accessed by
 *  authenticated requester. It is part of Secure GCP processing for the
 *  incoming request. An access level string has the format:
 *  "//{api_service_name}/accessPolicies/{policy_id}/accessLevels/{short_name}"
 *  Example:
 *  "//accesscontextmanager.googleapis.com/accessPolicies/MY_POLICY_ID/accessLevels/MY_LEVEL"
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *accessLevels;

/**
 *  The intended audience(s) for this authentication information. Reflects the
 *  audience (`aud`) claim within a JWT. The audience value(s) depends on the
 *  `issuer`, but typically include one or more of the following pieces of
 *  information: * The services intended to receive the credential. For example,
 *  ["https://pubsub.googleapis.com/", "https://storage.googleapis.com/"]. * A
 *  set of service-based scopes. For example,
 *  ["https://www.googleapis.com/auth/cloud-platform"]. * The client id of an
 *  app, such as the Firebase project id for JWTs from Firebase Auth. Consult
 *  the documentation for the credential issuer to determine the information
 *  provided.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *audiences;

/**
 *  Structured claims presented with the credential. JWTs include `{key: value}`
 *  pairs for standard and private claims. The following is a subset of the
 *  standard required and optional claims that would typically be presented for
 *  a Google-based JWT: {'iss': 'accounts.google.com', 'sub':
 *  '113289723416554971153', 'aud': ['123456789012', 'pubsub.googleapis.com'],
 *  'azp': '123456789012.apps.googleusercontent.com', 'email':
 *  'jsmith\@example.com', 'iat': 1353601026, 'exp': 1353604926} SAML assertions
 *  are similarly specified, but with an identity provider dependent structure.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_Auth_Claims *claims;

/**
 *  The authorized presenter of the credential. Reflects the optional Authorized
 *  Presenter (`azp`) claim within a JWT or the OAuth client id. For example, a
 *  Google Cloud Platform client id looks as follows:
 *  "123456789012.apps.googleusercontent.com".
 */
@property(nonatomic, copy, nullable) NSString *presenter;

/**
 *  The authenticated principal. Reflects the issuer (`iss`) and subject (`sub`)
 *  claims within a JWT. The issuer and subject should be `/` delimited, with
 *  `/` percent-encoded within the subject fragment. For Google accounts, the
 *  principal format is: "https://accounts.google.com/{id}"
 */
@property(nonatomic, copy, nullable) NSString *principal;

@end


/**
 *  Structured claims presented with the credential. JWTs include `{key: value}`
 *  pairs for standard and private claims. The following is a subset of the
 *  standard required and optional claims that would typically be presented for
 *  a Google-based JWT: {'iss': 'accounts.google.com', 'sub':
 *  '113289723416554971153', 'aud': ['123456789012', 'pubsub.googleapis.com'],
 *  'azp': '123456789012.apps.googleusercontent.com', 'email':
 *  'jsmith\@example.com', 'iat': 1353601026, 'exp': 1353604926} SAML assertions
 *  are similarly specified, but with an identity provider dependent structure.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRServiceControl_Auth_Claims : GTLRObject
@end


/**
 *  Authentication information for the operation.
 */
@interface GTLRServiceControl_AuthenticationInfo : GTLRObject

/**
 *  The authority selector specified by the requestor, if any. It is not
 *  guaranteed that the principal was allowed to use this authority.
 */
@property(nonatomic, copy, nullable) NSString *authoritySelector;

/**
 *  The email address of the authenticated user (or service account on behalf of
 *  third party principal) making the request. For third party identity callers,
 *  the `principal_subject` field is populated instead of this field. For
 *  privacy reasons, the principal email address is sometimes redacted. For more
 *  information, see [Caller identities in audit
 *  logs](https://cloud.google.com/logging/docs/audit#user-id).
 */
@property(nonatomic, copy, nullable) NSString *principalEmail;

/**
 *  String representation of identity of requesting party. Populated for both
 *  first and third party identities.
 */
@property(nonatomic, copy, nullable) NSString *principalSubject;

/**
 *  Identity delegation history of an authenticated service account that makes
 *  the request. It contains information on the real authorities that try to
 *  access GCP resources by delegating on a service account. When multiple
 *  authorities present, they are guaranteed to be sorted based on the original
 *  ordering of the identity delegation events.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRServiceControl_ServiceAccountDelegationInfo *> *serviceAccountDelegationInfo;

/**
 *  The name of the service account key used to create or exchange credentials
 *  for authenticating the service account making the request. This is a
 *  scheme-less URI full resource name. For example:
 *  "//iam.googleapis.com/projects/{PROJECT_ID}/serviceAccounts/{ACCOUNT}/keys/{key}"
 */
@property(nonatomic, copy, nullable) NSString *serviceAccountKeyName;

/**
 *  The third party identification (if any) of the authenticated user making the
 *  request. When the JSON object represented here has a proto equivalent, the
 *  proto name will be indicated in the `\@type` property.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_AuthenticationInfo_ThirdPartyPrincipal *thirdPartyPrincipal;

@end


/**
 *  The third party identification (if any) of the authenticated user making the
 *  request. When the JSON object represented here has a proto equivalent, the
 *  proto name will be indicated in the `\@type` property.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRServiceControl_AuthenticationInfo_ThirdPartyPrincipal : GTLRObject
@end


/**
 *  Authorization information for the operation.
 */
@interface GTLRServiceControl_AuthorizationInfo : GTLRObject

/**
 *  Whether or not authorization for `resource` and `permission` was granted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *granted;

/** The required IAM permission. */
@property(nonatomic, copy, nullable) NSString *permission;

/**
 *  The resource being accessed, as a REST-style or cloud resource string. For
 *  example: bigquery.googleapis.com/projects/PROJECTID/datasets/DATASETID or
 *  projects/PROJECTID/datasets/DATASETID
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Resource attributes used in IAM condition evaluation. This field contains
 *  resource attributes like resource type and resource name. To get the whole
 *  view of the attributes used in IAM condition evaluation, the user must also
 *  look into `AuditLog.request_metadata.request_attributes`.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_Resource *resourceAttributes;

@end


/**
 *  Request message for the Check method.
 */
@interface GTLRServiceControl_CheckRequest : GTLRObject

/** Describes attributes about the operation being executed by the service. */
@property(nonatomic, strong, nullable) GTLRServiceControl_AttributeContext *attributes;

/** Optional. Contains a comma-separated list of flags. */
@property(nonatomic, copy, nullable) NSString *flags;

/** Describes the resources and the policies applied to each resource. */
@property(nonatomic, strong, nullable) NSArray<GTLRServiceControl_ResourceInfo *> *resources;

/**
 *  Specifies the version of the service configuration that should be used to
 *  process the request. Must not be empty. Set this field to 'latest' to
 *  specify using the latest configuration.
 */
@property(nonatomic, copy, nullable) NSString *serviceConfigId;

@end


/**
 *  Response message for the Check method.
 */
@interface GTLRServiceControl_CheckResponse : GTLRObject

/** Returns a set of request contexts generated from the `CheckRequest`. */
@property(nonatomic, strong, nullable) GTLRServiceControl_CheckResponse_Headers *headers;

/**
 *  Operation is allowed when this field is not set. Any non-'OK' status
 *  indicates a denial; google.rpc.Status.details would contain additional
 *  details about the denial.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_Status *status;

@end


/**
 *  Returns a set of request contexts generated from the `CheckRequest`.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRServiceControl_CheckResponse_Headers : GTLRObject
@end


/**
 *  First party identity principal.
 */
@interface GTLRServiceControl_FirstPartyPrincipal : GTLRObject

/** The email address of a Google account. . */
@property(nonatomic, copy, nullable) NSString *principalEmail;

/** Metadata about the service that uses the service account. . */
@property(nonatomic, strong, nullable) GTLRServiceControl_FirstPartyPrincipal_ServiceMetadata *serviceMetadata;

@end


/**
 *  Metadata about the service that uses the service account. .
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRServiceControl_FirstPartyPrincipal_ServiceMetadata : GTLRObject
@end


/**
 *  Represents OrgPolicy Violation information.
 */
@interface GTLRServiceControl_OrgPolicyViolationInfo : GTLRObject

/**
 *  Optional. Resource payload that is currently in scope and is subjected to
 *  orgpolicy conditions. This payload may be the subset of the actual Resource
 *  that may come in the request. This payload should not contain any core
 *  content.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_OrgPolicyViolationInfo_Payload *payload;

/**
 *  Optional. Tags referenced on the resource at the time of evaluation. These
 *  also include the federated tags, if they are supplied in the CheckOrgPolicy
 *  or CheckCustomConstraints Requests. Optional field as of now. These tags are
 *  the Cloud tags that are available on the resource during the policy
 *  evaluation and will be available as part of the OrgPolicy check response for
 *  logging purposes.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_OrgPolicyViolationInfo_ResourceTags *resourceTags;

/**
 *  Optional. Resource type that the orgpolicy is checked against. Example:
 *  compute.googleapis.com/Instance, store.googleapis.com/bucket
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

/** Optional. Policy violations */
@property(nonatomic, strong, nullable) NSArray<GTLRServiceControl_ViolationInfo *> *violationInfo;

@end


/**
 *  Optional. Resource payload that is currently in scope and is subjected to
 *  orgpolicy conditions. This payload may be the subset of the actual Resource
 *  that may come in the request. This payload should not contain any core
 *  content.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRServiceControl_OrgPolicyViolationInfo_Payload : GTLRObject
@end


/**
 *  Optional. Tags referenced on the resource at the time of evaluation. These
 *  also include the federated tags, if they are supplied in the CheckOrgPolicy
 *  or CheckCustomConstraints Requests. Optional field as of now. These tags are
 *  the Cloud tags that are available on the resource during the policy
 *  evaluation and will be available as part of the OrgPolicy check response for
 *  logging purposes.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRServiceControl_OrgPolicyViolationInfo_ResourceTags : GTLRObject
@end


/**
 *  This message defines attributes for a node that handles a network request.
 *  The node can be either a service or an application that sends, forwards, or
 *  receives the request. Service peers should fill in `principal` and `labels`
 *  as appropriate.
 */
@interface GTLRServiceControl_Peer : GTLRObject

/** The IP address of the peer. */
@property(nonatomic, copy, nullable) NSString *ip;

/** The labels associated with the peer. */
@property(nonatomic, strong, nullable) GTLRServiceControl_Peer_Labels *labels;

/**
 *  The network port of the peer.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

/**
 *  The identity of this peer. Similar to `Request.auth.principal`, but relative
 *  to the peer instead of the request. For example, the identity associated
 *  with a load balancer that forwarded the request.
 */
@property(nonatomic, copy, nullable) NSString *principal;

/**
 *  The CLDR country/region code associated with the above IP address. If the IP
 *  address is private, the `region_code` should reflect the physical location
 *  where this peer is running.
 */
@property(nonatomic, copy, nullable) NSString *regionCode;

@end


/**
 *  The labels associated with the peer.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRServiceControl_Peer_Labels : GTLRObject
@end


/**
 *  Information related to policy violations for this request.
 */
@interface GTLRServiceControl_PolicyViolationInfo : GTLRObject

/** Indicates the orgpolicy violations for this resource. */
@property(nonatomic, strong, nullable) GTLRServiceControl_OrgPolicyViolationInfo *orgPolicyViolationInfo;

@end


/**
 *  Request message for the Report method.
 */
@interface GTLRServiceControl_ReportRequest : GTLRObject

/**
 *  Describes the list of operations to be reported. Each operation is
 *  represented as an AttributeContext, and contains all attributes around an
 *  API access.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRServiceControl_AttributeContext *> *operations;

/**
 *  Specifies the version of the service configuration that should be used to
 *  process the request. Must not be empty. Set this field to 'latest' to
 *  specify using the latest configuration.
 */
@property(nonatomic, copy, nullable) NSString *serviceConfigId;

@end


/**
 *  Response message for the Report method. If the request contains any invalid
 *  data, the server returns an RPC error.
 */
@interface GTLRServiceControl_ReportResponse : GTLRObject
@end


/**
 *  This message defines attributes for an HTTP request. If the actual request
 *  is not an HTTP request, the runtime system should try to map the actual
 *  request to an equivalent HTTP request.
 */
@interface GTLRServiceControl_Request : GTLRObject

/**
 *  The request authentication. May be absent for unauthenticated requests.
 *  Derived from the HTTP request `Authorization` header or equivalent.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_Auth *auth;

/**
 *  The HTTP request headers. If multiple headers share the same key, they must
 *  be merged according to the HTTP spec. All header keys must be lowercased,
 *  because HTTP header keys are case-insensitive.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_Request_Headers *headers;

/** The HTTP request `Host` header value. */
@property(nonatomic, copy, nullable) NSString *host;

/**
 *  The unique ID for a request, which can be propagated to downstream systems.
 *  The ID should have low probability of collision within a single day for a
 *  specific service.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** The HTTP request method, such as `GET`, `POST`. */
@property(nonatomic, copy, nullable) NSString *method;

/** The HTTP URL path, excluding the query parameters. */
@property(nonatomic, copy, nullable) NSString *path;

/**
 *  The network protocol used with the request, such as "http/1.1", "spdy/3",
 *  "h2", "h2c", "webrtc", "tcp", "udp", "quic". See
 *  https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids
 *  for details.
 */
@property(nonatomic, copy, nullable) NSString *protocol;

/**
 *  The HTTP URL query in the format of `name1=value1&name2=value2`, as it
 *  appears in the first line of the HTTP request. No decoding is performed.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  A special parameter for request reason. It is used by security systems to
 *  associate auditing information with a request.
 */
@property(nonatomic, copy, nullable) NSString *reason;

/** The HTTP URL scheme, such as `http` and `https`. */
@property(nonatomic, copy, nullable) NSString *scheme;

/**
 *  The HTTP request size in bytes. If unknown, it must be -1.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *size;

/**
 *  The timestamp when the `destination` service receives the last byte of the
 *  request.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *time;

@end


/**
 *  The HTTP request headers. If multiple headers share the same key, they must
 *  be merged according to the HTTP spec. All header keys must be lowercased,
 *  because HTTP header keys are case-insensitive.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRServiceControl_Request_Headers : GTLRObject
@end


/**
 *  Metadata about the request.
 */
@interface GTLRServiceControl_RequestMetadata : GTLRObject

/**
 *  The IP address of the caller. For a caller from the internet, this will be
 *  the public IPv4 or IPv6 address. For calls made from inside Google's
 *  internal production network from one GCP service to another, `caller_ip`
 *  will be redacted to "private". For a caller from a Compute Engine VM with a
 *  external IP address, `caller_ip` will be the VM's external IP address. For a
 *  caller from a Compute Engine VM without a external IP address, if the VM is
 *  in the same organization (or project) as the accessed resource, `caller_ip`
 *  will be the VM's internal IPv4 address, otherwise `caller_ip` will be
 *  redacted to "gce-internal-ip". See
 *  https://cloud.google.com/compute/docs/vpc/ for more information.
 */
@property(nonatomic, copy, nullable) NSString *callerIp;

/**
 *  The network of the caller. Set only if the network host project is part of
 *  the same GCP organization (or project) as the accessed resource. See
 *  https://cloud.google.com/compute/docs/vpc/ for more information. This is a
 *  scheme-less URI full resource name. For example:
 *  "//compute.googleapis.com/projects/PROJECT_ID/global/networks/NETWORK_ID"
 */
@property(nonatomic, copy, nullable) NSString *callerNetwork;

/**
 *  The user agent of the caller. This information is not authenticated and
 *  should be treated accordingly. For example: +
 *  `google-api-python-client/1.4.0`: The request was made by the Google API
 *  client for Python. + `Cloud SDK Command Line Tool apitools-client/1.0
 *  gcloud/0.9.62`: The request was made by the Google Cloud SDK CLI (gcloud). +
 *  `AppEngine-Google; (+http://code.google.com/appengine; appid: s~my-project`:
 *  The request was made from the `my-project` App Engine app.
 */
@property(nonatomic, copy, nullable) NSString *callerSuppliedUserAgent;

/**
 *  The destination of a network activity, such as accepting a TCP connection.
 *  In a multi hop network activity, the destination represents the receiver of
 *  the last hop. Only two fields are used in this message, Peer.port and
 *  Peer.ip. These fields are optionally populated by those services utilizing
 *  the IAM condition feature.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_Peer *destinationAttributes;

/**
 *  Request attributes used in IAM condition evaluation. This field contains
 *  request attributes like request time and access levels associated with the
 *  request. To get the whole view of the attributes used in IAM condition
 *  evaluation, the user must also look into
 *  `AuditLog.authentication_info.resource_attributes`.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_Request *requestAttributes;

@end


/**
 *  This message defines core attributes for a resource. A resource is an
 *  addressable (named) entity provided by the destination service. For example,
 *  a file stored on a network storage service.
 */
@interface GTLRServiceControl_Resource : GTLRObject

/**
 *  Annotations is an unstructured key-value map stored with a resource that may
 *  be set by external tools to store and retrieve arbitrary metadata. They are
 *  not queryable and should be preserved when modifying objects. More info:
 *  https://kubernetes.io/docs/user-guide/annotations
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_Resource_Annotations *annotations;

/**
 *  Output only. The timestamp when the resource was created. This may be either
 *  the time creation was initiated or when it was completed.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The timestamp when the resource was deleted. If the resource is
 *  not deleted, this must be empty.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *deleteTime;

/** Mutable. The display name set by clients. Must be <= 63 characters. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. An opaque value that uniquely identifies a version or
 *  generation of a resource. It can be used to confirm that the client and
 *  server agree on the ordering of a resource being written.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  The labels or tags on the resource, such as AWS resource tags and Kubernetes
 *  resource labels.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_Resource_Labels *labels;

/**
 *  Immutable. The location of the resource. The location encoding is specific
 *  to the service provider, and new encoding may be introduced as the service
 *  evolves. For Google Cloud products, the encoding is what is used by Google
 *  Cloud APIs, such as `us-east1`, `aws-us-east-1`, and `azure-eastus2`. The
 *  semantics of `location` is identical to the `cloud.googleapis.com/location`
 *  label used by some Google Cloud APIs.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  The stable identifier (name) of a resource on the `service`. A resource can
 *  be logically identified as "//{resource.service}/{resource.name}". The
 *  differences between a resource name and a URI are: * Resource name is a
 *  logical identifier, independent of network protocol and API version. For
 *  example, `//pubsub.googleapis.com/projects/123/topics/news-feed`. * URI
 *  often includes protocol and version information, so it can be used directly
 *  by applications. For example,
 *  `https://pubsub.googleapis.com/v1/projects/123/topics/news-feed`. See
 *  https://cloud.google.com/apis/design/resource_names for details.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The name of the service that this resource belongs to, such as
 *  `pubsub.googleapis.com`. The service may be different from the DNS hostname
 *  that actually serves the request.
 */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  The type of the resource. The syntax is platform-specific because different
 *  platforms define their resources differently. For Google APIs, the type
 *  format must be "{service}/{kind}", such as "pubsub.googleapis.com/Topic".
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  The unique identifier of the resource. UID is unique in the time and space
 *  for this resource within the scope of the service. It is typically generated
 *  by the server on successful creation of a resource and must not be changed.
 *  UID is used to uniquely identify resources with resource name reuses. This
 *  should be a UUID4.
 */
@property(nonatomic, copy, nullable) NSString *uid;

/**
 *  Output only. The timestamp when the resource was last updated. Any change to
 *  the resource made by users must refresh this value. Changes to a resource
 *  made by the service should refresh this value.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Annotations is an unstructured key-value map stored with a resource that may
 *  be set by external tools to store and retrieve arbitrary metadata. They are
 *  not queryable and should be preserved when modifying objects. More info:
 *  https://kubernetes.io/docs/user-guide/annotations
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRServiceControl_Resource_Annotations : GTLRObject
@end


/**
 *  The labels or tags on the resource, such as AWS resource tags and Kubernetes
 *  resource labels.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRServiceControl_Resource_Labels : GTLRObject
@end


/**
 *  Describes a resource referenced in the request.
 */
@interface GTLRServiceControl_ResourceInfo : GTLRObject

/**
 *  Optional. The identifier of the container of this resource. For Google Cloud
 *  APIs, the resource container must be one of the following formats: -
 *  `projects/` - `folders/` - `organizations/` For the policy enforcement on
 *  the container level (VPCSC and Location Policy check), this field takes
 *  precedence on the container extracted from name when presents.
 */
@property(nonatomic, copy, nullable) NSString *container;

/**
 *  Optional. The location of the resource. The value must be a valid zone,
 *  region or multiregion. For example: "europe-west4" or
 *  "northamerica-northeast1-a"
 */
@property(nonatomic, copy, nullable) NSString *location;

/** The name of the resource referenced in the request. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The resource permission needed for this request. The format must be
 *  "{service}/{plural}.{verb}".
 */
@property(nonatomic, copy, nullable) NSString *permission;

/** The resource type in the format of "{service}/{kind}". */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Location information about a resource.
 */
@interface GTLRServiceControl_ResourceLocation : GTLRObject

/**
 *  The locations of a resource after the execution of the operation. Requests
 *  to create or delete a location based resource must populate the
 *  'current_locations' field and not the 'original_locations' field. For
 *  example: "europe-west1-a" "us-east1" "nam3"
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *currentLocations;

/**
 *  The locations of a resource prior to the execution of the operation.
 *  Requests that mutate the resource's location must populate both the
 *  'original_locations' as well as the 'current_locations' fields. For example:
 *  "europe-west1-a" "us-east1" "nam3"
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *originalLocations;

@end


/**
 *  This message defines attributes for a typical network response. It generally
 *  models semantics of an HTTP response.
 */
@interface GTLRServiceControl_Response : GTLRObject

/**
 *  The amount of time it takes the backend service to fully respond to a
 *  request. Measured from when the destination service starts to send the
 *  request to the backend until when the destination service receives the
 *  complete response from the backend.
 */
@property(nonatomic, strong, nullable) GTLRDuration *backendLatency;

/**
 *  The HTTP response status code, such as `200` and `404`.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  The HTTP response headers. If multiple headers share the same key, they must
 *  be merged according to HTTP spec. All header keys must be lowercased,
 *  because HTTP header keys are case-insensitive.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_Response_Headers *headers;

/**
 *  The HTTP response size in bytes. If unknown, it must be -1.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *size;

/**
 *  The timestamp when the `destination` service sends the last byte of the
 *  response.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *time;

@end


/**
 *  The HTTP response headers. If multiple headers share the same key, they must
 *  be merged according to HTTP spec. All header keys must be lowercased,
 *  because HTTP header keys are case-insensitive.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRServiceControl_Response_Headers : GTLRObject
@end


/**
 *  Identity delegation history of an authenticated service account.
 */
@interface GTLRServiceControl_ServiceAccountDelegationInfo : GTLRObject

/** First party (Google) identity as the real authority. */
@property(nonatomic, strong, nullable) GTLRServiceControl_FirstPartyPrincipal *firstPartyPrincipal;

/**
 *  A string representing the principal_subject associated with the identity.
 *  For most identities, the format will be
 *  `principal://iam.googleapis.com/{identity pool name}/subject/{subject)`
 *  except for some GKE identities (GKE_WORKLOAD, FREEFORM, GKE_HUB_WORKLOAD)
 *  that are still in the legacy format `serviceAccount:{identity pool
 *  name}[{subject}]`
 */
@property(nonatomic, copy, nullable) NSString *principalSubject;

/** Third party identity as the real authority. */
@property(nonatomic, strong, nullable) GTLRServiceControl_ThirdPartyPrincipal *thirdPartyPrincipal;

@end


/**
 *  The context of a span. This is attached to an Exemplar in Distribution
 *  values during aggregation. It contains the name of a span with format:
 *  projects/[PROJECT_ID_OR_NUMBER]/traces/[TRACE_ID]/spans/[SPAN_ID]
 */
@interface GTLRServiceControl_SpanContext : GTLRObject

/**
 *  The resource name of the span. The format is:
 *  projects/[PROJECT_ID_OR_NUMBER]/traces/[TRACE_ID]/spans/[SPAN_ID]
 *  `[TRACE_ID]` is a unique identifier for a trace within a project; it is a
 *  32-character hexadecimal encoding of a 16-byte array. `[SPAN_ID]` is a
 *  unique identifier for a span within a trace; it is a 16-character
 *  hexadecimal encoding of an 8-byte array.
 */
@property(nonatomic, copy, nullable) NSString *spanName;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRServiceControl_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRServiceControl_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRServiceControl_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRServiceControl_Status_Details_Item : GTLRObject
@end


/**
 *  Third party identity principal.
 */
@interface GTLRServiceControl_ThirdPartyPrincipal : GTLRObject

/** Metadata about third party identity. */
@property(nonatomic, strong, nullable) GTLRServiceControl_ThirdPartyPrincipal_ThirdPartyClaims *thirdPartyClaims;

@end


/**
 *  Metadata about third party identity.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRServiceControl_ThirdPartyPrincipal_ThirdPartyClaims : GTLRObject
@end


/**
 *  A common proto for logging HTTP requests. Only contains semantics defined by
 *  the HTTP specification. Product-specific logging information MUST be defined
 *  in a separate message.
 */
@interface GTLRServiceControl_V2HttpRequest : GTLRObject

/**
 *  The number of HTTP response bytes inserted into cache. Set only when a cache
 *  fill was attempted.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cacheFillBytes;

/**
 *  Whether or not an entity was served from cache (with or without validation).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cacheHit;

/**
 *  Whether or not a cache lookup was attempted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cacheLookup;

/**
 *  Whether or not the response was validated with the origin server before
 *  being served from cache. This field is only meaningful if `cache_hit` is
 *  True.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cacheValidatedWithOriginServer;

/**
 *  The request processing latency on the server, from the time the request was
 *  received until the response was sent.
 */
@property(nonatomic, strong, nullable) GTLRDuration *latency;

/**
 *  Protocol used for the request. Examples: "HTTP/1.1", "HTTP/2", "websocket"
 */
@property(nonatomic, copy, nullable) NSString *protocol;

/**
 *  The referer URL of the request, as defined in [HTTP/1.1 Header Field
 *  Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
 */
@property(nonatomic, copy, nullable) NSString *referer;

/**
 *  The IP address (IPv4 or IPv6) of the client that issued the HTTP request.
 *  Examples: `"192.168.1.1"`, `"FE80::0202:B3FF:FE1E:8329"`.
 */
@property(nonatomic, copy, nullable) NSString *remoteIp;

/** The request method. Examples: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`. */
@property(nonatomic, copy, nullable) NSString *requestMethod;

/**
 *  The size of the HTTP request message in bytes, including the request headers
 *  and the request body.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestSize;

/**
 *  The scheme (http, https), the host name, the path, and the query portion of
 *  the URL that was requested. Example:
 *  `"http://example.com/some/info?color=red"`.
 */
@property(nonatomic, copy, nullable) NSString *requestUrl;

/**
 *  The size of the HTTP response message sent back to the client, in bytes,
 *  including the response headers and the response body.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *responseSize;

/**
 *  The IP address (IPv4 or IPv6) of the origin server that the request was sent
 *  to.
 */
@property(nonatomic, copy, nullable) NSString *serverIp;

/**
 *  The response code indicating the status of the response. Examples: 200, 404.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *status;

/**
 *  The user agent sent by the client. Example: `"Mozilla/4.0 (compatible; MSIE
 *  6.0; Windows 98; Q312461; .NET CLR 1.0.3705)"`.
 */
@property(nonatomic, copy, nullable) NSString *userAgent;

@end


/**
 *  An individual log entry.
 */
@interface GTLRServiceControl_V2LogEntry : GTLRObject

/**
 *  Optional. Information about the HTTP request associated with this log entry,
 *  if applicable.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_V2HttpRequest *httpRequest;

/**
 *  A unique ID for the log entry used for deduplication. If omitted, the
 *  implementation will generate one based on operation_id.
 */
@property(nonatomic, copy, nullable) NSString *insertId;

/**
 *  A set of user-defined (key, value) data that provides additional information
 *  about the log entry.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_V2LogEntry_Labels *labels;

/**
 *  A set of user-defined (key, value) data that provides additional information
 *  about the moniotored resource that the log entry belongs to.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_V2LogEntry_MonitoredResourceLabels *monitoredResourceLabels;

/**
 *  Required. The log to which this log entry belongs. Examples: `"syslog"`,
 *  `"book_log"`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Information about an operation associated with the log entry, if
 *  applicable.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_V2LogEntryOperation *operation;

/**
 *  The log entry payload, represented as a protocol buffer that is expressed as
 *  a JSON object. The only accepted type currently is AuditLog.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_V2LogEntry_ProtoPayload *protoPayload;

/**
 *  The severity of the log entry. The default value is `LogSeverity.DEFAULT`.
 *
 *  Likely values:
 *    @arg @c kGTLRServiceControl_V2LogEntry_Severity_Alert (700) A person must
 *        take an action immediately. (Value: "ALERT")
 *    @arg @c kGTLRServiceControl_V2LogEntry_Severity_Critical (600) Critical
 *        events cause more severe problems or outages. (Value: "CRITICAL")
 *    @arg @c kGTLRServiceControl_V2LogEntry_Severity_Debug (100) Debug or trace
 *        information. (Value: "DEBUG")
 *    @arg @c kGTLRServiceControl_V2LogEntry_Severity_Default (0) The log entry
 *        has no assigned severity level. (Value: "DEFAULT")
 *    @arg @c kGTLRServiceControl_V2LogEntry_Severity_Emergency (800) One or
 *        more systems are unusable. (Value: "EMERGENCY")
 *    @arg @c kGTLRServiceControl_V2LogEntry_Severity_Error (500) Error events
 *        are likely to cause problems. (Value: "ERROR")
 *    @arg @c kGTLRServiceControl_V2LogEntry_Severity_Info (200) Routine
 *        information, such as ongoing status or performance. (Value: "INFO")
 *    @arg @c kGTLRServiceControl_V2LogEntry_Severity_Notice (300) Normal but
 *        significant events, such as start up, shut down, or a configuration
 *        change. (Value: "NOTICE")
 *    @arg @c kGTLRServiceControl_V2LogEntry_Severity_Warning (400) Warning
 *        events might cause problems. (Value: "WARNING")
 */
@property(nonatomic, copy, nullable) NSString *severity;

/**
 *  Optional. Source code location information associated with the log entry, if
 *  any.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_V2LogEntrySourceLocation *sourceLocation;

/**
 *  The log entry payload, represented as a structure that is expressed as a
 *  JSON object.
 */
@property(nonatomic, strong, nullable) GTLRServiceControl_V2LogEntry_StructPayload *structPayload;

/** The log entry payload, represented as a Unicode string (UTF-8). */
@property(nonatomic, copy, nullable) NSString *textPayload;

/**
 *  The time the event described by the log entry occurred. If omitted, defaults
 *  to operation start time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *timestamp;

/**
 *  Optional. Resource name of the trace associated with the log entry, if any.
 *  If this field contains a relative resource name, you can assume the name is
 *  relative to `//tracing.googleapis.com`. Example:
 *  `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
 */
@property(nonatomic, copy, nullable) NSString *trace;

@end


/**
 *  A set of user-defined (key, value) data that provides additional information
 *  about the log entry.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRServiceControl_V2LogEntry_Labels : GTLRObject
@end


/**
 *  A set of user-defined (key, value) data that provides additional information
 *  about the moniotored resource that the log entry belongs to.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRServiceControl_V2LogEntry_MonitoredResourceLabels : GTLRObject
@end


/**
 *  The log entry payload, represented as a protocol buffer that is expressed as
 *  a JSON object. The only accepted type currently is AuditLog.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRServiceControl_V2LogEntry_ProtoPayload : GTLRObject
@end


/**
 *  The log entry payload, represented as a structure that is expressed as a
 *  JSON object.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRServiceControl_V2LogEntry_StructPayload : GTLRObject
@end


/**
 *  Additional information about a potentially long-running operation with which
 *  a log entry is associated.
 */
@interface GTLRServiceControl_V2LogEntryOperation : GTLRObject

/**
 *  Optional. Set this to True if this is the first log entry in the operation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *first;

/**
 *  Optional. An arbitrary operation identifier. Log entries with the same
 *  identifier are assumed to be part of the same operation.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Optional. Set this to True if this is the last log entry in the operation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *last;

/**
 *  Optional. An arbitrary producer identifier. The combination of `id` and
 *  `producer` must be globally unique. Examples for `producer`:
 *  `"MyDivision.MyBigCompany.com"`, `"github.com/MyProject/MyApplication"`.
 */
@property(nonatomic, copy, nullable) NSString *producer;

@end


/**
 *  Additional information about the source code location that produced the log
 *  entry.
 */
@interface GTLRServiceControl_V2LogEntrySourceLocation : GTLRObject

/**
 *  Optional. Source file name. Depending on the runtime environment, this might
 *  be a simple name or a fully-qualified name.
 */
@property(nonatomic, copy, nullable) NSString *file;

/**
 *  Optional. Human-readable name of the function or method being invoked, with
 *  optional context such as the class or package name. This information may be
 *  used in contexts such as the logs viewer, where a file and line number are
 *  less meaningful. The format can vary by language. For example:
 *  `qual.if.ied.Class.method` (Java), `dir/package.func` (Go), `function`
 *  (Python).
 */
@property(nonatomic, copy, nullable) NSString *function;

/**
 *  Optional. Line within the source file. 1-based; 0 indicates no line number
 *  available.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *line;

@end


/**
 *  Provides information about the Policy violation info for this request.
 */
@interface GTLRServiceControl_ViolationInfo : GTLRObject

/**
 *  Optional. Value that is being checked for the policy. This could be in
 *  encrypted form (if pii sensitive). This field will only be emitted in
 *  LIST_POLICY types
 */
@property(nonatomic, copy, nullable) NSString *checkedValue;

/** Optional. Constraint name */
@property(nonatomic, copy, nullable) NSString *constraint;

/** Optional. Error message that policy is indicating. */
@property(nonatomic, copy, nullable) NSString *errorMessage;

/**
 *  Optional. Indicates the type of the policy.
 *
 *  Likely values:
 *    @arg @c kGTLRServiceControl_ViolationInfo_PolicyType_BooleanConstraint
 *        Indicates boolean policy constraint (Value: "BOOLEAN_CONSTRAINT")
 *    @arg @c kGTLRServiceControl_ViolationInfo_PolicyType_CustomConstraint
 *        Indicates custom policy constraint (Value: "CUSTOM_CONSTRAINT")
 *    @arg @c kGTLRServiceControl_ViolationInfo_PolicyType_ListConstraint
 *        Indicates list policy constraint (Value: "LIST_CONSTRAINT")
 *    @arg @c kGTLRServiceControl_ViolationInfo_PolicyType_PolicyTypeUnspecified
 *        Default value. This value should not be used. (Value:
 *        "POLICY_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *policyType;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
