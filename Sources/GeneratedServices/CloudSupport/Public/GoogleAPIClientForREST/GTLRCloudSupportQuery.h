// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Cloud Support API (cloudsupport/v2)
// Description:
//   Manages Google Cloud technical support cases for Customer Care support
//   offerings.
// Documentation:
//   https://cloud.google.com/support/docs/apis

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRCloudSupportObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Cloud Support query classes.
 */
@interface GTLRCloudSupportQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Retrieve valid classifications to use when creating a support case.
 *  Classifications are hierarchical. Each classification is a string containing
 *  all levels of the hierarchy separated by `" > "`. For example, `"Technical
 *  Issue > Compute > Compute Engine"`. Classification IDs returned by this
 *  endpoint are valid for at least six months. When a classification is
 *  deactivated, this endpoint immediately stops returning it. After six months,
 *  `case.create` requests using the classification will fail. EXAMPLES: cURL:
 *  ```shell curl \\ --header "Authorization: Bearer $(gcloud auth
 *  print-access-token)" \\
 *  'https://cloudsupport.googleapis.com/v2/caseClassifications:search?query=display_name:"*Compute%20Engine*"'
 *  ``` Python: ```python import googleapiclient.discovery supportApiService =
 *  googleapiclient.discovery.build( serviceName="cloudsupport", version="v2",
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version=v2",
 *  ) request = supportApiService.caseClassifications().search(
 *  query='display_name:"*Compute Engine*"' ) print(request.execute()) ```
 *
 *  Method: cloudsupport.caseClassifications.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CaseClassificationsSearch : GTLRCloudSupportQuery

/** The maximum number of classifications fetched with each request. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying the page of results to return. If unspecified, the first
 *  page is retrieved.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  An expression used to filter case classifications. If it's an empty string,
 *  then no filtering happens. Otherwise, case classifications will be returned
 *  that match the filter.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Fetches a @c GTLRCloudSupport_SearchCaseClassificationsResponse.
 *
 *  Retrieve valid classifications to use when creating a support case.
 *  Classifications are hierarchical. Each classification is a string containing
 *  all levels of the hierarchy separated by `" > "`. For example, `"Technical
 *  Issue > Compute > Compute Engine"`. Classification IDs returned by this
 *  endpoint are valid for at least six months. When a classification is
 *  deactivated, this endpoint immediately stops returning it. After six months,
 *  `case.create` requests using the classification will fail. EXAMPLES: cURL:
 *  ```shell curl \\ --header "Authorization: Bearer $(gcloud auth
 *  print-access-token)" \\
 *  'https://cloudsupport.googleapis.com/v2/caseClassifications:search?query=display_name:"*Compute%20Engine*"'
 *  ``` Python: ```python import googleapiclient.discovery supportApiService =
 *  googleapiclient.discovery.build( serviceName="cloudsupport", version="v2",
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version=v2",
 *  ) request = supportApiService.caseClassifications().search(
 *  query='display_name:"*Compute Engine*"' ) print(request.execute()) ```
 *
 *  @return GTLRCloudSupportQuery_CaseClassificationsSearch
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  List all the attachments associated with a support case. EXAMPLES: cURL:
 *  ```shell case="projects/some-project/cases/23598314" curl \\ --header
 *  "Authorization: Bearer $(gcloud auth print-access-token)" \\
 *  "https://cloudsupport.googleapis.com/v2/$case/attachments" ``` Python:
 *  ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = ( supportApiService.cases() .attachments()
 *  .list(parent="projects/some-project/cases/43595344") )
 *  print(request.execute()) ```
 *
 *  Method: cloudsupport.cases.attachments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesAttachmentsList : GTLRCloudSupportQuery

/**
 *  The maximum number of attachments fetched with each request. If not
 *  provided, the default is 10. The maximum page size that will be returned is
 *  100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying the page of results to return. If unspecified, the first
 *  page is retrieved.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The name of the case for which attachments should be listed. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudSupport_ListAttachmentsResponse.
 *
 *  List all the attachments associated with a support case. EXAMPLES: cURL:
 *  ```shell case="projects/some-project/cases/23598314" curl \\ --header
 *  "Authorization: Bearer $(gcloud auth print-access-token)" \\
 *  "https://cloudsupport.googleapis.com/v2/$case/attachments" ``` Python:
 *  ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = ( supportApiService.cases() .attachments()
 *  .list(parent="projects/some-project/cases/43595344") )
 *  print(request.execute()) ```
 *
 *  @param parent Required. The name of the case for which attachments should be
 *    listed.
 *
 *  @return GTLRCloudSupportQuery_CasesAttachmentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Close a case. EXAMPLES: cURL: ```shell
 *  case="projects/some-project/cases/43595344" curl \\ --request POST \\
 *  --header "Authorization: Bearer $(gcloud auth print-access-token)" \\
 *  "https://cloudsupport.googleapis.com/v2/$case:close" ``` Python: ```python
 *  import googleapiclient.discovery api_version = "v2" supportApiService =
 *  googleapiclient.discovery.build( serviceName="cloudsupport",
 *  version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.cases().close(
 *  name="projects/some-project/cases/43595344" ) print(request.execute()) ```
 *
 *  Method: cloudsupport.cases.close
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesClose : GTLRCloudSupportQuery

/** Required. The name of the case to close. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudSupport_Case.
 *
 *  Close a case. EXAMPLES: cURL: ```shell
 *  case="projects/some-project/cases/43595344" curl \\ --request POST \\
 *  --header "Authorization: Bearer $(gcloud auth print-access-token)" \\
 *  "https://cloudsupport.googleapis.com/v2/$case:close" ``` Python: ```python
 *  import googleapiclient.discovery api_version = "v2" supportApiService =
 *  googleapiclient.discovery.build( serviceName="cloudsupport",
 *  version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.cases().close(
 *  name="projects/some-project/cases/43595344" ) print(request.execute()) ```
 *
 *  @param object The @c GTLRCloudSupport_CloseCaseRequest to include in the
 *    query.
 *  @param name Required. The name of the case to close.
 *
 *  @return GTLRCloudSupportQuery_CasesClose
 */
+ (instancetype)queryWithObject:(GTLRCloudSupport_CloseCaseRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Add a new comment to a case. The comment must have the following fields set:
 *  `body`. EXAMPLES: cURL: ```shell case="projects/some-project/cases/43591344"
 *  curl \\ --request POST \\ --header "Authorization: Bearer $(gcloud auth
 *  print-access-token)" \\ --header 'Content-Type: application/json' \\ --data
 *  '{ "body": "This is a test comment." }' \\
 *  "https://cloudsupport.googleapis.com/v2/$case/comments" ``` Python:
 *  ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = ( supportApiService.cases() .comments() .create(
 *  parent="projects/some-project/cases/43595344", body={"body": "This is a test
 *  comment."}, ) ) print(request.execute()) ```
 *
 *  Method: cloudsupport.cases.comments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesCommentsCreate : GTLRCloudSupportQuery

/** Required. The name of the case to which the comment should be added. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudSupport_Comment.
 *
 *  Add a new comment to a case. The comment must have the following fields set:
 *  `body`. EXAMPLES: cURL: ```shell case="projects/some-project/cases/43591344"
 *  curl \\ --request POST \\ --header "Authorization: Bearer $(gcloud auth
 *  print-access-token)" \\ --header 'Content-Type: application/json' \\ --data
 *  '{ "body": "This is a test comment." }' \\
 *  "https://cloudsupport.googleapis.com/v2/$case/comments" ``` Python:
 *  ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = ( supportApiService.cases() .comments() .create(
 *  parent="projects/some-project/cases/43595344", body={"body": "This is a test
 *  comment."}, ) ) print(request.execute()) ```
 *
 *  @param object The @c GTLRCloudSupport_Comment to include in the query.
 *  @param parent Required. The name of the case to which the comment should be
 *    added.
 *
 *  @return GTLRCloudSupportQuery_CasesCommentsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudSupport_Comment *)object
                         parent:(NSString *)parent;

@end

/**
 *  List all the comments associated with a case. EXAMPLES: cURL: ```shell
 *  case="projects/some-project/cases/43595344" curl \\ --header "Authorization:
 *  Bearer $(gcloud auth print-access-token)" \\
 *  "https://cloudsupport.googleapis.com/v2/$case/comments" ``` Python:
 *  ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = ( supportApiService.cases() .comments()
 *  .list(parent="projects/some-project/cases/43595344") )
 *  print(request.execute()) ```
 *
 *  Method: cloudsupport.cases.comments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesCommentsList : GTLRCloudSupportQuery

/** The maximum number of comments to fetch. Defaults to 10. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying the page of results to return. If unspecified, the first
 *  page is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The name of the case for which to list comments. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudSupport_ListCommentsResponse.
 *
 *  List all the comments associated with a case. EXAMPLES: cURL: ```shell
 *  case="projects/some-project/cases/43595344" curl \\ --header "Authorization:
 *  Bearer $(gcloud auth print-access-token)" \\
 *  "https://cloudsupport.googleapis.com/v2/$case/comments" ``` Python:
 *  ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = ( supportApiService.cases() .comments()
 *  .list(parent="projects/some-project/cases/43595344") )
 *  print(request.execute()) ```
 *
 *  @param parent Required. The name of the case for which to list comments.
 *
 *  @return GTLRCloudSupportQuery_CasesCommentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Create a new case and associate it with a parent. It must have the following
 *  fields set: `display_name`, `description`, `classification`, and `priority`.
 *  If you're just testing the API and don't want to route your case to an
 *  agent, set `testCase=true`. EXAMPLES: cURL: ```shell
 *  parent="projects/some-project" curl \\ --request POST \\ --header
 *  "Authorization: Bearer $(gcloud auth print-access-token)" \\ --header
 *  'Content-Type: application/json' \\ --data '{ "display_name": "Test case
 *  created by me.", "description": "a random test case, feel free to close",
 *  "classification": { "id":
 *  "100IK2AKCLHMGRJ9CDGMOCGP8DM6UTB4BT262T31BT1M2T31DHNMENPO6KS36CPJ786L2TBFEHGN6NPI64R3CDHN8880G08I1H3MURR7DHII0GRCDTQM8"
 *  }, "time_zone": "-07:00", "subscriber_email_addresses": [ "foo\@domain.com",
 *  "bar\@domain.com" ], "testCase": true, "priority": "P3" }' \\
 *  "https://cloudsupport.googleapis.com/v2/$parent/cases" ``` Python: ```python
 *  import googleapiclient.discovery api_version = "v2" supportApiService =
 *  googleapiclient.discovery.build( serviceName="cloudsupport",
 *  version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.cases().create(
 *  parent="projects/some-project", body={ "displayName": "A Test Case",
 *  "description": "This is a test case.", "testCase": True, "priority": "P2",
 *  "classification": { "id":
 *  "100IK2AKCLHMGRJ9CDGMOCGP8DM6UTB4BT262T31BT1M2T31DHNMENPO6KS36CPJ786L2TBFEHGN6NPI64R3CDHN8880G08I1H3MURR7DHII0GRCDTQM8"
 *  }, }, ) print(request.execute()) ```
 *
 *  Method: cloudsupport.cases.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesCreate : GTLRCloudSupportQuery

/**
 *  Required. The name of the parent under which the case should be created.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudSupport_Case.
 *
 *  Create a new case and associate it with a parent. It must have the following
 *  fields set: `display_name`, `description`, `classification`, and `priority`.
 *  If you're just testing the API and don't want to route your case to an
 *  agent, set `testCase=true`. EXAMPLES: cURL: ```shell
 *  parent="projects/some-project" curl \\ --request POST \\ --header
 *  "Authorization: Bearer $(gcloud auth print-access-token)" \\ --header
 *  'Content-Type: application/json' \\ --data '{ "display_name": "Test case
 *  created by me.", "description": "a random test case, feel free to close",
 *  "classification": { "id":
 *  "100IK2AKCLHMGRJ9CDGMOCGP8DM6UTB4BT262T31BT1M2T31DHNMENPO6KS36CPJ786L2TBFEHGN6NPI64R3CDHN8880G08I1H3MURR7DHII0GRCDTQM8"
 *  }, "time_zone": "-07:00", "subscriber_email_addresses": [ "foo\@domain.com",
 *  "bar\@domain.com" ], "testCase": true, "priority": "P3" }' \\
 *  "https://cloudsupport.googleapis.com/v2/$parent/cases" ``` Python: ```python
 *  import googleapiclient.discovery api_version = "v2" supportApiService =
 *  googleapiclient.discovery.build( serviceName="cloudsupport",
 *  version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.cases().create(
 *  parent="projects/some-project", body={ "displayName": "A Test Case",
 *  "description": "This is a test case.", "testCase": True, "priority": "P2",
 *  "classification": { "id":
 *  "100IK2AKCLHMGRJ9CDGMOCGP8DM6UTB4BT262T31BT1M2T31DHNMENPO6KS36CPJ786L2TBFEHGN6NPI64R3CDHN8880G08I1H3MURR7DHII0GRCDTQM8"
 *  }, }, ) print(request.execute()) ```
 *
 *  @param object The @c GTLRCloudSupport_Case to include in the query.
 *  @param parent Required. The name of the parent under which the case should
 *    be created.
 *
 *  @return GTLRCloudSupportQuery_CasesCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudSupport_Case *)object
                         parent:(NSString *)parent;

@end

/**
 *  Escalate a case, starting the Google Cloud Support escalation management
 *  process. This operation is only available for some support services. Go to
 *  https://cloud.google.com/support and look for 'Technical support
 *  escalations' in the feature list to find out which ones let you do that.
 *  EXAMPLES: cURL: ```shell case="projects/some-project/cases/43595344" curl \\
 *  --request POST \\ --header "Authorization: Bearer $(gcloud auth
 *  print-access-token)" \\ --header "Content-Type: application/json" \\ --data
 *  '{ "escalation": { "reason": "BUSINESS_IMPACT", "justification": "This is a
 *  test escalation." } }' \\
 *  "https://cloudsupport.googleapis.com/v2/$case:escalate" ``` Python:
 *  ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.cases().escalate(
 *  name="projects/some-project/cases/43595344", body={ "escalation": {
 *  "reason": "BUSINESS_IMPACT", "justification": "This is a test escalation.",
 *  }, }, ) print(request.execute()) ```
 *
 *  Method: cloudsupport.cases.escalate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesEscalate : GTLRCloudSupportQuery

/** Required. The name of the case to be escalated. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudSupport_Case.
 *
 *  Escalate a case, starting the Google Cloud Support escalation management
 *  process. This operation is only available for some support services. Go to
 *  https://cloud.google.com/support and look for 'Technical support
 *  escalations' in the feature list to find out which ones let you do that.
 *  EXAMPLES: cURL: ```shell case="projects/some-project/cases/43595344" curl \\
 *  --request POST \\ --header "Authorization: Bearer $(gcloud auth
 *  print-access-token)" \\ --header "Content-Type: application/json" \\ --data
 *  '{ "escalation": { "reason": "BUSINESS_IMPACT", "justification": "This is a
 *  test escalation." } }' \\
 *  "https://cloudsupport.googleapis.com/v2/$case:escalate" ``` Python:
 *  ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.cases().escalate(
 *  name="projects/some-project/cases/43595344", body={ "escalation": {
 *  "reason": "BUSINESS_IMPACT", "justification": "This is a test escalation.",
 *  }, }, ) print(request.execute()) ```
 *
 *  @param object The @c GTLRCloudSupport_EscalateCaseRequest to include in the
 *    query.
 *  @param name Required. The name of the case to be escalated.
 *
 *  @return GTLRCloudSupportQuery_CasesEscalate
 */
+ (instancetype)queryWithObject:(GTLRCloudSupport_EscalateCaseRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Retrieve a case. EXAMPLES: cURL: ```shell
 *  case="projects/some-project/cases/16033687" curl \\ --header "Authorization:
 *  Bearer $(gcloud auth print-access-token)" \\
 *  "https://cloudsupport.googleapis.com/v2/$case" ``` Python: ```python import
 *  googleapiclient.discovery api_version = "v2" supportApiService =
 *  googleapiclient.discovery.build( serviceName="cloudsupport",
 *  version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.cases().get(
 *  name="projects/some-project/cases/43595344", ) print(request.execute()) ```
 *
 *  Method: cloudsupport.cases.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesGet : GTLRCloudSupportQuery

/** Required. The full name of a case to be retrieved. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudSupport_Case.
 *
 *  Retrieve a case. EXAMPLES: cURL: ```shell
 *  case="projects/some-project/cases/16033687" curl \\ --header "Authorization:
 *  Bearer $(gcloud auth print-access-token)" \\
 *  "https://cloudsupport.googleapis.com/v2/$case" ``` Python: ```python import
 *  googleapiclient.discovery api_version = "v2" supportApiService =
 *  googleapiclient.discovery.build( serviceName="cloudsupport",
 *  version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.cases().get(
 *  name="projects/some-project/cases/43595344", ) print(request.execute()) ```
 *
 *  @param name Required. The full name of a case to be retrieved.
 *
 *  @return GTLRCloudSupportQuery_CasesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve all cases under a parent, but not its children. For example,
 *  listing cases under an organization only returns the cases that are directly
 *  parented by that organization. To retrieve cases under an organization and
 *  its projects, use `cases.search`. EXAMPLES: cURL: ```shell
 *  parent="projects/some-project" curl \\ --header "Authorization: Bearer
 *  $(gcloud auth print-access-token)" \\
 *  "https://cloudsupport.googleapis.com/v2/$parent/cases" ``` Python: ```python
 *  import googleapiclient.discovery api_version = "v2" supportApiService =
 *  googleapiclient.discovery.build( serviceName="cloudsupport",
 *  version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.cases().list(parent="projects/some-project")
 *  print(request.execute()) ```
 *
 *  Method: cloudsupport.cases.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesList : GTLRCloudSupportQuery

/**
 *  An expression used to filter cases. If it's an empty string, then no
 *  filtering happens. Otherwise, the endpoint returns the cases that match the
 *  filter. Expressions use the following fields separated by `AND` and
 *  specified with `=`: - `state`: Can be `OPEN` or `CLOSED`. - `priority`: Can
 *  be `P0`, `P1`, `P2`, `P3`, or `P4`. You can specify multiple values for
 *  priority using the `OR` operator. For example, `priority=P1 OR priority=P2`.
 *  - `creator.email`: The email address of the case creator. EXAMPLES: -
 *  `state=CLOSED` - `state=OPEN AND creator.email="tester\@example.com"` -
 *  `state=OPEN AND (priority=P0 OR priority=P1)`
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The maximum number of cases fetched with each request. Defaults to 10. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying the page of results to return. If unspecified, the first
 *  page is retrieved.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The name of a parent to list cases under. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudSupport_ListCasesResponse.
 *
 *  Retrieve all cases under a parent, but not its children. For example,
 *  listing cases under an organization only returns the cases that are directly
 *  parented by that organization. To retrieve cases under an organization and
 *  its projects, use `cases.search`. EXAMPLES: cURL: ```shell
 *  parent="projects/some-project" curl \\ --header "Authorization: Bearer
 *  $(gcloud auth print-access-token)" \\
 *  "https://cloudsupport.googleapis.com/v2/$parent/cases" ``` Python: ```python
 *  import googleapiclient.discovery api_version = "v2" supportApiService =
 *  googleapiclient.discovery.build( serviceName="cloudsupport",
 *  version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.cases().list(parent="projects/some-project")
 *  print(request.execute()) ```
 *
 *  @param parent Required. The name of a parent to list cases under.
 *
 *  @return GTLRCloudSupportQuery_CasesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a case. Only some fields can be updated. EXAMPLES: cURL: ```shell
 *  case="projects/some-project/cases/43595344" curl \\ --request PATCH \\
 *  --header "Authorization: Bearer $(gcloud auth print-access-token)" \\
 *  --header "Content-Type: application/json" \\ --data '{ "priority": "P1" }'
 *  \\ "https://cloudsupport.googleapis.com/v2/$case?updateMask=priority" ```
 *  Python: ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.cases().patch(
 *  name="projects/some-project/cases/43112854", body={ "displayName": "This is
 *  Now a New Title", "priority": "P2", }, ) print(request.execute()) ```
 *
 *  Method: cloudsupport.cases.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesPatch : GTLRCloudSupportQuery

/** The resource name for the case. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A list of attributes of the case that should be updated. Supported values
 *  are `priority`, `display_name`, and `subscriber_email_addresses`. If no
 *  fields are specified, all supported fields are updated. Be careful - if you
 *  do not provide a field mask, then you might accidentally clear some fields.
 *  For example, if you leave the field mask empty and do not provide a value
 *  for `subscriber_email_addresses`, then `subscriber_email_addresses` is
 *  updated to empty.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudSupport_Case.
 *
 *  Update a case. Only some fields can be updated. EXAMPLES: cURL: ```shell
 *  case="projects/some-project/cases/43595344" curl \\ --request PATCH \\
 *  --header "Authorization: Bearer $(gcloud auth print-access-token)" \\
 *  --header "Content-Type: application/json" \\ --data '{ "priority": "P1" }'
 *  \\ "https://cloudsupport.googleapis.com/v2/$case?updateMask=priority" ```
 *  Python: ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.cases().patch(
 *  name="projects/some-project/cases/43112854", body={ "displayName": "This is
 *  Now a New Title", "priority": "P2", }, ) print(request.execute()) ```
 *
 *  @param object The @c GTLRCloudSupport_Case to include in the query.
 *  @param name The resource name for the case.
 *
 *  @return GTLRCloudSupportQuery_CasesPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudSupport_Case *)object
                           name:(NSString *)name;

@end

/**
 *  Search for cases using a query. EXAMPLES: cURL: ```shell
 *  parent="projects/some-project" curl \\ --header "Authorization: Bearer
 *  $(gcloud auth print-access-token)" \\
 *  "https://cloudsupport.googleapis.com/v2/$parent/cases:search" ``` Python:
 *  ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.cases().search(
 *  parent="projects/some-project", query="state=OPEN" )
 *  print(request.execute()) ```
 *
 *  Method: cloudsupport.cases.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_CasesSearch : GTLRCloudSupportQuery

/**
 *  The maximum number of cases fetched with each request. The default page size
 *  is 10.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A token identifying the page of results to return. If unspecified, the first
 *  page is retrieved.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** The name of the parent resource to search for cases under. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  An expression used to filter cases. Expressions use the following fields
 *  separated by `AND` and specified with `=`: - `organization`: An organization
 *  name in the form `organizations/`. - `project`: A project name in the form
 *  `projects/`. - `state`: Can be `OPEN` or `CLOSED`. - `priority`: Can be
 *  `P0`, `P1`, `P2`, `P3`, or `P4`. You can specify multiple values for
 *  priority using the `OR` operator. For example, `priority=P1 OR priority=P2`.
 *  - `creator.email`: The email address of the case creator. You must specify
 *  either `organization` or `project`. To search across `displayName`,
 *  `description`, and comments, use a global restriction with no keyword or
 *  operator. For example, `"my search"`. To search only cases updated after a
 *  certain date, use `update_time` restricted with that particular date, time,
 *  and timezone in ISO datetime format. For example,
 *  `update_time>"2020-01-01T00:00:00-05:00"`. `update_time` only supports the
 *  greater than operator (`>`). Examples: -
 *  `organization="organizations/123456789"` -
 *  `project="projects/my-project-id"` - `project="projects/123456789"` -
 *  `organization="organizations/123456789" AND state=CLOSED` -
 *  `project="projects/my-project-id" AND creator.email="tester\@example.com"` -
 *  `project="projects/my-project-id" AND (priority=P0 OR priority=P1)`
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Fetches a @c GTLRCloudSupport_SearchCasesResponse.
 *
 *  Search for cases using a query. EXAMPLES: cURL: ```shell
 *  parent="projects/some-project" curl \\ --header "Authorization: Bearer
 *  $(gcloud auth print-access-token)" \\
 *  "https://cloudsupport.googleapis.com/v2/$parent/cases:search" ``` Python:
 *  ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.cases().search(
 *  parent="projects/some-project", query="state=OPEN" )
 *  print(request.execute()) ```
 *
 *  @param parent The name of the parent resource to search for cases under.
 *
 *  @return GTLRCloudSupportQuery_CasesSearch
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Download a file attached to a case. Note: HTTP requests must append
 *  "?alt=media" to the URL. EXAMPLES: cURL: ```shell
 *  name="projects/some-project/cases/43594844/attachments/0674M00000WijAnZAJ"
 *  curl \\ --header "Authorization: Bearer $(gcloud auth print-access-token)"
 *  \\ "https://cloudsupport.googleapis.com/v2/$name:download?alt=media" ```
 *  Python: ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.media().download(
 *  name="projects/some-project/cases/43595344/attachments/0684M00000Pw6pHQAR" )
 *  request.uri = request.uri.split("?")[0] + "?alt=media"
 *  print(request.execute()) ```
 *
 *  Method: cloudsupport.media.download
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_MediaDownload : GTLRCloudSupportQuery

/** The name of the file attachment to download. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudSupport_Media.
 *
 *  Download a file attached to a case. Note: HTTP requests must append
 *  "?alt=media" to the URL. EXAMPLES: cURL: ```shell
 *  name="projects/some-project/cases/43594844/attachments/0674M00000WijAnZAJ"
 *  curl \\ --header "Authorization: Bearer $(gcloud auth print-access-token)"
 *  \\ "https://cloudsupport.googleapis.com/v2/$name:download?alt=media" ```
 *  Python: ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.media().download(
 *  name="projects/some-project/cases/43595344/attachments/0684M00000Pw6pHQAR" )
 *  request.uri = request.uri.split("?")[0] + "?alt=media"
 *  print(request.execute()) ```
 *
 *  @param name The name of the file attachment to download.
 *
 *  @return GTLRCloudSupportQuery_MediaDownload
 */
+ (instancetype)queryWithName:(NSString *)name;

/**
 *  Fetches the requested resource data as a @c GTLRDataObject.
 *
 *  Download a file attached to a case. Note: HTTP requests must append
 *  "?alt=media" to the URL. EXAMPLES: cURL: ```shell
 *  name="projects/some-project/cases/43594844/attachments/0674M00000WijAnZAJ"
 *  curl \\ --header "Authorization: Bearer $(gcloud auth print-access-token)"
 *  \\ "https://cloudsupport.googleapis.com/v2/$name:download?alt=media" ```
 *  Python: ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) request = supportApiService.media().download(
 *  name="projects/some-project/cases/43595344/attachments/0684M00000Pw6pHQAR" )
 *  request.uri = request.uri.split("?")[0] + "?alt=media"
 *  print(request.execute()) ```
 *
 *  @param name The name of the file attachment to download.
 *
 *  @return GTLRCloudSupportQuery_MediaDownload
 */
+ (instancetype)queryForMediaWithName:(NSString *)name;

@end

/**
 *  Create a file attachment on a case or Cloud resource. The attachment must
 *  have the following fields set: `filename`. EXAMPLES: cURL: ```shell echo
 *  "This text is in a file I'm uploading using CSAPI." \\ >
 *  "./example_file.txt" case="projects/some-project/cases/43594844" curl \\
 *  --header "Authorization: Bearer $(gcloud auth print-access-token)" \\
 *  --data-binary \@"./example_file.txt" \\
 *  "https://cloudsupport.googleapis.com/upload/v2beta/$case/attachments?attachment.filename=uploaded_via_curl.txt"
 *  ``` Python: ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) file_path = "./example_file.txt" with open(file_path, "w") as file:
 *  file.write( "This text is inside a file I'm going to upload using the Cloud
 *  Support API.", ) request = supportApiService.media().upload(
 *  parent="projects/some-project/cases/43595344", media_body=file_path )
 *  request.uri = request.uri.split("?")[0] +
 *  "?attachment.filename=uploaded_via_python.txt" print(request.execute()) ```
 *
 *  Method: cloudsupport.media.upload
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudSupportCloudPlatform
 */
@interface GTLRCloudSupportQuery_MediaUpload : GTLRCloudSupportQuery

/**
 *  Required. The name of the case or Cloud resource to which the attachment
 *  should be attached.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudSupport_Attachment.
 *
 *  Create a file attachment on a case or Cloud resource. The attachment must
 *  have the following fields set: `filename`. EXAMPLES: cURL: ```shell echo
 *  "This text is in a file I'm uploading using CSAPI." \\ >
 *  "./example_file.txt" case="projects/some-project/cases/43594844" curl \\
 *  --header "Authorization: Bearer $(gcloud auth print-access-token)" \\
 *  --data-binary \@"./example_file.txt" \\
 *  "https://cloudsupport.googleapis.com/upload/v2beta/$case/attachments?attachment.filename=uploaded_via_curl.txt"
 *  ``` Python: ```python import googleapiclient.discovery api_version = "v2"
 *  supportApiService = googleapiclient.discovery.build(
 *  serviceName="cloudsupport", version=api_version,
 *  discoveryServiceUrl=f"https://cloudsupport.googleapis.com/$discovery/rest?version={api_version}",
 *  ) file_path = "./example_file.txt" with open(file_path, "w") as file:
 *  file.write( "This text is inside a file I'm going to upload using the Cloud
 *  Support API.", ) request = supportApiService.media().upload(
 *  parent="projects/some-project/cases/43595344", media_body=file_path )
 *  request.uri = request.uri.split("?")[0] +
 *  "?attachment.filename=uploaded_via_python.txt" print(request.execute()) ```
 *
 *  @param object The @c GTLRCloudSupport_CreateAttachmentRequest to include in
 *    the query.
 *  @param parent Required. The name of the case or Cloud resource to which the
 *    attachment should be attached.
 *  @param uploadParameters The media to include in this query. Accepted MIME
 *    type: * / *
 *
 *  @return GTLRCloudSupportQuery_MediaUpload
 */
+ (instancetype)queryWithObject:(GTLRCloudSupport_CreateAttachmentRequest *)object
                         parent:(NSString *)parent
               uploadParameters:(nullable GTLRUploadParameters *)uploadParameters;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
