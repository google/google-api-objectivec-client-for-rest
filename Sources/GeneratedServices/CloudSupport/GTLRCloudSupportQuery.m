// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Cloud Support API (cloudsupport/v2beta)
// Description:
//   Manages Google Cloud technical support cases for Customer Care support
//   offerings.
// Documentation:
//   https://cloud.google.com/support/docs/apis

#import <GoogleAPIClientForREST/GTLRCloudSupportQuery.h>

@implementation GTLRCloudSupportQuery

@dynamic fields;

@end

@implementation GTLRCloudSupportQuery_AttachmentsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudSupport_CreateAttachmentRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2beta/{+parent}/attachments";
  GTLRCloudSupportQuery_AttachmentsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudSupport_Attachment class];
  query.loggingName = @"cloudsupport.attachments.create";
  return query;
}

@end

@implementation GTLRCloudSupportQuery_CaseClassificationsSearch

@dynamic pageSize, pageToken, query;

+ (instancetype)query {
  NSString *pathURITemplate = @"v2beta/caseClassifications:search";
  GTLRCloudSupportQuery_CaseClassificationsSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRCloudSupport_SearchCaseClassificationsResponse class];
  query.loggingName = @"cloudsupport.caseClassifications.search";
  return query;
}

@end

@implementation GTLRCloudSupportQuery_CasesAttachmentsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2beta/{+parent}/attachments";
  GTLRCloudSupportQuery_CasesAttachmentsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudSupport_ListAttachmentsResponse class];
  query.loggingName = @"cloudsupport.cases.attachments.list";
  return query;
}

@end

@implementation GTLRCloudSupportQuery_CasesClose

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudSupport_CloseCaseRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2beta/{+name}:close";
  GTLRCloudSupportQuery_CasesClose *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSupport_Case class];
  query.loggingName = @"cloudsupport.cases.close";
  return query;
}

@end

@implementation GTLRCloudSupportQuery_CasesCommentsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudSupport_Comment *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2beta/{+parent}/comments";
  GTLRCloudSupportQuery_CasesCommentsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudSupport_Comment class];
  query.loggingName = @"cloudsupport.cases.comments.create";
  return query;
}

@end

@implementation GTLRCloudSupportQuery_CasesCommentsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2beta/{+parent}/comments";
  GTLRCloudSupportQuery_CasesCommentsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudSupport_ListCommentsResponse class];
  query.loggingName = @"cloudsupport.cases.comments.list";
  return query;
}

@end

@implementation GTLRCloudSupportQuery_CasesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudSupport_Case *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2beta/{+parent}/cases";
  GTLRCloudSupportQuery_CasesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudSupport_Case class];
  query.loggingName = @"cloudsupport.cases.create";
  return query;
}

@end

@implementation GTLRCloudSupportQuery_CasesEscalate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudSupport_EscalateCaseRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2beta/{+name}:escalate";
  GTLRCloudSupportQuery_CasesEscalate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSupport_Case class];
  query.loggingName = @"cloudsupport.cases.escalate";
  return query;
}

@end

@implementation GTLRCloudSupportQuery_CasesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2beta/{+name}";
  GTLRCloudSupportQuery_CasesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSupport_Case class];
  query.loggingName = @"cloudsupport.cases.get";
  return query;
}

@end

@implementation GTLRCloudSupportQuery_CasesList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2beta/{+parent}/cases";
  GTLRCloudSupportQuery_CasesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudSupport_ListCasesResponse class];
  query.loggingName = @"cloudsupport.cases.list";
  return query;
}

@end

@implementation GTLRCloudSupportQuery_CasesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudSupport_Case *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2beta/{+name}";
  GTLRCloudSupportQuery_CasesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSupport_Case class];
  query.loggingName = @"cloudsupport.cases.patch";
  return query;
}

@end

@implementation GTLRCloudSupportQuery_CasesSearch

@dynamic pageSize, pageToken, query;

+ (instancetype)query {
  NSString *pathURITemplate = @"v2beta/cases:search";
  GTLRCloudSupportQuery_CasesSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRCloudSupport_SearchCasesResponse class];
  query.loggingName = @"cloudsupport.cases.search";
  return query;
}

@end

@implementation GTLRCloudSupportQuery_MediaDownload

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2beta/{+name}:download";
  GTLRCloudSupportQuery_MediaDownload *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudSupport_Media class];
  query.loggingName = @"cloudsupport.media.download";
  return query;
}

+ (instancetype)queryForMediaWithName:(NSString *)name {
  GTLRCloudSupportQuery_MediaDownload *query =
    [self queryWithName:name];
  query.downloadAsDataObjectType = @"media";
  query.useMediaDownloadService = YES;
  query.loggingName = @"Download cloudsupport.media.download";
  return query;
}

@end

@implementation GTLRCloudSupportQuery_MediaUpload

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudSupport_CreateAttachmentRequest *)object
                         parent:(NSString *)parent
               uploadParameters:(GTLRUploadParameters *)uploadParameters {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2beta/{+parent}/attachments";
  GTLRCloudSupportQuery_MediaUpload *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.uploadParameters = uploadParameters;
  query.expectedObjectClass = [GTLRCloudSupport_Attachment class];
  query.loggingName = @"cloudsupport.media.upload";
  return query;
}

@end
