// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Dialogflow API (dialogflow/v3)
// Description:
//   Builds conversational interfaces (for example, chatbots, and voice-powered
//   apps and devices).
// Documentation:
//   https://cloud.google.com/dialogflow/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDialogflow_GoogleCloudDialogflowCxV3AdvancedSettings;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Agent;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3AudioInput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1AudioInput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ContinuousTestResult;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurn;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput_InjectedParameters;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput_DiagnosticInfo;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput_SessionParameters;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1DtmfInput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Environment;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EventHandler;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EventInput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Form;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FormParameter;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Fulfillment;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Intent;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Intent_Labels;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1IntentInput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1IntentParameter;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Page;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfo;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfoFormInfo;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1QueryInput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessage;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessage_Payload;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess_Metadata;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff_Metadata;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageText;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1SessionInfo;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1SessionInfo_Parameters;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCase;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCaseError;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCaseResult;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestConfig;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestError;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestRunDifference;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TextInput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TransitionRoute;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Webhook;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookGenericWebService;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookGenericWebService_RequestHeaders;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequest_Payload;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo_Parameters;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookResponse_Payload;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Changelog;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ContinuousTestResult;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurn;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurnUserInput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurnUserInput_InjectedParameters;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput_DiagnosticInfo;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput_SessionParameters;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Deployment;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3DeploymentResult;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3DtmfInput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3EntityType;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3EntityTypeEntity;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Environment;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3EnvironmentVersionConfig;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3EnvironmentWebhookConfig;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3EventHandler;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3EventInput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Experiment;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentDefinition;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResult;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Flow;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3FlowValidationResult;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Form;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3FormParameter;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3FormParameterFillBehavior;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Fulfillment;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillmentConditionalCases;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillmentSetParameterAction;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Intent;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Intent_Labels;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3IntentCoverage;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3IntentCoverageIntent;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3IntentInput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3IntentParameter;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3IntentTrainingPhrase;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3IntentTrainingPhrasePart;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Match;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Match_Parameters;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3MatchIntentRequest;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Page;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3PageInfo;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3PageInfoFormInfo;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3QueryInput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3QueryParameters;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3QueryParameters_Parameters;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3QueryParameters_Payload;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3QueryParameters_WebhookHeaders;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3QueryResult;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3QueryResult_DiagnosticInfo;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3QueryResult_Parameters;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3QueryResult_WebhookPayloads_Item;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ResourceName;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessage;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessage_Payload;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess_Metadata;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageEndInteraction;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff_Metadata;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageMixedAudio;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessagePlayAudio;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageText;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3RolloutConfig;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3RolloutConfigRolloutStep;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3RolloutState;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3SentimentAnalysisResult;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3SessionInfo;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3SessionInfo_Parameters;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3SpeechToTextSettings;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3SynthesizeSpeechConfig;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TestCase;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseError;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseResult;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TestConfig;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TestError;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TestRunDifference;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TextInput;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionCoverage;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionCoverageTransition;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRoute;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroup;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroupCoverage;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverage;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverageTransition;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3VariantsHistory;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Version;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3VersionVariants;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3VersionVariantsVariant;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3VoiceSelectionParams;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3Webhook;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookGenericWebService;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookGenericWebService_RequestHeaders;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequest_Payload;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequestIntentInfo;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequestIntentInfo_Parameters;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookResponse_Payload;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse;
@class GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig;
@class GTLRDialogflow_GoogleCloudDialogflowV2AnnotatedMessagePart;
@class GTLRDialogflow_GoogleCloudDialogflowV2ArticleAnswer;
@class GTLRDialogflow_GoogleCloudDialogflowV2ArticleAnswer_Metadata;
@class GTLRDialogflow_GoogleCloudDialogflowV2ArticleSuggestionModelMetadata;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1AnnotatedMessagePart;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1ArticleAnswer;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1ArticleAnswer_Metadata;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1Context;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1Context_Parameters;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1EntityTypeEntity;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1EventInput;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1EventInput_Parameters;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1ExportOperationMetadata;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1FaqAnswer;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1FaqAnswer_Metadata;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1GcsDestination;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1Intent;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Payload;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBasicCard;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageCard;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageCardButton;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageColumnProperties;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageImage;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageListSelect;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageListSelectItem;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageMediaContent;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageQuickReplies;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmText;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSuggestion;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSuggestions;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTableCard;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTableCardCell;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTableCardRow;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageText;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentParameter;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentTrainingPhrase;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeAnswers;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1Message;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1MessageAnnotation;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest_Payload;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1QueryResult;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1QueryResult_DiagnosticInfo;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1QueryResult_Parameters;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1QueryResult_WebhookPayload;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1Sentiment;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1SentimentAnalysisResult;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1SessionEntityType;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1SmartReplyAnswer;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1SuggestArticlesResponse;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1SuggestionResult;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse;
@class GTLRDialogflow_GoogleCloudDialogflowV2beta1WebhookResponse_Payload;
@class GTLRDialogflow_GoogleCloudDialogflowV2Context;
@class GTLRDialogflow_GoogleCloudDialogflowV2Context_Parameters;
@class GTLRDialogflow_GoogleCloudDialogflowV2EntityType;
@class GTLRDialogflow_GoogleCloudDialogflowV2EntityTypeEntity;
@class GTLRDialogflow_GoogleCloudDialogflowV2EventInput;
@class GTLRDialogflow_GoogleCloudDialogflowV2EventInput_Parameters;
@class GTLRDialogflow_GoogleCloudDialogflowV2ExportOperationMetadata;
@class GTLRDialogflow_GoogleCloudDialogflowV2FaqAnswer;
@class GTLRDialogflow_GoogleCloudDialogflowV2FaqAnswer_Metadata;
@class GTLRDialogflow_GoogleCloudDialogflowV2GcsDestination;
@class GTLRDialogflow_GoogleCloudDialogflowV2InputDataset;
@class GTLRDialogflow_GoogleCloudDialogflowV2Intent;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentFollowupIntentInfo;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessage;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Payload;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBasicCard;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBasicCardButton;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageCard;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageCardButton;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageCarouselSelect;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageCarouselSelectItem;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageColumnProperties;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageImage;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageListSelect;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageListSelectItem;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageMediaContent;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageQuickReplies;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSelectItemInfo;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSimpleResponse;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSimpleResponses;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSuggestion;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSuggestions;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageTableCard;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageTableCardCell;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageTableCardRow;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageText;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentParameter;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentTrainingPhrase;
@class GTLRDialogflow_GoogleCloudDialogflowV2IntentTrainingPhrasePart;
@class GTLRDialogflow_GoogleCloudDialogflowV2Message;
@class GTLRDialogflow_GoogleCloudDialogflowV2MessageAnnotation;
@class GTLRDialogflow_GoogleCloudDialogflowV2OriginalDetectIntentRequest;
@class GTLRDialogflow_GoogleCloudDialogflowV2OriginalDetectIntentRequest_Payload;
@class GTLRDialogflow_GoogleCloudDialogflowV2QueryResult;
@class GTLRDialogflow_GoogleCloudDialogflowV2QueryResult_DiagnosticInfo;
@class GTLRDialogflow_GoogleCloudDialogflowV2QueryResult_Parameters;
@class GTLRDialogflow_GoogleCloudDialogflowV2QueryResult_WebhookPayload;
@class GTLRDialogflow_GoogleCloudDialogflowV2Sentiment;
@class GTLRDialogflow_GoogleCloudDialogflowV2SentimentAnalysisResult;
@class GTLRDialogflow_GoogleCloudDialogflowV2SessionEntityType;
@class GTLRDialogflow_GoogleCloudDialogflowV2SmartReplyAnswer;
@class GTLRDialogflow_GoogleCloudDialogflowV2SmartReplyModelMetadata;
@class GTLRDialogflow_GoogleCloudDialogflowV2SuggestArticlesResponse;
@class GTLRDialogflow_GoogleCloudDialogflowV2SuggestFaqAnswersResponse;
@class GTLRDialogflow_GoogleCloudDialogflowV2SuggestionResult;
@class GTLRDialogflow_GoogleCloudDialogflowV2SuggestSmartRepliesResponse;
@class GTLRDialogflow_GoogleCloudDialogflowV2WebhookResponse_Payload;
@class GTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata;
@class GTLRDialogflow_GoogleCloudLocationLocation;
@class GTLRDialogflow_GoogleCloudLocationLocation_Labels;
@class GTLRDialogflow_GoogleCloudLocationLocation_Metadata;
@class GTLRDialogflow_GoogleLongrunningOperation;
@class GTLRDialogflow_GoogleLongrunningOperation_Metadata;
@class GTLRDialogflow_GoogleLongrunningOperation_Response;
@class GTLRDialogflow_GoogleRpcStatus;
@class GTLRDialogflow_GoogleRpcStatus_Details_Item;
@class GTLRDialogflow_GoogleTypeLatLng;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ContinuousTestResult.result

/**
 *  Not specified. Should never be used.
 *
 *  Value: "AGGREGATED_TEST_RESULT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1ContinuousTestResult_Result_AggregatedTestResultUnspecified;
/**
 *  At least one test did not pass.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1ContinuousTestResult_Result_Failed;
/**
 *  All the tests passed.
 *
 *  Value: "PASSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1ContinuousTestResult_Result_Passed;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata.state

/**
 *  The operation is done, either cancelled or completed.
 *
 *  Value: "DONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata_State_Done;
/**
 *  The operation has been created.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata_State_Pending;
/**
 *  The operation is currently running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata_State_Running;
/**
 *  State unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig.audioEncoding

/**
 *  Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.
 *
 *  Value: "AUDIO_ENCODING_AMR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingAmr;
/**
 *  Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.
 *
 *  Value: "AUDIO_ENCODING_AMR_WB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingAmrWb;
/**
 *  [`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio
 *  Codec) is the recommended encoding because it is lossless (therefore
 *  recognition is not compromised) and requires only about half the bandwidth
 *  of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples,
 *  however, not all fields in `STREAMINFO` are supported.
 *
 *  Value: "AUDIO_ENCODING_FLAC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingFlac;
/**
 *  Uncompressed 16-bit signed little-endian samples (Linear PCM).
 *
 *  Value: "AUDIO_ENCODING_LINEAR_16"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingLinear16;
/**
 *  8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.
 *
 *  Value: "AUDIO_ENCODING_MULAW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingMulaw;
/**
 *  Opus encoded audio frames in Ogg container
 *  ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be
 *  16000.
 *
 *  Value: "AUDIO_ENCODING_OGG_OPUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingOggOpus;
/**
 *  Although the use of lossy encodings is not recommended, if a very low
 *  bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex
 *  encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow
 *  API has a header byte in each block, as in MIME type
 *  `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding
 *  defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a
 *  sequence of blocks, one block per RTP packet. Each block starts with a byte
 *  containing the length of the block, in bytes, followed by one or more frames
 *  of Speex data, padded to an integral number of bytes (octets) as specified
 *  in RFC 5574. In other words, each RTP header is replaced with a single byte
 *  containing the block length. Only Speex wideband is supported.
 *  `sample_rate_hertz` must be 16000.
 *
 *  Value: "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingSpeexWithHeaderByte;
/**
 *  Not specified.
 *
 *  Value: "AUDIO_ENCODING_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig.modelVariant

/**
 *  No model variant specified. In this case Dialogflow defaults to
 *  USE_BEST_AVAILABLE.
 *
 *  Value: "SPEECH_MODEL_VARIANT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_ModelVariant_SpeechModelVariantUnspecified;
/**
 *  Use the best available variant of the Speech model that the caller is
 *  eligible for. Please see the [Dialogflow
 *  docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make
 *  your project eligible for enhanced models.
 *
 *  Value: "USE_BEST_AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_ModelVariant_UseBestAvailable;
/**
 *  Use an enhanced model variant: * If an enhanced variant does not exist for
 *  the given model and request language, Dialogflow falls back to the standard
 *  variant. The [Cloud Speech
 *  documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
 *  describes which models have enhanced variants. * If the API caller isn't
 *  eligible for enhanced models, Dialogflow returns an error. Please see the
 *  [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for
 *  how to make your project eligible.
 *
 *  Value: "USE_ENHANCED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_ModelVariant_UseEnhanced;
/**
 *  Use standard model variant even if an enhanced model is available. See the
 *  [Cloud Speech
 *  documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
 *  for details about enhanced models.
 *
 *  Value: "USE_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_ModelVariant_UseStandard;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo.state

/**
 *  Indicates that the parameter does not have a value.
 *
 *  Value: "EMPTY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo_State_Empty;
/**
 *  Indicates that the parameter has a value.
 *
 *  Value: "FILLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo_State_Filled;
/**
 *  Indicates that the parameter value is invalid. This field can be used by the
 *  webhook to invalidate the parameter and ask the server to collect it from
 *  the user again.
 *
 *  Value: "INVALID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo_State_Invalid;
/**
 *  Not specified. This value should be never used.
 *
 *  Value: "PARAMETER_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo_State_ParameterStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCaseResult.testResult

/**
 *  The test did not pass.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCaseResult_TestResult_Failed;
/**
 *  The test passed.
 *
 *  Value: "PASSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCaseResult_TestResult_Passed;
/**
 *  Not specified. Should never be used.
 *
 *  Value: "TEST_RESULT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCaseResult_TestResult_TestResultUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestRunDifference.type

/**
 *  Should never be used.
 *
 *  Value: "DIFF_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestRunDifference_Type_DiffTypeUnspecified;
/**
 *  The intent.
 *
 *  Value: "INTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestRunDifference_Type_Intent;
/**
 *  The page.
 *
 *  Value: "PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestRunDifference_Type_Page;
/**
 *  The parameters.
 *
 *  Value: "PARAMETERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestRunDifference_Type_Parameters;
/**
 *  The message utterance.
 *
 *  Value: "UTTERANCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestRunDifference_Type_Utterance;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse.mergeBehavior

/**
 *  `messages` will be appended to the list of messages waiting to be sent to
 *  the user.
 *
 *  Value: "APPEND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse_MergeBehavior_Append;
/**
 *  Not specified. `APPEND` will be used.
 *
 *  Value: "MERGE_BEHAVIOR_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse_MergeBehavior_MergeBehaviorUnspecified;
/**
 *  `messages` will replace the list of messages waiting to be sent to the user.
 *
 *  Value: "REPLACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse_MergeBehavior_Replace;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3ContinuousTestResult.result

/**
 *  Not specified. Should never be used.
 *
 *  Value: "AGGREGATED_TEST_RESULT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ContinuousTestResult_Result_AggregatedTestResultUnspecified;
/**
 *  At least one test did not pass.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ContinuousTestResult_Result_Failed;
/**
 *  All the tests passed.
 *
 *  Value: "PASSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ContinuousTestResult_Result_Passed;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3Deployment.state

/**
 *  The deployment failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Deployment_State_Failed;
/**
 *  The deployment is running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Deployment_State_Running;
/**
 *  State unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Deployment_State_StateUnspecified;
/**
 *  The deployment succeeded.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Deployment_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentResponse.responseType

/**
 *  Final response.
 *
 *  Value: "FINAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentResponse_ResponseType_Final;
/**
 *  Partial response. e.g. Aggregated responses in a Fulfillment that enables
 *  `return_partial_response` can be returned as partial response. WARNING:
 *  partial response is not eligible for barge-in.
 *
 *  Value: "PARTIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentResponse_ResponseType_Partial;
/**
 *  Not specified. This should never happen.
 *
 *  Value: "RESPONSE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentResponse_ResponseType_ResponseTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3EntityType.autoExpansionMode

/**
 *  Allows an agent to recognize values that have not been explicitly listed in
 *  the entity.
 *
 *  Value: "AUTO_EXPANSION_MODE_DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3EntityType_AutoExpansionMode_AutoExpansionModeDefault;
/**
 *  Auto expansion disabled for the entity.
 *
 *  Value: "AUTO_EXPANSION_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3EntityType_AutoExpansionMode_AutoExpansionModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3EntityType.kind

/**
 *  List entity types contain a set of entries that do not map to canonical
 *  values. However, list entity types can contain references to other entity
 *  types (with or without aliases).
 *
 *  Value: "KIND_LIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3EntityType_Kind_KindList;
/**
 *  Map entity types allow mapping of a group of synonyms to a canonical value.
 *
 *  Value: "KIND_MAP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3EntityType_Kind_KindMap;
/**
 *  Regexp entity types allow to specify regular expressions in entries values.
 *
 *  Value: "KIND_REGEXP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3EntityType_Kind_KindRegexp;
/**
 *  Not specified. This value should be never used.
 *
 *  Value: "KIND_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3EntityType_Kind_KindUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3Experiment.state

/**
 *  The experiment is done.
 *
 *  Value: "DONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Experiment_State_Done;
/**
 *  The experiment is created but not started yet.
 *
 *  Value: "DRAFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Experiment_State_Draft;
/**
 *  The experiment with auto-rollout enabled has failed.
 *
 *  Value: "ROLLOUT_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Experiment_State_RolloutFailed;
/**
 *  The experiment is running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Experiment_State_Running;
/**
 *  State unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Experiment_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric.countType

/**
 *  Average turn count in a session.
 *
 *  Value: "AVERAGE_TURN_COUNT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_CountType_AverageTurnCount;
/**
 *  Count type unspecified.
 *
 *  Value: "COUNT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_CountType_CountTypeUnspecified;
/**
 *  Total number of occurrences of a 'NO_MATCH'.
 *
 *  Value: "TOTAL_NO_MATCH_COUNT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_CountType_TotalNoMatchCount;
/**
 *  Total number of turn counts.
 *
 *  Value: "TOTAL_TURN_COUNT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_CountType_TotalTurnCount;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric.type

/**
 *  Percentage of sessions where user hung up.
 *
 *  Value: "ABANDONED_SESSION_RATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_Type_AbandonedSessionRate;
/**
 *  Percentage of sessions with the same user calling back.
 *
 *  Value: "CALLBACK_SESSION_RATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_Type_CallbackSessionRate;
/**
 *  Percentage of contained sessions without user calling back in 24 hours.
 *
 *  Value: "CONTAINED_SESSION_NO_CALLBACK_RATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_Type_ContainedSessionNoCallbackRate;
/**
 *  Percentage of sessions that were handed to a human agent.
 *
 *  Value: "LIVE_AGENT_HANDOFF_RATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_Type_LiveAgentHandoffRate;
/**
 *  Metric unspecified.
 *
 *  Value: "METRIC_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_Type_MetricUnspecified;
/**
 *  Percentage of sessions reached Dialogflow 'END_PAGE' or 'END_SESSION'.
 *
 *  Value: "SESSION_END_RATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_Type_SessionEndRate;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3ExportAgentRequest.dataFormat

/**
 *  Agent content will be exported as raw bytes.
 *
 *  Value: "BLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ExportAgentRequest_DataFormat_Blob;
/**
 *  Unspecified format.
 *
 *  Value: "DATA_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ExportAgentRequest_DataFormat_DataFormatUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3ExportTestCasesRequest.dataFormat

/**
 *  Raw bytes.
 *
 *  Value: "BLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ExportTestCasesRequest_DataFormat_Blob;
/**
 *  Unspecified format.
 *
 *  Value: "DATA_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ExportTestCasesRequest_DataFormat_DataFormatUnspecified;
/**
 *  JSON format.
 *
 *  Value: "JSON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ExportTestCasesRequest_DataFormat_Json;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata.state

/**
 *  The operation is done, either cancelled or completed.
 *
 *  Value: "DONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata_State_Done;
/**
 *  The operation has been created.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata_State_Pending;
/**
 *  The operation is currently running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata_State_Running;
/**
 *  State unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3ImportFlowRequest.importOption

/**
 *  Fallback to default settings if some settings are not supported in the agent
 *  to import into. E.g. Standard NLU will be used if custom NLU is not
 *  available.
 *
 *  Value: "FALLBACK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ImportFlowRequest_ImportOption_Fallback;
/**
 *  Unspecified. Treated as `KEEP`.
 *
 *  Value: "IMPORT_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ImportFlowRequest_ImportOption_ImportOptionUnspecified;
/**
 *  Always respect settings in exported flow content. It may cause a import
 *  failure if some settings (e.g. custom NLU) are not supported in the agent to
 *  import into.
 *
 *  Value: "KEEP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ImportFlowRequest_ImportOption_Keep;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig.audioEncoding

/**
 *  Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.
 *
 *  Value: "AUDIO_ENCODING_AMR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingAmr;
/**
 *  Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.
 *
 *  Value: "AUDIO_ENCODING_AMR_WB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingAmrWb;
/**
 *  [`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio
 *  Codec) is the recommended encoding because it is lossless (therefore
 *  recognition is not compromised) and requires only about half the bandwidth
 *  of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples,
 *  however, not all fields in `STREAMINFO` are supported.
 *
 *  Value: "AUDIO_ENCODING_FLAC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingFlac;
/**
 *  Uncompressed 16-bit signed little-endian samples (Linear PCM).
 *
 *  Value: "AUDIO_ENCODING_LINEAR_16"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingLinear16;
/**
 *  8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.
 *
 *  Value: "AUDIO_ENCODING_MULAW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingMulaw;
/**
 *  Opus encoded audio frames in Ogg container
 *  ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be
 *  16000.
 *
 *  Value: "AUDIO_ENCODING_OGG_OPUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingOggOpus;
/**
 *  Although the use of lossy encodings is not recommended, if a very low
 *  bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex
 *  encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow
 *  API has a header byte in each block, as in MIME type
 *  `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding
 *  defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a
 *  sequence of blocks, one block per RTP packet. Each block starts with a byte
 *  containing the length of the block, in bytes, followed by one or more frames
 *  of Speex data, padded to an integral number of bytes (octets) as specified
 *  in RFC 5574. In other words, each RTP header is replaced with a single byte
 *  containing the block length. Only Speex wideband is supported.
 *  `sample_rate_hertz` must be 16000.
 *
 *  Value: "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingSpeexWithHeaderByte;
/**
 *  Not specified.
 *
 *  Value: "AUDIO_ENCODING_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig.modelVariant

/**
 *  No model variant specified. In this case Dialogflow defaults to
 *  USE_BEST_AVAILABLE.
 *
 *  Value: "SPEECH_MODEL_VARIANT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_ModelVariant_SpeechModelVariantUnspecified;
/**
 *  Use the best available variant of the Speech model that the caller is
 *  eligible for. Please see the [Dialogflow
 *  docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make
 *  your project eligible for enhanced models.
 *
 *  Value: "USE_BEST_AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_ModelVariant_UseBestAvailable;
/**
 *  Use an enhanced model variant: * If an enhanced variant does not exist for
 *  the given model and request language, Dialogflow falls back to the standard
 *  variant. The [Cloud Speech
 *  documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
 *  describes which models have enhanced variants. * If the API caller isn't
 *  eligible for enhanced models, Dialogflow returns an error. Please see the
 *  [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for
 *  how to make your project eligible.
 *
 *  Value: "USE_ENHANCED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_ModelVariant_UseEnhanced;
/**
 *  Use standard model variant even if an enhanced model is available. See the
 *  [Cloud Speech
 *  documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
 *  for details about enhanced models.
 *
 *  Value: "USE_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_ModelVariant_UseStandard;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3Match.matchType

/**
 *  The query directly triggered an intent.
 *
 *  Value: "DIRECT_INTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Match_MatchType_DirectIntent;
/**
 *  The query directly triggered an event.
 *
 *  Value: "EVENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Match_MatchType_Event;
/**
 *  The query was matched to an intent.
 *
 *  Value: "INTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Match_MatchType_Intent;
/**
 *  Not specified. Should never be used.
 *
 *  Value: "MATCH_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Match_MatchType_MatchTypeUnspecified;
/**
 *  Indicates an empty query.
 *
 *  Value: "NO_INPUT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Match_MatchType_NoInput;
/**
 *  No match was found for the query.
 *
 *  Value: "NO_MATCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Match_MatchType_NoMatch;
/**
 *  The query was used for parameter filling.
 *
 *  Value: "PARAMETER_FILLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Match_MatchType_ParameterFilling;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings.modelTrainingMode

/**
 *  NLU model training is automatically triggered when a flow gets modified.
 *  User can also manually trigger model training in this mode.
 *
 *  Value: "MODEL_TRAINING_MODE_AUTOMATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings_ModelTrainingMode_ModelTrainingModeAutomatic;
/**
 *  User needs to manually trigger NLU model training. Best for large flows
 *  whose models take long time to train.
 *
 *  Value: "MODEL_TRAINING_MODE_MANUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings_ModelTrainingMode_ModelTrainingModeManual;
/**
 *  Not specified. `MODEL_TRAINING_MODE_AUTOMATIC` will be used.
 *
 *  Value: "MODEL_TRAINING_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings_ModelTrainingMode_ModelTrainingModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings.modelType

/**
 *  Use advanced NLU model.
 *
 *  Value: "MODEL_TYPE_ADVANCED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings_ModelType_ModelTypeAdvanced;
/**
 *  Use standard NLU model.
 *
 *  Value: "MODEL_TYPE_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings_ModelType_ModelTypeStandard;
/**
 *  Not specified. `MODEL_TYPE_STANDARD` will be used.
 *
 *  Value: "MODEL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings_ModelType_ModelTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig.audioEncoding

/**
 *  Uncompressed 16-bit signed little-endian samples (Linear PCM). Audio content
 *  returned as LINEAR16 also contains a WAV header.
 *
 *  Value: "OUTPUT_AUDIO_ENCODING_LINEAR_16"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig_AudioEncoding_OutputAudioEncodingLinear16;
/**
 *  MP3 audio at 32kbps.
 *
 *  Value: "OUTPUT_AUDIO_ENCODING_MP3"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig_AudioEncoding_OutputAudioEncodingMp3;
/**
 *  MP3 audio at 64kbps.
 *
 *  Value: "OUTPUT_AUDIO_ENCODING_MP3_64_KBPS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig_AudioEncoding_OutputAudioEncodingMp364Kbps;
/**
 *  8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.
 *
 *  Value: "OUTPUT_AUDIO_ENCODING_MULAW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig_AudioEncoding_OutputAudioEncodingMulaw;
/**
 *  Opus encoded audio wrapped in an ogg container. The result will be a file
 *  which can be played natively on Android, and in browsers (at least Chrome
 *  and Firefox). The quality of the encoding is considerably higher than MP3
 *  while using approximately the same bitrate.
 *
 *  Value: "OUTPUT_AUDIO_ENCODING_OGG_OPUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig_AudioEncoding_OutputAudioEncodingOggOpus;
/**
 *  Not specified.
 *
 *  Value: "OUTPUT_AUDIO_ENCODING_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig_AudioEncoding_OutputAudioEncodingUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo.state

/**
 *  Indicates that the parameter does not have a value.
 *
 *  Value: "EMPTY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo_State_Empty;
/**
 *  Indicates that the parameter has a value.
 *
 *  Value: "FILLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo_State_Filled;
/**
 *  Indicates that the parameter value is invalid. This field can be used by the
 *  webhook to invalidate the parameter and ask the server to collect it from
 *  the user again.
 *
 *  Value: "INVALID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo_State_Invalid;
/**
 *  Not specified. This value should be never used.
 *
 *  Value: "PARAMETER_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo_State_ParameterStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3RestoreAgentRequest.restoreOption

/**
 *  Fallback to default settings if some settings are not supported in the
 *  target agent.
 *
 *  Value: "FALLBACK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3RestoreAgentRequest_RestoreOption_Fallback;
/**
 *  Always respect the settings from the exported agent file. It may cause a
 *  restoration failure if some settings (e.g. model type) are not supported in
 *  the target agent.
 *
 *  Value: "KEEP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3RestoreAgentRequest_RestoreOption_Keep;
/**
 *  Unspecified. Treated as KEEP.
 *
 *  Value: "RESTORE_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3RestoreAgentRequest_RestoreOption_RestoreOptionUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings.purgeDataTypes

/**
 *  Dialogflow history. This does not include Cloud logging, which is owned by
 *  the user - not Dialogflow.
 *
 *  Value: "DIALOGFLOW_HISTORY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings_PurgeDataTypes_DialogflowHistory;
/**
 *  Unspecified. Do not use.
 *
 *  Value: "PURGE_DATA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings_PurgeDataTypes_PurgeDataTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings.redactionScope

/**
 *  On data to be written to disk or similar devices that are capable of holding
 *  data even if power is disconnected. This includes data that are temporarily
 *  saved on disk.
 *
 *  Value: "REDACT_DISK_STORAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings_RedactionScope_RedactDiskStorage;
/**
 *  Don't redact any kind of data.
 *
 *  Value: "REDACTION_SCOPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings_RedactionScope_RedactionScopeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings.redactionStrategy

/**
 *  Do not redact.
 *
 *  Value: "REDACTION_STRATEGY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings_RedactionStrategy_RedactionStrategyUnspecified;
/**
 *  Call redaction service to clean up the data to be persisted.
 *
 *  Value: "REDACT_WITH_SERVICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings_RedactionStrategy_RedactWithService;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings.audioFormat

/**
 *  Unspecified. Do not use.
 *
 *  Value: "AUDIO_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings_AudioFormat_AudioFormatUnspecified;
/**
 *  MP3 file format.
 *
 *  Value: "MP3"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings_AudioFormat_Mp3;
/**
 *  G.711 mu-law PCM with 8kHz sample rate.
 *
 *  Value: "MULAW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings_AudioFormat_Mulaw;
/**
 *  OGG Vorbis.
 *
 *  Value: "OGG"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings_AudioFormat_Ogg;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType.entityOverrideMode

/**
 *  The collection of session entities overrides the collection of entities in
 *  the corresponding custom entity type.
 *
 *  Value: "ENTITY_OVERRIDE_MODE_OVERRIDE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType_EntityOverrideMode_EntityOverrideModeOverride;
/**
 *  The collection of session entities extends the collection of entities in the
 *  corresponding custom entity type. Note: Even in this override mode calls to
 *  `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType`
 *  and `UpdateSessionEntityType` only return the additional entities added in
 *  this session entity type. If you want to get the supplemented list, please
 *  call EntityTypes.GetEntityType on the custom entity type and merge.
 *
 *  Value: "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType_EntityOverrideMode_EntityOverrideModeSupplement;
/**
 *  Not specified. This value should be never used.
 *
 *  Value: "ENTITY_OVERRIDE_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType_EntityOverrideMode_EntityOverrideModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseResult.testResult

/**
 *  The test did not pass.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseResult_TestResult_Failed;
/**
 *  The test passed.
 *
 *  Value: "PASSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseResult_TestResult_Passed;
/**
 *  Not specified. Should never be used.
 *
 *  Value: "TEST_RESULT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseResult_TestResult_TestResultUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3TestRunDifference.type

/**
 *  Should never be used.
 *
 *  Value: "DIFF_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3TestRunDifference_Type_DiffTypeUnspecified;
/**
 *  The intent.
 *
 *  Value: "INTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3TestRunDifference_Type_Intent;
/**
 *  The page.
 *
 *  Value: "PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3TestRunDifference_Type_Page;
/**
 *  The parameters.
 *
 *  Value: "PARAMETERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3TestRunDifference_Type_Parameters;
/**
 *  The message utterance.
 *
 *  Value: "UTTERANCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3TestRunDifference_Type_Utterance;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage.resourceType

/**
 *  Agent.
 *
 *  Value: "AGENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_Agent;
/**
 *  Entity type.
 *
 *  Value: "ENTITY_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_EntityType;
/**
 *  Multiple entity types.
 *
 *  Value: "ENTITY_TYPES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_EntityTypes;
/**
 *  Flow.
 *
 *  Value: "FLOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_Flow;
/**
 *  Intent.
 *
 *  Value: "INTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_Intent;
/**
 *  Intent parameter.
 *
 *  Value: "INTENT_PARAMETER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_IntentParameter;
/**
 *  Multiple intents.
 *
 *  Value: "INTENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_Intents;
/**
 *  Intent training phrase.
 *
 *  Value: "INTENT_TRAINING_PHRASE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_IntentTrainingPhrase;
/**
 *  Multiple training phrases.
 *
 *  Value: "INTENT_TRAINING_PHRASES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_IntentTrainingPhrases;
/**
 *  Page.
 *
 *  Value: "PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_Page;
/**
 *  Multiple pages.
 *
 *  Value: "PAGES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_Pages;
/**
 *  Unspecified.
 *
 *  Value: "RESOURCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_ResourceTypeUnspecified;
/**
 *  Transition route group.
 *
 *  Value: "TRANSITION_ROUTE_GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_TransitionRouteGroup;
/**
 *  Webhook.
 *
 *  Value: "WEBHOOK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_Webhook;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage.severity

/**
 *  The agent may experience failures.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_Severity_Error;
/**
 *  The agent doesn't follow Dialogflow best practices.
 *
 *  Value: "INFO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_Severity_Info;
/**
 *  Unspecified.
 *
 *  Value: "SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_Severity_SeverityUnspecified;
/**
 *  The agent may not behave as expected.
 *
 *  Value: "WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_Severity_Warning;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3Version.state

/**
 *  Version training failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Version_State_Failed;
/**
 *  Version is not ready to serve (e.g. training is running).
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Version_State_Running;
/**
 *  Not specified. This value is not used.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Version_State_StateUnspecified;
/**
 *  Training has succeeded and this version is ready to serve.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3Version_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3VoiceSelectionParams.ssmlGender

/**
 *  A female voice.
 *
 *  Value: "SSML_VOICE_GENDER_FEMALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3VoiceSelectionParams_SsmlGender_SsmlVoiceGenderFemale;
/**
 *  A male voice.
 *
 *  Value: "SSML_VOICE_GENDER_MALE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3VoiceSelectionParams_SsmlGender_SsmlVoiceGenderMale;
/**
 *  A gender-neutral voice.
 *
 *  Value: "SSML_VOICE_GENDER_NEUTRAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3VoiceSelectionParams_SsmlGender_SsmlVoiceGenderNeutral;
/**
 *  An unspecified gender, which means that the client doesn't care which gender
 *  the selected voice will have.
 *
 *  Value: "SSML_VOICE_GENDER_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3VoiceSelectionParams_SsmlGender_SsmlVoiceGenderUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse.mergeBehavior

/**
 *  `messages` will be appended to the list of messages waiting to be sent to
 *  the user.
 *
 *  Value: "APPEND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse_MergeBehavior_Append;
/**
 *  Not specified. `APPEND` will be used.
 *
 *  Value: "MERGE_BEHAVIOR_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse_MergeBehavior_MergeBehaviorUnspecified;
/**
 *  `messages` will replace the list of messages waiting to be sent to the user.
 *
 *  Value: "REPLACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse_MergeBehavior_Replace;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2ArticleSuggestionModelMetadata.trainingModelType

/**
 *  ModelType unspecified.
 *
 *  Value: "MODEL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ArticleSuggestionModelMetadata_TrainingModelType_ModelTypeUnspecified;
/**
 *  ModelType smart reply bert model.
 *
 *  Value: "SMART_REPLY_BERT_MODEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ArticleSuggestionModelMetadata_TrainingModelType_SmartReplyBertModel;
/**
 *  ModelType smart reply dual encoder model.
 *
 *  Value: "SMART_REPLY_DUAL_ENCODER_MODEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ArticleSuggestionModelMetadata_TrainingModelType_SmartReplyDualEncoderModel;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata.participantRole

/**
 *  Participant is an automated agent, such as a Dialogflow agent.
 *
 *  Value: "AUTOMATED_AGENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_AutomatedAgent;
/**
 *  Participant is an end user that has called or chatted with Dialogflow
 *  services.
 *
 *  Value: "END_USER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_EndUser;
/**
 *  Participant is a human agent.
 *
 *  Value: "HUMAN_AGENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_HumanAgent;
/**
 *  Participant role not set.
 *
 *  Value: "ROLE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_RoleUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata.suggestionFeatureType

/**
 *  Run article suggestion model for chat.
 *
 *  Value: "ARTICLE_SUGGESTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_ArticleSuggestion;
/**
 *  Run conversation summarization model for chat.
 *
 *  Value: "CONVERSATION_SUMMARIZATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_ConversationSummarization;
/**
 *  Run FAQ model.
 *
 *  Value: "FAQ"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_Faq;
/**
 *  Run smart reply model for chat.
 *
 *  Value: "SMART_REPLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_SmartReply;
/**
 *  Unspecified feature type.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1ConversationEvent.type

/**
 *  An existing conversation has closed. This is fired when a telephone call is
 *  terminated, or a conversation is closed via the API.
 *
 *  Value: "CONVERSATION_FINISHED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1ConversationEvent_Type_ConversationFinished;
/**
 *  A new conversation has been opened. This is fired when a telephone call is
 *  answered, or a conversation is created via the API.
 *
 *  Value: "CONVERSATION_STARTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1ConversationEvent_Type_ConversationStarted;
/**
 *  An existing conversation has received notification from Dialogflow that
 *  human intervention is required.
 *
 *  Value: "HUMAN_INTERVENTION_NEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1ConversationEvent_Type_HumanInterventionNeeded;
/**
 *  An existing conversation has received a new message, either from API or
 *  telephony. It is configured in
 *  ConversationProfile.new_message_event_notification_config
 *
 *  Value: "NEW_MESSAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1ConversationEvent_Type_NewMessage;
/**
 *  Type not set.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1ConversationEvent_Type_TypeUnspecified;
/**
 *  Unrecoverable error during a telephone call. In general non-recoverable
 *  errors only occur if something was misconfigured in the ConversationProfile
 *  corresponding to the call. After a non-recoverable error, Dialogflow may
 *  stop responding. We don't fire this event: * in an API call because we can
 *  directly return the error, or, * when we can recover from an error.
 *
 *  Value: "UNRECOVERABLE_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1ConversationEvent_Type_UnrecoverableError;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType.autoExpansionMode

/**
 *  Allows an agent to recognize values that have not been explicitly listed in
 *  the entity.
 *
 *  Value: "AUTO_EXPANSION_MODE_DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType_AutoExpansionMode_AutoExpansionModeDefault;
/**
 *  Auto expansion disabled for the entity.
 *
 *  Value: "AUTO_EXPANSION_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType_AutoExpansionMode_AutoExpansionModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType.kind

/**
 *  List entity types contain a set of entries that do not map to reference
 *  values. However, list entity types can contain references to other entity
 *  types (with or without aliases).
 *
 *  Value: "KIND_LIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType_Kind_KindList;
/**
 *  Map entity types allow mapping of a group of synonyms to a reference value.
 *
 *  Value: "KIND_MAP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType_Kind_KindMap;
/**
 *  Regexp entity types allow to specify regular expressions in entries values.
 *
 *  Value: "KIND_REGEXP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType_Kind_KindRegexp;
/**
 *  Not specified. This value should be never used.
 *
 *  Value: "KIND_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType_Kind_KindUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1Intent.defaultResponsePlatforms

/**
 *  Google Assistant See [Dialogflow webhook
 *  format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
 *
 *  Value: "ACTIONS_ON_GOOGLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_DefaultResponsePlatforms_ActionsOnGoogle;
/**
 *  Facebook.
 *
 *  Value: "FACEBOOK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_DefaultResponsePlatforms_Facebook;
/**
 *  Google Hangouts.
 *
 *  Value: "GOOGLE_HANGOUTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_DefaultResponsePlatforms_GoogleHangouts;
/**
 *  Kik.
 *
 *  Value: "KIK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_DefaultResponsePlatforms_Kik;
/**
 *  Line.
 *
 *  Value: "LINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_DefaultResponsePlatforms_Line;
/**
 *  Not specified.
 *
 *  Value: "PLATFORM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_DefaultResponsePlatforms_PlatformUnspecified;
/**
 *  Skype.
 *
 *  Value: "SKYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_DefaultResponsePlatforms_Skype;
/**
 *  Slack.
 *
 *  Value: "SLACK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_DefaultResponsePlatforms_Slack;
/**
 *  Telegram.
 *
 *  Value: "TELEGRAM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_DefaultResponsePlatforms_Telegram;
/**
 *  Telephony Gateway.
 *
 *  Value: "TELEPHONY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_DefaultResponsePlatforms_Telephony;
/**
 *  Viber.
 *
 *  Value: "VIBER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_DefaultResponsePlatforms_Viber;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1Intent.webhookState

/**
 *  Webhook is enabled in the agent and in the intent.
 *
 *  Value: "WEBHOOK_STATE_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_WebhookState_WebhookStateEnabled;
/**
 *  Webhook is enabled in the agent and in the intent. Also, each slot filling
 *  prompt is forwarded to the webhook.
 *
 *  Value: "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_WebhookState_WebhookStateEnabledForSlotFilling;
/**
 *  Webhook is disabled in the agent and in the intent.
 *
 *  Value: "WEBHOOK_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_WebhookState_WebhookStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage.platform

/**
 *  Google Assistant See [Dialogflow webhook
 *  format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
 *
 *  Value: "ACTIONS_ON_GOOGLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_ActionsOnGoogle;
/**
 *  Facebook.
 *
 *  Value: "FACEBOOK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Facebook;
/**
 *  Google Hangouts.
 *
 *  Value: "GOOGLE_HANGOUTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_GoogleHangouts;
/**
 *  Kik.
 *
 *  Value: "KIK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Kik;
/**
 *  Line.
 *
 *  Value: "LINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Line;
/**
 *  Not specified.
 *
 *  Value: "PLATFORM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_PlatformUnspecified;
/**
 *  Skype.
 *
 *  Value: "SKYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Skype;
/**
 *  Slack.
 *
 *  Value: "SLACK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Slack;
/**
 *  Telegram.
 *
 *  Value: "TELEGRAM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Telegram;
/**
 *  Telephony Gateway.
 *
 *  Value: "TELEPHONY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Telephony;
/**
 *  Viber.
 *
 *  Value: "VIBER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Viber;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard.imageDisplayOptions

/**
 *  Pad the gaps between image and image frame with a blurred copy of the same
 *  image.
 *
 *  Value: "BLURRED_BACKGROUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard_ImageDisplayOptions_BlurredBackground;
/**
 *  Image is scaled such that the image width and height match or exceed the
 *  container dimensions. This may crop the top and bottom of the image if the
 *  scaled image height is greater than the container height, or crop the left
 *  and right of the image if the scaled image width is greater than the
 *  container width. This is similar to "Zoom Mode" on a widescreen TV when
 *  playing a 4:3 video.
 *
 *  Value: "CROPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard_ImageDisplayOptions_Cropped;
/**
 *  Fill the gaps between the image and the image container with gray bars.
 *
 *  Value: "GRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard_ImageDisplayOptions_Gray;
/**
 *  Fill the gaps between the image and the image container with gray bars.
 *
 *  Value: "IMAGE_DISPLAY_OPTIONS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard_ImageDisplayOptions_ImageDisplayOptionsUnspecified;
/**
 *  Fill the gaps between the image and the image container with white bars.
 *
 *  Value: "WHITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard_ImageDisplayOptions_White;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction.urlTypeHint

/**
 *  Url would be an amp action
 *
 *  Value: "AMP_ACTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction_UrlTypeHint_AmpAction;
/**
 *  URL that points directly to AMP content, or to a canonical URL which refers
 *  to AMP content via .
 *
 *  Value: "AMP_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction_UrlTypeHint_AmpContent;
/**
 *  Unspecified
 *
 *  Value: "URL_TYPE_HINT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction_UrlTypeHint_UrlTypeHintUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageColumnProperties.horizontalAlignment

/**
 *  Text is centered in the column.
 *
 *  Value: "CENTER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageColumnProperties_HorizontalAlignment_Center;
/**
 *  Text is aligned to the leading edge of the column.
 *
 *  Value: "HORIZONTAL_ALIGNMENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageColumnProperties_HorizontalAlignment_HorizontalAlignmentUnspecified;
/**
 *  Text is aligned to the leading edge of the column.
 *
 *  Value: "LEADING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageColumnProperties_HorizontalAlignment_Leading;
/**
 *  Text is aligned to the trailing edge of the column.
 *
 *  Value: "TRAILING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageColumnProperties_HorizontalAlignment_Trailing;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageMediaContent.mediaType

/**
 *  Response media type is audio.
 *
 *  Value: "AUDIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageMediaContent_MediaType_Audio;
/**
 *  Unspecified.
 *
 *  Value: "RESPONSE_MEDIA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageMediaContent_MediaType_ResponseMediaTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia.height

/**
 *  Not specified.
 *
 *  Value: "HEIGHT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia_Height_HeightUnspecified;
/**
 *  168 DP.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia_Height_Medium;
/**
 *  112 DP.
 *
 *  Value: "SHORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia_Height_Short;
/**
 *  264 DP. Not available for rich card carousels when the card width is set to
 *  small.
 *
 *  Value: "TALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia_Height_Tall;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard.cardWidth

/**
 *  Not specified.
 *
 *  Value: "CARD_WIDTH_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard_CardWidth_CardWidthUnspecified;
/**
 *  232 DP.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard_CardWidth_Medium;
/**
 *  120 DP. Note that tall media cannot be used.
 *
 *  Value: "SMALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard_CardWidth_Small;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.cardOrientation

/**
 *  Not specified.
 *
 *  Value: "CARD_ORIENTATION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard_CardOrientation_CardOrientationUnspecified;
/**
 *  Horizontal layout.
 *
 *  Value: "HORIZONTAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard_CardOrientation_Horizontal;
/**
 *  Vertical layout.
 *
 *  Value: "VERTICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard_CardOrientation_Vertical;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard.thumbnailImageAlignment

/**
 *  Thumbnail preview is left-aligned.
 *
 *  Value: "LEFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard_ThumbnailImageAlignment_Left;
/**
 *  Thumbnail preview is right-aligned.
 *
 *  Value: "RIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard_ThumbnailImageAlignment_Right;
/**
 *  Not specified.
 *
 *  Value: "THUMBNAIL_IMAGE_ALIGNMENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard_ThumbnailImageAlignment_ThumbnailImageAlignmentUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentTrainingPhrase.type

/**
 *  Examples do not contain \@-prefixed entity type names, but example parts can
 *  be annotated with entity types.
 *
 *  Value: "EXAMPLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentTrainingPhrase_Type_Example;
/**
 *  Templates are not annotated with entity types, but they can contain
 *  \@-prefixed entity type names as substrings. Note: Template mode has been
 *  deprecated. Example mode is the only supported way to create new training
 *  phrases. If you have existing training phrases in template mode, they will
 *  be removed during training and it can cause a drop in agent performance.
 *
 *  Value: "TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentTrainingPhrase_Type_Template;
/**
 *  Not specified. This value should never be used.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentTrainingPhrase_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer.matchConfidenceLevel

/**
 *  Indicates our confidence is high.
 *
 *  Value: "HIGH"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer_MatchConfidenceLevel_High;
/**
 *  Indicates that the confidence is low.
 *
 *  Value: "LOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer_MatchConfidenceLevel_Low;
/**
 *  Not specified.
 *
 *  Value: "MATCH_CONFIDENCE_LEVEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer_MatchConfidenceLevel_MatchConfidenceLevelUnspecified;
/**
 *  Indicates our confidence is medium.
 *
 *  Value: "MEDIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer_MatchConfidenceLevel_Medium;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata.state

/**
 *  The operation is done, either cancelled or completed.
 *
 *  Value: "DONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata_State_Done;
/**
 *  The operation has been created.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata_State_Pending;
/**
 *  The operation is currently running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata_State_Running;
/**
 *  State unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1Message.participantRole

/**
 *  Participant is an automated agent, such as a Dialogflow agent.
 *
 *  Value: "AUTOMATED_AGENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Message_ParticipantRole_AutomatedAgent;
/**
 *  Participant is an end user that has called or chatted with Dialogflow
 *  services.
 *
 *  Value: "END_USER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Message_ParticipantRole_EndUser;
/**
 *  Participant is a human agent.
 *
 *  Value: "HUMAN_AGENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Message_ParticipantRole_HumanAgent;
/**
 *  Participant role not set.
 *
 *  Value: "ROLE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1Message_ParticipantRole_RoleUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1SessionEntityType.entityOverrideMode

/**
 *  The collection of session entities overrides the collection of entities in
 *  the corresponding custom entity type.
 *
 *  Value: "ENTITY_OVERRIDE_MODE_OVERRIDE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1SessionEntityType_EntityOverrideMode_EntityOverrideModeOverride;
/**
 *  The collection of session entities extends the collection of entities in the
 *  corresponding custom entity type. Note: Even in this override mode calls to
 *  `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType`
 *  and `UpdateSessionEntityType` only return the additional entities added in
 *  this session entity type. If you want to get the supplemented list, please
 *  call EntityTypes.GetEntityType on the custom entity type and merge.
 *
 *  Value: "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1SessionEntityType_EntityOverrideMode_EntityOverrideModeSupplement;
/**
 *  Not specified. This value should be never used.
 *
 *  Value: "ENTITY_OVERRIDE_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1SessionEntityType_EntityOverrideMode_EntityOverrideModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata.participantRole

/**
 *  Participant is an automated agent, such as a Dialogflow agent.
 *
 *  Value: "AUTOMATED_AGENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_AutomatedAgent;
/**
 *  Participant is an end user that has called or chatted with Dialogflow
 *  services.
 *
 *  Value: "END_USER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_EndUser;
/**
 *  Participant is a human agent.
 *
 *  Value: "HUMAN_AGENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_HumanAgent;
/**
 *  Participant role not set.
 *
 *  Value: "ROLE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_RoleUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata.suggestionFeatureType

/**
 *  Run article suggestion model for chat.
 *
 *  Value: "ARTICLE_SUGGESTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_ArticleSuggestion;
/**
 *  Run conversation summarization model for chat.
 *
 *  Value: "CONVERSATION_SUMMARIZATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_ConversationSummarization;
/**
 *  Run FAQ model.
 *
 *  Value: "FAQ"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_Faq;
/**
 *  Run smart reply model for chat.
 *
 *  Value: "SMART_REPLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_SmartReply;
/**
 *  Unspecified feature type.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata.participantRole

/**
 *  Participant is an automated agent, such as a Dialogflow agent.
 *
 *  Value: "AUTOMATED_AGENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_AutomatedAgent;
/**
 *  Participant is an end user that has called or chatted with Dialogflow
 *  services.
 *
 *  Value: "END_USER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_EndUser;
/**
 *  Participant is a human agent.
 *
 *  Value: "HUMAN_AGENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_HumanAgent;
/**
 *  Participant role not set.
 *
 *  Value: "ROLE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_RoleUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata.suggestionFeatureType

/**
 *  Run article suggestion model for chat.
 *
 *  Value: "ARTICLE_SUGGESTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_ArticleSuggestion;
/**
 *  Run FAQ model for chat.
 *
 *  Value: "FAQ"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_Faq;
/**
 *  Run smart reply model for chat.
 *
 *  Value: "SMART_REPLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_SmartReply;
/**
 *  Unspecified feature type.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2ConversationEvent.type

/**
 *  An existing conversation has closed. This is fired when a telephone call is
 *  terminated, or a conversation is closed via the API.
 *
 *  Value: "CONVERSATION_FINISHED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ConversationEvent_Type_ConversationFinished;
/**
 *  A new conversation has been opened. This is fired when a telephone call is
 *  answered, or a conversation is created via the API.
 *
 *  Value: "CONVERSATION_STARTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ConversationEvent_Type_ConversationStarted;
/**
 *  An existing conversation has received notification from Dialogflow that
 *  human intervention is required.
 *
 *  Value: "HUMAN_INTERVENTION_NEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ConversationEvent_Type_HumanInterventionNeeded;
/**
 *  An existing conversation has received a new message, either from API or
 *  telephony. It is configured in
 *  ConversationProfile.new_message_event_notification_config
 *
 *  Value: "NEW_MESSAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ConversationEvent_Type_NewMessage;
/**
 *  Type not set.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ConversationEvent_Type_TypeUnspecified;
/**
 *  Unrecoverable error during a telephone call. In general non-recoverable
 *  errors only occur if something was misconfigured in the ConversationProfile
 *  corresponding to the call. After a non-recoverable error, Dialogflow may
 *  stop responding. We don't fire this event: * in an API call because we can
 *  directly return the error, or, * when we can recover from an error.
 *
 *  Value: "UNRECOVERABLE_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ConversationEvent_Type_UnrecoverableError;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2ConversationModel.state

/**
 *  Model being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Creating;
/**
 *  Model is deleting.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Deleting;
/**
 *  Model is deployed and ready to use.
 *
 *  Value: "DEPLOYED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Deployed;
/**
 *  Model is deploying.
 *
 *  Value: "DEPLOYING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Deploying;
/**
 *  Model is in error state. Not ready to deploy and use.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Failed;
/**
 *  Model is being created but the training has not started, The model may
 *  remain in this state until there is enough capacity to start training.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Pending;
/**
 *  Should not be used, an un-set enum has this value by default.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_StateUnspecified;
/**
 *  Model is not deployed but ready to deploy.
 *
 *  Value: "UNDEPLOYED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Undeployed;
/**
 *  Model is undeploying.
 *
 *  Value: "UNDEPLOYING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Undeploying;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata.state

/**
 *  The operation is cancelled.
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata_State_Cancelled;
/**
 *  The operation has failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata_State_Failed;
/**
 *  The operation is being prepared.
 *
 *  Value: "INITIALIZING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata_State_Initializing;
/**
 *  The operation is running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata_State_Running;
/**
 *  Operation status not specified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata_State_StateUnspecified;
/**
 *  The operation has succeeded.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata.state

/**
 *  The training has been cancelled.
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata_State_Cancelled;
/**
 *  The training is in cancelling state.
 *
 *  Value: "CANCELLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata_State_Cancelling;
/**
 *  The training has succeeded.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata_State_Failed;
/**
 *  Request is submitted, but training has not started yet. The model may remain
 *  in this state until there is enough capacity to start training.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata_State_Pending;
/**
 *  Invalid.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata_State_StateUnspecified;
/**
 *  The training has succeeded.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata_State_Succeeded;
/**
 *  Custom model is training.
 *
 *  Value: "TRAINING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata_State_Training;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2EntityType.autoExpansionMode

/**
 *  Allows an agent to recognize values that have not been explicitly listed in
 *  the entity.
 *
 *  Value: "AUTO_EXPANSION_MODE_DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2EntityType_AutoExpansionMode_AutoExpansionModeDefault;
/**
 *  Auto expansion disabled for the entity.
 *
 *  Value: "AUTO_EXPANSION_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2EntityType_AutoExpansionMode_AutoExpansionModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2EntityType.kind

/**
 *  List entity types contain a set of entries that do not map to reference
 *  values. However, list entity types can contain references to other entity
 *  types (with or without aliases).
 *
 *  Value: "KIND_LIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2EntityType_Kind_KindList;
/**
 *  Map entity types allow mapping of a group of synonyms to a reference value.
 *
 *  Value: "KIND_MAP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2EntityType_Kind_KindMap;
/**
 *  Regexp entity types allow to specify regular expressions in entries values.
 *
 *  Value: "KIND_REGEXP"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2EntityType_Kind_KindRegexp;
/**
 *  Not specified. This value should be never used.
 *
 *  Value: "KIND_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2EntityType_Kind_KindUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2Intent.defaultResponsePlatforms

/**
 *  Google Assistant See [Dialogflow webhook
 *  format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
 *
 *  Value: "ACTIONS_ON_GOOGLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Intent_DefaultResponsePlatforms_ActionsOnGoogle;
/**
 *  Facebook.
 *
 *  Value: "FACEBOOK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Intent_DefaultResponsePlatforms_Facebook;
/**
 *  Google Hangouts.
 *
 *  Value: "GOOGLE_HANGOUTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Intent_DefaultResponsePlatforms_GoogleHangouts;
/**
 *  Kik.
 *
 *  Value: "KIK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Intent_DefaultResponsePlatforms_Kik;
/**
 *  Line.
 *
 *  Value: "LINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Intent_DefaultResponsePlatforms_Line;
/**
 *  Default platform.
 *
 *  Value: "PLATFORM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Intent_DefaultResponsePlatforms_PlatformUnspecified;
/**
 *  Skype.
 *
 *  Value: "SKYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Intent_DefaultResponsePlatforms_Skype;
/**
 *  Slack.
 *
 *  Value: "SLACK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Intent_DefaultResponsePlatforms_Slack;
/**
 *  Telegram.
 *
 *  Value: "TELEGRAM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Intent_DefaultResponsePlatforms_Telegram;
/**
 *  Viber.
 *
 *  Value: "VIBER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Intent_DefaultResponsePlatforms_Viber;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2Intent.webhookState

/**
 *  Webhook is enabled in the agent and in the intent.
 *
 *  Value: "WEBHOOK_STATE_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Intent_WebhookState_WebhookStateEnabled;
/**
 *  Webhook is enabled in the agent and in the intent. Also, each slot filling
 *  prompt is forwarded to the webhook.
 *
 *  Value: "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Intent_WebhookState_WebhookStateEnabledForSlotFilling;
/**
 *  Webhook is disabled in the agent and in the intent.
 *
 *  Value: "WEBHOOK_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Intent_WebhookState_WebhookStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2IntentMessage.platform

/**
 *  Google Assistant See [Dialogflow webhook
 *  format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
 *
 *  Value: "ACTIONS_ON_GOOGLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_ActionsOnGoogle;
/**
 *  Facebook.
 *
 *  Value: "FACEBOOK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_Facebook;
/**
 *  Google Hangouts.
 *
 *  Value: "GOOGLE_HANGOUTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_GoogleHangouts;
/**
 *  Kik.
 *
 *  Value: "KIK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_Kik;
/**
 *  Line.
 *
 *  Value: "LINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_Line;
/**
 *  Default platform.
 *
 *  Value: "PLATFORM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_PlatformUnspecified;
/**
 *  Skype.
 *
 *  Value: "SKYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_Skype;
/**
 *  Slack.
 *
 *  Value: "SLACK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_Slack;
/**
 *  Telegram.
 *
 *  Value: "TELEGRAM"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_Telegram;
/**
 *  Viber.
 *
 *  Value: "VIBER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_Viber;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard.imageDisplayOptions

/**
 *  Pad the gaps between image and image frame with a blurred copy of the same
 *  image.
 *
 *  Value: "BLURRED_BACKGROUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard_ImageDisplayOptions_BlurredBackground;
/**
 *  Image is scaled such that the image width and height match or exceed the
 *  container dimensions. This may crop the top and bottom of the image if the
 *  scaled image height is greater than the container height, or crop the left
 *  and right of the image if the scaled image width is greater than the
 *  container width. This is similar to "Zoom Mode" on a widescreen TV when
 *  playing a 4:3 video.
 *
 *  Value: "CROPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard_ImageDisplayOptions_Cropped;
/**
 *  Fill the gaps between the image and the image container with gray bars.
 *
 *  Value: "GRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard_ImageDisplayOptions_Gray;
/**
 *  Fill the gaps between the image and the image container with gray bars.
 *
 *  Value: "IMAGE_DISPLAY_OPTIONS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard_ImageDisplayOptions_ImageDisplayOptionsUnspecified;
/**
 *  Fill the gaps between the image and the image container with white bars.
 *
 *  Value: "WHITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard_ImageDisplayOptions_White;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction.urlTypeHint

/**
 *  Url would be an amp action
 *
 *  Value: "AMP_ACTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction_UrlTypeHint_AmpAction;
/**
 *  URL that points directly to AMP content, or to a canonical URL which refers
 *  to AMP content via .
 *
 *  Value: "AMP_CONTENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction_UrlTypeHint_AmpContent;
/**
 *  Unspecified
 *
 *  Value: "URL_TYPE_HINT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction_UrlTypeHint_UrlTypeHintUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageColumnProperties.horizontalAlignment

/**
 *  Text is centered in the column.
 *
 *  Value: "CENTER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageColumnProperties_HorizontalAlignment_Center;
/**
 *  Text is aligned to the leading edge of the column.
 *
 *  Value: "HORIZONTAL_ALIGNMENT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageColumnProperties_HorizontalAlignment_HorizontalAlignmentUnspecified;
/**
 *  Text is aligned to the leading edge of the column.
 *
 *  Value: "LEADING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageColumnProperties_HorizontalAlignment_Leading;
/**
 *  Text is aligned to the trailing edge of the column.
 *
 *  Value: "TRAILING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageColumnProperties_HorizontalAlignment_Trailing;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageMediaContent.mediaType

/**
 *  Response media type is audio.
 *
 *  Value: "AUDIO"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageMediaContent_MediaType_Audio;
/**
 *  Unspecified.
 *
 *  Value: "RESPONSE_MEDIA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageMediaContent_MediaType_ResponseMediaTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2IntentTrainingPhrase.type

/**
 *  Examples do not contain \@-prefixed entity type names, but example parts can
 *  be annotated with entity types.
 *
 *  Value: "EXAMPLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentTrainingPhrase_Type_Example;
/**
 *  Templates are not annotated with entity types, but they can contain
 *  \@-prefixed entity type names as substrings. Template mode has been
 *  deprecated. Example mode is the only supported way to create new training
 *  phrases. If you have existing training phrases that you've created in
 *  template mode, those will continue to work.
 *
 *  Value: "TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentTrainingPhrase_Type_Template;
/**
 *  Not specified. This value should never be used.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2IntentTrainingPhrase_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2KnowledgeOperationMetadata.state

/**
 *  The operation is done, either cancelled or completed.
 *
 *  Value: "DONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2KnowledgeOperationMetadata_State_Done;
/**
 *  The operation has been created.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2KnowledgeOperationMetadata_State_Pending;
/**
 *  The operation is currently running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2KnowledgeOperationMetadata_State_Running;
/**
 *  State unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2KnowledgeOperationMetadata_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2Message.participantRole

/**
 *  Participant is an automated agent, such as a Dialogflow agent.
 *
 *  Value: "AUTOMATED_AGENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Message_ParticipantRole_AutomatedAgent;
/**
 *  Participant is an end user that has called or chatted with Dialogflow
 *  services.
 *
 *  Value: "END_USER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Message_ParticipantRole_EndUser;
/**
 *  Participant is a human agent.
 *
 *  Value: "HUMAN_AGENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Message_ParticipantRole_HumanAgent;
/**
 *  Participant role not set.
 *
 *  Value: "ROLE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2Message_ParticipantRole_RoleUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2SessionEntityType.entityOverrideMode

/**
 *  The collection of session entities overrides the collection of entities in
 *  the corresponding custom entity type.
 *
 *  Value: "ENTITY_OVERRIDE_MODE_OVERRIDE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2SessionEntityType_EntityOverrideMode_EntityOverrideModeOverride;
/**
 *  The collection of session entities extends the collection of entities in the
 *  corresponding custom entity type. Note: Even in this override mode calls to
 *  `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType`
 *  and `UpdateSessionEntityType` only return the additional entities added in
 *  this session entity type. If you want to get the supplemented list, please
 *  call EntityTypes.GetEntityType on the custom entity type and merge.
 *
 *  Value: "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2SessionEntityType_EntityOverrideMode_EntityOverrideModeSupplement;
/**
 *  Not specified. This value should be never used.
 *
 *  Value: "ENTITY_OVERRIDE_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2SessionEntityType_EntityOverrideMode_EntityOverrideModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata.participantRole

/**
 *  Participant is an automated agent, such as a Dialogflow agent.
 *
 *  Value: "AUTOMATED_AGENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_AutomatedAgent;
/**
 *  Participant is an end user that has called or chatted with Dialogflow
 *  services.
 *
 *  Value: "END_USER"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_EndUser;
/**
 *  Participant is a human agent.
 *
 *  Value: "HUMAN_AGENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_HumanAgent;
/**
 *  Participant role not set.
 *
 *  Value: "ROLE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_RoleUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata.suggestionFeatureType

/**
 *  Run article suggestion model for chat.
 *
 *  Value: "ARTICLE_SUGGESTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_ArticleSuggestion;
/**
 *  Run FAQ model for chat.
 *
 *  Value: "FAQ"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_Faq;
/**
 *  Run smart reply model for chat.
 *
 *  Value: "SMART_REPLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_SmartReply;
/**
 *  Unspecified feature type.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV2SmartReplyModelMetadata.trainingModelType

/**
 *  ModelType unspecified.
 *
 *  Value: "MODEL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2SmartReplyModelMetadata_TrainingModelType_ModelTypeUnspecified;
/**
 *  ModelType smart reply bert model.
 *
 *  Value: "SMART_REPLY_BERT_MODEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2SmartReplyModelMetadata_TrainingModelType_SmartReplyBertModel;
/**
 *  ModelType smart reply dual encoder model.
 *
 *  Value: "SMART_REPLY_DUAL_ENCODER_MODEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV2SmartReplyModelMetadata_TrainingModelType_SmartReplyDualEncoderModel;

// ----------------------------------------------------------------------------
// GTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata.state

/**
 *  The operation is done, either cancelled or completed.
 *
 *  Value: "DONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata_State_Done;
/**
 *  The operation has been created.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata_State_Pending;
/**
 *  The operation is currently running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata_State_Running;
/**
 *  State unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata_State_StateUnspecified;

/**
 *  Hierarchical advanced settings for agent/flow/page/fulfillment/parameter.
 *  Settings exposed at lower level overrides the settings exposed at higher
 *  level. Overriding occurs at the sub-setting level. For example, the
 *  playback_interruption_settings at fulfillment level only overrides the
 *  playback_interruption_settings at the agent level, leaving other settings at
 *  the agent level unchanged. DTMF settings does not override each other. DTMF
 *  settings set at different levels define DTMF detections running in parallel.
 *  Hierarchy: Agent->Flow->Page->Fulfillment/Parameter.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3AdvancedSettings : GTLRObject

/**
 *  Settings for logging. Settings for Dialogflow History, Contact Center
 *  messages, StackDriver logs, and speech logging. Exposed at the following
 *  levels: - Agent level.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings *loggingSettings;

@end


/**
 *  Define behaviors on logging.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings : GTLRObject

/**
 *  If true, DF Interaction logging is currently enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableInteractionLogging;

/**
 *  If true, StackDriver logging is currently enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableStackdriverLogging;

@end


/**
 *  Agents are best described as Natural Language Understanding (NLU) modules
 *  that transform user requests into actionable data. You can include agents in
 *  your app, product, or service to determine user intent and respond to the
 *  user in a natural way. After you create an agent, you can add Intents,
 *  Entity Types, Flows, Fulfillments, Webhooks, and so on to manage the
 *  conversation flows..
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3Agent : GTLRObject

/**
 *  Hierarchical advanced settings for this agent. The settings exposed at the
 *  lower level overrides the settings exposed at the higher level.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3AdvancedSettings *advancedSettings;

/**
 *  The URI of the agent's avatar. Avatars are used throughout the Dialogflow
 *  console and in the self-hosted [Web
 *  Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo)
 *  integration.
 */
@property(nonatomic, copy, nullable) NSString *avatarUri;

/**
 *  Required. Immutable. The default language of the agent as a language tag.
 *  See [Language
 *  Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for
 *  a list of the currently supported language codes. This field cannot be set
 *  by the Agents.UpdateAgent method.
 */
@property(nonatomic, copy, nullable) NSString *defaultLanguageCode;

/**
 *  The description of the agent. The maximum length is 500 characters. If
 *  exceeded, the request is rejected.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The human-readable name of the agent, unique within the location.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Indicates if automatic spell correction is enabled in detect intent
 *  requests.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableSpellCorrection;

/**
 *  Indicates if stackdriver logging is enabled for the agent. Please use
 *  agent.advanced_settings instead.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableStackdriverLogging;

/**
 *  Indicates whether the agent is locked for changes. If the agent is locked,
 *  modifications to the agent will be rejected except for RestoreAgent.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *locked;

/**
 *  The unique identifier of the agent. Required for the Agents.UpdateAgent
 *  method. Agents.CreateAgent populates the name automatically. Format:
 *  `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Name of the SecuritySettings reference for the agent. Format:
 *  `projects//locations//securitySettings/`.
 */
@property(nonatomic, copy, nullable) NSString *securitySettings;

/** Speech recognition related settings. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3SpeechToTextSettings *speechToTextSettings;

/**
 *  Immutable. Name of the start flow in this agent. A start flow will be
 *  automatically created when the agent is created, and can only be deleted by
 *  deleting the agent. Format: `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *startFlow;

/**
 *  The list of all languages supported by the agent (except for the
 *  `default_language_code`).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *supportedLanguageCodes;

/**
 *  Required. The time zone of the agent from the [time zone
 *  database](https://www.iana.org/time-zones), e.g., America/New_York,
 *  Europe/Paris.
 */
@property(nonatomic, copy, nullable) NSString *timeZone;

@end


/**
 *  The response message for Agents.GetAgentValidationResult.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3AgentValidationResult : GTLRObject

/** Contains all flow validation results. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3FlowValidationResult *> *flowValidationResults;

/**
 *  The unique identifier of the agent validation result. Format:
 *  `projects//locations//agents//validationResult`.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Represents the natural speech audio to be processed.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3AudioInput : GTLRObject

/**
 *  The natural language speech audio to be processed. A single request can
 *  contain up to 1 minute of speech audio data. The transcribed text cannot
 *  contain more than 256 bytes. For non-streaming audio detect intent, both
 *  `config` and `audio` must be provided. For streaming audio detect intent,
 *  `config` must be provided in the first request and `audio` must be provided
 *  in all following requests.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *audio;

/**
 *  Required. Instructs the speech recognizer how to process the speech audio.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig *config;

@end


/**
 *  The request message for TestCases.BatchDeleteTestCases.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3BatchDeleteTestCasesRequest : GTLRObject

/**
 *  Required. Format of test case names: `projects//locations/
 *  /agents//testCases/`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

@end


/**
 *  Metadata returned for the TestCases.BatchRunTestCases long running
 *  operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3BatchRunTestCasesMetadata : GTLRObject

/** The test errors. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3TestError *> *errors;

@end


/**
 *  The request message for TestCases.BatchRunTestCases.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3BatchRunTestCasesRequest : GTLRObject

/**
 *  Optional. If not set, draft environment is assumed. Format:
 *  `projects//locations//agents//environments/`.
 */
@property(nonatomic, copy, nullable) NSString *environment;

/** Required. Format: `projects//locations//agents//testCases/`. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *testCases;

@end


/**
 *  The response message for TestCases.BatchRunTestCases.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3BatchRunTestCasesResponse : GTLRObject

/**
 *  The test case results. The detailed conversation turns are empty in this
 *  response.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseResult *> *results;

@end


/**
 *  Represents the natural speech audio to be processed.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1AudioInput : GTLRObject

/**
 *  The natural language speech audio to be processed. A single request can
 *  contain up to 1 minute of speech audio data. The transcribed text cannot
 *  contain more than 256 bytes. For non-streaming audio detect intent, both
 *  `config` and `audio` must be provided. For streaming audio detect intent,
 *  `config` must be provided in the first request and `audio` must be provided
 *  in all following requests.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *audio;

/**
 *  Required. Instructs the speech recognizer how to process the speech audio.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig *config;

@end


/**
 *  Metadata returned for the TestCases.BatchRunTestCases long running
 *  operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1BatchRunTestCasesMetadata : GTLRObject

/** The test errors. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestError *> *errors;

@end


/**
 *  The response message for TestCases.BatchRunTestCases.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1BatchRunTestCasesResponse : GTLRObject

/**
 *  The test case results. The detailed conversation turns are empty in this
 *  response.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCaseResult *> *results;

@end


/**
 *  Represents a result from running a test case in an agent environment.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ContinuousTestResult : GTLRObject

/**
 *  The resource name for the continuous test result. Format:
 *  `projects//locations//agents//environments//continuousTestResults/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The result of this continuous test run, i.e. whether all the tests in this
 *  continuous test run pass or not.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1ContinuousTestResult_Result_AggregatedTestResultUnspecified
 *        Not specified. Should never be used. (Value:
 *        "AGGREGATED_TEST_RESULT_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1ContinuousTestResult_Result_Failed
 *        At least one test did not pass. (Value: "FAILED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1ContinuousTestResult_Result_Passed
 *        All the tests passed. (Value: "PASSED")
 */
@property(nonatomic, copy, nullable) NSString *result;

/** Time when the continuous testing run starts. */
@property(nonatomic, strong, nullable) GTLRDateTime *runTime;

/**
 *  A list of individual test case results names in this continuous test run.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *testCaseResults;

@end


/**
 *  One interaction between a human and virtual agent. The human provides some
 *  input and the virtual agent provides a response.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurn : GTLRObject

/** The user input. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput *userInput;

/** The virtual agent output. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput *virtualAgentOutput;

@end


/**
 *  The input from the human user.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput : GTLRObject

/**
 *  Whether sentiment analysis is enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableSentimentAnalysis;

/**
 *  Parameters that need to be injected into the conversation during intent
 *  detection.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput_InjectedParameters *injectedParameters;

/** Supports text input, event input, dtmf input in the test case. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1QueryInput *input;

/**
 *  If webhooks should be allowed to trigger in response to the user utterance.
 *  Often if parameters are injected, webhooks should not be enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isWebhookEnabled;

@end


/**
 *  Parameters that need to be injected into the conversation during intent
 *  detection.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput_InjectedParameters : GTLRObject
@end


/**
 *  The output from the virtual agent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput : GTLRObject

/**
 *  The Page on which the utterance was spoken. Only name and displayName will
 *  be set.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Page *currentPage;

/**
 *  Required. Input only. The diagnostic info output for the turn. Required to
 *  calculate the testing coverage.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput_DiagnosticInfo *diagnosticInfo;

/**
 *  Output only. If this is part of a result conversation turn, the list of
 *  differences between the original run and the replay for this output, if any.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestRunDifference *> *differences;

/** The session parameters available to the bot at this point. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput_SessionParameters *sessionParameters;

/**
 *  Response error from the agent in the test result. If set, other output is
 *  empty.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleRpcStatus *status;

/** The text responses from the agent for the turn. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageText *> *textResponses;

/**
 *  The Intent that triggered the response. Only name and displayName will be
 *  set.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Intent *triggeredIntent;

@end


/**
 *  Required. Input only. The diagnostic info output for the turn. Required to
 *  calculate the testing coverage.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput_DiagnosticInfo : GTLRObject
@end


/**
 *  The session parameters available to the bot at this point.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput_SessionParameters : GTLRObject
@end


/**
 *  Metadata for CreateDocument operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1CreateDocumentOperationMetadata : GTLRObject

/** The generic information of the operation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata *genericMetadata;

@end


/**
 *  Metadata associated with the long running operation for
 *  Versions.CreateVersion.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata : GTLRObject

/**
 *  Name of the created version. Format:
 *  `projects//locations//agents//flows//versions/`.
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Metadata for DeleteDocument operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1DeleteDocumentOperationMetadata : GTLRObject

/** The generic information of the operation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata *genericMetadata;

@end


/**
 *  Metadata returned for the Environments.DeployFlow long running operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1DeployFlowMetadata : GTLRObject

/** Errors of running deployment tests. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestError *> *testErrors;

@end


/**
 *  The response message for Environments.DeployFlow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1DeployFlowResponse : GTLRObject

/**
 *  The name of the flow version deployment. Format:
 *  `projects//locations//agents// environments//deployments/`.
 */
@property(nonatomic, copy, nullable) NSString *deployment;

/** The updated environment where the flow is deployed. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Environment *environment;

@end


/**
 *  Represents the input for dtmf event.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1DtmfInput : GTLRObject

/** The dtmf digits. */
@property(nonatomic, copy, nullable) NSString *digits;

/** The finish digit (if any). */
@property(nonatomic, copy, nullable) NSString *finishDigit;

@end


/**
 *  Represents an environment for an agent. You can create multiple versions of
 *  your agent and publish them to separate environments. When you edit an
 *  agent, you are editing the draft agent. At any point, you can save the draft
 *  agent as an agent version, which is an immutable snapshot of your agent.
 *  When you save the draft agent, it is published to the default environment.
 *  When you create agent versions, you can publish them to custom environments.
 *  You can create a variety of custom environments for testing, development,
 *  production, etc.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Environment : GTLRObject

/**
 *  The human-readable description of the environment. The maximum length is 500
 *  characters. If exceeded, the request is rejected.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The human-readable name of the environment (unique in an agent).
 *  Limit of 64 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The name of the environment. Format:
 *  `projects//locations//agents//environments/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The test cases config for continuous tests of this environment. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig *testCasesConfig;

/** Output only. Update time of this environment. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Required. A list of configurations for flow versions. You should include
 *  version configs for all flows that are reachable from `Start Flow` in the
 *  agent. Otherwise, an error will be returned.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig *> *versionConfigs;

/** The webhook configuration for this environment. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig *webhookConfig;

@end


/**
 *  The configuration for continuous tests.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig : GTLRObject

/**
 *  Whether to run test cases in TestCasesConfig.test_cases periodically.
 *  Default false. If set to true, run once a day.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableContinuousRun;

/**
 *  Whether to run test cases in TestCasesConfig.test_cases before deploying a
 *  flow version to the environment. Default false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enablePredeploymentRun;

/**
 *  A list of test case names to run. They should be under the same agent.
 *  Format of each test case name: `projects//locations/ /agents//testCases/`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *testCases;

@end


/**
 *  Configuration for the version.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig : GTLRObject

/** Required. Format: projects//locations//agents//flows//versions/. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Configuration for webhooks.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig : GTLRObject

/**
 *  The list of webhooks to override for the agent environment. The webhook must
 *  exist in the agent. You can override fields in `generic_web_service` and
 *  `service_directory`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Webhook *> *webhookOverrides;

@end


/**
 *  An event handler specifies an event that can be handled during a session.
 *  When the specified event happens, the following actions are taken in order:
 *  * If there is a `trigger_fulfillment` associated with the event, it will be
 *  called. * If there is a `target_page` associated with the event, the session
 *  will transition into the specified page. * If there is a `target_flow`
 *  associated with the event, the session will transition into the specified
 *  flow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EventHandler : GTLRObject

/** Required. The name of the event to handle. */
@property(nonatomic, copy, nullable) NSString *event;

/** Output only. The unique identifier of this event handler. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The target flow to transition to. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *targetFlow;

/**
 *  The target page to transition to. Format:
 *  `projects//locations//agents//flows//pages/`.
 */
@property(nonatomic, copy, nullable) NSString *targetPage;

/**
 *  The fulfillment to call when the event occurs. Handling webhook errors with
 *  a fulfillment enabled with webhook could cause infinite loop. It is invalid
 *  to specify such fulfillment for a handler handling webhooks.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Fulfillment *triggerFulfillment;

@end


/**
 *  Represents the event to trigger.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EventInput : GTLRObject

/** Name of the event. */
@property(nonatomic, copy, nullable) NSString *event;

@end


/**
 *  The response message for Agents.ExportAgent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ExportAgentResponse : GTLRObject

/**
 *  Uncompressed raw byte content for agent.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *agentContent;

/**
 *  The URI to a file containing the exported agent. This field is populated
 *  only if `agent_uri` is specified in ExportAgentRequest.
 */
@property(nonatomic, copy, nullable) NSString *agentUri;

@end


/**
 *  The response message for Flows.ExportFlow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ExportFlowResponse : GTLRObject

/**
 *  Uncompressed raw byte content for flow.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *flowContent;

/**
 *  The URI to a file containing the exported flow. This field is populated only
 *  if `flow_uri` is specified in ExportFlowRequest.
 */
@property(nonatomic, copy, nullable) NSString *flowUri;

@end


/**
 *  Metadata returned for the TestCases.ExportTestCases long running operation.
 *  This message currently has no fields.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ExportTestCasesMetadata : GTLRObject
@end


/**
 *  The response message for TestCases.ExportTestCases.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ExportTestCasesResponse : GTLRObject

/**
 *  Uncompressed raw byte content for test cases.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The URI to a file containing the exported test cases. This field is
 *  populated only if `gcs_uri` is specified in ExportTestCasesRequest.
 */
@property(nonatomic, copy, nullable) NSString *gcsUri;

@end


/**
 *  A form is a data model that groups related parameters that can be collected
 *  from the user. The process in which the agent prompts the user and collects
 *  parameter values from the user is called form filling. A form can be added
 *  to a page. When form filling is done, the filled parameters will be written
 *  to the session.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Form : GTLRObject

/** Parameters to collect from the user. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FormParameter *> *parameters;

@end


/**
 *  Represents a form parameter.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FormParameter : GTLRObject

/**
 *  The default value of an optional parameter. If the parameter is required,
 *  the default value will be ignored.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id defaultValue;

/**
 *  Required. The human-readable name of the parameter, unique within the form.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Required. The entity type of the parameter. Format:
 *  `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for
 *  example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or
 *  `projects//locations//agents//entityTypes/` for developer entity types.
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/** Required. Defines fill behavior for the parameter. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior *fillBehavior;

/**
 *  Indicates whether the parameter represents a list of values.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isList;

/**
 *  Indicates whether the parameter content should be redacted in log. If
 *  redaction is enabled, the parameter content will be replaced by parameter
 *  name during logging. Note: the parameter content is subject to redaction if
 *  either parameter level redaction or entity type level redaction is enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *redact;

/**
 *  Indicates whether the parameter is required. Optional parameters will not
 *  trigger prompts; however, they are filled if the user specifies them.
 *  Required parameters must be filled before form filling concludes.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *required;

@end


/**
 *  Configuration for how the filling of a parameter should be handled.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior : GTLRObject

/**
 *  Required. The fulfillment to provide the initial prompt that the agent can
 *  present to the user in order to fill the parameter.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Fulfillment *initialPromptFulfillment;

/**
 *  The handlers for parameter-level events, used to provide reprompt for the
 *  parameter or transition to a different page/flow. The supported events are:
 *  * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` *
 *  `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` *
 *  `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first
 *  prompt for the parameter. If the user's response does not fill the
 *  parameter, a no-match/no-input event will be triggered, and the fulfillment
 *  associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined)
 *  will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2`
 *  handler (if defined) will respond to the next no-match/no-input event, and
 *  so on. A `sys.no-match-default` or `sys.no-input-default` handler will be
 *  used to handle all following no-match/no-input events after all numbered
 *  no-match/no-input handlers for the parameter are consumed. A
 *  `sys.invalid-parameter` handler can be defined to handle the case where the
 *  parameter values have been `invalidated` by webhook. For example, if the
 *  user's response fill the parameter, however the parameter was invalidated by
 *  webhook, the fulfillment associated with the `sys.invalid-parameter` handler
 *  (if defined) will be called to provide a prompt. If the event handler for
 *  the corresponding event can't be found on the parameter,
 *  `initial_prompt_fulfillment` will be re-prompted.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EventHandler *> *repromptEventHandlers;

@end


/**
 *  A fulfillment can do one or more of the following actions at the same time:
 *  * Generate rich message responses. * Set parameter values. * Call the
 *  webhook. Fulfillments can be called at various stages in the Page or Form
 *  lifecycle. For example, when a DetectIntentRequest drives a session to enter
 *  a new page, the page's entry fulfillment can add a static response to the
 *  QueryResult in the returning DetectIntentResponse, call the webhook (for
 *  example, to load user data from a database), or both.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Fulfillment : GTLRObject

/** Conditional cases for this fulfillment. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases *> *conditionalCases;

/** The list of rich message responses to present to the user. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessage *> *messages;

/**
 *  Whether Dialogflow should return currently queued fulfillment response
 *  messages in streaming APIs. If a webhook is specified, it happens before
 *  Dialogflow invokes webhook. Warning: 1) This flag only affects streaming
 *  API. Responses are still queued and returned once in non-streaming API. 2)
 *  The flag can be enabled in any fulfillment but only the first 3 partial
 *  responses will be returned. You may only want to apply it to fulfillments
 *  that have slow webhooks.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnPartialResponses;

/** Set parameter values before executing the webhook. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction *> *setParameterActions;

/**
 *  The value of this field will be populated in the WebhookRequest
 *  `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is
 *  called. The tag is typically used by the webhook service to identify which
 *  fulfillment is being called, but it could be used for other purposes. This
 *  field is required if `webhook` is specified.
 */
@property(nonatomic, copy, nullable) NSString *tag;

/** The webhook to call. Format: `projects//locations//agents//webhooks/`. */
@property(nonatomic, copy, nullable) NSString *webhook;

@end


/**
 *  A list of cascading if-else conditions. Cases are mutually exclusive. The
 *  first one with a matching condition is selected, all the rest ignored.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases : GTLRObject

/** A list of cascading if-else conditions. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase *> *cases;

@end


/**
 *  Each case has a Boolean condition. When it is evaluated to be True, the
 *  corresponding messages will be selected and evaluated recursively.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase : GTLRObject

/** A list of case content. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent *> *caseContent;

/**
 *  The condition to activate and select this case. Empty means the condition is
 *  always true. The condition is evaluated against form parameters or session
 *  parameters. See the [conditions
 *  reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
 */
@property(nonatomic, copy, nullable) NSString *condition;

@end


/**
 *  The list of messages or conditional cases to activate for this case.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent : GTLRObject

/** Additional cases to be evaluated. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases *additionalCases;

/** Returned message. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessage *message;

@end


/**
 *  Setting a parameter value.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction : GTLRObject

/** Display name of the parameter. */
@property(nonatomic, copy, nullable) NSString *parameter;

/**
 *  The new value of the parameter. A null value clears the parameter.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id value;

@end


/**
 *  Metadata in google::longrunning::Operation for Knowledge operations.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata : GTLRObject

/**
 *  Required. Output only. The current state of this operation.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata_State_Done
 *        The operation is done, either cancelled or completed. (Value: "DONE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata_State_Pending
 *        The operation has been created. (Value: "PENDING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata_State_Running
 *        The operation is currently running. (Value: "RUNNING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata_State_StateUnspecified
 *        State unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Metadata for ImportDocuments operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ImportDocumentsOperationMetadata : GTLRObject

/** The generic information of the operation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata *genericMetadata;

@end


/**
 *  Response message for Documents.ImportDocuments.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ImportDocumentsResponse : GTLRObject

/** Includes details about skipped documents or any other warnings. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleRpcStatus *> *warnings;

@end


/**
 *  The response message for Flows.ImportFlow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ImportFlowResponse : GTLRObject

/**
 *  The unique identifier of the new flow. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *flow;

@end


/**
 *  Metadata returned for the TestCases.ImportTestCases long running operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ImportTestCasesMetadata : GTLRObject

/** Errors for failed test cases. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCaseError *> *errors;

@end


/**
 *  The response message for TestCases.ImportTestCases.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ImportTestCasesResponse : GTLRObject

/**
 *  The unique identifiers of the new test cases. Format:
 *  `projects//locations//agents//testCases/`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

@end


/**
 *  Instructs the speech recognizer on how to process the audio content.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig : GTLRObject

/**
 *  Required. Audio encoding of the audio content to process.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingAmr
 *        Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be
 *        8000. (Value: "AUDIO_ENCODING_AMR")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingAmrWb
 *        Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.
 *        (Value: "AUDIO_ENCODING_AMR_WB")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingFlac
 *        [`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless
 *        Audio Codec) is the recommended encoding because it is lossless
 *        (therefore recognition is not compromised) and requires only about
 *        half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports
 *        16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are
 *        supported. (Value: "AUDIO_ENCODING_FLAC")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingLinear16
 *        Uncompressed 16-bit signed little-endian samples (Linear PCM). (Value:
 *        "AUDIO_ENCODING_LINEAR_16")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingMulaw
 *        8-bit samples that compand 14-bit audio samples using G.711
 *        PCMU/mu-law. (Value: "AUDIO_ENCODING_MULAW")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingOggOpus
 *        Opus encoded audio frames in Ogg container
 *        ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must
 *        be 16000. (Value: "AUDIO_ENCODING_OGG_OPUS")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingSpeexWithHeaderByte
 *        Although the use of lossy encodings is not recommended, if a very low
 *        bitrate encoding is required, `OGG_OPUS` is highly preferred over
 *        Speex encoding. The [Speex](https://speex.org/) encoding supported by
 *        Dialogflow API has a header byte in each block, as in MIME type
 *        `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex
 *        encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574).
 *        The stream is a sequence of blocks, one block per RTP packet. Each
 *        block starts with a byte containing the length of the block, in bytes,
 *        followed by one or more frames of Speex data, padded to an integral
 *        number of bytes (octets) as specified in RFC 5574. In other words,
 *        each RTP header is replaced with a single byte containing the block
 *        length. Only Speex wideband is supported. `sample_rate_hertz` must be
 *        16000. (Value: "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_AudioEncoding_AudioEncodingUnspecified
 *        Not specified. (Value: "AUDIO_ENCODING_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *audioEncoding;

/**
 *  Optional. If `true`, Dialogflow returns SpeechWordInfo in
 *  StreamingRecognitionResult with information about the recognized speech
 *  words, e.g. start and end time offsets. If false or unspecified, Speech
 *  doesn't return any word-level information.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableWordInfo;

/**
 *  Optional. Which Speech model to select for the given request. Select the
 *  model best suited to your domain to get best results. If a model is not
 *  explicitly specified, then we auto-select a model based on the parameters in
 *  the InputAudioConfig. If enhanced speech model is enabled for the agent and
 *  an enhanced version of the specified model for the language does not exist,
 *  then the speech is recognized using the standard version of the specified
 *  model. Refer to [Cloud Speech API
 *  documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model)
 *  for more details.
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  Optional. Which variant of the Speech model to use.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_ModelVariant_SpeechModelVariantUnspecified
 *        No model variant specified. In this case Dialogflow defaults to
 *        USE_BEST_AVAILABLE. (Value: "SPEECH_MODEL_VARIANT_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_ModelVariant_UseBestAvailable
 *        Use the best available variant of the Speech model that the caller is
 *        eligible for. Please see the [Dialogflow
 *        docs](https://cloud.google.com/dialogflow/docs/data-logging) for how
 *        to make your project eligible for enhanced models. (Value:
 *        "USE_BEST_AVAILABLE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_ModelVariant_UseEnhanced
 *        Use an enhanced model variant: * If an enhanced variant does not exist
 *        for the given model and request language, Dialogflow falls back to the
 *        standard variant. The [Cloud Speech
 *        documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
 *        describes which models have enhanced variants. * If the API caller
 *        isn't eligible for enhanced models, Dialogflow returns an error.
 *        Please see the [Dialogflow
 *        docs](https://cloud.google.com/dialogflow/docs/data-logging) for how
 *        to make your project eligible. (Value: "USE_ENHANCED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1InputAudioConfig_ModelVariant_UseStandard
 *        Use standard model variant even if an enhanced model is available. See
 *        the [Cloud Speech
 *        documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
 *        for details about enhanced models. (Value: "USE_STANDARD")
 */
@property(nonatomic, copy, nullable) NSString *modelVariant;

/**
 *  Optional. A list of strings containing words and phrases that the speech
 *  recognizer should recognize with higher likelihood. See [the Cloud Speech
 *  documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints)
 *  for more details.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *phraseHints;

/**
 *  Sample rate (in Hertz) of the audio content sent in the query. Refer to
 *  [Cloud Speech API
 *  documentation](https://cloud.google.com/speech-to-text/docs/basics) for more
 *  details.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sampleRateHertz;

/**
 *  Optional. If `false` (default), recognition does not cease until the client
 *  closes the stream. If `true`, the recognizer will detect a single spoken
 *  utterance in input audio. Recognition ceases when it detects the audio's
 *  voice has stopped or paused. In this case, once a detected intent is
 *  received, the client should close the stream and start a new request with a
 *  new stream as needed. Note: This setting is relevant only for streaming
 *  methods.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *singleUtterance;

@end


/**
 *  An intent represents a user's intent to interact with a conversational
 *  agent. You can provide information for the Dialogflow API to use to match
 *  user input to an intent by adding training phrases (i.e., examples of user
 *  input) to your intent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Intent : GTLRObject

/**
 *  Human readable description for better understanding an intent like its
 *  scope, content, result etc. Maximum character limit: 140 characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The human-readable name of the intent, unique within the agent.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Indicates whether this is a fallback intent. Currently only default fallback
 *  intent is allowed in the agent, which is added upon agent creation. Adding
 *  training phrases to fallback intent is useful in the case of requests that
 *  are mistakenly matched, since training phrases assigned to fallback intents
 *  act as negative examples that triggers no-match event.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isFallback;

/**
 *  The key/value metadata to label an intent. Labels can contain lowercase
 *  letters, digits and the symbols '-' and '_'. International characters are
 *  allowed, including letters from unicase alphabets. Keys must start with a
 *  letter. Keys and values can be no longer than 63 characters and no more than
 *  128 bytes. Prefix "sys-" is reserved for Dialogflow defined labels.
 *  Currently allowed Dialogflow defined labels include: * sys-head *
 *  sys-contextual The above labels do not require value. "sys-head" means the
 *  intent is a head intent. "sys-contextual" means the intent is a contextual
 *  intent.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Intent_Labels *labels;

/**
 *  The unique identifier of the intent. Required for the Intents.UpdateIntent
 *  method. Intents.CreateIntent populates the name automatically. Format:
 *  `projects//locations//agents//intents/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The collection of parameters associated with the intent. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1IntentParameter *> *parameters;

/**
 *  The priority of this intent. Higher numbers represent higher priorities. -
 *  If the supplied value is unspecified or 0, the service translates the value
 *  to 500,000, which corresponds to the `Normal` priority in the console. - If
 *  the supplied value is negative, the intent is ignored in runtime detect
 *  intent requests.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priority;

/**
 *  The collection of training phrases the agent is trained on to identify the
 *  intent.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase *> *trainingPhrases;

@end


/**
 *  The key/value metadata to label an intent. Labels can contain lowercase
 *  letters, digits and the symbols '-' and '_'. International characters are
 *  allowed, including letters from unicase alphabets. Keys must start with a
 *  letter. Keys and values can be no longer than 63 characters and no more than
 *  128 bytes. Prefix "sys-" is reserved for Dialogflow defined labels.
 *  Currently allowed Dialogflow defined labels include: * sys-head *
 *  sys-contextual The above labels do not require value. "sys-head" means the
 *  intent is a head intent. "sys-contextual" means the intent is a contextual
 *  intent.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Intent_Labels : GTLRObject
@end


/**
 *  Represents the intent to trigger programmatically rather than as a result of
 *  natural language processing.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1IntentInput : GTLRObject

/**
 *  Required. The unique identifier of the intent. Format:
 *  `projects//locations//agents//intents/`.
 */
@property(nonatomic, copy, nullable) NSString *intent;

@end


/**
 *  Represents an intent parameter.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1IntentParameter : GTLRObject

/**
 *  Required. The entity type of the parameter. Format:
 *  `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for
 *  example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or
 *  `projects//locations//agents//entityTypes/` for developer entity types.
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/**
 *  Required. The unique identifier of the parameter. This field is used by
 *  training phrases to annotate their parts.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Indicates whether the parameter represents a list of values.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isList;

/**
 *  Indicates whether the parameter content should be redacted in log. If
 *  redaction is enabled, the parameter content will be replaced by parameter
 *  name during logging. Note: the parameter content is subject to redaction if
 *  either parameter level redaction or entity type level redaction is enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *redact;

@end


/**
 *  Represents an example that the agent is trained on to identify the intent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase : GTLRObject

/**
 *  Output only. The unique identifier of the training phrase.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Required. The ordered list of training phrase parts. The parts are
 *  concatenated in order to form the training phrase. Note: The API does not
 *  automatically annotate training phrases like the Dialogflow Console does.
 *  Note: Do not forget to include whitespace at part boundaries, so the
 *  training phrase is well formatted when the parts are concatenated. If the
 *  training phrase does not need to be annotated with parameters, you just need
 *  a single part with only the Part.text field set. If you want to annotate the
 *  training phrase, you must create multiple parts, where the fields of each
 *  part are populated in one of two ways: - `Part.text` is set to a part of the
 *  phrase that has no parameters. - `Part.text` is set to a part of the phrase
 *  that you want to annotate, and the `parameter_id` field is set.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart *> *parts;

/**
 *  Indicates how many times this example was added to the intent.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *repeatCount;

@end


/**
 *  Represents a part of a training phrase.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart : GTLRObject

/**
 *  The parameter used to annotate this part of the training phrase. This field
 *  is required for annotated parts of the training phrase.
 */
@property(nonatomic, copy, nullable) NSString *parameterId;

/** Required. The text for this part. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  A Dialogflow CX conversation (session) can be described and visualized as a
 *  state machine. The states of a CX session are represented by pages. For each
 *  flow, you define many pages, where your combined pages can handle a complete
 *  conversation on the topics the flow is designed for. At any given moment,
 *  exactly one page is the current page, the current page is considered active,
 *  and the flow associated with that page is considered active. Every flow has
 *  a special start page. When a flow initially becomes active, the start page
 *  page becomes the current page. For each conversational turn, the current
 *  page will either stay the same or transition to another page. You configure
 *  each page to collect information from the end-user that is relevant for the
 *  conversational state represented by the page. For more information, see the
 *  [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Page : GTLRObject

/** Required. The human-readable name of the page, unique within the flow. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** The fulfillment to call when the session is entering the page. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Fulfillment *entryFulfillment;

/**
 *  Handlers associated with the page to handle events such as webhook errors,
 *  no match or no input.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EventHandler *> *eventHandlers;

/**
 *  The form associated with the page, used for collecting parameters relevant
 *  to the page.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Form *form;

/**
 *  The unique identifier of the page. Required for the Pages.UpdatePage method.
 *  Pages.CreatePage populates the name automatically. Format:
 *  `projects//locations//agents//flows//pages/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Ordered list of `TransitionRouteGroups` associated with the page. Transition
 *  route groups must be unique within a page. * If multiple transition routes
 *  within a page scope refer to the same intent, then the precedence order is:
 *  page's transition route -> page's transition route group -> flow's
 *  transition routes. * If multiple transition route groups within a page
 *  contain the same intent, then the first group in the ordered list takes
 *  precedence.
 *  Format:`projects//locations//agents//flows//transitionRouteGroups/`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *transitionRouteGroups;

/**
 *  A list of transitions for the transition rules of this page. They route the
 *  conversation to another page in the same flow, or another flow. When we are
 *  in a certain page, the TransitionRoutes are evalauted in the following
 *  order: * TransitionRoutes defined in the page with intent specified. *
 *  TransitionRoutes defined in the transition route groups with intent
 *  specified. * TransitionRoutes defined in flow with intent specified. *
 *  TransitionRoutes defined in the transition route groups with intent
 *  specified. * TransitionRoutes defined in the page with only condition
 *  specified. * TransitionRoutes defined in the transition route groups with
 *  only condition specified.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TransitionRoute *> *transitionRoutes;

@end


/**
 *  Represents page information communicated to and from the webhook.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfo : GTLRObject

/**
 *  Always present for WebhookRequest. Ignored for WebhookResponse. The unique
 *  identifier of the current page. Format:
 *  `projects//locations//agents//flows//pages/`.
 */
@property(nonatomic, copy, nullable) NSString *currentPage;

/**
 *  Always present for WebhookRequest. Ignored for WebhookResponse. The display
 *  name of the current page.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional for both WebhookRequest and WebhookResponse. Information about the
 *  form.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfoFormInfo *formInfo;

@end


/**
 *  Represents form information.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfoFormInfo : GTLRObject

/**
 *  Optional for both WebhookRequest and WebhookResponse. The parameters
 *  contained in the form. Note that the webhook cannot add or remove any form
 *  parameter.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo *> *parameterInfo;

@end


/**
 *  Represents parameter information.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo : GTLRObject

/**
 *  Always present for WebhookRequest. Required for WebhookResponse. The
 *  human-readable name of the parameter, unique within the form. This field
 *  cannot be modified by the webhook.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the
 *  parameter value was just collected on the last conversation turn.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *justCollected;

/**
 *  Optional for both WebhookRequest and WebhookResponse. Indicates whether the
 *  parameter is required. Optional parameters will not trigger prompts;
 *  however, they are filled if the user specifies them. Required parameters
 *  must be filled before form filling concludes.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *required;

/**
 *  Always present for WebhookRequest. Required for WebhookResponse. The state
 *  of the parameter. This field can be set to INVALID by the webhook to
 *  invalidate the parameter; other values set by the webhook will be ignored.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo_State_Empty
 *        Indicates that the parameter does not have a value. (Value: "EMPTY")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo_State_Filled
 *        Indicates that the parameter has a value. (Value: "FILLED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo_State_Invalid
 *        Indicates that the parameter value is invalid. This field can be used
 *        by the webhook to invalidate the parameter and ask the server to
 *        collect it from the user again. (Value: "INVALID")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo_State_ParameterStateUnspecified
 *        Not specified. This value should be never used. (Value:
 *        "PARAMETER_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Optional for both WebhookRequest and WebhookResponse. The value of the
 *  parameter. This field can be set by the webhook to change the parameter
 *  value.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id value;

@end


/**
 *  Represents the query input. It can contain one of: 1. A conversational query
 *  in the form of text. 2. An intent query that specifies which intent to
 *  trigger. 3. Natural language speech audio to be processed. 4. An event to be
 *  triggered.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1QueryInput : GTLRObject

/** The natural language speech audio to be processed. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1AudioInput *audio;

/** The DTMF event to be handled. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1DtmfInput *dtmf;

/** The event to be triggered. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1EventInput *event;

/** The intent to be triggered. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1IntentInput *intent;

/**
 *  Required. The language of the input. See [Language
 *  Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for
 *  a list of the currently supported language codes. Note that queries in the
 *  same session do not necessarily need to specify the same language.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/** The natural language text to be processed. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TextInput *text;

@end


/**
 *  Metadata for ReloadDocument operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ReloadDocumentOperationMetadata : GTLRObject

/** The generic information of the operation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata *genericMetadata;

@end


/**
 *  Represents a response message that can be returned by a conversational
 *  agent. Response messages are also used for output audio synthesis. The
 *  approach is as follows: * If at least one OutputAudioText response is
 *  present, then all OutputAudioText responses are linearly concatenated, and
 *  the result is used for output audio synthesis. * If the OutputAudioText
 *  responses are a mixture of text and SSML, then the concatenated result is
 *  treated as SSML; otherwise, the result is treated as either text or SSML as
 *  appropriate. The agent designer should ideally use either text or SSML
 *  consistently throughout the bot design. * Otherwise, all Text responses are
 *  linearly concatenated, and the result is used for output audio synthesis.
 *  This approach allows for more sophisticated user experience scenarios, where
 *  the text displayed to the user may differ from what is heard.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessage : GTLRObject

/** Indicates that the conversation succeeded. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess *conversationSuccess;

/**
 *  Output only. A signal that indicates the interaction with the Dialogflow
 *  agent has ended. This message is generated by Dialogflow only when the
 *  conversation reaches `END_SESSION` page. It is not supposed to be defined by
 *  the user. It's guaranteed that there is at most one such message in each
 *  response.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction *endInteraction;

/** Hands off conversation to a human agent. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff *liveAgentHandoff;

/**
 *  Output only. An audio response message composed of both the synthesized
 *  Dialogflow agent responses and responses defined via play_audio. This
 *  message is generated by Dialogflow only and not supposed to be defined by
 *  the user.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio *mixedAudio;

/**
 *  A text or ssml response that is preferentially used for TTS output audio
 *  synthesis, as described in the comment on the ResponseMessage message.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText *outputAudioText;

/** Returns a response containing a custom, platform-specific payload. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessage_Payload *payload;

/**
 *  Signal that the client should play an audio clip hosted at a client-specific
 *  URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow
 *  itself does not try to read or process the URI in any way.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio *playAudio;

/**
 *  A signal that the client should transfer the phone call connected to this
 *  agent to a third-party endpoint.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall *telephonyTransferCall;

/** Returns a text response. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageText *text;

@end


/**
 *  Returns a response containing a custom, platform-specific payload.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessage_Payload : GTLRObject
@end


/**
 *  Indicates that the conversation succeeded, i.e., the bot handled the issue
 *  that the customer talked to it about. Dialogflow only uses this to determine
 *  which conversations should be counted as successful and doesn't process the
 *  metadata in this message in any way. Note that Dialogflow also considers
 *  conversations that get to the conversation end page as successful even if
 *  they don't return ConversationSuccess. You may set this, for example: * In
 *  the entry_fulfillment of a Page if entering the page indicates that the
 *  conversation succeeded. * In a webhook response when you determine that you
 *  handled the customer issue.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess : GTLRObject

/** Custom metadata. Dialogflow doesn't impose any structure on this. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess_Metadata *metadata;

@end


/**
 *  Custom metadata. Dialogflow doesn't impose any structure on this.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess_Metadata : GTLRObject
@end


/**
 *  Indicates that interaction with the Dialogflow agent has ended. This message
 *  is generated by Dialogflow only and not supposed to be defined by the user.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction : GTLRObject
@end


/**
 *  Indicates that the conversation should be handed off to a live agent.
 *  Dialogflow only uses this to determine which conversations were handed off
 *  to a human agent for measurement purposes. What else to do with this signal
 *  is up to you and your handoff procedures. You may set this, for example: *
 *  In the entry_fulfillment of a Page if entering the page indicates something
 *  went extremely wrong in the conversation. * In a webhook response when you
 *  determine that the customer issue can only be handled by a human.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff : GTLRObject

/**
 *  Custom metadata for your handoff procedure. Dialogflow doesn't impose any
 *  structure on this.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff_Metadata *metadata;

@end


/**
 *  Custom metadata for your handoff procedure. Dialogflow doesn't impose any
 *  structure on this.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff_Metadata : GTLRObject
@end


/**
 *  Represents an audio message that is composed of both segments synthesized
 *  from the Dialogflow agent prompts and ones hosted externally at the
 *  specified URIs. The external URIs are specified via play_audio. This message
 *  is generated by Dialogflow only and not supposed to be defined by the user.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio : GTLRObject

/** Segments this audio response is composed of. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment *> *segments;

@end


/**
 *  Represents one segment of audio.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment : GTLRObject

/**
 *  Output only. Whether the playback of this segment can be interrupted by the
 *  end user's speech and the client should then start the next Dialogflow
 *  request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowPlaybackInterruption;

/**
 *  Raw audio synthesized from the Dialogflow agent's response using the output
 *  config specified in the request.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *audio;

/**
 *  Client-specific URI that points to an audio clip accessible to the client.
 *  Dialogflow does not impose any validation on it.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  A text or ssml response that is preferentially used for TTS output audio
 *  synthesis, as described in the comment on the ResponseMessage message.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText : GTLRObject

/**
 *  Output only. Whether the playback of this message can be interrupted by the
 *  end user's speech and the client can then starts the next Dialogflow
 *  request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowPlaybackInterruption;

/**
 *  The SSML text to be synthesized. For more information, see
 *  [SSML](/speech/text-to-speech/docs/ssml).
 */
@property(nonatomic, copy, nullable) NSString *ssml;

/** The raw text to be synthesized. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Specifies an audio clip to be played by the client as part of the response.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio : GTLRObject

/**
 *  Output only. Whether the playback of this message can be interrupted by the
 *  end user's speech and the client can then starts the next Dialogflow
 *  request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowPlaybackInterruption;

/**
 *  Required. URI of the audio clip. Dialogflow does not impose any validation
 *  on this value. It is specific to the client that reads it.
 */
@property(nonatomic, copy, nullable) NSString *audioUri;

@end


/**
 *  Represents the signal that telles the client to transfer the phone call
 *  connected to the agent to a third-party endpoint.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall : GTLRObject

/**
 *  Transfer the call to a phone number in [E.164
 *  format](https://en.wikipedia.org/wiki/E.164).
 */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

@end


/**
 *  The text response message.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessageText : GTLRObject

/**
 *  Output only. Whether the playback of this message can be interrupted by the
 *  end user's speech and the client can then starts the next Dialogflow
 *  request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowPlaybackInterruption;

/** Required. A collection of text responses. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *text;

@end


/**
 *  Metadata returned for the Environments.RunContinuousTest long running
 *  operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1RunContinuousTestMetadata : GTLRObject

/** The test errors. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestError *> *errors;

@end


/**
 *  The response message for Environments.RunContinuousTest.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1RunContinuousTestResponse : GTLRObject

/** The result for a continuous test run. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ContinuousTestResult *continuousTestResult;

@end


/**
 *  Metadata returned for the TestCases.RunTestCase long running operation. This
 *  message currently has no fields.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1RunTestCaseMetadata : GTLRObject
@end


/**
 *  The response message for TestCases.RunTestCase.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1RunTestCaseResponse : GTLRObject

/** The result. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCaseResult *result;

@end


/**
 *  Represents session information communicated to and from the webhook.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1SessionInfo : GTLRObject

/**
 *  Optional for WebhookRequest. Optional for WebhookResponse. All parameters
 *  collected from forms and intents during the session. Parameters can be
 *  created, updated, or removed by the webhook. To remove a parameter from the
 *  session, the webhook should explicitly set the parameter value to null in
 *  WebhookResponse. The map is keyed by parameters' display names.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1SessionInfo_Parameters *parameters;

/**
 *  Always present for WebhookRequest. Ignored for WebhookResponse. The unique
 *  identifier of the session. This field can be used by the webhook to identify
 *  a session. Format: `projects//locations//agents//sessions/` or
 *  `projects//locations//agents//environments//sessions/` if environment is
 *  specified.
 */
@property(nonatomic, copy, nullable) NSString *session;

@end


/**
 *  Optional for WebhookRequest. Optional for WebhookResponse. All parameters
 *  collected from forms and intents during the session. Parameters can be
 *  created, updated, or removed by the webhook. To remove a parameter from the
 *  session, the webhook should explicitly set the parameter value to null in
 *  WebhookResponse. The map is keyed by parameters' display names.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1SessionInfo_Parameters : GTLRObject
@end


/**
 *  Represents a test case.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCase : GTLRObject

/** Output only. When the test was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *creationTime;

/**
 *  Required. The human-readable name of the test case, unique within the agent.
 *  Limit of 200 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** The latest test result. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCaseResult *lastTestResult;

/**
 *  The unique identifier of the test case. TestCases.CreateTestCase will
 *  populate the name automatically. Otherwise use format:
 *  `projects//locations//agents/ /testCases/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Additional freeform notes about the test case. Limit of 400 characters. */
@property(nonatomic, copy, nullable) NSString *notes;

/**
 *  Tags are short descriptions that users may apply to test cases for
 *  organizational and filtering purposes. Each tag should start with "#" and
 *  has a limit of 30 characters.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tags;

/**
 *  The conversation turns uttered when the test case was created, in
 *  chronological order. These include the canonical set of agent utterances
 *  that should occur when the agent is working properly.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurn *> *testCaseConversationTurns;

/** Config for the test case. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestConfig *testConfig;

@end


/**
 *  Error info for importing a test.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCaseError : GTLRObject

/** The status associated with the test case. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleRpcStatus *status;

/** The test case. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCase *testCase;

@end


/**
 *  Represents a result from running a test case in an agent environment.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCaseResult : GTLRObject

/**
 *  The conversation turns uttered during the test case replay in chronological
 *  order.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ConversationTurn *> *conversationTurns;

/**
 *  Environment where the test was run. If not set, it indicates the draft
 *  environment.
 */
@property(nonatomic, copy, nullable) NSString *environment;

/**
 *  The resource name for the test case result. Format:
 *  `projects//locations//agents//testCases/ /results/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Whether the test case passed in the agent environment.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCaseResult_TestResult_Failed
 *        The test did not pass. (Value: "FAILED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCaseResult_TestResult_Passed
 *        The test passed. (Value: "PASSED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestCaseResult_TestResult_TestResultUnspecified
 *        Not specified. Should never be used. (Value:
 *        "TEST_RESULT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *testResult;

/** The time that the test was run. */
@property(nonatomic, strong, nullable) GTLRDateTime *testTime;

@end


/**
 *  Represents configurations for a test case.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestConfig : GTLRObject

/**
 *  Flow name to start the test case with. Format:
 *  `projects//locations//agents//flows/`. Only one of `flow` and `page` should
 *  be set to indicate the starting point of the test case. If both are set,
 *  `page` takes precedence over `flow`. If neither is set, the test case will
 *  start with start page on the default start flow.
 */
@property(nonatomic, copy, nullable) NSString *flow;

/**
 *  The page to start the test case with. Format:
 *  `projects//locations//agents//flows//pages/`. Only one of `flow` and `page`
 *  should be set to indicate the starting point of the test case. If both are
 *  set, `page` takes precedence over `flow`. If neither is set, the test case
 *  will start with start page on the default start flow.
 */
@property(nonatomic, copy, nullable) NSString *page;

/** Session parameters to be compared when calculating differences. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *trackingParameters;

@end


/**
 *  Error info for running a test.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestError : GTLRObject

/** The status associated with the test. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleRpcStatus *status;

/** The test case resource name. */
@property(nonatomic, copy, nullable) NSString *testCase;

/** The timestamp when the test was completed. */
@property(nonatomic, strong, nullable) GTLRDateTime *testTime;

@end


/**
 *  The description of differences between original and replayed agent output.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestRunDifference : GTLRObject

/**
 *  A description of the diff, showing the actual output vs expected output.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The type of diff.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestRunDifference_Type_DiffTypeUnspecified
 *        Should never be used. (Value: "DIFF_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestRunDifference_Type_Intent
 *        The intent. (Value: "INTENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestRunDifference_Type_Page
 *        The page. (Value: "PAGE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestRunDifference_Type_Parameters
 *        The parameters. (Value: "PARAMETERS")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1TestRunDifference_Type_Utterance
 *        The message utterance. (Value: "UTTERANCE")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents the natural language text to be processed.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TextInput : GTLRObject

/**
 *  Required. The UTF-8 encoded natural language text to be processed. Text
 *  length must not exceed 256 characters.
 */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  A transition route specifies a intent that can be matched and/or a data
 *  condition that can be evaluated during a session. When a specified
 *  transition is matched, the following actions are taken in order: * If there
 *  is a `trigger_fulfillment` associated with the transition, it will be
 *  called. * If there is a `target_page` associated with the transition, the
 *  session will transition into the specified page. * If there is a
 *  `target_flow` associated with the transition, the session will transition
 *  into the specified flow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1TransitionRoute : GTLRObject

/**
 *  The condition to evaluate against form parameters or session parameters. See
 *  the [conditions
 *  reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
 *  At least one of `intent` or `condition` must be specified. When both
 *  `intent` and `condition` are specified, the transition can only happen when
 *  both are fulfilled.
 */
@property(nonatomic, copy, nullable) NSString *condition;

/**
 *  The unique identifier of an Intent. Format:
 *  `projects//locations//agents//intents/`. Indicates that the transition can
 *  only happen when the given intent is matched. At least one of `intent` or
 *  `condition` must be specified. When both `intent` and `condition` are
 *  specified, the transition can only happen when both are fulfilled.
 */
@property(nonatomic, copy, nullable) NSString *intent;

/** Output only. The unique identifier of this transition route. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The target flow to transition to. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *targetFlow;

/**
 *  The target page to transition to. Format:
 *  `projects//locations//agents//flows//pages/`.
 */
@property(nonatomic, copy, nullable) NSString *targetPage;

/**
 *  The fulfillment to call when the condition is satisfied. At least one of
 *  `trigger_fulfillment` and `target` must be specified. When both are defined,
 *  `trigger_fulfillment` is executed first.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Fulfillment *triggerFulfillment;

@end


/**
 *  Metadata for UpdateDocument operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1UpdateDocumentOperationMetadata : GTLRObject

/** The generic information of the operation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata *genericMetadata;

@end


/**
 *  Webhooks host the developer's business logic. During a session, webhooks
 *  allow the developer to use the data extracted by Dialogflow's natural
 *  language processing to generate dynamic responses, validate collected data,
 *  or trigger actions on the backend.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1Webhook : GTLRObject

/**
 *  Indicates whether the webhook is disabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/**
 *  Required. The human-readable name of the webhook, unique within the agent.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Configuration for a generic web service. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookGenericWebService *genericWebService;

/**
 *  The unique identifier of the webhook. Required for the
 *  Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name
 *  automatically. Format: `projects//locations//agents//webhooks/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Configuration for a [Service
 *  Directory](https://cloud.google.com/service-directory) service.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig *serviceDirectory;

/**
 *  Webhook execution timeout. Execution is considered failed if Dialogflow
 *  doesn't receive a response from webhook at the end of the timeout period.
 *  Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

@end


/**
 *  Represents configuration for a generic web service.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookGenericWebService : GTLRObject

/**
 *  Optional. Specifies a list of allowed custom CA certificates (in DER format)
 *  for HTTPS verification. This overrides the default SSL trust store. If this
 *  is empty or unspecified, Dialogflow will use Google's default trust store to
 *  verify certificates. N.B. Make sure the HTTPS server certificates are signed
 *  with "subject alt name". For instance a certificate can be self-signed using
 *  the following command, ``` openssl x509 -req -days 200 -in example.com.csr
 *  \\ -signkey example.com.key \\ -out example.com.crt \\ -extfile <(printf
 *  "\\nsubjectAltName='DNS:www.example.com'") ```
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowedCaCerts;

/** The password for HTTP Basic authentication. */
@property(nonatomic, copy, nullable) NSString *password;

/** The HTTP request headers to send together with webhook requests. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookGenericWebService_RequestHeaders *requestHeaders;

/**
 *  Required. The webhook URI for receiving POST requests. It must use https
 *  protocol.
 */
@property(nonatomic, copy, nullable) NSString *uri;

/** The user name for HTTP Basic authentication. */
@property(nonatomic, copy, nullable) NSString *username;

@end


/**
 *  The HTTP request headers to send together with webhook requests.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookGenericWebService_RequestHeaders : GTLRObject
@end


/**
 *  The request message for a webhook call. The request is sent as a JSON object
 *  and the field names will be presented in camel cases. You may see
 *  undocumented fields in an actual request. These fields are used internally
 *  by Dialogflow and should be ignored.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequest : GTLRObject

/**
 *  Always present. The unique identifier of the DetectIntentResponse that will
 *  be returned to the API caller.
 */
@property(nonatomic, copy, nullable) NSString *detectIntentResponseId;

/**
 *  Always present. Information about the fulfillment that triggered this
 *  webhook call.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo *fulfillmentInfo;

/** Information about the last matched intent. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo *intentInfo;

/** The language code specified in the original request. */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The list of rich message responses to present to the user. Webhook can
 *  choose to append or replace this list in
 *  WebhookResponse.fulfillment_response;
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessage *> *messages;

/** Information about page status. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfo *pageInfo;

/** Custom data set in QueryParameters.payload. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequest_Payload *payload;

/**
 *  The sentiment analysis result of the current user request. The field is
 *  filled when sentiment analysis is configured to be enabled for the request.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult *sentimentAnalysisResult;

/** Information about session status. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1SessionInfo *sessionInfo;

/**
 *  If natural language text was provided as input, this field will contain a
 *  copy of the text.
 */
@property(nonatomic, copy, nullable) NSString *text;

/**
 *  If natural language speech audio was provided as input, this field will
 *  contain the transcript for the audio.
 */
@property(nonatomic, copy, nullable) NSString *transcript;

/**
 *  If an event was provided as input, this field will contain the name of the
 *  event.
 */
@property(nonatomic, copy, nullable) NSString *triggerEvent;

/**
 *  If an intent was provided as input, this field will contain a copy of the
 *  intent identifier. Format: `projects//locations//agents//intents/`.
 */
@property(nonatomic, copy, nullable) NSString *triggerIntent;

@end


/**
 *  Custom data set in QueryParameters.payload.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequest_Payload : GTLRObject
@end


/**
 *  Represents fulfillment information communicated to the webhook.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo : GTLRObject

/**
 *  Always present. The value of the Fulfillment.tag field will be populated in
 *  this field by Dialogflow when the associated webhook is called. The tag is
 *  typically used by the webhook service to identify which fulfillment is being
 *  called, but it could be used for other purposes.
 */
@property(nonatomic, copy, nullable) NSString *tag;

@end


/**
 *  Represents intent information communicated to the webhook.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo : GTLRObject

/**
 *  The confidence of the matched intent. Values range from 0.0 (completely
 *  uncertain) to 1.0 (completely certain).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Always present. The display name of the last matched intent. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Always present. The unique identifier of the last matched intent. Format:
 *  `projects//locations//agents//intents/`.
 */
@property(nonatomic, copy, nullable) NSString *lastMatchedIntent;

/**
 *  Parameters identified as a result of intent matching. This is a map of the
 *  name of the identified parameter to the value of the parameter identified
 *  from the user's utterance. All parameters defined in the matched intent that
 *  are identified will be surfaced here.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo_Parameters *parameters;

@end


/**
 *  Parameters identified as a result of intent matching. This is a map of the
 *  name of the identified parameter to the value of the parameter identified
 *  from the user's utterance. All parameters defined in the matched intent that
 *  are identified will be surfaced here.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo_Parameters : GTLRObject
@end


/**
 *  Represents a value for an intent parameter.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue : GTLRObject

/** Always present. Original text value extracted from user utterance. */
@property(nonatomic, copy, nullable) NSString *originalValue;

/**
 *  Always present. Structured value for the parameter extracted from user
 *  utterance.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id resolvedValue;

@end


/**
 *  Represents the result of sentiment analysis.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult : GTLRObject

/**
 *  A non-negative number in the [0, +inf) range, which represents the absolute
 *  magnitude of sentiment, regardless of score (positive or negative).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *magnitude;

/**
 *  Sentiment score between -1.0 (negative sentiment) and 1.0 (positive
 *  sentiment).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  The response message for a webhook call.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookResponse : GTLRObject

/**
 *  The fulfillment response to send to the user. This field can be omitted by
 *  the webhook if it does not intend to send any response to the user.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse *fulfillmentResponse;

/**
 *  Information about page status. This field can be omitted by the webhook if
 *  it does not intend to modify page status.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1PageInfo *pageInfo;

/** Value to append directly to QueryResult.webhook_payloads. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookResponse_Payload *payload;

/**
 *  Information about session status. This field can be omitted by the webhook
 *  if it does not intend to modify session status.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1SessionInfo *sessionInfo;

/**
 *  The target flow to transition to. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *targetFlow;

/**
 *  The target page to transition to. Format:
 *  `projects//locations//agents//flows//pages/`.
 */
@property(nonatomic, copy, nullable) NSString *targetPage;

@end


/**
 *  Value to append directly to QueryResult.webhook_payloads.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookResponse_Payload : GTLRObject
@end


/**
 *  Represents a fulfillment response to the user.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse : GTLRObject

/**
 *  Merge behavior for `messages`.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse_MergeBehavior_Append
 *        `messages` will be appended to the list of messages waiting to be sent
 *        to the user. (Value: "APPEND")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse_MergeBehavior_MergeBehaviorUnspecified
 *        Not specified. `APPEND` will be used. (Value:
 *        "MERGE_BEHAVIOR_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse_MergeBehavior_Replace
 *        `messages` will replace the list of messages waiting to be sent to the
 *        user. (Value: "REPLACE")
 */
@property(nonatomic, copy, nullable) NSString *mergeBehavior;

/** The list of rich message responses to present to the user. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3beta1ResponseMessage *> *messages;

@end


/**
 *  Represents configuration for a [Service
 *  Directory](https://cloud.google.com/service-directory) service.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig : GTLRObject

/** Generic Service configuration of this webhook. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3beta1WebhookGenericWebService *genericWebService;

/**
 *  Required. The name of [Service
 *  Directory](https://cloud.google.com/service-directory) service. Format:
 *  `projects//locations//namespaces//services/`. `Location ID` of the service
 *  directory must be the same as the location of the agent.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  The response message for TestCases.CalculateCoverage.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3CalculateCoverageResponse : GTLRObject

/**
 *  The agent to calculate coverage for. Format: `projects//locations//agents/`.
 */
@property(nonatomic, copy, nullable) NSString *agent;

/** Intent coverage. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3IntentCoverage *intentCoverage;

/** Transition route group coverage. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroupCoverage *routeGroupCoverage;

/** Transition (excluding transition route groups) coverage. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionCoverage *transitionCoverage;

@end


/**
 *  Changelogs represents a change made to a given agent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3Changelog : GTLRObject

/** The action of the change. */
@property(nonatomic, copy, nullable) NSString *action;

/** The timestamp of the change. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The affected resource display name of the change. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The unique identifier of the changelog. Format:
 *  `projects//locations//agents//changelogs/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The affected resource name of the change. */
@property(nonatomic, copy, nullable) NSString *resource;

/** The affected resource type. */
@property(nonatomic, copy, nullable) NSString *type;

/** Email address of the authenticated user. */
@property(nonatomic, copy, nullable) NSString *userEmail;

@end


/**
 *  The request message for Versions.CompareVersions.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3CompareVersionsRequest : GTLRObject

/**
 *  The language to compare the flow versions for. If not specified, the agent's
 *  default language is used. [Many
 *  languages](https://cloud.google.com/dialogflow/docs/reference/language) are
 *  supported. Note: languages must be enabled in the agent before they can be
 *  used.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. Name of the target flow version to compare with the base version.
 *  Use version ID `0` to indicate the draft version of the specified flow.
 *  Format: `projects//locations//agents//flows//versions/`.
 */
@property(nonatomic, copy, nullable) NSString *targetVersion;

@end


/**
 *  The response message for Versions.CompareVersions.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3CompareVersionsResponse : GTLRObject

/** JSON representation of the base version content. */
@property(nonatomic, copy, nullable) NSString *baseVersionContentJson;

/** The timestamp when the two version compares. */
@property(nonatomic, strong, nullable) GTLRDateTime *compareTime;

/** JSON representation of the target version content. */
@property(nonatomic, copy, nullable) NSString *targetVersionContentJson;

@end


/**
 *  Represents a result from running a test case in an agent environment.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ContinuousTestResult : GTLRObject

/**
 *  The resource name for the continuous test result. Format:
 *  `projects//locations//agents//environments//continuousTestResults/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The result of this continuous test run, i.e. whether all the tests in this
 *  continuous test run pass or not.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ContinuousTestResult_Result_AggregatedTestResultUnspecified
 *        Not specified. Should never be used. (Value:
 *        "AGGREGATED_TEST_RESULT_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ContinuousTestResult_Result_Failed
 *        At least one test did not pass. (Value: "FAILED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ContinuousTestResult_Result_Passed
 *        All the tests passed. (Value: "PASSED")
 */
@property(nonatomic, copy, nullable) NSString *result;

/** Time when the continuous testing run starts. */
@property(nonatomic, strong, nullable) GTLRDateTime *runTime;

/**
 *  A list of individual test case results names in this continuous test run.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *testCaseResults;

@end


/**
 *  One interaction between a human and virtual agent. The human provides some
 *  input and the virtual agent provides a response.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurn : GTLRObject

/** The user input. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurnUserInput *userInput;

/** The virtual agent output. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput *virtualAgentOutput;

@end


/**
 *  The input from the human user.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurnUserInput : GTLRObject

/**
 *  Whether sentiment analysis is enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableSentimentAnalysis;

/**
 *  Parameters that need to be injected into the conversation during intent
 *  detection.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurnUserInput_InjectedParameters *injectedParameters;

/** Supports text input, event input, dtmf input in the test case. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3QueryInput *input;

/**
 *  If webhooks should be allowed to trigger in response to the user utterance.
 *  Often if parameters are injected, webhooks should not be enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isWebhookEnabled;

@end


/**
 *  Parameters that need to be injected into the conversation during intent
 *  detection.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurnUserInput_InjectedParameters : GTLRObject
@end


/**
 *  The output from the virtual agent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput : GTLRObject

/**
 *  The Page on which the utterance was spoken. Only name and displayName will
 *  be set.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Page *currentPage;

/**
 *  Required. Input only. The diagnostic info output for the turn. Required to
 *  calculate the testing coverage.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput_DiagnosticInfo *diagnosticInfo;

/**
 *  Output only. If this is part of a result conversation turn, the list of
 *  differences between the original run and the replay for this output, if any.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3TestRunDifference *> *differences;

/** The session parameters available to the bot at this point. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput_SessionParameters *sessionParameters;

/**
 *  Response error from the agent in the test result. If set, other output is
 *  empty.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleRpcStatus *status;

/** The text responses from the agent for the turn. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageText *> *textResponses;

/**
 *  The Intent that triggered the response. Only name and displayName will be
 *  set.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Intent *triggeredIntent;

@end


/**
 *  Required. Input only. The diagnostic info output for the turn. Required to
 *  calculate the testing coverage.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput_DiagnosticInfo : GTLRObject
@end


/**
 *  The session parameters available to the bot at this point.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput_SessionParameters : GTLRObject
@end


/**
 *  Metadata for CreateDocument operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3CreateDocumentOperationMetadata : GTLRObject

/** The generic information of the operation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata *genericMetadata;

@end


/**
 *  Metadata associated with the long running operation for
 *  Versions.CreateVersion.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3CreateVersionOperationMetadata : GTLRObject

/**
 *  Name of the created version. Format:
 *  `projects//locations//agents//flows//versions/`.
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Metadata for DeleteDocument operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3DeleteDocumentOperationMetadata : GTLRObject

/** The generic information of the operation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata *genericMetadata;

@end


/**
 *  Metadata returned for the Environments.DeployFlow long running operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3DeployFlowMetadata : GTLRObject

/** Errors of running deployment tests. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3TestError *> *testErrors;

@end


/**
 *  The request message for Environments.DeployFlow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3DeployFlowRequest : GTLRObject

/**
 *  Required. The flow version to deploy. Format: `projects//locations//agents//
 *  flows//versions/`.
 */
@property(nonatomic, copy, nullable) NSString *flowVersion;

@end


/**
 *  The response message for Environments.DeployFlow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3DeployFlowResponse : GTLRObject

/**
 *  The name of the flow version Deployment. Format:
 *  `projects//locations//agents// environments//deployments/`.
 */
@property(nonatomic, copy, nullable) NSString *deployment;

/** The updated environment where the flow is deployed. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Environment *environment;

@end


/**
 *  Represents an deployment in an environment. A deployment happens when a flow
 *  version configured to be active in the environment. You can configure
 *  running pre-deployment steps, e.g. running validation test cases, experiment
 *  auto-rollout, etc.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3Deployment : GTLRObject

/** End time of this deployment. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  The name of the flow version for this deployment. Format:
 *  projects//locations//agents//flows//versions/.
 */
@property(nonatomic, copy, nullable) NSString *flowVersion;

/**
 *  The name of the deployment. Format:
 *  projects//locations//agents//environments//deployments/.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Result of the deployment. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3DeploymentResult *result;

/** Start time of this deployment. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  The current state of the deployment.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Deployment_State_Failed
 *        The deployment failed. (Value: "FAILED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Deployment_State_Running
 *        The deployment is running. (Value: "RUNNING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Deployment_State_StateUnspecified
 *        State unspecified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Deployment_State_Succeeded
 *        The deployment succeeded. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Result of the deployment.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3DeploymentResult : GTLRObject

/**
 *  Results of test cases running before the deployment. Format:
 *  `projects//locations//agents//testCases//results/`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *deploymentTestResults;

/**
 *  The name of the experiment triggered by this deployment. Format:
 *  projects//locations//agents//environments//experiments/.
 */
@property(nonatomic, copy, nullable) NSString *experiment;

@end


/**
 *  The request to detect user's intent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentRequest : GTLRObject

/** Instructs the speech synthesizer how to generate the output audio. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig *outputAudioConfig;

/** Required. The input specification. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3QueryInput *queryInput;

/** The parameters of this query. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3QueryParameters *queryParams;

@end


/**
 *  The message returned from the DetectIntent method.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentResponse : GTLRObject

/**
 *  Indicates whether the partial response can be cancelled when a later
 *  response arrives. e.g. if the agent specified some music as partial
 *  response, it can be cancelled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowCancellation;

/**
 *  The audio data bytes encoded as specified in the request. Note: The output
 *  audio is generated based on the values of default platform text responses
 *  found in the `query_result.response_messages` field. If multiple default
 *  text responses exist, they will be concatenated when generating audio. If no
 *  default platform text responses exist, the generated audio content will be
 *  empty. In some scenarios, multiple output audio fields may be present in the
 *  response structure. In these cases, only the top-most-level audio output has
 *  content.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *outputAudio;

/** The config used by the speech synthesizer to generate the output audio. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig *outputAudioConfig;

/** The result of the conversational query. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3QueryResult *queryResult;

/**
 *  Output only. The unique identifier of the response. It can be used to locate
 *  a response in the training example set or for reporting issues.
 */
@property(nonatomic, copy, nullable) NSString *responseId;

/**
 *  Response type.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentResponse_ResponseType_Final
 *        Final response. (Value: "FINAL")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentResponse_ResponseType_Partial
 *        Partial response. e.g. Aggregated responses in a Fulfillment that
 *        enables `return_partial_response` can be returned as partial response.
 *        WARNING: partial response is not eligible for barge-in. (Value:
 *        "PARTIAL")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3DetectIntentResponse_ResponseType_ResponseTypeUnspecified
 *        Not specified. This should never happen. (Value:
 *        "RESPONSE_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *responseType;

@end


/**
 *  Represents the input for dtmf event.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3DtmfInput : GTLRObject

/** The dtmf digits. */
@property(nonatomic, copy, nullable) NSString *digits;

/** The finish digit (if any). */
@property(nonatomic, copy, nullable) NSString *finishDigit;

@end


/**
 *  Entities are extracted from user input and represent parameters that are
 *  meaningful to your application. For example, a date range, a proper name
 *  such as a geographic location or landmark, and so on. Entities represent
 *  actionable data for your application. When you define an entity, you can
 *  also include synonyms that all map to that entity. For example, "soft
 *  drink", "soda", "pop", and so on. There are three types of entities: *
 *  **System** - entities that are defined by the Dialogflow API for common data
 *  types such as date, time, currency, and so on. A system entity is
 *  represented by the `EntityType` type. * **Custom** - entities that are
 *  defined by you that represent actionable data that is meaningful to your
 *  application. For example, you could define a `pizza.sauce` entity for red or
 *  white pizza sauce, a `pizza.cheese` entity for the different types of cheese
 *  on a pizza, a `pizza.topping` entity for different toppings, and so on. A
 *  custom entity is represented by the `EntityType` type. * **User** - entities
 *  that are built for an individual user such as favorites, preferences,
 *  playlists, and so on. A user entity is represented by the SessionEntityType
 *  type. For more information about entity types, see the [Dialogflow
 *  documentation](https://cloud.google.com/dialogflow/docs/entities-overview).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3EntityType : GTLRObject

/**
 *  Indicates whether the entity type can be automatically expanded.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3EntityType_AutoExpansionMode_AutoExpansionModeDefault
 *        Allows an agent to recognize values that have not been explicitly
 *        listed in the entity. (Value: "AUTO_EXPANSION_MODE_DEFAULT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3EntityType_AutoExpansionMode_AutoExpansionModeUnspecified
 *        Auto expansion disabled for the entity. (Value:
 *        "AUTO_EXPANSION_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *autoExpansionMode;

/**
 *  Required. The human-readable name of the entity type, unique within the
 *  agent.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Enables fuzzy entity extraction during classification.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableFuzzyExtraction;

/** The collection of entity entries associated with the entity type. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3EntityTypeEntity *> *entities;

/**
 *  Collection of exceptional words and phrases that shouldn't be matched. For
 *  example, if you have a size entity type with entry `giant`(an adjective),
 *  you might consider adding `giants`(a noun) as an exclusion. If the kind of
 *  entity type is `KIND_MAP`, then the phrases specified by entities and
 *  excluded phrases should be mutually exclusive.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase *> *excludedPhrases;

/**
 *  Required. Indicates the kind of entity type.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3EntityType_Kind_KindList
 *        List entity types contain a set of entries that do not map to
 *        canonical values. However, list entity types can contain references to
 *        other entity types (with or without aliases). (Value: "KIND_LIST")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3EntityType_Kind_KindMap
 *        Map entity types allow mapping of a group of synonyms to a canonical
 *        value. (Value: "KIND_MAP")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3EntityType_Kind_KindRegexp
 *        Regexp entity types allow to specify regular expressions in entries
 *        values. (Value: "KIND_REGEXP")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3EntityType_Kind_KindUnspecified
 *        Not specified. This value should be never used. (Value:
 *        "KIND_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The unique identifier of the entity type. Required for
 *  EntityTypes.UpdateEntityType. Format:
 *  `projects//locations//agents//entityTypes/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Indicates whether parameters of the entity type should be redacted in log.
 *  If redaction is enabled, page parameters and intent parameters referring to
 *  the entity type will be replaced by parameter name when logging.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *redact;

@end


/**
 *  An **entity entry** for an associated entity type.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3EntityTypeEntity : GTLRObject

/**
 *  Required. A collection of value synonyms. For example, if the entity type is
 *  *vegetable*, and `value` is *scallions*, a synonym could be *green onions*.
 *  For `KIND_LIST` entity types: * This collection must contain exactly one
 *  synonym equal to `value`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *synonyms;

/**
 *  Required. The primary value associated with this entity entry. For example,
 *  if the entity type is *vegetable*, the value could be *scallions*. For
 *  `KIND_MAP` entity types: * A canonical value to be used in place of
 *  synonyms. For `KIND_LIST` entity types: * A string that can contain
 *  references to other entity types (with or without aliases).
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  An excluded entity phrase that should not be matched.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase : GTLRObject

/** Required. The word or phrase to be excluded. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents an environment for an agent. You can create multiple versions of
 *  your agent and publish them to separate environments. When you edit an
 *  agent, you are editing the draft agent. At any point, you can save the draft
 *  agent as an agent version, which is an immutable snapshot of your agent.
 *  When you save the draft agent, it is published to the default environment.
 *  When you create agent versions, you can publish them to custom environments.
 *  You can create a variety of custom environments for testing, development,
 *  production, etc.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3Environment : GTLRObject

/**
 *  The human-readable description of the environment. The maximum length is 500
 *  characters. If exceeded, the request is rejected.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The human-readable name of the environment (unique in an agent).
 *  Limit of 64 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The name of the environment. Format:
 *  `projects//locations//agents//environments/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The test cases config for continuous tests of this environment. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig *testCasesConfig;

/** Output only. Update time of this environment. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Required. A list of configurations for flow versions. You should include
 *  version configs for all flows that are reachable from `Start Flow` in the
 *  agent. Otherwise, an error will be returned.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3EnvironmentVersionConfig *> *versionConfigs;

/** The webhook configuration for this environment. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3EnvironmentWebhookConfig *webhookConfig;

@end


/**
 *  The configuration for continuous tests.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig : GTLRObject

/**
 *  Whether to run test cases in TestCasesConfig.test_cases periodically.
 *  Default false. If set to true, run once a day.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableContinuousRun;

/**
 *  Whether to run test cases in TestCasesConfig.test_cases before deploying a
 *  flow version to the environment. Default false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enablePredeploymentRun;

/**
 *  A list of test case names to run. They should be under the same agent.
 *  Format of each test case name: `projects//locations/ /agents//testCases/`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *testCases;

@end


/**
 *  Configuration for the version.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3EnvironmentVersionConfig : GTLRObject

/** Required. Format: projects//locations//agents//flows//versions/. */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Configuration for webhooks.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3EnvironmentWebhookConfig : GTLRObject

/**
 *  The list of webhooks to override for the agent environment. The webhook must
 *  exist in the agent. You can override fields in `generic_web_service` and
 *  `service_directory`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3Webhook *> *webhookOverrides;

@end


/**
 *  An event handler specifies an event that can be handled during a session.
 *  When the specified event happens, the following actions are taken in order:
 *  * If there is a `trigger_fulfillment` associated with the event, it will be
 *  called. * If there is a `target_page` associated with the event, the session
 *  will transition into the specified page. * If there is a `target_flow`
 *  associated with the event, the session will transition into the specified
 *  flow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3EventHandler : GTLRObject

/** Required. The name of the event to handle. */
@property(nonatomic, copy, nullable) NSString *event;

/** Output only. The unique identifier of this event handler. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The target flow to transition to. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *targetFlow;

/**
 *  The target page to transition to. Format:
 *  `projects//locations//agents//flows//pages/`.
 */
@property(nonatomic, copy, nullable) NSString *targetPage;

/**
 *  The fulfillment to call when the event occurs. Handling webhook errors with
 *  a fulfillment enabled with webhook could cause infinite loop. It is invalid
 *  to specify such fulfillment for a handler handling webhooks.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Fulfillment *triggerFulfillment;

@end


/**
 *  Represents the event to trigger.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3EventInput : GTLRObject

/** Name of the event. */
@property(nonatomic, copy, nullable) NSString *event;

@end


/**
 *  Represents an experiment in an environment.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3Experiment : GTLRObject

/** Creation time of this experiment. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** The definition of the experiment. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentDefinition *definition;

/**
 *  The human-readable description of the experiment.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The human-readable name of the experiment (unique in an
 *  environment). Limit of 64 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** End time of this experiment. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Maximum number of days to run the experiment/rollout. If auto-rollout is not
 *  enabled, default value and maximum will be 30 days. If auto-rollout is
 *  enabled, default value and maximum will be 6 days.
 */
@property(nonatomic, strong, nullable) GTLRDuration *experimentLength;

/** Last update time of this experiment. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastUpdateTime;

/**
 *  The name of the experiment. Format:
 *  projects//locations//agents//environments//experiments/..
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Inference result of the experiment. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResult *result;

/**
 *  The configuration for auto rollout. If set, there should be exactly two
 *  variants in the experiment (control variant being the default version of the
 *  flow), the traffic allocation for the non-control variant will gradually
 *  increase to 100% when conditions are met, and eventually replace the control
 *  variant to become the default version of the flow.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3RolloutConfig *rolloutConfig;

/**
 *  The reason why rollout has failed. Should only be set when state is
 *  ROLLOUT_FAILED.
 */
@property(nonatomic, copy, nullable) NSString *rolloutFailureReason;

/** State of the auto rollout process. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3RolloutState *rolloutState;

/** Start time of this experiment. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  The current state of the experiment. Transition triggered by
 *  Experiments.StartExperiment: DRAFT->RUNNING. Transition triggered by
 *  Experiments.CancelExperiment: DRAFT->DONE or RUNNING->DONE.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Experiment_State_Done The
 *        experiment is done. (Value: "DONE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Experiment_State_Draft
 *        The experiment is created but not started yet. (Value: "DRAFT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Experiment_State_RolloutFailed
 *        The experiment with auto-rollout enabled has failed. (Value:
 *        "ROLLOUT_FAILED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Experiment_State_Running
 *        The experiment is running. (Value: "RUNNING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Experiment_State_StateUnspecified
 *        State unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** The history of updates to the experiment variants. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3VariantsHistory *> *variantsHistory;

@end


/**
 *  Definition of the experiment.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentDefinition : GTLRObject

/**
 *  The condition defines which subset of sessions are selected for this
 *  experiment. If not specified, all sessions are eligible. E.g.
 *  "query_input.language_code=en" See the [conditions
 *  reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
 */
@property(nonatomic, copy, nullable) NSString *condition;

/** The flow versions as the variants of this experiment. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3VersionVariants *versionVariants;

@end


/**
 *  The inference result which includes an objective metric to optimize and the
 *  confidence interval.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResult : GTLRObject

/**
 *  The last time the experiment's stats data was updated. Will have default
 *  value if stats have never been computed for this experiment.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *lastUpdateTime;

/** Version variants and metrics. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics *> *versionMetrics;

@end


/**
 *  A confidence interval is a range of possible values for the experiment
 *  objective you are trying to measure.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval : GTLRObject

/**
 *  The confidence level used to construct the interval, i.e. there is X% chance
 *  that the true value is within this interval.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidenceLevel;

/**
 *  Lower bound of the interval.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *lowerBound;

/**
 *  The percent change between an experiment metric's value and the value for
 *  its control.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ratio;

/**
 *  Upper bound of the interval.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *upperBound;

@end


/**
 *  Metric and corresponding confidence intervals.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric : GTLRObject

/**
 *  The probability that the treatment is better than all other treatments in
 *  the experiment
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval *confidenceInterval;

/**
 *  Count value of a metric.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/**
 *  Count-based metric type. Only one of type or count_type is specified in each
 *  Metric.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_CountType_AverageTurnCount
 *        Average turn count in a session. (Value: "AVERAGE_TURN_COUNT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_CountType_CountTypeUnspecified
 *        Count type unspecified. (Value: "COUNT_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_CountType_TotalNoMatchCount
 *        Total number of occurrences of a 'NO_MATCH'. (Value:
 *        "TOTAL_NO_MATCH_COUNT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_CountType_TotalTurnCount
 *        Total number of turn counts. (Value: "TOTAL_TURN_COUNT")
 */
@property(nonatomic, copy, nullable) NSString *countType;

/**
 *  Ratio value of a metric.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ratio;

/**
 *  Ratio-based metric type. Only one of type or count_type is specified in each
 *  Metric.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_Type_AbandonedSessionRate
 *        Percentage of sessions where user hung up. (Value:
 *        "ABANDONED_SESSION_RATE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_Type_CallbackSessionRate
 *        Percentage of sessions with the same user calling back. (Value:
 *        "CALLBACK_SESSION_RATE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_Type_ContainedSessionNoCallbackRate
 *        Percentage of contained sessions without user calling back in 24
 *        hours. (Value: "CONTAINED_SESSION_NO_CALLBACK_RATE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_Type_LiveAgentHandoffRate
 *        Percentage of sessions that were handed to a human agent. (Value:
 *        "LIVE_AGENT_HANDOFF_RATE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_Type_MetricUnspecified
 *        Metric unspecified. (Value: "METRIC_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric_Type_SessionEndRate
 *        Percentage of sessions reached Dialogflow 'END_PAGE' or 'END_SESSION'.
 *        (Value: "SESSION_END_RATE")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Version variant and associated metrics.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultVersionMetrics : GTLRObject

/**
 *  The metrics and corresponding confidence intervals in the inference result.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3ExperimentResultMetric *> *metrics;

/**
 *  Number of sessions that were allocated to this version.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sessionCount;

/**
 *  The name of the flow Version. Format:
 *  `projects//locations//agents//flows//versions/`.
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  The request message for Agents.ExportAgent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ExportAgentRequest : GTLRObject

/**
 *  Optional. The [Google Cloud Storage](https://cloud.google.com/storage/docs/)
 *  URI to export the agent to. The format of this URI must be `gs:///`. If left
 *  unspecified, the serialized agent is returned inline. Dialogflow performs a
 *  write operation for the Cloud Storage object on the caller's behalf, so your
 *  request authentication must have write permissions for the object. For more
 *  information, see [Dialogflow access
 *  control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
 */
@property(nonatomic, copy, nullable) NSString *agentUri;

/**
 *  Optional. The data format of the exported agent. If not specified, `BLOB` is
 *  assumed.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ExportAgentRequest_DataFormat_Blob
 *        Agent content will be exported as raw bytes. (Value: "BLOB")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ExportAgentRequest_DataFormat_DataFormatUnspecified
 *        Unspecified format. (Value: "DATA_FORMAT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *dataFormat;

/**
 *  Optional. Environment name. If not set, draft environment is assumed.
 *  Format: `projects//locations//agents//environments/`.
 */
@property(nonatomic, copy, nullable) NSString *environment;

@end


/**
 *  The response message for Agents.ExportAgent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ExportAgentResponse : GTLRObject

/**
 *  Uncompressed raw byte content for agent.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *agentContent;

/**
 *  The URI to a file containing the exported agent. This field is populated
 *  only if `agent_uri` is specified in ExportAgentRequest.
 */
@property(nonatomic, copy, nullable) NSString *agentUri;

@end


/**
 *  The request message for Flows.ExportFlow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ExportFlowRequest : GTLRObject

/**
 *  Optional. The [Google Cloud Storage](https://cloud.google.com/storage/docs/)
 *  URI to export the flow to. The format of this URI must be `gs:///`. If left
 *  unspecified, the serialized flow is returned inline. Dialogflow performs a
 *  write operation for the Cloud Storage object on the caller's behalf, so your
 *  request authentication must have write permissions for the object. For more
 *  information, see [Dialogflow access
 *  control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
 */
@property(nonatomic, copy, nullable) NSString *flowUri;

/**
 *  Optional. Whether to export flows referenced by the specified flow.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeReferencedFlows;

@end


/**
 *  The response message for Flows.ExportFlow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ExportFlowResponse : GTLRObject

/**
 *  Uncompressed raw byte content for flow.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *flowContent;

/**
 *  The URI to a file containing the exported flow. This field is populated only
 *  if `flow_uri` is specified in ExportFlowRequest.
 */
@property(nonatomic, copy, nullable) NSString *flowUri;

@end


/**
 *  Metadata returned for the TestCases.ExportTestCases long running operation.
 *  This message currently has no fields.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ExportTestCasesMetadata : GTLRObject
@end


/**
 *  The request message for TestCases.ExportTestCases.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ExportTestCasesRequest : GTLRObject

/**
 *  The data format of the exported test cases. If not specified, `BLOB` is
 *  assumed.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ExportTestCasesRequest_DataFormat_Blob
 *        Raw bytes. (Value: "BLOB")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ExportTestCasesRequest_DataFormat_DataFormatUnspecified
 *        Unspecified format. (Value: "DATA_FORMAT_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ExportTestCasesRequest_DataFormat_Json
 *        JSON format. (Value: "JSON")
 */
@property(nonatomic, copy, nullable) NSString *dataFormat;

/**
 *  The filter expression used to filter exported test cases, see [API
 *  Filtering](https://aip.dev/160). The expression is case insensitive and
 *  supports the following syntax: name = [OR name = ] ... For example: * "name
 *  = t1 OR name = t2" matches the test case with the exact resource name "t1"
 *  or "t2".
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to
 *  export the test cases to. The format of this URI must be `gs:///`. If
 *  unspecified, the serialized test cases is returned inline. Dialogflow
 *  performs a write operation for the Cloud Storage object on the caller's
 *  behalf, so your request authentication must have write permissions for the
 *  object. For more information, see [Dialogflow access
 *  control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
 */
@property(nonatomic, copy, nullable) NSString *gcsUri;

@end


/**
 *  The response message for TestCases.ExportTestCases.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ExportTestCasesResponse : GTLRObject

/**
 *  Uncompressed raw byte content for test cases.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The URI to a file containing the exported test cases. This field is
 *  populated only if `gcs_uri` is specified in ExportTestCasesRequest.
 */
@property(nonatomic, copy, nullable) NSString *gcsUri;

@end


/**
 *  Flows represents the conversation flows when you build your chatbot agent. A
 *  flow consists of many pages connected by the transition routes.
 *  Conversations always start with the built-in Start Flow (with an all-0 ID).
 *  Transition routes can direct the conversation session from the current flow
 *  (parent flow) to another flow (sub flow). When the sub flow is finished,
 *  Dialogflow will bring the session back to the parent flow, where the sub
 *  flow is started. Usually, when a transition route is followed by a matched
 *  intent, the intent will be "consumed". This means the intent won't activate
 *  more transition routes. However, when the followed transition route moves
 *  the conversation session into a different flow, the matched intent can be
 *  carried over and to be consumed in the target flow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3Flow : GTLRObject

/**
 *  The description of the flow. The maximum length is 500 characters. If
 *  exceeded, the request is rejected.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Required. The human-readable name of the flow. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  A flow's event handlers serve two purposes: * They are responsible for
 *  handling events (e.g. no match, webhook errors) in the flow. * They are
 *  inherited by every page's event handlers, which can be used to handle common
 *  events regardless of the current page. Event handlers defined in the page
 *  have higher priority than those defined in the flow. Unlike
 *  transition_routes, these handlers are evaluated on a first-match basis. The
 *  first one that matches the event get executed, with the rest being ignored.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3EventHandler *> *eventHandlers;

/**
 *  The unique identifier of the flow. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** NLU related settings of the flow. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings *nluSettings;

/**
 *  A flow's transition route group serve two purposes: * They are responsible
 *  for matching the user's first utterances in the flow. * They are inherited
 *  by every page's transition route groups. Transition route groups defined in
 *  the page have higher priority than those defined in the flow.
 *  Format:`projects//locations//agents//flows//transitionRouteGroups/`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *transitionRouteGroups;

/**
 *  A flow's transition routes serve two purposes: * They are responsible for
 *  matching the user's first utterances in the flow. * They are inherited by
 *  every page's transition routes and can support use cases such as the user
 *  saying "help" or "can I talk to a human?", which can be handled in a common
 *  way regardless of the current page. Transition routes defined in the page
 *  have higher priority than those defined in the flow. TransitionRoutes are
 *  evalauted in the following order: * TransitionRoutes with intent specified.
 *  * TransitionRoutes with only condition specified. TransitionRoutes with
 *  intent specified are inherited by pages in the flow.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRoute *> *transitionRoutes;

@end


/**
 *  The response message for Flows.GetFlowValidationResult.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3FlowValidationResult : GTLRObject

/**
 *  The unique identifier of the flow validation result. Format:
 *  `projects//locations//agents//flows//validationResult`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Last time the flow was validated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** Contains all validation messages. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage *> *validationMessages;

@end


/**
 *  A form is a data model that groups related parameters that can be collected
 *  from the user. The process in which the agent prompts the user and collects
 *  parameter values from the user is called form filling. A form can be added
 *  to a page. When form filling is done, the filled parameters will be written
 *  to the session.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3Form : GTLRObject

/** Parameters to collect from the user. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3FormParameter *> *parameters;

@end


/**
 *  Represents a form parameter.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3FormParameter : GTLRObject

/**
 *  The default value of an optional parameter. If the parameter is required,
 *  the default value will be ignored.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id defaultValue;

/**
 *  Required. The human-readable name of the parameter, unique within the form.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Required. The entity type of the parameter. Format:
 *  `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for
 *  example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or
 *  `projects//locations//agents//entityTypes/` for developer entity types.
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/** Required. Defines fill behavior for the parameter. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3FormParameterFillBehavior *fillBehavior;

/**
 *  Indicates whether the parameter represents a list of values.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isList;

/**
 *  Indicates whether the parameter content should be redacted in log. If
 *  redaction is enabled, the parameter content will be replaced by parameter
 *  name during logging. Note: the parameter content is subject to redaction if
 *  either parameter level redaction or entity type level redaction is enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *redact;

/**
 *  Indicates whether the parameter is required. Optional parameters will not
 *  trigger prompts; however, they are filled if the user specifies them.
 *  Required parameters must be filled before form filling concludes.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *required;

@end


/**
 *  Configuration for how the filling of a parameter should be handled.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3FormParameterFillBehavior : GTLRObject

/**
 *  Required. The fulfillment to provide the initial prompt that the agent can
 *  present to the user in order to fill the parameter.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Fulfillment *initialPromptFulfillment;

/**
 *  The handlers for parameter-level events, used to provide reprompt for the
 *  parameter or transition to a different page/flow. The supported events are:
 *  * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` *
 *  `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` *
 *  `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first
 *  prompt for the parameter. If the user's response does not fill the
 *  parameter, a no-match/no-input event will be triggered, and the fulfillment
 *  associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined)
 *  will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2`
 *  handler (if defined) will respond to the next no-match/no-input event, and
 *  so on. A `sys.no-match-default` or `sys.no-input-default` handler will be
 *  used to handle all following no-match/no-input events after all numbered
 *  no-match/no-input handlers for the parameter are consumed. A
 *  `sys.invalid-parameter` handler can be defined to handle the case where the
 *  parameter values have been `invalidated` by webhook. For example, if the
 *  user's response fill the parameter, however the parameter was invalidated by
 *  webhook, the fulfillment associated with the `sys.invalid-parameter` handler
 *  (if defined) will be called to provide a prompt. If the event handler for
 *  the corresponding event can't be found on the parameter,
 *  `initial_prompt_fulfillment` will be re-prompted.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3EventHandler *> *repromptEventHandlers;

@end


/**
 *  Request of FulfillIntent
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillIntentRequest : GTLRObject

/** The matched intent/event to fulfill. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Match *match;

/**
 *  Must be same as the corresponding MatchIntent request, otherwise the
 *  behavior is undefined.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3MatchIntentRequest *matchIntentRequest;

/** Instructs the speech synthesizer how to generate output audio. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig *outputAudioConfig;

@end


/**
 *  Response of FulfillIntent
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillIntentResponse : GTLRObject

/**
 *  The audio data bytes encoded as specified in the request. Note: The output
 *  audio is generated based on the values of default platform text responses
 *  found in the `query_result.response_messages` field. If multiple default
 *  text responses exist, they will be concatenated when generating audio. If no
 *  default platform text responses exist, the generated audio content will be
 *  empty. In some scenarios, multiple output audio fields may be present in the
 *  response structure. In these cases, only the top-most-level audio output has
 *  content.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *outputAudio;

/** The config used by the speech synthesizer to generate the output audio. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig *outputAudioConfig;

/** The result of the conversational query. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3QueryResult *queryResult;

/**
 *  Output only. The unique identifier of the response. It can be used to locate
 *  a response in the training example set or for reporting issues.
 */
@property(nonatomic, copy, nullable) NSString *responseId;

@end


/**
 *  A fulfillment can do one or more of the following actions at the same time:
 *  * Generate rich message responses. * Set parameter values. * Call the
 *  webhook. Fulfillments can be called at various stages in the Page or Form
 *  lifecycle. For example, when a DetectIntentRequest drives a session to enter
 *  a new page, the page's entry fulfillment can add a static response to the
 *  QueryResult in the returning DetectIntentResponse, call the webhook (for
 *  example, to load user data from a database), or both.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3Fulfillment : GTLRObject

/** Conditional cases for this fulfillment. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillmentConditionalCases *> *conditionalCases;

/** The list of rich message responses to present to the user. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessage *> *messages;

/**
 *  Whether Dialogflow should return currently queued fulfillment response
 *  messages in streaming APIs. If a webhook is specified, it happens before
 *  Dialogflow invokes webhook. Warning: 1) This flag only affects streaming
 *  API. Responses are still queued and returned once in non-streaming API. 2)
 *  The flag can be enabled in any fulfillment but only the first 3 partial
 *  responses will be returned. You may only want to apply it to fulfillments
 *  that have slow webhooks.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnPartialResponses;

/** Set parameter values before executing the webhook. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillmentSetParameterAction *> *setParameterActions;

/**
 *  The value of this field will be populated in the WebhookRequest
 *  `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is
 *  called. The tag is typically used by the webhook service to identify which
 *  fulfillment is being called, but it could be used for other purposes. This
 *  field is required if `webhook` is specified.
 */
@property(nonatomic, copy, nullable) NSString *tag;

/** The webhook to call. Format: `projects//locations//agents//webhooks/`. */
@property(nonatomic, copy, nullable) NSString *webhook;

@end


/**
 *  A list of cascading if-else conditions. Cases are mutually exclusive. The
 *  first one with a matching condition is selected, all the rest ignored.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillmentConditionalCases : GTLRObject

/** A list of cascading if-else conditions. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase *> *cases;

@end


/**
 *  Each case has a Boolean condition. When it is evaluated to be True, the
 *  corresponding messages will be selected and evaluated recursively.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase : GTLRObject

/** A list of case content. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent *> *caseContent;

/**
 *  The condition to activate and select this case. Empty means the condition is
 *  always true. The condition is evaluated against form parameters or session
 *  parameters. See the [conditions
 *  reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
 */
@property(nonatomic, copy, nullable) NSString *condition;

@end


/**
 *  The list of messages or conditional cases to activate for this case.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent : GTLRObject

/** Additional cases to be evaluated. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillmentConditionalCases *additionalCases;

/** Returned message. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessage *message;

@end


/**
 *  Setting a parameter value.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3FulfillmentSetParameterAction : GTLRObject

/** Display name of the parameter. */
@property(nonatomic, copy, nullable) NSString *parameter;

/**
 *  The new value of the parameter. A null value clears the parameter.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id value;

@end


/**
 *  Metadata in google::longrunning::Operation for Knowledge operations.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata : GTLRObject

/**
 *  Required. Output only. The current state of this operation.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata_State_Done
 *        The operation is done, either cancelled or completed. (Value: "DONE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata_State_Pending
 *        The operation has been created. (Value: "PENDING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata_State_Running
 *        The operation is currently running. (Value: "RUNNING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata_State_StateUnspecified
 *        State unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Metadata for ImportDocuments operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ImportDocumentsOperationMetadata : GTLRObject

/** The generic information of the operation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata *genericMetadata;

@end


/**
 *  Response message for Documents.ImportDocuments.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ImportDocumentsResponse : GTLRObject

/** Includes details about skipped documents or any other warnings. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleRpcStatus *> *warnings;

@end


/**
 *  The request message for Flows.ImportFlow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ImportFlowRequest : GTLRObject

/**
 *  Uncompressed raw byte content for flow.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *flowContent;

/**
 *  The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to
 *  import flow from. The format of this URI must be `gs:///`. Dialogflow
 *  performs a read operation for the Cloud Storage object on the caller's
 *  behalf, so your request authentication must have read permissions for the
 *  object. For more information, see [Dialogflow access
 *  control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
 */
@property(nonatomic, copy, nullable) NSString *flowUri;

/**
 *  Flow import mode. If not specified, `KEEP` is assumed.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ImportFlowRequest_ImportOption_Fallback
 *        Fallback to default settings if some settings are not supported in the
 *        agent to import into. E.g. Standard NLU will be used if custom NLU is
 *        not available. (Value: "FALLBACK")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ImportFlowRequest_ImportOption_ImportOptionUnspecified
 *        Unspecified. Treated as `KEEP`. (Value: "IMPORT_OPTION_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ImportFlowRequest_ImportOption_Keep
 *        Always respect settings in exported flow content. It may cause a
 *        import failure if some settings (e.g. custom NLU) are not supported in
 *        the agent to import into. (Value: "KEEP")
 */
@property(nonatomic, copy, nullable) NSString *importOption;

@end


/**
 *  The response message for Flows.ImportFlow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ImportFlowResponse : GTLRObject

/**
 *  The unique identifier of the new flow. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *flow;

@end


/**
 *  Metadata returned for the TestCases.ImportTestCases long running operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ImportTestCasesMetadata : GTLRObject

/** Errors for failed test cases. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseError *> *errors;

@end


/**
 *  The request message for TestCases.ImportTestCases.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ImportTestCasesRequest : GTLRObject

/**
 *  Uncompressed raw byte content for test cases.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to
 *  import test cases from. The format of this URI must be `gs:///`. Dialogflow
 *  performs a read operation for the Cloud Storage object on the caller's
 *  behalf, so your request authentication must have read permissions for the
 *  object. For more information, see [Dialogflow access
 *  control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
 */
@property(nonatomic, copy, nullable) NSString *gcsUri;

@end


/**
 *  The response message for TestCases.ImportTestCases.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ImportTestCasesResponse : GTLRObject

/**
 *  The unique identifiers of the new test cases. Format:
 *  `projects//locations//agents//testCases/`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

@end


/**
 *  Instructs the speech recognizer on how to process the audio content.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig : GTLRObject

/**
 *  Required. Audio encoding of the audio content to process.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingAmr
 *        Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be
 *        8000. (Value: "AUDIO_ENCODING_AMR")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingAmrWb
 *        Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.
 *        (Value: "AUDIO_ENCODING_AMR_WB")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingFlac
 *        [`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless
 *        Audio Codec) is the recommended encoding because it is lossless
 *        (therefore recognition is not compromised) and requires only about
 *        half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports
 *        16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are
 *        supported. (Value: "AUDIO_ENCODING_FLAC")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingLinear16
 *        Uncompressed 16-bit signed little-endian samples (Linear PCM). (Value:
 *        "AUDIO_ENCODING_LINEAR_16")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingMulaw
 *        8-bit samples that compand 14-bit audio samples using G.711
 *        PCMU/mu-law. (Value: "AUDIO_ENCODING_MULAW")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingOggOpus
 *        Opus encoded audio frames in Ogg container
 *        ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must
 *        be 16000. (Value: "AUDIO_ENCODING_OGG_OPUS")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingSpeexWithHeaderByte
 *        Although the use of lossy encodings is not recommended, if a very low
 *        bitrate encoding is required, `OGG_OPUS` is highly preferred over
 *        Speex encoding. The [Speex](https://speex.org/) encoding supported by
 *        Dialogflow API has a header byte in each block, as in MIME type
 *        `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex
 *        encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574).
 *        The stream is a sequence of blocks, one block per RTP packet. Each
 *        block starts with a byte containing the length of the block, in bytes,
 *        followed by one or more frames of Speex data, padded to an integral
 *        number of bytes (octets) as specified in RFC 5574. In other words,
 *        each RTP header is replaced with a single byte containing the block
 *        length. Only Speex wideband is supported. `sample_rate_hertz` must be
 *        16000. (Value: "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_AudioEncoding_AudioEncodingUnspecified
 *        Not specified. (Value: "AUDIO_ENCODING_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *audioEncoding;

/**
 *  Optional. If `true`, Dialogflow returns SpeechWordInfo in
 *  StreamingRecognitionResult with information about the recognized speech
 *  words, e.g. start and end time offsets. If false or unspecified, Speech
 *  doesn't return any word-level information.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableWordInfo;

/**
 *  Optional. Which Speech model to select for the given request. Select the
 *  model best suited to your domain to get best results. If a model is not
 *  explicitly specified, then we auto-select a model based on the parameters in
 *  the InputAudioConfig. If enhanced speech model is enabled for the agent and
 *  an enhanced version of the specified model for the language does not exist,
 *  then the speech is recognized using the standard version of the specified
 *  model. Refer to [Cloud Speech API
 *  documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model)
 *  for more details.
 */
@property(nonatomic, copy, nullable) NSString *model;

/**
 *  Optional. Which variant of the Speech model to use.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_ModelVariant_SpeechModelVariantUnspecified
 *        No model variant specified. In this case Dialogflow defaults to
 *        USE_BEST_AVAILABLE. (Value: "SPEECH_MODEL_VARIANT_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_ModelVariant_UseBestAvailable
 *        Use the best available variant of the Speech model that the caller is
 *        eligible for. Please see the [Dialogflow
 *        docs](https://cloud.google.com/dialogflow/docs/data-logging) for how
 *        to make your project eligible for enhanced models. (Value:
 *        "USE_BEST_AVAILABLE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_ModelVariant_UseEnhanced
 *        Use an enhanced model variant: * If an enhanced variant does not exist
 *        for the given model and request language, Dialogflow falls back to the
 *        standard variant. The [Cloud Speech
 *        documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
 *        describes which models have enhanced variants. * If the API caller
 *        isn't eligible for enhanced models, Dialogflow returns an error.
 *        Please see the [Dialogflow
 *        docs](https://cloud.google.com/dialogflow/docs/data-logging) for how
 *        to make your project eligible. (Value: "USE_ENHANCED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3InputAudioConfig_ModelVariant_UseStandard
 *        Use standard model variant even if an enhanced model is available. See
 *        the [Cloud Speech
 *        documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models)
 *        for details about enhanced models. (Value: "USE_STANDARD")
 */
@property(nonatomic, copy, nullable) NSString *modelVariant;

/**
 *  Optional. A list of strings containing words and phrases that the speech
 *  recognizer should recognize with higher likelihood. See [the Cloud Speech
 *  documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints)
 *  for more details.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *phraseHints;

/**
 *  Sample rate (in Hertz) of the audio content sent in the query. Refer to
 *  [Cloud Speech API
 *  documentation](https://cloud.google.com/speech-to-text/docs/basics) for more
 *  details.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sampleRateHertz;

/**
 *  Optional. If `false` (default), recognition does not cease until the client
 *  closes the stream. If `true`, the recognizer will detect a single spoken
 *  utterance in input audio. Recognition ceases when it detects the audio's
 *  voice has stopped or paused. In this case, once a detected intent is
 *  received, the client should close the stream and start a new request with a
 *  new stream as needed. Note: This setting is relevant only for streaming
 *  methods.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *singleUtterance;

@end


/**
 *  An intent represents a user's intent to interact with a conversational
 *  agent. You can provide information for the Dialogflow API to use to match
 *  user input to an intent by adding training phrases (i.e., examples of user
 *  input) to your intent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3Intent : GTLRObject

/**
 *  Human readable description for better understanding an intent like its
 *  scope, content, result etc. Maximum character limit: 140 characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The human-readable name of the intent, unique within the agent.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Indicates whether this is a fallback intent. Currently only default fallback
 *  intent is allowed in the agent, which is added upon agent creation. Adding
 *  training phrases to fallback intent is useful in the case of requests that
 *  are mistakenly matched, since training phrases assigned to fallback intents
 *  act as negative examples that triggers no-match event.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isFallback;

/**
 *  The key/value metadata to label an intent. Labels can contain lowercase
 *  letters, digits and the symbols '-' and '_'. International characters are
 *  allowed, including letters from unicase alphabets. Keys must start with a
 *  letter. Keys and values can be no longer than 63 characters and no more than
 *  128 bytes. Prefix "sys-" is reserved for Dialogflow defined labels.
 *  Currently allowed Dialogflow defined labels include: * sys-head *
 *  sys-contextual The above labels do not require value. "sys-head" means the
 *  intent is a head intent. "sys.contextual" means the intent is a contextual
 *  intent.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Intent_Labels *labels;

/**
 *  The unique identifier of the intent. Required for the Intents.UpdateIntent
 *  method. Intents.CreateIntent populates the name automatically. Format:
 *  `projects//locations//agents//intents/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The collection of parameters associated with the intent. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3IntentParameter *> *parameters;

/**
 *  The priority of this intent. Higher numbers represent higher priorities. -
 *  If the supplied value is unspecified or 0, the service translates the value
 *  to 500,000, which corresponds to the `Normal` priority in the console. - If
 *  the supplied value is negative, the intent is ignored in runtime detect
 *  intent requests.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priority;

/**
 *  The collection of training phrases the agent is trained on to identify the
 *  intent.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3IntentTrainingPhrase *> *trainingPhrases;

@end


/**
 *  The key/value metadata to label an intent. Labels can contain lowercase
 *  letters, digits and the symbols '-' and '_'. International characters are
 *  allowed, including letters from unicase alphabets. Keys must start with a
 *  letter. Keys and values can be no longer than 63 characters and no more than
 *  128 bytes. Prefix "sys-" is reserved for Dialogflow defined labels.
 *  Currently allowed Dialogflow defined labels include: * sys-head *
 *  sys-contextual The above labels do not require value. "sys-head" means the
 *  intent is a head intent. "sys.contextual" means the intent is a contextual
 *  intent.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3Intent_Labels : GTLRObject
@end


/**
 *  Intent coverage represents the percentage of all possible intents in the
 *  agent that are triggered in any of a parent's test cases.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3IntentCoverage : GTLRObject

/**
 *  The percent of intents in the agent that are covered.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *coverageScore;

/** The list of Intents present in the agent */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3IntentCoverageIntent *> *intents;

@end


/**
 *  The agent's intent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3IntentCoverageIntent : GTLRObject

/**
 *  Whether or not the intent is covered by at least one of the agent's test
 *  cases.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *covered;

/** The intent full resource name */
@property(nonatomic, copy, nullable) NSString *intent;

@end


/**
 *  Represents the intent to trigger programmatically rather than as a result of
 *  natural language processing.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3IntentInput : GTLRObject

/**
 *  Required. The unique identifier of the intent. Format:
 *  `projects//locations//agents//intents/`.
 */
@property(nonatomic, copy, nullable) NSString *intent;

@end


/**
 *  Represents an intent parameter.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3IntentParameter : GTLRObject

/**
 *  Required. The entity type of the parameter. Format:
 *  `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for
 *  example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or
 *  `projects//locations//agents//entityTypes/` for developer entity types.
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/**
 *  Required. The unique identifier of the parameter. This field is used by
 *  training phrases to annotate their parts.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Indicates whether the parameter represents a list of values.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isList;

/**
 *  Indicates whether the parameter content should be redacted in log. If
 *  redaction is enabled, the parameter content will be replaced by parameter
 *  name during logging. Note: the parameter content is subject to redaction if
 *  either parameter level redaction or entity type level redaction is enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *redact;

@end


/**
 *  Represents an example that the agent is trained on to identify the intent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3IntentTrainingPhrase : GTLRObject

/**
 *  Output only. The unique identifier of the training phrase.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Required. The ordered list of training phrase parts. The parts are
 *  concatenated in order to form the training phrase. Note: The API does not
 *  automatically annotate training phrases like the Dialogflow Console does.
 *  Note: Do not forget to include whitespace at part boundaries, so the
 *  training phrase is well formatted when the parts are concatenated. If the
 *  training phrase does not need to be annotated with parameters, you just need
 *  a single part with only the Part.text field set. If you want to annotate the
 *  training phrase, you must create multiple parts, where the fields of each
 *  part are populated in one of two ways: - `Part.text` is set to a part of the
 *  phrase that has no parameters. - `Part.text` is set to a part of the phrase
 *  that you want to annotate, and the `parameter_id` field is set.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3IntentTrainingPhrasePart *> *parts;

/**
 *  Indicates how many times this example was added to the intent.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *repeatCount;

@end


/**
 *  Represents a part of a training phrase.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3IntentTrainingPhrasePart : GTLRObject

/**
 *  The parameter used to annotate this part of the training phrase. This field
 *  is required for annotated parts of the training phrase.
 */
@property(nonatomic, copy, nullable) NSString *parameterId;

/** Required. The text for this part. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  The response message for Agents.ListAgents.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "agents" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListAgentsResponse : GTLRCollectionObject

/**
 *  The list of agents. There will be a maximum number of items returned based
 *  on the page_size field in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3Agent *> *agents;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Changelogs.ListChangelogs.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "changelogs" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListChangelogsResponse : GTLRCollectionObject

/**
 *  The list of changelogs. There will be a maximum number of items returned
 *  based on the page_size field in the request. The changelogs will be ordered
 *  by timestamp.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3Changelog *> *changelogs;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Environments.ListTestCaseResults.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "continuousTestResults" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListContinuousTestResultsResponse : GTLRCollectionObject

/**
 *  The list of continuous test results.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3ContinuousTestResult *> *continuousTestResults;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Deployments.ListDeployments.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "deployments" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListDeploymentsResponse : GTLRCollectionObject

/**
 *  The list of deployments. There will be a maximum number of items returned
 *  based on the page_size field in the request. The list may in some cases be
 *  empty or contain fewer entries than page_size even if this isn't the last
 *  page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3Deployment *> *deployments;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for EntityTypes.ListEntityTypes.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "entityTypes" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListEntityTypesResponse : GTLRCollectionObject

/**
 *  The list of entity types. There will be a maximum number of items returned
 *  based on the page_size field in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3EntityType *> *entityTypes;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Environments.ListEnvironments.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "environments" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListEnvironmentsResponse : GTLRCollectionObject

/**
 *  The list of environments. There will be a maximum number of items returned
 *  based on the page_size field in the request. The list may in some cases be
 *  empty or contain fewer entries than page_size even if this isn't the last
 *  page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3Environment *> *environments;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Experiments.ListExperiments.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "experiments" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListExperimentsResponse : GTLRCollectionObject

/**
 *  The list of experiments. There will be a maximum number of items returned
 *  based on the page_size field in the request. The list may in some cases be
 *  empty or contain fewer entries than page_size even if this isn't the last
 *  page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3Experiment *> *experiments;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Flows.ListFlows.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "flows" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListFlowsResponse : GTLRCollectionObject

/**
 *  The list of flows. There will be a maximum number of items returned based on
 *  the page_size field in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3Flow *> *flows;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Intents.ListIntents.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "intents" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListIntentsResponse : GTLRCollectionObject

/**
 *  The list of intents. There will be a maximum number of items returned based
 *  on the page_size field in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3Intent *> *intents;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Pages.ListPages.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "pages" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListPagesResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of pages. There will be a maximum number of items returned based on
 *  the page_size field in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3Page *> *pages;

@end


/**
 *  The response message for SecuritySettings.ListSecuritySettings.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "securitySettings" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListSecuritySettingsResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of security settings.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings *> *securitySettings;

@end


/**
 *  The response message for SessionEntityTypes.ListSessionEntityTypes.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "sessionEntityTypes" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListSessionEntityTypesResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of session entity types. There will be a maximum number of items
 *  returned based on the page_size field in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType *> *sessionEntityTypes;

@end


/**
 *  The response message for TestCases.ListTestCaseResults.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "testCaseResults" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListTestCaseResultsResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of test case results.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseResult *> *testCaseResults;

@end


/**
 *  The response message for TestCases.ListTestCases.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "testCases" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListTestCasesResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of test cases. There will be a maximum number of items returned
 *  based on the page_size field in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3TestCase *> *testCases;

@end


/**
 *  The response message for TransitionRouteGroups.ListTransitionRouteGroups.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "transitionRouteGroups" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListTransitionRouteGroupsResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of transition route groups. There will be a maximum number of items
 *  returned based on the page_size field in the request. The list may in some
 *  cases be empty or contain fewer entries than page_size even if this isn't
 *  the last page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroup *> *transitionRouteGroups;

@end


/**
 *  The response message for Versions.ListVersions.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "versions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListVersionsResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of versions. There will be a maximum number of items returned based
 *  on the page_size field in the request. The list may in some cases be empty
 *  or contain fewer entries than page_size even if this isn't the last page.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3Version *> *versions;

@end


/**
 *  The response message for Webhooks.ListWebhooks.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "webhooks" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ListWebhooksResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of webhooks. There will be a maximum number of items returned based
 *  on the page_size field in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3Webhook *> *webhooks;

@end


/**
 *  The request message for Versions.LoadVersion.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3LoadVersionRequest : GTLRObject

/**
 *  This field is used to prevent accidental overwrite of other agent resources,
 *  which can potentially impact other flow's behavior. If
 *  `allow_override_agent_resources` is false, conflicted agent-level resources
 *  will not be overridden (i.e. intents, entities, webhooks).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowOverrideAgentResources;

@end


/**
 *  The response message for Environments.LookupEnvironmentHistory.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "environments" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3LookupEnvironmentHistoryResponse : GTLRCollectionObject

/**
 *  Represents a list of snapshots for an environment. Time of the snapshots is
 *  stored in `update_time`.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3Environment *> *environments;

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Represents one match result of MatchIntent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3Match : GTLRObject

/**
 *  The confidence of this match. Values range from 0.0 (completely uncertain)
 *  to 1.0 (completely certain). This value is for informational purpose only
 *  and is only used to help match the best intent within the classification
 *  threshold. This value may change for the same end-user expression at any
 *  time due to a model retraining or change in implementation.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/**
 *  The event that matched the query. Filled for `EVENT`, `NO_MATCH` and
 *  `NO_INPUT` match types.
 */
@property(nonatomic, copy, nullable) NSString *event;

/**
 *  The Intent that matched the query. Some, not all fields are filled in this
 *  message, including but not limited to: `name` and `display_name`. Only
 *  filled for `INTENT` match type.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Intent *intent;

/**
 *  Type of this Match.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Match_MatchType_DirectIntent
 *        The query directly triggered an intent. (Value: "DIRECT_INTENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Match_MatchType_Event The
 *        query directly triggered an event. (Value: "EVENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Match_MatchType_Intent
 *        The query was matched to an intent. (Value: "INTENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Match_MatchType_MatchTypeUnspecified
 *        Not specified. Should never be used. (Value: "MATCH_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Match_MatchType_NoInput
 *        Indicates an empty query. (Value: "NO_INPUT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Match_MatchType_NoMatch
 *        No match was found for the query. (Value: "NO_MATCH")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Match_MatchType_ParameterFilling
 *        The query was used for parameter filling. (Value: "PARAMETER_FILLING")
 */
@property(nonatomic, copy, nullable) NSString *matchType;

/**
 *  The collection of parameters extracted from the query. Depending on your
 *  protocol or client library language, this is a map, associative array,
 *  symbol table, dictionary, or JSON object composed of a collection of
 *  (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter
 *  name * MapValue type: If parameter's entity type is a composite entity then
 *  use map, otherwise, depending on the parameter value type, it could be one
 *  of string, number, boolean, null, list or map. * MapValue value: If
 *  parameter's entity type is a composite entity then use map from composite
 *  entity property names to property values, otherwise, use parameter value.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Match_Parameters *parameters;

/**
 *  Final text input which was matched during MatchIntent. This value can be
 *  different from original input sent in request because of spelling correction
 *  or other processing.
 */
@property(nonatomic, copy, nullable) NSString *resolvedInput;

@end


/**
 *  The collection of parameters extracted from the query. Depending on your
 *  protocol or client library language, this is a map, associative array,
 *  symbol table, dictionary, or JSON object composed of a collection of
 *  (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter
 *  name * MapValue type: If parameter's entity type is a composite entity then
 *  use map, otherwise, depending on the parameter value type, it could be one
 *  of string, number, boolean, null, list or map. * MapValue value: If
 *  parameter's entity type is a composite entity then use map from composite
 *  entity property names to property values, otherwise, use parameter value.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3Match_Parameters : GTLRObject
@end


/**
 *  Request of MatchIntent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3MatchIntentRequest : GTLRObject

/** Required. The input specification. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3QueryInput *queryInput;

/** The parameters of this query. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3QueryParameters *queryParams;

@end


/**
 *  Response of MatchIntent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3MatchIntentResponse : GTLRObject

/**
 *  The current Page. Some, not all fields are filled in this message, including
 *  but not limited to `name` and `display_name`.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Page *currentPage;

/**
 *  Match results, if more than one, ordered descendingly by the confidence we
 *  have that the particular intent matches the query.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3Match *> *matches;

/**
 *  If natural language text was provided as input, this field will contain a
 *  copy of the text.
 */
@property(nonatomic, copy, nullable) NSString *text;

/**
 *  If natural language speech audio was provided as input, this field will
 *  contain the transcript for the audio.
 */
@property(nonatomic, copy, nullable) NSString *transcript;

/**
 *  If an event was provided as input, this field will contain a copy of the
 *  event name.
 */
@property(nonatomic, copy, nullable) NSString *triggerEvent;

/**
 *  If an intent was provided as input, this field will contain a copy of the
 *  intent identifier. Format: `projects//locations//agents//intents/`.
 */
@property(nonatomic, copy, nullable) NSString *triggerIntent;

@end


/**
 *  Settings related to NLU.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings : GTLRObject

/**
 *  To filter out false positive results and still get variety in matched
 *  natural language inputs for your agent, you can tune the machine learning
 *  classification threshold. If the returned score value is less than the
 *  threshold value, then a no-match event will be triggered. The score values
 *  range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to
 *  0.0, the default of 0.3 is used.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *classificationThreshold;

/**
 *  Indicates NLU model training mode.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings_ModelTrainingMode_ModelTrainingModeAutomatic
 *        NLU model training is automatically triggered when a flow gets
 *        modified. User can also manually trigger model training in this mode.
 *        (Value: "MODEL_TRAINING_MODE_AUTOMATIC")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings_ModelTrainingMode_ModelTrainingModeManual
 *        User needs to manually trigger NLU model training. Best for large
 *        flows whose models take long time to train. (Value:
 *        "MODEL_TRAINING_MODE_MANUAL")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings_ModelTrainingMode_ModelTrainingModeUnspecified
 *        Not specified. `MODEL_TRAINING_MODE_AUTOMATIC` will be used. (Value:
 *        "MODEL_TRAINING_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *modelTrainingMode;

/**
 *  Indicates the type of NLU model.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings_ModelType_ModelTypeAdvanced
 *        Use advanced NLU model. (Value: "MODEL_TYPE_ADVANCED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings_ModelType_ModelTypeStandard
 *        Use standard NLU model. (Value: "MODEL_TYPE_STANDARD")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings_ModelType_ModelTypeUnspecified
 *        Not specified. `MODEL_TYPE_STANDARD` will be used. (Value:
 *        "MODEL_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *modelType;

@end


/**
 *  Instructs the speech synthesizer how to generate the output audio content.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig : GTLRObject

/**
 *  Required. Audio encoding of the synthesized audio content.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig_AudioEncoding_OutputAudioEncodingLinear16
 *        Uncompressed 16-bit signed little-endian samples (Linear PCM). Audio
 *        content returned as LINEAR16 also contains a WAV header. (Value:
 *        "OUTPUT_AUDIO_ENCODING_LINEAR_16")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig_AudioEncoding_OutputAudioEncodingMp3
 *        MP3 audio at 32kbps. (Value: "OUTPUT_AUDIO_ENCODING_MP3")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig_AudioEncoding_OutputAudioEncodingMp364Kbps
 *        MP3 audio at 64kbps. (Value: "OUTPUT_AUDIO_ENCODING_MP3_64_KBPS")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig_AudioEncoding_OutputAudioEncodingMulaw
 *        8-bit samples that compand 14-bit audio samples using G.711
 *        PCMU/mu-law. (Value: "OUTPUT_AUDIO_ENCODING_MULAW")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig_AudioEncoding_OutputAudioEncodingOggOpus
 *        Opus encoded audio wrapped in an ogg container. The result will be a
 *        file which can be played natively on Android, and in browsers (at
 *        least Chrome and Firefox). The quality of the encoding is considerably
 *        higher than MP3 while using approximately the same bitrate. (Value:
 *        "OUTPUT_AUDIO_ENCODING_OGG_OPUS")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3OutputAudioConfig_AudioEncoding_OutputAudioEncodingUnspecified
 *        Not specified. (Value: "OUTPUT_AUDIO_ENCODING_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *audioEncoding;

/**
 *  Optional. The synthesis sample rate (in hertz) for this audio. If not
 *  provided, then the synthesizer will use the default sample rate based on the
 *  audio encoding. If this is different from the voice's natural sample rate,
 *  then the synthesizer will honor this request by converting to the desired
 *  sample rate (which might result in worse audio quality).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sampleRateHertz;

/** Optional. Configuration of how speech should be synthesized. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3SynthesizeSpeechConfig *synthesizeSpeechConfig;

@end


/**
 *  A Dialogflow CX conversation (session) can be described and visualized as a
 *  state machine. The states of a CX session are represented by pages. For each
 *  flow, you define many pages, where your combined pages can handle a complete
 *  conversation on the topics the flow is designed for. At any given moment,
 *  exactly one page is the current page, the current page is considered active,
 *  and the flow associated with that page is considered active. Every flow has
 *  a special start page. When a flow initially becomes active, the start page
 *  page becomes the current page. For each conversational turn, the current
 *  page will either stay the same or transition to another page. You configure
 *  each page to collect information from the end-user that is relevant for the
 *  conversational state represented by the page. For more information, see the
 *  [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3Page : GTLRObject

/** Required. The human-readable name of the page, unique within the flow. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** The fulfillment to call when the session is entering the page. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Fulfillment *entryFulfillment;

/**
 *  Handlers associated with the page to handle events such as webhook errors,
 *  no match or no input.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3EventHandler *> *eventHandlers;

/**
 *  The form associated with the page, used for collecting parameters relevant
 *  to the page.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Form *form;

/**
 *  The unique identifier of the page. Required for the Pages.UpdatePage method.
 *  Pages.CreatePage populates the name automatically. Format:
 *  `projects//locations//agents//flows//pages/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Ordered list of `TransitionRouteGroups` associated with the page. Transition
 *  route groups must be unique within a page. * If multiple transition routes
 *  within a page scope refer to the same intent, then the precedence order is:
 *  page's transition route -> page's transition route group -> flow's
 *  transition routes. * If multiple transition route groups within a page
 *  contain the same intent, then the first group in the ordered list takes
 *  precedence.
 *  Format:`projects//locations//agents//flows//transitionRouteGroups/`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *transitionRouteGroups;

/**
 *  A list of transitions for the transition rules of this page. They route the
 *  conversation to another page in the same flow, or another flow. When we are
 *  in a certain page, the TransitionRoutes are evalauted in the following
 *  order: * TransitionRoutes defined in the page with intent specified. *
 *  TransitionRoutes defined in the transition route groups with intent
 *  specified. * TransitionRoutes defined in flow with intent specified. *
 *  TransitionRoutes defined in the transition route groups with intent
 *  specified. * TransitionRoutes defined in the page with only condition
 *  specified. * TransitionRoutes defined in the transition route groups with
 *  only condition specified.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRoute *> *transitionRoutes;

@end


/**
 *  Represents page information communicated to and from the webhook.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3PageInfo : GTLRObject

/**
 *  Always present for WebhookRequest. Ignored for WebhookResponse. The unique
 *  identifier of the current page. Format:
 *  `projects//locations//agents//flows//pages/`.
 */
@property(nonatomic, copy, nullable) NSString *currentPage;

/**
 *  Always present for WebhookRequest. Ignored for WebhookResponse. The display
 *  name of the current page.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional for both WebhookRequest and WebhookResponse. Information about the
 *  form.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3PageInfoFormInfo *formInfo;

@end


/**
 *  Represents form information.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3PageInfoFormInfo : GTLRObject

/**
 *  Optional for both WebhookRequest and WebhookResponse. The parameters
 *  contained in the form. Note that the webhook cannot add or remove any form
 *  parameter.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo *> *parameterInfo;

@end


/**
 *  Represents parameter information.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo : GTLRObject

/**
 *  Always present for WebhookRequest. Required for WebhookResponse. The
 *  human-readable name of the parameter, unique within the form. This field
 *  cannot be modified by the webhook.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the
 *  parameter value was just collected on the last conversation turn.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *justCollected;

/**
 *  Optional for both WebhookRequest and WebhookResponse. Indicates whether the
 *  parameter is required. Optional parameters will not trigger prompts;
 *  however, they are filled if the user specifies them. Required parameters
 *  must be filled before form filling concludes.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *required;

/**
 *  Always present for WebhookRequest. Required for WebhookResponse. The state
 *  of the parameter. This field can be set to INVALID by the webhook to
 *  invalidate the parameter; other values set by the webhook will be ignored.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo_State_Empty
 *        Indicates that the parameter does not have a value. (Value: "EMPTY")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo_State_Filled
 *        Indicates that the parameter has a value. (Value: "FILLED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo_State_Invalid
 *        Indicates that the parameter value is invalid. This field can be used
 *        by the webhook to invalidate the parameter and ask the server to
 *        collect it from the user again. (Value: "INVALID")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo_State_ParameterStateUnspecified
 *        Not specified. This value should be never used. (Value:
 *        "PARAMETER_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Optional for both WebhookRequest and WebhookResponse. The value of the
 *  parameter. This field can be set by the webhook to change the parameter
 *  value.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id value;

@end


/**
 *  Represents the query input. It can contain one of: 1. A conversational query
 *  in the form of text. 2. An intent query that specifies which intent to
 *  trigger. 3. Natural language speech audio to be processed. 4. An event to be
 *  triggered.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3QueryInput : GTLRObject

/** The natural language speech audio to be processed. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3AudioInput *audio;

/** The DTMF event to be handled. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3DtmfInput *dtmf;

/** The event to be triggered. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3EventInput *event;

/** The intent to be triggered. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3IntentInput *intent;

/**
 *  Required. The language of the input. See [Language
 *  Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for
 *  a list of the currently supported language codes. Note that queries in the
 *  same session do not necessarily need to specify the same language.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/** The natural language text to be processed. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3TextInput *text;

@end


/**
 *  Represents the parameters of a conversational query.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3QueryParameters : GTLRObject

/**
 *  Configures whether sentiment analysis should be performed. If not provided,
 *  sentiment analysis is not performed.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *analyzeQueryTextSentiment;

/**
 *  The unique identifier of the page to override the current page in the
 *  session. Format: `projects//locations//agents//flows//pages/`. If
 *  `current_page` is specified, the previous state of the session will be
 *  ignored by Dialogflow, including the previous page and the previous session
 *  parameters. In most cases, current_page and parameters should be configured
 *  together to direct a session to a specific state.
 */
@property(nonatomic, copy, nullable) NSString *currentPage;

/**
 *  Whether to disable webhook calls for this request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableWebhook;

/**
 *  A list of flow versions to override for the request. Format:
 *  `projects//locations//agents//flows//versions/`. If version 1 of flow X is
 *  included in this list, the traffic of flow X will go through version 1
 *  regardless of the version configuration in the environment. Each flow can
 *  have at most one version specified in this list.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *flowVersions;

/** The geo location of this conversational query. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleTypeLatLng *geoLocation;

/**
 *  Additional parameters to be put into session parameters. To remove a
 *  parameter from the session, clients should explicitly set the parameter
 *  value to null. You can reference the session parameters in the agent with
 *  the following format: $session.params.parameter-id. Depending on your
 *  protocol or client library language, this is a map, associative array,
 *  symbol table, dictionary, or JSON object composed of a collection of
 *  (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter
 *  name * MapValue type: If parameter's entity type is a composite entity then
 *  use map, otherwise, depending on the parameter value type, it could be one
 *  of string, number, boolean, null, list or map. * MapValue value: If
 *  parameter's entity type is a composite entity then use map from composite
 *  entity property names to property values, otherwise, use parameter value.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3QueryParameters_Parameters *parameters;

/**
 *  This field can be used to pass custom data into the webhook associated with
 *  the agent. Arbitrary JSON objects are supported. Some integrations that
 *  query a Dialogflow agent may provide additional information in the payload.
 *  In particular, for the Dialogflow Phone Gateway integration, this field has
 *  the form: ``` { "telephony": { "caller_id": "+18558363987" } } ```
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3QueryParameters_Payload *payload;

/**
 *  Additional session entity types to replace or extend developer entity types
 *  with. The entity synonyms apply to all languages and persist for the session
 *  of this query.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType *> *sessionEntityTypes;

/**
 *  The time zone of this conversational query from the [time zone
 *  database](https://www.iana.org/time-zones), e.g., America/New_York,
 *  Europe/Paris. If not provided, the time zone specified in the agent is used.
 */
@property(nonatomic, copy, nullable) NSString *timeZone;

/**
 *  This field can be used to pass HTTP headers for a webhook call. These
 *  headers will be sent to webhook along with the headers that have been
 *  configured through Dialogflow web console. The headers defined within this
 *  field will overwrite the headers configured through Dialogflow console if
 *  there is a conflict. Header names are case-insensitive. Google's specified
 *  headers are not allowed. Including: "Host", "Content-Length", "Connection",
 *  "From", "User-Agent", "Accept-Encoding", "If-Modified-Since",
 *  "If-None-Match", "X-Forwarded-For", etc.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3QueryParameters_WebhookHeaders *webhookHeaders;

@end


/**
 *  Additional parameters to be put into session parameters. To remove a
 *  parameter from the session, clients should explicitly set the parameter
 *  value to null. You can reference the session parameters in the agent with
 *  the following format: $session.params.parameter-id. Depending on your
 *  protocol or client library language, this is a map, associative array,
 *  symbol table, dictionary, or JSON object composed of a collection of
 *  (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter
 *  name * MapValue type: If parameter's entity type is a composite entity then
 *  use map, otherwise, depending on the parameter value type, it could be one
 *  of string, number, boolean, null, list or map. * MapValue value: If
 *  parameter's entity type is a composite entity then use map from composite
 *  entity property names to property values, otherwise, use parameter value.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3QueryParameters_Parameters : GTLRObject
@end


/**
 *  This field can be used to pass custom data into the webhook associated with
 *  the agent. Arbitrary JSON objects are supported. Some integrations that
 *  query a Dialogflow agent may provide additional information in the payload.
 *  In particular, for the Dialogflow Phone Gateway integration, this field has
 *  the form: ``` { "telephony": { "caller_id": "+18558363987" } } ```
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3QueryParameters_Payload : GTLRObject
@end


/**
 *  This field can be used to pass HTTP headers for a webhook call. These
 *  headers will be sent to webhook along with the headers that have been
 *  configured through Dialogflow web console. The headers defined within this
 *  field will overwrite the headers configured through Dialogflow console if
 *  there is a conflict. Header names are case-insensitive. Google's specified
 *  headers are not allowed. Including: "Host", "Content-Length", "Connection",
 *  "From", "User-Agent", "Accept-Encoding", "If-Modified-Since",
 *  "If-None-Match", "X-Forwarded-For", etc.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3QueryParameters_WebhookHeaders : GTLRObject
@end


/**
 *  Represents the result of a conversational query.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3QueryResult : GTLRObject

/**
 *  The current Page. Some, not all fields are filled in this message, including
 *  but not limited to `name` and `display_name`.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Page *currentPage;

/**
 *  The free-form diagnostic info. For example, this field could contain webhook
 *  call latency. The fields of this data can change without notice, so you
 *  should not write code that depends on its structure. One of the fields is
 *  called "Alternative Matched Intents", which may aid with debugging. The
 *  following describes these intent results: - The list is empty if no intent
 *  was matched to end-user input. - Only intents that are referenced in the
 *  currently active flow are included. - The matched intent is included. -
 *  Other intents that could have matched end-user input, but did not match
 *  because they are referenced by intent routes that are out of
 *  [scope](https://cloud.google.com/dialogflow/cx/docs/concept/handler#scope),
 *  are included. - Other intents referenced by intent routes in scope that
 *  matched end-user input, but had a lower confidence score.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3QueryResult_DiagnosticInfo *diagnosticInfo;

/**
 *  If a DTMF was provided as input, this field will contain a copy of the
 *  DTMFInput.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3DtmfInput *dtmf;

/**
 *  The Intent that matched the conversational query. Some, not all fields are
 *  filled in this message, including but not limited to: `name` and
 *  `display_name`. This field is deprecated, please use QueryResult.match
 *  instead.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Intent *intent;

/**
 *  The intent detection confidence. Values range from 0.0 (completely
 *  uncertain) to 1.0 (completely certain). This value is for informational
 *  purpose only and is only used to help match the best intent within the
 *  classification threshold. This value may change for the same end-user
 *  expression at any time due to a model retraining or change in
 *  implementation. This field is deprecated, please use QueryResult.match
 *  instead.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *intentDetectionConfidence;

/**
 *  The language that was triggered during intent detection. See [Language
 *  Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for
 *  a list of the currently supported language codes.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/** Intent match result, could be an intent or an event. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Match *match;

/**
 *  The collected session parameters. Depending on your protocol or client
 *  library language, this is a map, associative array, symbol table,
 *  dictionary, or JSON object composed of a collection of (MapKey, MapValue)
 *  pairs: * MapKey type: string * MapKey value: parameter name * MapValue type:
 *  If parameter's entity type is a composite entity then use map, otherwise,
 *  depending on the parameter value type, it could be one of string, number,
 *  boolean, null, list or map. * MapValue value: If parameter's entity type is
 *  a composite entity then use map from composite entity property names to
 *  property values, otherwise, use parameter value.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3QueryResult_Parameters *parameters;

/**
 *  The list of rich messages returned to the client. Responses vary from simple
 *  text messages to more sophisticated, structured payloads used to drive
 *  complex logic.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessage *> *responseMessages;

/**
 *  The sentiment analyss result, which depends on
 *  `analyze_query_text_sentiment`, specified in the request.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3SentimentAnalysisResult *sentimentAnalysisResult;

/**
 *  If natural language text was provided as input, this field will contain a
 *  copy of the text.
 */
@property(nonatomic, copy, nullable) NSString *text;

/**
 *  If natural language speech audio was provided as input, this field will
 *  contain the transcript for the audio.
 */
@property(nonatomic, copy, nullable) NSString *transcript;

/**
 *  If an event was provided as input, this field will contain the name of the
 *  event.
 */
@property(nonatomic, copy, nullable) NSString *triggerEvent;

/**
 *  If an intent was provided as input, this field will contain a copy of the
 *  intent identifier. Format: `projects//locations//agents//intents/`.
 */
@property(nonatomic, copy, nullable) NSString *triggerIntent;

/**
 *  The list of webhook payload in WebhookResponse.payload, in the order of call
 *  sequence. If some webhook call fails or doesn't return any payload, an empty
 *  `Struct` would be used instead.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3QueryResult_WebhookPayloads_Item *> *webhookPayloads;

/** The list of webhook call status in the order of call sequence. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleRpcStatus *> *webhookStatuses;

@end


/**
 *  The free-form diagnostic info. For example, this field could contain webhook
 *  call latency. The fields of this data can change without notice, so you
 *  should not write code that depends on its structure. One of the fields is
 *  called "Alternative Matched Intents", which may aid with debugging. The
 *  following describes these intent results: - The list is empty if no intent
 *  was matched to end-user input. - Only intents that are referenced in the
 *  currently active flow are included. - The matched intent is included. -
 *  Other intents that could have matched end-user input, but did not match
 *  because they are referenced by intent routes that are out of
 *  [scope](https://cloud.google.com/dialogflow/cx/docs/concept/handler#scope),
 *  are included. - Other intents referenced by intent routes in scope that
 *  matched end-user input, but had a lower confidence score.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3QueryResult_DiagnosticInfo : GTLRObject
@end


/**
 *  The collected session parameters. Depending on your protocol or client
 *  library language, this is a map, associative array, symbol table,
 *  dictionary, or JSON object composed of a collection of (MapKey, MapValue)
 *  pairs: * MapKey type: string * MapKey value: parameter name * MapValue type:
 *  If parameter's entity type is a composite entity then use map, otherwise,
 *  depending on the parameter value type, it could be one of string, number,
 *  boolean, null, list or map. * MapValue value: If parameter's entity type is
 *  a composite entity then use map from composite entity property names to
 *  property values, otherwise, use parameter value.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3QueryResult_Parameters : GTLRObject
@end


/**
 *  GTLRDialogflow_GoogleCloudDialogflowCxV3QueryResult_WebhookPayloads_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3QueryResult_WebhookPayloads_Item : GTLRObject
@end


/**
 *  Metadata for ReloadDocument operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ReloadDocumentOperationMetadata : GTLRObject

/** The generic information of the operation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata *genericMetadata;

@end


/**
 *  Resource name and display name.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ResourceName : GTLRObject

/** Display name. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Name. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Represents a response message that can be returned by a conversational
 *  agent. Response messages are also used for output audio synthesis. The
 *  approach is as follows: * If at least one OutputAudioText response is
 *  present, then all OutputAudioText responses are linearly concatenated, and
 *  the result is used for output audio synthesis. * If the OutputAudioText
 *  responses are a mixture of text and SSML, then the concatenated result is
 *  treated as SSML; otherwise, the result is treated as either text or SSML as
 *  appropriate. The agent designer should ideally use either text or SSML
 *  consistently throughout the bot design. * Otherwise, all Text responses are
 *  linearly concatenated, and the result is used for output audio synthesis.
 *  This approach allows for more sophisticated user experience scenarios, where
 *  the text displayed to the user may differ from what is heard.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessage : GTLRObject

/** Indicates that the conversation succeeded. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess *conversationSuccess;

/**
 *  Output only. A signal that indicates the interaction with the Dialogflow
 *  agent has ended. This message is generated by Dialogflow only when the
 *  conversation reaches `END_SESSION` page. It is not supposed to be defined by
 *  the user. It's guaranteed that there is at most one such message in each
 *  response.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageEndInteraction *endInteraction;

/** Hands off conversation to a human agent. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff *liveAgentHandoff;

/**
 *  Output only. An audio response message composed of both the synthesized
 *  Dialogflow agent responses and responses defined via play_audio. This
 *  message is generated by Dialogflow only and not supposed to be defined by
 *  the user.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageMixedAudio *mixedAudio;

/**
 *  A text or ssml response that is preferentially used for TTS output audio
 *  synthesis, as described in the comment on the ResponseMessage message.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText *outputAudioText;

/** Returns a response containing a custom, platform-specific payload. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessage_Payload *payload;

/**
 *  Signal that the client should play an audio clip hosted at a client-specific
 *  URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow
 *  itself does not try to read or process the URI in any way.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessagePlayAudio *playAudio;

/**
 *  A signal that the client should transfer the phone call connected to this
 *  agent to a third-party endpoint.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall *telephonyTransferCall;

/** Returns a text response. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageText *text;

@end


/**
 *  Returns a response containing a custom, platform-specific payload.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessage_Payload : GTLRObject
@end


/**
 *  Indicates that the conversation succeeded, i.e., the bot handled the issue
 *  that the customer talked to it about. Dialogflow only uses this to determine
 *  which conversations should be counted as successful and doesn't process the
 *  metadata in this message in any way. Note that Dialogflow also considers
 *  conversations that get to the conversation end page as successful even if
 *  they don't return ConversationSuccess. You may set this, for example: * In
 *  the entry_fulfillment of a Page if entering the page indicates that the
 *  conversation succeeded. * In a webhook response when you determine that you
 *  handled the customer issue.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess : GTLRObject

/** Custom metadata. Dialogflow doesn't impose any structure on this. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess_Metadata *metadata;

@end


/**
 *  Custom metadata. Dialogflow doesn't impose any structure on this.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess_Metadata : GTLRObject
@end


/**
 *  Indicates that interaction with the Dialogflow agent has ended. This message
 *  is generated by Dialogflow only and not supposed to be defined by the user.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageEndInteraction : GTLRObject
@end


/**
 *  Indicates that the conversation should be handed off to a live agent.
 *  Dialogflow only uses this to determine which conversations were handed off
 *  to a human agent for measurement purposes. What else to do with this signal
 *  is up to you and your handoff procedures. You may set this, for example: *
 *  In the entry_fulfillment of a Page if entering the page indicates something
 *  went extremely wrong in the conversation. * In a webhook response when you
 *  determine that the customer issue can only be handled by a human.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff : GTLRObject

/**
 *  Custom metadata for your handoff procedure. Dialogflow doesn't impose any
 *  structure on this.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff_Metadata *metadata;

@end


/**
 *  Custom metadata for your handoff procedure. Dialogflow doesn't impose any
 *  structure on this.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff_Metadata : GTLRObject
@end


/**
 *  Represents an audio message that is composed of both segments synthesized
 *  from the Dialogflow agent prompts and ones hosted externally at the
 *  specified URIs. The external URIs are specified via play_audio. This message
 *  is generated by Dialogflow only and not supposed to be defined by the user.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageMixedAudio : GTLRObject

/** Segments this audio response is composed of. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment *> *segments;

@end


/**
 *  Represents one segment of audio.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment : GTLRObject

/**
 *  Output only. Whether the playback of this segment can be interrupted by the
 *  end user's speech and the client should then start the next Dialogflow
 *  request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowPlaybackInterruption;

/**
 *  Raw audio synthesized from the Dialogflow agent's response using the output
 *  config specified in the request.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *audio;

/**
 *  Client-specific URI that points to an audio clip accessible to the client.
 *  Dialogflow does not impose any validation on it.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  A text or ssml response that is preferentially used for TTS output audio
 *  synthesis, as described in the comment on the ResponseMessage message.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText : GTLRObject

/**
 *  Output only. Whether the playback of this message can be interrupted by the
 *  end user's speech and the client can then starts the next Dialogflow
 *  request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowPlaybackInterruption;

/**
 *  The SSML text to be synthesized. For more information, see
 *  [SSML](/speech/text-to-speech/docs/ssml).
 */
@property(nonatomic, copy, nullable) NSString *ssml;

/** The raw text to be synthesized. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Specifies an audio clip to be played by the client as part of the response.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessagePlayAudio : GTLRObject

/**
 *  Output only. Whether the playback of this message can be interrupted by the
 *  end user's speech and the client can then starts the next Dialogflow
 *  request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowPlaybackInterruption;

/**
 *  Required. URI of the audio clip. Dialogflow does not impose any validation
 *  on this value. It is specific to the client that reads it.
 */
@property(nonatomic, copy, nullable) NSString *audioUri;

@end


/**
 *  Represents the signal that telles the client to transfer the phone call
 *  connected to the agent to a third-party endpoint.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall : GTLRObject

/**
 *  Transfer the call to a phone number in [E.164
 *  format](https://en.wikipedia.org/wiki/E.164).
 */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

@end


/**
 *  The text response message.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessageText : GTLRObject

/**
 *  Output only. Whether the playback of this message can be interrupted by the
 *  end user's speech and the client can then starts the next Dialogflow
 *  request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowPlaybackInterruption;

/** Required. A collection of text responses. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *text;

@end


/**
 *  The request message for Agents.RestoreAgent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3RestoreAgentRequest : GTLRObject

/**
 *  Uncompressed raw byte content for agent.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *agentContent;

/**
 *  The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to
 *  restore agent from. The format of this URI must be `gs:///`. Dialogflow
 *  performs a read operation for the Cloud Storage object on the caller's
 *  behalf, so your request authentication must have read permissions for the
 *  object. For more information, see [Dialogflow access
 *  control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
 */
@property(nonatomic, copy, nullable) NSString *agentUri;

/**
 *  Agent restore mode. If not specified, `KEEP` is assumed.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3RestoreAgentRequest_RestoreOption_Fallback
 *        Fallback to default settings if some settings are not supported in the
 *        target agent. (Value: "FALLBACK")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3RestoreAgentRequest_RestoreOption_Keep
 *        Always respect the settings from the exported agent file. It may cause
 *        a restoration failure if some settings (e.g. model type) are not
 *        supported in the target agent. (Value: "KEEP")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3RestoreAgentRequest_RestoreOption_RestoreOptionUnspecified
 *        Unspecified. Treated as KEEP. (Value: "RESTORE_OPTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *restoreOption;

@end


/**
 *  The configuration for auto rollout.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3RolloutConfig : GTLRObject

/**
 *  The conditions that are used to evaluate the failure of a rollout step. If
 *  not specified, no rollout steps will fail. E.g. "containment_rate < 10% OR
 *  average_turn_count < 3". See the [conditions
 *  reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
 */
@property(nonatomic, copy, nullable) NSString *failureCondition;

/**
 *  The conditions that are used to evaluate the success of a rollout step. If
 *  not specified, all rollout steps will proceed to the next one unless failure
 *  conditions are met. E.g. "containment_rate > 60% AND callback_rate < 20%".
 *  See the [conditions
 *  reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
 */
@property(nonatomic, copy, nullable) NSString *rolloutCondition;

/**
 *  Steps to roll out a flow version. Steps should be sorted by percentage in
 *  ascending order.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3RolloutConfigRolloutStep *> *rolloutSteps;

@end


/**
 *  A single rollout step with specified traffic allocation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3RolloutConfigRolloutStep : GTLRObject

/** The name of the rollout step; */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The minimum time that this step should last. Should be longer than 1 hour.
 *  If not set, the default minimum duration for each step will be 1 hour.
 */
@property(nonatomic, strong, nullable) GTLRDuration *minDuration;

/**
 *  The percentage of traffic allocated to the flow version of this rollout
 *  step. (0%, 100%].
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trafficPercent;

@end


/**
 *  State of the auto-rollout process.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3RolloutState : GTLRObject

/** Start time of the current step. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/** Display name of the current auto rollout step. */
@property(nonatomic, copy, nullable) NSString *step;

/**
 *  Index of the current step in the auto rollout steps list.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *stepIndex;

@end


/**
 *  Metadata returned for the Environments.RunContinuousTest long running
 *  operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3RunContinuousTestMetadata : GTLRObject

/** The test errors. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3TestError *> *errors;

@end


/**
 *  The request message for Environments.RunContinuousTest.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3RunContinuousTestRequest : GTLRObject
@end


/**
 *  The response message for Environments.RunContinuousTest.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3RunContinuousTestResponse : GTLRObject

/** The result for a continuous test run. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3ContinuousTestResult *continuousTestResult;

@end


/**
 *  Metadata returned for the TestCases.RunTestCase long running operation. This
 *  message currently has no fields.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3RunTestCaseMetadata : GTLRObject
@end


/**
 *  The request message for TestCases.RunTestCase.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3RunTestCaseRequest : GTLRObject

/**
 *  Optional. Environment name. If not set, draft environment is assumed.
 *  Format: `projects//locations//agents//environments/`.
 */
@property(nonatomic, copy, nullable) NSString *environment;

@end


/**
 *  The response message for TestCases.RunTestCase.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3RunTestCaseResponse : GTLRObject

/** The result. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseResult *result;

@end


/**
 *  Represents the settings related to security issues, such as data redaction
 *  and data retention. It may take hours for updates on the settings to
 *  propagate to all the related components and take effect.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings : GTLRObject

/**
 *  Controls audio export settings for post-conversation analytics when
 *  ingesting audio to conversations via Participants.AnalyzeContent or
 *  Participants.StreamingAnalyzeContent. If retention_strategy is set to
 *  REMOVE_AFTER_CONVERSATION or audio_export_settings.gcs_bucket is empty,
 *  audio export is disabled. If audio export is enabled, audio is recorded and
 *  saved to audio_export_settings.gcs_bucket, subject to retention policy of
 *  audio_export_settings.gcs_bucket. This setting won't effect audio input for
 *  implicit sessions via Sessions.DetectIntent or
 *  Sessions.StreamingDetectIntent.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings *audioExportSettings;

/**
 *  [DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this
 *  template to define de-identification configuration for the content. The `DLP
 *  De-identify Templates Reader` role is needed on the Dialogflow service
 *  identity service account (has the form
 *  `service-PROJECT_NUMBER\@gcp-sa-dialogflow.iam.gserviceaccount.com`) for
 *  your agent's project. If empty, Dialogflow replaces sensitive info with
 *  `[redacted]` text. The template name will have one of the following formats:
 *  `projects//locations//deidentifyTemplates/` OR
 *  `organizations//locations//deidentifyTemplates/` Note: `deidentify_template`
 *  must be located in the same region as the `SecuritySettings`.
 */
@property(nonatomic, copy, nullable) NSString *deidentifyTemplate;

/**
 *  Required. The human-readable name of the security settings, unique within
 *  the location.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Controls conversation exporting settings to Insights after conversation is
 *  completed. If retention_strategy is set to REMOVE_AFTER_CONVERSATION,
 *  Insights export is disabled no matter what you configure here.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings *insightsExportSettings;

/**
 *  [DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this
 *  template to define inspect base settings. The `DLP Inspect Templates Reader`
 *  role is needed on the Dialogflow service identity service account (has the
 *  form `service-PROJECT_NUMBER\@gcp-sa-dialogflow.iam.gserviceaccount.com`)
 *  for your agent's project. If empty, we use the default DLP inspect config.
 *  The template name will have one of the following formats:
 *  `projects//locations//inspectTemplates/` OR
 *  `organizations//locations//inspectTemplates/` Note: `inspect_template` must
 *  be located in the same region as the `SecuritySettings`.
 */
@property(nonatomic, copy, nullable) NSString *inspectTemplate;

/**
 *  Resource name of the settings. Required for the
 *  SecuritySettingsService.UpdateSecuritySettings method.
 *  SecuritySettingsService.CreateSecuritySettings populates the name
 *  automatically. Format: `projects//locations//securitySettings/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** List of types of data to remove when retention settings triggers purge. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *purgeDataTypes;

/**
 *  Defines the data for which Dialogflow applies redaction. Dialogflow does not
 *  redact data that it does not have access to – for example, Cloud logging.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings_RedactionScope_RedactDiskStorage
 *        On data to be written to disk or similar devices that are capable of
 *        holding data even if power is disconnected. This includes data that
 *        are temporarily saved on disk. (Value: "REDACT_DISK_STORAGE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings_RedactionScope_RedactionScopeUnspecified
 *        Don't redact any kind of data. (Value: "REDACTION_SCOPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *redactionScope;

/**
 *  Strategy that defines how we do redaction.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings_RedactionStrategy_RedactionStrategyUnspecified
 *        Do not redact. (Value: "REDACTION_STRATEGY_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettings_RedactionStrategy_RedactWithService
 *        Call redaction service to clean up the data to be persisted. (Value:
 *        "REDACT_WITH_SERVICE")
 */
@property(nonatomic, copy, nullable) NSString *redactionStrategy;

/**
 *  Retains data in interaction logging for the specified number of days. This
 *  does not apply to Cloud logging, which is owned by the user - not
 *  Dialogflow. User must set a value lower than Dialogflow's default 365d TTL
 *  (time to live). Setting a value higher than that has no effect. A missing
 *  value or setting to 0 also means we use Dialogflow's default TTL.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *retentionWindowDays;

@end


/**
 *  Settings for exporting audio.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings : GTLRObject

/** Filename pattern for exported audio. */
@property(nonatomic, copy, nullable) NSString *audioExportPattern;

/**
 *  File format for exported audio file. Currently only in telephony recordings.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings_AudioFormat_AudioFormatUnspecified
 *        Unspecified. Do not use. (Value: "AUDIO_FORMAT_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings_AudioFormat_Mp3
 *        MP3 file format. (Value: "MP3")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings_AudioFormat_Mulaw
 *        G.711 mu-law PCM with 8kHz sample rate. (Value: "MULAW")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings_AudioFormat_Ogg
 *        OGG Vorbis. (Value: "OGG")
 */
@property(nonatomic, copy, nullable) NSString *audioFormat;

/**
 *  Enable audio redaction if it is true.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableAudioRedaction;

/**
 *  Cloud Storage bucket to export audio record to. Setting this field would
 *  grant the Storage Object Creator role to the Dialogflow Service Agent. API
 *  caller that tries to modify this field should have the permission of
 *  storage.buckets.setIamPolicy.
 */
@property(nonatomic, copy, nullable) NSString *gcsBucket;

@end


/**
 *  Settings for exporting conversations to
 *  [Insights](https://cloud.google.com/contact-center/insights/docs).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings : GTLRObject

/**
 *  If enabled, we will automatically exports conversations to Insights and
 *  Insights runs its analyzers.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableInsightsExport;

@end


/**
 *  The result of sentiment analysis. Sentiment analysis inspects user input and
 *  identifies the prevailing subjective opinion, especially to determine a
 *  user's attitude as positive, negative, or neutral.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3SentimentAnalysisResult : GTLRObject

/**
 *  A non-negative number in the [0, +inf) range, which represents the absolute
 *  magnitude of sentiment, regardless of score (positive or negative).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *magnitude;

/**
 *  Sentiment score between -1.0 (negative sentiment) and 1.0 (positive
 *  sentiment).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  Session entity types are referred to as **User** entity types and are
 *  entities that are built for an individual user such as favorites,
 *  preferences, playlists, and so on. You can redefine a session entity type at
 *  the session level to extend or replace a custom entity type at the user
 *  session level (we refer to the entity types defined at the agent level as
 *  "custom entity types"). Note: session entity types apply to all queries,
 *  regardless of the language. For more information about entity types, see the
 *  [Dialogflow
 *  documentation](https://cloud.google.com/dialogflow/docs/entities-overview).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType : GTLRObject

/**
 *  Required. The collection of entities to override or supplement the custom
 *  entity type.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3EntityTypeEntity *> *entities;

/**
 *  Required. Indicates whether the additional data should override or
 *  supplement the custom entity type definition.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType_EntityOverrideMode_EntityOverrideModeOverride
 *        The collection of session entities overrides the collection of
 *        entities in the corresponding custom entity type. (Value:
 *        "ENTITY_OVERRIDE_MODE_OVERRIDE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType_EntityOverrideMode_EntityOverrideModeSupplement
 *        The collection of session entities extends the collection of entities
 *        in the corresponding custom entity type. Note: Even in this override
 *        mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`,
 *        `CreateSessionEntityType` and `UpdateSessionEntityType` only return
 *        the additional entities added in this session entity type. If you want
 *        to get the supplemented list, please call EntityTypes.GetEntityType on
 *        the custom entity type and merge. (Value:
 *        "ENTITY_OVERRIDE_MODE_SUPPLEMENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3SessionEntityType_EntityOverrideMode_EntityOverrideModeUnspecified
 *        Not specified. This value should be never used. (Value:
 *        "ENTITY_OVERRIDE_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *entityOverrideMode;

/**
 *  Required. The unique identifier of the session entity type. Format:
 *  `projects//locations//agents//sessions//entityTypes/` or
 *  `projects//locations//agents//environments//sessions//entityTypes/`. If
 *  `Environment ID` is not specified, we assume default 'draft' environment.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Represents session information communicated to and from the webhook.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3SessionInfo : GTLRObject

/**
 *  Optional for WebhookRequest. Optional for WebhookResponse. All parameters
 *  collected from forms and intents during the session. Parameters can be
 *  created, updated, or removed by the webhook. To remove a parameter from the
 *  session, the webhook should explicitly set the parameter value to null in
 *  WebhookResponse. The map is keyed by parameters' display names.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3SessionInfo_Parameters *parameters;

/**
 *  Always present for WebhookRequest. Ignored for WebhookResponse. The unique
 *  identifier of the session. This field can be used by the webhook to identify
 *  a session. Format: `projects//locations//agents//sessions/` or
 *  `projects//locations//agents//environments//sessions/` if environment is
 *  specified.
 */
@property(nonatomic, copy, nullable) NSString *session;

@end


/**
 *  Optional for WebhookRequest. Optional for WebhookResponse. All parameters
 *  collected from forms and intents during the session. Parameters can be
 *  created, updated, or removed by the webhook. To remove a parameter from the
 *  session, the webhook should explicitly set the parameter value to null in
 *  WebhookResponse. The map is keyed by parameters' display names.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3SessionInfo_Parameters : GTLRObject
@end


/**
 *  Settings related to speech recognition.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3SpeechToTextSettings : GTLRObject

/**
 *  Whether to use speech adaptation for speech recognition.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableSpeechAdaptation;

@end


/**
 *  The request message for Experiments.StartExperiment.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3StartExperimentRequest : GTLRObject
@end


/**
 *  The request message for Experiments.StopExperiment.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3StopExperimentRequest : GTLRObject
@end


/**
 *  Configuration of how speech should be synthesized.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3SynthesizeSpeechConfig : GTLRObject

/**
 *  Optional. An identifier which selects 'audio effects' profiles that are
 *  applied on (post synthesized) text to speech. Effects are applied on top of
 *  each other in the order they are given.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *effectsProfileId;

/**
 *  Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20
 *  semitones from the original pitch. -20 means decrease 20 semitones from the
 *  original pitch.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pitch;

/**
 *  Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal
 *  native speed supported by the specific voice. 2.0 is twice as fast, and 0.5
 *  is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other
 *  values < 0.25 or > 4.0 will return an error.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *speakingRate;

/** Optional. The desired voice of the synthesized audio. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3VoiceSelectionParams *voice;

/**
 *  Optional. Volume gain (in dB) of the normal native volume supported by the
 *  specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of
 *  0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB)
 *  will play at approximately half the amplitude of the normal native signal
 *  amplitude. A value of +6.0 (dB) will play at approximately twice the
 *  amplitude of the normal native signal amplitude. We strongly recommend not
 *  to exceed +10 (dB) as there's usually no effective increase in loudness for
 *  any value greater than that.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *volumeGainDb;

@end


/**
 *  Represents a test case.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TestCase : GTLRObject

/** Output only. When the test was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *creationTime;

/**
 *  Required. The human-readable name of the test case, unique within the agent.
 *  Limit of 200 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** The latest test result. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseResult *lastTestResult;

/**
 *  The unique identifier of the test case. TestCases.CreateTestCase will
 *  populate the name automatically. Otherwise use format:
 *  `projects//locations//agents/ /testCases/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Additional freeform notes about the test case. Limit of 400 characters. */
@property(nonatomic, copy, nullable) NSString *notes;

/**
 *  Tags are short descriptions that users may apply to test cases for
 *  organizational and filtering purposes. Each tag should start with "#" and
 *  has a limit of 30 characters.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tags;

/**
 *  The conversation turns uttered when the test case was created, in
 *  chronological order. These include the canonical set of agent utterances
 *  that should occur when the agent is working properly.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurn *> *testCaseConversationTurns;

/** Config for the test case. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3TestConfig *testConfig;

@end


/**
 *  Error info for importing a test.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseError : GTLRObject

/** The status associated with the test case. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleRpcStatus *status;

/** The test case. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3TestCase *testCase;

@end


/**
 *  Represents a result from running a test case in an agent environment.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseResult : GTLRObject

/**
 *  The conversation turns uttered during the test case replay in chronological
 *  order.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3ConversationTurn *> *conversationTurns;

/**
 *  Environment where the test was run. If not set, it indicates the draft
 *  environment.
 */
@property(nonatomic, copy, nullable) NSString *environment;

/**
 *  The resource name for the test case result. Format:
 *  `projects//locations//agents//testCases/ /results/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Whether the test case passed in the agent environment.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseResult_TestResult_Failed
 *        The test did not pass. (Value: "FAILED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseResult_TestResult_Passed
 *        The test passed. (Value: "PASSED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3TestCaseResult_TestResult_TestResultUnspecified
 *        Not specified. Should never be used. (Value:
 *        "TEST_RESULT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *testResult;

/** The time that the test was run. */
@property(nonatomic, strong, nullable) GTLRDateTime *testTime;

@end


/**
 *  Represents configurations for a test case.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TestConfig : GTLRObject

/**
 *  Flow name to start the test case with. Format:
 *  `projects//locations//agents//flows/`. Only one of `flow` and `page` should
 *  be set to indicate the starting point of the test case. If both are set,
 *  `page` takes precedence over `flow`. If neither is set, the test case will
 *  start with start page on the default start flow.
 */
@property(nonatomic, copy, nullable) NSString *flow;

/**
 *  The page to start the test case with. Format:
 *  `projects//locations//agents//flows//pages/`. Only one of `flow` and `page`
 *  should be set to indicate the starting point of the test case. If both are
 *  set, `page` takes precedence over `flow`. If neither is set, the test case
 *  will start with start page on the default start flow.
 */
@property(nonatomic, copy, nullable) NSString *page;

/** Session parameters to be compared when calculating differences. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *trackingParameters;

@end


/**
 *  Error info for running a test.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TestError : GTLRObject

/** The status associated with the test. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleRpcStatus *status;

/** The test case resource name. */
@property(nonatomic, copy, nullable) NSString *testCase;

/** The timestamp when the test was completed. */
@property(nonatomic, strong, nullable) GTLRDateTime *testTime;

@end


/**
 *  The description of differences between original and replayed agent output.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TestRunDifference : GTLRObject

/**
 *  A description of the diff, showing the actual output vs expected output.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The type of diff.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3TestRunDifference_Type_DiffTypeUnspecified
 *        Should never be used. (Value: "DIFF_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3TestRunDifference_Type_Intent
 *        The intent. (Value: "INTENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3TestRunDifference_Type_Page
 *        The page. (Value: "PAGE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3TestRunDifference_Type_Parameters
 *        The parameters. (Value: "PARAMETERS")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3TestRunDifference_Type_Utterance
 *        The message utterance. (Value: "UTTERANCE")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents the natural language text to be processed.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TextInput : GTLRObject

/**
 *  Required. The UTF-8 encoded natural language text to be processed. Text
 *  length must not exceed 256 characters.
 */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  The request message for Flows.TrainFlow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TrainFlowRequest : GTLRObject
@end


/**
 *  Transition coverage represents the percentage of all possible page
 *  transitions (page-level transition routes and event handlers, excluding
 *  transition route groups) present within any of a parent's test cases.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionCoverage : GTLRObject

/**
 *  The percent of transitions in the agent that are covered.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *coverageScore;

/** The list of Transitions present in the agent. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionCoverageTransition *> *transitions;

@end


/**
 *  A transition in a page.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionCoverageTransition : GTLRObject

/**
 *  Whether or not the transition is covered by at least one of the agent's test
 *  cases.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *covered;

/** Event handler. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3EventHandler *eventHandler;

/**
 *  The index of a transition in the transition list. Starting from 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *index;

/** The start node of a transition. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode *source;

/** The end node of a transition. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode *target;

/** Intent route or condition route. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRoute *transitionRoute;

@end


/**
 *  The source or target of a transition.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode : GTLRObject

/**
 *  Indicates a transition to a Flow. Only some fields such as name and
 *  displayname will be set.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Flow *flow;

/**
 *  Indicates a transition to a Page. Only some fields such as name and
 *  displayname will be set.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Page *page;

@end


/**
 *  A transition route specifies a intent that can be matched and/or a data
 *  condition that can be evaluated during a session. When a specified
 *  transition is matched, the following actions are taken in order: * If there
 *  is a `trigger_fulfillment` associated with the transition, it will be
 *  called. * If there is a `target_page` associated with the transition, the
 *  session will transition into the specified page. * If there is a
 *  `target_flow` associated with the transition, the session will transition
 *  into the specified flow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRoute : GTLRObject

/**
 *  The condition to evaluate against form parameters or session parameters. See
 *  the [conditions
 *  reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
 *  At least one of `intent` or `condition` must be specified. When both
 *  `intent` and `condition` are specified, the transition can only happen when
 *  both are fulfilled.
 */
@property(nonatomic, copy, nullable) NSString *condition;

/**
 *  The unique identifier of an Intent. Format:
 *  `projects//locations//agents//intents/`. Indicates that the transition can
 *  only happen when the given intent is matched. At least one of `intent` or
 *  `condition` must be specified. When both `intent` and `condition` are
 *  specified, the transition can only happen when both are fulfilled.
 */
@property(nonatomic, copy, nullable) NSString *intent;

/** Output only. The unique identifier of this transition route. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The target flow to transition to. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *targetFlow;

/**
 *  The target page to transition to. Format:
 *  `projects//locations//agents//flows//pages/`.
 */
@property(nonatomic, copy, nullable) NSString *targetPage;

/**
 *  The fulfillment to call when the condition is satisfied. At least one of
 *  `trigger_fulfillment` and `target` must be specified. When both are defined,
 *  `trigger_fulfillment` is executed first.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3Fulfillment *triggerFulfillment;

@end


/**
 *  An TransitionRouteGroup represents a group of `TransitionRoutes` to be used
 *  by a Page.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroup : GTLRObject

/**
 *  Required. The human-readable name of the transition route group, unique
 *  within the flow. The display name can be no longer than 30 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The unique identifier of the transition route group.
 *  TransitionRouteGroups.CreateTransitionRouteGroup populates the name
 *  automatically. Format:
 *  `projects//locations//agents//flows//transitionRouteGroups/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Transition routes associated with the TransitionRouteGroup. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRoute *> *transitionRoutes;

@end


/**
 *  Transition route group coverage represents the percentage of all possible
 *  transition routes present within any of a parent's test cases. The results
 *  are grouped by the transition route group.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroupCoverage : GTLRObject

/** Transition route group coverages. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverage *> *coverages;

/**
 *  The percent of transition routes in all the transition route groups that are
 *  covered.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *coverageScore;

@end


/**
 *  Coverage result message for one transition route group.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverage : GTLRObject

/**
 *  The percent of transition routes in the transition route group that are
 *  covered.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *coverageScore;

/** Transition route group metadata. Only name and displayName will be set. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroup *routeGroup;

/**
 *  The list of transition routes and coverage in the transition route group.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverageTransition *> *transitions;

@end


/**
 *  A transition coverage in a transition route group.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRouteGroupCoverageCoverageTransition : GTLRObject

/**
 *  Whether or not the transition route is covered by at least one of the
 *  agent's test cases.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *covered;

/** Intent route or condition route. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3TransitionRoute *transitionRoute;

@end


/**
 *  Metadata for UpdateDocument operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3UpdateDocumentOperationMetadata : GTLRObject

/** The generic information of the operation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata *genericMetadata;

@end


/**
 *  The request message for Agents.ValidateAgent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ValidateAgentRequest : GTLRObject

/** If not specified, the agent's default language is used. */
@property(nonatomic, copy, nullable) NSString *languageCode;

@end


/**
 *  The request message for Flows.ValidateFlow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ValidateFlowRequest : GTLRObject

/** If not specified, the agent's default language is used. */
@property(nonatomic, copy, nullable) NSString *languageCode;

@end


/**
 *  Agent/flow validation message.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage : GTLRObject

/** The message detail. */
@property(nonatomic, copy, nullable) NSString *detail;

/** The resource names of the resources where the message is found. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3ResourceName *> *resourceNames;

/** The names of the resources where the message is found. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resources;

/**
 *  The type of the resources where the message is found.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_Agent
 *        Agent. (Value: "AGENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_EntityType
 *        Entity type. (Value: "ENTITY_TYPE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_EntityTypes
 *        Multiple entity types. (Value: "ENTITY_TYPES")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_Flow
 *        Flow. (Value: "FLOW")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_Intent
 *        Intent. (Value: "INTENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_IntentParameter
 *        Intent parameter. (Value: "INTENT_PARAMETER")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_Intents
 *        Multiple intents. (Value: "INTENTS")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_IntentTrainingPhrase
 *        Intent training phrase. (Value: "INTENT_TRAINING_PHRASE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_IntentTrainingPhrases
 *        Multiple training phrases. (Value: "INTENT_TRAINING_PHRASES")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_Page
 *        Page. (Value: "PAGE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_Pages
 *        Multiple pages. (Value: "PAGES")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_ResourceTypeUnspecified
 *        Unspecified. (Value: "RESOURCE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_TransitionRouteGroup
 *        Transition route group. (Value: "TRANSITION_ROUTE_GROUP")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_ResourceType_Webhook
 *        Webhook. (Value: "WEBHOOK")
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

/**
 *  Indicates the severity of the message.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_Severity_Error
 *        The agent may experience failures. (Value: "ERROR")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_Severity_Info
 *        The agent doesn't follow Dialogflow best practices. (Value: "INFO")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_Severity_SeverityUnspecified
 *        Unspecified. (Value: "SEVERITY_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3ValidationMessage_Severity_Warning
 *        The agent may not behave as expected. (Value: "WARNING")
 */
@property(nonatomic, copy, nullable) NSString *severity;

@end


/**
 *  The history of variants update.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3VariantsHistory : GTLRObject

/** Update time of the variants. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/** The flow versions as the variants. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3VersionVariants *versionVariants;

@end


/**
 *  Represents a version of a flow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3Version : GTLRObject

/** Output only. Create time of the version. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  The description of the version. The maximum length is 500 characters. If
 *  exceeded, the request is rejected.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Required. The human-readable name of the version. Limit of 64 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Format: projects//locations//agents//flows//versions/. Version ID is a
 *  self-increasing number generated by Dialogflow upon version creation.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The NLU settings of the flow at version creation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3NluSettings *nluSettings;

/**
 *  Output only. The state of this version. This field is read-only and cannot
 *  be set by create and update methods.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Version_State_Failed
 *        Version training failed. (Value: "FAILED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Version_State_Running
 *        Version is not ready to serve (e.g. training is running). (Value:
 *        "RUNNING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Version_State_StateUnspecified
 *        Not specified. This value is not used. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3Version_State_Succeeded
 *        Training has succeeded and this version is ready to serve. (Value:
 *        "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  A list of flow version variants.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3VersionVariants : GTLRObject

/** A list of flow version variants. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3VersionVariantsVariant *> *variants;

@end


/**
 *  A single flow version with specified traffic allocation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3VersionVariantsVariant : GTLRObject

/**
 *  Whether the variant is for the control group.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isControlGroup;

/**
 *  Percentage of the traffic which should be routed to this version of flow.
 *  Traffic allocation for a single flow must sum up to 1.0.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *trafficAllocation;

/**
 *  The name of the flow version. Format:
 *  `projects//locations//agents//flows//versions/`.
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Description of which voice to use for speech synthesis.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3VoiceSelectionParams : GTLRObject

/**
 *  Optional. The name of the voice. If not set, the service will choose a voice
 *  based on the other parameters such as language_code and ssml_gender. For the
 *  list of available voices, please refer to [Supported voices and
 *  languages](https://cloud.google.com/text-to-speech/docs/voices).
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The preferred gender of the voice. If not set, the service will
 *  choose a voice based on the other parameters such as language_code and name.
 *  Note that this is only a preference, not requirement. If a voice of the
 *  appropriate gender is not available, the synthesizer substitutes a voice
 *  with a different gender rather than failing the request.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3VoiceSelectionParams_SsmlGender_SsmlVoiceGenderFemale
 *        A female voice. (Value: "SSML_VOICE_GENDER_FEMALE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3VoiceSelectionParams_SsmlGender_SsmlVoiceGenderMale
 *        A male voice. (Value: "SSML_VOICE_GENDER_MALE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3VoiceSelectionParams_SsmlGender_SsmlVoiceGenderNeutral
 *        A gender-neutral voice. (Value: "SSML_VOICE_GENDER_NEUTRAL")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3VoiceSelectionParams_SsmlGender_SsmlVoiceGenderUnspecified
 *        An unspecified gender, which means that the client doesn't care which
 *        gender the selected voice will have. (Value:
 *        "SSML_VOICE_GENDER_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *ssmlGender;

@end


/**
 *  Webhooks host the developer's business logic. During a session, webhooks
 *  allow the developer to use the data extracted by Dialogflow's natural
 *  language processing to generate dynamic responses, validate collected data,
 *  or trigger actions on the backend.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3Webhook : GTLRObject

/**
 *  Indicates whether the webhook is disabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/**
 *  Required. The human-readable name of the webhook, unique within the agent.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Configuration for a generic web service. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookGenericWebService *genericWebService;

/**
 *  The unique identifier of the webhook. Required for the
 *  Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name
 *  automatically. Format: `projects//locations//agents//webhooks/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Configuration for a [Service
 *  Directory](https://cloud.google.com/service-directory) service.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig *serviceDirectory;

/**
 *  Webhook execution timeout. Execution is considered failed if Dialogflow
 *  doesn't receive a response from webhook at the end of the timeout period.
 *  Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
 */
@property(nonatomic, strong, nullable) GTLRDuration *timeout;

@end


/**
 *  Represents configuration for a generic web service.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookGenericWebService : GTLRObject

/**
 *  Optional. Specifies a list of allowed custom CA certificates (in DER format)
 *  for HTTPS verification. This overrides the default SSL trust store. If this
 *  is empty or unspecified, Dialogflow will use Google's default trust store to
 *  verify certificates. N.B. Make sure the HTTPS server certificates are signed
 *  with "subject alt name". For instance a certificate can be self-signed using
 *  the following command, ``` openssl x509 -req -days 200 -in example.com.csr
 *  \\ -signkey example.com.key \\ -out example.com.crt \\ -extfile <(printf
 *  "\\nsubjectAltName='DNS:www.example.com'") ```
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowedCaCerts;

/** The password for HTTP Basic authentication. */
@property(nonatomic, copy, nullable) NSString *password;

/** The HTTP request headers to send together with webhook requests. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookGenericWebService_RequestHeaders *requestHeaders;

/**
 *  Required. The webhook URI for receiving POST requests. It must use https
 *  protocol.
 */
@property(nonatomic, copy, nullable) NSString *uri;

/** The user name for HTTP Basic authentication. */
@property(nonatomic, copy, nullable) NSString *username;

@end


/**
 *  The HTTP request headers to send together with webhook requests.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookGenericWebService_RequestHeaders : GTLRObject
@end


/**
 *  The request message for a webhook call. The request is sent as a JSON object
 *  and the field names will be presented in camel cases. You may see
 *  undocumented fields in an actual request. These fields are used internally
 *  by Dialogflow and should be ignored.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequest : GTLRObject

/**
 *  Always present. The unique identifier of the DetectIntentResponse that will
 *  be returned to the API caller.
 */
@property(nonatomic, copy, nullable) NSString *detectIntentResponseId;

/**
 *  Always present. Information about the fulfillment that triggered this
 *  webhook call.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo *fulfillmentInfo;

/** Information about the last matched intent. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequestIntentInfo *intentInfo;

/** The language code specified in the original request. */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The list of rich message responses to present to the user. Webhook can
 *  choose to append or replace this list in
 *  WebhookResponse.fulfillment_response;
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessage *> *messages;

/** Information about page status. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3PageInfo *pageInfo;

/** Custom data set in QueryParameters.payload. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequest_Payload *payload;

/**
 *  The sentiment analysis result of the current user request. The field is
 *  filled when sentiment analysis is configured to be enabled for the request.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult *sentimentAnalysisResult;

/** Information about session status. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3SessionInfo *sessionInfo;

/**
 *  If natural language text was provided as input, this field will contain a
 *  copy of the text.
 */
@property(nonatomic, copy, nullable) NSString *text;

/**
 *  If natural language speech audio was provided as input, this field will
 *  contain the transcript for the audio.
 */
@property(nonatomic, copy, nullable) NSString *transcript;

/**
 *  If an event was provided as input, this field will contain the name of the
 *  event.
 */
@property(nonatomic, copy, nullable) NSString *triggerEvent;

/**
 *  If an intent was provided as input, this field will contain a copy of the
 *  intent identifier. Format: `projects//locations//agents//intents/`.
 */
@property(nonatomic, copy, nullable) NSString *triggerIntent;

@end


/**
 *  Custom data set in QueryParameters.payload.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequest_Payload : GTLRObject
@end


/**
 *  Represents fulfillment information communicated to the webhook.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo : GTLRObject

/**
 *  Always present. The value of the Fulfillment.tag field will be populated in
 *  this field by Dialogflow when the associated webhook is called. The tag is
 *  typically used by the webhook service to identify which fulfillment is being
 *  called, but it could be used for other purposes.
 */
@property(nonatomic, copy, nullable) NSString *tag;

@end


/**
 *  Represents intent information communicated to the webhook.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequestIntentInfo : GTLRObject

/**
 *  The confidence of the matched intent. Values range from 0.0 (completely
 *  uncertain) to 1.0 (completely certain).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** Always present. The display name of the last matched intent. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Always present. The unique identifier of the last matched intent. Format:
 *  `projects//locations//agents//intents/`.
 */
@property(nonatomic, copy, nullable) NSString *lastMatchedIntent;

/**
 *  Parameters identified as a result of intent matching. This is a map of the
 *  name of the identified parameter to the value of the parameter identified
 *  from the user's utterance. All parameters defined in the matched intent that
 *  are identified will be surfaced here.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequestIntentInfo_Parameters *parameters;

@end


/**
 *  Parameters identified as a result of intent matching. This is a map of the
 *  name of the identified parameter to the value of the parameter identified
 *  from the user's utterance. All parameters defined in the matched intent that
 *  are identified will be surfaced here.
 *
 *  @note This class is documented as having more properties of
 *        GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue.
 *        Use @c -additionalJSONKeys and @c -additionalPropertyForName: to get
 *        the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequestIntentInfo_Parameters : GTLRObject
@end


/**
 *  Represents a value for an intent parameter.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue : GTLRObject

/** Always present. Original text value extracted from user utterance. */
@property(nonatomic, copy, nullable) NSString *originalValue;

/**
 *  Always present. Structured value for the parameter extracted from user
 *  utterance.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id resolvedValue;

@end


/**
 *  Represents the result of sentiment analysis.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult : GTLRObject

/**
 *  A non-negative number in the [0, +inf) range, which represents the absolute
 *  magnitude of sentiment, regardless of score (positive or negative).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *magnitude;

/**
 *  Sentiment score between -1.0 (negative sentiment) and 1.0 (positive
 *  sentiment).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  The response message for a webhook call.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookResponse : GTLRObject

/**
 *  The fulfillment response to send to the user. This field can be omitted by
 *  the webhook if it does not intend to send any response to the user.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse *fulfillmentResponse;

/**
 *  Information about page status. This field can be omitted by the webhook if
 *  it does not intend to modify page status.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3PageInfo *pageInfo;

/** Value to append directly to QueryResult.webhook_payloads. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookResponse_Payload *payload;

/**
 *  Information about session status. This field can be omitted by the webhook
 *  if it does not intend to modify session status.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3SessionInfo *sessionInfo;

/**
 *  The target flow to transition to. Format:
 *  `projects//locations//agents//flows/`.
 */
@property(nonatomic, copy, nullable) NSString *targetFlow;

/**
 *  The target page to transition to. Format:
 *  `projects//locations//agents//flows//pages/`.
 */
@property(nonatomic, copy, nullable) NSString *targetPage;

@end


/**
 *  Value to append directly to QueryResult.webhook_payloads.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookResponse_Payload : GTLRObject
@end


/**
 *  Represents a fulfillment response to the user.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse : GTLRObject

/**
 *  Merge behavior for `messages`.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse_MergeBehavior_Append
 *        `messages` will be appended to the list of messages waiting to be sent
 *        to the user. (Value: "APPEND")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse_MergeBehavior_MergeBehaviorUnspecified
 *        Not specified. `APPEND` will be used. (Value:
 *        "MERGE_BEHAVIOR_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse_MergeBehavior_Replace
 *        `messages` will replace the list of messages waiting to be sent to the
 *        user. (Value: "REPLACE")
 */
@property(nonatomic, copy, nullable) NSString *mergeBehavior;

/** The list of rich message responses to present to the user. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowCxV3ResponseMessage *> *messages;

@end


/**
 *  Represents configuration for a [Service
 *  Directory](https://cloud.google.com/service-directory) service.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig : GTLRObject

/** Generic Service configuration of this webhook. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowCxV3WebhookGenericWebService *genericWebService;

/**
 *  Required. The name of [Service
 *  Directory](https://cloud.google.com/service-directory) service. Format:
 *  `projects//locations//namespaces//services/`. `Location ID` of the service
 *  directory must be the same as the location of the agent.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Represents a part of a message possibly annotated with an entity. The part
 *  can be an entity or purely a part of the message between two entities or
 *  message start/end.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2AnnotatedMessagePart : GTLRObject

/**
 *  The [Dialogflow system entity
 *  type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of
 *  this message part. If this is empty, Dialogflow could not annotate the
 *  phrase part with a system entity.
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/**
 *  The [Dialogflow system entity formatted value
 *  ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of
 *  this message part. For example for a system entity of type
 *  `\@sys.unit-currency`, this may contain: { "amount": 5, "currency": "USD" }
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id formattedValue;

/** A part of a message possibly annotated with an entity. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Represents article answer.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2ArticleAnswer : GTLRObject

/**
 *  The name of answer record, in the format of
 *  "projects//locations//answerRecords/"
 */
@property(nonatomic, copy, nullable) NSString *answerRecord;

/**
 *  Article match confidence. The system's confidence score that this article is
 *  a good match for this conversation, as a value from 0.0 (completely
 *  uncertain) to 1.0 (completely certain).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/**
 *  A map that contains metadata about the answer and the document from which it
 *  originates.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2ArticleAnswer_Metadata *metadata;

/** Article snippets. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *snippets;

/** The article title. */
@property(nonatomic, copy, nullable) NSString *title;

/** The article URI. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  A map that contains metadata about the answer and the document from which it
 *  originates.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2ArticleAnswer_Metadata : GTLRObject
@end


/**
 *  Metadata for article suggestion models.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2ArticleSuggestionModelMetadata : GTLRObject

/**
 *  Optional. Type of the article suggestion model. If not provided, model_type
 *  is used.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ArticleSuggestionModelMetadata_TrainingModelType_ModelTypeUnspecified
 *        ModelType unspecified. (Value: "MODEL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ArticleSuggestionModelMetadata_TrainingModelType_SmartReplyBertModel
 *        ModelType smart reply bert model. (Value: "SMART_REPLY_BERT_MODEL")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ArticleSuggestionModelMetadata_TrainingModelType_SmartReplyDualEncoderModel
 *        ModelType smart reply dual encoder model. (Value:
 *        "SMART_REPLY_DUAL_ENCODER_MODEL")
 */
@property(nonatomic, copy, nullable) NSString *trainingModelType;

@end


/**
 *  The response message for EntityTypes.BatchUpdateEntityTypes.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse : GTLRObject

/** The collection of updated or created entity types. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2EntityType *> *entityTypes;

@end


/**
 *  The response message for Intents.BatchUpdateIntents.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2BatchUpdateIntentsResponse : GTLRObject

/** The collection of updated or created intents. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2Intent *> *intents;

@end


/**
 *  Represents a part of a message possibly annotated with an entity. The part
 *  can be an entity or purely a part of the message between two entities or
 *  message start/end.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1AnnotatedMessagePart : GTLRObject

/**
 *  Optional. The [Dialogflow system entity
 *  type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of
 *  this message part. If this is empty, Dialogflow could not annotate the
 *  phrase part with a system entity.
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/**
 *  Optional. The [Dialogflow system entity formatted value
 *  ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of
 *  this message part. For example for a system entity of type
 *  `\@sys.unit-currency`, this may contain: { "amount": 5, "currency": "USD" }
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id formattedValue;

/** Required. A part of a message possibly annotated with an entity. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Represents article answer.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1ArticleAnswer : GTLRObject

/**
 *  The name of answer record, in the format of
 *  "projects//locations//answerRecords/"
 */
@property(nonatomic, copy, nullable) NSString *answerRecord;

/**
 *  A map that contains metadata about the answer and the document from which it
 *  originates.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1ArticleAnswer_Metadata *metadata;

/** Output only. Article snippets. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *snippets;

/** The article title. */
@property(nonatomic, copy, nullable) NSString *title;

/** The article URI. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  A map that contains metadata about the answer and the document from which it
 *  originates.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1ArticleAnswer_Metadata : GTLRObject
@end


/**
 *  The response message for EntityTypes.BatchUpdateEntityTypes.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse : GTLRObject

/** The collection of updated or created entity types. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType *> *entityTypes;

@end


/**
 *  The response message for Intents.BatchUpdateIntents.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse : GTLRObject

/** The collection of updated or created intents. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1Intent *> *intents;

@end


/**
 *  Metadata for a ConversationProfile.ClearSuggestionFeatureConfig operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata : GTLRObject

/**
 *  The resource name of the conversation profile. Format:
 *  `projects//locations//conversationProfiles/`
 */
@property(nonatomic, copy, nullable) NSString *conversationProfile;

/**
 *  Timestamp whe the request was created. The time is measured on server side.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. The participant role to remove the suggestion feature config. Only
 *  HUMAN_AGENT or END_USER can be used.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_AutomatedAgent
 *        Participant is an automated agent, such as a Dialogflow agent. (Value:
 *        "AUTOMATED_AGENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_EndUser
 *        Participant is an end user that has called or chatted with Dialogflow
 *        services. (Value: "END_USER")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_HumanAgent
 *        Participant is a human agent. (Value: "HUMAN_AGENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_RoleUnspecified
 *        Participant role not set. (Value: "ROLE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *participantRole;

/**
 *  Required. The type of the suggestion feature to remove.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_ArticleSuggestion
 *        Run article suggestion model for chat. (Value: "ARTICLE_SUGGESTION")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_ConversationSummarization
 *        Run conversation summarization model for chat. (Value:
 *        "CONVERSATION_SUMMARIZATION")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_Faq
 *        Run FAQ model. (Value: "FAQ")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_SmartReply
 *        Run smart reply model for chat. (Value: "SMART_REPLY")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_TypeUnspecified
 *        Unspecified feature type. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *suggestionFeatureType;

@end


/**
 *  Dialogflow contexts are similar to natural language context. If a person
 *  says to you "they are orange", you need context in order to understand what
 *  "they" is referring to. Similarly, for Dialogflow to handle an end-user
 *  expression like that, it needs to be provided with context in order to
 *  correctly match an intent. Using contexts, you can control the flow of a
 *  conversation. You can configure contexts for an intent by setting input and
 *  output contexts, which are identified by string names. When an intent is
 *  matched, any configured output contexts for that intent become active. While
 *  any contexts are active, Dialogflow is more likely to match intents that are
 *  configured with input contexts that correspond to the currently active
 *  contexts. For more information about context, see the [Contexts
 *  guide](https://cloud.google.com/dialogflow/docs/contexts-overview).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1Context : GTLRObject

/**
 *  Optional. The number of conversational query requests after which the
 *  context expires. The default is `0`. If set to `0`, the context expires
 *  immediately. Contexts expire automatically after 20 minutes if there are no
 *  matching queries.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *lifespanCount;

/**
 *  Required. The unique identifier of the context. Supported formats: -
 *  `projects//agent/sessions//contexts/`, -
 *  `projects//locations//agent/sessions//contexts/`, -
 *  `projects//agent/environments//users//sessions//contexts/`, -
 *  `projects//locations//agent/environments//users//sessions//contexts/`, The
 *  `Context ID` is always converted to lowercase, may only contain characters
 *  in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is
 *  not specified, we assume default 'draft' environment. If `User ID` is not
 *  specified, we assume default '-' user. The following context names are
 *  reserved for internal use by Dialogflow. You should not use these contexts
 *  or create contexts with these names: * `__system_counters__` *
 *  `*_id_dialog_context` * `*_dialog_params_size`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The collection of parameters associated with this context.
 *  Depending on your protocol or client library language, this is a map,
 *  associative array, symbol table, dictionary, or JSON object composed of a
 *  collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey
 *  value: parameter name - MapValue type: - If parameter's entity type is a
 *  composite entity: map - Else: depending on parameter value type, could be
 *  one of string, number, boolean, null, list or map - MapValue value: - If
 *  parameter's entity type is a composite entity: map from composite entity
 *  property names to property values - Else: parameter value
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1Context_Parameters *parameters;

@end


/**
 *  Optional. The collection of parameters associated with this context.
 *  Depending on your protocol or client library language, this is a map,
 *  associative array, symbol table, dictionary, or JSON object composed of a
 *  collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey
 *  value: parameter name - MapValue type: - If parameter's entity type is a
 *  composite entity: map - Else: depending on parameter value type, could be
 *  one of string, number, boolean, null, list or map - MapValue value: - If
 *  parameter's entity type is a composite entity: map from composite entity
 *  property names to property values - Else: parameter value
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1Context_Parameters : GTLRObject
@end


/**
 *  Represents a notification sent to Pub/Sub subscribers for conversation
 *  lifecycle events.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1ConversationEvent : GTLRObject

/**
 *  Required. The unique identifier of the conversation this notification refers
 *  to. Format: `projects//conversations/`.
 */
@property(nonatomic, copy, nullable) NSString *conversation;

/**
 *  Optional. More detailed information about an error. Only set for type
 *  UNRECOVERABLE_ERROR_IN_PHONE_CALL.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleRpcStatus *errorStatus;

/** Payload of NEW_MESSAGE event. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1Message *newMessagePayload NS_RETURNS_NOT_RETAINED;

/**
 *  Required. The type of the event that this notification refers to.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1ConversationEvent_Type_ConversationFinished
 *        An existing conversation has closed. This is fired when a telephone
 *        call is terminated, or a conversation is closed via the API. (Value:
 *        "CONVERSATION_FINISHED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1ConversationEvent_Type_ConversationStarted
 *        A new conversation has been opened. This is fired when a telephone
 *        call is answered, or a conversation is created via the API. (Value:
 *        "CONVERSATION_STARTED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1ConversationEvent_Type_HumanInterventionNeeded
 *        An existing conversation has received notification from Dialogflow
 *        that human intervention is required. (Value:
 *        "HUMAN_INTERVENTION_NEEDED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1ConversationEvent_Type_NewMessage
 *        An existing conversation has received a new message, either from API
 *        or telephony. It is configured in
 *        ConversationProfile.new_message_event_notification_config (Value:
 *        "NEW_MESSAGE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1ConversationEvent_Type_TypeUnspecified
 *        Type not set. (Value: "TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1ConversationEvent_Type_UnrecoverableError
 *        Unrecoverable error during a telephone call. In general
 *        non-recoverable errors only occur if something was misconfigured in
 *        the ConversationProfile corresponding to the call. After a
 *        non-recoverable error, Dialogflow may stop responding. We don't fire
 *        this event: * in an API call because we can directly return the error,
 *        or, * when we can recover from an error. (Value:
 *        "UNRECOVERABLE_ERROR")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Each intent parameter has a type, called the entity type, which dictates
 *  exactly how data from an end-user expression is extracted. Dialogflow
 *  provides predefined system entities that can match many common types of
 *  data. For example, there are system entities for matching dates, times,
 *  colors, email addresses, and so on. You can also create your own custom
 *  entities for matching custom data. For example, you could define a vegetable
 *  entity that can match the types of vegetables available for purchase with a
 *  grocery store agent. For more information, see the [Entity
 *  guide](https://cloud.google.com/dialogflow/docs/entities-overview).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType : GTLRObject

/**
 *  Optional. Indicates whether the entity type can be automatically expanded.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType_AutoExpansionMode_AutoExpansionModeDefault
 *        Allows an agent to recognize values that have not been explicitly
 *        listed in the entity. (Value: "AUTO_EXPANSION_MODE_DEFAULT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType_AutoExpansionMode_AutoExpansionModeUnspecified
 *        Auto expansion disabled for the entity. (Value:
 *        "AUTO_EXPANSION_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *autoExpansionMode;

/** Required. The name of the entity type. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. Enables fuzzy entity extraction during classification.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableFuzzyExtraction;

/**
 *  Optional. The collection of entity entries associated with the entity type.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1EntityTypeEntity *> *entities;

/**
 *  Required. Indicates the kind of entity type.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType_Kind_KindList
 *        List entity types contain a set of entries that do not map to
 *        reference values. However, list entity types can contain references to
 *        other entity types (with or without aliases). (Value: "KIND_LIST")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType_Kind_KindMap
 *        Map entity types allow mapping of a group of synonyms to a reference
 *        value. (Value: "KIND_MAP")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType_Kind_KindRegexp
 *        Regexp entity types allow to specify regular expressions in entries
 *        values. (Value: "KIND_REGEXP")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1EntityType_Kind_KindUnspecified
 *        Not specified. This value should be never used. (Value:
 *        "KIND_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The unique identifier of the entity type. Required for
 *  EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods.
 *  Supported formats: - `projects//agent/entityTypes/` -
 *  `projects//locations//agent/entityTypes/`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  An **entity entry** for an associated entity type.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1EntityTypeEntity : GTLRObject

/**
 *  Required. A collection of value synonyms. For example, if the entity type is
 *  *vegetable*, and `value` is *scallions*, a synonym could be *green onions*.
 *  For `KIND_LIST` entity types: * This collection must contain exactly one
 *  synonym equal to `value`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *synonyms;

/**
 *  Required. The primary value associated with this entity entry. For example,
 *  if the entity type is *vegetable*, the value could be *scallions*. For
 *  `KIND_MAP` entity types: * A reference value to be used in place of
 *  synonyms. For `KIND_LIST` entity types: * A string that can contain
 *  references to other entity types (with or without aliases).
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Events allow for matching intents by event name instead of the natural
 *  language input. For instance, input `` can trigger a personalized welcome
 *  response. The parameter `name` may be used by the agent in the response:
 *  `"Hello #welcome_event.name! What can I do for you today?"`.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1EventInput : GTLRObject

/**
 *  Required. The language of this query. See [Language
 *  Support](https://cloud.google.com/dialogflow/docs/reference/language) for a
 *  list of the currently supported language codes. Note that queries in the
 *  same session do not necessarily need to specify the same language. This
 *  field is ignored when used in the context of a
 *  WebhookResponse.followup_event_input field, because the language was already
 *  defined in the originating detect intent request.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/** Required. The unique identifier of the event. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The collection of parameters associated with the event. Depending on your
 *  protocol or client library language, this is a map, associative array,
 *  symbol table, dictionary, or JSON object composed of a collection of
 *  (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter
 *  name - MapValue type: - If parameter's entity type is a composite entity:
 *  map - Else: depending on parameter value type, could be one of string,
 *  number, boolean, null, list or map - MapValue value: - If parameter's entity
 *  type is a composite entity: map from composite entity property names to
 *  property values - Else: parameter value
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1EventInput_Parameters *parameters;

@end


/**
 *  The collection of parameters associated with the event. Depending on your
 *  protocol or client library language, this is a map, associative array,
 *  symbol table, dictionary, or JSON object composed of a collection of
 *  (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter
 *  name - MapValue type: - If parameter's entity type is a composite entity:
 *  map - Else: depending on parameter value type, could be one of string,
 *  number, boolean, null, list or map - MapValue value: - If parameter's entity
 *  type is a composite entity: map from composite entity property names to
 *  property values - Else: parameter value
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1EventInput_Parameters : GTLRObject
@end


/**
 *  The response message for Agents.ExportAgent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1ExportAgentResponse : GTLRObject

/**
 *  Zip compressed raw byte content for agent.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *agentContent;

/**
 *  The URI to a file containing the exported agent. This field is populated
 *  only if `agent_uri` is specified in `ExportAgentRequest`.
 */
@property(nonatomic, copy, nullable) NSString *agentUri;

@end


/**
 *  Metadata related to the Export Data Operations (e.g. ExportDocument).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1ExportOperationMetadata : GTLRObject

/** Cloud Storage file path of the exported data. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1GcsDestination *exportedGcsDestination;

@end


/**
 *  Represents answer from "frequently asked questions".
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1FaqAnswer : GTLRObject

/** The piece of text from the `source` knowledge base document. */
@property(nonatomic, copy, nullable) NSString *answer;

/**
 *  The name of answer record, in the format of
 *  "projects//locations//answerRecords/"
 */
@property(nonatomic, copy, nullable) NSString *answerRecord;

/**
 *  The system's confidence score that this Knowledge answer is a good match for
 *  this conversational query, range from 0.0 (completely uncertain) to 1.0
 *  (completely certain).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/**
 *  A map that contains metadata about the answer and the document from which it
 *  originates.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1FaqAnswer_Metadata *metadata;

/** The corresponding FAQ question. */
@property(nonatomic, copy, nullable) NSString *question;

/**
 *  Indicates which Knowledge Document this answer was extracted from. Format:
 *  `projects//locations//agent/knowledgeBases//documents/`.
 */
@property(nonatomic, copy, nullable) NSString *source;

@end


/**
 *  A map that contains metadata about the answer and the document from which it
 *  originates.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1FaqAnswer_Metadata : GTLRObject
@end


/**
 *  Google Cloud Storage location for the output.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1GcsDestination : GTLRObject

/**
 *  Required. The Google Cloud Storage URIs for the output. A URI is of the
 *  form: gs://bucket/object-prefix-or-name Whether a prefix or name is used
 *  depends on the use case. The requesting user must have "write-permission" to
 *  the bucket.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Output only. Represents a notification sent to Pub/Sub subscribers for agent
 *  assistant events in a specific conversation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1HumanAgentAssistantEvent : GTLRObject

/**
 *  The conversation this notification refers to. Format:
 *  `projects//conversations/`.
 */
@property(nonatomic, copy, nullable) NSString *conversation;

/**
 *  The participant that the suggestion is compiled for. And This field is used
 *  to call Participants.ListSuggestions API. Format:
 *  `projects//conversations//participants/`. It will not be set in legacy
 *  workflow. HumanAgentAssistantConfig.name for more information.
 */
@property(nonatomic, copy, nullable) NSString *participant;

/**
 *  The suggestion results payload that this notification refers to. It will
 *  only be set when
 *  HumanAgentAssistantConfig.SuggestionConfig.group_suggestion_responses sets
 *  to true.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1SuggestionResult *> *suggestionResults;

@end


/**
 *  Response message for Documents.ImportDocuments.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1ImportDocumentsResponse : GTLRObject

/** Includes details about skipped documents or any other warnings. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleRpcStatus *> *warnings;

@end


/**
 *  An intent categorizes an end-user's intention for one conversation turn. For
 *  each agent, you define many intents, where your combined intents can handle
 *  a complete conversation. When an end-user writes or says something, referred
 *  to as an end-user expression or end-user input, Dialogflow matches the
 *  end-user input to the best intent in your agent. Matching an intent is also
 *  known as intent classification. For more information, see the [intent
 *  guide](https://cloud.google.com/dialogflow/docs/intents-overview).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1Intent : GTLRObject

/**
 *  Optional. The name of the action associated with the intent. Note: The
 *  action name must not contain whitespaces.
 */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  Optional. The list of platforms for which the first responses will be copied
 *  from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *defaultResponsePlatforms;

/** Required. The name of this intent. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. Indicates that this intent ends an interaction. Some integrations
 *  (e.g., Actions on Google or Dialogflow phone gateway) use this information
 *  to close interaction with an end user. Default is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endInteraction;

/**
 *  Optional. The collection of event names that trigger the intent. If the
 *  collection of input contexts is not empty, all of the contexts must be
 *  present in the active user session for an event to trigger this intent.
 *  Event names are limited to 150 characters.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *events;

/**
 *  Output only. Information about all followup intents that have this intent as
 *  a direct or indirect parent. We populate this field only in the output.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo *> *followupIntentInfo;

/**
 *  Optional. The list of context names required for this intent to be
 *  triggered. Formats: - `projects//agent/sessions/-/contexts/` -
 *  `projects//locations//agent/sessions/-/contexts/`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *inputContextNames;

/**
 *  Optional. Indicates whether this is a fallback intent.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isFallback;

/**
 *  Optional. Indicates that a live agent should be brought in to handle the
 *  interaction with the user. In most cases, when you set this flag to true,
 *  you would also want to set end_interaction to true as well. Default is
 *  false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *liveAgentHandoff;

/**
 *  Optional. The collection of rich messages corresponding to the `Response`
 *  field in the Dialogflow console.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage *> *messages;

/**
 *  Optional. Indicates whether Machine Learning is disabled for the intent.
 *  Note: If `ml_disabled` setting is set to true, then this intent is not taken
 *  into account during inference in `ML ONLY` match mode. Also, auto-markup in
 *  the UI is turned off.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mlDisabled;

/**
 *  Optional. Indicates whether Machine Learning is enabled for the intent.
 *  Note: If `ml_enabled` setting is set to false, then this intent is not taken
 *  into account during inference in `ML ONLY` match mode. Also, auto-markup in
 *  the UI is turned off. DEPRECATED! Please use `ml_disabled` field instead.
 *  NOTE: If both `ml_enabled` and `ml_disabled` are either not set or false,
 *  then the default value is determined as follows: - Before April 15th, 2018
 *  the default is: ml_enabled = false / ml_disabled = true. - After April 15th,
 *  2018 the default is: ml_enabled = true / ml_disabled = false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mlEnabled;

/**
 *  Optional. The unique identifier of this intent. Required for
 *  Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported
 *  formats: - `projects//agent/intents/` -
 *  `projects//locations//agent/intents/`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The collection of contexts that are activated when the intent is
 *  matched. Context messages in this collection should not set the parameters
 *  field. Setting the `lifespan_count` to 0 will reset the context when the
 *  intent is matched. Format: `projects//agent/sessions/-/contexts/`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1Context *> *outputContexts;

/** Optional. The collection of parameters associated with the intent. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentParameter *> *parameters;

/**
 *  Optional. The unique identifier of the parent intent in the chain of
 *  followup intents. You can set this field when creating an intent, for
 *  example with CreateIntent or BatchUpdateIntents, in order to make this
 *  intent a followup intent. It identifies the parent followup intent. Format:
 *  `projects//agent/intents/`.
 */
@property(nonatomic, copy, nullable) NSString *parentFollowupIntentName;

/**
 *  Optional. The priority of this intent. Higher numbers represent higher
 *  priorities. - If the supplied value is unspecified or 0, the service
 *  translates the value to 500,000, which corresponds to the `Normal` priority
 *  in the console. - If the supplied value is negative, the intent is ignored
 *  in runtime detect intent requests.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priority;

/**
 *  Optional. Indicates whether to delete all contexts in the current session
 *  when this intent is matched.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *resetContexts;

/**
 *  Output only. The unique identifier of the root intent in the chain of
 *  followup intents. It identifies the correct followup intents chain for this
 *  intent. Format: `projects//agent/intents/`.
 */
@property(nonatomic, copy, nullable) NSString *rootFollowupIntentName;

/** Optional. The collection of examples that the agent is trained on. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentTrainingPhrase *> *trainingPhrases;

/**
 *  Optional. Indicates whether webhooks are enabled for the intent.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_WebhookState_WebhookStateEnabled
 *        Webhook is enabled in the agent and in the intent. (Value:
 *        "WEBHOOK_STATE_ENABLED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_WebhookState_WebhookStateEnabledForSlotFilling
 *        Webhook is enabled in the agent and in the intent. Also, each slot
 *        filling prompt is forwarded to the webhook. (Value:
 *        "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1Intent_WebhookState_WebhookStateUnspecified
 *        Webhook is disabled in the agent and in the intent. (Value:
 *        "WEBHOOK_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *webhookState;

@end


/**
 *  Represents a single followup intent in the chain.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo : GTLRObject

/**
 *  The unique identifier of the followup intent. Format:
 *  `projects//agent/intents/`.
 */
@property(nonatomic, copy, nullable) NSString *followupIntentName;

/**
 *  The unique identifier of the followup intent's parent. Format:
 *  `projects//agent/intents/`.
 */
@property(nonatomic, copy, nullable) NSString *parentFollowupIntentName;

@end


/**
 *  Corresponds to the `Response` field in the Dialogflow console.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage : GTLRObject

/** Displays a basic card for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBasicCard *basicCard;

/** Browse carousel card for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard *browseCarouselCard;

/** Displays a card. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageCard *card;

/** Displays a carousel card for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect *carouselSelect;

/** Displays an image. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageImage *image;

/** Displays a link out suggestion chip for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion *linkOutSuggestion;

/** Displays a list card for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageListSelect *listSelect;

/** The media content card for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageMediaContent *mediaContent;

/** A custom platform-specific response. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Payload *payload;

/**
 *  Optional. The platform that this message is intended for.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_ActionsOnGoogle
 *        Google Assistant See [Dialogflow webhook
 *        format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
 *        (Value: "ACTIONS_ON_GOOGLE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Facebook
 *        Facebook. (Value: "FACEBOOK")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_GoogleHangouts
 *        Google Hangouts. (Value: "GOOGLE_HANGOUTS")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Kik
 *        Kik. (Value: "KIK")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Line
 *        Line. (Value: "LINE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_PlatformUnspecified
 *        Not specified. (Value: "PLATFORM_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Skype
 *        Skype. (Value: "SKYPE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Slack
 *        Slack. (Value: "SLACK")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Telegram
 *        Telegram. (Value: "TELEGRAM")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Telephony
 *        Telephony Gateway. (Value: "TELEPHONY")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Platform_Viber
 *        Viber. (Value: "VIBER")
 */
@property(nonatomic, copy, nullable) NSString *platform;

/** Displays quick replies. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageQuickReplies *quickReplies;

/** Rich Business Messaging (RBM) carousel rich card response. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard *rbmCarouselRichCard;

/** Standalone Rich Business Messaging (RBM) rich card response. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard *rbmStandaloneRichCard;

/**
 *  Rich Business Messaging (RBM) text response. RBM allows businesses to send
 *  enriched and branded versions of SMS. See
 *  https://jibe.google.com/business-messaging.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmText *rbmText;

/** Returns a voice or text-only response for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses *simpleResponses;

/** Displays suggestion chips for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSuggestions *suggestions;

/** Table card for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTableCard *tableCard;

/** Plays audio from a file in Telephony Gateway. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio *telephonyPlayAudio;

/** Synthesizes speech in Telephony Gateway. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech *telephonySynthesizeSpeech;

/** Transfers the call in Telephony Gateway. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall *telephonyTransferCall;

/** Returns a text response. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageText *text;

@end


/**
 *  A custom platform-specific response.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage_Payload : GTLRObject
@end


/**
 *  The basic card message. Useful for displaying information.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBasicCard : GTLRObject

/** Optional. The collection of card buttons. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton *> *buttons;

/** Required, unless image is present. The body text of the card. */
@property(nonatomic, copy, nullable) NSString *formattedText;

/** Optional. The image for the card. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageImage *image;

/** Optional. The subtitle of the card. */
@property(nonatomic, copy, nullable) NSString *subtitle;

/** Optional. The title of the card. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  The button object that appears at the bottom of a card.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton : GTLRObject

/** Required. Action to take when a user taps on the button. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction *openUriAction;

/** Required. The title of the button. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Opens the given URI.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction : GTLRObject

/** Required. The HTTP or HTTPS scheme URI. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Browse Carousel Card for Actions on Google.
 *  https://developers.google.com/actions/assistant/responses#browsing_carousel
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard : GTLRCollectionObject

/**
 *  Optional. Settings for displaying the image. Applies to every image in
 *  items.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard_ImageDisplayOptions_BlurredBackground
 *        Pad the gaps between image and image frame with a blurred copy of the
 *        same image. (Value: "BLURRED_BACKGROUND")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard_ImageDisplayOptions_Cropped
 *        Image is scaled such that the image width and height match or exceed
 *        the container dimensions. This may crop the top and bottom of the
 *        image if the scaled image height is greater than the container height,
 *        or crop the left and right of the image if the scaled image width is
 *        greater than the container width. This is similar to "Zoom Mode" on a
 *        widescreen TV when playing a 4:3 video. (Value: "CROPPED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard_ImageDisplayOptions_Gray
 *        Fill the gaps between the image and the image container with gray
 *        bars. (Value: "GRAY")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard_ImageDisplayOptions_ImageDisplayOptionsUnspecified
 *        Fill the gaps between the image and the image container with gray
 *        bars. (Value: "IMAGE_DISPLAY_OPTIONS_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard_ImageDisplayOptions_White
 *        Fill the gaps between the image and the image container with white
 *        bars. (Value: "WHITE")
 */
@property(nonatomic, copy, nullable) NSString *imageDisplayOptions;

/**
 *  Required. List of items in the Browse Carousel Card. Minimum of two items,
 *  maximum of ten.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem *> *items;

@end


/**
 *  Browsing carousel tile
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem : GTLRObject

/**
 *  Optional. Description of the carousel item. Maximum of four lines of text.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. Text that appears at the bottom of the Browse Carousel Card.
 *  Maximum of one line of text.
 */
@property(nonatomic, copy, nullable) NSString *footer;

/** Optional. Hero image for the carousel item. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageImage *image;

/** Required. Action to present to the user. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction *openUriAction;

/** Required. Title of the carousel item. Maximum of two lines of text. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Actions on Google action to open a given url.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction : GTLRObject

/** Required. URL */
@property(nonatomic, copy, nullable) NSString *url;

/**
 *  Optional. Specifies the type of viewer that is used when opening the URL.
 *  Defaults to opening via web browser.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction_UrlTypeHint_AmpAction
 *        Url would be an amp action (Value: "AMP_ACTION")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction_UrlTypeHint_AmpContent
 *        URL that points directly to AMP content, or to a canonical URL which
 *        refers to AMP content via . (Value: "AMP_CONTENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction_UrlTypeHint_UrlTypeHintUnspecified
 *        Unspecified (Value: "URL_TYPE_HINT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *urlTypeHint;

@end


/**
 *  The card response message.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageCard : GTLRObject

/** Optional. The collection of card buttons. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageCardButton *> *buttons;

/** Optional. The public URI to an image file for the card. */
@property(nonatomic, copy, nullable) NSString *imageUri;

/** Optional. The subtitle of the card. */
@property(nonatomic, copy, nullable) NSString *subtitle;

/** Optional. The title of the card. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Optional. Contains information about a button.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageCardButton : GTLRObject

/** Optional. The text to send back to the Dialogflow API or a URI to open. */
@property(nonatomic, copy, nullable) NSString *postback;

/** Optional. The text to show on the button. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  The card for presenting a carousel of options to select from.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect : GTLRCollectionObject

/**
 *  Required. Carousel items.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem *> *items;

@end


/**
 *  An item in the carousel.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem : GTLRObject

/**
 *  Optional. The body text of the card.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Optional. The image to display. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageImage *image;

/** Required. Additional info about the option item. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo *info;

/** Required. Title of the carousel item. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Column properties for TableCard.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageColumnProperties : GTLRObject

/** Required. Column heading. */
@property(nonatomic, copy, nullable) NSString *header;

/**
 *  Optional. Defines text alignment for all cells in this column.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageColumnProperties_HorizontalAlignment_Center
 *        Text is centered in the column. (Value: "CENTER")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageColumnProperties_HorizontalAlignment_HorizontalAlignmentUnspecified
 *        Text is aligned to the leading edge of the column. (Value:
 *        "HORIZONTAL_ALIGNMENT_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageColumnProperties_HorizontalAlignment_Leading
 *        Text is aligned to the leading edge of the column. (Value: "LEADING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageColumnProperties_HorizontalAlignment_Trailing
 *        Text is aligned to the trailing edge of the column. (Value:
 *        "TRAILING")
 */
@property(nonatomic, copy, nullable) NSString *horizontalAlignment;

@end


/**
 *  The image response message.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageImage : GTLRObject

/**
 *  A text description of the image to be used for accessibility, e.g., screen
 *  readers. Required if image_uri is set for CarouselSelect.
 */
@property(nonatomic, copy, nullable) NSString *accessibilityText;

/** Optional. The public URI to an image file. */
@property(nonatomic, copy, nullable) NSString *imageUri;

@end


/**
 *  The suggestion chip message that allows the user to jump out to the app or
 *  website associated with this agent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion : GTLRObject

/** Required. The name of the app or site this chip is linking to. */
@property(nonatomic, copy, nullable) NSString *destinationName;

/**
 *  Required. The URI of the app or site to open when the user taps the
 *  suggestion chip.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  The card for presenting a list of options to select from.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageListSelect : GTLRCollectionObject

/**
 *  Required. List items.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageListSelectItem *> *items;

/** Optional. Subtitle of the list. */
@property(nonatomic, copy, nullable) NSString *subtitle;

/** Optional. The overall title of the list. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  An item in the list.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageListSelectItem : GTLRObject

/**
 *  Optional. The main text describing the item.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Optional. The image to display. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageImage *image;

/** Required. Additional information about this option. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo *info;

/** Required. The title of the list item. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  The media content card for Actions on Google.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageMediaContent : GTLRObject

/** Required. List of media objects. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject *> *mediaObjects;

/**
 *  Optional. What type of media is the content (ie "audio").
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageMediaContent_MediaType_Audio
 *        Response media type is audio. (Value: "AUDIO")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageMediaContent_MediaType_ResponseMediaTypeUnspecified
 *        Unspecified. (Value: "RESPONSE_MEDIA_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *mediaType;

@end


/**
 *  Response media object for media content card.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject : GTLRObject

/** Required. Url where the media is stored. */
@property(nonatomic, copy, nullable) NSString *contentUrl;

/**
 *  Optional. Description of media card.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Optional. Icon to display above media content. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageImage *icon;

/** Optional. Image to display above media content. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageImage *largeImage;

/** Required. Name of media card. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  The quick replies response message.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageQuickReplies : GTLRObject

/** Optional. The collection of quick replies. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *quickReplies;

/** Optional. The title of the collection of quick replies. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Rich Business Messaging (RBM) Card content
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent : GTLRObject

/**
 *  Optional. Description of the card (at most 2000 bytes). At least one of the
 *  title, description or media must be set.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. However at least one of the title, description or media must be
 *  set. Media (image, GIF or a video) to include in the card.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia *media;

/** Optional. List of suggestions to include in the card. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion *> *suggestions;

/**
 *  Optional. Title of the card (at most 200 bytes). At least one of the title,
 *  description or media must be set.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Rich Business Messaging (RBM) Media displayed in Cards The following
 *  media-types are currently supported: Image Types * image/jpeg * image/jpg' *
 *  image/gif * image/png Video Types * video/h263 * video/m4v * video/mp4 *
 *  video/mpeg * video/mpeg4 * video/webm
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia : GTLRObject

/**
 *  Required. Publicly reachable URI of the file. The RBM platform determines
 *  the MIME type of the file from the content-type field in the HTTP headers
 *  when the platform fetches the file. The content-type field must be present
 *  and accurate in the HTTP response from the URL.
 */
@property(nonatomic, copy, nullable) NSString *fileUri;

/**
 *  Required for cards with vertical orientation. The height of the media within
 *  a rich card with a vertical layout. For a standalone card with horizontal
 *  layout, height is not customizable, and this field is ignored.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia_Height_HeightUnspecified
 *        Not specified. (Value: "HEIGHT_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia_Height_Medium
 *        168 DP. (Value: "MEDIUM")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia_Height_Short
 *        112 DP. (Value: "SHORT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia_Height_Tall
 *        264 DP. Not available for rich card carousels when the card width is
 *        set to small. (Value: "TALL")
 */
@property(nonatomic, copy, nullable) NSString *height;

/**
 *  Optional. Publicly reachable URI of the thumbnail.If you don't provide a
 *  thumbnail URI, the RBM platform displays a blank placeholder thumbnail until
 *  the user's device downloads the file. Depending on the user's setting, the
 *  file may not download automatically and may require the user to tap a
 *  download button.
 */
@property(nonatomic, copy, nullable) NSString *thumbnailUri;

@end


/**
 *  Carousel Rich Business Messaging (RBM) rich card. Rich cards allow you to
 *  respond to users with more vivid content, e.g. with media and suggestions.
 *  If you want to show a single card with more control over the layout, please
 *  use RbmStandaloneCard instead.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard : GTLRObject

/**
 *  Required. The cards in the carousel. A carousel must have at least 2 cards
 *  and at most 10.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent *> *cardContents;

/**
 *  Required. The width of the cards in the carousel.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard_CardWidth_CardWidthUnspecified
 *        Not specified. (Value: "CARD_WIDTH_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard_CardWidth_Medium
 *        232 DP. (Value: "MEDIUM")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard_CardWidth_Small
 *        120 DP. Note that tall media cannot be used. (Value: "SMALL")
 */
@property(nonatomic, copy, nullable) NSString *cardWidth;

@end


/**
 *  Standalone Rich Business Messaging (RBM) rich card. Rich cards allow you to
 *  respond to users with more vivid content, e.g. with media and suggestions.
 *  You can group multiple rich cards into one using RbmCarouselCard but
 *  carousel cards will give you less control over the card layout.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard : GTLRObject

/** Required. Card content. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent *cardContent;

/**
 *  Required. Orientation of the card.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard_CardOrientation_CardOrientationUnspecified
 *        Not specified. (Value: "CARD_ORIENTATION_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard_CardOrientation_Horizontal
 *        Horizontal layout. (Value: "HORIZONTAL")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard_CardOrientation_Vertical
 *        Vertical layout. (Value: "VERTICAL")
 */
@property(nonatomic, copy, nullable) NSString *cardOrientation;

/**
 *  Required if orientation is horizontal. Image preview alignment for
 *  standalone cards with horizontal layout.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard_ThumbnailImageAlignment_Left
 *        Thumbnail preview is left-aligned. (Value: "LEFT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard_ThumbnailImageAlignment_Right
 *        Thumbnail preview is right-aligned. (Value: "RIGHT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard_ThumbnailImageAlignment_ThumbnailImageAlignmentUnspecified
 *        Not specified. (Value: "THUMBNAIL_IMAGE_ALIGNMENT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *thumbnailImageAlignment;

@end


/**
 *  Rich Business Messaging (RBM) suggested client-side action that the user can
 *  choose from the card.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction : GTLRObject

/** Suggested client side action: Dial a phone number */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial *dial;

/** Suggested client side action: Open a URI on device */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri *openUrl;

/**
 *  Opaque payload that the Dialogflow receives in a user event when the user
 *  taps the suggested action. This data will be also forwarded to webhook to
 *  allow performing custom business logic.
 */
@property(nonatomic, copy, nullable) NSString *postbackData;

/** Suggested client side action: Share user location */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation *shareLocation;

/** Text to display alongside the action. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Opens the user's default dialer app with the specified phone number but does
 *  not dial automatically.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial : GTLRObject

/**
 *  Required. The phone number to fill in the default dialer app. This field
 *  should be in [E.164](https://en.wikipedia.org/wiki/E.164) format. An example
 *  of a correctly formatted phone number: +15556767888.
 */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

@end


/**
 *  Opens the user's default web browser app to the specified uri If the user
 *  has an app installed that is registered as the default handler for the URL,
 *  then this app will be opened instead, and its icon will be used in the
 *  suggested action UI.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri : GTLRObject

/** Required. The uri to open on the user device */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Opens the device's location chooser so the user can pick a location to send
 *  back to the agent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation : GTLRObject
@end


/**
 *  Rich Business Messaging (RBM) suggested reply that the user can click
 *  instead of typing in their own response.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply : GTLRObject

/**
 *  Opaque payload that the Dialogflow receives in a user event when the user
 *  taps the suggested reply. This data will be also forwarded to webhook to
 *  allow performing custom business logic.
 */
@property(nonatomic, copy, nullable) NSString *postbackData;

/** Suggested reply text. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Rich Business Messaging (RBM) suggestion. Suggestions allow user to easily
 *  select/click a predefined response or perform an action (like opening a web
 *  uri).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion : GTLRObject

/** Predefined client side actions that user can choose */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction *action;

/** Predefined replies for user to select instead of typing */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply *reply;

@end


/**
 *  Rich Business Messaging (RBM) text response with suggestions.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmText : GTLRObject

/** Optional. One or more suggestions to show to the user. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion *> *rbmSuggestion;

/** Required. Text sent and displayed to the user. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Additional info about the select item for when it is triggered in a dialog.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo : GTLRObject

/**
 *  Required. A unique key that will be sent back to the agent if this response
 *  is given.
 */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  Optional. A list of synonyms that can also be used to trigger this item in
 *  dialog.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *synonyms;

@end


/**
 *  The simple response message containing speech or text.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse : GTLRObject

/** Optional. The text to display. */
@property(nonatomic, copy, nullable) NSString *displayText;

/**
 *  One of text_to_speech or ssml must be provided. Structured spoken response
 *  to the user in the SSML format. Mutually exclusive with text_to_speech.
 */
@property(nonatomic, copy, nullable) NSString *ssml;

/**
 *  One of text_to_speech or ssml must be provided. The plain text of the speech
 *  output. Mutually exclusive with ssml.
 */
@property(nonatomic, copy, nullable) NSString *textToSpeech;

@end


/**
 *  The collection of simple response candidates. This message in
 *  `QueryResult.fulfillment_messages` and
 *  `WebhookResponse.fulfillment_messages` should contain only one
 *  `SimpleResponse`.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses : GTLRObject

/** Required. The list of simple responses. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse *> *simpleResponses;

@end


/**
 *  The suggestion chip message that the user can tap to quickly post a reply to
 *  the conversation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSuggestion : GTLRObject

/** Required. The text shown the in the suggestion chip. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  The collection of suggestions.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSuggestions : GTLRObject

/** Required. The list of suggested replies. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageSuggestion *> *suggestions;

@end


/**
 *  Table card for Actions on Google.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTableCard : GTLRObject

/** Optional. List of buttons for the card. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton *> *buttons;

/** Optional. Display properties for the columns in this table. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageColumnProperties *> *columnProperties;

/** Optional. Image which should be displayed on the card. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageImage *image;

/** Optional. Rows in this table of data. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTableCardRow *> *rows;

/** Optional. Subtitle to the title. */
@property(nonatomic, copy, nullable) NSString *subtitle;

/** Required. Title of the card. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Cell of TableCardRow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTableCardCell : GTLRObject

/** Required. Text in this cell. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Row of TableCard.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTableCardRow : GTLRObject

/** Optional. List of cells that make up this row. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTableCardCell *> *cells;

/**
 *  Optional. Whether to add a visual divider after this row.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dividerAfter;

@end


/**
 *  Plays audio from a file in Telephony Gateway.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio : GTLRObject

/**
 *  Required. URI to a Google Cloud Storage object containing the audio to play,
 *  e.g., "gs://bucket/object". The object must contain a single channel (mono)
 *  of linear PCM audio (2 bytes / sample) at 8kHz. This object must be readable
 *  by the `service-\@gcp-sa-dialogflow.iam.gserviceaccount.com` service account
 *  where is the number of the Telephony Gateway project (usually the same as
 *  the Dialogflow agent project). If the Google Cloud Storage bucket is in the
 *  Telephony Gateway project, this permission is added by default when enabling
 *  the Dialogflow V2 API. For audio from other sources, consider using the
 *  `TelephonySynthesizeSpeech` message with SSML.
 */
@property(nonatomic, copy, nullable) NSString *audioUri;

@end


/**
 *  Synthesizes speech and plays back the synthesized audio to the caller in
 *  Telephony Gateway. Telephony Gateway takes the synthesizer settings from
 *  `DetectIntentResponse.output_audio_config` which can either be set at
 *  request-level or can come from the agent-level synthesizer config.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech : GTLRObject

/**
 *  The SSML to be synthesized. For more information, see
 *  [SSML](https://developers.google.com/actions/reference/ssml).
 */
@property(nonatomic, copy, nullable) NSString *ssml;

/** The raw text to be synthesized. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Transfers the call in Telephony Gateway.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall : GTLRObject

/**
 *  Required. The phone number to transfer the call to in [E.164
 *  format](https://en.wikipedia.org/wiki/E.164). We currently only allow
 *  transferring to US numbers (+1xxxyyyzzzz).
 */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

@end


/**
 *  The text response message.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessageText : GTLRObject

/** Optional. The collection of the agent's responses. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *text;

@end


/**
 *  Represents intent parameters.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentParameter : GTLRObject

/**
 *  Optional. The default value to use when the `value` yields an empty result.
 *  Default values can be extracted from contexts by using the following syntax:
 *  `#context_name.parameter_name`.
 */
@property(nonatomic, copy, nullable) NSString *defaultValue;

/** Required. The name of the parameter. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. The name of the entity type, prefixed with `\@`, that describes
 *  values of the parameter. If the parameter is required, this must be
 *  provided.
 */
@property(nonatomic, copy, nullable) NSString *entityTypeDisplayName;

/**
 *  Optional. Indicates whether the parameter represents a list of values.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isList;

/**
 *  Optional. Indicates whether the parameter is required. That is, whether the
 *  intent cannot be completed without collecting the parameter value.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mandatory;

/** The unique identifier of this parameter. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The collection of prompts that the agent can present to the user
 *  in order to collect a value for the parameter.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *prompts;

/**
 *  Optional. The definition of the parameter value. It can be: - a constant
 *  string, - a parameter value defined as `$parameter_name`, - an original
 *  parameter value defined as `$parameter_name.original`, - a parameter value
 *  from some context defined as `#context_name.parameter_name`.
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents an example that the agent is trained on.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentTrainingPhrase : GTLRObject

/** Output only. The unique identifier of this training phrase. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The ordered list of training phrase parts. The parts are
 *  concatenated in order to form the training phrase. Note: The API does not
 *  automatically annotate training phrases like the Dialogflow Console does.
 *  Note: Do not forget to include whitespace at part boundaries, so the
 *  training phrase is well formatted when the parts are concatenated. If the
 *  training phrase does not need to be annotated with parameters, you just need
 *  a single part with only the Part.text field set. If you want to annotate the
 *  training phrase, you must create multiple parts, where the fields of each
 *  part are populated in one of two ways: - `Part.text` is set to a part of the
 *  phrase that has no parameters. - `Part.text` is set to a part of the phrase
 *  that you want to annotate, and the `entity_type`, `alias`, and
 *  `user_defined` fields are all set.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart *> *parts;

/**
 *  Optional. Indicates how many times this example was added to the intent.
 *  Each time a developer adds an existing sample by editing an intent or
 *  training, this counter is increased.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timesAddedCount;

/**
 *  Required. The type of the training phrase.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentTrainingPhrase_Type_Example
 *        Examples do not contain \@-prefixed entity type names, but example
 *        parts can be annotated with entity types. (Value: "EXAMPLE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentTrainingPhrase_Type_Template
 *        Templates are not annotated with entity types, but they can contain
 *        \@-prefixed entity type names as substrings. Note: Template mode has
 *        been deprecated. Example mode is the only supported way to create new
 *        training phrases. If you have existing training phrases in template
 *        mode, they will be removed during training and it can cause a drop in
 *        agent performance. (Value: "TEMPLATE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1IntentTrainingPhrase_Type_TypeUnspecified
 *        Not specified. This value should never be used. (Value:
 *        "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents a part of a training phrase.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart : GTLRObject

/**
 *  Optional. The parameter name for the value extracted from the annotated part
 *  of the example. This field is required for annotated parts of the training
 *  phrase.
 */
@property(nonatomic, copy, nullable) NSString *alias;

/**
 *  Optional. The entity type name prefixed with `\@`. This field is required
 *  for annotated parts of the training phrase.
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/** Required. The text for this part. */
@property(nonatomic, copy, nullable) NSString *text;

/**
 *  Optional. Indicates whether the text was manually annotated. This field is
 *  set to true when the Dialogflow Console is used to manually annotate the
 *  part. When creating an annotated part with the API, you must set this to
 *  true.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *userDefined;

@end


/**
 *  Represents the result of querying a Knowledge base.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeAnswers : GTLRObject

/** A list of answers from Knowledge Connector. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer *> *answers;

@end


/**
 *  An answer from Knowledge Connector.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer : GTLRObject

/**
 *  The piece of text from the `source` knowledge base document that answers
 *  this conversational query.
 */
@property(nonatomic, copy, nullable) NSString *answer;

/**
 *  The corresponding FAQ question if the answer was extracted from a FAQ
 *  Document, empty otherwise.
 */
@property(nonatomic, copy, nullable) NSString *faqQuestion;

/**
 *  The system's confidence score that this Knowledge answer is a good match for
 *  this conversational query. The range is from 0.0 (completely uncertain) to
 *  1.0 (completely certain). Note: The confidence score is likely to vary
 *  somewhat (possibly even for identical requests), as the underlying model is
 *  under constant improvement. It may be deprecated in the future. We recommend
 *  using `match_confidence_level` which should be generally more stable.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *matchConfidence;

/**
 *  The system's confidence level that this knowledge answer is a good match for
 *  this conversational query. NOTE: The confidence level for a given `` pair
 *  may change without notice, as it depends on models that are constantly being
 *  improved. However, it will change less frequently than the confidence score
 *  below, and should be preferred for referencing the quality of an answer.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer_MatchConfidenceLevel_High
 *        Indicates our confidence is high. (Value: "HIGH")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer_MatchConfidenceLevel_Low
 *        Indicates that the confidence is low. (Value: "LOW")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer_MatchConfidenceLevel_MatchConfidenceLevelUnspecified
 *        Not specified. (Value: "MATCH_CONFIDENCE_LEVEL_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer_MatchConfidenceLevel_Medium
 *        Indicates our confidence is medium. (Value: "MEDIUM")
 */
@property(nonatomic, copy, nullable) NSString *matchConfidenceLevel;

/**
 *  Indicates which Knowledge Document this answer was extracted from. Format:
 *  `projects//knowledgeBases//documents/`.
 */
@property(nonatomic, copy, nullable) NSString *source;

@end


/**
 *  Metadata in google::longrunning::Operation for Knowledge operations.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata : GTLRObject

/**
 *  Metadata for the Export Data Operation such as the destination of export.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1ExportOperationMetadata *exportOperationMetadata;

/** The name of the knowledge base interacted with during the operation. */
@property(nonatomic, copy, nullable) NSString *knowledgeBase;

/**
 *  Required. Output only. The current state of this operation.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata_State_Done
 *        The operation is done, either cancelled or completed. (Value: "DONE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata_State_Pending
 *        The operation has been created. (Value: "PENDING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata_State_Running
 *        The operation is currently running. (Value: "RUNNING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata_State_StateUnspecified
 *        State unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Represents a message posted into a conversation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1Message : GTLRObject

/** Required. The message content. */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  Output only. The time when the message was created in Contact Center AI.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. The message language. This should be a
 *  [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
 *  Example: "en-US".
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/** Output only. The annotation for the message. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1MessageAnnotation *messageAnnotation;

/**
 *  Optional. The unique identifier of the message. Format:
 *  `projects//locations//conversations//messages/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The participant that sends this message. */
@property(nonatomic, copy, nullable) NSString *participant;

/**
 *  Output only. The role of the participant.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1Message_ParticipantRole_AutomatedAgent
 *        Participant is an automated agent, such as a Dialogflow agent. (Value:
 *        "AUTOMATED_AGENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1Message_ParticipantRole_EndUser
 *        Participant is an end user that has called or chatted with Dialogflow
 *        services. (Value: "END_USER")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1Message_ParticipantRole_HumanAgent
 *        Participant is a human agent. (Value: "HUMAN_AGENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1Message_ParticipantRole_RoleUnspecified
 *        Participant role not set. (Value: "ROLE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *participantRole;

/** Optional. The time when the message was sent. */
@property(nonatomic, strong, nullable) GTLRDateTime *sendTime;

/** Output only. The sentiment analysis result for the message. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1SentimentAnalysisResult *sentimentAnalysis;

@end


/**
 *  Represents the result of annotation for the message.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1MessageAnnotation : GTLRObject

/**
 *  Required. Indicates whether the text message contains entities.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *containEntities;

/**
 *  Optional. The collection of annotated message parts ordered by their
 *  position in the message. You can recover the annotated message by
 *  concatenating [AnnotatedMessagePart.text].
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1AnnotatedMessagePart *> *parts;

@end


/**
 *  Represents the contents of the original request that was passed to the
 *  `[Streaming]DetectIntent` call.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest : GTLRObject

/**
 *  Optional. This field is set to the value of the `QueryParameters.payload`
 *  field passed in the request. Some integrations that query a Dialogflow agent
 *  may provide additional information in the payload. In particular, for the
 *  Dialogflow Phone Gateway integration, this field has the form: {
 *  "telephony": { "caller_id": "+18558363987" } } Note: The caller ID field
 *  (`caller_id`) will be redacted for Trial Edition agents and populated with
 *  the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for
 *  Essentials Edition agents.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest_Payload *payload;

/**
 *  The source of this request, e.g., `google`, `facebook`, `slack`. It is set
 *  by Dialogflow-owned servers.
 */
@property(nonatomic, copy, nullable) NSString *source;

/**
 *  Optional. The version of the protocol used for this request. This field is
 *  AoG-specific.
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Optional. This field is set to the value of the `QueryParameters.payload`
 *  field passed in the request. Some integrations that query a Dialogflow agent
 *  may provide additional information in the payload. In particular, for the
 *  Dialogflow Phone Gateway integration, this field has the form: {
 *  "telephony": { "caller_id": "+18558363987" } } Note: The caller ID field
 *  (`caller_id`) will be redacted for Trial Edition agents and populated with
 *  the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for
 *  Essentials Edition agents.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest_Payload : GTLRObject
@end


/**
 *  Represents the result of conversational query or event processing.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1QueryResult : GTLRObject

/** The action name from the matched intent. */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  This field is set to: - `false` if the matched intent has required
 *  parameters and not all of the required parameter values have been collected.
 *  - `true` if all required parameter values have been collected, or if the
 *  matched intent doesn't contain any required parameters.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allRequiredParamsPresent;

/**
 *  Indicates whether the conversational query triggers a cancellation for slot
 *  filling. For more information, see the [cancel slot filling
 *  documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cancelsSlotFilling;

/**
 *  Free-form diagnostic information for the associated detect intent request.
 *  The fields of this data can change without notice, so you should not write
 *  code that depends on its structure. The data may contain: - webhook call
 *  latency - webhook errors
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1QueryResult_DiagnosticInfo *diagnosticInfo;

/** The collection of rich messages to present to the user. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage *> *fulfillmentMessages;

/**
 *  The text to be pronounced to the user or shown on the screen. Note: This is
 *  a legacy field, `fulfillment_messages` should be preferred.
 */
@property(nonatomic, copy, nullable) NSString *fulfillmentText;

/**
 *  The intent that matched the conversational query. Some, not all fields are
 *  filled in this message, including but not limited to: `name`,
 *  `display_name`, `end_interaction` and `is_fallback`.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1Intent *intent;

/**
 *  The intent detection confidence. Values range from 0.0 (completely
 *  uncertain) to 1.0 (completely certain). This value is for informational
 *  purpose only and is only used to help match the best intent within the
 *  classification threshold. This value may change for the same end-user
 *  expression at any time due to a model retraining or change in
 *  implementation. If there are `multiple knowledge_answers` messages, this
 *  value is set to the greatest `knowledgeAnswers.match_confidence` value in
 *  the list.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *intentDetectionConfidence;

/**
 *  The result from Knowledge Connector (if any), ordered by decreasing
 *  `KnowledgeAnswers.match_confidence`.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1KnowledgeAnswers *knowledgeAnswers;

/**
 *  The language that was triggered during intent detection. See [Language
 *  Support](https://cloud.google.com/dialogflow/docs/reference/language) for a
 *  list of the currently supported language codes.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The collection of output contexts. If applicable,
 *  `output_contexts.parameters` contains entries with name `.original`
 *  containing the original parameter values before the query.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1Context *> *outputContexts;

/**
 *  The collection of extracted parameters. Depending on your protocol or client
 *  library language, this is a map, associative array, symbol table,
 *  dictionary, or JSON object composed of a collection of (MapKey, MapValue)
 *  pairs: - MapKey type: string - MapKey value: parameter name - MapValue type:
 *  - If parameter's entity type is a composite entity: map - Else: depending on
 *  parameter value type, could be one of string, number, boolean, null, list or
 *  map - MapValue value: - If parameter's entity type is a composite entity:
 *  map from composite entity property names to property values - Else:
 *  parameter value
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1QueryResult_Parameters *parameters;

/**
 *  The original conversational query text: - If natural language text was
 *  provided as input, `query_text` contains a copy of the input. - If natural
 *  language speech audio was provided as input, `query_text` contains the
 *  speech recognition result. If speech recognizer produced multiple
 *  alternatives, a particular one is picked. - If automatic spell correction is
 *  enabled, `query_text` will contain the corrected user input.
 */
@property(nonatomic, copy, nullable) NSString *queryText;

/**
 *  The sentiment analysis result, which depends on the
 *  `sentiment_analysis_request_config` specified in the request.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1SentimentAnalysisResult *sentimentAnalysisResult;

/**
 *  The Speech recognition confidence between 0.0 and 1.0. A higher number
 *  indicates an estimated greater likelihood that the recognized words are
 *  correct. The default of 0.0 is a sentinel value indicating that confidence
 *  was not set. This field is not guaranteed to be accurate or set. In
 *  particular this field isn't set for StreamingDetectIntent since the
 *  streaming endpoint has separate confidence estimates per portion of the
 *  audio in StreamingRecognitionResult.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *speechRecognitionConfidence;

/**
 *  If the query was fulfilled by a webhook call, this field is set to the value
 *  of the `payload` field returned in the webhook response.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1QueryResult_WebhookPayload *webhookPayload;

/**
 *  If the query was fulfilled by a webhook call, this field is set to the value
 *  of the `source` field returned in the webhook response.
 */
@property(nonatomic, copy, nullable) NSString *webhookSource;

@end


/**
 *  Free-form diagnostic information for the associated detect intent request.
 *  The fields of this data can change without notice, so you should not write
 *  code that depends on its structure. The data may contain: - webhook call
 *  latency - webhook errors
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1QueryResult_DiagnosticInfo : GTLRObject
@end


/**
 *  The collection of extracted parameters. Depending on your protocol or client
 *  library language, this is a map, associative array, symbol table,
 *  dictionary, or JSON object composed of a collection of (MapKey, MapValue)
 *  pairs: - MapKey type: string - MapKey value: parameter name - MapValue type:
 *  - If parameter's entity type is a composite entity: map - Else: depending on
 *  parameter value type, could be one of string, number, boolean, null, list or
 *  map - MapValue value: - If parameter's entity type is a composite entity:
 *  map from composite entity property names to property values - Else:
 *  parameter value
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1QueryResult_Parameters : GTLRObject
@end


/**
 *  If the query was fulfilled by a webhook call, this field is set to the value
 *  of the `payload` field returned in the webhook response.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1QueryResult_WebhookPayload : GTLRObject
@end


/**
 *  The sentiment, such as positive/negative feeling or association, for a unit
 *  of analysis, such as the query text.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1Sentiment : GTLRObject

/**
 *  A non-negative number in the [0, +inf) range, which represents the absolute
 *  magnitude of sentiment, regardless of score (positive or negative).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *magnitude;

/**
 *  Sentiment score between -1.0 (negative sentiment) and 1.0 (positive
 *  sentiment).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  The result of sentiment analysis. Sentiment analysis inspects user input and
 *  identifies the prevailing subjective opinion, especially to determine a
 *  user's attitude as positive, negative, or neutral. For
 *  Participants.DetectIntent, it needs to be configured in
 *  DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it
 *  needs to be configured in StreamingDetectIntentRequest.query_params. And for
 *  Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it
 *  needs to be configured in ConversationProfile.human_agent_assistant_config
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1SentimentAnalysisResult : GTLRObject

/** The sentiment analysis result for `query_text`. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1Sentiment *queryTextSentiment;

@end


/**
 *  A session represents a conversation between a Dialogflow agent and an
 *  end-user. You can create special entities, called session entities, during a
 *  session. Session entities can extend or replace custom entity types and only
 *  exist during the session that they were created for. All session data,
 *  including session entities, is stored by Dialogflow for 20 minutes. For more
 *  information, see the [session entity
 *  guide](https://cloud.google.com/dialogflow/docs/entities-session).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1SessionEntityType : GTLRObject

/**
 *  Required. The collection of entities associated with this session entity
 *  type.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1EntityTypeEntity *> *entities;

/**
 *  Required. Indicates whether the additional data should override or
 *  supplement the custom entity type definition.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1SessionEntityType_EntityOverrideMode_EntityOverrideModeOverride
 *        The collection of session entities overrides the collection of
 *        entities in the corresponding custom entity type. (Value:
 *        "ENTITY_OVERRIDE_MODE_OVERRIDE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1SessionEntityType_EntityOverrideMode_EntityOverrideModeSupplement
 *        The collection of session entities extends the collection of entities
 *        in the corresponding custom entity type. Note: Even in this override
 *        mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`,
 *        `CreateSessionEntityType` and `UpdateSessionEntityType` only return
 *        the additional entities added in this session entity type. If you want
 *        to get the supplemented list, please call EntityTypes.GetEntityType on
 *        the custom entity type and merge. (Value:
 *        "ENTITY_OVERRIDE_MODE_SUPPLEMENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1SessionEntityType_EntityOverrideMode_EntityOverrideModeUnspecified
 *        Not specified. This value should be never used. (Value:
 *        "ENTITY_OVERRIDE_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *entityOverrideMode;

/**
 *  Required. The unique identifier of this session entity type. Supported
 *  formats: - `projects//agent/sessions//entityTypes/` -
 *  `projects//locations//agent/sessions//entityTypes/` -
 *  `projects//agent/environments//users//sessions//entityTypes/` -
 *  `projects//locations//agent/environments/ /users//sessions//entityTypes/` If
 *  `Location ID` is not specified we assume default 'us' location. If
 *  `Environment ID` is not specified, we assume default 'draft' environment. If
 *  `User ID` is not specified, we assume default '-' user. `` must be the
 *  display name of an existing entity type in the same agent that will be
 *  overridden or supplemented.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Metadata for a ConversationProfile.SetSuggestionFeatureConfig operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata : GTLRObject

/**
 *  The resource name of the conversation profile. Format:
 *  `projects//locations//conversationProfiles/`
 */
@property(nonatomic, copy, nullable) NSString *conversationProfile;

/**
 *  Timestamp whe the request was created. The time is measured on server side.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. The participant role to add or update the suggestion feature
 *  config. Only HUMAN_AGENT or END_USER can be used.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_AutomatedAgent
 *        Participant is an automated agent, such as a Dialogflow agent. (Value:
 *        "AUTOMATED_AGENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_EndUser
 *        Participant is an end user that has called or chatted with Dialogflow
 *        services. (Value: "END_USER")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_HumanAgent
 *        Participant is a human agent. (Value: "HUMAN_AGENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_RoleUnspecified
 *        Participant role not set. (Value: "ROLE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *participantRole;

/**
 *  Required. The type of the suggestion feature to add or update.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_ArticleSuggestion
 *        Run article suggestion model for chat. (Value: "ARTICLE_SUGGESTION")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_ConversationSummarization
 *        Run conversation summarization model for chat. (Value:
 *        "CONVERSATION_SUMMARIZATION")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_Faq
 *        Run FAQ model. (Value: "FAQ")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_SmartReply
 *        Run smart reply model for chat. (Value: "SMART_REPLY")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_TypeUnspecified
 *        Unspecified feature type. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *suggestionFeatureType;

@end


/**
 *  Represents a smart reply answer.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1SmartReplyAnswer : GTLRObject

/**
 *  The name of answer record, in the format of
 *  "projects//locations//answerRecords/"
 */
@property(nonatomic, copy, nullable) NSString *answerRecord;

/**
 *  Smart reply confidence. The system's confidence score that this reply is a
 *  good match for this conversation, as a value from 0.0 (completely uncertain)
 *  to 1.0 (completely certain).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** The content of the reply. */
@property(nonatomic, copy, nullable) NSString *reply;

@end


/**
 *  The response message for Participants.SuggestArticles.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1SuggestArticlesResponse : GTLRObject

/** Output only. Articles ordered by score in descending order. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1ArticleAnswer *> *articleAnswers;

/**
 *  Number of messages prior to and including latest_message to compile the
 *  suggestion. It may be smaller than the SuggestArticlesResponse.context_size
 *  field in the request if there aren't that many messages in the conversation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *contextSize;

/**
 *  The name of the latest conversation message used to compile suggestion for.
 *  Format: `projects//locations//conversations//messages/`.
 */
@property(nonatomic, copy, nullable) NSString *latestMessage;

@end


/**
 *  The request message for Participants.SuggestFaqAnswers.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse : GTLRObject

/**
 *  Number of messages prior to and including latest_message to compile the
 *  suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size
 *  field in the request if there aren't that many messages in the conversation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *contextSize;

/** Output only. Answers extracted from FAQ documents. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1FaqAnswer *> *faqAnswers;

/**
 *  The name of the latest conversation message used to compile suggestion for.
 *  Format: `projects//locations//conversations//messages/`.
 */
@property(nonatomic, copy, nullable) NSString *latestMessage;

@end


/**
 *  One response of different type of suggestion response which is used in the
 *  response of Participants.AnalyzeContent and Participants.AnalyzeContent, as
 *  well as HumanAgentAssistantEvent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1SuggestionResult : GTLRObject

/** Error status if the request failed. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleRpcStatus *error;

/** SuggestArticlesResponse if request is for ARTICLE_SUGGESTION. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1SuggestArticlesResponse *suggestArticlesResponse;

/** SuggestFaqAnswersResponse if request is for FAQ_ANSWER. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse *suggestFaqAnswersResponse;

/** SuggestSmartRepliesResponse if request is for SMART_REPLY. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse *suggestSmartRepliesResponse;

@end


/**
 *  The response message for Participants.SuggestSmartReplies.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse : GTLRObject

/**
 *  Number of messages prior to and including latest_message to compile the
 *  suggestion. It may be smaller than the
 *  SuggestSmartRepliesRequest.context_size field in the request if there aren't
 *  that many messages in the conversation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *contextSize;

/**
 *  The name of the latest conversation message used to compile suggestion for.
 *  Format: `projects//locations//conversations//messages/`.
 */
@property(nonatomic, copy, nullable) NSString *latestMessage;

/**
 *  Output only. Multiple reply options provided by smart reply service. The
 *  order is based on the rank of the model prediction. The maximum number of
 *  the returned replies is set in SmartReplyConfig.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1SmartReplyAnswer *> *smartReplyAnswers;

@end


/**
 *  The request message for a webhook call.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1WebhookRequest : GTLRObject

/** Alternative query results from KnowledgeService. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1QueryResult *> *alternativeQueryResults;

/**
 *  Optional. The contents of the original request that was passed to
 *  `[Streaming]DetectIntent` call.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest *originalDetectIntentRequest;

/**
 *  The result of the conversational query or event processing. Contains the
 *  same value as `[Streaming]DetectIntentResponse.query_result`.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1QueryResult *queryResult;

/**
 *  The unique identifier of the response. Contains the same value as
 *  `[Streaming]DetectIntentResponse.response_id`.
 */
@property(nonatomic, copy, nullable) NSString *responseId;

/**
 *  The unique identifier of detectIntent request session. Can be used to
 *  identify end-user inside webhook implementation. Supported formats: -
 *  `projects//agent/sessions/, - `projects//locations//agent/sessions/`, -
 *  `projects//agent/environments//users//sessions/`, -
 *  `projects//locations//agent/environments//users//sessions/`,
 */
@property(nonatomic, copy, nullable) NSString *session;

@end


/**
 *  The response message for a webhook call. This response is validated by the
 *  Dialogflow server. If validation fails, an error will be returned in the
 *  QueryResult.diagnostic_info field. Setting JSON fields to an empty value
 *  with the wrong type is a common error. To avoid this error: - Use `""` for
 *  empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null`
 *  for empty arrays For more information, see the [Protocol Buffers Language
 *  Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1WebhookResponse : GTLRObject

/**
 *  Optional. Indicates that this intent ends an interaction. Some integrations
 *  (e.g., Actions on Google or Dialogflow phone gateway) use this information
 *  to close interaction with an end user. Default is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endInteraction;

/**
 *  Optional. Invokes the supplied events. When this field is set, Dialogflow
 *  ignores the `fulfillment_text`, `fulfillment_messages`, and `payload`
 *  fields.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1EventInput *followupEventInput;

/**
 *  Optional. The rich response messages intended for the end-user. When
 *  provided, Dialogflow uses this field to populate
 *  QueryResult.fulfillment_messages sent to the integration or API caller.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1IntentMessage *> *fulfillmentMessages;

/**
 *  Optional. The text response message intended for the end-user. It is
 *  recommended to use `fulfillment_messages.text.text[0]` instead. When
 *  provided, Dialogflow uses this field to populate
 *  QueryResult.fulfillment_text sent to the integration or API caller.
 */
@property(nonatomic, copy, nullable) NSString *fulfillmentText;

/**
 *  Indicates that a live agent should be brought in to handle the interaction
 *  with the user. In most cases, when you set this flag to true, you would also
 *  want to set end_interaction to true as well. Default is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *liveAgentHandoff;

/**
 *  Optional. The collection of output contexts that will overwrite currently
 *  active contexts for the session and reset their lifespans. When provided,
 *  Dialogflow uses this field to populate QueryResult.output_contexts sent to
 *  the integration or API caller.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1Context *> *outputContexts;

/**
 *  Optional. This field can be used to pass custom data from your webhook to
 *  the integration or API caller. Arbitrary JSON objects are supported. When
 *  provided, Dialogflow uses this field to populate QueryResult.webhook_payload
 *  sent to the integration or API caller. This field is also used by the
 *  [Google Assistant
 *  integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for
 *  rich response messages. See the format definition at [Google Assistant
 *  Dialogflow webhook
 *  format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2beta1WebhookResponse_Payload *payload;

/**
 *  Optional. Additional session entity types to replace or extend developer
 *  entity types with. The entity synonyms apply to all languages and persist
 *  for the session. Setting this data from a webhook overwrites the session
 *  entity types that have been set using `detectIntent`,
 *  `streamingDetectIntent` or SessionEntityType management methods.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2beta1SessionEntityType *> *sessionEntityTypes;

/**
 *  Optional. A custom field used to identify the webhook source. Arbitrary
 *  strings are supported. When provided, Dialogflow uses this field to populate
 *  QueryResult.webhook_source sent to the integration or API caller.
 */
@property(nonatomic, copy, nullable) NSString *source;

@end


/**
 *  Optional. This field can be used to pass custom data from your webhook to
 *  the integration or API caller. Arbitrary JSON objects are supported. When
 *  provided, Dialogflow uses this field to populate QueryResult.webhook_payload
 *  sent to the integration or API caller. This field is also used by the
 *  [Google Assistant
 *  integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for
 *  rich response messages. See the format definition at [Google Assistant
 *  Dialogflow webhook
 *  format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2beta1WebhookResponse_Payload : GTLRObject
@end


/**
 *  Metadata for a ConversationProfile.ClearSuggestionFeatureConfig operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata : GTLRObject

/**
 *  The resource name of the conversation profile. Format:
 *  `projects//locations//conversationProfiles/`
 */
@property(nonatomic, copy, nullable) NSString *conversationProfile;

/**
 *  Timestamp whe the request was created. The time is measured on server side.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. The participant role to remove the suggestion feature config. Only
 *  HUMAN_AGENT or END_USER can be used.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_AutomatedAgent
 *        Participant is an automated agent, such as a Dialogflow agent. (Value:
 *        "AUTOMATED_AGENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_EndUser
 *        Participant is an end user that has called or chatted with Dialogflow
 *        services. (Value: "END_USER")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_HumanAgent
 *        Participant is a human agent. (Value: "HUMAN_AGENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_ParticipantRole_RoleUnspecified
 *        Participant role not set. (Value: "ROLE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *participantRole;

/**
 *  Required. The type of the suggestion feature to remove.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_ArticleSuggestion
 *        Run article suggestion model for chat. (Value: "ARTICLE_SUGGESTION")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_Faq
 *        Run FAQ model for chat. (Value: "FAQ")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_SmartReply
 *        Run smart reply model for chat. (Value: "SMART_REPLY")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_TypeUnspecified
 *        Unspecified feature type. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *suggestionFeatureType;

@end


/**
 *  Dialogflow contexts are similar to natural language context. If a person
 *  says to you "they are orange", you need context in order to understand what
 *  "they" is referring to. Similarly, for Dialogflow to handle an end-user
 *  expression like that, it needs to be provided with context in order to
 *  correctly match an intent. Using contexts, you can control the flow of a
 *  conversation. You can configure contexts for an intent by setting input and
 *  output contexts, which are identified by string names. When an intent is
 *  matched, any configured output contexts for that intent become active. While
 *  any contexts are active, Dialogflow is more likely to match intents that are
 *  configured with input contexts that correspond to the currently active
 *  contexts. For more information about context, see the [Contexts
 *  guide](https://cloud.google.com/dialogflow/docs/contexts-overview).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2Context : GTLRObject

/**
 *  Optional. The number of conversational query requests after which the
 *  context expires. The default is `0`. If set to `0`, the context expires
 *  immediately. Contexts expire automatically after 20 minutes if there are no
 *  matching queries.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *lifespanCount;

/**
 *  Required. The unique identifier of the context. Format:
 *  `projects//agent/sessions//contexts/`, or
 *  `projects//agent/environments//users//sessions//contexts/`. The `Context ID`
 *  is always converted to lowercase, may only contain characters in
 *  a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not
 *  specified, we assume default 'draft' environment. If `User ID` is not
 *  specified, we assume default '-' user. The following context names are
 *  reserved for internal use by Dialogflow. You should not use these contexts
 *  or create contexts with these names: * `__system_counters__` *
 *  `*_id_dialog_context` * `*_dialog_params_size`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The collection of parameters associated with this context.
 *  Depending on your protocol or client library language, this is a map,
 *  associative array, symbol table, dictionary, or JSON object composed of a
 *  collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey
 *  value: parameter name - MapValue type: - If parameter's entity type is a
 *  composite entity: map - Else: depending on parameter value type, could be
 *  one of string, number, boolean, null, list or map - MapValue value: - If
 *  parameter's entity type is a composite entity: map from composite entity
 *  property names to property values - Else: parameter value
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2Context_Parameters *parameters;

@end


/**
 *  Optional. The collection of parameters associated with this context.
 *  Depending on your protocol or client library language, this is a map,
 *  associative array, symbol table, dictionary, or JSON object composed of a
 *  collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey
 *  value: parameter name - MapValue type: - If parameter's entity type is a
 *  composite entity: map - Else: depending on parameter value type, could be
 *  one of string, number, boolean, null, list or map - MapValue value: - If
 *  parameter's entity type is a composite entity: map from composite entity
 *  property names to property values - Else: parameter value
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2Context_Parameters : GTLRObject
@end


/**
 *  Represents a notification sent to Pub/Sub subscribers for conversation
 *  lifecycle events.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2ConversationEvent : GTLRObject

/**
 *  The unique identifier of the conversation this notification refers to.
 *  Format: `projects//conversations/`.
 */
@property(nonatomic, copy, nullable) NSString *conversation;

/**
 *  More detailed information about an error. Only set for type
 *  UNRECOVERABLE_ERROR_IN_PHONE_CALL.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleRpcStatus *errorStatus;

/** Payload of NEW_MESSAGE event. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2Message *newMessagePayload NS_RETURNS_NOT_RETAINED;

/**
 *  The type of the event that this notification refers to.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ConversationEvent_Type_ConversationFinished
 *        An existing conversation has closed. This is fired when a telephone
 *        call is terminated, or a conversation is closed via the API. (Value:
 *        "CONVERSATION_FINISHED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ConversationEvent_Type_ConversationStarted
 *        A new conversation has been opened. This is fired when a telephone
 *        call is answered, or a conversation is created via the API. (Value:
 *        "CONVERSATION_STARTED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ConversationEvent_Type_HumanInterventionNeeded
 *        An existing conversation has received notification from Dialogflow
 *        that human intervention is required. (Value:
 *        "HUMAN_INTERVENTION_NEEDED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ConversationEvent_Type_NewMessage
 *        An existing conversation has received a new message, either from API
 *        or telephony. It is configured in
 *        ConversationProfile.new_message_event_notification_config (Value:
 *        "NEW_MESSAGE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ConversationEvent_Type_TypeUnspecified
 *        Type not set. (Value: "TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ConversationEvent_Type_UnrecoverableError
 *        Unrecoverable error during a telephone call. In general
 *        non-recoverable errors only occur if something was misconfigured in
 *        the ConversationProfile corresponding to the call. After a
 *        non-recoverable error, Dialogflow may stop responding. We don't fire
 *        this event: * in an API call because we can directly return the error,
 *        or, * when we can recover from an error. (Value:
 *        "UNRECOVERABLE_ERROR")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents a conversation model.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2ConversationModel : GTLRObject

/** Metadata for article suggestion models. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2ArticleSuggestionModelMetadata *articleSuggestionModelMetadata;

/** Output only. Creation time of this model. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Required. Datasets used to create model. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2InputDataset *> *datasets;

/** Required. The display name of the model. At most 64 bytes long. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Language code for the conversation model. If not specified, the language is
 *  en-US. Language at ConversationModel should be set for all non en-us
 *  languages. This should be a
 *  [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
 *  Example: "en-US".
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  ConversationModel resource name. Format: `projects//conversationModels/`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Metadata for smart reply models. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2SmartReplyModelMetadata *smartReplyModelMetadata;

/**
 *  Output only. State of the model. A model can only serve prediction requests
 *  after it gets deployed.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Creating
 *        Model being created. (Value: "CREATING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Deleting
 *        Model is deleting. (Value: "DELETING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Deployed
 *        Model is deployed and ready to use. (Value: "DEPLOYED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Deploying
 *        Model is deploying. (Value: "DEPLOYING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Failed
 *        Model is in error state. Not ready to deploy and use. (Value:
 *        "FAILED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Pending
 *        Model is being created but the training has not started, The model may
 *        remain in this state until there is enough capacity to start training.
 *        (Value: "PENDING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_StateUnspecified
 *        Should not be used, an un-set enum has this value by default. (Value:
 *        "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Undeployed
 *        Model is not deployed but ready to deploy. (Value: "UNDEPLOYED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2ConversationModel_State_Undeploying
 *        Model is undeploying. (Value: "UNDEPLOYING")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Metadata for ConversationDatasets.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2CreateConversationDatasetOperationMetadata : GTLRObject

/**
 *  The resource name of the conversation dataset that will be created. Format:
 *  `projects//locations//conversationDatasets/`
 */
@property(nonatomic, copy, nullable) NSString *conversationDataset;

@end


/**
 *  Metadata for a ConversationModels.CreateConversationModelEvaluation
 *  operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata : GTLRObject

/**
 *  The resource name of the conversation model. Format:
 *  `projects//locations//conversationModels/`
 */
@property(nonatomic, copy, nullable) NSString *conversationModel;

/**
 *  The resource name of the conversation model. Format:
 *  `projects//locations//conversationModels//evaluations/`
 */
@property(nonatomic, copy, nullable) NSString *conversationModelEvaluation;

/**
 *  Timestamp when the request to create conversation model was submitted. The
 *  time is measured on server side.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  State of CreateConversationModel operation.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata_State_Cancelled
 *        The operation is cancelled. (Value: "CANCELLED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata_State_Failed
 *        The operation has failed. (Value: "FAILED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata_State_Initializing
 *        The operation is being prepared. (Value: "INITIALIZING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata_State_Running
 *        The operation is running. (Value: "RUNNING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata_State_StateUnspecified
 *        Operation status not specified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata_State_Succeeded
 *        The operation has succeeded. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Metadata for a ConversationModels.CreateConversationModel operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata : GTLRObject

/**
 *  The resource name of the conversation model. Format:
 *  `projects//conversationModels/`
 */
@property(nonatomic, copy, nullable) NSString *conversationModel;

/**
 *  Timestamp when the request to create conversation model is submitted. The
 *  time is measured on server side.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  State of CreateConversationModel operation.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata_State_Cancelled
 *        The training has been cancelled. (Value: "CANCELLED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata_State_Cancelling
 *        The training is in cancelling state. (Value: "CANCELLING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata_State_Failed
 *        The training has succeeded. (Value: "FAILED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata_State_Pending
 *        Request is submitted, but training has not started yet. The model may
 *        remain in this state until there is enough capacity to start training.
 *        (Value: "PENDING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata_State_StateUnspecified
 *        Invalid. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata_State_Succeeded
 *        The training has succeeded. (Value: "SUCCEEDED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2CreateConversationModelOperationMetadata_State_Training
 *        Custom model is training. (Value: "TRAINING")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Metadata for ConversationDatasets.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2DeleteConversationDatasetOperationMetadata : GTLRObject
@end


/**
 *  Metadata for a ConversationModels.DeleteConversationModel operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2DeleteConversationModelOperationMetadata : GTLRObject

/**
 *  The resource name of the conversation model. Format:
 *  `projects//conversationModels/`
 */
@property(nonatomic, copy, nullable) NSString *conversationModel;

/**
 *  Timestamp when delete conversation model request was created. The time is
 *  measured on server side.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

@end


/**
 *  Metadata for a ConversationModels.DeployConversationModel operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2DeployConversationModelOperationMetadata : GTLRObject

/**
 *  The resource name of the conversation model. Format:
 *  `projects//conversationModels/`
 */
@property(nonatomic, copy, nullable) NSString *conversationModel;

/**
 *  Timestamp when request to deploy conversation model was submitted. The time
 *  is measured on server side.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

@end


/**
 *  Each intent parameter has a type, called the entity type, which dictates
 *  exactly how data from an end-user expression is extracted. Dialogflow
 *  provides predefined system entities that can match many common types of
 *  data. For example, there are system entities for matching dates, times,
 *  colors, email addresses, and so on. You can also create your own custom
 *  entities for matching custom data. For example, you could define a vegetable
 *  entity that can match the types of vegetables available for purchase with a
 *  grocery store agent. For more information, see the [Entity
 *  guide](https://cloud.google.com/dialogflow/docs/entities-overview).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2EntityType : GTLRObject

/**
 *  Optional. Indicates whether the entity type can be automatically expanded.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2EntityType_AutoExpansionMode_AutoExpansionModeDefault
 *        Allows an agent to recognize values that have not been explicitly
 *        listed in the entity. (Value: "AUTO_EXPANSION_MODE_DEFAULT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2EntityType_AutoExpansionMode_AutoExpansionModeUnspecified
 *        Auto expansion disabled for the entity. (Value:
 *        "AUTO_EXPANSION_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *autoExpansionMode;

/** Required. The name of the entity type. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. Enables fuzzy entity extraction during classification.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableFuzzyExtraction;

/**
 *  Optional. The collection of entity entries associated with the entity type.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2EntityTypeEntity *> *entities;

/**
 *  Required. Indicates the kind of entity type.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2EntityType_Kind_KindList
 *        List entity types contain a set of entries that do not map to
 *        reference values. However, list entity types can contain references to
 *        other entity types (with or without aliases). (Value: "KIND_LIST")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2EntityType_Kind_KindMap Map
 *        entity types allow mapping of a group of synonyms to a reference
 *        value. (Value: "KIND_MAP")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2EntityType_Kind_KindRegexp
 *        Regexp entity types allow to specify regular expressions in entries
 *        values. (Value: "KIND_REGEXP")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2EntityType_Kind_KindUnspecified
 *        Not specified. This value should be never used. (Value:
 *        "KIND_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The unique identifier of the entity type. Required for
 *  EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods.
 *  Format: `projects//agent/entityTypes/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  An **entity entry** for an associated entity type.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2EntityTypeEntity : GTLRObject

/**
 *  Required. A collection of value synonyms. For example, if the entity type is
 *  *vegetable*, and `value` is *scallions*, a synonym could be *green onions*.
 *  For `KIND_LIST` entity types: * This collection must contain exactly one
 *  synonym equal to `value`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *synonyms;

/**
 *  Required. The primary value associated with this entity entry. For example,
 *  if the entity type is *vegetable*, the value could be *scallions*. For
 *  `KIND_MAP` entity types: * A reference value to be used in place of
 *  synonyms. For `KIND_LIST` entity types: * A string that can contain
 *  references to other entity types (with or without aliases).
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Events allow for matching intents by event name instead of the natural
 *  language input. For instance, input `` can trigger a personalized welcome
 *  response. The parameter `name` may be used by the agent in the response:
 *  `"Hello #welcome_event.name! What can I do for you today?"`.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2EventInput : GTLRObject

/**
 *  Required. The language of this query. See [Language
 *  Support](https://cloud.google.com/dialogflow/docs/reference/language) for a
 *  list of the currently supported language codes. Note that queries in the
 *  same session do not necessarily need to specify the same language. This
 *  field is ignored when used in the context of a
 *  WebhookResponse.followup_event_input field, because the language was already
 *  defined in the originating detect intent request.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/** Required. The unique identifier of the event. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The collection of parameters associated with the event. Depending on your
 *  protocol or client library language, this is a map, associative array,
 *  symbol table, dictionary, or JSON object composed of a collection of
 *  (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter
 *  name - MapValue type: - If parameter's entity type is a composite entity:
 *  map - Else: depending on parameter value type, could be one of string,
 *  number, boolean, null, list or map - MapValue value: - If parameter's entity
 *  type is a composite entity: map from composite entity property names to
 *  property values - Else: parameter value
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2EventInput_Parameters *parameters;

@end


/**
 *  The collection of parameters associated with the event. Depending on your
 *  protocol or client library language, this is a map, associative array,
 *  symbol table, dictionary, or JSON object composed of a collection of
 *  (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter
 *  name - MapValue type: - If parameter's entity type is a composite entity:
 *  map - Else: depending on parameter value type, could be one of string,
 *  number, boolean, null, list or map - MapValue value: - If parameter's entity
 *  type is a composite entity: map from composite entity property names to
 *  property values - Else: parameter value
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2EventInput_Parameters : GTLRObject
@end


/**
 *  The response message for Agents.ExportAgent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2ExportAgentResponse : GTLRObject

/**
 *  Zip compressed raw byte content for agent.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *agentContent;

/**
 *  The URI to a file containing the exported agent. This field is populated
 *  only if `agent_uri` is specified in `ExportAgentRequest`.
 */
@property(nonatomic, copy, nullable) NSString *agentUri;

@end


/**
 *  Metadata related to the Export Data Operations (e.g. ExportDocument).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2ExportOperationMetadata : GTLRObject

/** Cloud Storage file path of the exported data. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2GcsDestination *exportedGcsDestination;

@end


/**
 *  Represents answer from "frequently asked questions".
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2FaqAnswer : GTLRObject

/** The piece of text from the `source` knowledge base document. */
@property(nonatomic, copy, nullable) NSString *answer;

/**
 *  The name of answer record, in the format of
 *  "projects//locations//answerRecords/"
 */
@property(nonatomic, copy, nullable) NSString *answerRecord;

/**
 *  The system's confidence score that this Knowledge answer is a good match for
 *  this conversational query, range from 0.0 (completely uncertain) to 1.0
 *  (completely certain).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/**
 *  A map that contains metadata about the answer and the document from which it
 *  originates.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2FaqAnswer_Metadata *metadata;

/** The corresponding FAQ question. */
@property(nonatomic, copy, nullable) NSString *question;

/**
 *  Indicates which Knowledge Document this answer was extracted from. Format:
 *  `projects//locations//agent/knowledgeBases//documents/`.
 */
@property(nonatomic, copy, nullable) NSString *source;

@end


/**
 *  A map that contains metadata about the answer and the document from which it
 *  originates.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2FaqAnswer_Metadata : GTLRObject
@end


/**
 *  Google Cloud Storage location for the output.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2GcsDestination : GTLRObject

/**
 *  The Google Cloud Storage URIs for the output. A URI is of the form:
 *  gs://bucket/object-prefix-or-name Whether a prefix or name is used depends
 *  on the use case. The requesting user must have "write-permission" to the
 *  bucket.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Represents a notification sent to Cloud Pub/Sub subscribers for human agent
 *  assistant events in a specific conversation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2HumanAgentAssistantEvent : GTLRObject

/**
 *  The conversation this notification refers to. Format:
 *  `projects//conversations/`.
 */
@property(nonatomic, copy, nullable) NSString *conversation;

/**
 *  The participant that the suggestion is compiled for. Format:
 *  `projects//conversations//participants/`. It will not be set in legacy
 *  workflow.
 */
@property(nonatomic, copy, nullable) NSString *participant;

/** The suggestion results payload that this notification refers to. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2SuggestionResult *> *suggestionResults;

@end


/**
 *  Metadata for a ConversationDatasets.ImportConversationData operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2ImportConversationDataOperationMetadata : GTLRObject

/**
 *  The resource name of the imported conversation dataset. Format:
 *  `projects//locations//conversationDatasets/`
 */
@property(nonatomic, copy, nullable) NSString *conversationDataset;

/**
 *  Timestamp when import conversation data request was created. The time is
 *  measured on server side.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Partial failures are failures that don't fail the whole long running
 *  operation, e.g. single files that couldn't be read.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleRpcStatus *> *partialFailures;

@end


/**
 *  Response used for ConversationDatasets.ImportConversationData long running
 *  operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2ImportConversationDataOperationResponse : GTLRObject

/**
 *  The resource name of the imported conversation dataset. Format:
 *  `projects//locations//conversationDatasets/`
 */
@property(nonatomic, copy, nullable) NSString *conversationDataset;

/**
 *  Number of conversations imported successfully.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *importCount;

@end


/**
 *  Response message for Documents.ImportDocuments.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2ImportDocumentsResponse : GTLRObject

/** Includes details about skipped documents or any other warnings. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleRpcStatus *> *warnings;

@end


/**
 *  InputDataset used to create model or do evaluation. NextID:5
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2InputDataset : GTLRObject

/**
 *  Required. ConversationDataset resource name. Format:
 *  `projects//locations//conversationDatasets/`
 */
@property(nonatomic, copy, nullable) NSString *dataset;

@end


/**
 *  An intent categorizes an end-user's intention for one conversation turn. For
 *  each agent, you define many intents, where your combined intents can handle
 *  a complete conversation. When an end-user writes or says something, referred
 *  to as an end-user expression or end-user input, Dialogflow matches the
 *  end-user input to the best intent in your agent. Matching an intent is also
 *  known as intent classification. For more information, see the [intent
 *  guide](https://cloud.google.com/dialogflow/docs/intents-overview).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2Intent : GTLRObject

/**
 *  Optional. The name of the action associated with the intent. Note: The
 *  action name must not contain whitespaces.
 */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  Optional. The list of platforms for which the first responses will be copied
 *  from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *defaultResponsePlatforms;

/** Required. The name of this intent. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. Indicates that this intent ends an interaction. Some integrations
 *  (e.g., Actions on Google or Dialogflow phone gateway) use this information
 *  to close interaction with an end user. Default is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endInteraction;

/**
 *  Optional. The collection of event names that trigger the intent. If the
 *  collection of input contexts is not empty, all of the contexts must be
 *  present in the active user session for an event to trigger this intent.
 *  Event names are limited to 150 characters.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *events;

/**
 *  Output only. Read-only. Information about all followup intents that have
 *  this intent as a direct or indirect parent. We populate this field only in
 *  the output.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentFollowupIntentInfo *> *followupIntentInfo;

/**
 *  Optional. The list of context names required for this intent to be
 *  triggered. Format: `projects//agent/sessions/-/contexts/`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *inputContextNames;

/**
 *  Optional. Indicates whether this is a fallback intent.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isFallback;

/**
 *  Optional. Indicates that a live agent should be brought in to handle the
 *  interaction with the user. In most cases, when you set this flag to true,
 *  you would also want to set end_interaction to true as well. Default is
 *  false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *liveAgentHandoff;

/**
 *  Optional. The collection of rich messages corresponding to the `Response`
 *  field in the Dialogflow console.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentMessage *> *messages;

/**
 *  Optional. Indicates whether Machine Learning is disabled for the intent.
 *  Note: If `ml_disabled` setting is set to true, then this intent is not taken
 *  into account during inference in `ML ONLY` match mode. Also, auto-markup in
 *  the UI is turned off.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mlDisabled;

/**
 *  Optional. The unique identifier of this intent. Required for
 *  Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format:
 *  `projects//agent/intents/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The collection of contexts that are activated when the intent is
 *  matched. Context messages in this collection should not set the parameters
 *  field. Setting the `lifespan_count` to 0 will reset the context when the
 *  intent is matched. Format: `projects//agent/sessions/-/contexts/`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2Context *> *outputContexts;

/** Optional. The collection of parameters associated with the intent. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentParameter *> *parameters;

/**
 *  Read-only after creation. The unique identifier of the parent intent in the
 *  chain of followup intents. You can set this field when creating an intent,
 *  for example with CreateIntent or BatchUpdateIntents, in order to make this
 *  intent a followup intent. It identifies the parent followup intent. Format:
 *  `projects//agent/intents/`.
 */
@property(nonatomic, copy, nullable) NSString *parentFollowupIntentName;

/**
 *  Optional. The priority of this intent. Higher numbers represent higher
 *  priorities. - If the supplied value is unspecified or 0, the service
 *  translates the value to 500,000, which corresponds to the `Normal` priority
 *  in the console. - If the supplied value is negative, the intent is ignored
 *  in runtime detect intent requests.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priority;

/**
 *  Optional. Indicates whether to delete all contexts in the current session
 *  when this intent is matched.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *resetContexts;

/**
 *  Output only. Read-only. The unique identifier of the root intent in the
 *  chain of followup intents. It identifies the correct followup intents chain
 *  for this intent. We populate this field only in the output. Format:
 *  `projects//agent/intents/`.
 */
@property(nonatomic, copy, nullable) NSString *rootFollowupIntentName;

/** Optional. The collection of examples that the agent is trained on. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentTrainingPhrase *> *trainingPhrases;

/**
 *  Optional. Indicates whether webhooks are enabled for the intent.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2Intent_WebhookState_WebhookStateEnabled
 *        Webhook is enabled in the agent and in the intent. (Value:
 *        "WEBHOOK_STATE_ENABLED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2Intent_WebhookState_WebhookStateEnabledForSlotFilling
 *        Webhook is enabled in the agent and in the intent. Also, each slot
 *        filling prompt is forwarded to the webhook. (Value:
 *        "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2Intent_WebhookState_WebhookStateUnspecified
 *        Webhook is disabled in the agent and in the intent. (Value:
 *        "WEBHOOK_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *webhookState;

@end


/**
 *  Represents a single followup intent in the chain.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentFollowupIntentInfo : GTLRObject

/**
 *  The unique identifier of the followup intent. Format:
 *  `projects//agent/intents/`.
 */
@property(nonatomic, copy, nullable) NSString *followupIntentName;

/**
 *  The unique identifier of the followup intent's parent. Format:
 *  `projects//agent/intents/`.
 */
@property(nonatomic, copy, nullable) NSString *parentFollowupIntentName;

@end


/**
 *  A rich response message. Corresponds to the intent `Response` field in the
 *  Dialogflow console. For more information, see [Rich response
 *  messages](https://cloud.google.com/dialogflow/docs/intents-rich-messages).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessage : GTLRObject

/** The basic card response for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBasicCard *basicCard;

/** Browse carousel card for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard *browseCarouselCard;

/** The card response. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageCard *card;

/** The carousel card response for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageCarouselSelect *carouselSelect;

/** The image response. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageImage *image;

/** The link out suggestion chip for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion *linkOutSuggestion;

/** The list card response for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageListSelect *listSelect;

/** The media content card for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageMediaContent *mediaContent;

/** A custom platform-specific response. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Payload *payload;

/**
 *  Optional. The platform that this message is intended for.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_ActionsOnGoogle
 *        Google Assistant See [Dialogflow webhook
 *        format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
 *        (Value: "ACTIONS_ON_GOOGLE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_Facebook
 *        Facebook. (Value: "FACEBOOK")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_GoogleHangouts
 *        Google Hangouts. (Value: "GOOGLE_HANGOUTS")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_Kik
 *        Kik. (Value: "KIK")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_Line
 *        Line. (Value: "LINE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_PlatformUnspecified
 *        Default platform. (Value: "PLATFORM_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_Skype
 *        Skype. (Value: "SKYPE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_Slack
 *        Slack. (Value: "SLACK")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_Telegram
 *        Telegram. (Value: "TELEGRAM")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Platform_Viber
 *        Viber. (Value: "VIBER")
 */
@property(nonatomic, copy, nullable) NSString *platform;

/** The quick replies response. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageQuickReplies *quickReplies;

/** The voice and text-only responses for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSimpleResponses *simpleResponses;

/** The suggestion chips for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSuggestions *suggestions;

/** Table card for Actions on Google. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageTableCard *tableCard;

/** The text response. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageText *text;

@end


/**
 *  A custom platform-specific response.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessage_Payload : GTLRObject
@end


/**
 *  The basic card message. Useful for displaying information.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBasicCard : GTLRObject

/** Optional. The collection of card buttons. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBasicCardButton *> *buttons;

/** Required, unless image is present. The body text of the card. */
@property(nonatomic, copy, nullable) NSString *formattedText;

/** Optional. The image for the card. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageImage *image;

/** Optional. The subtitle of the card. */
@property(nonatomic, copy, nullable) NSString *subtitle;

/** Optional. The title of the card. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  The button object that appears at the bottom of a card.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBasicCardButton : GTLRObject

/** Required. Action to take when a user taps on the button. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction *openUriAction;

/** Required. The title of the button. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Opens the given URI.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction : GTLRObject

/** Required. The HTTP or HTTPS scheme URI. */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  Browse Carousel Card for Actions on Google.
 *  https://developers.google.com/actions/assistant/responses#browsing_carousel
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard : GTLRCollectionObject

/**
 *  Optional. Settings for displaying the image. Applies to every image in
 *  items.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard_ImageDisplayOptions_BlurredBackground
 *        Pad the gaps between image and image frame with a blurred copy of the
 *        same image. (Value: "BLURRED_BACKGROUND")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard_ImageDisplayOptions_Cropped
 *        Image is scaled such that the image width and height match or exceed
 *        the container dimensions. This may crop the top and bottom of the
 *        image if the scaled image height is greater than the container height,
 *        or crop the left and right of the image if the scaled image width is
 *        greater than the container width. This is similar to "Zoom Mode" on a
 *        widescreen TV when playing a 4:3 video. (Value: "CROPPED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard_ImageDisplayOptions_Gray
 *        Fill the gaps between the image and the image container with gray
 *        bars. (Value: "GRAY")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard_ImageDisplayOptions_ImageDisplayOptionsUnspecified
 *        Fill the gaps between the image and the image container with gray
 *        bars. (Value: "IMAGE_DISPLAY_OPTIONS_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard_ImageDisplayOptions_White
 *        Fill the gaps between the image and the image container with white
 *        bars. (Value: "WHITE")
 */
@property(nonatomic, copy, nullable) NSString *imageDisplayOptions;

/**
 *  Required. List of items in the Browse Carousel Card. Minimum of two items,
 *  maximum of ten.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem *> *items;

@end


/**
 *  Browsing carousel tile
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem : GTLRObject

/**
 *  Optional. Description of the carousel item. Maximum of four lines of text.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. Text that appears at the bottom of the Browse Carousel Card.
 *  Maximum of one line of text.
 */
@property(nonatomic, copy, nullable) NSString *footer;

/** Optional. Hero image for the carousel item. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageImage *image;

/** Required. Action to present to the user. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction *openUriAction;

/** Required. Title of the carousel item. Maximum of two lines of text. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Actions on Google action to open a given url.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction : GTLRObject

/** Required. URL */
@property(nonatomic, copy, nullable) NSString *url;

/**
 *  Optional. Specifies the type of viewer that is used when opening the URL.
 *  Defaults to opening via web browser.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction_UrlTypeHint_AmpAction
 *        Url would be an amp action (Value: "AMP_ACTION")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction_UrlTypeHint_AmpContent
 *        URL that points directly to AMP content, or to a canonical URL which
 *        refers to AMP content via . (Value: "AMP_CONTENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction_UrlTypeHint_UrlTypeHintUnspecified
 *        Unspecified (Value: "URL_TYPE_HINT_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *urlTypeHint;

@end


/**
 *  The card response message.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageCard : GTLRObject

/** Optional. The collection of card buttons. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageCardButton *> *buttons;

/** Optional. The public URI to an image file for the card. */
@property(nonatomic, copy, nullable) NSString *imageUri;

/** Optional. The subtitle of the card. */
@property(nonatomic, copy, nullable) NSString *subtitle;

/** Optional. The title of the card. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Contains information about a button.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageCardButton : GTLRObject

/** Optional. The text to send back to the Dialogflow API or a URI to open. */
@property(nonatomic, copy, nullable) NSString *postback;

/** Optional. The text to show on the button. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  The card for presenting a carousel of options to select from.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageCarouselSelect : GTLRCollectionObject

/**
 *  Required. Carousel items.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageCarouselSelectItem *> *items;

@end


/**
 *  An item in the carousel.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageCarouselSelectItem : GTLRObject

/**
 *  Optional. The body text of the card.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Optional. The image to display. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageImage *image;

/** Required. Additional info about the option item. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSelectItemInfo *info;

/** Required. Title of the carousel item. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Column properties for TableCard.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageColumnProperties : GTLRObject

/** Required. Column heading. */
@property(nonatomic, copy, nullable) NSString *header;

/**
 *  Optional. Defines text alignment for all cells in this column.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageColumnProperties_HorizontalAlignment_Center
 *        Text is centered in the column. (Value: "CENTER")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageColumnProperties_HorizontalAlignment_HorizontalAlignmentUnspecified
 *        Text is aligned to the leading edge of the column. (Value:
 *        "HORIZONTAL_ALIGNMENT_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageColumnProperties_HorizontalAlignment_Leading
 *        Text is aligned to the leading edge of the column. (Value: "LEADING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageColumnProperties_HorizontalAlignment_Trailing
 *        Text is aligned to the trailing edge of the column. (Value:
 *        "TRAILING")
 */
@property(nonatomic, copy, nullable) NSString *horizontalAlignment;

@end


/**
 *  The image response message.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageImage : GTLRObject

/**
 *  Optional. A text description of the image to be used for accessibility,
 *  e.g., screen readers.
 */
@property(nonatomic, copy, nullable) NSString *accessibilityText;

/** Optional. The public URI to an image file. */
@property(nonatomic, copy, nullable) NSString *imageUri;

@end


/**
 *  The suggestion chip message that allows the user to jump out to the app or
 *  website associated with this agent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion : GTLRObject

/** Required. The name of the app or site this chip is linking to. */
@property(nonatomic, copy, nullable) NSString *destinationName;

/**
 *  Required. The URI of the app or site to open when the user taps the
 *  suggestion chip.
 */
@property(nonatomic, copy, nullable) NSString *uri;

@end


/**
 *  The card for presenting a list of options to select from.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageListSelect : GTLRCollectionObject

/**
 *  Required. List items.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageListSelectItem *> *items;

/** Optional. Subtitle of the list. */
@property(nonatomic, copy, nullable) NSString *subtitle;

/** Optional. The overall title of the list. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  An item in the list.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageListSelectItem : GTLRObject

/**
 *  Optional. The main text describing the item.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Optional. The image to display. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageImage *image;

/** Required. Additional information about this option. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSelectItemInfo *info;

/** Required. The title of the list item. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  The media content card for Actions on Google.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageMediaContent : GTLRObject

/** Required. List of media objects. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject *> *mediaObjects;

/**
 *  Optional. What type of media is the content (ie "audio").
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageMediaContent_MediaType_Audio
 *        Response media type is audio. (Value: "AUDIO")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentMessageMediaContent_MediaType_ResponseMediaTypeUnspecified
 *        Unspecified. (Value: "RESPONSE_MEDIA_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *mediaType;

@end


/**
 *  Response media object for media content card.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject : GTLRObject

/** Required. Url where the media is stored. */
@property(nonatomic, copy, nullable) NSString *contentUrl;

/**
 *  Optional. Description of media card.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Optional. Icon to display above media content. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageImage *icon;

/** Optional. Image to display above media content. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageImage *largeImage;

/** Required. Name of media card. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  The quick replies response message.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageQuickReplies : GTLRObject

/** Optional. The collection of quick replies. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *quickReplies;

/** Optional. The title of the collection of quick replies. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Additional info about the select item for when it is triggered in a dialog.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSelectItemInfo : GTLRObject

/**
 *  Required. A unique key that will be sent back to the agent if this response
 *  is given.
 */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  Optional. A list of synonyms that can also be used to trigger this item in
 *  dialog.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *synonyms;

@end


/**
 *  The simple response message containing speech or text.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSimpleResponse : GTLRObject

/** Optional. The text to display. */
@property(nonatomic, copy, nullable) NSString *displayText;

/**
 *  One of text_to_speech or ssml must be provided. Structured spoken response
 *  to the user in the SSML format. Mutually exclusive with text_to_speech.
 */
@property(nonatomic, copy, nullable) NSString *ssml;

/**
 *  One of text_to_speech or ssml must be provided. The plain text of the speech
 *  output. Mutually exclusive with ssml.
 */
@property(nonatomic, copy, nullable) NSString *textToSpeech;

@end


/**
 *  The collection of simple response candidates. This message in
 *  `QueryResult.fulfillment_messages` and
 *  `WebhookResponse.fulfillment_messages` should contain only one
 *  `SimpleResponse`.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSimpleResponses : GTLRObject

/** Required. The list of simple responses. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSimpleResponse *> *simpleResponses;

@end


/**
 *  The suggestion chip message that the user can tap to quickly post a reply to
 *  the conversation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSuggestion : GTLRObject

/** Required. The text shown the in the suggestion chip. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  The collection of suggestions.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSuggestions : GTLRObject

/** Required. The list of suggested replies. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageSuggestion *> *suggestions;

@end


/**
 *  Table card for Actions on Google.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageTableCard : GTLRObject

/** Optional. List of buttons for the card. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageBasicCardButton *> *buttons;

/** Optional. Display properties for the columns in this table. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageColumnProperties *> *columnProperties;

/** Optional. Image which should be displayed on the card. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageImage *image;

/** Optional. Rows in this table of data. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageTableCardRow *> *rows;

/** Optional. Subtitle to the title. */
@property(nonatomic, copy, nullable) NSString *subtitle;

/** Required. Title of the card. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Cell of TableCardRow.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageTableCardCell : GTLRObject

/** Required. Text in this cell. */
@property(nonatomic, copy, nullable) NSString *text;

@end


/**
 *  Row of TableCard.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageTableCardRow : GTLRObject

/** Optional. List of cells that make up this row. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageTableCardCell *> *cells;

/**
 *  Optional. Whether to add a visual divider after this row.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dividerAfter;

@end


/**
 *  The text response message.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentMessageText : GTLRObject

/** Optional. The collection of the agent's responses. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *text;

@end


/**
 *  Represents intent parameters.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentParameter : GTLRObject

/**
 *  Optional. The default value to use when the `value` yields an empty result.
 *  Default values can be extracted from contexts by using the following syntax:
 *  `#context_name.parameter_name`.
 */
@property(nonatomic, copy, nullable) NSString *defaultValue;

/** Required. The name of the parameter. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. The name of the entity type, prefixed with `\@`, that describes
 *  values of the parameter. If the parameter is required, this must be
 *  provided.
 */
@property(nonatomic, copy, nullable) NSString *entityTypeDisplayName;

/**
 *  Optional. Indicates whether the parameter represents a list of values.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isList;

/**
 *  Optional. Indicates whether the parameter is required. That is, whether the
 *  intent cannot be completed without collecting the parameter value.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mandatory;

/** The unique identifier of this parameter. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The collection of prompts that the agent can present to the user
 *  in order to collect a value for the parameter.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *prompts;

/**
 *  Optional. The definition of the parameter value. It can be: - a constant
 *  string, - a parameter value defined as `$parameter_name`, - an original
 *  parameter value defined as `$parameter_name.original`, - a parameter value
 *  from some context defined as `#context_name.parameter_name`.
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents an example that the agent is trained on.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentTrainingPhrase : GTLRObject

/** Output only. The unique identifier of this training phrase. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The ordered list of training phrase parts. The parts are
 *  concatenated in order to form the training phrase. Note: The API does not
 *  automatically annotate training phrases like the Dialogflow Console does.
 *  Note: Do not forget to include whitespace at part boundaries, so the
 *  training phrase is well formatted when the parts are concatenated. If the
 *  training phrase does not need to be annotated with parameters, you just need
 *  a single part with only the Part.text field set. If you want to annotate the
 *  training phrase, you must create multiple parts, where the fields of each
 *  part are populated in one of two ways: - `Part.text` is set to a part of the
 *  phrase that has no parameters. - `Part.text` is set to a part of the phrase
 *  that you want to annotate, and the `entity_type`, `alias`, and
 *  `user_defined` fields are all set.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentTrainingPhrasePart *> *parts;

/**
 *  Optional. Indicates how many times this example was added to the intent.
 *  Each time a developer adds an existing sample by editing an intent or
 *  training, this counter is increased.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timesAddedCount;

/**
 *  Required. The type of the training phrase.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentTrainingPhrase_Type_Example
 *        Examples do not contain \@-prefixed entity type names, but example
 *        parts can be annotated with entity types. (Value: "EXAMPLE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentTrainingPhrase_Type_Template
 *        Templates are not annotated with entity types, but they can contain
 *        \@-prefixed entity type names as substrings. Template mode has been
 *        deprecated. Example mode is the only supported way to create new
 *        training phrases. If you have existing training phrases that you've
 *        created in template mode, those will continue to work. (Value:
 *        "TEMPLATE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2IntentTrainingPhrase_Type_TypeUnspecified
 *        Not specified. This value should never be used. (Value:
 *        "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents a part of a training phrase.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2IntentTrainingPhrasePart : GTLRObject

/**
 *  Optional. The parameter name for the value extracted from the annotated part
 *  of the example. This field is required for annotated parts of the training
 *  phrase.
 */
@property(nonatomic, copy, nullable) NSString *alias;

/**
 *  Optional. The entity type name prefixed with `\@`. This field is required
 *  for annotated parts of the training phrase.
 */
@property(nonatomic, copy, nullable) NSString *entityType;

/** Required. The text for this part. */
@property(nonatomic, copy, nullable) NSString *text;

/**
 *  Optional. Indicates whether the text was manually annotated. This field is
 *  set to true when the Dialogflow Console is used to manually annotate the
 *  part. When creating an annotated part with the API, you must set this to
 *  true.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *userDefined;

@end


/**
 *  Metadata in google::longrunning::Operation for Knowledge operations.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2KnowledgeOperationMetadata : GTLRObject

/**
 *  Metadata for the Export Data Operation such as the destination of export.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2ExportOperationMetadata *exportOperationMetadata;

/** The name of the knowledge base interacted with during the operation. */
@property(nonatomic, copy, nullable) NSString *knowledgeBase;

/**
 *  Output only. The current state of this operation.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2KnowledgeOperationMetadata_State_Done
 *        The operation is done, either cancelled or completed. (Value: "DONE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2KnowledgeOperationMetadata_State_Pending
 *        The operation has been created. (Value: "PENDING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2KnowledgeOperationMetadata_State_Running
 *        The operation is currently running. (Value: "RUNNING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2KnowledgeOperationMetadata_State_StateUnspecified
 *        State unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Represents a message posted into a conversation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2Message : GTLRObject

/** Required. The message content. */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  Output only. The time when the message was created in Contact Center AI.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. The message language. This should be a
 *  [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
 *  Example: "en-US".
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/** Output only. The annotation for the message. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2MessageAnnotation *messageAnnotation;

/**
 *  Optional. The unique identifier of the message. Format:
 *  `projects//locations//conversations//messages/`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. The participant that sends this message. */
@property(nonatomic, copy, nullable) NSString *participant;

/**
 *  Output only. The role of the participant.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2Message_ParticipantRole_AutomatedAgent
 *        Participant is an automated agent, such as a Dialogflow agent. (Value:
 *        "AUTOMATED_AGENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2Message_ParticipantRole_EndUser
 *        Participant is an end user that has called or chatted with Dialogflow
 *        services. (Value: "END_USER")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2Message_ParticipantRole_HumanAgent
 *        Participant is a human agent. (Value: "HUMAN_AGENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2Message_ParticipantRole_RoleUnspecified
 *        Participant role not set. (Value: "ROLE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *participantRole;

/** Optional. The time when the message was sent. */
@property(nonatomic, strong, nullable) GTLRDateTime *sendTime;

/** Output only. The sentiment analysis result for the message. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2SentimentAnalysisResult *sentimentAnalysis;

@end


/**
 *  Represents the result of annotation for the message.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2MessageAnnotation : GTLRObject

/**
 *  Indicates whether the text message contains entities.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *containEntities;

/**
 *  The collection of annotated message parts ordered by their position in the
 *  message. You can recover the annotated message by concatenating
 *  [AnnotatedMessagePart.text].
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2AnnotatedMessagePart *> *parts;

@end


/**
 *  Represents the contents of the original request that was passed to the
 *  `[Streaming]DetectIntent` call.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2OriginalDetectIntentRequest : GTLRObject

/**
 *  Optional. This field is set to the value of the `QueryParameters.payload`
 *  field passed in the request. Some integrations that query a Dialogflow agent
 *  may provide additional information in the payload. In particular, for the
 *  Dialogflow Phone Gateway integration, this field has the form: {
 *  "telephony": { "caller_id": "+18558363987" } } Note: The caller ID field
 *  (`caller_id`) will be redacted for Trial Edition agents and populated with
 *  the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for
 *  Essentials Edition agents.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2OriginalDetectIntentRequest_Payload *payload;

/**
 *  The source of this request, e.g., `google`, `facebook`, `slack`. It is set
 *  by Dialogflow-owned servers.
 */
@property(nonatomic, copy, nullable) NSString *source;

/**
 *  Optional. The version of the protocol used for this request. This field is
 *  AoG-specific.
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Optional. This field is set to the value of the `QueryParameters.payload`
 *  field passed in the request. Some integrations that query a Dialogflow agent
 *  may provide additional information in the payload. In particular, for the
 *  Dialogflow Phone Gateway integration, this field has the form: {
 *  "telephony": { "caller_id": "+18558363987" } } Note: The caller ID field
 *  (`caller_id`) will be redacted for Trial Edition agents and populated with
 *  the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for
 *  Essentials Edition agents.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2OriginalDetectIntentRequest_Payload : GTLRObject
@end


/**
 *  Represents the result of conversational query or event processing.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2QueryResult : GTLRObject

/** The action name from the matched intent. */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  This field is set to: - `false` if the matched intent has required
 *  parameters and not all of the required parameter values have been collected.
 *  - `true` if all required parameter values have been collected, or if the
 *  matched intent doesn't contain any required parameters.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allRequiredParamsPresent;

/**
 *  Indicates whether the conversational query triggers a cancellation for slot
 *  filling. For more information, see the [cancel slot filling
 *  documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cancelsSlotFilling;

/**
 *  Free-form diagnostic information for the associated detect intent request.
 *  The fields of this data can change without notice, so you should not write
 *  code that depends on its structure. The data may contain: - webhook call
 *  latency - webhook errors
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2QueryResult_DiagnosticInfo *diagnosticInfo;

/** The collection of rich messages to present to the user. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentMessage *> *fulfillmentMessages;

/**
 *  The text to be pronounced to the user or shown on the screen. Note: This is
 *  a legacy field, `fulfillment_messages` should be preferred.
 */
@property(nonatomic, copy, nullable) NSString *fulfillmentText;

/**
 *  The intent that matched the conversational query. Some, not all fields are
 *  filled in this message, including but not limited to: `name`,
 *  `display_name`, `end_interaction` and `is_fallback`.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2Intent *intent;

/**
 *  The intent detection confidence. Values range from 0.0 (completely
 *  uncertain) to 1.0 (completely certain). This value is for informational
 *  purpose only and is only used to help match the best intent within the
 *  classification threshold. This value may change for the same end-user
 *  expression at any time due to a model retraining or change in
 *  implementation. If there are `multiple knowledge_answers` messages, this
 *  value is set to the greatest `knowledgeAnswers.match_confidence` value in
 *  the list.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *intentDetectionConfidence;

/**
 *  The language that was triggered during intent detection. See [Language
 *  Support](https://cloud.google.com/dialogflow/docs/reference/language) for a
 *  list of the currently supported language codes.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  The collection of output contexts. If applicable,
 *  `output_contexts.parameters` contains entries with name `.original`
 *  containing the original parameter values before the query.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2Context *> *outputContexts;

/**
 *  The collection of extracted parameters. Depending on your protocol or client
 *  library language, this is a map, associative array, symbol table,
 *  dictionary, or JSON object composed of a collection of (MapKey, MapValue)
 *  pairs: - MapKey type: string - MapKey value: parameter name - MapValue type:
 *  - If parameter's entity type is a composite entity: map - Else: depending on
 *  parameter value type, could be one of string, number, boolean, null, list or
 *  map - MapValue value: - If parameter's entity type is a composite entity:
 *  map from composite entity property names to property values - Else:
 *  parameter value
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2QueryResult_Parameters *parameters;

/**
 *  The original conversational query text: - If natural language text was
 *  provided as input, `query_text` contains a copy of the input. - If natural
 *  language speech audio was provided as input, `query_text` contains the
 *  speech recognition result. If speech recognizer produced multiple
 *  alternatives, a particular one is picked. - If automatic spell correction is
 *  enabled, `query_text` will contain the corrected user input.
 */
@property(nonatomic, copy, nullable) NSString *queryText;

/**
 *  The sentiment analysis result, which depends on the
 *  `sentiment_analysis_request_config` specified in the request.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2SentimentAnalysisResult *sentimentAnalysisResult;

/**
 *  The Speech recognition confidence between 0.0 and 1.0. A higher number
 *  indicates an estimated greater likelihood that the recognized words are
 *  correct. The default of 0.0 is a sentinel value indicating that confidence
 *  was not set. This field is not guaranteed to be accurate or set. In
 *  particular this field isn't set for StreamingDetectIntent since the
 *  streaming endpoint has separate confidence estimates per portion of the
 *  audio in StreamingRecognitionResult.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *speechRecognitionConfidence;

/**
 *  If the query was fulfilled by a webhook call, this field is set to the value
 *  of the `payload` field returned in the webhook response.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2QueryResult_WebhookPayload *webhookPayload;

/**
 *  If the query was fulfilled by a webhook call, this field is set to the value
 *  of the `source` field returned in the webhook response.
 */
@property(nonatomic, copy, nullable) NSString *webhookSource;

@end


/**
 *  Free-form diagnostic information for the associated detect intent request.
 *  The fields of this data can change without notice, so you should not write
 *  code that depends on its structure. The data may contain: - webhook call
 *  latency - webhook errors
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2QueryResult_DiagnosticInfo : GTLRObject
@end


/**
 *  The collection of extracted parameters. Depending on your protocol or client
 *  library language, this is a map, associative array, symbol table,
 *  dictionary, or JSON object composed of a collection of (MapKey, MapValue)
 *  pairs: - MapKey type: string - MapKey value: parameter name - MapValue type:
 *  - If parameter's entity type is a composite entity: map - Else: depending on
 *  parameter value type, could be one of string, number, boolean, null, list or
 *  map - MapValue value: - If parameter's entity type is a composite entity:
 *  map from composite entity property names to property values - Else:
 *  parameter value
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2QueryResult_Parameters : GTLRObject
@end


/**
 *  If the query was fulfilled by a webhook call, this field is set to the value
 *  of the `payload` field returned in the webhook response.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2QueryResult_WebhookPayload : GTLRObject
@end


/**
 *  The sentiment, such as positive/negative feeling or association, for a unit
 *  of analysis, such as the query text.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2Sentiment : GTLRObject

/**
 *  A non-negative number in the [0, +inf) range, which represents the absolute
 *  magnitude of sentiment, regardless of score (positive or negative).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *magnitude;

/**
 *  Sentiment score between -1.0 (negative sentiment) and 1.0 (positive
 *  sentiment).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *score;

@end


/**
 *  The result of sentiment analysis. Sentiment analysis inspects user input and
 *  identifies the prevailing subjective opinion, especially to determine a
 *  user's attitude as positive, negative, or neutral. For
 *  Participants.DetectIntent, it needs to be configured in
 *  DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it
 *  needs to be configured in StreamingDetectIntentRequest.query_params. And for
 *  Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it
 *  needs to be configured in ConversationProfile.human_agent_assistant_config
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2SentimentAnalysisResult : GTLRObject

/** The sentiment analysis result for `query_text`. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2Sentiment *queryTextSentiment;

@end


/**
 *  A session represents a conversation between a Dialogflow agent and an
 *  end-user. You can create special entities, called session entities, during a
 *  session. Session entities can extend or replace custom entity types and only
 *  exist during the session that they were created for. All session data,
 *  including session entities, is stored by Dialogflow for 20 minutes. For more
 *  information, see the [session entity
 *  guide](https://cloud.google.com/dialogflow/docs/entities-session).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2SessionEntityType : GTLRObject

/**
 *  Required. The collection of entities associated with this session entity
 *  type.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2EntityTypeEntity *> *entities;

/**
 *  Required. Indicates whether the additional data should override or
 *  supplement the custom entity type definition.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2SessionEntityType_EntityOverrideMode_EntityOverrideModeOverride
 *        The collection of session entities overrides the collection of
 *        entities in the corresponding custom entity type. (Value:
 *        "ENTITY_OVERRIDE_MODE_OVERRIDE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2SessionEntityType_EntityOverrideMode_EntityOverrideModeSupplement
 *        The collection of session entities extends the collection of entities
 *        in the corresponding custom entity type. Note: Even in this override
 *        mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`,
 *        `CreateSessionEntityType` and `UpdateSessionEntityType` only return
 *        the additional entities added in this session entity type. If you want
 *        to get the supplemented list, please call EntityTypes.GetEntityType on
 *        the custom entity type and merge. (Value:
 *        "ENTITY_OVERRIDE_MODE_SUPPLEMENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2SessionEntityType_EntityOverrideMode_EntityOverrideModeUnspecified
 *        Not specified. This value should be never used. (Value:
 *        "ENTITY_OVERRIDE_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *entityOverrideMode;

/**
 *  Required. The unique identifier of this session entity type. Format:
 *  `projects//agent/sessions//entityTypes/`, or
 *  `projects//agent/environments//users//sessions//entityTypes/`. If
 *  `Environment ID` is not specified, we assume default 'draft' environment. If
 *  `User ID` is not specified, we assume default '-' user. `` must be the
 *  display name of an existing entity type in the same agent that will be
 *  overridden or supplemented.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Metadata for a ConversationProfile.SetSuggestionFeatureConfig operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata : GTLRObject

/**
 *  The resource name of the conversation profile. Format:
 *  `projects//locations//conversationProfiles/`
 */
@property(nonatomic, copy, nullable) NSString *conversationProfile;

/**
 *  Timestamp whe the request was created. The time is measured on server side.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Required. The participant role to add or update the suggestion feature
 *  config. Only HUMAN_AGENT or END_USER can be used.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_AutomatedAgent
 *        Participant is an automated agent, such as a Dialogflow agent. (Value:
 *        "AUTOMATED_AGENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_EndUser
 *        Participant is an end user that has called or chatted with Dialogflow
 *        services. (Value: "END_USER")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_HumanAgent
 *        Participant is a human agent. (Value: "HUMAN_AGENT")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_ParticipantRole_RoleUnspecified
 *        Participant role not set. (Value: "ROLE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *participantRole;

/**
 *  Required. The type of the suggestion feature to add or update.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_ArticleSuggestion
 *        Run article suggestion model for chat. (Value: "ARTICLE_SUGGESTION")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_Faq
 *        Run FAQ model for chat. (Value: "FAQ")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_SmartReply
 *        Run smart reply model for chat. (Value: "SMART_REPLY")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata_SuggestionFeatureType_TypeUnspecified
 *        Unspecified feature type. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *suggestionFeatureType;

@end


/**
 *  Represents a smart reply answer.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2SmartReplyAnswer : GTLRObject

/**
 *  The name of answer record, in the format of
 *  "projects//locations//answerRecords/"
 */
@property(nonatomic, copy, nullable) NSString *answerRecord;

/**
 *  Smart reply confidence. The system's confidence score that this reply is a
 *  good match for this conversation, as a value from 0.0 (completely uncertain)
 *  to 1.0 (completely certain).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *confidence;

/** The content of the reply. */
@property(nonatomic, copy, nullable) NSString *reply;

@end


/**
 *  Metadata for smart reply models.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2SmartReplyModelMetadata : GTLRObject

/**
 *  Optional. Type of the smart reply model. If not provided, model_type is
 *  used.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2SmartReplyModelMetadata_TrainingModelType_ModelTypeUnspecified
 *        ModelType unspecified. (Value: "MODEL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2SmartReplyModelMetadata_TrainingModelType_SmartReplyBertModel
 *        ModelType smart reply bert model. (Value: "SMART_REPLY_BERT_MODEL")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV2SmartReplyModelMetadata_TrainingModelType_SmartReplyDualEncoderModel
 *        ModelType smart reply dual encoder model. (Value:
 *        "SMART_REPLY_DUAL_ENCODER_MODEL")
 */
@property(nonatomic, copy, nullable) NSString *trainingModelType;

@end


/**
 *  The response message for Participants.SuggestArticles.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2SuggestArticlesResponse : GTLRObject

/** Articles ordered by score in descending order. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2ArticleAnswer *> *articleAnswers;

/**
 *  Number of messages prior to and including latest_message to compile the
 *  suggestion. It may be smaller than the SuggestArticlesRequest.context_size
 *  field in the request if there aren't that many messages in the conversation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *contextSize;

/**
 *  The name of the latest conversation message used to compile suggestion for.
 *  Format: `projects//locations//conversations//messages/`.
 */
@property(nonatomic, copy, nullable) NSString *latestMessage;

@end


/**
 *  The request message for Participants.SuggestFaqAnswers.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2SuggestFaqAnswersResponse : GTLRObject

/**
 *  Number of messages prior to and including latest_message to compile the
 *  suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size
 *  field in the request if there aren't that many messages in the conversation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *contextSize;

/** Answers extracted from FAQ documents. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2FaqAnswer *> *faqAnswers;

/**
 *  The name of the latest conversation message used to compile suggestion for.
 *  Format: `projects//locations//conversations//messages/`.
 */
@property(nonatomic, copy, nullable) NSString *latestMessage;

@end


/**
 *  One response of different type of suggestion response which is used in the
 *  response of Participants.AnalyzeContent and Participants.AnalyzeContent, as
 *  well as HumanAgentAssistantEvent.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2SuggestionResult : GTLRObject

/** Error status if the request failed. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleRpcStatus *error;

/** SuggestArticlesResponse if request is for ARTICLE_SUGGESTION. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2SuggestArticlesResponse *suggestArticlesResponse;

/** SuggestFaqAnswersResponse if request is for FAQ_ANSWER. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2SuggestFaqAnswersResponse *suggestFaqAnswersResponse;

/** SuggestSmartRepliesResponse if request is for SMART_REPLY. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2SuggestSmartRepliesResponse *suggestSmartRepliesResponse;

@end


/**
 *  The response message for Participants.SuggestSmartReplies.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2SuggestSmartRepliesResponse : GTLRObject

/**
 *  Number of messages prior to and including latest_message to compile the
 *  suggestion. It may be smaller than the
 *  SuggestSmartRepliesRequest.context_size field in the request if there aren't
 *  that many messages in the conversation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *contextSize;

/**
 *  The name of the latest conversation message used to compile suggestion for.
 *  Format: `projects//locations//conversations//messages/`.
 */
@property(nonatomic, copy, nullable) NSString *latestMessage;

/**
 *  Output only. Multiple reply options provided by smart reply service. The
 *  order is based on the rank of the model prediction. The maximum number of
 *  the returned replies is set in SmartReplyConfig.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2SmartReplyAnswer *> *smartReplyAnswers;

@end


/**
 *  Metadata for a ConversationModels.UndeployConversationModel operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2UndeployConversationModelOperationMetadata : GTLRObject

/**
 *  The resource name of the conversation model. Format:
 *  `projects//conversationModels/`
 */
@property(nonatomic, copy, nullable) NSString *conversationModel;

/**
 *  Timestamp when the request to undeploy conversation model was submitted. The
 *  time is measured on server side.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

@end


/**
 *  The request message for a webhook call.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2WebhookRequest : GTLRObject

/**
 *  Optional. The contents of the original request that was passed to
 *  `[Streaming]DetectIntent` call.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2OriginalDetectIntentRequest *originalDetectIntentRequest;

/**
 *  The result of the conversational query or event processing. Contains the
 *  same value as `[Streaming]DetectIntentResponse.query_result`.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2QueryResult *queryResult;

/**
 *  The unique identifier of the response. Contains the same value as
 *  `[Streaming]DetectIntentResponse.response_id`.
 */
@property(nonatomic, copy, nullable) NSString *responseId;

/**
 *  The unique identifier of detectIntent request session. Can be used to
 *  identify end-user inside webhook implementation. Format:
 *  `projects//agent/sessions/`, or
 *  `projects//agent/environments//users//sessions/`.
 */
@property(nonatomic, copy, nullable) NSString *session;

@end


/**
 *  The response message for a webhook call. This response is validated by the
 *  Dialogflow server. If validation fails, an error will be returned in the
 *  QueryResult.diagnostic_info field. Setting JSON fields to an empty value
 *  with the wrong type is a common error. To avoid this error: - Use `""` for
 *  empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null`
 *  for empty arrays For more information, see the [Protocol Buffers Language
 *  Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2WebhookResponse : GTLRObject

/**
 *  Optional. Invokes the supplied events. When this field is set, Dialogflow
 *  ignores the `fulfillment_text`, `fulfillment_messages`, and `payload`
 *  fields.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2EventInput *followupEventInput;

/**
 *  Optional. The rich response messages intended for the end-user. When
 *  provided, Dialogflow uses this field to populate
 *  QueryResult.fulfillment_messages sent to the integration or API caller.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2IntentMessage *> *fulfillmentMessages;

/**
 *  Optional. The text response message intended for the end-user. It is
 *  recommended to use `fulfillment_messages.text.text[0]` instead. When
 *  provided, Dialogflow uses this field to populate
 *  QueryResult.fulfillment_text sent to the integration or API caller.
 */
@property(nonatomic, copy, nullable) NSString *fulfillmentText;

/**
 *  Optional. The collection of output contexts that will overwrite currently
 *  active contexts for the session and reset their lifespans. When provided,
 *  Dialogflow uses this field to populate QueryResult.output_contexts sent to
 *  the integration or API caller.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2Context *> *outputContexts;

/**
 *  Optional. This field can be used to pass custom data from your webhook to
 *  the integration or API caller. Arbitrary JSON objects are supported. When
 *  provided, Dialogflow uses this field to populate QueryResult.webhook_payload
 *  sent to the integration or API caller. This field is also used by the
 *  [Google Assistant
 *  integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for
 *  rich response messages. See the format definition at [Google Assistant
 *  Dialogflow webhook
 *  format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV2WebhookResponse_Payload *payload;

/**
 *  Optional. Additional session entity types to replace or extend developer
 *  entity types with. The entity synonyms apply to all languages and persist
 *  for the session. Setting this data from a webhook overwrites the session
 *  entity types that have been set using `detectIntent`,
 *  `streamingDetectIntent` or SessionEntityType management methods.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudDialogflowV2SessionEntityType *> *sessionEntityTypes;

/**
 *  Optional. A custom field used to identify the webhook source. Arbitrary
 *  strings are supported. When provided, Dialogflow uses this field to populate
 *  QueryResult.webhook_source sent to the integration or API caller.
 */
@property(nonatomic, copy, nullable) NSString *source;

@end


/**
 *  Optional. This field can be used to pass custom data from your webhook to
 *  the integration or API caller. Arbitrary JSON objects are supported. When
 *  provided, Dialogflow uses this field to populate QueryResult.webhook_payload
 *  sent to the integration or API caller. This field is also used by the
 *  [Google Assistant
 *  integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for
 *  rich response messages. See the format definition at [Google Assistant
 *  Dialogflow webhook
 *  format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV2WebhookResponse_Payload : GTLRObject
@end


/**
 *  Metadata for CreateDocument operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV3alpha1CreateDocumentOperationMetadata : GTLRObject

/** The generic information of the operation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata *genericMetadata;

@end


/**
 *  Metadata for DeleteDocument operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV3alpha1DeleteDocumentOperationMetadata : GTLRObject

/** The generic information of the operation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata *genericMetadata;

@end


/**
 *  Metadata in google::longrunning::Operation for Knowledge operations.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata : GTLRObject

/**
 *  Required. Output only. The current state of this operation.
 *
 *  Likely values:
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata_State_Done
 *        The operation is done, either cancelled or completed. (Value: "DONE")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata_State_Pending
 *        The operation has been created. (Value: "PENDING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata_State_Running
 *        The operation is currently running. (Value: "RUNNING")
 *    @arg @c kGTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata_State_StateUnspecified
 *        State unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Metadata for ImportDocuments operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV3alpha1ImportDocumentsOperationMetadata : GTLRObject

/** The generic information of the operation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata *genericMetadata;

@end


/**
 *  Response message for Documents.ImportDocuments.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV3alpha1ImportDocumentsResponse : GTLRObject

/** Includes details about skipped documents or any other warnings. */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleRpcStatus *> *warnings;

@end


/**
 *  Metadata for ReloadDocument operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV3alpha1ReloadDocumentOperationMetadata : GTLRObject

/** The generic information of the operation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata *genericMetadata;

@end


/**
 *  Metadata for UpdateDocument operation.
 */
@interface GTLRDialogflow_GoogleCloudDialogflowV3alpha1UpdateDocumentOperationMetadata : GTLRObject

/** The generic information of the operation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata *genericMetadata;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDialogflow_GoogleCloudLocationListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleCloudLocationLocation *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  A resource that represents Google Cloud Platform location.
 */
@interface GTLRDialogflow_GoogleCloudLocationLocation : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name. For
 *  example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudLocationLocation_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleCloudLocationLocation_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations. For
 *  example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudLocationLocation_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleCloudLocationLocation_Metadata : GTLRObject
@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDialogflow_GoogleLongrunningListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleLongrunningOperation *> *operations;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRDialogflow_GoogleLongrunningOperation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleRpcStatus *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleLongrunningOperation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRDialogflow_GoogleLongrunningOperation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleLongrunningOperation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleLongrunningOperation_Response : GTLRObject
@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRDialogflow_GoogleProtobufEmpty : GTLRObject
@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRDialogflow_GoogleRpcStatus : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDialogflow_GoogleRpcStatus_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDialogflow_GoogleRpcStatus_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDialogflow_GoogleRpcStatus_Details_Item : GTLRObject
@end


/**
 *  An object that represents a latitude/longitude pair. This is expressed as a
 *  pair of doubles to represent degrees latitude and degrees longitude. Unless
 *  specified otherwise, this object must conform to the WGS84 standard. Values
 *  must be within normalized ranges.
 */
@interface GTLRDialogflow_GoogleTypeLatLng : GTLRObject

/**
 *  The latitude in degrees. It must be in the range [-90.0, +90.0].
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *latitude;

/**
 *  The longitude in degrees. It must be in the range [-180.0, +180.0].
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *longitude;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
