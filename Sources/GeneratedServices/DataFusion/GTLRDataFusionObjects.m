// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Data Fusion API (datafusion/v1)
// Description:
//   Cloud Data Fusion is a fully-managed, cloud native, enterprise data
//   integration service for quickly building and managing data pipelines. It
//   provides a graphical interface to increase time efficiency and reduce
//   complexity, and allows business users, developers, and data scientists to
//   easily and reliably build scalable data integration solutions to cleanse,
//   prepare, blend, transfer and transform data without having to wrestle with
//   infrastructure.
// Documentation:
//   https://cloud.google.com/data-fusion/docs

#import <GoogleAPIClientForREST/GTLRDataFusionObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRDataFusion_Accelerator.acceleratorType
NSString * const kGTLRDataFusion_Accelerator_AcceleratorType_AcceleratorTypeUnspecified = @"ACCELERATOR_TYPE_UNSPECIFIED";
NSString * const kGTLRDataFusion_Accelerator_AcceleratorType_CcaiInsights = @"CCAI_INSIGHTS";
NSString * const kGTLRDataFusion_Accelerator_AcceleratorType_Cdc = @"CDC";
NSString * const kGTLRDataFusion_Accelerator_AcceleratorType_Cloudsearch = @"CLOUDSEARCH";
NSString * const kGTLRDataFusion_Accelerator_AcceleratorType_Healthcare = @"HEALTHCARE";

// GTLRDataFusion_Accelerator.state
NSString * const kGTLRDataFusion_Accelerator_State_Disabled    = @"DISABLED";
NSString * const kGTLRDataFusion_Accelerator_State_Enabled     = @"ENABLED";
NSString * const kGTLRDataFusion_Accelerator_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRDataFusion_Accelerator_State_Unknown     = @"UNKNOWN";

// GTLRDataFusion_AuditLogConfig.logType
NSString * const kGTLRDataFusion_AuditLogConfig_LogType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRDataFusion_AuditLogConfig_LogType_DataRead = @"DATA_READ";
NSString * const kGTLRDataFusion_AuditLogConfig_LogType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRDataFusion_AuditLogConfig_LogType_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";

// GTLRDataFusion_Instance.disabledReason
NSString * const kGTLRDataFusion_Instance_DisabledReason_DisabledReasonUnspecified = @"DISABLED_REASON_UNSPECIFIED";
NSString * const kGTLRDataFusion_Instance_DisabledReason_KmsKeyIssue = @"KMS_KEY_ISSUE";

// GTLRDataFusion_Instance.state
NSString * const kGTLRDataFusion_Instance_State_Active         = @"ACTIVE";
NSString * const kGTLRDataFusion_Instance_State_AutoUpdating   = @"AUTO_UPDATING";
NSString * const kGTLRDataFusion_Instance_State_AutoUpgrading  = @"AUTO_UPGRADING";
NSString * const kGTLRDataFusion_Instance_State_Creating       = @"CREATING";
NSString * const kGTLRDataFusion_Instance_State_Deleting       = @"DELETING";
NSString * const kGTLRDataFusion_Instance_State_Disabled       = @"DISABLED";
NSString * const kGTLRDataFusion_Instance_State_Failed         = @"FAILED";
NSString * const kGTLRDataFusion_Instance_State_Restarting     = @"RESTARTING";
NSString * const kGTLRDataFusion_Instance_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRDataFusion_Instance_State_Updating       = @"UPDATING";
NSString * const kGTLRDataFusion_Instance_State_Upgrading      = @"UPGRADING";

// GTLRDataFusion_Instance.type
NSString * const kGTLRDataFusion_Instance_Type_Basic           = @"BASIC";
NSString * const kGTLRDataFusion_Instance_Type_Developer       = @"DEVELOPER";
NSString * const kGTLRDataFusion_Instance_Type_Enterprise      = @"ENTERPRISE";
NSString * const kGTLRDataFusion_Instance_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRDataFusion_IsolationExpectations.ziOrgPolicy
NSString * const kGTLRDataFusion_IsolationExpectations_ZiOrgPolicy_ZiNotRequired = @"ZI_NOT_REQUIRED";
NSString * const kGTLRDataFusion_IsolationExpectations_ZiOrgPolicy_ZiPreferred = @"ZI_PREFERRED";
NSString * const kGTLRDataFusion_IsolationExpectations_ZiOrgPolicy_ZiRequired = @"ZI_REQUIRED";
NSString * const kGTLRDataFusion_IsolationExpectations_ZiOrgPolicy_ZiUnknown = @"ZI_UNKNOWN";
NSString * const kGTLRDataFusion_IsolationExpectations_ZiOrgPolicy_ZiUnspecified = @"ZI_UNSPECIFIED";

// GTLRDataFusion_IsolationExpectations.ziRegionPolicy
NSString * const kGTLRDataFusion_IsolationExpectations_ZiRegionPolicy_ZiRegionPolicyFailClosed = @"ZI_REGION_POLICY_FAIL_CLOSED";
NSString * const kGTLRDataFusion_IsolationExpectations_ZiRegionPolicy_ZiRegionPolicyFailOpen = @"ZI_REGION_POLICY_FAIL_OPEN";
NSString * const kGTLRDataFusion_IsolationExpectations_ZiRegionPolicy_ZiRegionPolicyNotSet = @"ZI_REGION_POLICY_NOT_SET";
NSString * const kGTLRDataFusion_IsolationExpectations_ZiRegionPolicy_ZiRegionPolicyUnknown = @"ZI_REGION_POLICY_UNKNOWN";
NSString * const kGTLRDataFusion_IsolationExpectations_ZiRegionPolicy_ZiRegionPolicyUnspecified = @"ZI_REGION_POLICY_UNSPECIFIED";

// GTLRDataFusion_IsolationExpectations.ziRegionState
NSString * const kGTLRDataFusion_IsolationExpectations_ZiRegionState_ZiRegionEnabled = @"ZI_REGION_ENABLED";
NSString * const kGTLRDataFusion_IsolationExpectations_ZiRegionState_ZiRegionNotEnabled = @"ZI_REGION_NOT_ENABLED";
NSString * const kGTLRDataFusion_IsolationExpectations_ZiRegionState_ZiRegionUnknown = @"ZI_REGION_UNKNOWN";
NSString * const kGTLRDataFusion_IsolationExpectations_ZiRegionState_ZiRegionUnspecified = @"ZI_REGION_UNSPECIFIED";

// GTLRDataFusion_IsolationExpectations.zoneIsolation
NSString * const kGTLRDataFusion_IsolationExpectations_ZoneIsolation_ZiNotRequired = @"ZI_NOT_REQUIRED";
NSString * const kGTLRDataFusion_IsolationExpectations_ZoneIsolation_ZiPreferred = @"ZI_PREFERRED";
NSString * const kGTLRDataFusion_IsolationExpectations_ZoneIsolation_ZiRequired = @"ZI_REQUIRED";
NSString * const kGTLRDataFusion_IsolationExpectations_ZoneIsolation_ZiUnknown = @"ZI_UNKNOWN";
NSString * const kGTLRDataFusion_IsolationExpectations_ZoneIsolation_ZiUnspecified = @"ZI_UNSPECIFIED";

// GTLRDataFusion_IsolationExpectations.zoneSeparation
NSString * const kGTLRDataFusion_IsolationExpectations_ZoneSeparation_ZsNotRequired = @"ZS_NOT_REQUIRED";
NSString * const kGTLRDataFusion_IsolationExpectations_ZoneSeparation_ZsRequired = @"ZS_REQUIRED";
NSString * const kGTLRDataFusion_IsolationExpectations_ZoneSeparation_ZsUnknown = @"ZS_UNKNOWN";
NSString * const kGTLRDataFusion_IsolationExpectations_ZoneSeparation_ZsUnspecified = @"ZS_UNSPECIFIED";

// GTLRDataFusion_IsolationExpectations.zsOrgPolicy
NSString * const kGTLRDataFusion_IsolationExpectations_ZsOrgPolicy_ZsNotRequired = @"ZS_NOT_REQUIRED";
NSString * const kGTLRDataFusion_IsolationExpectations_ZsOrgPolicy_ZsRequired = @"ZS_REQUIRED";
NSString * const kGTLRDataFusion_IsolationExpectations_ZsOrgPolicy_ZsUnknown = @"ZS_UNKNOWN";
NSString * const kGTLRDataFusion_IsolationExpectations_ZsOrgPolicy_ZsUnspecified = @"ZS_UNSPECIFIED";

// GTLRDataFusion_IsolationExpectations.zsRegionState
NSString * const kGTLRDataFusion_IsolationExpectations_ZsRegionState_ZsRegionEnabled = @"ZS_REGION_ENABLED";
NSString * const kGTLRDataFusion_IsolationExpectations_ZsRegionState_ZsRegionNotEnabled = @"ZS_REGION_NOT_ENABLED";
NSString * const kGTLRDataFusion_IsolationExpectations_ZsRegionState_ZsRegionUnknown = @"ZS_REGION_UNKNOWN";
NSString * const kGTLRDataFusion_IsolationExpectations_ZsRegionState_ZsRegionUnspecified = @"ZS_REGION_UNSPECIFIED";

// GTLRDataFusion_LocationAssignment.locationType
NSString * const kGTLRDataFusion_LocationAssignment_LocationType_CloudRegion = @"CLOUD_REGION";
NSString * const kGTLRDataFusion_LocationAssignment_LocationType_CloudZone = @"CLOUD_ZONE";
NSString * const kGTLRDataFusion_LocationAssignment_LocationType_Cluster = @"CLUSTER";
NSString * const kGTLRDataFusion_LocationAssignment_LocationType_Global = @"GLOBAL";
NSString * const kGTLRDataFusion_LocationAssignment_LocationType_MultiRegionGeo = @"MULTI_REGION_GEO";
NSString * const kGTLRDataFusion_LocationAssignment_LocationType_MultiRegionJurisdiction = @"MULTI_REGION_JURISDICTION";
NSString * const kGTLRDataFusion_LocationAssignment_LocationType_Other = @"OTHER";
NSString * const kGTLRDataFusion_LocationAssignment_LocationType_Pop = @"POP";
NSString * const kGTLRDataFusion_LocationAssignment_LocationType_Unspecified = @"UNSPECIFIED";

// GTLRDataFusion_NetworkConfig.connectionType
NSString * const kGTLRDataFusion_NetworkConfig_ConnectionType_ConnectionTypeUnspecified = @"CONNECTION_TYPE_UNSPECIFIED";
NSString * const kGTLRDataFusion_NetworkConfig_ConnectionType_PrivateServiceConnectInterfaces = @"PRIVATE_SERVICE_CONNECT_INTERFACES";
NSString * const kGTLRDataFusion_NetworkConfig_ConnectionType_VpcPeering = @"VPC_PEERING";

// GTLRDataFusion_Version.type
NSString * const kGTLRDataFusion_Version_Type_TypeGeneralAvailability = @"TYPE_GENERAL_AVAILABILITY";
NSString * const kGTLRDataFusion_Version_Type_TypePreview      = @"TYPE_PREVIEW";
NSString * const kGTLRDataFusion_Version_Type_TypeUnspecified  = @"TYPE_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Accelerator
//

@implementation GTLRDataFusion_Accelerator
@dynamic acceleratorType, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_AssetLocation
//

@implementation GTLRDataFusion_AssetLocation
@dynamic expected, extraParameters, locationData, parentAsset;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"extraParameters" : [GTLRDataFusion_ExtraParameter class],
    @"locationData" : [GTLRDataFusion_LocationData class],
    @"parentAsset" : [GTLRDataFusion_CloudAsset class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_AuditConfig
//

@implementation GTLRDataFusion_AuditConfig
@dynamic auditLogConfigs, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditLogConfigs" : [GTLRDataFusion_AuditLogConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_AuditLogConfig
//

@implementation GTLRDataFusion_AuditLogConfig
@dynamic exemptedMembers, logType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Binding
//

@implementation GTLRDataFusion_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_BlobstoreLocation
//

@implementation GTLRDataFusion_BlobstoreLocation
@dynamic policyId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"policyId" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_CancelOperationRequest
//

@implementation GTLRDataFusion_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_CloudAsset
//

@implementation GTLRDataFusion_CloudAsset
@dynamic assetName, assetType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_CloudAssetComposition
//

@implementation GTLRDataFusion_CloudAssetComposition
@dynamic childAsset;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"childAsset" : [GTLRDataFusion_CloudAsset class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_CryptoKeyConfig
//

@implementation GTLRDataFusion_CryptoKeyConfig
@dynamic keyReference;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_DirectLocationAssignment
//

@implementation GTLRDataFusion_DirectLocationAssignment
@dynamic location;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"location" : [GTLRDataFusion_LocationAssignment class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_DnsPeering
//

@implementation GTLRDataFusion_DnsPeering
@dynamic descriptionProperty, domain, name, targetNetwork, targetProject;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Empty
//

@implementation GTLRDataFusion_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_EventPublishConfig
//

@implementation GTLRDataFusion_EventPublishConfig
@dynamic enabled, topic;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Expr
//

@implementation GTLRDataFusion_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_ExtraParameter
//

@implementation GTLRDataFusion_ExtraParameter
@dynamic regionalMigDistributionPolicy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Instance
//

@implementation GTLRDataFusion_Instance
@dynamic accelerators, apiEndpoint, availableVersion, createTime,
         cryptoKeyConfig, dataplexDataLineageIntegrationEnabled,
         dataprocServiceAccount, descriptionProperty, disabledReason,
         displayName, enableRbac, enableStackdriverLogging,
         enableStackdriverMonitoring, enableZoneSeparation, eventPublishConfig,
         gcsBucket, labels, maintenancePolicy, name, networkConfig, options,
         p4ServiceAccount, patchRevision, privateInstance, satisfiesPzs,
         serviceAccount, serviceEndpoint, state, stateMessage, tenantProjectId,
         type, updateTime, version, workforceIdentityServiceEndpoint,
         zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accelerators" : [GTLRDataFusion_Accelerator class],
    @"availableVersion" : [GTLRDataFusion_Version class],
    @"disabledReason" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Instance_Labels
//

@implementation GTLRDataFusion_Instance_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Instance_Options
//

@implementation GTLRDataFusion_Instance_Options

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_IsolationExpectations
//

@implementation GTLRDataFusion_IsolationExpectations
@dynamic ziOrgPolicy, ziRegionPolicy, ziRegionState, zoneIsolation,
         zoneSeparation, zsOrgPolicy, zsRegionState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_ListAvailableVersionsResponse
//

@implementation GTLRDataFusion_ListAvailableVersionsResponse
@dynamic availableVersions, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"availableVersions" : [GTLRDataFusion_Version class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"availableVersions";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_ListDnsPeeringsResponse
//

@implementation GTLRDataFusion_ListDnsPeeringsResponse
@dynamic dnsPeerings, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"dnsPeerings" : [GTLRDataFusion_DnsPeering class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"dnsPeerings";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_ListInstancesResponse
//

@implementation GTLRDataFusion_ListInstancesResponse
@dynamic instances, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRDataFusion_Instance class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"instances";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_ListLocationsResponse
//

@implementation GTLRDataFusion_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRDataFusion_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_ListOperationsResponse
//

@implementation GTLRDataFusion_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRDataFusion_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Location
//

@implementation GTLRDataFusion_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Location_Labels
//

@implementation GTLRDataFusion_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Location_Metadata
//

@implementation GTLRDataFusion_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_LocationAssignment
//

@implementation GTLRDataFusion_LocationAssignment
@dynamic location, locationType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_LocationData
//

@implementation GTLRDataFusion_LocationData
@dynamic blobstoreLocation, childAssetLocation, directLocation, gcpProjectProxy,
         placerLocation, spannerLocation;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_MaintenancePolicy
//

@implementation GTLRDataFusion_MaintenancePolicy
@dynamic maintenanceExclusionWindow, maintenanceWindow;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_MaintenanceWindow
//

@implementation GTLRDataFusion_MaintenanceWindow
@dynamic recurringTimeWindow;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_NetworkConfig
//

@implementation GTLRDataFusion_NetworkConfig
@dynamic connectionType, ipAllocation, network, privateServiceConnectConfig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Operation
//

@implementation GTLRDataFusion_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Operation_Metadata
//

@implementation GTLRDataFusion_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Operation_Response
//

@implementation GTLRDataFusion_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_OperationMetadata
//

@implementation GTLRDataFusion_OperationMetadata
@dynamic additionalStatus, apiVersion, createTime, endTime,
         requestedCancellation, statusDetail, target, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_OperationMetadata_AdditionalStatus
//

@implementation GTLRDataFusion_OperationMetadata_AdditionalStatus

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_PlacerLocation
//

@implementation GTLRDataFusion_PlacerLocation
@dynamic placerConfig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Policy
//

@implementation GTLRDataFusion_Policy
@dynamic auditConfigs, bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditConfigs" : [GTLRDataFusion_AuditConfig class],
    @"bindings" : [GTLRDataFusion_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_PrivateServiceConnectConfig
//

@implementation GTLRDataFusion_PrivateServiceConnectConfig
@dynamic effectiveUnreachableCidrBlock, networkAttachment, unreachableCidrBlock;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_RecurringTimeWindow
//

@implementation GTLRDataFusion_RecurringTimeWindow
@dynamic recurrence, window;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_RegionalMigDistributionPolicy
//

@implementation GTLRDataFusion_RegionalMigDistributionPolicy
@dynamic targetShape, zones;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"zones" : [GTLRDataFusion_ZoneConfiguration class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_RestartInstanceRequest
//

@implementation GTLRDataFusion_RestartInstanceRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_SetIamPolicyRequest
//

@implementation GTLRDataFusion_SetIamPolicyRequest
@dynamic policy, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_SpannerLocation
//

@implementation GTLRDataFusion_SpannerLocation
@dynamic backupName, dbName;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"backupName" : [NSString class],
    @"dbName" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Status
//

@implementation GTLRDataFusion_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRDataFusion_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Status_Details_Item
//

@implementation GTLRDataFusion_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_TenantProjectProxy
//

@implementation GTLRDataFusion_TenantProjectProxy
@dynamic projectNumbers;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"projectNumbers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_TestIamPermissionsRequest
//

@implementation GTLRDataFusion_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_TestIamPermissionsResponse
//

@implementation GTLRDataFusion_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_TimeWindow
//

@implementation GTLRDataFusion_TimeWindow
@dynamic endTime, startTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_Version
//

@implementation GTLRDataFusion_Version
@dynamic availableFeatures, defaultVersion, type, versionNumber;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"availableFeatures" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDataFusion_ZoneConfiguration
//

@implementation GTLRDataFusion_ZoneConfiguration
@dynamic zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"zoneProperty" : @"zone" };
}

@end
