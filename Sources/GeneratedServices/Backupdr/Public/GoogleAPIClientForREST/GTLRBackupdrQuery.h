// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Backup and DR Service API (backupdr/v1)
// Documentation:
//   https://cloud.google.com/backup-disaster-recovery

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRBackupdrObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Backupdr query classes.
 */
@interface GTLRBackupdrQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: backupdr.projects.locations.backupVaults.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupdrCloudPlatform
 */
@interface GTLRBackupdrQuery_ProjectsLocationsBackupVaultsTestIamPermissions : GTLRBackupdrQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupdr_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBackupdr_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupdrQuery_ProjectsLocationsBackupVaultsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBackupdr_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets information about a location.
 *
 *  Method: backupdr.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupdrCloudPlatform
 */
@interface GTLRBackupdrQuery_ProjectsLocationsGet : GTLRBackupdrQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupdr_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRBackupdrQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: backupdr.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupdrCloudPlatform
 */
@interface GTLRBackupdrQuery_ProjectsLocationsList : GTLRBackupdrQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRBackupdr_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRBackupdrQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new ManagementServer in a given project and location.
 *
 *  Method: backupdr.projects.locations.managementServers.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupdrCloudPlatform
 */
@interface GTLRBackupdrQuery_ProjectsLocationsManagementServersCreate : GTLRBackupdrQuery

/**
 *  Required. The name of the management server to create. The name must be
 *  unique for the specified project and location.
 */
@property(nonatomic, copy, nullable) NSString *managementServerId;

/**
 *  Required. The management server project and location in the format
 *  `projects/{project_id}/locations/{location}`. In Cloud Backup and DR
 *  locations map to GCP regions, for example **us-central1**.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRBackupdr_Operation.
 *
 *  Creates a new ManagementServer in a given project and location.
 *
 *  @param object The @c GTLRBackupdr_ManagementServer to include in the query.
 *  @param parent Required. The management server project and location in the
 *    format `projects/{project_id}/locations/{location}`. In Cloud Backup and
 *    DR locations map to GCP regions, for example **us-central1**.
 *
 *  @return GTLRBackupdrQuery_ProjectsLocationsManagementServersCreate
 */
+ (instancetype)queryWithObject:(GTLRBackupdr_ManagementServer *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single ManagementServer.
 *
 *  Method: backupdr.projects.locations.managementServers.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupdrCloudPlatform
 */
@interface GTLRBackupdrQuery_ProjectsLocationsManagementServersDelete : GTLRBackupdrQuery

/** Required. Name of the resource */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRBackupdr_Operation.
 *
 *  Deletes a single ManagementServer.
 *
 *  @param name Required. Name of the resource
 *
 *  @return GTLRBackupdrQuery_ProjectsLocationsManagementServersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single ManagementServer.
 *
 *  Method: backupdr.projects.locations.managementServers.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupdrCloudPlatform
 */
@interface GTLRBackupdrQuery_ProjectsLocationsManagementServersGet : GTLRBackupdrQuery

/**
 *  Required. Name of the management server resource name, in the format
 *  `projects/{project_id}/locations/{location}/managementServers/{resource_name}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupdr_ManagementServer.
 *
 *  Gets details of a single ManagementServer.
 *
 *  @param name Required. Name of the management server resource name, in the
 *    format
 *    `projects/{project_id}/locations/{location}/managementServers/{resource_name}`
 *
 *  @return GTLRBackupdrQuery_ProjectsLocationsManagementServersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: backupdr.projects.locations.managementServers.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupdrCloudPlatform
 */
@interface GTLRBackupdrQuery_ProjectsLocationsManagementServersGetIamPolicy : GTLRBackupdrQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupdr_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupdrQuery_ProjectsLocationsManagementServersGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists ManagementServers in a given project and location.
 *
 *  Method: backupdr.projects.locations.managementServers.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupdrCloudPlatform
 */
@interface GTLRBackupdrQuery_ProjectsLocationsManagementServersList : GTLRBackupdrQuery

/** Optional. Filtering results. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional. Hint for how to order the results. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Requested page size. Server may return fewer items than requested.
 *  If unspecified, server will pick an appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A token identifying a page of results the server should return.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The project and location for which to retrieve management servers
 *  information, in the format `projects/{project_id}/locations/{location}`. In
 *  Cloud BackupDR, locations map to GCP regions, for example **us-central1**.
 *  To retrieve management servers for all locations, use "-" for the
 *  `{location}` value.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBackupdr_ListManagementServersResponse.
 *
 *  Lists ManagementServers in a given project and location.
 *
 *  @param parent Required. The project and location for which to retrieve
 *    management servers information, in the format
 *    `projects/{project_id}/locations/{location}`. In Cloud BackupDR, locations
 *    map to GCP regions, for example **us-central1**. To retrieve management
 *    servers for all locations, use "-" for the `{location}` value.
 *
 *  @return GTLRBackupdrQuery_ProjectsLocationsManagementServersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: backupdr.projects.locations.managementServers.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupdrCloudPlatform
 */
@interface GTLRBackupdrQuery_ProjectsLocationsManagementServersSetIamPolicy : GTLRBackupdrQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupdr_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRBackupdr_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupdrQuery_ProjectsLocationsManagementServersSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBackupdr_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: backupdr.projects.locations.managementServers.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupdrCloudPlatform
 */
@interface GTLRBackupdrQuery_ProjectsLocationsManagementServersTestIamPermissions : GTLRBackupdrQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBackupdr_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBackupdr_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBackupdrQuery_ProjectsLocationsManagementServersTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBackupdr_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: backupdr.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupdrCloudPlatform
 */
@interface GTLRBackupdrQuery_ProjectsLocationsOperationsCancel : GTLRBackupdrQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupdr_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRBackupdr_CancelOperationRequest to include in the
 *    query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRBackupdrQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRBackupdr_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: backupdr.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupdrCloudPlatform
 */
@interface GTLRBackupdrQuery_ProjectsLocationsOperationsDelete : GTLRBackupdrQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupdr_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRBackupdrQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: backupdr.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupdrCloudPlatform
 */
@interface GTLRBackupdrQuery_ProjectsLocationsOperationsGet : GTLRBackupdrQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBackupdr_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRBackupdrQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: backupdr.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBackupdrCloudPlatform
 */
@interface GTLRBackupdrQuery_ProjectsLocationsOperationsList : GTLRBackupdrQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRBackupdr_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRBackupdrQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
