// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Retail API (retail/v2)
// Description:
//   Cloud Retail service enables customers to build end-to-end personalized
//   recommendation systems without requiring a high level of expertise in
//   machine learning, recommendation system, or Google Cloud.
// Documentation:
//   https://cloud.google.com/recommendations

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudRetail_GoogleApiHttpBody_Extensions_Item;
@class GTLRCloudRetail_GoogleCloudRetailLoggingErrorContext;
@class GTLRCloudRetail_GoogleCloudRetailLoggingErrorLog_RequestPayload;
@class GTLRCloudRetail_GoogleCloudRetailLoggingErrorLog_ResponsePayload;
@class GTLRCloudRetail_GoogleCloudRetailLoggingHttpRequestContext;
@class GTLRCloudRetail_GoogleCloudRetailLoggingImportErrorContext;
@class GTLRCloudRetail_GoogleCloudRetailLoggingServiceContext;
@class GTLRCloudRetail_GoogleCloudRetailLoggingSourceLocation;
@class GTLRCloudRetail_GoogleCloudRetailV2alphaBigQueryOutputResult;
@class GTLRCloudRetail_GoogleCloudRetailV2alphaExportErrorsConfig;
@class GTLRCloudRetail_GoogleCloudRetailV2alphaGcsOutputResult;
@class GTLRCloudRetail_GoogleCloudRetailV2alphaImportErrorsConfig;
@class GTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfig;
@class GTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfigCandidate;
@class GTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfigPanel;
@class GTLRCloudRetail_GoogleCloudRetailV2alphaModelServingConfigList;
@class GTLRCloudRetail_GoogleCloudRetailV2alphaOutputResult;
@class GTLRCloudRetail_GoogleCloudRetailV2alphaTransformedUserEventsMetadata;
@class GTLRCloudRetail_GoogleCloudRetailV2alphaUserEventImportSummary;
@class GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig_CatalogAttributes;
@class GTLRCloudRetail_GoogleCloudRetailV2Audience;
@class GTLRCloudRetail_GoogleCloudRetailV2betaBigQueryOutputResult;
@class GTLRCloudRetail_GoogleCloudRetailV2betaExportErrorsConfig;
@class GTLRCloudRetail_GoogleCloudRetailV2betaGcsOutputResult;
@class GTLRCloudRetail_GoogleCloudRetailV2betaImportErrorsConfig;
@class GTLRCloudRetail_GoogleCloudRetailV2betaModelServingConfigList;
@class GTLRCloudRetail_GoogleCloudRetailV2betaOutputResult;
@class GTLRCloudRetail_GoogleCloudRetailV2betaUserEventImportSummary;
@class GTLRCloudRetail_GoogleCloudRetailV2BigQuerySource;
@class GTLRCloudRetail_GoogleCloudRetailV2Catalog;
@class GTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute;
@class GTLRCloudRetail_GoogleCloudRetailV2ColorInfo;
@class GTLRCloudRetail_GoogleCloudRetailV2CompleteQueryResponseCompletionResult;
@class GTLRCloudRetail_GoogleCloudRetailV2CompleteQueryResponseCompletionResult_Attributes;
@class GTLRCloudRetail_GoogleCloudRetailV2CompleteQueryResponseRecentSearchResult;
@class GTLRCloudRetail_GoogleCloudRetailV2CompletionDataInputConfig;
@class GTLRCloudRetail_GoogleCloudRetailV2CompletionDetail;
@class GTLRCloudRetail_GoogleCloudRetailV2Condition;
@class GTLRCloudRetail_GoogleCloudRetailV2ConditionQueryTerm;
@class GTLRCloudRetail_GoogleCloudRetailV2ConditionTimeRange;
@class GTLRCloudRetail_GoogleCloudRetailV2Control;
@class GTLRCloudRetail_GoogleCloudRetailV2CustomAttribute;
@class GTLRCloudRetail_GoogleCloudRetailV2FulfillmentInfo;
@class GTLRCloudRetail_GoogleCloudRetailV2GcsSource;
@class GTLRCloudRetail_GoogleCloudRetailV2Image;
@class GTLRCloudRetail_GoogleCloudRetailV2ImportErrorsConfig;
@class GTLRCloudRetail_GoogleCloudRetailV2Interval;
@class GTLRCloudRetail_GoogleCloudRetailV2LocalInventory;
@class GTLRCloudRetail_GoogleCloudRetailV2LocalInventory_Attributes;
@class GTLRCloudRetail_GoogleCloudRetailV2PredictRequest_Labels;
@class GTLRCloudRetail_GoogleCloudRetailV2PredictRequest_Params;
@class GTLRCloudRetail_GoogleCloudRetailV2PredictResponsePredictionResult;
@class GTLRCloudRetail_GoogleCloudRetailV2PredictResponsePredictionResult_Metadata;
@class GTLRCloudRetail_GoogleCloudRetailV2PriceInfo;
@class GTLRCloudRetail_GoogleCloudRetailV2PriceInfoPriceRange;
@class GTLRCloudRetail_GoogleCloudRetailV2Product;
@class GTLRCloudRetail_GoogleCloudRetailV2Product_Attributes;
@class GTLRCloudRetail_GoogleCloudRetailV2ProductDetail;
@class GTLRCloudRetail_GoogleCloudRetailV2ProductInlineSource;
@class GTLRCloudRetail_GoogleCloudRetailV2ProductInputConfig;
@class GTLRCloudRetail_GoogleCloudRetailV2ProductLevelConfig;
@class GTLRCloudRetail_GoogleCloudRetailV2Promotion;
@class GTLRCloudRetail_GoogleCloudRetailV2PurchaseTransaction;
@class GTLRCloudRetail_GoogleCloudRetailV2Rating;
@class GTLRCloudRetail_GoogleCloudRetailV2Rule;
@class GTLRCloudRetail_GoogleCloudRetailV2RuleBoostAction;
@class GTLRCloudRetail_GoogleCloudRetailV2RuleDoNotAssociateAction;
@class GTLRCloudRetail_GoogleCloudRetailV2RuleFilterAction;
@class GTLRCloudRetail_GoogleCloudRetailV2RuleIgnoreAction;
@class GTLRCloudRetail_GoogleCloudRetailV2RuleOnewaySynonymsAction;
@class GTLRCloudRetail_GoogleCloudRetailV2RuleRedirectAction;
@class GTLRCloudRetail_GoogleCloudRetailV2RuleReplacementAction;
@class GTLRCloudRetail_GoogleCloudRetailV2RuleTwowaySynonymsAction;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchRequest_Labels;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchRequestBoostSpec;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchRequestDynamicFacetSpec;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchRequestFacetSpec;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchRequestFacetSpecFacetKey;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchRequestPersonalizationSpec;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchRequestQueryExpansionSpec;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchRequestSpellCorrectionSpec;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchResponseFacet;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchResponseFacetFacetValue;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchResponseQueryExpansionInfo;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchResponseSearchResult;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchResponseSearchResult_MatchingVariantFields;
@class GTLRCloudRetail_GoogleCloudRetailV2SearchResponseSearchResult_VariantRollupValues;
@class GTLRCloudRetail_GoogleCloudRetailV2ServingConfig;
@class GTLRCloudRetail_GoogleCloudRetailV2UserEvent;
@class GTLRCloudRetail_GoogleCloudRetailV2UserEvent_Attributes;
@class GTLRCloudRetail_GoogleCloudRetailV2UserEventImportSummary;
@class GTLRCloudRetail_GoogleCloudRetailV2UserEventInlineSource;
@class GTLRCloudRetail_GoogleCloudRetailV2UserEventInputConfig;
@class GTLRCloudRetail_GoogleCloudRetailV2UserInfo;
@class GTLRCloudRetail_GoogleLongrunningOperation;
@class GTLRCloudRetail_GoogleLongrunningOperation_Metadata;
@class GTLRCloudRetail_GoogleLongrunningOperation_Response;
@class GTLRCloudRetail_GoogleRpcStatus;
@class GTLRCloudRetail_GoogleRpcStatus_Details_Item;
@class GTLRCloudRetail_GoogleTypeDate;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2alphaModel.dataState

/**
 *  The model does not have sufficient training data. Error messages can be
 *  queried via Stackdriver.
 *
 *  Value: "DATA_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_DataState_DataError;
/**
 *  The model has sufficient training data.
 *
 *  Value: "DATA_OK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_DataState_DataOk;
/**
 *  Unspecified default value, should never be explicitly set.
 *
 *  Value: "DATA_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_DataState_DataStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2alphaModel.filteringOption

/**
 *  Recommendation filtering is disabled.
 *
 *  Value: "RECOMMENDATIONS_FILTERING_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_FilteringOption_RecommendationsFilteringDisabled;
/**
 *  Recommendation filtering is enabled.
 *
 *  Value: "RECOMMENDATIONS_FILTERING_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_FilteringOption_RecommendationsFilteringEnabled;
/**
 *  Value used when unset. In this case, server behavior defaults to
 *  RECOMMENDATIONS_FILTERING_DISABLED.
 *
 *  Value: "RECOMMENDATIONS_FILTERING_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_FilteringOption_RecommendationsFilteringOptionUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2alphaModel.periodicTuningState

/**
 *  The model cannot be tuned with periodic tuning OR the `TuneModel` method.
 *  Hide the options in customer UI and reject any requests through the backend
 *  self serve API.
 *
 *  Value: "ALL_TUNING_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_PeriodicTuningState_AllTuningDisabled;
/**
 *  The model has periodic tuning disabled. Tuning can be reenabled by calling
 *  the `EnableModelPeriodicTuning` method or by calling the `TuneModel` method.
 *
 *  Value: "PERIODIC_TUNING_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_PeriodicTuningState_PeriodicTuningDisabled;
/**
 *  The model has periodic tuning enabled. Tuning can be disabled by calling the
 *  `DisableModelPeriodicTuning` method.
 *
 *  Value: "PERIODIC_TUNING_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_PeriodicTuningState_PeriodicTuningEnabled;
/**
 *  Unspecified default value, should never be explicitly set.
 *
 *  Value: "PERIODIC_TUNING_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_PeriodicTuningState_PeriodicTuningStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2alphaModel.servingState

/**
 *  The model is serving and can be queried.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_ServingState_Active;
/**
 *  The model is not serving.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_ServingState_Inactive;
/**
 *  Unspecified serving state.
 *
 *  Value: "SERVING_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_ServingState_ServingStateUnspecified;
/**
 *  The model is trained on tuned hyperparameters and can be queried.
 *
 *  Value: "TUNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_ServingState_Tuned;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2alphaModel.trainingState

/**
 *  The model training is paused.
 *
 *  Value: "PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_TrainingState_Paused;
/**
 *  The model is training.
 *
 *  Value: "TRAINING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_TrainingState_Training;
/**
 *  Unspecified training state.
 *
 *  Value: "TRAINING_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_TrainingState_TrainingStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfig.restriction

/**
 *  Allow any ServingConfig to be show on any number of panels. Example: `Panel1
 *  candidates`: pdp_ctr, pdp_cvr, home_page_ctr_no_diversity `Panel2
 *  candidates`: home_page_ctr_no_diversity, home_page_ctr_diversity,
 *  pdp_cvr_no_diversity `Restriction` = NO_RESTRICTION `Valid combinations`: *
 *  * (pdp_ctr, home_page_ctr_no_diversity) * (pdp_ctr, home_page_ctr_diversity)
 *  * (pdp_ctr, pdp_cvr_no_diversity) * (pdp_cvr, home_page_ctr_no_diversity) *
 *  (pdp_cvr, home_page_ctr_diversity) * (pdp_cvr, pdp_cvr_no_diversity) *
 *  (home_page_ctr_no_diversity, home_page_ctr_no_diversity) *
 *  (home_page_ctr_no_diversity, home_page_ctr_diversity) *
 *  (home_page_ctr_no_diversity, pdp_cvr_no_diversity) * `Invalid combinations`:
 *  []
 *
 *  Value: "NO_RESTRICTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfig_Restriction_NoRestriction;
/**
 *  Unspecified value for restriction.
 *
 *  Value: "RESTRICTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfig_Restriction_RestrictionUnspecified;
/**
 *  Do not allow multiple ServingConfigs with same Model.name to be show on on
 *  different panels. Example: `Panel1 candidates`: * pdp_ctr, pdp_cvr,
 *  home_page_ctr_no_diversity * `Panel2 candidates`: *
 *  home_page_ctr_no_diversity, home_page_ctr_diversity_low,
 *  pdp_cvr_no_diversity * `Restriction` = `UNIQUE_MODEL_RESTRICTION` `Valid
 *  combinations`: * * (pdp_ctr, home_page_ctr_no_diversity) * (pdp_ctr,
 *  home_page_ctr_diversity) * (pdp_ctr, pdp_cvr_no_diversity) * (pdp_ctr,
 *  pdp_cvr_no_diversity) * (pdp_cvr, home_page_ctr_no_diversity) * (pdp_cvr,
 *  home_page_ctr_diversity_low) * (home_page_ctr_no_diversity,
 *  pdp_cvr_no_diversity) * `Invalid combinations`: * *
 *  (home_page_ctr_no_diversity, home_page_ctr_no_diversity) * (pdp_cvr,
 *  pdp_cvr_no_diversity) *
 *
 *  Value: "UNIQUE_MODEL_RESTRICTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfig_Restriction_UniqueModelRestriction;
/**
 *  Do not allow multiple ServingConfigs with same Model.type to be shown on
 *  different panels. Example: `Panel1 candidates`: * pdp_ctr, pdp_cvr,
 *  home_page_ctr_no_diversity * `Panel2 candidates`: *
 *  home_page_ctr_no_diversity, home_page_ctr_diversity_low,
 *  pdp_cvr_no_diversity * `Restriction` = `UNIQUE_MODEL_RESTRICTION` `Valid
 *  combinations`: * * (pdp_ctr, home_page_ctr_no_diversity) * (pdp_ctr,
 *  home_page_ctr_diversity) * (pdp_cvr, home_page_ctr_no_diversity) * (pdp_cvr,
 *  home_page_ctr_diversity_low) * (home_page_ctr_no_diversity,
 *  pdp_cvr_no_diversity) * `Invalid combinations`: * * (pdp_ctr,
 *  pdp_cvr_no_diversity) * (pdp_ctr, pdp_cvr_no_diversity) * (pdp_cvr,
 *  pdp_cvr_no_diversity) * (home_page_ctr_no_diversity,
 *  home_page_ctr_no_diversity) * (home_page_ctr_no_diversity,
 *  home_page_ctr_diversity) *
 *
 *  Value: "UNIQUE_MODEL_TYPE_RESTRICTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfig_Restriction_UniqueModelTypeRestriction;
/**
 *  Do not allow the same ServingConfig.name to be shown on multiple panels.
 *  Example: `Panel1 candidates`: * pdp_ctr, pdp_cvr, home_page_ctr_no_diversity
 *  * `Panel2 candidates`: * home_page_ctr_no_diversity,
 *  home_page_ctr_diversity_low, pdp_cvr_no_diversity * `Restriction` =
 *  `UNIQUE_SERVING_CONFIG_RESTRICTION` `Valid combinations`: * * (pdp_ctr,
 *  home_page_ctr_no_diversity) * (pdp_ctr, home_page_ctr_diversity_low) *
 *  (pdp_ctr, pdp_cvr_no_diversity) * (pdp_ctr, pdp_cvr_no_diversity) *
 *  (pdp_cvr, home_page_ctr_no_diversity) * (pdp_cvr,
 *  home_page_ctr_diversity_low) * (pdp_cvr, pdp_cvr_no_diversity) *
 *  (home_page_ctr_no_diversity, home_page_ctr_diversity_low) *
 *  (home_page_ctr_no_diversity, pdp_cvr_no_diversity) * `Invalid combinations`:
 *  * * (home_page_ctr_no_diversity, home_page_ctr_no_diversity) *
 *
 *  Value: "UNIQUE_SERVING_CONFIG_RESTRICTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfig_Restriction_UniqueServingConfigRestriction;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig.attributeConfigLevel

/**
 *  Value used when unset. In this case, server behavior defaults to
 *  CATALOG_LEVEL_ATTRIBUTE_CONFIG.
 *
 *  Value: "ATTRIBUTE_CONFIG_LEVEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2AttributesConfig_AttributeConfigLevel_AttributeConfigLevelUnspecified;
/**
 *  At this level, we honor the attribute configurations set in
 *  CatalogConfig.attribute_configs.
 *
 *  Value: "CATALOG_LEVEL_ATTRIBUTE_CONFIG"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2AttributesConfig_AttributeConfigLevel_CatalogLevelAttributeConfig;
/**
 *  At this level, we honor the attribute configurations set in
 *  Product.attributes.
 *
 *  Value: "PRODUCT_LEVEL_ATTRIBUTE_CONFIG"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2AttributesConfig_AttributeConfigLevel_ProductLevelAttributeConfig;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2betaModel.dataState

/**
 *  The model does not have sufficient training data. Error messages can be
 *  queried via Stackdriver.
 *
 *  Value: "DATA_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_DataState_DataError;
/**
 *  The model has sufficient training data.
 *
 *  Value: "DATA_OK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_DataState_DataOk;
/**
 *  Unspecified default value, should never be explicitly set.
 *
 *  Value: "DATA_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_DataState_DataStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2betaModel.filteringOption

/**
 *  Recommendation filtering is disabled.
 *
 *  Value: "RECOMMENDATIONS_FILTERING_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_FilteringOption_RecommendationsFilteringDisabled;
/**
 *  Recommendation filtering is enabled.
 *
 *  Value: "RECOMMENDATIONS_FILTERING_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_FilteringOption_RecommendationsFilteringEnabled;
/**
 *  Value used when unset. In this case, server behavior defaults to
 *  RECOMMENDATIONS_FILTERING_DISABLED.
 *
 *  Value: "RECOMMENDATIONS_FILTERING_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_FilteringOption_RecommendationsFilteringOptionUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2betaModel.periodicTuningState

/**
 *  The model cannot be tuned with periodic tuning OR the `TuneModel` method.
 *  Hide the options in customer UI and reject any requests through the backend
 *  self serve API.
 *
 *  Value: "ALL_TUNING_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_PeriodicTuningState_AllTuningDisabled;
/**
 *  The model has periodic tuning disabled. Tuning can be reenabled by calling
 *  the `EnableModelPeriodicTuning` method or by calling the `TuneModel` method.
 *
 *  Value: "PERIODIC_TUNING_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_PeriodicTuningState_PeriodicTuningDisabled;
/**
 *  The model has periodic tuning enabled. Tuning can be disabled by calling the
 *  `DisableModelPeriodicTuning` method.
 *
 *  Value: "PERIODIC_TUNING_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_PeriodicTuningState_PeriodicTuningEnabled;
/**
 *  Unspecified default value, should never be explicitly set.
 *
 *  Value: "PERIODIC_TUNING_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_PeriodicTuningState_PeriodicTuningStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2betaModel.servingState

/**
 *  The model is serving and can be queried.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_ServingState_Active;
/**
 *  The model is not serving.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_ServingState_Inactive;
/**
 *  Unspecified serving state.
 *
 *  Value: "SERVING_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_ServingState_ServingStateUnspecified;
/**
 *  The model is trained on tuned hyperparameters and can be queried.
 *
 *  Value: "TUNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_ServingState_Tuned;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2betaModel.trainingState

/**
 *  The model training is paused.
 *
 *  Value: "PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_TrainingState_Paused;
/**
 *  The model is training.
 *
 *  Value: "TRAINING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_TrainingState_Training;
/**
 *  Unspecified training state.
 *
 *  Value: "TRAINING_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2betaModel_TrainingState_TrainingStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute.dynamicFacetableOption

/**
 *  Dynamic facetable option disabled for an attribute.
 *
 *  Value: "DYNAMIC_FACETABLE_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_DynamicFacetableOption_DynamicFacetableDisabled;
/**
 *  Dynamic facetable option enabled for an attribute.
 *
 *  Value: "DYNAMIC_FACETABLE_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_DynamicFacetableOption_DynamicFacetableEnabled;
/**
 *  Value used when unset.
 *
 *  Value: "DYNAMIC_FACETABLE_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_DynamicFacetableOption_DynamicFacetableOptionUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute.exactSearchableOption

/**
 *  Exact searchable option disabled for an attribute.
 *
 *  Value: "EXACT_SEARCHABLE_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_ExactSearchableOption_ExactSearchableDisabled;
/**
 *  Exact searchable option enabled for an attribute.
 *
 *  Value: "EXACT_SEARCHABLE_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_ExactSearchableOption_ExactSearchableEnabled;
/**
 *  Value used when unset. Defaults to EXACT_SEARCHABLE_DISABLED.
 *
 *  Value: "EXACT_SEARCHABLE_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_ExactSearchableOption_ExactSearchableOptionUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute.indexableOption

/**
 *  Indexable option disabled for an attribute.
 *
 *  Value: "INDEXABLE_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_IndexableOption_IndexableDisabled;
/**
 *  Indexable option enabled for an attribute.
 *
 *  Value: "INDEXABLE_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_IndexableOption_IndexableEnabled;
/**
 *  Value used when unset.
 *
 *  Value: "INDEXABLE_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_IndexableOption_IndexableOptionUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute.searchableOption

/**
 *  Searchable option disabled for an attribute.
 *
 *  Value: "SEARCHABLE_DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_SearchableOption_SearchableDisabled;
/**
 *  Searchable option enabled for an attribute.
 *
 *  Value: "SEARCHABLE_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_SearchableOption_SearchableEnabled;
/**
 *  Value used when unset.
 *
 *  Value: "SEARCHABLE_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_SearchableOption_SearchableOptionUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute.type

/**
 *  Numerical attribute.
 *
 *  Value: "NUMERICAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_Type_Numerical;
/**
 *  Textual attribute.
 *
 *  Value: "TEXTUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_Type_Textual;
/**
 *  The type of the attribute is unknown. Used when type cannot be derived from
 *  attribute that is not in_use.
 *
 *  Value: "UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_Type_Unknown;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2Control.searchSolutionUseCase

/**
 *  Browse use case. Expects the traffic has an empty query.
 *
 *  Value: "SEARCH_SOLUTION_USE_CASE_BROWSE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2Control_SearchSolutionUseCase_SearchSolutionUseCaseBrowse;
/**
 *  Search use case. Expects the traffic has a non-empty query.
 *
 *  Value: "SEARCH_SOLUTION_USE_CASE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2Control_SearchSolutionUseCase_SearchSolutionUseCaseSearch;
/**
 *  The value when it's unspecified. In this case, server behavior defaults to
 *  SEARCH_SOLUTION_USE_CASE_SEARCH.
 *
 *  Value: "SEARCH_SOLUTION_USE_CASE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2Control_SearchSolutionUseCase_SearchSolutionUseCaseUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2Control.solutionTypes

/**
 *  Used for Recommendations AI.
 *
 *  Value: "SOLUTION_TYPE_RECOMMENDATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2Control_SolutionTypes_SolutionTypeRecommendation;
/**
 *  Used for Retail Search.
 *
 *  Value: "SOLUTION_TYPE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2Control_SolutionTypes_SolutionTypeSearch;
/**
 *  Default value.
 *
 *  Value: "SOLUTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2Control_SolutionTypes_SolutionTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2ImportProductsRequest.reconciliationMode

/**
 *  Calculates diff and replaces the entire product dataset. Existing products
 *  may be deleted if they are not present in the source location.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2ImportProductsRequest_ReconciliationMode_Full;
/**
 *  Inserts new products or updates existing products.
 *
 *  Value: "INCREMENTAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2ImportProductsRequest_ReconciliationMode_Incremental;
/**
 *  Defaults to INCREMENTAL.
 *
 *  Value: "RECONCILIATION_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2ImportProductsRequest_ReconciliationMode_ReconciliationModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2Product.availability

/**
 *  Default product availability. Default to Availability.IN_STOCK if unset.
 *
 *  Value: "AVAILABILITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2Product_Availability_AvailabilityUnspecified;
/**
 *  Product that is back-ordered (i.e. temporarily out of stock).
 *
 *  Value: "BACKORDER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2Product_Availability_Backorder;
/**
 *  Product in stock.
 *
 *  Value: "IN_STOCK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2Product_Availability_InStock;
/**
 *  Product out of stock.
 *
 *  Value: "OUT_OF_STOCK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2Product_Availability_OutOfStock;
/**
 *  Product that is in pre-order state.
 *
 *  Value: "PREORDER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2Product_Availability_Preorder;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2Product.type

/**
 *  The collection type. Collection products are bundled Type.PRIMARY Products
 *  or Type.VARIANT Products that are sold together, such as a jewelry set with
 *  necklaces, earrings and rings, etc.
 *
 *  Value: "COLLECTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2Product_Type_Collection;
/**
 *  The primary type. As the primary unit for predicting, indexing and search
 *  serving, a Type.PRIMARY Product is grouped with multiple Type.VARIANT
 *  Products.
 *
 *  Value: "PRIMARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2Product_Type_Primary;
/**
 *  Default value. Default to
 *  Catalog.product_level_config.ingestion_product_type if unset.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2Product_Type_TypeUnspecified;
/**
 *  The variant type. Type.VARIANT Products usually share some common attributes
 *  on the same Type.PRIMARY Products, but they have variant attributes like
 *  different colors, sizes and prices, etc.
 *
 *  Value: "VARIANT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2Product_Type_Variant;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsRequest.userEventRejoinScope

/**
 *  Only rejoin joined events with the latest product catalog.
 *
 *  Value: "JOINED_EVENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsRequest_UserEventRejoinScope_JoinedEvents;
/**
 *  Only rejoin unjoined events with the latest product catalog.
 *
 *  Value: "UNJOINED_EVENTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsRequest_UserEventRejoinScope_UnjoinedEvents;
/**
 *  Rejoin all events with the latest product catalog, including both joined
 *  events and unjoined events.
 *
 *  Value: "USER_EVENT_REJOIN_SCOPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsRequest_UserEventRejoinScope_UserEventRejoinScopeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2SearchRequest.searchMode

/**
 *  Only faceted search will be performed. The product search will be disabled.
 *  When in this mode, one or both of SearchRequest.facet_specs and
 *  SearchRequest.dynamic_facet_spec should be set. Otherwise, an
 *  INVALID_ARGUMENT error is returned. Only SearchResponse.Facet will be
 *  returned. SearchResponse.SearchResult will not be returned.
 *
 *  Value: "FACETED_SEARCH_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2SearchRequest_SearchMode_FacetedSearchOnly;
/**
 *  Only product search will be performed. The faceted search will be disabled.
 *  Only SearchResponse.SearchResult will be returned. SearchResponse.Facet will
 *  not be returned, even if SearchRequest.facet_specs or
 *  SearchRequest.dynamic_facet_spec is set.
 *
 *  Value: "PRODUCT_SEARCH_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2SearchRequest_SearchMode_ProductSearchOnly;
/**
 *  Default value. In this case both product search and faceted search will be
 *  performed. Both SearchResponse.SearchResult and SearchResponse.Facet will be
 *  returned.
 *
 *  Value: "SEARCH_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2SearchRequest_SearchMode_SearchModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2SearchRequestDynamicFacetSpec.mode

/**
 *  Disable Dynamic Facet.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestDynamicFacetSpec_Mode_Disabled;
/**
 *  Automatic mode built by Google Retail Search.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestDynamicFacetSpec_Mode_Enabled;
/**
 *  Default value.
 *
 *  Value: "MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestDynamicFacetSpec_Mode_ModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2SearchRequestPersonalizationSpec.mode

/**
 *  Let CRS decide whether to use personalization based on quality of user event
 *  data.
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestPersonalizationSpec_Mode_Auto;
/**
 *  Disable personalization.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestPersonalizationSpec_Mode_Disabled;
/**
 *  Default value. In this case, server behavior defaults to Mode.AUTO.
 *
 *  Value: "MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestPersonalizationSpec_Mode_ModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2SearchRequestQueryExpansionSpec.condition

/**
 *  Automatic query expansion built by Google Retail Search.
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestQueryExpansionSpec_Condition_Auto;
/**
 *  Unspecified query expansion condition. In this case, server behavior
 *  defaults to Condition.DISABLED.
 *
 *  Value: "CONDITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestQueryExpansionSpec_Condition_ConditionUnspecified;
/**
 *  Disabled query expansion. Only the exact search query is used, even if
 *  SearchResponse.total_size is zero.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestQueryExpansionSpec_Condition_Disabled;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2SearchRequestSpellCorrectionSpec.mode

/**
 *  Automatic spell correction built by Google Retail Search. Search will be
 *  based on the corrected query if found.
 *
 *  Value: "AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestSpellCorrectionSpec_Mode_Auto;
/**
 *  Unspecified spell correction mode. In this case, server behavior defaults to
 *  Mode.AUTO.
 *
 *  Value: "MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestSpellCorrectionSpec_Mode_ModeUnspecified;
/**
 *  Google Retail Search will try to find a spell suggestion if there is any and
 *  put in the SearchResponse.corrected_query. The spell suggestion will not be
 *  used as the search query.
 *
 *  Value: "SUGGESTION_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestSpellCorrectionSpec_Mode_SuggestionOnly;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2ServingConfig.diversityType

/**
 *  Data driven diversity.
 *
 *  Value: "DATA_DRIVEN_DIVERSITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2ServingConfig_DiversityType_DataDrivenDiversity;
/**
 *  Default value.
 *
 *  Value: "DIVERSITY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2ServingConfig_DiversityType_DiversityTypeUnspecified;
/**
 *  Rule based diversity.
 *
 *  Value: "RULE_BASED_DIVERSITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2ServingConfig_DiversityType_RuleBasedDiversity;

// ----------------------------------------------------------------------------
// GTLRCloudRetail_GoogleCloudRetailV2ServingConfig.solutionTypes

/**
 *  Used for Recommendations AI.
 *
 *  Value: "SOLUTION_TYPE_RECOMMENDATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2ServingConfig_SolutionTypes_SolutionTypeRecommendation;
/**
 *  Used for Retail Search.
 *
 *  Value: "SOLUTION_TYPE_SEARCH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2ServingConfig_SolutionTypes_SolutionTypeSearch;
/**
 *  Default value.
 *
 *  Value: "SOLUTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudRetail_GoogleCloudRetailV2ServingConfig_SolutionTypes_SolutionTypeUnspecified;

/**
 *  Message that represents an arbitrary HTTP body. It should only be used for
 *  payload formats that can't be represented as JSON, such as raw binary or an
 *  HTML page. This message can be used both in streaming and non-streaming API
 *  methods in the request as well as the response. It can be used as a
 *  top-level request field, which is convenient if one wants to extract
 *  parameters from either the URL or HTTP template into the request fields and
 *  also want access to the raw HTTP body. Example: message GetResourceRequest {
 *  // A unique request id. string request_id = 1; // The raw HTTP body is bound
 *  to this field. google.api.HttpBody http_body = 2; } service ResourceService
 *  { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc
 *  UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); }
 *  Example with streaming methods: service CaldavService { rpc
 *  GetCalendar(stream google.api.HttpBody) returns (stream
 *  google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns
 *  (stream google.api.HttpBody); } Use of this type only changes how the
 *  request and response bodies are handled, all other features will continue to
 *  work unchanged.
 */
@interface GTLRCloudRetail_GoogleApiHttpBody : GTLRObject

/**
 *  The HTTP Content-Type header value specifying the content type of the body.
 */
@property(nonatomic, copy, nullable) NSString *contentType;

/**
 *  The HTTP request/response body as raw binary.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *data;

/**
 *  Application specific response metadata. Must be set in the first response
 *  for streaming APIs.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleApiHttpBody_Extensions_Item *> *extensions;

@end


/**
 *  GTLRCloudRetail_GoogleApiHttpBody_Extensions_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleApiHttpBody_Extensions_Item : GTLRObject
@end


/**
 *  A description of the context in which an error occurred.
 */
@interface GTLRCloudRetail_GoogleCloudRetailLoggingErrorContext : GTLRObject

/** The HTTP request which was processed when the error was triggered. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailLoggingHttpRequestContext *httpRequest;

/**
 *  The location in the source code where the decision was made to report the
 *  error, usually the place where it was logged.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailLoggingSourceLocation *reportLocation;

@end


/**
 *  An error log which is reported to the Error Reporting system. This proto a
 *  superset of google.devtools.clouderrorreporting.v1beta1.ReportedErrorEvent.
 */
@interface GTLRCloudRetail_GoogleCloudRetailLoggingErrorLog : GTLRObject

/** A description of the context in which the error occurred. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailLoggingErrorContext *context;

/** The error payload that is populated on LRO import APIs. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailLoggingImportErrorContext *importPayload;

/** A message describing the error. */
@property(nonatomic, copy, nullable) NSString *message;

/**
 *  The API request payload, represented as a protocol buffer. Most API request
 *  types are supported. For example:
 *  "type.googleapis.com/google.cloud.retail.v2.ProductService.CreateProductRequest"
 *  "type.googleapis.com/google.cloud.retail.v2.UserEventService.WriteUserEventRequest"
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailLoggingErrorLog_RequestPayload *requestPayload;

/**
 *  The API response payload, represented as a protocol buffer. This is used to
 *  log some "soft errors", where the response is valid but we consider there
 *  are some quality issues like unjoined events. The following API responses
 *  are supported and no PII is included:
 *  "google.cloud.retail.v2.PredictionService.Predict"
 *  "google.cloud.retail.v2.UserEventService.WriteUserEvent"
 *  "google.cloud.retail.v2.UserEventService.CollectUserEvent"
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailLoggingErrorLog_ResponsePayload *responsePayload;

/** The service context in which this error has occurred. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailLoggingServiceContext *serviceContext;

/** The RPC status associated with the error log. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleRpcStatus *status;

@end


/**
 *  The API request payload, represented as a protocol buffer. Most API request
 *  types are supported. For example:
 *  "type.googleapis.com/google.cloud.retail.v2.ProductService.CreateProductRequest"
 *  "type.googleapis.com/google.cloud.retail.v2.UserEventService.WriteUserEventRequest"
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleCloudRetailLoggingErrorLog_RequestPayload : GTLRObject
@end


/**
 *  The API response payload, represented as a protocol buffer. This is used to
 *  log some "soft errors", where the response is valid but we consider there
 *  are some quality issues like unjoined events. The following API responses
 *  are supported and no PII is included:
 *  "google.cloud.retail.v2.PredictionService.Predict"
 *  "google.cloud.retail.v2.UserEventService.WriteUserEvent"
 *  "google.cloud.retail.v2.UserEventService.CollectUserEvent"
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleCloudRetailLoggingErrorLog_ResponsePayload : GTLRObject
@end


/**
 *  HTTP request data that is related to a reported error.
 */
@interface GTLRCloudRetail_GoogleCloudRetailLoggingHttpRequestContext : GTLRObject

/**
 *  The HTTP response status code for the request.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *responseStatusCode;

@end


/**
 *  The error payload that is populated on LRO import APIs, including
 *  "google.cloud.retail.v2.ProductService.ImportProducts" and
 *  "google.cloud.retail.v2.EventService.ImportUserEvents".
 */
@interface GTLRCloudRetail_GoogleCloudRetailLoggingImportErrorContext : GTLRObject

/**
 *  The detailed content which caused the error on importing a catalog item.
 */
@property(nonatomic, copy, nullable) NSString *catalogItem;

/**
 *  Cloud Storage file path of the import source. Can be set for batch operation
 *  error.
 */
@property(nonatomic, copy, nullable) NSString *gcsPath;

/**
 *  Line number of the content in file. Should be empty for permission or batch
 *  operation error.
 */
@property(nonatomic, copy, nullable) NSString *lineNumber;

/** The operation resource name of the LRO. */
@property(nonatomic, copy, nullable) NSString *operationName;

/** The detailed content which caused the error on importing a product. */
@property(nonatomic, copy, nullable) NSString *product;

/** The detailed content which caused the error on importing a user event. */
@property(nonatomic, copy, nullable) NSString *userEvent;

@end


/**
 *  Describes a running service that sends errors.
 */
@interface GTLRCloudRetail_GoogleCloudRetailLoggingServiceContext : GTLRObject

/** An identifier of the service. For example, "retail.googleapis.com". */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Indicates a location in the source code of the service for which errors are
 *  reported.
 */
@interface GTLRCloudRetail_GoogleCloudRetailLoggingSourceLocation : GTLRObject

/**
 *  Human-readable name of a function or method. For example,
 *  "google.cloud.retail.v2.UserEventService.ImportUserEvents".
 */
@property(nonatomic, copy, nullable) NSString *functionName;

@end


/**
 *  Request for CatalogService.AddCatalogAttribute method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2AddCatalogAttributeRequest : GTLRObject

/** Required. The CatalogAttribute to add. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute *catalogAttribute;

@end


/**
 *  Request for AddControl method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2AddControlRequest : GTLRObject

/**
 *  Required. The id of the control to apply. Assumed to be in the same catalog
 *  as the serving config - if id is not found a NOT_FOUND error is returned.
 */
@property(nonatomic, copy, nullable) NSString *controlId;

@end


/**
 *  Metadata related to the progress of the AddFulfillmentPlaces operation.
 *  Currently empty because there is no meaningful metadata populated from the
 *  ProductService.AddFulfillmentPlaces method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2AddFulfillmentPlacesMetadata : GTLRObject
@end


/**
 *  Request message for ProductService.AddFulfillmentPlaces method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2AddFulfillmentPlacesRequest : GTLRObject

/**
 *  The time when the fulfillment updates are issued, used to prevent
 *  out-of-order updates on fulfillment information. If not provided, the
 *  internal system time will be used.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *addTime;

/**
 *  If set to true, and the Product is not found, the fulfillment information
 *  will still be processed and retained for at most 1 day and processed once
 *  the Product is created. If set to false, a NOT_FOUND error is returned if
 *  the Product is not found.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowMissing;

/**
 *  Required. The IDs for this type, such as the store IDs for "pickup-in-store"
 *  or the region IDs for "same-day-delivery" to be added for this type.
 *  Duplicate IDs will be automatically ignored. At least 1 value is required,
 *  and a maximum of 2000 values are allowed. Each value must be a string with a
 *  length limit of 10 characters, matching the pattern `[a-zA-Z0-9_-]+`, such
 *  as "store1" or "REGION-2". Otherwise, an INVALID_ARGUMENT error is returned.
 *  If the total number of place IDs exceeds 2000 for this type after adding,
 *  then the update will be rejected.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *placeIds;

/**
 *  Required. The fulfillment type, including commonly used types (such as
 *  pickup in store and same day delivery), and custom types. Supported values:
 *  * "pickup-in-store" * "ship-to-store" * "same-day-delivery" *
 *  "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" *
 *  "custom-type-4" * "custom-type-5" If this field is set to an invalid value
 *  other than these, an INVALID_ARGUMENT error is returned. This field directly
 *  corresponds to Product.fulfillment_info.type.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Response of the AddFulfillmentPlacesRequest. Currently empty because there
 *  is no meaningful response populated from the
 *  ProductService.AddFulfillmentPlaces method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2AddFulfillmentPlacesResponse : GTLRObject
@end


/**
 *  Metadata related to the progress of the AddLocalInventories operation.
 *  Currently empty because there is no meaningful metadata populated from the
 *  ProductService.AddLocalInventories method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2AddLocalInventoriesMetadata : GTLRObject
@end


/**
 *  Request message for ProductService.AddLocalInventories method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2AddLocalInventoriesRequest : GTLRObject

/**
 *  Indicates which inventory fields in the provided list of LocalInventory to
 *  update. The field is updated to the provided value. If a field is set while
 *  the place does not have a previous local inventory, the local inventory at
 *  that store is created. If a field is set while the value of that field is
 *  not provided, the original field value, if it exists, is deleted. If the
 *  mask is not set or set with empty paths, all inventory fields will be
 *  updated. If an unsupported or unknown field is provided, an INVALID_ARGUMENT
 *  error is returned and the entire update will be ignored.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *addMask;

/**
 *  The time when the inventory updates are issued. Used to prevent out-of-order
 *  updates on local inventory fields. If not provided, the internal system time
 *  will be used.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *addTime;

/**
 *  If set to true, and the Product is not found, the local inventory will still
 *  be processed and retained for at most 1 day and processed once the Product
 *  is created. If set to false, a NOT_FOUND error is returned if the Product is
 *  not found.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowMissing;

/**
 *  Required. A list of inventory information at difference places. Each place
 *  is identified by its place ID. At most 3000 inventories are allowed per
 *  request.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2LocalInventory *> *localInventories;

@end


/**
 *  Response of the ProductService.AddLocalInventories API. Currently empty
 *  because there is no meaningful response populated from the
 *  ProductService.AddLocalInventories method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2AddLocalInventoriesResponse : GTLRObject
@end


/**
 *  Metadata related to the progress of the AddFulfillmentPlaces operation.
 *  Currently empty because there is no meaningful metadata populated from the
 *  ProductService.AddFulfillmentPlaces method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaAddFulfillmentPlacesMetadata : GTLRObject
@end


/**
 *  Response of the AddFulfillmentPlacesRequest. Currently empty because there
 *  is no meaningful response populated from the
 *  ProductService.AddFulfillmentPlaces method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaAddFulfillmentPlacesResponse : GTLRObject
@end


/**
 *  Metadata related to the progress of the AddLocalInventories operation.
 *  Currently empty because there is no meaningful metadata populated from the
 *  ProductService.AddLocalInventories method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaAddLocalInventoriesMetadata : GTLRObject
@end


/**
 *  Response of the ProductService.AddLocalInventories API. Currently empty
 *  because there is no meaningful response populated from the
 *  ProductService.AddLocalInventories method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaAddLocalInventoriesResponse : GTLRObject
@end


/**
 *  A BigQuery output result.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaBigQueryOutputResult : GTLRObject

/** The ID of a BigQuery Dataset. */
@property(nonatomic, copy, nullable) NSString *datasetId;

/** The ID of a BigQuery Table. */
@property(nonatomic, copy, nullable) NSString *tableId;

@end


/**
 *  Metadata associated with a create operation.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaCreateModelMetadata : GTLRObject

/**
 *  The resource name of the model that this create applies to. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}`
 */
@property(nonatomic, copy, nullable) NSString *model;

@end


/**
 *  Configuration of destination for Export related errors.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaExportErrorsConfig : GTLRObject

/**
 *  Google Cloud Storage path for import errors. This must be an empty, existing
 *  Cloud Storage bucket. Export errors will be written to a file in this
 *  bucket, one per line, as a JSON-encoded `google.rpc.Status` message.
 */
@property(nonatomic, copy, nullable) NSString *gcsPrefix;

@end


/**
 *  Metadata related to the progress of the Export operation. This is returned
 *  by the google.longrunning.Operation.metadata field.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaExportMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the ExportProductsRequest. If the long running operation is
 *  done, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaExportProductsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleRpcStatus *> *errorSamples;

/** This field is never set. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2alphaExportErrorsConfig *errorsConfig;

/** Output result indicating where the data were exported to. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2alphaOutputResult *outputResult;

@end


/**
 *  Response of the ExportUserEventsRequest. If the long running operation was
 *  successful, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaExportUserEventsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleRpcStatus *> *errorSamples;

/** This field is never set. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2alphaExportErrorsConfig *errorsConfig;

/** Output result indicating where the data were exported to. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2alphaOutputResult *outputResult;

@end


/**
 *  A Gcs output result.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaGcsOutputResult : GTLRObject

/** The uri of Gcs output */
@property(nonatomic, copy, nullable) NSString *outputUri;

@end


/**
 *  Response of the ImportCompletionDataRequest. If the long running operation
 *  is done, this message is returned by the
 *  google.longrunning.Operations.response field if the operation is successful.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaImportCompletionDataResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Configuration of destination for Import related errors.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaImportErrorsConfig : GTLRObject

/**
 *  Google Cloud Storage prefix for import errors. This must be an empty,
 *  existing Cloud Storage directory. Import errors are written to sharded files
 *  in this directory, one per line, as a JSON-encoded `google.rpc.Status`
 *  message.
 */
@property(nonatomic, copy, nullable) NSString *gcsPrefix;

@end


/**
 *  Metadata related to the progress of the Import operation. This is returned
 *  by the google.longrunning.Operation.metadata field.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaImportMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Pub/Sub topic for receiving notification. If this field is set, when the
 *  import is finished, a notification is sent to specified Pub/Sub topic. The
 *  message data is JSON string of a Operation. Format of the Pub/Sub topic is
 *  `projects/{project}/topics/{topic}`.
 */
@property(nonatomic, copy, nullable) NSString *notificationPubsubTopic;

/** Deprecated. This field is never set. */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Count of entries that were processed successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/** Metadata related to transform user events. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2alphaTransformedUserEventsMetadata *transformedUserEventsMetadata;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the ImportProductsRequest. If the long running operation is
 *  done, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaImportProductsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleRpcStatus *> *errorSamples;

/** Echoes the destination for the complete errors in the request if set. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2alphaImportErrorsConfig *errorsConfig;

@end


/**
 *  Response of the ImportUserEventsRequest. If the long running operation was
 *  successful, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaImportUserEventsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleRpcStatus *> *errorSamples;

/**
 *  Echoes the destination for the complete errors if this field was set in the
 *  request.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2alphaImportErrorsConfig *errorsConfig;

/** Aggregated statistics of user event import status. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2alphaUserEventImportSummary *importSummary;

@end


/**
 *  Metadata that describes the training and serving parameters of a Model. A
 *  Model can be associated with a ServingConfig and then queried through the
 *  Predict API.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaModel : GTLRObject

/** Output only. Timestamp the Recommendation Model was created at. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The state of data requirements for this model: `DATA_OK` and
 *  `DATA_ERROR`. Recommendation model cannot be trained if the data is in
 *  `DATA_ERROR` state. Recommendation model can have `DATA_ERROR` state even if
 *  serving state is `ACTIVE`: models were trained successfully before, but
 *  cannot be refreshed because model no longer has sufficient data for
 *  training.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_DataState_DataError
 *        The model does not have sufficient training data. Error messages can
 *        be queried via Stackdriver. (Value: "DATA_ERROR")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_DataState_DataOk
 *        The model has sufficient training data. (Value: "DATA_OK")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_DataState_DataStateUnspecified
 *        Unspecified default value, should never be explicitly set. (Value:
 *        "DATA_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *dataState;

/**
 *  Required. The display name of the model. Should be human readable, used to
 *  display Recommendation Models in the Retail Cloud Console Dashboard. UTF-8
 *  encoded string with limit of 1024 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. If `RECOMMENDATIONS_FILTERING_ENABLED`, recommendation filtering
 *  by attributes is enabled for the model.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_FilteringOption_RecommendationsFilteringDisabled
 *        Recommendation filtering is disabled. (Value:
 *        "RECOMMENDATIONS_FILTERING_DISABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_FilteringOption_RecommendationsFilteringEnabled
 *        Recommendation filtering is enabled. (Value:
 *        "RECOMMENDATIONS_FILTERING_ENABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_FilteringOption_RecommendationsFilteringOptionUnspecified
 *        Value used when unset. In this case, server behavior defaults to
 *        RECOMMENDATIONS_FILTERING_DISABLED. (Value:
 *        "RECOMMENDATIONS_FILTERING_OPTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *filteringOption;

/** Output only. The timestamp when the latest successful tune finished. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastTuneTime;

/**
 *  Required. The fully qualified resource name of the model. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}`
 *  catalog_id has char limit of 50. recommendation_model_id has char limit of
 *  40.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The optimization objective e.g. `cvr`. Currently supported values:
 *  `ctr`, `cvr`, `revenue-per-order`. If not specified, we choose default based
 *  on model type. Default depends on type of recommendation:
 *  `recommended-for-you` => `ctr` `others-you-may-like` => `ctr`
 *  `frequently-bought-together` => `revenue_per_order` This field together with
 *  optimization_objective describe model metadata to use to control model
 *  training and serving. See https://cloud.google.com/retail/docs/models for
 *  more details on what the model metadata control and which combination of
 *  parameters are valid. For invalid combinations of parameters (e.g. type =
 *  `frequently-bought-together` and optimization_objective = `ctr`), you
 *  receive an error 400 if you try to create/update a recommendation with this
 *  set of knobs.
 */
@property(nonatomic, copy, nullable) NSString *optimizationObjective;

/** Optional. The page optimization config. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfig *pageOptimizationConfig;

/**
 *  Optional. The state of periodic tuning. The period we use is 3 months - to
 *  do a one-off tune earlier use the `TuneModel` method. Default value is
 *  `PERIODIC_TUNING_ENABLED`.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_PeriodicTuningState_AllTuningDisabled
 *        The model cannot be tuned with periodic tuning OR the `TuneModel`
 *        method. Hide the options in customer UI and reject any requests
 *        through the backend self serve API. (Value: "ALL_TUNING_DISABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_PeriodicTuningState_PeriodicTuningDisabled
 *        The model has periodic tuning disabled. Tuning can be reenabled by
 *        calling the `EnableModelPeriodicTuning` method or by calling the
 *        `TuneModel` method. (Value: "PERIODIC_TUNING_DISABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_PeriodicTuningState_PeriodicTuningEnabled
 *        The model has periodic tuning enabled. Tuning can be disabled by
 *        calling the `DisableModelPeriodicTuning` method. (Value:
 *        "PERIODIC_TUNING_ENABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_PeriodicTuningState_PeriodicTuningStateUnspecified
 *        Unspecified default value, should never be explicitly set. (Value:
 *        "PERIODIC_TUNING_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *periodicTuningState;

/**
 *  Output only. The list of valid serving configs associated with the
 *  PageOptimizationConfig.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2alphaModelServingConfigList *> *servingConfigLists;

/**
 *  Output only. The serving state of the model: `ACTIVE`, `NOT_ACTIVE`.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_ServingState_Active
 *        The model is serving and can be queried. (Value: "ACTIVE")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_ServingState_Inactive
 *        The model is not serving. (Value: "INACTIVE")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_ServingState_ServingStateUnspecified
 *        Unspecified serving state. (Value: "SERVING_STATE_UNSPECIFIED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_ServingState_Tuned
 *        The model is trained on tuned hyperparameters and can be queried.
 *        (Value: "TUNED")
 */
@property(nonatomic, copy, nullable) NSString *servingState;

/**
 *  Optional. The training state that the model is in (e.g. `TRAINING` or
 *  `PAUSED`). Since part of the cost of running the service is frequency of
 *  training - this can be used to determine when to train model in order to
 *  control cost. If not specified: the default value for `CreateModel` method
 *  is `TRAINING`. The default value for `UpdateModel` method is to keep the
 *  state the same as before.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_TrainingState_Paused
 *        The model training is paused. (Value: "PAUSED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_TrainingState_Training
 *        The model is training. (Value: "TRAINING")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModel_TrainingState_TrainingStateUnspecified
 *        Unspecified training state. (Value: "TRAINING_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *trainingState;

/**
 *  Output only. The tune operation associated with the model. Can be used to
 *  determine if there is an ongoing tune for this recommendation. Empty field
 *  implies no tune is goig on.
 */
@property(nonatomic, copy, nullable) NSString *tuningOperation;

/**
 *  Required. The type of model e.g. `home-page`. Currently supported values:
 *  `recommended-for-you`, `others-you-may-like`, `frequently-bought-together`,
 *  `page-optimization`, `similar-items`, `buy-it-again`, and
 *  `recently-viewed`(readonly value). This field together with
 *  optimization_objective describe model metadata to use to control model
 *  training and serving. See https://cloud.google.com/retail/docs/models for
 *  more details on what the model metadata control and which combination of
 *  parameters are valid. For invalid combinations of parameters (e.g. type =
 *  `frequently-bought-together` and optimization_objective = `ctr`), you
 *  receive an error 400 if you try to create/update a recommendation with this
 *  set of knobs.
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Output only. Timestamp the Recommendation Model was last updated. E.g. if a
 *  Recommendation Model was paused - this would be the time the pause was
 *  initiated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The PageOptimizationConfig for model training. This determines how many
 *  panels to optimize for, and which serving configurations to consider for
 *  each panel. The purpose of this model is to optimize which ServingConfig to
 *  show on which panels in way that optimizes the visitors shopping journey.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfig : GTLRObject

/**
 *  Required. The type of UserEvent this page optimization is shown for. Each
 *  page has an associated event type - this will be the corresponding event
 *  type for the page that the page optimization model is used on. Supported
 *  types: * `add-to-cart`: Products being added to cart. * `detail-page-view`:
 *  Products detail page viewed. * `home-page-view`: Homepage viewed *
 *  `category-page-view`: Homepage viewed * `shopping-cart-page-view`: User
 *  viewing a shopping cart. `home-page-view` only allows models with type
 *  `recommended-for-you`. All other page_optimization_event_type allow all
 *  Model.types.
 */
@property(nonatomic, copy, nullable) NSString *pageOptimizationEventType;

/** Required. A list of panel configurations. Limit = 5. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfigPanel *> *panels;

/**
 *  Optional. How to restrict results across panels e.g. can the same
 *  ServingConfig be shown on multiple panels at once. If unspecified, default
 *  to `UNIQUE_MODEL_RESTRICTION`.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfig_Restriction_NoRestriction
 *        Allow any ServingConfig to be show on any number of panels. Example:
 *        `Panel1 candidates`: pdp_ctr, pdp_cvr, home_page_ctr_no_diversity
 *        `Panel2 candidates`: home_page_ctr_no_diversity,
 *        home_page_ctr_diversity, pdp_cvr_no_diversity `Restriction` =
 *        NO_RESTRICTION `Valid combinations`: * * (pdp_ctr,
 *        home_page_ctr_no_diversity) * (pdp_ctr, home_page_ctr_diversity) *
 *        (pdp_ctr, pdp_cvr_no_diversity) * (pdp_cvr,
 *        home_page_ctr_no_diversity) * (pdp_cvr, home_page_ctr_diversity) *
 *        (pdp_cvr, pdp_cvr_no_diversity) * (home_page_ctr_no_diversity,
 *        home_page_ctr_no_diversity) * (home_page_ctr_no_diversity,
 *        home_page_ctr_diversity) * (home_page_ctr_no_diversity,
 *        pdp_cvr_no_diversity) * `Invalid combinations`: [] (Value:
 *        "NO_RESTRICTION")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfig_Restriction_RestrictionUnspecified
 *        Unspecified value for restriction. (Value: "RESTRICTION_UNSPECIFIED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfig_Restriction_UniqueModelRestriction
 *        Do not allow multiple ServingConfigs with same Model.name to be show
 *        on on different panels. Example: `Panel1 candidates`: * pdp_ctr,
 *        pdp_cvr, home_page_ctr_no_diversity * `Panel2 candidates`: *
 *        home_page_ctr_no_diversity, home_page_ctr_diversity_low,
 *        pdp_cvr_no_diversity * `Restriction` = `UNIQUE_MODEL_RESTRICTION`
 *        `Valid combinations`: * * (pdp_ctr, home_page_ctr_no_diversity) *
 *        (pdp_ctr, home_page_ctr_diversity) * (pdp_ctr, pdp_cvr_no_diversity) *
 *        (pdp_ctr, pdp_cvr_no_diversity) * (pdp_cvr,
 *        home_page_ctr_no_diversity) * (pdp_cvr, home_page_ctr_diversity_low) *
 *        (home_page_ctr_no_diversity, pdp_cvr_no_diversity) * `Invalid
 *        combinations`: * * (home_page_ctr_no_diversity,
 *        home_page_ctr_no_diversity) * (pdp_cvr, pdp_cvr_no_diversity) *
 *        (Value: "UNIQUE_MODEL_RESTRICTION")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfig_Restriction_UniqueModelTypeRestriction
 *        Do not allow multiple ServingConfigs with same Model.type to be shown
 *        on different panels. Example: `Panel1 candidates`: * pdp_ctr, pdp_cvr,
 *        home_page_ctr_no_diversity * `Panel2 candidates`: *
 *        home_page_ctr_no_diversity, home_page_ctr_diversity_low,
 *        pdp_cvr_no_diversity * `Restriction` = `UNIQUE_MODEL_RESTRICTION`
 *        `Valid combinations`: * * (pdp_ctr, home_page_ctr_no_diversity) *
 *        (pdp_ctr, home_page_ctr_diversity) * (pdp_cvr,
 *        home_page_ctr_no_diversity) * (pdp_cvr, home_page_ctr_diversity_low) *
 *        (home_page_ctr_no_diversity, pdp_cvr_no_diversity) * `Invalid
 *        combinations`: * * (pdp_ctr, pdp_cvr_no_diversity) * (pdp_ctr,
 *        pdp_cvr_no_diversity) * (pdp_cvr, pdp_cvr_no_diversity) *
 *        (home_page_ctr_no_diversity, home_page_ctr_no_diversity) *
 *        (home_page_ctr_no_diversity, home_page_ctr_diversity) * (Value:
 *        "UNIQUE_MODEL_TYPE_RESTRICTION")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfig_Restriction_UniqueServingConfigRestriction
 *        Do not allow the same ServingConfig.name to be shown on multiple
 *        panels. Example: `Panel1 candidates`: * pdp_ctr, pdp_cvr,
 *        home_page_ctr_no_diversity * `Panel2 candidates`: *
 *        home_page_ctr_no_diversity, home_page_ctr_diversity_low,
 *        pdp_cvr_no_diversity * `Restriction` =
 *        `UNIQUE_SERVING_CONFIG_RESTRICTION` `Valid combinations`: * *
 *        (pdp_ctr, home_page_ctr_no_diversity) * (pdp_ctr,
 *        home_page_ctr_diversity_low) * (pdp_ctr, pdp_cvr_no_diversity) *
 *        (pdp_ctr, pdp_cvr_no_diversity) * (pdp_cvr,
 *        home_page_ctr_no_diversity) * (pdp_cvr, home_page_ctr_diversity_low) *
 *        (pdp_cvr, pdp_cvr_no_diversity) * (home_page_ctr_no_diversity,
 *        home_page_ctr_diversity_low) * (home_page_ctr_no_diversity,
 *        pdp_cvr_no_diversity) * `Invalid combinations`: * *
 *        (home_page_ctr_no_diversity, home_page_ctr_no_diversity) * (Value:
 *        "UNIQUE_SERVING_CONFIG_RESTRICTION")
 */
@property(nonatomic, copy, nullable) NSString *restriction;

@end


/**
 *  A candidate to consider for a given panel. Currently only ServingConfig are
 *  valid candidates.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfigCandidate : GTLRObject

/**
 *  This has to be a valid ServingConfig identifier. For example, for a
 *  ServingConfig with full name: `projects/ *
 *  /locations/global/catalogs/default_catalog/servingConfigs/my_candidate_config`,
 *  this would be `my_candidate_config`.
 */
@property(nonatomic, copy, nullable) NSString *servingConfigId;

@end


/**
 *  An individual panel with a list of ServingConfigs to consider for it.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfigPanel : GTLRObject

/** Required. The candidates to consider on the panel. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfigCandidate *> *candidates;

/**
 *  Required. The default candidate. If the model fails at serving time, we fall
 *  back to the default.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2alphaModelPageOptimizationConfigCandidate *defaultCandidate;

/** Optional. The name to display for the panel. */
@property(nonatomic, copy, nullable) NSString *displayName;

@end


/**
 *  Represents an ordered combination of valid serving configs, which can be
 *  used for `PAGE_OPTIMIZATION` recommendations.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaModelServingConfigList : GTLRObject

/**
 *  Optional. A set of valid serving configs that may be used for
 *  `PAGE_OPTIMIZATION`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *servingConfigIds;

@end


/**
 *  Output result that stores the information about where the exported data is
 *  stored.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaOutputResult : GTLRObject

/** The BigQuery location where the result is stored. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2alphaBigQueryOutputResult *> *bigqueryResult;

/** The Google Cloud Storage location where the result is stored. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2alphaGcsOutputResult *> *gcsResult;

@end


/**
 *  Metadata related to the progress of the Purge operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaPurgeMetadata : GTLRObject
@end


/**
 *  Metadata related to the progress of the PurgeProducts operation. This will
 *  be returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaPurgeProductsMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Count of entries that were deleted successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the PurgeProductsRequest. If the long running operation is
 *  successfully done, then this message is returned by the
 *  google.longrunning.Operations.response field.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaPurgeProductsResponse : GTLRObject

/**
 *  The total count of products purged as a result of the operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgeCount;

/**
 *  A sample of the product names that will be deleted. Only populated if
 *  `force` is set to false. A max of 100 names will be returned and the names
 *  are chosen at random.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *purgeSample;

@end


/**
 *  Response of the PurgeUserEventsRequest. If the long running operation is
 *  successfully done, then this message is returned by the
 *  google.longrunning.Operations.response field.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaPurgeUserEventsResponse : GTLRObject

/**
 *  The total count of events purged as a result of the operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgedEventsCount;

@end


/**
 *  Metadata for `RejoinUserEvents` method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaRejoinUserEventsMetadata : GTLRObject
@end


/**
 *  Response message for `RejoinUserEvents` method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaRejoinUserEventsResponse : GTLRObject

/**
 *  Number of user events that were joined with latest product catalog.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rejoinedUserEventsCount;

@end


/**
 *  Metadata related to the progress of the RemoveFulfillmentPlaces operation.
 *  Currently empty because there is no meaningful metadata populated from the
 *  ProductService.RemoveFulfillmentPlaces method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaRemoveFulfillmentPlacesMetadata : GTLRObject
@end


/**
 *  Response of the RemoveFulfillmentPlacesRequest. Currently empty because
 *  there is no meaningful response populated from the
 *  ProductService.RemoveFulfillmentPlaces method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaRemoveFulfillmentPlacesResponse : GTLRObject
@end


/**
 *  Metadata related to the progress of the RemoveLocalInventories operation.
 *  Currently empty because there is no meaningful metadata populated from the
 *  ProductService.RemoveLocalInventories method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaRemoveLocalInventoriesMetadata : GTLRObject
@end


/**
 *  Response of the ProductService.RemoveLocalInventories API. Currently empty
 *  because there is no meaningful response populated from the
 *  ProductService.RemoveLocalInventories method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaRemoveLocalInventoriesResponse : GTLRObject
@end


/**
 *  Metadata related to the progress of the SetInventory operation. Currently
 *  empty because there is no meaningful metadata populated from the
 *  ProductService.SetInventory method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaSetInventoryMetadata : GTLRObject
@end


/**
 *  Response of the SetInventoryRequest. Currently empty because there is no
 *  meaningful response populated from the ProductService.SetInventory method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaSetInventoryResponse : GTLRObject
@end


/**
 *  Metadata related to transform user events operation.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaTransformedUserEventsMetadata : GTLRObject

/**
 *  Count of entries in the source user events BigQuery table.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sourceEventsCount;

/**
 *  Count of entries in the transformed user events BigQuery table, which could
 *  be different from the actually imported number of user events.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *transformedEventsCount;

@end


/**
 *  Metadata associated with a tune operation.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaTuneModelMetadata : GTLRObject

/**
 *  The resource name of the model that this tune applies to. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}`
 */
@property(nonatomic, copy, nullable) NSString *model;

@end


/**
 *  Response associated with a tune operation.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaTuneModelResponse : GTLRObject
@end


/**
 *  A summary of import result. The UserEventImportSummary summarizes the import
 *  status for user events.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2alphaUserEventImportSummary : GTLRObject

/**
 *  Count of user events imported with complete existing catalog information.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *joinedEventsCount;

/**
 *  Count of user events imported, but with catalog information not found in the
 *  imported catalog.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unjoinedEventsCount;

@end


/**
 *  Catalog level attribute config.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig : GTLRObject

/**
 *  Output only. The AttributeConfigLevel used for this catalog.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2AttributesConfig_AttributeConfigLevel_AttributeConfigLevelUnspecified
 *        Value used when unset. In this case, server behavior defaults to
 *        CATALOG_LEVEL_ATTRIBUTE_CONFIG. (Value:
 *        "ATTRIBUTE_CONFIG_LEVEL_UNSPECIFIED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2AttributesConfig_AttributeConfigLevel_CatalogLevelAttributeConfig
 *        At this level, we honor the attribute configurations set in
 *        CatalogConfig.attribute_configs. (Value:
 *        "CATALOG_LEVEL_ATTRIBUTE_CONFIG")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2AttributesConfig_AttributeConfigLevel_ProductLevelAttributeConfig
 *        At this level, we honor the attribute configurations set in
 *        Product.attributes. (Value: "PRODUCT_LEVEL_ATTRIBUTE_CONFIG")
 */
@property(nonatomic, copy, nullable) NSString *attributeConfigLevel;

/**
 *  Enable attribute(s) config at catalog level. For example, indexable,
 *  dynamic_facetable, or searchable for each attribute. The key is catalog
 *  attribute's name. For example: `color`, `brands`,
 *  `attributes.custom_attribute`, such as `attributes.xyz`. The maximum number
 *  of catalog attributes allowed in a request is 1000.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig_CatalogAttributes *catalogAttributes;

/**
 *  Required. Immutable. The fully qualified resource name of the attribute
 *  config. Format: `projects/ * /locations/ * /catalogs/ * /attributesConfig`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Enable attribute(s) config at catalog level. For example, indexable,
 *  dynamic_facetable, or searchable for each attribute. The key is catalog
 *  attribute's name. For example: `color`, `brands`,
 *  `attributes.custom_attribute`, such as `attributes.xyz`. The maximum number
 *  of catalog attributes allowed in a request is 1000.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig_CatalogAttributes : GTLRObject
@end


/**
 *  An intended audience of the Product for whom it's sold.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2Audience : GTLRObject

/**
 *  The age groups of the audience. Strongly encouraged to use the standard
 *  values: "newborn" (up to 3 months old), "infant" (3–12 months old),
 *  "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically teens
 *  or older). At most 5 values are allowed. Each value must be a UTF-8 encoded
 *  string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT
 *  error is returned. Google Merchant Center property
 *  [age_group](https://support.google.com/merchants/answer/6324463). Schema.org
 *  property
 *  [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and
 *  [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ageGroups;

/**
 *  The genders of the audience. Strongly encouraged to use the standard values:
 *  "male", "female", "unisex". At most 5 values are allowed. Each value must be
 *  a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an
 *  INVALID_ARGUMENT error is returned. Google Merchant Center property
 *  [gender](https://support.google.com/merchants/answer/6324479). Schema.org
 *  property
 *  [Product.audience.suggestedGender](https://schema.org/suggestedGender).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *genders;

@end


/**
 *  Metadata related to the progress of the AddFulfillmentPlaces operation.
 *  Currently empty because there is no meaningful metadata populated from the
 *  ProductService.AddFulfillmentPlaces method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaAddFulfillmentPlacesMetadata : GTLRObject
@end


/**
 *  Response of the AddFulfillmentPlacesRequest. Currently empty because there
 *  is no meaningful response populated from the
 *  ProductService.AddFulfillmentPlaces method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaAddFulfillmentPlacesResponse : GTLRObject
@end


/**
 *  Metadata related to the progress of the AddLocalInventories operation.
 *  Currently empty because there is no meaningful metadata populated from the
 *  ProductService.AddLocalInventories method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaAddLocalInventoriesMetadata : GTLRObject
@end


/**
 *  Response of the ProductService.AddLocalInventories API. Currently empty
 *  because there is no meaningful response populated from the
 *  ProductService.AddLocalInventories method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaAddLocalInventoriesResponse : GTLRObject
@end


/**
 *  A BigQuery output result.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaBigQueryOutputResult : GTLRObject

/** The ID of a BigQuery Dataset. */
@property(nonatomic, copy, nullable) NSString *datasetId;

/** The ID of a BigQuery Table. */
@property(nonatomic, copy, nullable) NSString *tableId;

@end


/**
 *  Metadata associated with a create operation.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaCreateModelMetadata : GTLRObject

/**
 *  The resource name of the model that this create applies to. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}`
 */
@property(nonatomic, copy, nullable) NSString *model;

@end


/**
 *  Configuration of destination for Export related errors.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaExportErrorsConfig : GTLRObject

/**
 *  Google Cloud Storage path for import errors. This must be an empty, existing
 *  Cloud Storage bucket. Export errors will be written to a file in this
 *  bucket, one per line, as a JSON-encoded `google.rpc.Status` message.
 */
@property(nonatomic, copy, nullable) NSString *gcsPrefix;

@end


/**
 *  Metadata related to the progress of the Export operation. This is returned
 *  by the google.longrunning.Operation.metadata field.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaExportMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the ExportProductsRequest. If the long running operation is
 *  done, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaExportProductsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleRpcStatus *> *errorSamples;

/** This field is never set. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2betaExportErrorsConfig *errorsConfig;

/** Output result indicating where the data were exported to. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2betaOutputResult *outputResult;

@end


/**
 *  Response of the ExportUserEventsRequest. If the long running operation was
 *  successful, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaExportUserEventsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleRpcStatus *> *errorSamples;

/** This field is never set. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2betaExportErrorsConfig *errorsConfig;

/** Output result indicating where the data were exported to. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2betaOutputResult *outputResult;

@end


/**
 *  A Gcs output result.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaGcsOutputResult : GTLRObject

/** The uri of Gcs output */
@property(nonatomic, copy, nullable) NSString *outputUri;

@end


/**
 *  Response of the ImportCompletionDataRequest. If the long running operation
 *  is done, this message is returned by the
 *  google.longrunning.Operations.response field if the operation is successful.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaImportCompletionDataResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Configuration of destination for Import related errors.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaImportErrorsConfig : GTLRObject

/**
 *  Google Cloud Storage prefix for import errors. This must be an empty,
 *  existing Cloud Storage directory. Import errors are written to sharded files
 *  in this directory, one per line, as a JSON-encoded `google.rpc.Status`
 *  message.
 */
@property(nonatomic, copy, nullable) NSString *gcsPrefix;

@end


/**
 *  Metadata related to the progress of the Import operation. This is returned
 *  by the google.longrunning.Operation.metadata field.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaImportMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Pub/Sub topic for receiving notification. If this field is set, when the
 *  import is finished, a notification is sent to specified Pub/Sub topic. The
 *  message data is JSON string of a Operation. Format of the Pub/Sub topic is
 *  `projects/{project}/topics/{topic}`.
 */
@property(nonatomic, copy, nullable) NSString *notificationPubsubTopic;

/** Deprecated. This field is never set. */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Count of entries that were processed successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Response of the ImportProductsRequest. If the long running operation is
 *  done, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaImportProductsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleRpcStatus *> *errorSamples;

/** Echoes the destination for the complete errors in the request if set. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2betaImportErrorsConfig *errorsConfig;

@end


/**
 *  Response of the ImportUserEventsRequest. If the long running operation was
 *  successful, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaImportUserEventsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleRpcStatus *> *errorSamples;

/**
 *  Echoes the destination for the complete errors if this field was set in the
 *  request.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2betaImportErrorsConfig *errorsConfig;

/** Aggregated statistics of user event import status. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2betaUserEventImportSummary *importSummary;

@end


/**
 *  Metadata that describes the training and serving parameters of a Model. A
 *  Model can be associated with a ServingConfig and then queried through the
 *  Predict API.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaModel : GTLRObject

/** Output only. Timestamp the Recommendation Model was created at. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The state of data requirements for this model: `DATA_OK` and
 *  `DATA_ERROR`. Recommendation model cannot be trained if the data is in
 *  `DATA_ERROR` state. Recommendation model can have `DATA_ERROR` state even if
 *  serving state is `ACTIVE`: models were trained successfully before, but
 *  cannot be refreshed because model no longer has sufficient data for
 *  training.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_DataState_DataError
 *        The model does not have sufficient training data. Error messages can
 *        be queried via Stackdriver. (Value: "DATA_ERROR")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_DataState_DataOk The
 *        model has sufficient training data. (Value: "DATA_OK")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_DataState_DataStateUnspecified
 *        Unspecified default value, should never be explicitly set. (Value:
 *        "DATA_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *dataState;

/**
 *  Required. The display name of the model. Should be human readable, used to
 *  display Recommendation Models in the Retail Cloud Console Dashboard. UTF-8
 *  encoded string with limit of 1024 characters.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. If `RECOMMENDATIONS_FILTERING_ENABLED`, recommendation filtering
 *  by attributes is enabled for the model.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_FilteringOption_RecommendationsFilteringDisabled
 *        Recommendation filtering is disabled. (Value:
 *        "RECOMMENDATIONS_FILTERING_DISABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_FilteringOption_RecommendationsFilteringEnabled
 *        Recommendation filtering is enabled. (Value:
 *        "RECOMMENDATIONS_FILTERING_ENABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_FilteringOption_RecommendationsFilteringOptionUnspecified
 *        Value used when unset. In this case, server behavior defaults to
 *        RECOMMENDATIONS_FILTERING_DISABLED. (Value:
 *        "RECOMMENDATIONS_FILTERING_OPTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *filteringOption;

/** Output only. The timestamp when the latest successful tune finished. */
@property(nonatomic, strong, nullable) GTLRDateTime *lastTuneTime;

/**
 *  Required. The fully qualified resource name of the model. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}`
 *  catalog_id has char limit of 50. recommendation_model_id has char limit of
 *  40.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The optimization objective e.g. `cvr`. Currently supported values:
 *  `ctr`, `cvr`, `revenue-per-order`. If not specified, we choose default based
 *  on model type. Default depends on type of recommendation:
 *  `recommended-for-you` => `ctr` `others-you-may-like` => `ctr`
 *  `frequently-bought-together` => `revenue_per_order` This field together with
 *  optimization_objective describe model metadata to use to control model
 *  training and serving. See https://cloud.google.com/retail/docs/models for
 *  more details on what the model metadata control and which combination of
 *  parameters are valid. For invalid combinations of parameters (e.g. type =
 *  `frequently-bought-together` and optimization_objective = `ctr`), you
 *  receive an error 400 if you try to create/update a recommendation with this
 *  set of knobs.
 */
@property(nonatomic, copy, nullable) NSString *optimizationObjective;

/**
 *  Optional. The state of periodic tuning. The period we use is 3 months - to
 *  do a one-off tune earlier use the `TuneModel` method. Default value is
 *  `PERIODIC_TUNING_ENABLED`.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_PeriodicTuningState_AllTuningDisabled
 *        The model cannot be tuned with periodic tuning OR the `TuneModel`
 *        method. Hide the options in customer UI and reject any requests
 *        through the backend self serve API. (Value: "ALL_TUNING_DISABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_PeriodicTuningState_PeriodicTuningDisabled
 *        The model has periodic tuning disabled. Tuning can be reenabled by
 *        calling the `EnableModelPeriodicTuning` method or by calling the
 *        `TuneModel` method. (Value: "PERIODIC_TUNING_DISABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_PeriodicTuningState_PeriodicTuningEnabled
 *        The model has periodic tuning enabled. Tuning can be disabled by
 *        calling the `DisableModelPeriodicTuning` method. (Value:
 *        "PERIODIC_TUNING_ENABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_PeriodicTuningState_PeriodicTuningStateUnspecified
 *        Unspecified default value, should never be explicitly set. (Value:
 *        "PERIODIC_TUNING_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *periodicTuningState;

/**
 *  Output only. The list of valid serving configs associated with the
 *  PageOptimizationConfig.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2betaModelServingConfigList *> *servingConfigLists;

/**
 *  Output only. The serving state of the model: `ACTIVE`, `NOT_ACTIVE`.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_ServingState_Active
 *        The model is serving and can be queried. (Value: "ACTIVE")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_ServingState_Inactive
 *        The model is not serving. (Value: "INACTIVE")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_ServingState_ServingStateUnspecified
 *        Unspecified serving state. (Value: "SERVING_STATE_UNSPECIFIED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_ServingState_Tuned
 *        The model is trained on tuned hyperparameters and can be queried.
 *        (Value: "TUNED")
 */
@property(nonatomic, copy, nullable) NSString *servingState;

/**
 *  Optional. The training state that the model is in (e.g. `TRAINING` or
 *  `PAUSED`). Since part of the cost of running the service is frequency of
 *  training - this can be used to determine when to train model in order to
 *  control cost. If not specified: the default value for `CreateModel` method
 *  is `TRAINING`. The default value for `UpdateModel` method is to keep the
 *  state the same as before.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_TrainingState_Paused
 *        The model training is paused. (Value: "PAUSED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_TrainingState_Training
 *        The model is training. (Value: "TRAINING")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2betaModel_TrainingState_TrainingStateUnspecified
 *        Unspecified training state. (Value: "TRAINING_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *trainingState;

/**
 *  Output only. The tune operation associated with the model. Can be used to
 *  determine if there is an ongoing tune for this recommendation. Empty field
 *  implies no tune is goig on.
 */
@property(nonatomic, copy, nullable) NSString *tuningOperation;

/**
 *  Required. The type of model e.g. `home-page`. Currently supported values:
 *  `recommended-for-you`, `others-you-may-like`, `frequently-bought-together`,
 *  `page-optimization`, `similar-items`, `buy-it-again`, and
 *  `recently-viewed`(readonly value). This field together with
 *  optimization_objective describe model metadata to use to control model
 *  training and serving. See https://cloud.google.com/retail/docs/models for
 *  more details on what the model metadata control and which combination of
 *  parameters are valid. For invalid combinations of parameters (e.g. type =
 *  `frequently-bought-together` and optimization_objective = `ctr`), you
 *  receive an error 400 if you try to create/update a recommendation with this
 *  set of knobs.
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Output only. Timestamp the Recommendation Model was last updated. E.g. if a
 *  Recommendation Model was paused - this would be the time the pause was
 *  initiated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Represents an ordered combination of valid serving configs, which can be
 *  used for `PAGE_OPTIMIZATION` recommendations.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaModelServingConfigList : GTLRObject

/**
 *  Optional. A set of valid serving configs that may be used for
 *  `PAGE_OPTIMIZATION`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *servingConfigIds;

@end


/**
 *  Output result that stores the information about where the exported data is
 *  stored.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaOutputResult : GTLRObject

/** The BigQuery location where the result is stored. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2betaBigQueryOutputResult *> *bigqueryResult;

/** The Google Cloud Storage location where the result is stored. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2betaGcsOutputResult *> *gcsResult;

@end


/**
 *  Metadata related to the progress of the Purge operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaPurgeMetadata : GTLRObject
@end


/**
 *  Response of the PurgeUserEventsRequest. If the long running operation is
 *  successfully done, then this message is returned by the
 *  google.longrunning.Operations.response field.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaPurgeUserEventsResponse : GTLRObject

/**
 *  The total count of events purged as a result of the operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgedEventsCount;

@end


/**
 *  Metadata for `RejoinUserEvents` method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaRejoinUserEventsMetadata : GTLRObject
@end


/**
 *  Response message for `RejoinUserEvents` method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaRejoinUserEventsResponse : GTLRObject

/**
 *  Number of user events that were joined with latest product catalog.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rejoinedUserEventsCount;

@end


/**
 *  Metadata related to the progress of the RemoveFulfillmentPlaces operation.
 *  Currently empty because there is no meaningful metadata populated from the
 *  ProductService.RemoveFulfillmentPlaces method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaRemoveFulfillmentPlacesMetadata : GTLRObject
@end


/**
 *  Response of the RemoveFulfillmentPlacesRequest. Currently empty because
 *  there is no meaningful response populated from the
 *  ProductService.RemoveFulfillmentPlaces method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaRemoveFulfillmentPlacesResponse : GTLRObject
@end


/**
 *  Metadata related to the progress of the RemoveLocalInventories operation.
 *  Currently empty because there is no meaningful metadata populated from the
 *  ProductService.RemoveLocalInventories method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaRemoveLocalInventoriesMetadata : GTLRObject
@end


/**
 *  Response of the ProductService.RemoveLocalInventories API. Currently empty
 *  because there is no meaningful response populated from the
 *  ProductService.RemoveLocalInventories method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaRemoveLocalInventoriesResponse : GTLRObject
@end


/**
 *  Metadata related to the progress of the SetInventory operation. Currently
 *  empty because there is no meaningful metadata populated from the
 *  ProductService.SetInventory method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaSetInventoryMetadata : GTLRObject
@end


/**
 *  Response of the SetInventoryRequest. Currently empty because there is no
 *  meaningful response populated from the ProductService.SetInventory method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaSetInventoryResponse : GTLRObject
@end


/**
 *  Metadata associated with a tune operation.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaTuneModelMetadata : GTLRObject

/**
 *  The resource name of the model that this tune applies to. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/models/{model_id}`
 */
@property(nonatomic, copy, nullable) NSString *model;

@end


/**
 *  Response associated with a tune operation.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaTuneModelResponse : GTLRObject
@end


/**
 *  A summary of import result. The UserEventImportSummary summarizes the import
 *  status for user events.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2betaUserEventImportSummary : GTLRObject

/**
 *  Count of user events imported with complete existing catalog information.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *joinedEventsCount;

/**
 *  Count of user events imported, but with catalog information not found in the
 *  imported catalog.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unjoinedEventsCount;

@end


/**
 *  BigQuery source import data from.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2BigQuerySource : GTLRObject

/**
 *  The schema to use when parsing the data from the source. Supported values
 *  for product imports: * `product` (default): One JSON Product per line. Each
 *  product must have a valid Product.id. * `product_merchant_center`: See
 *  [Importing catalog data from Merchant
 *  Center](https://cloud.google.com/retail/recommendations-ai/docs/upload-catalog#mc).
 *  Supported values for user events imports: * `user_event` (default): One JSON
 *  UserEvent per line. * `user_event_ga360`: The schema is available here:
 *  https://support.google.com/analytics/answer/3437719. * `user_event_ga4`: The
 *  schema is available here:
 *  https://support.google.com/analytics/answer/7029846. Supported values for
 *  auto-completion imports: * `suggestions` (default): One JSON completion
 *  suggestion per line. * `denylist`: One JSON deny suggestion per line. *
 *  `allowlist`: One JSON allow suggestion per line.
 */
@property(nonatomic, copy, nullable) NSString *dataSchema;

/**
 *  Required. The BigQuery data set to copy the data from with a length limit of
 *  1,024 characters.
 */
@property(nonatomic, copy, nullable) NSString *datasetId;

/**
 *  Intermediate Cloud Storage directory used for the import with a length limit
 *  of 2,000 characters. Can be specified if one wants to have the BigQuery
 *  export to a specific Cloud Storage directory.
 */
@property(nonatomic, copy, nullable) NSString *gcsStagingDir;

/**
 *  BigQuery time partitioned table's _PARTITIONDATE in YYYY-MM-DD format. Only
 *  supported in ImportProductsRequest.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleTypeDate *partitionDate;

/**
 *  The project ID (can be project # or ID) that the BigQuery source is in with
 *  a length limit of 128 characters. If not specified, inherits the project ID
 *  from the parent request.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

/**
 *  Required. The BigQuery table to copy the data from with a length limit of
 *  1,024 characters.
 */
@property(nonatomic, copy, nullable) NSString *tableId;

@end


/**
 *  The catalog configuration.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2Catalog : GTLRObject

/**
 *  Required. Immutable. The catalog display name. This field must be a UTF-8
 *  encoded string with a length limit of 128 characters. Otherwise, an
 *  INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Required. Immutable. The fully qualified resource name of the catalog. */
@property(nonatomic, copy, nullable) NSString *name;

/** Required. The product level configuration. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2ProductLevelConfig *productLevelConfig;

@end


/**
 *  Catalog level attribute config for an attribute. For example, if customers
 *  want to enable/disable facet for a specific attribute.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute : GTLRObject

/**
 *  If DYNAMIC_FACETABLE_ENABLED, attribute values are available for dynamic
 *  facet. Could only be DYNAMIC_FACETABLE_DISABLED if
 *  CatalogAttribute.indexable_option is INDEXABLE_DISABLED. Otherwise, an
 *  INVALID_ARGUMENT error is returned. Must be specified, otherwise throws
 *  INVALID_FORMAT error.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_DynamicFacetableOption_DynamicFacetableDisabled
 *        Dynamic facetable option disabled for an attribute. (Value:
 *        "DYNAMIC_FACETABLE_DISABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_DynamicFacetableOption_DynamicFacetableEnabled
 *        Dynamic facetable option enabled for an attribute. (Value:
 *        "DYNAMIC_FACETABLE_ENABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_DynamicFacetableOption_DynamicFacetableOptionUnspecified
 *        Value used when unset. (Value: "DYNAMIC_FACETABLE_OPTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *dynamicFacetableOption;

/**
 *  If EXACT_SEARCHABLE_ENABLED, attribute values will be exact searchable. This
 *  property only applies to textual custom attributes and requires indexable
 *  set to enabled to enable exact-searchable.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_ExactSearchableOption_ExactSearchableDisabled
 *        Exact searchable option disabled for an attribute. (Value:
 *        "EXACT_SEARCHABLE_DISABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_ExactSearchableOption_ExactSearchableEnabled
 *        Exact searchable option enabled for an attribute. (Value:
 *        "EXACT_SEARCHABLE_ENABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_ExactSearchableOption_ExactSearchableOptionUnspecified
 *        Value used when unset. Defaults to EXACT_SEARCHABLE_DISABLED. (Value:
 *        "EXACT_SEARCHABLE_OPTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *exactSearchableOption;

/**
 *  When AttributesConfig.attribute_config_level is
 *  CATALOG_LEVEL_ATTRIBUTE_CONFIG, if INDEXABLE_ENABLED attribute values are
 *  indexed so that it can be filtered, faceted, or boosted in
 *  SearchService.Search. Must be specified, otherwise throws INVALID_FORMAT
 *  error.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_IndexableOption_IndexableDisabled
 *        Indexable option disabled for an attribute. (Value:
 *        "INDEXABLE_DISABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_IndexableOption_IndexableEnabled
 *        Indexable option enabled for an attribute. (Value:
 *        "INDEXABLE_ENABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_IndexableOption_IndexableOptionUnspecified
 *        Value used when unset. (Value: "INDEXABLE_OPTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *indexableOption;

/**
 *  Output only. Indicates whether this attribute has been used by any products.
 *  `True` if at least one Product is using this attribute in
 *  Product.attributes. Otherwise, this field is `False`. CatalogAttribute can
 *  be pre-loaded by using CatalogService.AddCatalogAttribute,
 *  CatalogService.ImportCatalogAttributes, or
 *  CatalogService.UpdateAttributesConfig APIs. This field is `False` for
 *  pre-loaded CatalogAttributes. Only pre-loaded catalog attributes that are
 *  neither in use by products nor predefined can be deleted. Catalog attributes
 *  that are either in use by products or are predefined attributes cannot be
 *  deleted; however, their configuration properties will reset to default
 *  values upon removal request. After catalog changes, it takes about 10
 *  minutes for this field to update.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *inUse;

/**
 *  Required. Attribute name. For example: `color`, `brands`,
 *  `attributes.custom_attribute`, such as `attributes.xyz`. To be indexable,
 *  the attribute name can contain only alpha-numeric characters and
 *  underscores. For example, an attribute named `attributes.abc_xyz` can be
 *  indexed, but an attribute named `attributes.abc-xyz` cannot be indexed.
 */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  When AttributesConfig.attribute_config_level is
 *  CATALOG_LEVEL_ATTRIBUTE_CONFIG, if SEARCHABLE_ENABLED, attribute values are
 *  searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED
 *  but attribute type is numerical, attribute values will not be searchable by
 *  text queries in SearchService.Search, as there are no text values associated
 *  to numerical attributes. Must be specified, otherwise throws INVALID_FORMAT
 *  error.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_SearchableOption_SearchableDisabled
 *        Searchable option disabled for an attribute. (Value:
 *        "SEARCHABLE_DISABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_SearchableOption_SearchableEnabled
 *        Searchable option enabled for an attribute. (Value:
 *        "SEARCHABLE_ENABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_SearchableOption_SearchableOptionUnspecified
 *        Value used when unset. (Value: "SEARCHABLE_OPTION_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *searchableOption;

/**
 *  Output only. The type of this attribute. This is derived from the attribute
 *  in Product.attributes.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_Type_Numerical
 *        Numerical attribute. (Value: "NUMERICAL")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_Type_Textual
 *        Textual attribute. (Value: "TEXTUAL")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute_Type_Unknown
 *        The type of the attribute is unknown. Used when type cannot be derived
 *        from attribute that is not in_use. (Value: "UNKNOWN")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  The color information of a Product.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ColorInfo : GTLRObject

/**
 *  The standard color families. Strongly recommended to use the following
 *  standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple", "Green",
 *  "Cyan", "Blue", "Brown", "White", "Gray", "Black" and "Mixed". Normally it
 *  is expected to have only 1 color family. May consider using single "Mixed"
 *  instead of multiple values. A maximum of 5 values are allowed. Each value
 *  must be a UTF-8 encoded string with a length limit of 128 characters.
 *  Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center
 *  property [color](https://support.google.com/merchants/answer/6324487).
 *  Schema.org property [Product.color](https://schema.org/color).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *colorFamilies;

/**
 *  The color display names, which may be different from standard color family
 *  names, such as the color aliases used in the website frontend. Normally it
 *  is expected to have only 1 color. May consider using single "Mixed" instead
 *  of multiple values. A maximum of 25 colors are allowed. Each value must be a
 *  UTF-8 encoded string with a length limit of 128 characters. Otherwise, an
 *  INVALID_ARGUMENT error is returned. Google Merchant Center property
 *  [color](https://support.google.com/merchants/answer/6324487). Schema.org
 *  property [Product.color](https://schema.org/color).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *colors;

@end


/**
 *  Response of the auto-complete query.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2CompleteQueryResponse : GTLRObject

/**
 *  A unique complete token. This should be included in the
 *  UserEvent.completion_detail for search events resulting from this
 *  completion, which enables accurate attribution of complete model
 *  performance.
 */
@property(nonatomic, copy, nullable) NSString *attributionToken;

/**
 *  Results of the matching suggestions. The result list is ordered and the
 *  first result is top suggestion.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2CompleteQueryResponseCompletionResult *> *completionResults;

/**
 *  Matched recent searches of this user. The maximum number of recent searches
 *  is 10. This field is a restricted feature. Contact Retail Search support
 *  team if you are interested in enabling it. This feature is only available
 *  when CompleteQueryRequest.visitor_id field is set and UserEvent is imported.
 *  The recent searches satisfy the follow rules: * They are ordered from latest
 *  to oldest. * They are matched with CompleteQueryRequest.query case
 *  insensitively. * They are transformed to lower case. * They are UTF-8 safe.
 *  Recent searches are deduplicated. More recent searches will be reserved when
 *  duplication happens.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2CompleteQueryResponseRecentSearchResult *> *recentSearchResults;

@end


/**
 *  Resource that represents completion results.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2CompleteQueryResponseCompletionResult : GTLRObject

/**
 *  Custom attributes for the suggestion term. * For "user-data", the attributes
 *  are additional custom attributes ingested through BigQuery. * For
 *  "cloud-retail", the attributes are product attributes generated by Cloud
 *  Retail. It requires UserEvent.product_details is imported properly.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2CompleteQueryResponseCompletionResult_Attributes *attributes;

/** The suggestion for the query. */
@property(nonatomic, copy, nullable) NSString *suggestion;

@end


/**
 *  Custom attributes for the suggestion term. * For "user-data", the attributes
 *  are additional custom attributes ingested through BigQuery. * For
 *  "cloud-retail", the attributes are product attributes generated by Cloud
 *  Retail. It requires UserEvent.product_details is imported properly.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCloudRetail_GoogleCloudRetailV2CustomAttribute. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2CompleteQueryResponseCompletionResult_Attributes : GTLRObject
@end


/**
 *  Recent search of this user.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2CompleteQueryResponseRecentSearchResult : GTLRObject

/** The recent search query. */
@property(nonatomic, copy, nullable) NSString *recentSearch;

@end


/**
 *  Catalog level autocomplete config for customers to customize autocomplete
 *  feature's settings.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2CompletionConfig : GTLRObject

/**
 *  Output only. The source data for the latest import of the autocomplete
 *  allowlist phrases.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2CompletionDataInputConfig *allowlistInputConfig;

/**
 *  If set to true, the auto learning function is enabled. Auto learning uses
 *  user data to generate suggestions using ML techniques. Default value is
 *  false. Only after enabling auto learning can users use `cloud-retail` data
 *  in CompleteQueryRequest.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *autoLearning;

/**
 *  Output only. The source data for the latest import of the autocomplete
 *  denylist phrases.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2CompletionDataInputConfig *denylistInputConfig;

/**
 *  Output only. Name of the LRO corresponding to the latest allowlist import.
 *  Can use GetOperation API to retrieve the latest state of the Long Running
 *  Operation.
 */
@property(nonatomic, copy, nullable) NSString *lastAllowlistImportOperation;

/**
 *  Output only. Name of the LRO corresponding to the latest denylist import.
 *  Can use GetOperation API to retrieve the latest state of the Long Running
 *  Operation.
 */
@property(nonatomic, copy, nullable) NSString *lastDenylistImportOperation;

/**
 *  Output only. Name of the LRO corresponding to the latest suggestion terms
 *  list import. Can use GetOperation API to retrieve the latest state of the
 *  Long Running Operation.
 */
@property(nonatomic, copy, nullable) NSString *lastSuggestionsImportOperation;

/**
 *  Specifies the matching order for autocomplete suggestions, e.g., a query
 *  consisting of 'sh' with 'out-of-order' specified would suggest "women's
 *  shoes", whereas a query of 'red s' with 'exact-prefix' specified would
 *  suggest "red shoes". Currently supported values: * 'out-of-order' *
 *  'exact-prefix' Default value: 'exact-prefix'.
 */
@property(nonatomic, copy, nullable) NSString *matchingOrder;

/**
 *  The maximum number of autocomplete suggestions returned per term. Default
 *  value is 20. If left unset or set to 0, then will fallback to default value.
 *  Value range is 1 to 20.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxSuggestions;

/**
 *  The minimum number of characters needed to be typed in order to get
 *  suggestions. Default value is 2. If left unset or set to 0, then will
 *  fallback to default value. Value range is 1 to 20.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minPrefixLength;

/**
 *  Required. Immutable. Fully qualified name `projects/ * /locations/ *
 *  /catalogs/ * /completionConfig`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The source data for the latest import of the autocomplete
 *  suggestion phrases.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2CompletionDataInputConfig *suggestionsInputConfig;

@end


/**
 *  The input config source for completion data.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2CompletionDataInputConfig : GTLRObject

/**
 *  Required. BigQuery input source. Add the IAM permission "BigQuery Data
 *  Viewer" for cloud-retail-customer-data-access\@system.gserviceaccount.com
 *  before using this feature otherwise an error is thrown.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2BigQuerySource *bigQuerySource;

@end


/**
 *  Detailed completion information including completion attribution token and
 *  clicked completion info.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2CompletionDetail : GTLRObject

/**
 *  Completion attribution token in CompleteQueryResponse.attribution_token.
 */
@property(nonatomic, copy, nullable) NSString *completionAttributionToken;

/**
 *  End user selected CompleteQueryResponse.CompletionResult.suggestion
 *  position, starting from 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *selectedPosition;

/** End user selected CompleteQueryResponse.CompletionResult.suggestion. */
@property(nonatomic, copy, nullable) NSString *selectedSuggestion;

@end


/**
 *  Metadata that is used to define a condition that triggers an action. A valid
 *  condition must specify at least one of 'query_terms' or 'products_filter'.
 *  If multiple fields are specified, the condition is met if all the fields are
 *  satisfied e.g. if a set of query terms and product_filter are set, then only
 *  items matching the product_filter for requests with a query matching the
 *  query terms wil get boosted.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2Condition : GTLRObject

/**
 *  Range of time(s) specifying when Condition is active. Condition true if any
 *  time range matches.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2ConditionTimeRange *> *activeTimeRange;

/**
 *  A list (up to 10 entries) of terms to match the query on. If not specified,
 *  match all queries. If many query terms are specified, the condition is
 *  matched if any of the terms is a match (i.e. using the OR operator).
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2ConditionQueryTerm *> *queryTerms;

@end


/**
 *  Query terms that we want to match on.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ConditionQueryTerm : GTLRObject

/**
 *  Whether this is supposed to be a full or partial match.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fullMatch;

/**
 *  The value of the term to match on. Value cannot be empty. Value can have at
 *  most 3 terms if specified as a partial match. Each space separated string is
 *  considered as one term. For example, "a b c" is 3 terms and allowed, but " a
 *  b c d" is 4 terms and not allowed for a partial match.
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Used for time-dependent conditions. Example: Want to have rule applied for
 *  week long sale.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ConditionTimeRange : GTLRObject

/** End of time range. Range is inclusive. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** Start of time range. Range is inclusive. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  Configures dynamic metadata that can be linked to a ServingConfig and affect
 *  search or recommendation results at serving time.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2Control : GTLRObject

/**
 *  Output only. List of serving configuration ids that are associated with this
 *  control in the same Catalog. Note the association is managed via the
 *  ServingConfig, this is an output only denormalized view.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *associatedServingConfigIds;

/**
 *  Required. The human readable control display name. Used in Retail UI. This
 *  field must be a UTF-8 encoded string with a length limit of 128 characters.
 *  Otherwise, an INVALID_ARGUMENT error is thrown.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Immutable. Fully qualified name `projects/ * /locations/global/catalogs/ *
 *  /controls/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A rule control - a condition-action pair. Enacts a set action when the
 *  condition is triggered. For example: Boost "gShoe" when query full matches
 *  "Running Shoes".
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2Rule *rule;

/**
 *  Specifies the use case for the control. Affects what condition fields can be
 *  set. Only settable by search controls. Will default to
 *  SEARCH_SOLUTION_USE_CASE_SEARCH if not specified. Currently only allow one
 *  search_solution_use_case per control.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *searchSolutionUseCase;

/**
 *  Required. Immutable. The solution types that the control is used for.
 *  Currently we support setting only one type of solution at creation time.
 *  Only `SOLUTION_TYPE_SEARCH` value is supported at the moment. If no solution
 *  type is provided at creation time, will default to SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *solutionTypes;

@end


/**
 *  A custom attribute that is not explicitly modeled in Product.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2CustomAttribute : GTLRObject

/**
 *  This field is normally ignored unless
 *  AttributesConfig.attribute_config_level of the Catalog is set to the
 *  deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about
 *  product-level attribute configuration, see [Configuration
 *  modes](https://cloud.google.com/retail/docs/attribute-config#config-modes).
 *  If true, custom attribute values are indexed, so that they can be filtered,
 *  faceted or boosted in SearchService.Search. This field is ignored in a
 *  UserEvent. See SearchRequest.filter, SearchRequest.facet_specs and
 *  SearchRequest.boost_spec for more details.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *indexable;

/**
 *  The numerical values of this custom attribute. For example, `[2.3, 15.4]`
 *  when the key is "lengths_cm". Exactly one of text or numbers should be set.
 *  Otherwise, an INVALID_ARGUMENT error is returned.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *numbers;

/**
 *  This field is normally ignored unless
 *  AttributesConfig.attribute_config_level of the Catalog is set to the
 *  deprecated 'PRODUCT_LEVEL_ATTRIBUTE_CONFIG' mode. For information about
 *  product-level attribute configuration, see [Configuration
 *  modes](https://cloud.google.com/retail/docs/attribute-config#config-modes).
 *  If true, custom attribute values are searchable by text queries in
 *  SearchService.Search. This field is ignored in a UserEvent. Only set if type
 *  text is set. Otherwise, a INVALID_ARGUMENT error is returned.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *searchable;

/**
 *  The textual values of this custom attribute. For example, `["yellow",
 *  "green"]` when the key is "color". Empty string is not allowed. Otherwise,
 *  an INVALID_ARGUMENT error is returned. Exactly one of text or numbers should
 *  be set. Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *text;

@end


/**
 *  Fulfillment information, such as the store IDs for in-store pickup or region
 *  IDs for different shipping methods.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2FulfillmentInfo : GTLRObject

/**
 *  The IDs for this type, such as the store IDs for
 *  FulfillmentInfo.type.pickup-in-store or the region IDs for
 *  FulfillmentInfo.type.same-day-delivery. A maximum of 3000 values are
 *  allowed. Each value must be a string with a length limit of 30 characters,
 *  matching the pattern `[a-zA-Z0-9_-]+`, such as "store1" or "REGION-2".
 *  Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *placeIds;

/**
 *  The fulfillment type, including commonly used types (such as pickup in store
 *  and same day delivery), and custom types. Customers have to map custom types
 *  to their display names before rendering UI. Supported values: *
 *  "pickup-in-store" * "ship-to-store" * "same-day-delivery" *
 *  "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" *
 *  "custom-type-4" * "custom-type-5" If this field is set to an invalid value
 *  other than these, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Google Cloud Storage location for input content.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2GcsSource : GTLRObject

/**
 *  The schema to use when parsing the data from the source. Supported values
 *  for product imports: * `product` (default): One JSON Product per line. Each
 *  product must have a valid Product.id. * `product_merchant_center`: See
 *  [Importing catalog data from Merchant
 *  Center](https://cloud.google.com/retail/recommendations-ai/docs/upload-catalog#mc).
 *  Supported values for user events imports: * `user_event` (default): One JSON
 *  UserEvent per line. * `user_event_ga360`: Using
 *  https://support.google.com/analytics/answer/3437719. Supported values for
 *  control imports: * `control` (default): One JSON Control per line. Supported
 *  values for catalog attribute imports: * `catalog_attribute` (default): One
 *  CSV CatalogAttribute per line.
 */
@property(nonatomic, copy, nullable) NSString *dataSchema;

/**
 *  Required. Google Cloud Storage URIs to input files. URI can be up to 2000
 *  characters long. URIs can match the full object path (for example,
 *  `gs://bucket/directory/object.json`) or a pattern matching one or more
 *  files, such as `gs://bucket/directory/ *.json`. A request can contain at
 *  most 100 files, and each file can be up to 2 GB. See [Importing product
 *  information](https://cloud.google.com/retail/recommendations-ai/docs/upload-catalog)
 *  for the expected file format and setup instructions.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *inputUris;

@end


/**
 *  Response message of CatalogService.GetDefaultBranch.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2GetDefaultBranchResponse : GTLRObject

/** Full resource name of the branch id currently set as default branch. */
@property(nonatomic, copy, nullable) NSString *branch;

/**
 *  This corresponds to SetDefaultBranchRequest.note field, when this branch was
 *  set as default.
 */
@property(nonatomic, copy, nullable) NSString *note;

/** The time when this branch is set to default. */
@property(nonatomic, strong, nullable) GTLRDateTime *setTime;

@end


/**
 *  Product image. Recommendations AI and Retail Search do not use product
 *  images to improve prediction and search results. However, product images can
 *  be returned in results, and are shown in prediction or search previews in
 *  the console.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2Image : GTLRObject

/**
 *  Height of the image in number of pixels. This field must be nonnegative.
 *  Otherwise, an INVALID_ARGUMENT error is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/**
 *  Required. URI of the image. This field must be a valid UTF-8 encoded URI
 *  with a length limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT
 *  error is returned. Google Merchant Center property
 *  [image_link](https://support.google.com/merchants/answer/6324350).
 *  Schema.org property [Product.image](https://schema.org/image).
 */
@property(nonatomic, copy, nullable) NSString *uri;

/**
 *  Width of the image in number of pixels. This field must be nonnegative.
 *  Otherwise, an INVALID_ARGUMENT error is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  Request message for ImportCompletionData methods.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ImportCompletionDataRequest : GTLRObject

/** Required. The desired input location of the data. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2CompletionDataInputConfig *inputConfig;

/**
 *  Pub/Sub topic for receiving notification. If this field is set, when the
 *  import is finished, a notification is sent to specified Pub/Sub topic. The
 *  message data is JSON string of a Operation. Format of the Pub/Sub topic is
 *  `projects/{project}/topics/{topic}`.
 */
@property(nonatomic, copy, nullable) NSString *notificationPubsubTopic;

@end


/**
 *  Response of the ImportCompletionDataRequest. If the long running operation
 *  is done, this message is returned by the
 *  google.longrunning.Operations.response field if the operation is successful.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ImportCompletionDataResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleRpcStatus *> *errorSamples;

@end


/**
 *  Configuration of destination for Import related errors.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ImportErrorsConfig : GTLRObject

/**
 *  Google Cloud Storage prefix for import errors. This must be an empty,
 *  existing Cloud Storage directory. Import errors are written to sharded files
 *  in this directory, one per line, as a JSON-encoded `google.rpc.Status`
 *  message.
 */
@property(nonatomic, copy, nullable) NSString *gcsPrefix;

@end


/**
 *  Metadata related to the progress of the Import operation. This is returned
 *  by the google.longrunning.Operation.metadata field.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ImportMetadata : GTLRObject

/** Operation create time. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Count of entries that encountered errors while processing.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failureCount;

/**
 *  Pub/Sub topic for receiving notification. If this field is set, when the
 *  import is finished, a notification is sent to specified Pub/Sub topic. The
 *  message data is JSON string of a Operation. Format of the Pub/Sub topic is
 *  `projects/{project}/topics/{topic}`.
 */
@property(nonatomic, copy, nullable) NSString *notificationPubsubTopic;

/** Deprecated. This field is never set. */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Count of entries that were processed successfully.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successCount;

/**
 *  Operation last update time. If the operation is done, this is also the
 *  finish time.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for Import methods.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ImportProductsRequest : GTLRObject

/** The desired location of errors incurred during the Import. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2ImportErrorsConfig *errorsConfig;

/** Required. The desired input location of the data. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2ProductInputConfig *inputConfig;

/**
 *  Full Pub/Sub topic name for receiving notification. If this field is set,
 *  when the import is finished, a notification is sent to specified Pub/Sub
 *  topic. The message data is JSON string of a Operation. Format of the Pub/Sub
 *  topic is `projects/{project}/topics/{topic}`. It has to be within the same
 *  project as ImportProductsRequest.parent. Make sure that
 *  `service-\@gcp-sa-retail.iam.gserviceaccount.com` has the
 *  `pubsub.topics.publish` IAM permission on the topic.
 */
@property(nonatomic, copy, nullable) NSString *notificationPubsubTopic;

/**
 *  The mode of reconciliation between existing products and the products to be
 *  imported. Defaults to ReconciliationMode.INCREMENTAL.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2ImportProductsRequest_ReconciliationMode_Full
 *        Calculates diff and replaces the entire product dataset. Existing
 *        products may be deleted if they are not present in the source
 *        location. (Value: "FULL")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2ImportProductsRequest_ReconciliationMode_Incremental
 *        Inserts new products or updates existing products. (Value:
 *        "INCREMENTAL")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2ImportProductsRequest_ReconciliationMode_ReconciliationModeUnspecified
 *        Defaults to INCREMENTAL. (Value: "RECONCILIATION_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *reconciliationMode;

/** Deprecated. This field has no effect. */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Indicates which fields in the provided imported `products` to update. If not
 *  set, all fields are updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Response of the ImportProductsRequest. If the long running operation is
 *  done, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ImportProductsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleRpcStatus *> *errorSamples;

/** Echoes the destination for the complete errors in the request if set. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2ImportErrorsConfig *errorsConfig;

@end


/**
 *  Request message for the ImportUserEvents request.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ImportUserEventsRequest : GTLRObject

/**
 *  The desired location of errors incurred during the Import. Cannot be set for
 *  inline user event imports.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2ImportErrorsConfig *errorsConfig;

/** Required. The desired input location of the data. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2UserEventInputConfig *inputConfig;

@end


/**
 *  Response of the ImportUserEventsRequest. If the long running operation was
 *  successful, then this message is returned by the
 *  google.longrunning.Operations.response field if the operation was
 *  successful.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ImportUserEventsResponse : GTLRObject

/** A sample of errors encountered while processing the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleRpcStatus *> *errorSamples;

/**
 *  Echoes the destination for the complete errors if this field was set in the
 *  request.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2ImportErrorsConfig *errorsConfig;

/** Aggregated statistics of user event import status. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2UserEventImportSummary *importSummary;

@end


/**
 *  A floating point interval.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2Interval : GTLRObject

/**
 *  Exclusive upper bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exclusiveMaximum;

/**
 *  Exclusive lower bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exclusiveMinimum;

/**
 *  Inclusive upper bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maximum;

/**
 *  Inclusive lower bound.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minimum;

@end


/**
 *  Response for CatalogService.ListCatalogs method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "catalogs" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ListCatalogsResponse : GTLRCollectionObject

/**
 *  All the customer's Catalogs.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2Catalog *> *catalogs;

/**
 *  A token that can be sent as ListCatalogsRequest.page_token to retrieve the
 *  next page. If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response for ListControls method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "controls" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ListControlsResponse : GTLRCollectionObject

/**
 *  All the Controls for a given catalog.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2Control *> *controls;

/** Pagination token, if not returned indicates the last page. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for ProductService.ListProducts method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "products" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ListProductsResponse : GTLRCollectionObject

/**
 *  A token that can be sent as ListProductsRequest.page_token to retrieve the
 *  next page. If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The Products.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2Product *> *products;

@end


/**
 *  Response for ListServingConfigs method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "servingConfigs" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ListServingConfigsResponse : GTLRCollectionObject

/** Pagination token, if not returned indicates the last page. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  All the ServingConfigs for a given catalog.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2ServingConfig *> *servingConfigs;

@end


/**
 *  The inventory information at a place (e.g. a store) identified by a place
 *  ID.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2LocalInventory : GTLRObject

/**
 *  Additional local inventory attributes, for example, store name, promotion
 *  tags, etc. This field needs to pass all below criteria, otherwise an
 *  INVALID_ARGUMENT error is returned: * At most 30 attributes are allowed. *
 *  The key must be a UTF-8 encoded string with a length limit of 32 characters.
 *  * The key must match the pattern: `a-zA-Z0-9*`. For example, key0LikeThis or
 *  KEY_1_LIKE_THIS. * The attribute values must be of the same type (text or
 *  number). * Only 1 value is allowed for each attribute. * For text values,
 *  the length limit is 256 UTF-8 characters. * The attribute does not support
 *  search. The `searchable` field should be unset or set to false. * The max
 *  summed total bytes of custom attribute keys and values per product is 5MiB.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2LocalInventory_Attributes *attributes;

/**
 *  Input only. Supported fulfillment types. Valid fulfillment type values
 *  include commonly used types (such as pickup in store and same day delivery),
 *  and custom types. Customers have to map custom types to their display names
 *  before rendering UI. Supported values: * "pickup-in-store" * "ship-to-store"
 *  * "same-day-delivery" * "next-day-delivery" * "custom-type-1" *
 *  "custom-type-2" * "custom-type-3" * "custom-type-4" * "custom-type-5" If
 *  this field is set to an invalid value other than these, an INVALID_ARGUMENT
 *  error is returned. All the elements must be distinct. Otherwise, an
 *  INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *fulfillmentTypes;

/** The place ID for the current set of inventory information. */
@property(nonatomic, copy, nullable) NSString *placeId;

/**
 *  Product price and cost information. Google Merchant Center property
 *  [price](https://support.google.com/merchants/answer/6324371).
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2PriceInfo *priceInfo;

@end


/**
 *  Additional local inventory attributes, for example, store name, promotion
 *  tags, etc. This field needs to pass all below criteria, otherwise an
 *  INVALID_ARGUMENT error is returned: * At most 30 attributes are allowed. *
 *  The key must be a UTF-8 encoded string with a length limit of 32 characters.
 *  * The key must match the pattern: `a-zA-Z0-9*`. For example, key0LikeThis or
 *  KEY_1_LIKE_THIS. * The attribute values must be of the same type (text or
 *  number). * Only 1 value is allowed for each attribute. * For text values,
 *  the length limit is 256 UTF-8 characters. * The attribute does not support
 *  search. The `searchable` field should be unset or set to false. * The max
 *  summed total bytes of custom attribute keys and values per product is 5MiB.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCloudRetail_GoogleCloudRetailV2CustomAttribute. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2LocalInventory_Attributes : GTLRObject
@end


/**
 *  Request message for Predict method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2PredictRequest : GTLRObject

/**
 *  Filter for restricting prediction results with a length limit of 5,000
 *  characters. Accepts values for tags and the `filterOutOfStockItems` flag. *
 *  Tag expressions. Restricts predictions to products that match all of the
 *  specified tags. Boolean operators `OR` and `NOT` are supported if the
 *  expression is enclosed in parentheses, and must be separated from the tag
 *  values by a space. `-"tagA"` is also supported and is equivalent to `NOT
 *  "tagA"`. Tag values must be double quoted UTF-8 encoded strings with a size
 *  limit of 1,000 characters. Note: "Recently viewed" models don't support tag
 *  filtering at the moment. * filterOutOfStockItems. Restricts predictions to
 *  products that do not have a stockState value of OUT_OF_STOCK. Examples: *
 *  tag=("Red" OR "Blue") tag="New-Arrival" tag=(NOT "promotional") *
 *  filterOutOfStockItems tag=(-"promotional") * filterOutOfStockItems If your
 *  filter blocks all prediction results, the API will return *no* results. If
 *  instead you want empty result sets to return generic (unfiltered) popular
 *  products, set `strictFiltering` to False in `PredictRequest.params`. Note
 *  that the API will never return items with storageStatus of "EXPIRED" or
 *  "DELETED" regardless of filter choices. If `filterSyntaxV2` is set to true
 *  under the `params` field, then attribute-based expressions are expected
 *  instead of the above described tag-based syntax. Examples: * (colors:
 *  ANY("Red", "Blue")) AND NOT (categories: ANY("Phones")) * (availability:
 *  ANY("IN_STOCK")) AND (colors: ANY("Red") OR categories: ANY("Phones"))
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The labels applied to a resource must meet the following requirements: *
 *  Each resource can have multiple labels, up to a maximum of 64. * Each label
 *  must be a key-value pair. * Keys have a minimum length of 1 character and a
 *  maximum length of 63 characters and cannot be empty. Values can be empty and
 *  have a maximum length of 63 characters. * Keys and values can contain only
 *  lowercase letters, numeric characters, underscores, and dashes. All
 *  characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2PredictRequest_Labels *labels;

/**
 *  Maximum number of results to return. Set this property to the number of
 *  prediction results needed. If zero, the service will choose a reasonable
 *  default. The maximum allowed value is 100. Values above 100 will be coerced
 *  to 100.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/** This field is not used; leave it unset. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Additional domain specific parameters for the predictions. Allowed values: *
 *  `returnProduct`: Boolean. If set to true, the associated product object will
 *  be returned in the `results.metadata` field in the prediction response. *
 *  `returnScore`: Boolean. If set to true, the prediction 'score' corresponding
 *  to each returned product will be set in the `results.metadata` field in the
 *  prediction response. The given 'score' indicates the probability of a
 *  product being clicked/purchased given the user's context and history. *
 *  `strictFiltering`: Boolean. True by default. If set to false, the service
 *  will return generic (unfiltered) popular products instead of empty if your
 *  filter blocks all prediction results. * `priceRerankLevel`: String. Default
 *  empty. If set to be non-empty, then it needs to be one of
 *  {'no-price-reranking', 'low-price-reranking', 'medium-price-reranking',
 *  'high-price-reranking'}. This gives request-level control and adjusts
 *  prediction results based on product price. * `diversityLevel`: String.
 *  Default empty. If set to be non-empty, then it needs to be one of
 *  {'no-diversity', 'low-diversity', 'medium-diversity', 'high-diversity',
 *  'auto-diversity'}. This gives request-level control and adjusts prediction
 *  results based on product category. * `filterSyntaxV2`: Boolean. False by
 *  default. If set to true, the `filter` field is interpreteted according to
 *  the new, attribute-based syntax.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2PredictRequest_Params *params;

/**
 *  Required. Context about the user, what they are looking at and what action
 *  they took to trigger the predict request. Note that this user event detail
 *  won't be ingested to userEvent logs. Thus, a separate userEvent write
 *  request is required for event logging. Don't set UserEvent.visitor_id or
 *  UserInfo.user_id to the same fixed ID for different users. If you are trying
 *  to receive non-personalized recommendations (not recommended; this can
 *  negatively impact model performance), instead set UserEvent.visitor_id to a
 *  random unique ID and leave UserInfo.user_id unset.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2UserEvent *userEvent;

/**
 *  Use validate only mode for this prediction query. If set to true, a dummy
 *  model will be used that returns arbitrary products. Note that the validate
 *  only mode should only be used for testing the API, or if the model is not
 *  ready.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  The labels applied to a resource must meet the following requirements: *
 *  Each resource can have multiple labels, up to a maximum of 64. * Each label
 *  must be a key-value pair. * Keys have a minimum length of 1 character and a
 *  maximum length of 63 characters and cannot be empty. Values can be empty and
 *  have a maximum length of 63 characters. * Keys and values can contain only
 *  lowercase letters, numeric characters, underscores, and dashes. All
 *  characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2PredictRequest_Labels : GTLRObject
@end


/**
 *  Additional domain specific parameters for the predictions. Allowed values: *
 *  `returnProduct`: Boolean. If set to true, the associated product object will
 *  be returned in the `results.metadata` field in the prediction response. *
 *  `returnScore`: Boolean. If set to true, the prediction 'score' corresponding
 *  to each returned product will be set in the `results.metadata` field in the
 *  prediction response. The given 'score' indicates the probability of a
 *  product being clicked/purchased given the user's context and history. *
 *  `strictFiltering`: Boolean. True by default. If set to false, the service
 *  will return generic (unfiltered) popular products instead of empty if your
 *  filter blocks all prediction results. * `priceRerankLevel`: String. Default
 *  empty. If set to be non-empty, then it needs to be one of
 *  {'no-price-reranking', 'low-price-reranking', 'medium-price-reranking',
 *  'high-price-reranking'}. This gives request-level control and adjusts
 *  prediction results based on product price. * `diversityLevel`: String.
 *  Default empty. If set to be non-empty, then it needs to be one of
 *  {'no-diversity', 'low-diversity', 'medium-diversity', 'high-diversity',
 *  'auto-diversity'}. This gives request-level control and adjusts prediction
 *  results based on product category. * `filterSyntaxV2`: Boolean. False by
 *  default. If set to true, the `filter` field is interpreteted according to
 *  the new, attribute-based syntax.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2PredictRequest_Params : GTLRObject
@end


/**
 *  Response message for predict method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2PredictResponse : GTLRObject

/**
 *  A unique attribution token. This should be included in the UserEvent logs
 *  resulting from this recommendation, which enables accurate attribution of
 *  recommendation model performance.
 */
@property(nonatomic, copy, nullable) NSString *attributionToken;

/** IDs of products in the request that were missing from the inventory. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *missingIds;

/**
 *  A list of recommended products. The order represents the ranking (from the
 *  most relevant product to the least).
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2PredictResponsePredictionResult *> *results;

/**
 *  True if the validateOnly property was set in the request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  PredictionResult represents the recommendation prediction results.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2PredictResponsePredictionResult : GTLRObject

/**
 *  ID of the recommended product
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Additional product metadata / annotations. Possible values: * `product`:
 *  JSON representation of the product. Is set if `returnProduct` is set to true
 *  in `PredictRequest.params`. * `score`: Prediction score in double value. Is
 *  set if `returnScore` is set to true in `PredictRequest.params`.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2PredictResponsePredictionResult_Metadata *metadata;

@end


/**
 *  Additional product metadata / annotations. Possible values: * `product`:
 *  JSON representation of the product. Is set if `returnProduct` is set to true
 *  in `PredictRequest.params`. * `score`: Prediction score in double value. Is
 *  set if `returnScore` is set to true in `PredictRequest.params`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2PredictResponsePredictionResult_Metadata : GTLRObject
@end


/**
 *  The price information of a Product.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2PriceInfo : GTLRObject

/**
 *  The costs associated with the sale of a particular product. Used for gross
 *  profit reporting. * Profit = price - cost Google Merchant Center property
 *  [cost_of_goods_sold](https://support.google.com/merchants/answer/9017895).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cost;

/**
 *  The 3-letter currency code defined in [ISO
 *  4217](https://www.iso.org/iso-4217-currency-codes.html). If this field is an
 *  unrecognizable currency code, an INVALID_ARGUMENT error is returned. The
 *  Product.Type.VARIANT Products with the same Product.primary_product_id must
 *  share the same currency_code. Otherwise, a FAILED_PRECONDITION error is
 *  returned.
 */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Price of the product without any discount. If zero, by default set to be the
 *  price. If set, original_price should be greater than or equal to price,
 *  otherwise an INVALID_ARGUMENT error is thrown.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *originalPrice;

/**
 *  Price of the product. Google Merchant Center property
 *  [price](https://support.google.com/merchants/answer/6324371). Schema.org
 *  property [Offer.price](https://schema.org/price).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *price;

/**
 *  The timestamp when the price starts to be effective. This can be set as a
 *  future timestamp, and the price is only used for search after
 *  price_effective_time. If so, the original_price must be set and
 *  original_price is used before price_effective_time. Do not set if price is
 *  always effective because it will cause additional latency during search.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *priceEffectiveTime;

/**
 *  The timestamp when the price stops to be effective. The price is used for
 *  search before price_expire_time. If this field is set, the original_price
 *  must be set and original_price is used after price_expire_time. Do not set
 *  if price is always effective because it will cause additional latency during
 *  search.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *priceExpireTime;

/**
 *  Output only. The price range of all the child Product.Type.VARIANT Products
 *  grouped together on the Product.Type.PRIMARY Product. Only populated for
 *  Product.Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for
 *  ProductService.GetProduct. Do not set this field in API requests.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2PriceInfoPriceRange *priceRange;

@end


/**
 *  The price range of all variant Product having the same
 *  Product.primary_product_id.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2PriceInfoPriceRange : GTLRObject

/**
 *  The inclusive Product.pricing_info.original_price internal of all variant
 *  Product having the same Product.primary_product_id.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2Interval *originalPrice;

/**
 *  The inclusive Product.pricing_info.price interval of all variant Product
 *  having the same Product.primary_product_id.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2Interval *price;

@end


/**
 *  Product captures all metadata information of items to be recommended or
 *  searched.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2Product : GTLRObject

/**
 *  Highly encouraged. Extra product attributes to be included. For example, for
 *  products, this could include the store name, vendor, style, color, etc.
 *  These are very strong signals for recommendation model, thus we highly
 *  recommend providing the attributes here. Features that can take on one of a
 *  limited number of possible values. Two types of features can be set are:
 *  Textual features. some examples would be the brand/maker of a product, or
 *  country of a customer. Numerical features. Some examples would be the
 *  height/weight of a product, or age of a customer. For example: `{ "vendor":
 *  {"text": ["vendor123", "vendor456"]}, "lengths_cm": {"numbers":[2.3, 15.4]},
 *  "heights_cm": {"numbers":[8.1, 6.4]} }`. This field needs to pass all below
 *  criteria, otherwise an INVALID_ARGUMENT error is returned: * Max entries
 *  count: 200. * The key must be a UTF-8 encoded string with a length limit of
 *  128 characters. * For indexable attribute, the key must match the pattern:
 *  `a-zA-Z0-9*`. For example, `key0LikeThis` or `KEY_1_LIKE_THIS`. * For text
 *  attributes, at most 400 values are allowed. Empty values are not allowed.
 *  Each value must be a non-empty UTF-8 encoded string with a length limit of
 *  256 characters. * For number attributes, at most 400 values are allowed.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2Product_Attributes *attributes;

/**
 *  The target group associated with a given audience (e.g. male, veterans, car
 *  owners, musicians, etc.) of the product.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2Audience *audience;

/**
 *  The online availability of the Product. Default to Availability.IN_STOCK.
 *  Corresponding properties: Google Merchant Center property
 *  [availability](https://support.google.com/merchants/answer/6324448).
 *  Schema.org property [Offer.availability](https://schema.org/availability).
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2Product_Availability_AvailabilityUnspecified
 *        Default product availability. Default to Availability.IN_STOCK if
 *        unset. (Value: "AVAILABILITY_UNSPECIFIED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2Product_Availability_Backorder
 *        Product that is back-ordered (i.e. temporarily out of stock). (Value:
 *        "BACKORDER")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2Product_Availability_InStock
 *        Product in stock. (Value: "IN_STOCK")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2Product_Availability_OutOfStock
 *        Product out of stock. (Value: "OUT_OF_STOCK")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2Product_Availability_Preorder
 *        Product that is in pre-order state. (Value: "PREORDER")
 */
@property(nonatomic, copy, nullable) NSString *availability;

/**
 *  The available quantity of the item.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *availableQuantity;

/**
 *  The timestamp when this Product becomes available for SearchService.Search.
 *  Note that this is only applicable to Type.PRIMARY and Type.COLLECTION, and
 *  ignored for Type.VARIANT.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *availableTime;

/**
 *  The brands of the product. A maximum of 30 brands are allowed. Each brand
 *  must be a UTF-8 encoded string with a length limit of 1,000 characters.
 *  Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties:
 *  Google Merchant Center property
 *  [brand](https://support.google.com/merchants/answer/6324351). Schema.org
 *  property [Product.brand](https://schema.org/brand).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *brands;

/**
 *  Product categories. This field is repeated for supporting one product
 *  belonging to several parallel categories. Strongly recommended using the
 *  full path for better search / recommendation quality. To represent full path
 *  of category, use '>' sign to separate different hierarchies. If '>' is part
 *  of the category name, replace it with other character(s). For example, if a
 *  shoes product belongs to both ["Shoes & Accessories" -> "Shoes"] and
 *  ["Sports & Fitness" -> "Athletic Clothing" -> "Shoes"], it could be
 *  represented as: "categories": [ "Shoes & Accessories > Shoes", "Sports &
 *  Fitness > Athletic Clothing > Shoes" ] Must be set for Type.PRIMARY Product
 *  otherwise an INVALID_ARGUMENT error is returned. At most 250 values are
 *  allowed per Product. Empty values are not allowed. Each value must be a
 *  UTF-8 encoded string with a length limit of 5,000 characters. Otherwise, an
 *  INVALID_ARGUMENT error is returned. Corresponding properties: Google
 *  Merchant Center property google_product_category. Schema.org property
 *  [Product.category] (https://schema.org/category).
 *  [mc_google_product_category]:
 *  https://support.google.com/merchants/answer/6324436
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *categories;

/**
 *  The id of the collection members when type is Type.COLLECTION. Non-existent
 *  product ids are allowed. The type of the members must be either Type.PRIMARY
 *  or Type.VARIANT otherwise an INVALID_ARGUMENT error is thrown. Should not
 *  set it for other types. A maximum of 1000 values are allowed. Otherwise, an
 *  INVALID_ARGUMENT error is return.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *collectionMemberIds;

/**
 *  The color of the product. Corresponding properties: Google Merchant Center
 *  property [color](https://support.google.com/merchants/answer/6324487).
 *  Schema.org property [Product.color](https://schema.org/color).
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2ColorInfo *colorInfo;

/**
 *  The condition of the product. Strongly encouraged to use the standard
 *  values: "new", "refurbished", "used". A maximum of 1 value is allowed per
 *  Product. Each value must be a UTF-8 encoded string with a length limit of
 *  128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
 *  Corresponding properties: Google Merchant Center property
 *  [condition](https://support.google.com/merchants/answer/6324469). Schema.org
 *  property [Offer.itemCondition](https://schema.org/itemCondition).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *conditions;

/**
 *  Product description. This field must be a UTF-8 encoded string with a length
 *  limit of 5,000 characters. Otherwise, an INVALID_ARGUMENT error is returned.
 *  Corresponding properties: Google Merchant Center property
 *  [description](https://support.google.com/merchants/answer/6324468).
 *  Schema.org property [Product.description](https://schema.org/description).
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The timestamp when this product becomes unavailable for
 *  SearchService.Search. Note that this is only applicable to Type.PRIMARY and
 *  Type.COLLECTION, and ignored for Type.VARIANT. In general, we suggest the
 *  users to delete the stale products explicitly, instead of using this field
 *  to determine staleness. If it is set, the Product is not available for
 *  SearchService.Search after expire_time. However, the product can still be
 *  retrieved by ProductService.GetProduct and ProductService.ListProducts.
 *  expire_time must be later than available_time and publish_time, otherwise an
 *  INVALID_ARGUMENT error is thrown. Corresponding properties: Google Merchant
 *  Center property
 *  [expiration_date](https://support.google.com/merchants/answer/6324499).
 */
@property(nonatomic, strong, nullable) GTLRDateTime *expireTime;

/**
 *  Fulfillment information, such as the store IDs for in-store pickup or region
 *  IDs for different shipping methods. All the elements must have distinct
 *  FulfillmentInfo.type. Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2FulfillmentInfo *> *fulfillmentInfo;

/**
 *  The Global Trade Item Number (GTIN) of the product. This field must be a
 *  UTF-8 encoded string with a length limit of 128 characters. Otherwise, an
 *  INVALID_ARGUMENT error is returned. This field must be a Unigram. Otherwise,
 *  an INVALID_ARGUMENT error is returned. Corresponding properties: Google
 *  Merchant Center property
 *  [gtin](https://support.google.com/merchants/answer/6324461). Schema.org
 *  property [Product.isbn](https://schema.org/isbn),
 *  [Product.gtin8](https://schema.org/gtin8),
 *  [Product.gtin12](https://schema.org/gtin12),
 *  [Product.gtin13](https://schema.org/gtin13), or
 *  [Product.gtin14](https://schema.org/gtin14). If the value is not a valid
 *  GTIN, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *gtin;

/**
 *  Immutable. Product identifier, which is the final component of name. For
 *  example, this field is "id_1", if name is `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/id_1`.
 *  This field must be a UTF-8 encoded string with a length limit of 128
 *  characters. Otherwise, an INVALID_ARGUMENT error is returned. Corresponding
 *  properties: Google Merchant Center property
 *  [id](https://support.google.com/merchants/answer/6324405). Schema.org
 *  property [Product.sku](https://schema.org/sku).
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Product images for the product. We highly recommend putting the main image
 *  first. A maximum of 300 images are allowed. Corresponding properties: Google
 *  Merchant Center property
 *  [image_link](https://support.google.com/merchants/answer/6324350).
 *  Schema.org property [Product.image](https://schema.org/image).
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2Image *> *images;

/**
 *  Language of the title/description and other string attributes. Use language
 *  tags defined by [BCP 47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). For
 *  product prediction, this field is ignored and the model automatically
 *  detects the text language. The Product can include text in different
 *  languages, but duplicating Products to provide text in multiple languages
 *  can result in degraded model performance. For product search this field is
 *  in use. It defaults to "en-US" if unset.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Output only. A list of local inventories specific to different places. This
 *  is only available for users who have Retail Search enabled, and it can be
 *  managed by ProductService.AddLocalInventories and
 *  ProductService.RemoveLocalInventories APIs.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2LocalInventory *> *localInventories;

/**
 *  The material of the product. For example, "leather", "wooden". A maximum of
 *  20 values are allowed. Each value must be a UTF-8 encoded string with a
 *  length limit of 200 characters. Otherwise, an INVALID_ARGUMENT error is
 *  returned. Corresponding properties: Google Merchant Center property
 *  [material](https://support.google.com/merchants/answer/6324410). Schema.org
 *  property [Product.material](https://schema.org/material).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *materials;

/**
 *  Immutable. Full resource name of the product, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The pattern or graphic print of the product. For example, "striped", "polka
 *  dot", "paisley". A maximum of 20 values are allowed per Product. Each value
 *  must be a UTF-8 encoded string with a length limit of 128 characters.
 *  Otherwise, an INVALID_ARGUMENT error is returned. Corresponding properties:
 *  Google Merchant Center property
 *  [pattern](https://support.google.com/merchants/answer/6324483). Schema.org
 *  property [Product.pattern](https://schema.org/pattern).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *patterns;

/**
 *  Product price and cost information. Corresponding properties: Google
 *  Merchant Center property
 *  [price](https://support.google.com/merchants/answer/6324371).
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2PriceInfo *priceInfo;

/**
 *  Variant group identifier. Must be an id, with the same parent branch with
 *  this product. Otherwise, an error is thrown. For Type.PRIMARY Products, this
 *  field can only be empty or set to the same value as id. For VARIANT
 *  Products, this field cannot be empty. A maximum of 2,000 products are
 *  allowed to share the same Type.PRIMARY Product. Otherwise, an
 *  INVALID_ARGUMENT error is returned. Corresponding properties: Google
 *  Merchant Center property
 *  [item_group_id](https://support.google.com/merchants/answer/6324507).
 *  Schema.org property
 *  [Product.inProductGroupWithID](https://schema.org/inProductGroupWithID).
 */
@property(nonatomic, copy, nullable) NSString *primaryProductId;

/**
 *  The promotions applied to the product. A maximum of 10 values are allowed
 *  per Product. Only Promotion.promotion_id will be used, other fields will be
 *  ignored if set.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2Promotion *> *promotions;

/**
 *  The timestamp when the product is published by the retailer for the first
 *  time, which indicates the freshness of the products. Note that this field is
 *  different from available_time, given it purely describes product freshness
 *  regardless of when it is available on search and recommendation.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *publishTime;

/** The rating of this product. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2Rating *rating;

/**
 *  Indicates which fields in the Products are returned in SearchResponse.
 *  Supported fields for all types: * audience * availability * brands *
 *  color_info * conditions * gtin * materials * name * patterns * price_info *
 *  rating * sizes * title * uri Supported fields only for Type.PRIMARY and
 *  Type.COLLECTION: * categories * description * images Supported fields only
 *  for Type.VARIANT: * Only the first image in images To mark attributes as
 *  retrievable, include paths of the form "attributes.key" where "key" is the
 *  key of a custom attribute, as specified in attributes. For Type.PRIMARY and
 *  Type.COLLECTION, the following fields are always returned in SearchResponse
 *  by default: * name For Type.VARIANT, the following fields are always
 *  returned in by default: * name * color_info The maximum number of paths is
 *  30. Otherwise, an INVALID_ARGUMENT error is returned. Note: Returning more
 *  fields in SearchResponse can increase response payload size and serving
 *  latency.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *retrievableFields;

/**
 *  The size of the product. To represent different size systems or size types,
 *  consider using this format: [[[size_system:]size_type:]size_value]. For
 *  example, in "US:MENS:M", "US" represents size system; "MENS" represents size
 *  type; "M" represents size value. In "GIRLS:27", size system is empty;
 *  "GIRLS" represents size type; "27" represents size value. In "32 inches",
 *  both size system and size type are empty, while size value is "32 inches". A
 *  maximum of 20 values are allowed per Product. Each value must be a UTF-8
 *  encoded string with a length limit of 128 characters. Otherwise, an
 *  INVALID_ARGUMENT error is returned. Corresponding properties: Google
 *  Merchant Center property
 *  [size](https://support.google.com/merchants/answer/6324492),
 *  [size_type](https://support.google.com/merchants/answer/6324497), and
 *  [size_system](https://support.google.com/merchants/answer/6324502).
 *  Schema.org property [Product.size](https://schema.org/size).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sizes;

/**
 *  Custom tags associated with the product. At most 250 values are allowed per
 *  Product. This value must be a UTF-8 encoded string with a length limit of
 *  1,000 characters. Otherwise, an INVALID_ARGUMENT error is returned. This tag
 *  can be used for filtering recommendation results by passing the tag as part
 *  of the PredictRequest.filter. Corresponding properties: Google Merchant
 *  Center property
 *  [custom_label_0–4](https://support.google.com/merchants/answer/6324473).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tags;

/**
 *  Required. Product title. This field must be a UTF-8 encoded string with a
 *  length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is
 *  returned. Corresponding properties: Google Merchant Center property
 *  [title](https://support.google.com/merchants/answer/6324415). Schema.org
 *  property [Product.name](https://schema.org/name).
 */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  Input only. The TTL (time to live) of the product. Note that this is only
 *  applicable to Type.PRIMARY and Type.COLLECTION, and ignored for
 *  Type.VARIANT. In general, we suggest the users to delete the stale products
 *  explicitly, instead of using this field to determine staleness. If it is
 *  set, it must be a non-negative value, and expire_time is set as current
 *  timestamp plus ttl. The derived expire_time is returned in the output and
 *  ttl is left blank when retrieving the Product. If it is set, the product is
 *  not available for SearchService.Search after current timestamp plus ttl.
 *  However, the product can still be retrieved by ProductService.GetProduct and
 *  ProductService.ListProducts.
 */
@property(nonatomic, strong, nullable) GTLRDuration *ttl;

/**
 *  Immutable. The type of the product. Default to
 *  Catalog.product_level_config.ingestion_product_type if unset.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2Product_Type_Collection The
 *        collection type. Collection products are bundled Type.PRIMARY Products
 *        or Type.VARIANT Products that are sold together, such as a jewelry set
 *        with necklaces, earrings and rings, etc. (Value: "COLLECTION")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2Product_Type_Primary The
 *        primary type. As the primary unit for predicting, indexing and search
 *        serving, a Type.PRIMARY Product is grouped with multiple Type.VARIANT
 *        Products. (Value: "PRIMARY")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2Product_Type_TypeUnspecified
 *        Default value. Default to
 *        Catalog.product_level_config.ingestion_product_type if unset. (Value:
 *        "TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2Product_Type_Variant The
 *        variant type. Type.VARIANT Products usually share some common
 *        attributes on the same Type.PRIMARY Products, but they have variant
 *        attributes like different colors, sizes and prices, etc. (Value:
 *        "VARIANT")
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Canonical URL directly linking to the product detail page. It is strongly
 *  recommended to provide a valid uri for the product, otherwise the service
 *  performance could be significantly degraded. This field must be a UTF-8
 *  encoded string with a length limit of 5,000 characters. Otherwise, an
 *  INVALID_ARGUMENT error is returned. Corresponding properties: Google
 *  Merchant Center property
 *  [link](https://support.google.com/merchants/answer/6324416). Schema.org
 *  property [Offer.url](https://schema.org/url).
 */
@property(nonatomic, copy, nullable) NSString *uri;

/**
 *  Output only. Product variants grouped together on primary product which
 *  share similar product attributes. It's automatically grouped by
 *  primary_product_id for all the product variants. Only populated for
 *  Type.PRIMARY Products. Note: This field is OUTPUT_ONLY for
 *  ProductService.GetProduct. Do not set this field in API requests.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2Product *> *variants;

@end


/**
 *  Highly encouraged. Extra product attributes to be included. For example, for
 *  products, this could include the store name, vendor, style, color, etc.
 *  These are very strong signals for recommendation model, thus we highly
 *  recommend providing the attributes here. Features that can take on one of a
 *  limited number of possible values. Two types of features can be set are:
 *  Textual features. some examples would be the brand/maker of a product, or
 *  country of a customer. Numerical features. Some examples would be the
 *  height/weight of a product, or age of a customer. For example: `{ "vendor":
 *  {"text": ["vendor123", "vendor456"]}, "lengths_cm": {"numbers":[2.3, 15.4]},
 *  "heights_cm": {"numbers":[8.1, 6.4]} }`. This field needs to pass all below
 *  criteria, otherwise an INVALID_ARGUMENT error is returned: * Max entries
 *  count: 200. * The key must be a UTF-8 encoded string with a length limit of
 *  128 characters. * For indexable attribute, the key must match the pattern:
 *  `a-zA-Z0-9*`. For example, `key0LikeThis` or `KEY_1_LIKE_THIS`. * For text
 *  attributes, at most 400 values are allowed. Empty values are not allowed.
 *  Each value must be a non-empty UTF-8 encoded string with a length limit of
 *  256 characters. * For number attributes, at most 400 values are allowed.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCloudRetail_GoogleCloudRetailV2CustomAttribute. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2Product_Attributes : GTLRObject
@end


/**
 *  Detailed product information associated with a user event.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ProductDetail : GTLRObject

/**
 *  Required. Product information. Required field(s): * Product.id Optional
 *  override field(s): * Product.price_info If any supported optional fields are
 *  provided, we will treat them as a full override when looking up product
 *  information from the catalog. Thus, it is important to ensure that the
 *  overriding fields are accurate and complete. All other product fields are
 *  ignored and instead populated via catalog lookup after event ingestion.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2Product *product;

/**
 *  Quantity of the product associated with the user event. For example, this
 *  field will be 2 if two products are added to the shopping cart for
 *  `purchase-complete` event. Required for `add-to-cart` and
 *  `purchase-complete` event types.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

@end


/**
 *  The inline source for the input config for ImportProducts method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ProductInlineSource : GTLRObject

/**
 *  Required. A list of products to update/create. Each product must have a
 *  valid Product.id. Recommended max of 100 items.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2Product *> *products;

@end


/**
 *  The input config source for products.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ProductInputConfig : GTLRObject

/** BigQuery input source. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2BigQuerySource *bigQuerySource;

/** Google Cloud Storage location for the input content. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2GcsSource *gcsSource;

/** The Inline source for the input content for products. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2ProductInlineSource *productInlineSource;

@end


/**
 *  Configures what level the product should be uploaded with regards to how
 *  users will be send events and how predictions will be made.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ProductLevelConfig : GTLRObject

/**
 *  The type of Products allowed to be ingested into the catalog. Acceptable
 *  values are: * `primary` (default): You can ingest Products of all types.
 *  When ingesting a Product, its type will default to Product.Type.PRIMARY if
 *  unset. * `variant` (incompatible with Retail Search): You can only ingest
 *  Product.Type.VARIANT Products. This means Product.primary_product_id cannot
 *  be empty. If this field is set to an invalid value other than these, an
 *  INVALID_ARGUMENT error is returned. If this field is `variant` and
 *  merchant_center_product_id_field is `itemGroupId`, an INVALID_ARGUMENT error
 *  is returned. See [Product
 *  levels](https://cloud.google.com/retail/docs/catalog#product-levels) for
 *  more details.
 */
@property(nonatomic, copy, nullable) NSString *ingestionProductType;

/**
 *  Which field of [Merchant Center
 *  Product](/bigquery-transfer/docs/merchant-center-products-schema) should be
 *  imported as Product.id. Acceptable values are: * `offerId` (default): Import
 *  `offerId` as the product ID. * `itemGroupId`: Import `itemGroupId` as the
 *  product ID. Notice that Retail API will choose one item from the ones with
 *  the same `itemGroupId`, and use it to represent the item group. If this
 *  field is set to an invalid value other than these, an INVALID_ARGUMENT error
 *  is returned. If this field is `itemGroupId` and ingestion_product_type is
 *  `variant`, an INVALID_ARGUMENT error is returned. See [Product
 *  levels](https://cloud.google.com/retail/docs/catalog#product-levels) for
 *  more details.
 */
@property(nonatomic, copy, nullable) NSString *merchantCenterProductIdField;

@end


/**
 *  Promotion specification.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2Promotion : GTLRObject

/**
 *  Promotion identifier, which is the final component of name. For example,
 *  this field is "free_gift", if name is `projects/ *
 *  /locations/global/catalogs/default_catalog/promotions/free_gift`. The value
 *  must be a UTF-8 encoded string with a length limit of 128 characters, and
 *  match the pattern: `a-zA-Z*`. For example, id0LikeThis or ID_1_LIKE_THIS.
 *  Otherwise, an INVALID_ARGUMENT error is returned. Corresponds to Google
 *  Merchant Center property
 *  [promotion_id](https://support.google.com/merchants/answer/7050148).
 */
@property(nonatomic, copy, nullable) NSString *promotionId;

@end


/**
 *  A transaction represents the entire purchase transaction.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2PurchaseTransaction : GTLRObject

/**
 *  All the costs associated with the products. These can be manufacturing
 *  costs, shipping expenses not borne by the end user, or any other costs, such
 *  that: * Profit = revenue - tax - cost
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cost;

/** Required. Currency code. Use three-character ISO-4217 code. */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  The transaction ID with a length limit of 128 characters.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Required. Total non-zero revenue or grand total associated with the
 *  transaction. This value include shipping, tax, or other adjustments to total
 *  revenue that you want to include as part of your revenue calculations.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *revenue;

/**
 *  All the taxes associated with the transaction.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *tax;

@end


/**
 *  Metadata related to the progress of the Purge operation. This will be
 *  returned by the google.longrunning.Operation.metadata field.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2PurgeMetadata : GTLRObject
@end


/**
 *  Request message for PurgeUserEvents method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2PurgeUserEventsRequest : GTLRObject

/**
 *  Required. The filter string to specify the events to be deleted with a
 *  length limit of 5,000 characters. Empty string filter is not allowed. The
 *  eligible fields for filtering are: * `eventType`: Double quoted
 *  UserEvent.event_type string. * `eventTime`: in ISO 8601 "zulu" format. *
 *  `visitorId`: Double quoted string. Specifying this will delete all events
 *  associated with a visitor. * `userId`: Double quoted string. Specifying this
 *  will delete all events associated with a user. Examples: * Deleting all
 *  events in a time range: `eventTime > "2012-04-23T18:25:43.511Z" eventTime <
 *  "2012-04-23T18:30:43.511Z"` * Deleting specific eventType in time range:
 *  `eventTime > "2012-04-23T18:25:43.511Z" eventType = "detail-page-view"` *
 *  Deleting all events for a specific visitor: `visitorId = "visitor1024"` The
 *  filtering fields are assumed to have an implicit AND.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Actually perform the purge. If `force` is set to false, the method will
 *  return the expected purge count without deleting any user events.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *force;

@end


/**
 *  Response of the PurgeUserEventsRequest. If the long running operation is
 *  successfully done, then this message is returned by the
 *  google.longrunning.Operations.response field.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2PurgeUserEventsResponse : GTLRObject

/**
 *  The total count of events purged as a result of the operation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *purgedEventsCount;

@end


/**
 *  The rating of a Product.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2Rating : GTLRObject

/**
 *  The average rating of the Product. The rating is scaled at 1-5. Otherwise,
 *  an INVALID_ARGUMENT error is returned.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *averageRating;

/**
 *  The total number of ratings. This value is independent of the value of
 *  rating_histogram. This value must be nonnegative. Otherwise, an
 *  INVALID_ARGUMENT error is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ratingCount;

/**
 *  List of rating counts per rating value (index = rating - 1). The list is
 *  empty if there is no rating. If the list is non-empty, its size is always 5.
 *  Otherwise, an INVALID_ARGUMENT error is returned. For example, [41, 14, 13,
 *  47, 303]. It means that the Product got 41 ratings with 1 star, 14 ratings
 *  with 2 star, and so on.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *ratingHistogram;

@end


/**
 *  Metadata for `RejoinUserEvents` method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsMetadata : GTLRObject
@end


/**
 *  Request message for RejoinUserEvents method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsRequest : GTLRObject

/**
 *  The type of the user event rejoin to define the scope and range of the user
 *  events to be rejoined with the latest product catalog. Defaults to
 *  `USER_EVENT_REJOIN_SCOPE_UNSPECIFIED` if this field is not set, or set to an
 *  invalid integer value.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsRequest_UserEventRejoinScope_JoinedEvents
 *        Only rejoin joined events with the latest product catalog. (Value:
 *        "JOINED_EVENTS")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsRequest_UserEventRejoinScope_UnjoinedEvents
 *        Only rejoin unjoined events with the latest product catalog. (Value:
 *        "UNJOINED_EVENTS")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsRequest_UserEventRejoinScope_UserEventRejoinScopeUnspecified
 *        Rejoin all events with the latest product catalog, including both
 *        joined events and unjoined events. (Value:
 *        "USER_EVENT_REJOIN_SCOPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *userEventRejoinScope;

@end


/**
 *  Response message for `RejoinUserEvents` method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsResponse : GTLRObject

/**
 *  Number of user events that were joined with latest product catalog.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rejoinedUserEventsCount;

@end


/**
 *  Request for CatalogService.RemoveCatalogAttribute method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RemoveCatalogAttributeRequest : GTLRObject

/** Required. The attribute name key of the CatalogAttribute to remove. */
@property(nonatomic, copy, nullable) NSString *key;

@end


/**
 *  Request for RemoveControl method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RemoveControlRequest : GTLRObject

/**
 *  Required. The id of the control to apply. Assumed to be in the same catalog
 *  as the serving config.
 */
@property(nonatomic, copy, nullable) NSString *controlId;

@end


/**
 *  Metadata related to the progress of the RemoveFulfillmentPlaces operation.
 *  Currently empty because there is no meaningful metadata populated from the
 *  ProductService.RemoveFulfillmentPlaces method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RemoveFulfillmentPlacesMetadata : GTLRObject
@end


/**
 *  Request message for ProductService.RemoveFulfillmentPlaces method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RemoveFulfillmentPlacesRequest : GTLRObject

/**
 *  If set to true, and the Product is not found, the fulfillment information
 *  will still be processed and retained for at most 1 day and processed once
 *  the Product is created. If set to false, a NOT_FOUND error is returned if
 *  the Product is not found.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowMissing;

/**
 *  Required. The IDs for this type, such as the store IDs for "pickup-in-store"
 *  or the region IDs for "same-day-delivery", to be removed for this type. At
 *  least 1 value is required, and a maximum of 2000 values are allowed. Each
 *  value must be a string with a length limit of 10 characters, matching the
 *  pattern `[a-zA-Z0-9_-]+`, such as "store1" or "REGION-2". Otherwise, an
 *  INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *placeIds;

/**
 *  The time when the fulfillment updates are issued, used to prevent
 *  out-of-order updates on fulfillment information. If not provided, the
 *  internal system time will be used.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *removeTime;

/**
 *  Required. The fulfillment type, including commonly used types (such as
 *  pickup in store and same day delivery), and custom types. Supported values:
 *  * "pickup-in-store" * "ship-to-store" * "same-day-delivery" *
 *  "next-day-delivery" * "custom-type-1" * "custom-type-2" * "custom-type-3" *
 *  "custom-type-4" * "custom-type-5" If this field is set to an invalid value
 *  other than these, an INVALID_ARGUMENT error is returned. This field directly
 *  corresponds to Product.fulfillment_info.type.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Response of the RemoveFulfillmentPlacesRequest. Currently empty because
 *  there is no meaningful response populated from the
 *  ProductService.RemoveFulfillmentPlaces method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RemoveFulfillmentPlacesResponse : GTLRObject
@end


/**
 *  Metadata related to the progress of the RemoveLocalInventories operation.
 *  Currently empty because there is no meaningful metadata populated from the
 *  ProductService.RemoveLocalInventories method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RemoveLocalInventoriesMetadata : GTLRObject
@end


/**
 *  Request message for ProductService.RemoveLocalInventories method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RemoveLocalInventoriesRequest : GTLRObject

/**
 *  If set to true, and the Product is not found, the local inventory removal
 *  request will still be processed and retained for at most 1 day and processed
 *  once the Product is created. If set to false, a NOT_FOUND error is returned
 *  if the Product is not found.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowMissing;

/**
 *  Required. A list of place IDs to have their inventory deleted. At most 3000
 *  place IDs are allowed per request.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *placeIds;

/**
 *  The time when the inventory deletions are issued. Used to prevent
 *  out-of-order updates and deletions on local inventory fields. If not
 *  provided, the internal system time will be used.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *removeTime;

@end


/**
 *  Response of the ProductService.RemoveLocalInventories API. Currently empty
 *  because there is no meaningful response populated from the
 *  ProductService.RemoveLocalInventories method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RemoveLocalInventoriesResponse : GTLRObject
@end


/**
 *  Request for CatalogService.ReplaceCatalogAttribute method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ReplaceCatalogAttributeRequest : GTLRObject

/** Required. The updated CatalogAttribute. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2CatalogAttribute *catalogAttribute;

/**
 *  Indicates which fields in the provided CatalogAttribute to update. The
 *  following are NOT supported: * CatalogAttribute.key If not set, all
 *  supported fields are updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  A rule is a condition-action pair * A condition defines when a rule is to be
 *  triggered. * An action specifies what occurs on that trigger. Currently
 *  rules only work for controls with SOLUTION_TYPE_SEARCH.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2Rule : GTLRObject

/** A boost action. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2RuleBoostAction *boostAction;

/**
 *  Required. The condition that triggers the rule. If the condition is empty,
 *  the rule will always apply.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2Condition *condition;

/** Prevents term from being associated with other terms. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2RuleDoNotAssociateAction *doNotAssociateAction;

/** Filters results. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2RuleFilterAction *filterAction;

/** Ignores specific terms from query during search. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2RuleIgnoreAction *ignoreAction;

/**
 *  Treats specific term as a synonym with a group of terms. Group of terms will
 *  not be treated as synonyms with the specific term.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2RuleOnewaySynonymsAction *onewaySynonymsAction;

/** Redirects a shopper to a specific page. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2RuleRedirectAction *redirectAction;

/** Replaces specific terms in the query. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2RuleReplacementAction *replacementAction;

/** Treats a set of terms as synonyms of one another. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2RuleTwowaySynonymsAction *twowaySynonymsAction;

@end


/**
 *  A boost action to apply to results matching condition specified above.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RuleBoostAction : GTLRObject

/**
 *  Strength of the condition boost, which must be in [-1, 1]. Negative boost
 *  means demotion. Default is 0.0. Setting to 1.0 gives the item a big
 *  promotion. However, it does not necessarily mean that the boosted item will
 *  be the top result at all times, nor that other items will be excluded.
 *  Results could still be shown even when none of them matches the condition.
 *  And results that are significantly more relevant to the search query can
 *  still trump your heavily favored but irrelevant items. Setting to -1.0 gives
 *  the item a big demotion. However, results that are deeply relevant might
 *  still be shown. The item will have an upstream battle to get a fairly high
 *  ranking, but it is not blocked out completely. Setting to 0.0 means no boost
 *  applied. The boosting condition is ignored.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boost;

/**
 *  The filter can have a max size of 5000 characters. An expression which
 *  specifies which products to apply an action to. The syntax and supported
 *  fields are the same as a filter expression. See SearchRequest.filter for
 *  detail syntax and limitations. Examples: * To boost products with product ID
 *  "product_1" or "product_2", and color "Red" or "Blue": *(id:
 *  ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue"))
 *  *
 */
@property(nonatomic, copy, nullable) NSString *productsFilter;

@end


/**
 *  Prevents `query_term` from being associated with specified terms during
 *  search. Example: Don't associate "gShoe" and "cheap".
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RuleDoNotAssociateAction : GTLRObject

/**
 *  Cannot contain duplicates or the query term. Can specify up to 100 terms.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *doNotAssociateTerms;

/**
 *  Terms from the search query. Will not consider do_not_associate_terms for
 *  search if in search query. Can specify up to 100 terms.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *queryTerms;

/** Will be [deprecated = true] post migration; */
@property(nonatomic, strong, nullable) NSArray<NSString *> *terms;

@end


/**
 *  * Rule Condition: - No Condition.query_terms provided is a global match. - 1
 *  or more Condition.query_terms provided are combined with OR operator. *
 *  Action Input: The request query and filter that are applied to the retrieved
 *  products, in addition to any filters already provided with the
 *  SearchRequest. The AND operator is used to combine the query's existing
 *  filters with the filter rule(s). NOTE: May result in 0 results when filters
 *  conflict. * Action Result: Filters the returned objects to be ONLY those
 *  that passed the filter.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RuleFilterAction : GTLRObject

/**
 *  A filter to apply on the matching condition results. Supported features: *
 *  filter must be set. * Filter syntax is identical to SearchRequest.filter.
 *  See more details at the Retail Search [user
 *  guide](/retail/search/docs/filter-and-order#filter). * To filter products
 *  with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id:
 *  ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue"))
 *  *
 */
@property(nonatomic, copy, nullable) NSString *filter;

@end


/**
 *  Prevents a term in the query from being used in search. Example: Don't
 *  search for "shoddy".
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RuleIgnoreAction : GTLRObject

/** Terms to ignore in the search query. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ignoreTerms;

@end


/**
 *  Maps a set of terms to a set of synonyms. Set of synonyms will be treated as
 *  synonyms of each query term only. `query_terms` will not be treated as
 *  synonyms of each other. Example: "sneakers" will use a synonym of "shoes".
 *  "shoes" will not use a synonym of "sneakers".
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RuleOnewaySynonymsAction : GTLRObject

/** Will be [deprecated = true] post migration; */
@property(nonatomic, strong, nullable) NSArray<NSString *> *onewayTerms;

/**
 *  Terms from the search query. Will treat synonyms as their synonyms. Not
 *  themselves synonyms of the synonyms. Can specify up to 100 terms.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *queryTerms;

/**
 *  Defines a set of synonyms. Cannot contain duplicates. Can specify up to 100
 *  synonyms.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *synonyms;

@end


/**
 *  Redirects a shopper to a specific page. * Rule Condition: - Must specify
 *  Condition.query_terms. * Action Input: Request Query * Action Result:
 *  Redirects shopper to provided uri.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RuleRedirectAction : GTLRObject

/** URL must have length equal or less than 2000 characters. */
@property(nonatomic, copy, nullable) NSString *redirectUri;

@end


/**
 *  Replaces a term in the query. Multiple replacement candidates can be
 *  specified. All `query_terms` will be replaced with the replacement term.
 *  Example: Replace "gShoe" with "google shoe".
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RuleReplacementAction : GTLRObject

/**
 *  Terms from the search query. Will be replaced by replacement term. Can
 *  specify up to 100 terms.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *queryTerms;

/** Term that will be used for replacement. */
@property(nonatomic, copy, nullable) NSString *replacementTerm;

/** Will be [deprecated = true] post migration; */
@property(nonatomic, copy, nullable) NSString *term;

@end


/**
 *  Creates a set of terms that will be treated as synonyms of each other.
 *  Example: synonyms of "sneakers" and "shoes": * "sneakers" will use a synonym
 *  of "shoes". * "shoes" will use a synonym of "sneakers".
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2RuleTwowaySynonymsAction : GTLRObject

/**
 *  Defines a set of synonyms. Can specify up to 100 synonyms. Must specify at
 *  least 2 synonyms.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *synonyms;

@end


/**
 *  Request message for SearchService.Search method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchRequest : GTLRObject

/**
 *  Boost specification to boost certain products. See more details at this
 *  [user guide](https://cloud.google.com/retail/docs/boosting). Notice that if
 *  both ServingConfig.boost_control_ids and SearchRequest.boost_spec are set,
 *  the boost conditions from both places are evaluated. If a search request
 *  matches multiple boost conditions, the final boost score is equal to the sum
 *  of the boost scores from all matched boost conditions.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2SearchRequestBoostSpec *boostSpec;

/**
 *  The branch resource name, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/0`. Use "default_branch"
 *  as the branch ID or leave this field empty, to search products under the
 *  default branch.
 */
@property(nonatomic, copy, nullable) NSString *branch;

/**
 *  The default filter that is applied when a user performs a search without
 *  checking any filters on the search page. The filter applied to every search
 *  request when quality improvement such as query expansion is needed. For
 *  example, if a query does not have enough results, an expanded query with
 *  SearchRequest.canonical_filter will be returned as a supplement of the
 *  original query. This field is strongly recommended to achieve high search
 *  quality. See SearchRequest.filter for more details about filter syntax.
 */
@property(nonatomic, copy, nullable) NSString *canonicalFilter;

/**
 *  Deprecated. Refer to https://cloud.google.com/retail/docs/configs#dynamic to
 *  enable dynamic facets. Do not set this field. The specification for
 *  dynamically generated facets. Notice that only textual facets can be
 *  dynamically generated.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2SearchRequestDynamicFacetSpec *dynamicFacetSpec;

/**
 *  Facet specifications for faceted search. If empty, no facets are returned. A
 *  maximum of 100 values are allowed. Otherwise, an INVALID_ARGUMENT error is
 *  returned.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2SearchRequestFacetSpec *> *facetSpecs;

/**
 *  The filter syntax consists of an expression language for constructing a
 *  predicate from one or more fields of the products being filtered. Filter
 *  expression is case-sensitive. See more details at this [user
 *  guide](https://cloud.google.com/retail/docs/filter-and-order#filter). If
 *  this field is unrecognizable, an INVALID_ARGUMENT is returned.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The labels applied to a resource must meet the following requirements: *
 *  Each resource can have multiple labels, up to a maximum of 64. * Each label
 *  must be a key-value pair. * Keys have a minimum length of 1 character and a
 *  maximum length of 63 characters and cannot be empty. Values can be empty and
 *  have a maximum length of 63 characters. * Keys and values can contain only
 *  lowercase letters, numeric characters, underscores, and dashes. All
 *  characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2SearchRequest_Labels *labels;

/**
 *  A 0-indexed integer that specifies the current offset (that is, starting
 *  result location, amongst the Products deemed by the API as relevant) in
 *  search results. This field is only considered if page_token is unset. If
 *  this field is negative, an INVALID_ARGUMENT is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *offset;

/**
 *  The order in which products are returned. Products can be ordered by a field
 *  in an Product object. Leave it unset if ordered by relevance. OrderBy
 *  expression is case-sensitive. See more details at this [user
 *  guide](https://cloud.google.com/retail/docs/filter-and-order#order). If this
 *  field is unrecognizable, an INVALID_ARGUMENT is returned.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The categories associated with a category page. Required for category
 *  navigation queries to achieve good search quality. The format should be the
 *  same as UserEvent.page_categories; To represent full path of category, use
 *  '>' sign to separate different hierarchies. If '>' is part of the category
 *  name, replace it with other character(s). Category pages include special
 *  pages such as sales or promotions. For instance, a special sale page may
 *  have the category hierarchy: "pageCategories" : ["Sales > 2017 Black Friday
 *  Deals"].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *pageCategories;

/**
 *  Maximum number of Products to return. If unspecified, defaults to a
 *  reasonable value. The maximum allowed value is 120. Values above 120 will be
 *  coerced to 120. If this field is negative, an INVALID_ARGUMENT is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  A page token SearchResponse.next_page_token, received from a previous
 *  SearchService.Search call. Provide this to retrieve the subsequent page.
 *  When paginating, all other parameters provided to SearchService.Search must
 *  match the call that provided the page token. Otherwise, an INVALID_ARGUMENT
 *  error is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  The specification for personalization. Notice that if both
 *  ServingConfig.personalization_spec and SearchRequest.personalization_spec
 *  are set. SearchRequest.personalization_spec will override
 *  ServingConfig.personalization_spec.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2SearchRequestPersonalizationSpec *personalizationSpec;

/**
 *  Raw search query. If this field is empty, the request is considered a
 *  category browsing request and returned results are based on filter and
 *  page_categories.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  The query expansion specification that specifies the conditions under which
 *  query expansion will occur. See more details at this [user
 *  guide](https://cloud.google.com/retail/docs/result-size#query_expansion).
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2SearchRequestQueryExpansionSpec *queryExpansionSpec;

/**
 *  The search mode of the search request. If not specified, a single search
 *  request triggers both product search and faceted search.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2SearchRequest_SearchMode_FacetedSearchOnly
 *        Only faceted search will be performed. The product search will be
 *        disabled. When in this mode, one or both of SearchRequest.facet_specs
 *        and SearchRequest.dynamic_facet_spec should be set. Otherwise, an
 *        INVALID_ARGUMENT error is returned. Only SearchResponse.Facet will be
 *        returned. SearchResponse.SearchResult will not be returned. (Value:
 *        "FACETED_SEARCH_ONLY")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2SearchRequest_SearchMode_ProductSearchOnly
 *        Only product search will be performed. The faceted search will be
 *        disabled. Only SearchResponse.SearchResult will be returned.
 *        SearchResponse.Facet will not be returned, even if
 *        SearchRequest.facet_specs or SearchRequest.dynamic_facet_spec is set.
 *        (Value: "PRODUCT_SEARCH_ONLY")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2SearchRequest_SearchMode_SearchModeUnspecified
 *        Default value. In this case both product search and faceted search
 *        will be performed. Both SearchResponse.SearchResult and
 *        SearchResponse.Facet will be returned. (Value:
 *        "SEARCH_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *searchMode;

/**
 *  The spell correction specification that specifies the mode under which spell
 *  correction will take effect.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2SearchRequestSpellCorrectionSpec *spellCorrectionSpec;

/** User information. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2UserInfo *userInfo;

/**
 *  The keys to fetch and rollup the matching variant Products attributes,
 *  FulfillmentInfo or LocalInventorys attributes. The attributes from all the
 *  matching variant Products or LocalInventorys are merged and de-duplicated.
 *  Notice that rollup attributes will lead to extra query latency. Maximum
 *  number of keys is 30. For FulfillmentInfo, a fulfillment type and a
 *  fulfillment ID must be provided in the format of
 *  "fulfillmentType.fulfillmentId". E.g., in "pickupInStore.store123",
 *  "pickupInStore" is fulfillment type and "store123" is the store ID.
 *  Supported keys are: * colorFamilies * price * originalPrice * discount *
 *  variantId * inventory(place_id,price) * inventory(place_id,original_price) *
 *  inventory(place_id,attributes.key), where key is any key in the
 *  Product.local_inventories.attributes map. * attributes.key, where key is any
 *  key in the Product.attributes map. * pickupInStore.id, where id is any
 *  FulfillmentInfo.place_ids for FulfillmentInfo.type "pickup-in-store". *
 *  shipToStore.id, where id is any FulfillmentInfo.place_ids for
 *  FulfillmentInfo.type "ship-to-store". * sameDayDelivery.id, where id is any
 *  FulfillmentInfo.place_ids for FulfillmentInfo.type "same-day-delivery". *
 *  nextDayDelivery.id, where id is any FulfillmentInfo.place_ids for
 *  FulfillmentInfo.type "next-day-delivery". * customFulfillment1.id, where id
 *  is any FulfillmentInfo.place_ids for FulfillmentInfo.type "custom-type-1". *
 *  customFulfillment2.id, where id is any FulfillmentInfo.place_ids for
 *  FulfillmentInfo.type "custom-type-2". * customFulfillment3.id, where id is
 *  any FulfillmentInfo.place_ids for FulfillmentInfo.type "custom-type-3". *
 *  customFulfillment4.id, where id is any FulfillmentInfo.place_ids for
 *  FulfillmentInfo.type "custom-type-4". * customFulfillment5.id, where id is
 *  any FulfillmentInfo.place_ids for FulfillmentInfo.type "custom-type-5". If
 *  this field is set to an invalid value other than these, an INVALID_ARGUMENT
 *  error is returned.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *variantRollupKeys;

/**
 *  Required. A unique identifier for tracking visitors. For example, this could
 *  be implemented with an HTTP cookie, which should be able to uniquely
 *  identify a visitor on a single device. This unique identifier should not
 *  change if the visitor logs in or out of the website. This should be the same
 *  identifier as UserEvent.visitor_id. The field must be a UTF-8 encoded string
 *  with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error
 *  is returned.
 */
@property(nonatomic, copy, nullable) NSString *visitorId;

@end


/**
 *  The labels applied to a resource must meet the following requirements: *
 *  Each resource can have multiple labels, up to a maximum of 64. * Each label
 *  must be a key-value pair. * Keys have a minimum length of 1 character and a
 *  maximum length of 63 characters and cannot be empty. Values can be empty and
 *  have a maximum length of 63 characters. * Keys and values can contain only
 *  lowercase letters, numeric characters, underscores, and dashes. All
 *  characters must use UTF-8 encoding, and international characters are
 *  allowed. * The key portion of a label must be unique. However, you can use
 *  the same key with multiple resources. * Keys must start with a lowercase
 *  letter or international character. See [Google Cloud
 *  Document](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements)
 *  for more details.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchRequest_Labels : GTLRObject
@end


/**
 *  Boost specification to boost certain items.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchRequestBoostSpec : GTLRObject

/**
 *  Condition boost specifications. If a product matches multiple conditions in
 *  the specifictions, boost scores from these specifications are all applied
 *  and combined in a non-linear way. Maximum number of specifications is 20.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec *> *conditionBoostSpecs;

/**
 *  Whether to skip boostspec validation. If this field is set to true, invalid
 *  BoostSpec.condition_boost_specs will be ignored and valid
 *  BoostSpec.condition_boost_specs will still be applied.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *skipBoostSpecValidation;

@end


/**
 *  Boost applies to products which match a condition.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec : GTLRObject

/**
 *  Strength of the condition boost, which should be in [-1, 1]. Negative boost
 *  means demotion. Default is 0.0. Setting to 1.0 gives the item a big
 *  promotion. However, it does not necessarily mean that the boosted item will
 *  be the top result at all times, nor that other items will be excluded.
 *  Results could still be shown even when none of them matches the condition.
 *  And results that are significantly more relevant to the search query can
 *  still trump your heavily favored but irrelevant items. Setting to -1.0 gives
 *  the item a big demotion. However, results that are deeply relevant might
 *  still be shown. The item will have an upstream battle to get a fairly high
 *  ranking, but it is not blocked out completely. Setting to 0.0 means no boost
 *  applied. The boosting condition is ignored.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boost;

/**
 *  An expression which specifies a boost condition. The syntax and supported
 *  fields are the same as a filter expression. See SearchRequest.filter for
 *  detail syntax and limitations. Examples: * To boost products with product ID
 *  "product_1" or "product_2", and color "Red" or "Blue": * (id:
 *  ANY("product_1", "product_2")) AND (colorFamilies: ANY("Red","Blue"))
 */
@property(nonatomic, copy, nullable) NSString *condition;

@end


/**
 *  The specifications of dynamically generated facets.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchRequestDynamicFacetSpec : GTLRObject

/**
 *  Mode of the DynamicFacet feature. Defaults to Mode.DISABLED if it's unset.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestDynamicFacetSpec_Mode_Disabled
 *        Disable Dynamic Facet. (Value: "DISABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestDynamicFacetSpec_Mode_Enabled
 *        Automatic mode built by Google Retail Search. (Value: "ENABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestDynamicFacetSpec_Mode_ModeUnspecified
 *        Default value. (Value: "MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *mode;

@end


/**
 *  A facet specification to perform faceted search.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchRequestFacetSpec : GTLRObject

/**
 *  Enables dynamic position for this facet. If set to true, the position of
 *  this facet among all facets in the response is determined by Google Retail
 *  Search. It will be ordered together with dynamic facets if dynamic facets is
 *  enabled. If set to false, the position of this facet in the response will be
 *  the same as in the request, and it will be ranked before the facets with
 *  dynamic position enable and all dynamic facets. For example, you may always
 *  want to have rating facet returned in the response, but it's not necessarily
 *  to always display the rating facet at the top. In that case, you can set
 *  enable_dynamic_position to true so that the position of rating facet in
 *  response will be determined by Google Retail Search. Another example,
 *  assuming you have the following facets in the request: * "rating",
 *  enable_dynamic_position = true * "price", enable_dynamic_position = false *
 *  "brands", enable_dynamic_position = false And also you have a dynamic facets
 *  enable, which will generate a facet 'gender'. Then the final order of the
 *  facets in the response can be ("price", "brands", "rating", "gender") or
 *  ("price", "brands", "gender", "rating") depends on how Google Retail Search
 *  orders "gender" and "rating" facets. However, notice that "price" and
 *  "brands" will always be ranked at 1st and 2nd position since their
 *  enable_dynamic_position are false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableDynamicPosition;

/**
 *  List of keys to exclude when faceting. By default, FacetKey.key is not
 *  excluded from the filter unless it is listed in this field. Listing a facet
 *  key in this field allows its values to appear as facet results, even when
 *  they are filtered out of search results. Using this field does not affect
 *  what search results are returned. For example, suppose there are 100
 *  products with the color facet "Red" and 200 products with the color facet
 *  "Blue". A query containing the filter "colorFamilies:ANY("Red")" and having
 *  "colorFamilies" as FacetKey.key would by default return only "Red" products
 *  in the search results, and also return "Red" with count 100 as the only
 *  color facet. Although there are also blue products available, "Blue" would
 *  not be shown as an available facet value. If "colorFamilies" is listed in
 *  "excludedFilterKeys", then the query returns the facet values "Red" with
 *  count 100 and "Blue" with count 200, because the "colorFamilies" key is now
 *  excluded from the filter. Because this field doesn't affect search results,
 *  the search results are still correctly filtered to return only "Red"
 *  products. A maximum of 100 values are allowed. Otherwise, an
 *  INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *excludedFilterKeys;

/** Required. The facet key specification. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2SearchRequestFacetSpecFacetKey *facetKey;

/**
 *  Maximum of facet values that should be returned for this facet. If
 *  unspecified, defaults to 50. The maximum allowed value is 300. Values above
 *  300 will be coerced to 300. If this field is negative, an INVALID_ARGUMENT
 *  is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *limit;

@end


/**
 *  Specifies how a facet is computed.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchRequestFacetSpecFacetKey : GTLRObject

/**
 *  True to make facet keys case insensitive when getting faceting values with
 *  prefixes or contains; false otherwise.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *caseInsensitive;

/**
 *  Only get facet values that contains the given strings. For example, suppose
 *  "categories" has three values "Women > Shoe", "Women > Dress" and "Men >
 *  Shoe". If set "contains" to "Shoe", the "categories" facet will give only
 *  "Women > Shoe" and "Men > Shoe". Only supported on textual fields. Maximum
 *  is 10.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *contains;

/**
 *  Set only if values should be bucketized into intervals. Must be set for
 *  facets with numerical values. Must not be set for facet with text values.
 *  Maximum number of intervals is 30.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2Interval *> *intervals;

/**
 *  Required. Supported textual and numerical facet keys in Product object, over
 *  which the facet values are computed. Facet key is case-sensitive. Allowed
 *  facet keys when FacetKey.query is not specified: * textual_field = *
 *  "brands" * "categories" * "genders" * "ageGroups" * "availability" *
 *  "colorFamilies" * "colors" * "sizes" * "materials" * "patterns" *
 *  "conditions" * "attributes.key" * "pickupInStore" * "shipToStore" *
 *  "sameDayDelivery" * "nextDayDelivery" * "customFulfillment1" *
 *  "customFulfillment2" * "customFulfillment3" * "customFulfillment4" *
 *  "customFulfillment5" * "inventory(place_id,attributes.key)" *
 *  numerical_field = * "price" * "discount" * "rating" * "ratingCount" *
 *  "attributes.key" * "inventory(place_id,price)" *
 *  "inventory(place_id,original_price)" * "inventory(place_id,attributes.key)"
 */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  The order in which SearchResponse.Facet.values are returned. Allowed values
 *  are: * "count desc", which means order by SearchResponse.Facet.values.count
 *  descending. * "value desc", which means order by
 *  SearchResponse.Facet.values.value descending. Only applies to textual
 *  facets. If not set, textual values are sorted in [natural
 *  order](https://en.wikipedia.org/wiki/Natural_sort_order); numerical
 *  intervals are sorted in the order given by FacetSpec.FacetKey.intervals;
 *  FulfillmentInfo.place_ids are sorted in the order given by
 *  FacetSpec.FacetKey.restricted_values.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Only get facet values that start with the given string prefix. For example,
 *  suppose "categories" has three values "Women > Shoe", "Women > Dress" and
 *  "Men > Shoe". If set "prefixes" to "Women", the "categories" facet will give
 *  only "Women > Shoe" and "Women > Dress". Only supported on textual fields.
 *  Maximum is 10.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *prefixes;

/**
 *  The query that is used to compute facet for the given facet key. When
 *  provided, it will override the default behavior of facet computation. The
 *  query syntax is the same as a filter expression. See SearchRequest.filter
 *  for detail syntax and limitations. Notice that there is no limitation on
 *  FacetKey.key when query is specified. In the response,
 *  SearchResponse.Facet.values.value will be always "1" and
 *  SearchResponse.Facet.values.count will be the number of results that match
 *  the query. For example, you can set a customized facet for "shipToStore",
 *  where FacetKey.key is "customizedShipToStore", and FacetKey.query is
 *  "availability: ANY(\\"IN_STOCK\\") AND shipToStore: ANY(\\"123\\")". Then
 *  the facet will count the products that are both in stock and ship to store
 *  "123".
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Only get facet for the given restricted values. For example, when using
 *  "pickupInStore" as key and set restricted values to ["store123",
 *  "store456"], only facets for "store123" and "store456" are returned. Only
 *  supported on predefined textual fields, custom textual attributes and
 *  fulfillments. Maximum is 20. Must be set for the fulfillment facet keys: *
 *  pickupInStore * shipToStore * sameDayDelivery * nextDayDelivery *
 *  customFulfillment1 * customFulfillment2 * customFulfillment3 *
 *  customFulfillment4 * customFulfillment5
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *restrictedValues;

/**
 *  Returns the min and max value for each numerical facet intervals. Ignored
 *  for textual facets.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnMinMax;

@end


/**
 *  The specification for personalization.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchRequestPersonalizationSpec : GTLRObject

/**
 *  Defaults to Mode.AUTO.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestPersonalizationSpec_Mode_Auto
 *        Let CRS decide whether to use personalization based on quality of user
 *        event data. (Value: "AUTO")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestPersonalizationSpec_Mode_Disabled
 *        Disable personalization. (Value: "DISABLED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestPersonalizationSpec_Mode_ModeUnspecified
 *        Default value. In this case, server behavior defaults to Mode.AUTO.
 *        (Value: "MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *mode;

@end


/**
 *  Specification to determine under which conditions query expansion should
 *  occur.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchRequestQueryExpansionSpec : GTLRObject

/**
 *  The condition under which query expansion should occur. Default to
 *  Condition.DISABLED.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestQueryExpansionSpec_Condition_Auto
 *        Automatic query expansion built by Google Retail Search. (Value:
 *        "AUTO")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestQueryExpansionSpec_Condition_ConditionUnspecified
 *        Unspecified query expansion condition. In this case, server behavior
 *        defaults to Condition.DISABLED. (Value: "CONDITION_UNSPECIFIED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestQueryExpansionSpec_Condition_Disabled
 *        Disabled query expansion. Only the exact search query is used, even if
 *        SearchResponse.total_size is zero. (Value: "DISABLED")
 */
@property(nonatomic, copy, nullable) NSString *condition;

/**
 *  Whether to pin unexpanded results. If this field is set to true, unexpanded
 *  products are always at the top of the search results, followed by the
 *  expanded results.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pinUnexpandedResults;

@end


/**
 *  The specification for query spell correction.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchRequestSpellCorrectionSpec : GTLRObject

/**
 *  The mode under which spell correction should take effect to replace the
 *  original search query. Default to Mode.AUTO.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestSpellCorrectionSpec_Mode_Auto
 *        Automatic spell correction built by Google Retail Search. Search will
 *        be based on the corrected query if found. (Value: "AUTO")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestSpellCorrectionSpec_Mode_ModeUnspecified
 *        Unspecified spell correction mode. In this case, server behavior
 *        defaults to Mode.AUTO. (Value: "MODE_UNSPECIFIED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2SearchRequestSpellCorrectionSpec_Mode_SuggestionOnly
 *        Google Retail Search will try to find a spell suggestion if there is
 *        any and put in the SearchResponse.corrected_query. The spell
 *        suggestion will not be used as the search query. (Value:
 *        "SUGGESTION_ONLY")
 */
@property(nonatomic, copy, nullable) NSString *mode;

@end


/**
 *  Response message for SearchService.Search method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchResponse : GTLRObject

/**
 *  The fully qualified resource name of applied
 *  [controls](https://cloud.google.com/retail/docs/serving-control-rules).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *appliedControls;

/**
 *  A unique search token. This should be included in the UserEvent logs
 *  resulting from this search, which enables accurate attribution of search
 *  model performance.
 */
@property(nonatomic, copy, nullable) NSString *attributionToken;

/**
 *  Contains the spell corrected query, if found. If the spell correction type
 *  is AUTOMATIC, then the search results are based on corrected_query.
 *  Otherwise the original query is used for search.
 */
@property(nonatomic, copy, nullable) NSString *correctedQuery;

/** Results of facets requested by user. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2SearchResponseFacet *> *facets;

/**
 *  The invalid SearchRequest.BoostSpec.condition_boost_specs that are not
 *  applied during serving.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2SearchRequestBoostSpecConditionBoostSpec *> *invalidConditionBoostSpecs;

/**
 *  A token that can be sent as SearchRequest.page_token to retrieve the next
 *  page. If this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Query expansion information for the returned results. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2SearchResponseQueryExpansionInfo *queryExpansionInfo;

/**
 *  The URI of a customer-defined redirect page. If redirect action is
 *  triggered, no search is performed, and only redirect_uri and
 *  attribution_token are set in the response.
 */
@property(nonatomic, copy, nullable) NSString *redirectUri;

/** A list of matched items. The order represents the ranking. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2SearchResponseSearchResult *> *results;

/**
 *  The estimated total count of matched items irrespective of pagination. The
 *  count of results returned by pagination may be less than the total_size that
 *  matches.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalSize;

@end


/**
 *  A facet result.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchResponseFacet : GTLRObject

/**
 *  Whether the facet is dynamically generated.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dynamicFacet;

/**
 *  The key for this facet. E.g., "colorFamilies" or "price" or
 *  "attributes.attr1".
 */
@property(nonatomic, copy, nullable) NSString *key;

/** The facet values for this field. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2SearchResponseFacetFacetValue *> *values;

@end


/**
 *  A facet value which contains value names and their count.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchResponseFacetFacetValue : GTLRObject

/**
 *  Number of items that have this facet value.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/** Interval value for a facet, such as [10, 20) for facet "price". */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2Interval *interval;

/**
 *  The maximum value in the FacetValue.interval. Only supported on numerical
 *  facets and returned if SearchRequest.FacetSpec.FacetKey.return_min_max is
 *  true.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxValue;

/**
 *  The minimum value in the FacetValue.interval. Only supported on numerical
 *  facets and returned if SearchRequest.FacetSpec.FacetKey.return_min_max is
 *  true.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minValue;

/** Text value of a facet, such as "Black" for facet "colorFamilies". */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Information describing query expansion including whether expansion has
 *  occurred.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchResponseQueryExpansionInfo : GTLRObject

/**
 *  Bool describing whether query expansion has occurred.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *expandedQuery;

/**
 *  Number of pinned results. This field will only be set when expansion happens
 *  and SearchRequest.QueryExpansionSpec.pin_unexpanded_results is set to true.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pinnedResultCount;

@end


/**
 *  Represents the search results.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchResponseSearchResult : GTLRObject

/**
 *  Product.id of the searched Product.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The count of matched variant Products.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *matchingVariantCount;

/**
 *  If a variant Product matches the search query, this map indicates which
 *  Product fields are matched. The key is the Product.name, the value is a
 *  field mask of the matched Product fields. If matched attributes cannot be
 *  determined, this map will be empty. For example, a key "sku1" with field
 *  mask "products.color_info" indicates there is a match between "sku1"
 *  ColorInfo and the query.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2SearchResponseSearchResult_MatchingVariantFields *matchingVariantFields;

/**
 *  Specifies previous events related to this product for this user based on
 *  UserEvent with same SearchRequest.visitor_id or UserInfo.user_id. This is
 *  set only when SearchRequest.PersonalizationSpec.mode is
 *  SearchRequest.PersonalizationSpec.Mode.AUTO. Possible values: * `purchased`:
 *  Indicates that this product has been purchased before.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *personalLabels;

/**
 *  The product data snippet in the search response. Only Product.name is
 *  guaranteed to be populated. Product.variants contains the product variants
 *  that match the search query. If there are multiple product variants matching
 *  the query, top 5 most relevant product variants are returned and ordered by
 *  relevancy. If relevancy can be deternmined, use matching_variant_fields to
 *  look up matched product variants fields. If relevancy cannot be determined,
 *  e.g. when searching "shoe" all products in a shoe product can be a match, 5
 *  product variants are returned but order is meaningless.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2Product *product;

/**
 *  The rollup matching variant Product attributes. The key is one of the
 *  SearchRequest.variant_rollup_keys. The values are the merged and
 *  de-duplicated Product attributes. Notice that the rollup values are respect
 *  filter. For example, when filtering by "colorFamilies:ANY(\\"red\\")" and
 *  rollup "colorFamilies", only "red" is returned. For textual and numerical
 *  attributes, the rollup values is a list of string or double values with type
 *  google.protobuf.ListValue. For example, if there are two variants with
 *  colors "red" and "blue", the rollup values are { key: "colorFamilies" value
 *  { list_value { values { string_value: "red" } values { string_value: "blue"
 *  } } } } For FulfillmentInfo, the rollup values is a double value with type
 *  google.protobuf.Value. For example, `{key: "pickupInStore.store1" value {
 *  number_value: 10 }}` means a there are 10 variants in this product are
 *  available in the store "store1".
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2SearchResponseSearchResult_VariantRollupValues *variantRollupValues;

@end


/**
 *  If a variant Product matches the search query, this map indicates which
 *  Product fields are matched. The key is the Product.name, the value is a
 *  field mask of the matched Product fields. If matched attributes cannot be
 *  determined, this map will be empty. For example, a key "sku1" with field
 *  mask "products.color_info" indicates there is a match between "sku1"
 *  ColorInfo and the query.
 *
 *  @note This class is documented as having more properties of NSString (String
 *        format is a comma-separated list of fields.). Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchResponseSearchResult_MatchingVariantFields : GTLRObject
@end


/**
 *  The rollup matching variant Product attributes. The key is one of the
 *  SearchRequest.variant_rollup_keys. The values are the merged and
 *  de-duplicated Product attributes. Notice that the rollup values are respect
 *  filter. For example, when filtering by "colorFamilies:ANY(\\"red\\")" and
 *  rollup "colorFamilies", only "red" is returned. For textual and numerical
 *  attributes, the rollup values is a list of string or double values with type
 *  google.protobuf.ListValue. For example, if there are two variants with
 *  colors "red" and "blue", the rollup values are { key: "colorFamilies" value
 *  { list_value { values { string_value: "red" } values { string_value: "blue"
 *  } } } } For FulfillmentInfo, the rollup values is a double value with type
 *  google.protobuf.Value. For example, `{key: "pickupInStore.store1" value {
 *  number_value: 10 }}` means a there are 10 variants in this product are
 *  available in the store "store1".
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SearchResponseSearchResult_VariantRollupValues : GTLRObject
@end


/**
 *  Configures metadata that is used to generate serving time results (e.g.
 *  search results or recommendation predictions).
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2ServingConfig : GTLRObject

/**
 *  Condition boost specifications. If a product matches multiple conditions in
 *  the specifications, boost scores from these specifications are all applied
 *  and combined in a non-linear way. Maximum number of specifications is 100.
 *  Notice that if both ServingConfig.boost_control_ids and
 *  SearchRequest.boost_spec are set, the boost conditions from both places are
 *  evaluated. If a search request matches multiple boost conditions, the final
 *  boost score is equal to the sum of the boost scores from all matched boost
 *  conditions. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *boostControlIds;

/**
 *  Required. The human readable serving config display name. Used in Retail UI.
 *  This field must be a UTF-8 encoded string with a length limit of 128
 *  characters. Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  How much diversity to use in recommendation model results e.g.
 *  `medium-diversity` or `high-diversity`. Currently supported values: *
 *  `no-diversity` * `low-diversity` * `medium-diversity` * `high-diversity` *
 *  `auto-diversity` If not specified, we choose default based on recommendation
 *  model type. Default value: `no-diversity`. Can only be set if solution_types
 *  is SOLUTION_TYPE_RECOMMENDATION.
 */
@property(nonatomic, copy, nullable) NSString *diversityLevel;

/**
 *  What kind of diversity to use - data driven or rule based.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2ServingConfig_DiversityType_DataDrivenDiversity
 *        Data driven diversity. (Value: "DATA_DRIVEN_DIVERSITY")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2ServingConfig_DiversityType_DiversityTypeUnspecified
 *        Default value. (Value: "DIVERSITY_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudRetail_GoogleCloudRetailV2ServingConfig_DiversityType_RuleBasedDiversity
 *        Rule based diversity. (Value: "RULE_BASED_DIVERSITY")
 */
@property(nonatomic, copy, nullable) NSString *diversityType;

/**
 *  Condition do not associate specifications. If multiple do not associate
 *  conditions match, all matching do not associate controls in the list will
 *  execute. - Order does not matter. - Maximum number of specifications is 100.
 *  Can only be set if solution_types is SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *doNotAssociateControlIds;

/**
 *  The specification for dynamically generated facets. Notice that only textual
 *  facets can be dynamically generated. Can only be set if solution_types is
 *  SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2SearchRequestDynamicFacetSpec *dynamicFacetSpec;

/**
 *  Whether to add additional category filters on the `similar-items` model. If
 *  not specified, we enable it by default. Allowed values are: *
 *  `no-category-match`: No additional filtering of original results from the
 *  model and the customer's filters. * `relaxed-category-match`: Only keep
 *  results with categories that match at least one item categories in the
 *  PredictRequests's context item. * If customer also sends filters in the
 *  PredictRequest, then the results will satisfy both conditions (user given
 *  and category match). Can only be set if solution_types is
 *  SOLUTION_TYPE_RECOMMENDATION.
 */
@property(nonatomic, copy, nullable) NSString *enableCategoryFilterLevel;

/**
 *  Facet specifications for faceted search. If empty, no facets are returned.
 *  The ids refer to the ids of Control resources with only the Facet control
 *  set. These controls are assumed to be in the same Catalog as the
 *  ServingConfig. A maximum of 100 values are allowed. Otherwise, an
 *  INVALID_ARGUMENT error is returned. Can only be set if solution_types is
 *  SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *facetControlIds;

/**
 *  Condition filter specifications. If a product matches multiple conditions in
 *  the specifications, filters from these specifications are all applied and
 *  combined via the AND operator. Maximum number of specifications is 100. Can
 *  only be set if solution_types is SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *filterControlIds;

/**
 *  Condition ignore specifications. If multiple ignore conditions match, all
 *  matching ignore controls in the list will execute. - Order does not matter.
 *  - Maximum number of specifications is 100. Can only be set if solution_types
 *  is SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ignoreControlIds;

/**
 *  The id of the model in the same Catalog to use at serving time. Currently
 *  only RecommendationModels are supported:
 *  https://cloud.google.com/retail/recommendations-ai/docs/create-models Can be
 *  changed but only to a compatible model (e.g. others-you-may-like CTR to
 *  others-you-may-like CVR). Required when solution_types is
 *  SOLUTION_TYPE_RECOMMENDATION.
 */
@property(nonatomic, copy, nullable) NSString *modelId;

/**
 *  Immutable. Fully qualified name `projects/ * /locations/global/catalogs/ *
 *  /servingConfig/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Condition oneway synonyms specifications. If multiple oneway synonyms
 *  conditions match, all matching oneway synonyms controls in the list will
 *  execute. Order of controls in the list will not matter. Maximum number of
 *  specifications is 100. Can only be set if solution_types is
 *  SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *onewaySynonymsControlIds;

/**
 *  The specification for personalization spec. Can only be set if
 *  solution_types is SOLUTION_TYPE_SEARCH. Notice that if both
 *  ServingConfig.personalization_spec and SearchRequest.personalization_spec
 *  are set. SearchRequest.personalization_spec will override
 *  ServingConfig.personalization_spec.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2SearchRequestPersonalizationSpec *personalizationSpec;

/**
 *  How much price ranking we want in serving results. Price reranking causes
 *  product items with a similar recommendation probability to be ordered by
 *  price, with the highest-priced items first. This setting could result in a
 *  decrease in click-through and conversion rates. Allowed values are: *
 *  `no-price-reranking` * `low-price-raranking` * `medium-price-reranking` *
 *  `high-price-reranking` If not specified, we choose default based on model
 *  type. Default value: `no-price-reranking`. Can only be set if solution_types
 *  is SOLUTION_TYPE_RECOMMENDATION.
 */
@property(nonatomic, copy, nullable) NSString *priceRerankingLevel;

/**
 *  Condition redirect specifications. Only the first triggered redirect action
 *  is applied, even if multiple apply. Maximum number of specifications is
 *  1000. Can only be set if solution_types is SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *redirectControlIds;

/**
 *  Condition replacement specifications. - Applied according to the order in
 *  the list. - A previously replaced term can not be re-replaced. - Maximum
 *  number of specifications is 100. Can only be set if solution_types is
 *  SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *replacementControlIds;

/**
 *  Required. Immutable. Specifies the solution types that a serving config can
 *  be associated with. Currently we support setting only one type of solution.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *solutionTypes;

/**
 *  Condition synonyms specifications. If multiple syonyms conditions match, all
 *  matching synonyms control in the list will execute. Order of controls in the
 *  list will not matter. Maximum number of specifications is 100. Can only be
 *  set if solution_types is SOLUTION_TYPE_SEARCH.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *twowaySynonymsControlIds;

@end


/**
 *  Request message to set a specified branch as new default_branch.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SetDefaultBranchRequest : GTLRObject

/**
 *  The final component of the resource name of a branch. This field must be one
 *  of "0", "1" or "2". Otherwise, an INVALID_ARGUMENT error is returned. If
 *  there are no sufficient active products in the targeted branch and force is
 *  not set, a FAILED_PRECONDITION error is returned.
 */
@property(nonatomic, copy, nullable) NSString *branchId;

/**
 *  If set to true, it permits switching to a branch with branch_id even if it
 *  has no sufficient active products.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *force;

/**
 *  Some note on this request, this can be retrieved by
 *  CatalogService.GetDefaultBranch before next valid default branch set occurs.
 *  This field must be a UTF-8 encoded string with a length limit of 1,000
 *  characters. Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *note;

@end


/**
 *  Metadata related to the progress of the SetInventory operation. Currently
 *  empty because there is no meaningful metadata populated from the
 *  ProductService.SetInventory method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SetInventoryMetadata : GTLRObject
@end


/**
 *  Request message for ProductService.SetInventory method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SetInventoryRequest : GTLRObject

/**
 *  If set to true, and the Product with name Product.name is not found, the
 *  inventory update will still be processed and retained for at most 1 day
 *  until the Product is created. If set to false, a NOT_FOUND error is returned
 *  if the Product is not found.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowMissing;

/**
 *  Required. The inventory information to update. The allowable fields to
 *  update are: * Product.price_info * Product.availability *
 *  Product.available_quantity * Product.fulfillment_info The updated inventory
 *  fields must be specified in SetInventoryRequest.set_mask. If
 *  SetInventoryRequest.inventory.name is empty or invalid, an INVALID_ARGUMENT
 *  error is returned. If the caller does not have permission to update the
 *  Product named in Product.name, regardless of whether or not it exists, a
 *  PERMISSION_DENIED error is returned. If the Product to update does not have
 *  existing inventory information, the provided inventory information will be
 *  inserted. If the Product to update has existing inventory information, the
 *  provided inventory information will be merged while respecting the last
 *  update time for each inventory field, using the provided or default value
 *  for SetInventoryRequest.set_time. The caller can replace place IDs for a
 *  subset of fulfillment types in the following ways: * Adds "fulfillment_info"
 *  in SetInventoryRequest.set_mask * Specifies only the desired fulfillment
 *  types and corresponding place IDs to update in
 *  SetInventoryRequest.inventory.fulfillment_info The caller can clear all
 *  place IDs from a subset of fulfillment types in the following ways: * Adds
 *  "fulfillment_info" in SetInventoryRequest.set_mask * Specifies only the
 *  desired fulfillment types to clear in
 *  SetInventoryRequest.inventory.fulfillment_info * Checks that only the
 *  desired fulfillment info types have empty
 *  SetInventoryRequest.inventory.fulfillment_info.place_ids The last update
 *  time is recorded for the following inventory fields: * Product.price_info *
 *  Product.availability * Product.available_quantity * Product.fulfillment_info
 *  If a full overwrite of inventory information while ignoring timestamps is
 *  needed, ProductService.UpdateProduct should be invoked instead.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2Product *inventory;

/**
 *  Indicates which inventory fields in the provided Product to update. At least
 *  one field must be provided. If an unsupported or unknown field is provided,
 *  an INVALID_ARGUMENT error is returned and the entire update will be ignored.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *setMask;

/**
 *  The time when the request is issued, used to prevent out-of-order updates on
 *  inventory fields with the last update time recorded. If not provided, the
 *  internal system time will be used.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *setTime;

@end


/**
 *  Response of the SetInventoryRequest. Currently empty because there is no
 *  meaningful response populated from the ProductService.SetInventory method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2SetInventoryResponse : GTLRObject
@end


/**
 *  UserEvent captures all metadata information Retail API needs to know about
 *  how end users interact with customers' website.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2UserEvent : GTLRObject

/**
 *  Extra user event features to include in the recommendation model. If you
 *  provide custom attributes for ingested user events, also include them in the
 *  user events that you associate with prediction requests. Custom attribute
 *  formatting must be consistent between imported events and events provided
 *  with prediction requests. This lets the Retail API use those custom
 *  attributes when training models and serving predictions, which helps improve
 *  recommendation quality. This field needs to pass all below criteria,
 *  otherwise an INVALID_ARGUMENT error is returned: * The key must be a UTF-8
 *  encoded string with a length limit of 5,000 characters. * For text
 *  attributes, at most 400 values are allowed. Empty values are not allowed.
 *  Each value must be a UTF-8 encoded string with a length limit of 256
 *  characters. * For number attributes, at most 400 values are allowed. For
 *  product recommendations, an example of extra user information is
 *  traffic_channel, which is how a user arrives at the site. Users can arrive
 *  at the site by coming to the site directly, coming through Google search, or
 *  in other ways.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2UserEvent_Attributes *attributes;

/**
 *  Highly recommended for user events that are the result of
 *  PredictionService.Predict. This field enables accurate attribution of
 *  recommendation model performance. The value must be a valid
 *  PredictResponse.attribution_token for user events that are the result of
 *  PredictionService.Predict. The value must be a valid
 *  SearchResponse.attribution_token for user events that are the result of
 *  SearchService.Search. This token enables us to accurately attribute page
 *  view or purchase back to the event and the particular predict response
 *  containing this clicked/purchased product. If user clicks on product K in
 *  the recommendation results, pass PredictResponse.attribution_token as a URL
 *  parameter to product K's page. When recording events on product K's page,
 *  log the PredictResponse.attribution_token to this field.
 */
@property(nonatomic, copy, nullable) NSString *attributionToken;

/**
 *  The ID or name of the associated shopping cart. This ID is used to associate
 *  multiple items added or present in the cart before purchase. This can only
 *  be set for `add-to-cart`, `purchase-complete`, or `shopping-cart-page-view`
 *  events.
 */
@property(nonatomic, copy, nullable) NSString *cartId;

/**
 *  The main auto-completion details related to the event. This field should be
 *  set for `search` event when autocomplete function is enabled and the user
 *  clicks a suggestion for search.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2CompletionDetail *completionDetail;

/**
 *  Only required for UserEventService.ImportUserEvents method. Timestamp of
 *  when the user event happened.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *eventTime;

/**
 *  Required. User event type. Allowed values are: * `add-to-cart`: Products
 *  being added to cart. * `category-page-view`: Special pages such as sale or
 *  promotion pages viewed. * `detail-page-view`: Products detail page viewed. *
 *  `home-page-view`: Homepage viewed. * `promotion-offered`: Promotion is
 *  offered to a user. * `promotion-not-offered`: Promotion is not offered to a
 *  user. * `purchase-complete`: User finishing a purchase. * `search`: Product
 *  search. * `shopping-cart-page-view`: User viewing a shopping cart.
 */
@property(nonatomic, copy, nullable) NSString *eventType;

/**
 *  A list of identifiers for the independent experiment groups this user event
 *  belongs to. This is used to distinguish between user events associated with
 *  different experiment setups (e.g. using Retail API, using different
 *  recommendation models).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *experimentIds;

/**
 *  The filter syntax consists of an expression language for constructing a
 *  predicate from one or more fields of the products being filtered. See
 *  SearchRequest.filter for definition and syntax. The value must be a UTF-8
 *  encoded string with a length limit of 1,000 characters. Otherwise, an
 *  INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  An integer that specifies the current offset for pagination (the 0-indexed
 *  starting location, amongst the products deemed by the API as relevant). See
 *  SearchRequest.offset for definition. If this field is negative, an
 *  INVALID_ARGUMENT is returned. This can only be set for `search` events.
 *  Other event types should not set this field. Otherwise, an INVALID_ARGUMENT
 *  error is returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *offset;

/**
 *  The order in which products are returned. See SearchRequest.order_by for
 *  definition and syntax. The value must be a UTF-8 encoded string with a
 *  length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT error is
 *  returned. This can only be set for `search` events. Other event types should
 *  not set this field. Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The categories associated with a category page. To represent full path of
 *  category, use '>' sign to separate different hierarchies. If '>' is part of
 *  the category name, replace it with other character(s). Category pages
 *  include special pages such as sales or promotions. For instance, a special
 *  sale page may have the category hierarchy: "pageCategories" : ["Sales > 2017
 *  Black Friday Deals"]. Required for `category-page-view` events. At least one
 *  of search_query or page_categories is required for `search` events. Other
 *  event types should not set this field. Otherwise, an INVALID_ARGUMENT error
 *  is returned.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *pageCategories;

/**
 *  A unique ID of a web page view. This should be kept the same for all user
 *  events triggered from the same pageview. For example, an item detail page
 *  view could trigger multiple events as the user is browsing the page. The
 *  `pageViewId` property should be kept the same for all these events so that
 *  they can be grouped together properly. When using the client side event
 *  reporting with JavaScript pixel and Google Tag Manager, this value is filled
 *  in automatically.
 */
@property(nonatomic, copy, nullable) NSString *pageViewId;

/**
 *  The main product details related to the event. This field is optional except
 *  for the following event types: * `add-to-cart` * `detail-page-view` *
 *  `purchase-complete` In a `search` event, this field represents the products
 *  returned to the end user on the current page (the end user may have not
 *  finished browsing the whole page yet). When a new page is returned to the
 *  end user, after pagination/filtering/ordering even for the same query, a new
 *  `search` event with different product_details is desired. The end user may
 *  have not finished browsing the whole page yet.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2ProductDetail *> *productDetails;

/**
 *  A transaction represents the entire purchase transaction. Required for
 *  `purchase-complete` events. Other event types should not set this field.
 *  Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2PurchaseTransaction *purchaseTransaction;

/**
 *  The referrer URL of the current page. When using the client side event
 *  reporting with JavaScript pixel and Google Tag Manager, this value is filled
 *  in automatically.
 */
@property(nonatomic, copy, nullable) NSString *referrerUri;

/**
 *  The user's search query. See SearchRequest.query for definition. The value
 *  must be a UTF-8 encoded string with a length limit of 5,000 characters.
 *  Otherwise, an INVALID_ARGUMENT error is returned. At least one of
 *  search_query or page_categories is required for `search` events. Other event
 *  types should not set this field. Otherwise, an INVALID_ARGUMENT error is
 *  returned.
 */
@property(nonatomic, copy, nullable) NSString *searchQuery;

/**
 *  A unique identifier for tracking a visitor session with a length limit of
 *  128 bytes. A session is an aggregation of an end user behavior in a time
 *  span. A general guideline to populate the sesion_id: 1. If user has no
 *  activity for 30 min, a new session_id should be assigned. 2. The session_id
 *  should be unique across users, suggest use uuid or add visitor_id as prefix.
 */
@property(nonatomic, copy, nullable) NSString *sessionId;

/**
 *  Complete URL (window.location.href) of the user's current page. When using
 *  the client side event reporting with JavaScript pixel and Google Tag
 *  Manager, this value is filled in automatically. Maximum length 5,000
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *uri;

/** User information. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2UserInfo *userInfo;

/**
 *  Required. A unique identifier for tracking visitors. For example, this could
 *  be implemented with an HTTP cookie, which should be able to uniquely
 *  identify a visitor on a single device. This unique identifier should not
 *  change if the visitor log in/out of the website. Don't set the field to the
 *  same fixed ID for different users. This mixes the event history of those
 *  users together, which results in degraded model quality. The field must be a
 *  UTF-8 encoded string with a length limit of 128 characters. Otherwise, an
 *  INVALID_ARGUMENT error is returned. The field should not contain PII or
 *  user-data. We recommend to use Google Analytics [Client
 *  ID](https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#clientId)
 *  for this field.
 */
@property(nonatomic, copy, nullable) NSString *visitorId;

@end


/**
 *  Extra user event features to include in the recommendation model. If you
 *  provide custom attributes for ingested user events, also include them in the
 *  user events that you associate with prediction requests. Custom attribute
 *  formatting must be consistent between imported events and events provided
 *  with prediction requests. This lets the Retail API use those custom
 *  attributes when training models and serving predictions, which helps improve
 *  recommendation quality. This field needs to pass all below criteria,
 *  otherwise an INVALID_ARGUMENT error is returned: * The key must be a UTF-8
 *  encoded string with a length limit of 5,000 characters. * For text
 *  attributes, at most 400 values are allowed. Empty values are not allowed.
 *  Each value must be a UTF-8 encoded string with a length limit of 256
 *  characters. * For number attributes, at most 400 values are allowed. For
 *  product recommendations, an example of extra user information is
 *  traffic_channel, which is how a user arrives at the site. Users can arrive
 *  at the site by coming to the site directly, coming through Google search, or
 *  in other ways.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCloudRetail_GoogleCloudRetailV2CustomAttribute. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2UserEvent_Attributes : GTLRObject
@end


/**
 *  A summary of import result. The UserEventImportSummary summarizes the import
 *  status for user events.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2UserEventImportSummary : GTLRObject

/**
 *  Count of user events imported with complete existing catalog information.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *joinedEventsCount;

/**
 *  Count of user events imported, but with catalog information not found in the
 *  imported catalog.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unjoinedEventsCount;

@end


/**
 *  The inline source for the input config for ImportUserEvents method.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2UserEventInlineSource : GTLRObject

/**
 *  Required. A list of user events to import. Recommended max of 10k items.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleCloudRetailV2UserEvent *> *userEvents;

@end


/**
 *  The input config source for user events.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2UserEventInputConfig : GTLRObject

/** Required. BigQuery input source. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2BigQuerySource *bigQuerySource;

/** Required. Google Cloud Storage location for the input content. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2GcsSource *gcsSource;

/** Required. The Inline source for the input content for UserEvents. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleCloudRetailV2UserEventInlineSource *userEventInlineSource;

@end


/**
 *  Information of an end user.
 */
@interface GTLRCloudRetail_GoogleCloudRetailV2UserInfo : GTLRObject

/**
 *  True if the request is made directly from the end user, in which case the
 *  ip_address and user_agent can be populated from the HTTP request. This flag
 *  should be set only if the API request is made directly from the end user
 *  such as a mobile app (and not if a gateway or a server is processing and
 *  pushing the user events). This should not be set when using the JavaScript
 *  tag in UserEventService.CollectUserEvent.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *directUserRequest;

/**
 *  The end user's IP address. This field is used to extract location
 *  information for personalization. This field must be either an IPv4 address
 *  (e.g. "104.133.9.80") or an IPv6 address (e.g.
 *  "2001:0db8:85a3:0000:0000:8a2e:0370:7334"). Otherwise, an INVALID_ARGUMENT
 *  error is returned. This should not be set when: * setting
 *  SearchRequest.user_info. * using the JavaScript tag in
 *  UserEventService.CollectUserEvent or if direct_user_request is set.
 */
@property(nonatomic, copy, nullable) NSString *ipAddress;

/**
 *  User agent as included in the HTTP header. Required for getting
 *  SearchResponse.sponsored_results. The field must be a UTF-8 encoded string
 *  with a length limit of 1,000 characters. Otherwise, an INVALID_ARGUMENT
 *  error is returned. This should not be set when using the client side event
 *  reporting with GTM or JavaScript tag in UserEventService.CollectUserEvent or
 *  if direct_user_request is set.
 */
@property(nonatomic, copy, nullable) NSString *userAgent;

/**
 *  Highly recommended for logged-in users. Unique identifier for logged-in
 *  user, such as a user name. Don't set for anonymous users. Always use a
 *  hashed value for this ID. Don't set the field to the same fixed ID for
 *  different users. This mixes the event history of those users together, which
 *  results in degraded model quality. The field must be a UTF-8 encoded string
 *  with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error
 *  is returned.
 */
@property(nonatomic, copy, nullable) NSString *userId;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudRetail_GoogleLongrunningListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleLongrunningOperation *> *operations;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRCloudRetail_GoogleLongrunningOperation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleRpcStatus *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleLongrunningOperation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRCloudRetail_GoogleLongrunningOperation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleLongrunningOperation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleLongrunningOperation_Response : GTLRObject
@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRCloudRetail_GoogleProtobufEmpty : GTLRObject
@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRCloudRetail_GoogleRpcStatus : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudRetail_GoogleRpcStatus_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCloudRetail_GoogleRpcStatus_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudRetail_GoogleRpcStatus_Details_Item : GTLRObject
@end


/**
 *  Represents a whole or partial calendar date, such as a birthday. The time of
 *  day and time zone are either specified elsewhere or are insignificant. The
 *  date is relative to the Gregorian Calendar. This can represent one of the
 *  following: * A full date, with non-zero year, month, and day values. * A
 *  month and day, with a zero year (for example, an anniversary). * A year on
 *  its own, with a zero month and a zero day. * A year and month, with a zero
 *  day (for example, a credit card expiration date). Related types: *
 *  google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
 */
@interface GTLRCloudRetail_GoogleTypeDate : GTLRObject

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
