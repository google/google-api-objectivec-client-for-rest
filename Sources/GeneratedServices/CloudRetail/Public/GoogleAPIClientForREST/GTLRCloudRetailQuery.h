// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Retail API (retail/v2)
// Description:
//   Cloud Retail service enables customers to build end-to-end personalized
//   recommendation systems without requiring a high level of expertise in
//   machine learning, recommendation system, or Google Cloud.
// Documentation:
//   https://cloud.google.com/recommendations

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRCloudRetailObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Cloud Retail query classes.
 */
@interface GTLRCloudRetailQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Adds the specified CatalogAttribute to the AttributesConfig. If the
 *  CatalogAttribute to add already exists, an ALREADY_EXISTS error is returned.
 *
 *  Method: retail.projects.locations.catalogs.attributesConfig.addCatalogAttribute
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsAttributesConfigAddCatalogAttribute : GTLRCloudRetailQuery

/**
 *  Required. Full AttributesConfig resource name. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`
 */
@property(nonatomic, copy, nullable) NSString *attributesConfig;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig.
 *
 *  Adds the specified CatalogAttribute to the AttributesConfig. If the
 *  CatalogAttribute to add already exists, an ALREADY_EXISTS error is returned.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2AddCatalogAttributeRequest to include
 *    in the query.
 *  @param attributesConfig Required. Full AttributesConfig resource name.
 *    Format:
 *    `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsAttributesConfigAddCatalogAttribute
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2AddCatalogAttributeRequest *)object
               attributesConfig:(NSString *)attributesConfig;

@end

/**
 *  Removes the specified CatalogAttribute from the AttributesConfig. If the
 *  CatalogAttribute to remove does not exist, a NOT_FOUND error is returned.
 *
 *  Method: retail.projects.locations.catalogs.attributesConfig.removeCatalogAttribute
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsAttributesConfigRemoveCatalogAttribute : GTLRCloudRetailQuery

/**
 *  Required. Full AttributesConfig resource name. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`
 */
@property(nonatomic, copy, nullable) NSString *attributesConfig;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig.
 *
 *  Removes the specified CatalogAttribute from the AttributesConfig. If the
 *  CatalogAttribute to remove does not exist, a NOT_FOUND error is returned.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2RemoveCatalogAttributeRequest to
 *    include in the query.
 *  @param attributesConfig Required. Full AttributesConfig resource name.
 *    Format:
 *    `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsAttributesConfigRemoveCatalogAttribute
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2RemoveCatalogAttributeRequest *)object
               attributesConfig:(NSString *)attributesConfig;

@end

/**
 *  Replaces the specified CatalogAttribute in the AttributesConfig by updating
 *  the catalog attribute with the same CatalogAttribute.key. If the
 *  CatalogAttribute to replace does not exist, a NOT_FOUND error is returned.
 *
 *  Method: retail.projects.locations.catalogs.attributesConfig.replaceCatalogAttribute
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsAttributesConfigReplaceCatalogAttribute : GTLRCloudRetailQuery

/**
 *  Required. Full AttributesConfig resource name. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`
 */
@property(nonatomic, copy, nullable) NSString *attributesConfig;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig.
 *
 *  Replaces the specified CatalogAttribute in the AttributesConfig by updating
 *  the catalog attribute with the same CatalogAttribute.key. If the
 *  CatalogAttribute to replace does not exist, a NOT_FOUND error is returned.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2ReplaceCatalogAttributeRequest to
 *    include in the query.
 *  @param attributesConfig Required. Full AttributesConfig resource name.
 *    Format:
 *    `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsAttributesConfigReplaceCatalogAttribute
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ReplaceCatalogAttributeRequest *)object
               attributesConfig:(NSString *)attributesConfig;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: retail.projects.locations.catalogs.branches.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesOperationsGet : GTLRCloudRetailQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Incrementally adds place IDs to Product.fulfillment_info.place_ids. This
 *  process is asynchronous and does not require the Product to exist before
 *  updating fulfillment information. If the request is valid, the update will
 *  be enqueued and processed downstream. As a consequence, when a response is
 *  returned, the added place IDs are not immediately manifested in the Product
 *  queried by ProductService.GetProduct or ProductService.ListProducts. The
 *  returned Operations will be obsolete after 1 day, and GetOperation API will
 *  return NOT_FOUND afterwards. If conflicting updates are issued, the
 *  Operations associated with the stale updates will not be marked as done
 *  until being obsolete. This feature is only available for users who have
 *  Retail Search enabled. Enable Retail Search on Cloud Console before using
 *  this feature.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.addFulfillmentPlaces
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsAddFulfillmentPlaces : GTLRCloudRetailQuery

/**
 *  Required. Full resource name of Product, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *  If the caller does not have permission to access the Product, regardless of
 *  whether or not it exists, a PERMISSION_DENIED error is returned.
 */
@property(nonatomic, copy, nullable) NSString *product;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Incrementally adds place IDs to Product.fulfillment_info.place_ids. This
 *  process is asynchronous and does not require the Product to exist before
 *  updating fulfillment information. If the request is valid, the update will
 *  be enqueued and processed downstream. As a consequence, when a response is
 *  returned, the added place IDs are not immediately manifested in the Product
 *  queried by ProductService.GetProduct or ProductService.ListProducts. The
 *  returned Operations will be obsolete after 1 day, and GetOperation API will
 *  return NOT_FOUND afterwards. If conflicting updates are issued, the
 *  Operations associated with the stale updates will not be marked as done
 *  until being obsolete. This feature is only available for users who have
 *  Retail Search enabled. Enable Retail Search on Cloud Console before using
 *  this feature.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2AddFulfillmentPlacesRequest to include
 *    in the query.
 *  @param product Required. Full resource name of Product, such as `projects/ *
 *    /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *    If the caller does not have permission to access the Product, regardless
 *    of whether or not it exists, a PERMISSION_DENIED error is returned.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsAddFulfillmentPlaces
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2AddFulfillmentPlacesRequest *)object
                        product:(NSString *)product;

@end

/**
 *  Updates local inventory information for a Product at a list of places, while
 *  respecting the last update timestamps of each inventory field. This process
 *  is asynchronous and does not require the Product to exist before updating
 *  inventory information. If the request is valid, the update will be enqueued
 *  and processed downstream. As a consequence, when a response is returned,
 *  updates are not immediately manifested in the Product queried by
 *  ProductService.GetProduct or ProductService.ListProducts. Local inventory
 *  information can only be modified using this method.
 *  ProductService.CreateProduct and ProductService.UpdateProduct has no effect
 *  on local inventories. The returned Operations will be obsolete after 1 day,
 *  and GetOperation API will return NOT_FOUND afterwards. If conflicting
 *  updates are issued, the Operations associated with the stale updates will
 *  not be marked as done until being obsolete. This feature is only available
 *  for users who have Retail Search enabled. Enable Retail Search on Cloud
 *  Console before using this feature.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.addLocalInventories
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsAddLocalInventories : GTLRCloudRetailQuery

/**
 *  Required. Full resource name of Product, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *  If the caller does not have permission to access the Product, regardless of
 *  whether or not it exists, a PERMISSION_DENIED error is returned.
 */
@property(nonatomic, copy, nullable) NSString *product;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Updates local inventory information for a Product at a list of places, while
 *  respecting the last update timestamps of each inventory field. This process
 *  is asynchronous and does not require the Product to exist before updating
 *  inventory information. If the request is valid, the update will be enqueued
 *  and processed downstream. As a consequence, when a response is returned,
 *  updates are not immediately manifested in the Product queried by
 *  ProductService.GetProduct or ProductService.ListProducts. Local inventory
 *  information can only be modified using this method.
 *  ProductService.CreateProduct and ProductService.UpdateProduct has no effect
 *  on local inventories. The returned Operations will be obsolete after 1 day,
 *  and GetOperation API will return NOT_FOUND afterwards. If conflicting
 *  updates are issued, the Operations associated with the stale updates will
 *  not be marked as done until being obsolete. This feature is only available
 *  for users who have Retail Search enabled. Enable Retail Search on Cloud
 *  Console before using this feature.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2AddLocalInventoriesRequest to include
 *    in the query.
 *  @param product Required. Full resource name of Product, such as `projects/ *
 *    /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *    If the caller does not have permission to access the Product, regardless
 *    of whether or not it exists, a PERMISSION_DENIED error is returned.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsAddLocalInventories
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2AddLocalInventoriesRequest *)object
                        product:(NSString *)product;

@end

/**
 *  Creates a Product.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsCreate : GTLRCloudRetailQuery

/**
 *  Required. The parent catalog resource name, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID to use for the Product, which will become the final
 *  component of the Product.name. If the caller does not have permission to
 *  create the Product, regardless of whether or not it exists, a
 *  PERMISSION_DENIED error is returned. This field must be unique among all
 *  Products with the same parent. Otherwise, an ALREADY_EXISTS error is
 *  returned. This field must be a UTF-8 encoded string with a length limit of
 *  128 characters. Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2Product.
 *
 *  Creates a Product.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2Product to include
 *    in the query.
 *  @param parent Required. The parent catalog resource name, such as `projects/
 *    * /locations/global/catalogs/default_catalog/branches/default_branch`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2Product *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Product.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsDelete : GTLRCloudRetailQuery

/**
 *  Required. Full resource name of Product, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *  If the caller does not have permission to delete the Product, regardless of
 *  whether or not it exists, a PERMISSION_DENIED error is returned. If the
 *  Product to delete does not exist, a NOT_FOUND error is returned. The Product
 *  to delete can neither be a Product.Type.COLLECTION Product member nor a
 *  Product.Type.PRIMARY Product with more than one variants. Otherwise, an
 *  INVALID_ARGUMENT error is returned. All inventory information for the named
 *  Product will be deleted.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleProtobufEmpty.
 *
 *  Deletes a Product.
 *
 *  @param name Required. Full resource name of Product, such as `projects/ *
 *    /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *    If the caller does not have permission to delete the Product, regardless
 *    of whether or not it exists, a PERMISSION_DENIED error is returned. If the
 *    Product to delete does not exist, a NOT_FOUND error is returned. The
 *    Product to delete can neither be a Product.Type.COLLECTION Product member
 *    nor a Product.Type.PRIMARY Product with more than one variants. Otherwise,
 *    an INVALID_ARGUMENT error is returned. All inventory information for the
 *    named Product will be deleted.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Product.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsGet : GTLRCloudRetailQuery

/**
 *  Required. Full resource name of Product, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *  If the caller does not have permission to access the Product, regardless of
 *  whether or not it exists, a PERMISSION_DENIED error is returned. If the
 *  requested Product does not exist, a NOT_FOUND error is returned.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2Product.
 *
 *  Gets a Product.
 *
 *  @param name Required. Full resource name of Product, such as `projects/ *
 *    /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *    If the caller does not have permission to access the Product, regardless
 *    of whether or not it exists, a PERMISSION_DENIED error is returned. If the
 *    requested Product does not exist, a NOT_FOUND error is returned.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Bulk import of multiple Products. Request processing may be synchronous.
 *  Non-existing items are created. Note that it is possible for a subset of the
 *  Products to be successfully updated.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsImport : GTLRCloudRetailQuery

/**
 *  Required.
 *  `projects/1234/locations/global/catalogs/default_catalog/branches/default_branch`
 *  If no updateMask is specified, requires products.create permission. If
 *  updateMask is specified, requires products.update permission.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Bulk import of multiple Products. Request processing may be synchronous.
 *  Non-existing items are created. Note that it is possible for a subset of the
 *  Products to be successfully updated.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2ImportProductsRequest to include in the
 *    query.
 *  @param parent Required.
 *    `projects/1234/locations/global/catalogs/default_catalog/branches/default_branch`
 *    If no updateMask is specified, requires products.create permission. If
 *    updateMask is specified, requires products.update permission.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsImport
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ImportProductsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets a list of Products.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsList : GTLRCloudRetailQuery

/**
 *  A filter to apply on the list results. Supported features: * List all the
 *  products under the parent branch if filter is unset. * List
 *  Product.Type.VARIANT Products sharing the same Product.Type.PRIMARY Product.
 *  For example: `primary_product_id = "some_product_id"` * List Products
 *  bundled in a Product.Type.COLLECTION Product. For example:
 *  `collection_product_id = "some_product_id"` * List Products with a
 *  partibular type. For example: `type = "PRIMARY"` `type = "VARIANT"` `type =
 *  "COLLECTION"` If the field is unrecognizable, an INVALID_ARGUMENT error is
 *  returned. If the specified Product.Type.PRIMARY Product or
 *  Product.Type.COLLECTION Product does not exist, a NOT_FOUND error is
 *  returned.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Maximum number of Products to return. If unspecified, defaults to 100. The
 *  maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If
 *  this field is negative, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token ListProductsResponse.next_page_token, received from a previous
 *  ProductService.ListProducts call. Provide this to retrieve the subsequent
 *  page. When paginating, all other parameters provided to
 *  ProductService.ListProducts must match the call that provided the page
 *  token. Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent branch resource name, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/0`. Use `default_branch`
 *  as the branch ID, to list products under the default branch. If the caller
 *  does not have permission to list Products under this branch, regardless of
 *  whether or not this branch exists, a PERMISSION_DENIED error is returned.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The fields of Product to return in the responses. If not set or empty, the
 *  following fields are returned: * Product.name * Product.id * Product.title *
 *  Product.uri * Product.images * Product.price_info * Product.brands If "*" is
 *  provided, all fields are returned. Product.name is always returned no matter
 *  what mask is set. If an unsupported or unknown field is provided, an
 *  INVALID_ARGUMENT error is returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2ListProductsResponse.
 *
 *  Gets a list of Products.
 *
 *  @param parent Required. The parent branch resource name, such as `projects/
 *    * /locations/global/catalogs/default_catalog/branches/0`. Use
 *    `default_branch` as the branch ID, to list products under the default
 *    branch. If the caller does not have permission to list Products under this
 *    branch, regardless of whether or not this branch exists, a
 *    PERMISSION_DENIED error is returned.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a Product.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsPatch : GTLRCloudRetailQuery

/**
 *  If set to true, and the Product is not found, a new Product will be created.
 *  In this situation, `update_mask` is ignored.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Immutable. Full resource name of the product, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Indicates which fields in the provided Product to update. The immutable and
 *  output only fields are NOT supported. If not set, all supported fields (the
 *  fields that are neither immutable nor output only) are updated. If an
 *  unsupported or unknown field is provided, an INVALID_ARGUMENT error is
 *  returned. The attribute key can be updated by setting the mask path as
 *  "attributes.${key_name}". If a key name is present in the mask but not in
 *  the patching product from the request, this key will be deleted after the
 *  update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2Product.
 *
 *  Updates a Product.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2Product to include
 *    in the query.
 *  @param name Immutable. Full resource name of the product, such as `projects/
 *    *
 *    /locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2Product *)object
                           name:(NSString *)name;

@end

/**
 *  Incrementally removes place IDs from a Product.fulfillment_info.place_ids.
 *  This process is asynchronous and does not require the Product to exist
 *  before updating fulfillment information. If the request is valid, the update
 *  will be enqueued and processed downstream. As a consequence, when a response
 *  is returned, the removed place IDs are not immediately manifested in the
 *  Product queried by ProductService.GetProduct or ProductService.ListProducts.
 *  The returned Operations will be obsolete after 1 day, and GetOperation API
 *  will return NOT_FOUND afterwards. If conflicting updates are issued, the
 *  Operations associated with the stale updates will not be marked as done
 *  until being obsolete. This feature is only available for users who have
 *  Retail Search enabled. Enable Retail Search on Cloud Console before using
 *  this feature.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.removeFulfillmentPlaces
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsRemoveFulfillmentPlaces : GTLRCloudRetailQuery

/**
 *  Required. Full resource name of Product, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *  If the caller does not have permission to access the Product, regardless of
 *  whether or not it exists, a PERMISSION_DENIED error is returned.
 */
@property(nonatomic, copy, nullable) NSString *product;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Incrementally removes place IDs from a Product.fulfillment_info.place_ids.
 *  This process is asynchronous and does not require the Product to exist
 *  before updating fulfillment information. If the request is valid, the update
 *  will be enqueued and processed downstream. As a consequence, when a response
 *  is returned, the removed place IDs are not immediately manifested in the
 *  Product queried by ProductService.GetProduct or ProductService.ListProducts.
 *  The returned Operations will be obsolete after 1 day, and GetOperation API
 *  will return NOT_FOUND afterwards. If conflicting updates are issued, the
 *  Operations associated with the stale updates will not be marked as done
 *  until being obsolete. This feature is only available for users who have
 *  Retail Search enabled. Enable Retail Search on Cloud Console before using
 *  this feature.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2RemoveFulfillmentPlacesRequest to
 *    include in the query.
 *  @param product Required. Full resource name of Product, such as `projects/ *
 *    /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *    If the caller does not have permission to access the Product, regardless
 *    of whether or not it exists, a PERMISSION_DENIED error is returned.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsRemoveFulfillmentPlaces
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2RemoveFulfillmentPlacesRequest *)object
                        product:(NSString *)product;

@end

/**
 *  Remove local inventory information for a Product at a list of places at a
 *  removal timestamp. This process is asynchronous. If the request is valid,
 *  the removal will be enqueued and processed downstream. As a consequence,
 *  when a response is returned, removals are not immediately manifested in the
 *  Product queried by ProductService.GetProduct or ProductService.ListProducts.
 *  Local inventory information can only be removed using this method.
 *  ProductService.CreateProduct and ProductService.UpdateProduct has no effect
 *  on local inventories. The returned Operations will be obsolete after 1 day,
 *  and GetOperation API will return NOT_FOUND afterwards. If conflicting
 *  updates are issued, the Operations associated with the stale updates will
 *  not be marked as done until being obsolete. This feature is only available
 *  for users who have Retail Search enabled. Enable Retail Search on Cloud
 *  Console before using this feature.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.removeLocalInventories
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsRemoveLocalInventories : GTLRCloudRetailQuery

/**
 *  Required. Full resource name of Product, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *  If the caller does not have permission to access the Product, regardless of
 *  whether or not it exists, a PERMISSION_DENIED error is returned.
 */
@property(nonatomic, copy, nullable) NSString *product;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Remove local inventory information for a Product at a list of places at a
 *  removal timestamp. This process is asynchronous. If the request is valid,
 *  the removal will be enqueued and processed downstream. As a consequence,
 *  when a response is returned, removals are not immediately manifested in the
 *  Product queried by ProductService.GetProduct or ProductService.ListProducts.
 *  Local inventory information can only be removed using this method.
 *  ProductService.CreateProduct and ProductService.UpdateProduct has no effect
 *  on local inventories. The returned Operations will be obsolete after 1 day,
 *  and GetOperation API will return NOT_FOUND afterwards. If conflicting
 *  updates are issued, the Operations associated with the stale updates will
 *  not be marked as done until being obsolete. This feature is only available
 *  for users who have Retail Search enabled. Enable Retail Search on Cloud
 *  Console before using this feature.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2RemoveLocalInventoriesRequest to
 *    include in the query.
 *  @param product Required. Full resource name of Product, such as `projects/ *
 *    /locations/global/catalogs/default_catalog/branches/default_branch/products/some_product_id`.
 *    If the caller does not have permission to access the Product, regardless
 *    of whether or not it exists, a PERMISSION_DENIED error is returned.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsRemoveLocalInventories
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2RemoveLocalInventoriesRequest *)object
                        product:(NSString *)product;

@end

/**
 *  Updates inventory information for a Product while respecting the last update
 *  timestamps of each inventory field. This process is asynchronous and does
 *  not require the Product to exist before updating fulfillment information. If
 *  the request is valid, the update is enqueued and processed downstream. As a
 *  consequence, when a response is returned, updates are not immediately
 *  manifested in the Product queried by ProductService.GetProduct or
 *  ProductService.ListProducts. When inventory is updated with
 *  ProductService.CreateProduct and ProductService.UpdateProduct, the specified
 *  inventory field value(s) overwrite any existing value(s) while ignoring the
 *  last update time for this field. Furthermore, the last update times for the
 *  specified inventory fields are overwritten by the times of the
 *  ProductService.CreateProduct or ProductService.UpdateProduct request. If no
 *  inventory fields are set in CreateProductRequest.product, then any
 *  pre-existing inventory information for this product is used. If no inventory
 *  fields are set in SetInventoryRequest.set_mask, then any existing inventory
 *  information is preserved. Pre-existing inventory information can only be
 *  updated with ProductService.SetInventory,
 *  ProductService.AddFulfillmentPlaces, and
 *  ProductService.RemoveFulfillmentPlaces. The returned Operations is obsolete
 *  after one day, and the GetOperation API returns `NOT_FOUND` afterwards. If
 *  conflicting updates are issued, the Operations associated with the stale
 *  updates are not marked as done until they are obsolete. This feature is only
 *  available for users who have Retail Search enabled. Enable Retail Search on
 *  Cloud Console before using this feature.
 *
 *  Method: retail.projects.locations.catalogs.branches.products.setInventory
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsSetInventory : GTLRCloudRetailQuery

/**
 *  Immutable. Full resource name of the product, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Updates inventory information for a Product while respecting the last update
 *  timestamps of each inventory field. This process is asynchronous and does
 *  not require the Product to exist before updating fulfillment information. If
 *  the request is valid, the update is enqueued and processed downstream. As a
 *  consequence, when a response is returned, updates are not immediately
 *  manifested in the Product queried by ProductService.GetProduct or
 *  ProductService.ListProducts. When inventory is updated with
 *  ProductService.CreateProduct and ProductService.UpdateProduct, the specified
 *  inventory field value(s) overwrite any existing value(s) while ignoring the
 *  last update time for this field. Furthermore, the last update times for the
 *  specified inventory fields are overwritten by the times of the
 *  ProductService.CreateProduct or ProductService.UpdateProduct request. If no
 *  inventory fields are set in CreateProductRequest.product, then any
 *  pre-existing inventory information for this product is used. If no inventory
 *  fields are set in SetInventoryRequest.set_mask, then any existing inventory
 *  information is preserved. Pre-existing inventory information can only be
 *  updated with ProductService.SetInventory,
 *  ProductService.AddFulfillmentPlaces, and
 *  ProductService.RemoveFulfillmentPlaces. The returned Operations is obsolete
 *  after one day, and the GetOperation API returns `NOT_FOUND` afterwards. If
 *  conflicting updates are issued, the Operations associated with the stale
 *  updates are not marked as done until they are obsolete. This feature is only
 *  available for users who have Retail Search enabled. Enable Retail Search on
 *  Cloud Console before using this feature.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2SetInventoryRequest
 *    to include in the query.
 *  @param name Immutable. Full resource name of the product, such as `projects/
 *    *
 *    /locations/global/catalogs/default_catalog/branches/default_branch/products/product_id`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsSetInventory
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2SetInventoryRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Completes the specified prefix with keyword suggestions. This feature is
 *  only available for users who have Retail Search enabled. Enable Retail
 *  Search on Cloud Console before using this feature.
 *
 *  Method: retail.projects.locations.catalogs.completeQuery
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsCompleteQuery : GTLRCloudRetailQuery

/**
 *  Required. Catalog for which the completion is performed. Full resource name
 *  of catalog, such as `projects/ *
 *  /locations/global/catalogs/default_catalog`.
 */
@property(nonatomic, copy, nullable) NSString *catalog;

/**
 *  Determines which dataset to use for fetching completion. "user-data" will
 *  use the imported dataset through CompletionService.ImportCompletionData.
 *  "cloud-retail" will use the dataset generated by cloud retail based on user
 *  events. If leave empty, it will use the "user-data". Current supported
 *  values: * user-data * cloud-retail: This option requires enabling
 *  auto-learning function first. See
 *  [guidelines](https://cloud.google.com/retail/docs/completion-overview#generated-completion-dataset).
 */
@property(nonatomic, copy, nullable) NSString *dataset;

/**
 *  The device type context for completion suggestions. We recommend that you
 *  leave this field empty. It can apply different suggestions on different
 *  device types, e.g. `DESKTOP`, `MOBILE`. If it is empty, the suggestions are
 *  across all device types. Supported formats: * `UNKNOWN_DEVICE_TYPE` *
 *  `DESKTOP` * `MOBILE` * A customized string starts with `OTHER_`, e.g.
 *  `OTHER_IPHONE`.
 */
@property(nonatomic, copy, nullable) NSString *deviceType;

/**
 *  Note that this field applies for `user-data` dataset only. For requests with
 *  `cloud-retail` dataset, setting this field has no effect. The language
 *  filters applied to the output suggestions. If set, it should contain the
 *  language of the query. If not set, suggestions are returned without
 *  considering language restrictions. This is the BCP-47 language code, such as
 *  "en-US" or "sr-Latn". For more information, see [Tags for Identifying
 *  Languages](https://tools.ietf.org/html/bcp47). The maximum number of
 *  language codes is 3.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *languageCodes;

/**
 *  Completion max suggestions. If left unset or set to 0, then will fallback to
 *  the configured value CompletionConfig.max_suggestions. The maximum allowed
 *  max suggestions is 20. If it is set higher, it will be capped by 20.
 */
@property(nonatomic, assign) NSInteger maxSuggestions;

/**
 *  Required. The query used to generate suggestions. The maximum number of
 *  allowed characters is 255.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Required field. A unique identifier for tracking visitors. For example, this
 *  could be implemented with an HTTP cookie, which should be able to uniquely
 *  identify a visitor on a single device. This unique identifier should not
 *  change if the visitor logs in or out of the website. The field must be a
 *  UTF-8 encoded string with a length limit of 128 characters. Otherwise, an
 *  INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *visitorId;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2CompleteQueryResponse.
 *
 *  Completes the specified prefix with keyword suggestions. This feature is
 *  only available for users who have Retail Search enabled. Enable Retail
 *  Search on Cloud Console before using this feature.
 *
 *  @param catalog Required. Catalog for which the completion is performed. Full
 *    resource name of catalog, such as `projects/ *
 *    /locations/global/catalogs/default_catalog`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsCompleteQuery
 */
+ (instancetype)queryWithCatalog:(NSString *)catalog;

@end

/**
 *  Bulk import of processed completion dataset. Request processing is
 *  asynchronous. Partial updating is not supported. The operation is
 *  successfully finished only after the imported suggestions are indexed
 *  successfully and ready for serving. The process takes hours. This feature is
 *  only available for users who have Retail Search enabled. Enable Retail
 *  Search on Cloud Console before using this feature.
 *
 *  Method: retail.projects.locations.catalogs.completionData.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsCompletionDataImport : GTLRCloudRetailQuery

/**
 *  Required. The catalog which the suggestions dataset belongs to. Format:
 *  `projects/1234/locations/global/catalogs/default_catalog`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Bulk import of processed completion dataset. Request processing is
 *  asynchronous. Partial updating is not supported. The operation is
 *  successfully finished only after the imported suggestions are indexed
 *  successfully and ready for serving. The process takes hours. This feature is
 *  only available for users who have Retail Search enabled. Enable Retail
 *  Search on Cloud Console before using this feature.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2ImportCompletionDataRequest to include
 *    in the query.
 *  @param parent Required. The catalog which the suggestions dataset belongs
 *    to. Format: `projects/1234/locations/global/catalogs/default_catalog`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsCompletionDataImport
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ImportCompletionDataRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a Control. If the Control to create already exists, an
 *  ALREADY_EXISTS error is returned.
 *
 *  Method: retail.projects.locations.catalogs.controls.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsCreate : GTLRCloudRetailQuery

/**
 *  Required. The ID to use for the Control, which will become the final
 *  component of the Control's resource name. This value should be 4-63
 *  characters, and valid characters are /a-z-_/.
 */
@property(nonatomic, copy, nullable) NSString *controlId;

/**
 *  Required. Full resource name of parent catalog. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2Control.
 *
 *  Creates a Control. If the Control to create already exists, an
 *  ALREADY_EXISTS error is returned.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2Control to include
 *    in the query.
 *  @param parent Required. Full resource name of parent catalog. Format:
 *    `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2Control *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Control. If the Control to delete does not exist, a NOT_FOUND
 *  error is returned.
 *
 *  Method: retail.projects.locations.catalogs.controls.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsDelete : GTLRCloudRetailQuery

/**
 *  Required. The resource name of the Control to delete. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/controls/{control_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleProtobufEmpty.
 *
 *  Deletes a Control. If the Control to delete does not exist, a NOT_FOUND
 *  error is returned.
 *
 *  @param name Required. The resource name of the Control to delete. Format:
 *    `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/controls/{control_id}`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Control.
 *
 *  Method: retail.projects.locations.catalogs.controls.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsGet : GTLRCloudRetailQuery

/**
 *  Required. The resource name of the Control to get. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/controls/{control_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2Control.
 *
 *  Gets a Control.
 *
 *  @param name Required. The resource name of the Control to get. Format:
 *    `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/controls/{control_id}`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all Controls by their parent Catalog.
 *
 *  Method: retail.projects.locations.catalogs.controls.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsList : GTLRCloudRetailQuery

/**
 *  Optional. A filter to apply on the list results. Supported features: * List
 *  all the products under the parent branch if filter is unset. * List controls
 *  that are used in a single ServingConfig: 'serving_config =
 *  "boosted_home_page_cvr"'
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Maximum number of results to return. If unspecified, defaults to
 *  50. Max allowed value is 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListControls` call.
 *  Provide this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The catalog resource name. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2ListControlsResponse.
 *
 *  Lists all Controls by their parent Catalog.
 *
 *  @param parent Required. The catalog resource name. Format:
 *    `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a Control. Control cannot be set to a different oneof field, if so
 *  an INVALID_ARGUMENT is returned. If the Control to update does not exist, a
 *  NOT_FOUND error is returned.
 *
 *  Method: retail.projects.locations.catalogs.controls.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsPatch : GTLRCloudRetailQuery

/**
 *  Immutable. Fully qualified name `projects/ * /locations/global/catalogs/ *
 *  /controls/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Indicates which fields in the provided Control to update. The following are
 *  NOT supported: * Control.name If not set or empty, all supported fields are
 *  updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2Control.
 *
 *  Updates a Control. Control cannot be set to a different oneof field, if so
 *  an INVALID_ARGUMENT is returned. If the Control to update does not exist, a
 *  NOT_FOUND error is returned.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2Control to include
 *    in the query.
 *  @param name Immutable. Fully qualified name `projects/ *
 *    /locations/global/catalogs/ * /controls/ *`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2Control *)object
                           name:(NSString *)name;

@end

/**
 *  Gets an AttributesConfig.
 *
 *  Method: retail.projects.locations.catalogs.getAttributesConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetAttributesConfig : GTLRCloudRetailQuery

/**
 *  Required. Full AttributesConfig resource name. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig.
 *
 *  Gets an AttributesConfig.
 *
 *  @param name Required. Full AttributesConfig resource name. Format:
 *    `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/attributesConfig`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetAttributesConfig
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a CompletionConfig.
 *
 *  Method: retail.projects.locations.catalogs.getCompletionConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetCompletionConfig : GTLRCloudRetailQuery

/**
 *  Required. Full CompletionConfig resource name. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/completionConfig`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2CompletionConfig.
 *
 *  Gets a CompletionConfig.
 *
 *  @param name Required. Full CompletionConfig resource name. Format:
 *    `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/completionConfig`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetCompletionConfig
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get which branch is currently default branch set by
 *  CatalogService.SetDefaultBranch method under a specified parent catalog.
 *
 *  Method: retail.projects.locations.catalogs.getDefaultBranch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetDefaultBranch : GTLRCloudRetailQuery

/**
 *  The parent catalog resource name, such as `projects/ *
 *  /locations/global/catalogs/default_catalog`.
 */
@property(nonatomic, copy, nullable) NSString *catalog;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2GetDefaultBranchResponse.
 *
 *  Get which branch is currently default branch set by
 *  CatalogService.SetDefaultBranch method under a specified parent catalog.
 *
 *  @param catalog The parent catalog resource name, such as `projects/ *
 *    /locations/global/catalogs/default_catalog`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetDefaultBranch
 */
+ (instancetype)queryWithCatalog:(NSString *)catalog;

@end

/**
 *  Lists all the Catalogs associated with the project.
 *
 *  Method: retail.projects.locations.catalogs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsList : GTLRCloudRetailQuery

/**
 *  Maximum number of Catalogs to return. If unspecified, defaults to 50. The
 *  maximum allowed value is 1000. Values above 1000 will be coerced to 1000. If
 *  this field is negative, an INVALID_ARGUMENT is returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token ListCatalogsResponse.next_page_token, received from a previous
 *  CatalogService.ListCatalogs call. Provide this to retrieve the subsequent
 *  page. When paginating, all other parameters provided to
 *  CatalogService.ListCatalogs must match the call that provided the page
 *  token. Otherwise, an INVALID_ARGUMENT error is returned.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The account resource name with an associated location. If the
 *  caller does not have permission to list Catalogs under this location,
 *  regardless of whether or not this location exists, a PERMISSION_DENIED error
 *  is returned.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2ListCatalogsResponse.
 *
 *  Lists all the Catalogs associated with the project.
 *
 *  @param parent Required. The account resource name with an associated
 *    location. If the caller does not have permission to list Catalogs under
 *    this location, regardless of whether or not this location exists, a
 *    PERMISSION_DENIED error is returned.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: retail.projects.locations.catalogs.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsOperationsGet : GTLRCloudRetailQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: retail.projects.locations.catalogs.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsOperationsList : GTLRCloudRetailQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the Catalogs.
 *
 *  Method: retail.projects.locations.catalogs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsPatch : GTLRCloudRetailQuery

/** Required. Immutable. The fully qualified resource name of the catalog. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Indicates which fields in the provided Catalog to update. If an unsupported
 *  or unknown field is provided, an INVALID_ARGUMENT error is returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2Catalog.
 *
 *  Updates the Catalogs.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2Catalog to include
 *    in the query.
 *  @param name Required. Immutable. The fully qualified resource name of the
 *    catalog.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2Catalog *)object
                           name:(NSString *)name;

@end

/**
 *  Makes a recommendation prediction.
 *
 *  Method: retail.projects.locations.catalogs.placements.predict
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsPlacementsPredict : GTLRCloudRetailQuery

/**
 *  Required. Full resource name of the format: `{placement=projects/ *
 *  /locations/global/catalogs/default_catalog/servingConfigs/ *}` or
 *  `{placement=projects/ *
 *  /locations/global/catalogs/default_catalog/placements/ *}`. We recommend
 *  using the `servingConfigs` resource. `placements` is a legacy resource. The
 *  ID of the Recommendations AI serving config or placement. Before you can
 *  request predictions from your model, you must create at least one serving
 *  config or placement for it. For more information, see [Managing serving
 *  configurations] (https://cloud.google.com/retail/docs/manage-configs). The
 *  full list of available serving configs can be seen at
 *  https://console.cloud.google.com/ai/retail/catalogs/default_catalog/configs
 */
@property(nonatomic, copy, nullable) NSString *placement;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2PredictResponse.
 *
 *  Makes a recommendation prediction.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2PredictRequest to
 *    include in the query.
 *  @param placement Required. Full resource name of the format:
 *    `{placement=projects/ *
 *    /locations/global/catalogs/default_catalog/servingConfigs/ *}` or
 *    `{placement=projects/ *
 *    /locations/global/catalogs/default_catalog/placements/ *}`. We recommend
 *    using the `servingConfigs` resource. `placements` is a legacy resource.
 *    The ID of the Recommendations AI serving config or placement. Before you
 *    can request predictions from your model, you must create at least one
 *    serving config or placement for it. For more information, see [Managing
 *    serving configurations]
 *    (https://cloud.google.com/retail/docs/manage-configs). The full list of
 *    available serving configs can be seen at
 *    https://console.cloud.google.com/ai/retail/catalogs/default_catalog/configs
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsPlacementsPredict
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2PredictRequest *)object
                      placement:(NSString *)placement;

@end

/**
 *  Performs a search. This feature is only available for users who have Retail
 *  Search enabled. Enable Retail Search on Cloud Console before using this
 *  feature.
 *
 *  Method: retail.projects.locations.catalogs.placements.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsPlacementsSearch : GTLRCloudRetailQuery

/**
 *  Required. The resource name of the Retail Search serving config, such as
 *  `projects/ *
 *  /locations/global/catalogs/default_catalog/servingConfigs/default_serving_config`
 *  or the name of the legacy placement resource, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/placements/default_search`. This
 *  field is used to identify the serving configuration name and the set of
 *  models that will be used to make the search.
 */
@property(nonatomic, copy, nullable) NSString *placement;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2SearchResponse.
 *
 *  Performs a search. This feature is only available for users who have Retail
 *  Search enabled. Enable Retail Search on Cloud Console before using this
 *  feature.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2SearchRequest to
 *    include in the query.
 *  @param placement Required. The resource name of the Retail Search serving
 *    config, such as `projects/ *
 *    /locations/global/catalogs/default_catalog/servingConfigs/default_serving_config`
 *    or the name of the legacy placement resource, such as `projects/ *
 *    /locations/global/catalogs/default_catalog/placements/default_search`.
 *    This field is used to identify the serving configuration name and the set
 *    of models that will be used to make the search.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsPlacementsSearch
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2SearchRequest *)object
                      placement:(NSString *)placement;

@end

/**
 *  Enables a Control on the specified ServingConfig. The control is added in
 *  the last position of the list of controls it belongs to (e.g. if it's a
 *  facet spec control it will be applied in the last position of
 *  servingConfig.facetSpecIds) Returns a ALREADY_EXISTS error if the control
 *  has already been applied. Returns a FAILED_PRECONDITION error if the
 *  addition could exceed maximum number of control allowed for that type of
 *  control.
 *
 *  Method: retail.projects.locations.catalogs.servingConfigs.addControl
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsAddControl : GTLRCloudRetailQuery

/**
 *  Required. The source ServingConfig resource name . Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}`
 */
@property(nonatomic, copy, nullable) NSString *servingConfig;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2ServingConfig.
 *
 *  Enables a Control on the specified ServingConfig. The control is added in
 *  the last position of the list of controls it belongs to (e.g. if it's a
 *  facet spec control it will be applied in the last position of
 *  servingConfig.facetSpecIds) Returns a ALREADY_EXISTS error if the control
 *  has already been applied. Returns a FAILED_PRECONDITION error if the
 *  addition could exceed maximum number of control allowed for that type of
 *  control.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2AddControlRequest to
 *    include in the query.
 *  @param servingConfig Required. The source ServingConfig resource name .
 *    Format:
 *    `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsAddControl
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2AddControlRequest *)object
                  servingConfig:(NSString *)servingConfig;

@end

/**
 *  Creates a ServingConfig. A maximum of 100 ServingConfigs are allowed in a
 *  Catalog, otherwise a FAILED_PRECONDITION error is returned.
 *
 *  Method: retail.projects.locations.catalogs.servingConfigs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsCreate : GTLRCloudRetailQuery

/**
 *  Required. Full resource name of parent. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID to use for the ServingConfig, which will become the final
 *  component of the ServingConfig's resource name. This value should be 4-63
 *  characters, and valid characters are /a-z-_/.
 */
@property(nonatomic, copy, nullable) NSString *servingConfigId;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2ServingConfig.
 *
 *  Creates a ServingConfig. A maximum of 100 ServingConfigs are allowed in a
 *  Catalog, otherwise a FAILED_PRECONDITION error is returned.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2ServingConfig to
 *    include in the query.
 *  @param parent Required. Full resource name of parent. Format:
 *    `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ServingConfig *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a ServingConfig. Returns a NotFound error if the ServingConfig does
 *  not exist.
 *
 *  Method: retail.projects.locations.catalogs.servingConfigs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsDelete : GTLRCloudRetailQuery

/**
 *  Required. The resource name of the ServingConfig to delete. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleProtobufEmpty.
 *
 *  Deletes a ServingConfig. Returns a NotFound error if the ServingConfig does
 *  not exist.
 *
 *  @param name Required. The resource name of the ServingConfig to delete.
 *    Format:
 *    `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not
 *  exist.
 *
 *  Method: retail.projects.locations.catalogs.servingConfigs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsGet : GTLRCloudRetailQuery

/**
 *  Required. The resource name of the ServingConfig to get. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2ServingConfig.
 *
 *  Gets a ServingConfig. Returns a NotFound error if the ServingConfig does not
 *  exist.
 *
 *  @param name Required. The resource name of the ServingConfig to get. Format:
 *    `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all ServingConfigs linked to this catalog.
 *
 *  Method: retail.projects.locations.catalogs.servingConfigs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsList : GTLRCloudRetailQuery

/**
 *  Optional. Maximum number of results to return. If unspecified, defaults to
 *  100. If a value greater than 100 is provided, at most 100 results are
 *  returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. A page token, received from a previous `ListServingConfigs` call.
 *  Provide this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The catalog resource name. Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2ListServingConfigsResponse.
 *
 *  Lists all ServingConfigs linked to this catalog.
 *
 *  @param parent Required. The catalog resource name. Format:
 *    `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a ServingConfig.
 *
 *  Method: retail.projects.locations.catalogs.servingConfigs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsPatch : GTLRCloudRetailQuery

/**
 *  Immutable. Fully qualified name `projects/ * /locations/global/catalogs/ *
 *  /servingConfig/ *`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Indicates which fields in the provided ServingConfig to update. The
 *  following are NOT supported: * ServingConfig.name If not set, all supported
 *  fields are updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2ServingConfig.
 *
 *  Updates a ServingConfig.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2ServingConfig to
 *    include in the query.
 *  @param name Immutable. Fully qualified name `projects/ *
 *    /locations/global/catalogs/ * /servingConfig/ *`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ServingConfig *)object
                           name:(NSString *)name;

@end

/**
 *  Makes a recommendation prediction.
 *
 *  Method: retail.projects.locations.catalogs.servingConfigs.predict
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsPredict : GTLRCloudRetailQuery

/**
 *  Required. Full resource name of the format: `{placement=projects/ *
 *  /locations/global/catalogs/default_catalog/servingConfigs/ *}` or
 *  `{placement=projects/ *
 *  /locations/global/catalogs/default_catalog/placements/ *}`. We recommend
 *  using the `servingConfigs` resource. `placements` is a legacy resource. The
 *  ID of the Recommendations AI serving config or placement. Before you can
 *  request predictions from your model, you must create at least one serving
 *  config or placement for it. For more information, see [Managing serving
 *  configurations] (https://cloud.google.com/retail/docs/manage-configs). The
 *  full list of available serving configs can be seen at
 *  https://console.cloud.google.com/ai/retail/catalogs/default_catalog/configs
 */
@property(nonatomic, copy, nullable) NSString *placement;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2PredictResponse.
 *
 *  Makes a recommendation prediction.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2PredictRequest to
 *    include in the query.
 *  @param placement Required. Full resource name of the format:
 *    `{placement=projects/ *
 *    /locations/global/catalogs/default_catalog/servingConfigs/ *}` or
 *    `{placement=projects/ *
 *    /locations/global/catalogs/default_catalog/placements/ *}`. We recommend
 *    using the `servingConfigs` resource. `placements` is a legacy resource.
 *    The ID of the Recommendations AI serving config or placement. Before you
 *    can request predictions from your model, you must create at least one
 *    serving config or placement for it. For more information, see [Managing
 *    serving configurations]
 *    (https://cloud.google.com/retail/docs/manage-configs). The full list of
 *    available serving configs can be seen at
 *    https://console.cloud.google.com/ai/retail/catalogs/default_catalog/configs
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsPredict
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2PredictRequest *)object
                      placement:(NSString *)placement;

@end

/**
 *  Disables a Control on the specified ServingConfig. The control is removed
 *  from the ServingConfig. Returns a NOT_FOUND error if the Control is not
 *  enabled for the ServingConfig.
 *
 *  Method: retail.projects.locations.catalogs.servingConfigs.removeControl
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsRemoveControl : GTLRCloudRetailQuery

/**
 *  Required. The source ServingConfig resource name . Format:
 *  `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}`
 */
@property(nonatomic, copy, nullable) NSString *servingConfig;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2ServingConfig.
 *
 *  Disables a Control on the specified ServingConfig. The control is removed
 *  from the ServingConfig. Returns a NOT_FOUND error if the Control is not
 *  enabled for the ServingConfig.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2RemoveControlRequest
 *    to include in the query.
 *  @param servingConfig Required. The source ServingConfig resource name .
 *    Format:
 *    `projects/{project_number}/locations/{location_id}/catalogs/{catalog_id}/servingConfigs/{serving_config_id}`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsRemoveControl
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2RemoveControlRequest *)object
                  servingConfig:(NSString *)servingConfig;

@end

/**
 *  Performs a search. This feature is only available for users who have Retail
 *  Search enabled. Enable Retail Search on Cloud Console before using this
 *  feature.
 *
 *  Method: retail.projects.locations.catalogs.servingConfigs.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsSearch : GTLRCloudRetailQuery

/**
 *  Required. The resource name of the Retail Search serving config, such as
 *  `projects/ *
 *  /locations/global/catalogs/default_catalog/servingConfigs/default_serving_config`
 *  or the name of the legacy placement resource, such as `projects/ *
 *  /locations/global/catalogs/default_catalog/placements/default_search`. This
 *  field is used to identify the serving configuration name and the set of
 *  models that will be used to make the search.
 */
@property(nonatomic, copy, nullable) NSString *placement;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2SearchResponse.
 *
 *  Performs a search. This feature is only available for users who have Retail
 *  Search enabled. Enable Retail Search on Cloud Console before using this
 *  feature.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2SearchRequest to
 *    include in the query.
 *  @param placement Required. The resource name of the Retail Search serving
 *    config, such as `projects/ *
 *    /locations/global/catalogs/default_catalog/servingConfigs/default_serving_config`
 *    or the name of the legacy placement resource, such as `projects/ *
 *    /locations/global/catalogs/default_catalog/placements/default_search`.
 *    This field is used to identify the serving configuration name and the set
 *    of models that will be used to make the search.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsSearch
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2SearchRequest *)object
                      placement:(NSString *)placement;

@end

/**
 *  Set a specified branch id as default branch. API methods such as
 *  SearchService.Search, ProductService.GetProduct, ProductService.ListProducts
 *  will treat requests using "default_branch" to the actual branch id set as
 *  default. For example, if `projects/ * /locations/ * /catalogs/ *
 *  /branches/1` is set as default, setting SearchRequest.branch to `projects/ *
 *  /locations/ * /catalogs/ * /branches/default_branch` is equivalent to
 *  setting SearchRequest.branch to `projects/ * /locations/ * /catalogs/ *
 *  /branches/1`. Using multiple branches can be useful when developers would
 *  like to have a staging branch to test and verify for future usage. When it
 *  becomes ready, developers switch on the staging branch using this API while
 *  keeping using `projects/ * /locations/ * /catalogs/ *
 *  /branches/default_branch` as SearchRequest.branch to route the traffic to
 *  this staging branch. CAUTION: If you have live predict/search traffic,
 *  switching the default branch could potentially cause outages if the ID space
 *  of the new branch is very different from the old one. More specifically: *
 *  PredictionService will only return product IDs from branch {newBranch}. *
 *  SearchService will only return product IDs from branch {newBranch} (if
 *  branch is not explicitly set). * UserEventService will only join events with
 *  products from branch {newBranch}.
 *
 *  Method: retail.projects.locations.catalogs.setDefaultBranch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsSetDefaultBranch : GTLRCloudRetailQuery

/**
 *  Full resource name of the catalog, such as `projects/ *
 *  /locations/global/catalogs/default_catalog`.
 */
@property(nonatomic, copy, nullable) NSString *catalog;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleProtobufEmpty.
 *
 *  Set a specified branch id as default branch. API methods such as
 *  SearchService.Search, ProductService.GetProduct, ProductService.ListProducts
 *  will treat requests using "default_branch" to the actual branch id set as
 *  default. For example, if `projects/ * /locations/ * /catalogs/ *
 *  /branches/1` is set as default, setting SearchRequest.branch to `projects/ *
 *  /locations/ * /catalogs/ * /branches/default_branch` is equivalent to
 *  setting SearchRequest.branch to `projects/ * /locations/ * /catalogs/ *
 *  /branches/1`. Using multiple branches can be useful when developers would
 *  like to have a staging branch to test and verify for future usage. When it
 *  becomes ready, developers switch on the staging branch using this API while
 *  keeping using `projects/ * /locations/ * /catalogs/ *
 *  /branches/default_branch` as SearchRequest.branch to route the traffic to
 *  this staging branch. CAUTION: If you have live predict/search traffic,
 *  switching the default branch could potentially cause outages if the ID space
 *  of the new branch is very different from the old one. More specifically: *
 *  PredictionService will only return product IDs from branch {newBranch}. *
 *  SearchService will only return product IDs from branch {newBranch} (if
 *  branch is not explicitly set). * UserEventService will only join events with
 *  products from branch {newBranch}.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2SetDefaultBranchRequest to include in
 *    the query.
 *  @param catalog Full resource name of the catalog, such as `projects/ *
 *    /locations/global/catalogs/default_catalog`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsSetDefaultBranch
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2SetDefaultBranchRequest *)object
                        catalog:(NSString *)catalog;

@end

/**
 *  Updates the AttributesConfig. The catalog attributes in the request will be
 *  updated in the catalog, or inserted if they do not exist. Existing catalog
 *  attributes not included in the request will remain unchanged. Attributes
 *  that are assigned to products, but do not exist at the catalog level, are
 *  always included in the response. The product attribute is assigned default
 *  values for missing catalog attribute fields, e.g., searchable and dynamic
 *  facetable options.
 *
 *  Method: retail.projects.locations.catalogs.updateAttributesConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsUpdateAttributesConfig : GTLRCloudRetailQuery

/**
 *  Required. Immutable. The fully qualified resource name of the attribute
 *  config. Format: `projects/ * /locations/ * /catalogs/ * /attributesConfig`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Indicates which fields in the provided AttributesConfig to update. The
 *  following is the only supported field: * AttributesConfig.catalog_attributes
 *  If not set, all supported fields are updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig.
 *
 *  Updates the AttributesConfig. The catalog attributes in the request will be
 *  updated in the catalog, or inserted if they do not exist. Existing catalog
 *  attributes not included in the request will remain unchanged. Attributes
 *  that are assigned to products, but do not exist at the catalog level, are
 *  always included in the response. The product attribute is assigned default
 *  values for missing catalog attribute fields, e.g., searchable and dynamic
 *  facetable options.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig to
 *    include in the query.
 *  @param name Required. Immutable. The fully qualified resource name of the
 *    attribute config. Format: `projects/ * /locations/ * /catalogs/ *
 *    /attributesConfig`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsUpdateAttributesConfig
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the CompletionConfigs.
 *
 *  Method: retail.projects.locations.catalogs.updateCompletionConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsUpdateCompletionConfig : GTLRCloudRetailQuery

/**
 *  Required. Immutable. Fully qualified name `projects/ * /locations/ *
 *  /catalogs/ * /completionConfig`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Indicates which fields in the provided CompletionConfig to update. The
 *  following are the only supported fields: * CompletionConfig.matching_order *
 *  CompletionConfig.max_suggestions * CompletionConfig.min_prefix_length *
 *  CompletionConfig.auto_learning If not set, all supported fields are updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2CompletionConfig.
 *
 *  Updates the CompletionConfigs.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2CompletionConfig to
 *    include in the query.
 *  @param name Required. Immutable. Fully qualified name `projects/ *
 *    /locations/ * /catalogs/ * /completionConfig`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsUpdateCompletionConfig
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2CompletionConfig *)object
                           name:(NSString *)name;

@end

/**
 *  Writes a single user event from the browser. This uses a GET request to due
 *  to browser restriction of POST-ing to a 3rd party domain. This method is
 *  used only by the Retail API JavaScript pixel and Google Tag Manager. Users
 *  should not call this method directly.
 *
 *  Method: retail.projects.locations.catalogs.userEvents.collect
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsCollect : GTLRCloudRetailQuery

/**
 *  The event timestamp in milliseconds. This prevents browser caching of
 *  otherwise identical get requests. The name is abbreviated to reduce the
 *  payload bytes.
 */
@property(nonatomic, assign) long long ets;

/**
 *  Required. The parent catalog name, such as
 *  `projects/1234/locations/global/catalogs/default_catalog`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The prebuilt rule name that can convert a specific type of raw_json. For
 *  example: "default_schema/v1.0"
 */
@property(nonatomic, copy, nullable) NSString *prebuiltRule;

/**
 *  An arbitrary serialized JSON string that contains necessary information that
 *  can comprise a user event. When this field is specified, the user_event
 *  field will be ignored. Note: line-delimited JSON is not supported, a single
 *  JSON only.
 */
@property(nonatomic, copy, nullable) NSString *rawJson;

/**
 *  The URL including cgi-parameters but excluding the hash fragment with a
 *  length limit of 5,000 characters. This is often more useful than the referer
 *  URL, because many browsers only send the domain for 3rd party requests.
 */
@property(nonatomic, copy, nullable) NSString *uri;

/**
 *  Required. URL encoded UserEvent proto with a length limit of 2,000,000
 *  characters.
 */
@property(nonatomic, copy, nullable) NSString *userEvent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleApiHttpBody.
 *
 *  Writes a single user event from the browser. This uses a GET request to due
 *  to browser restriction of POST-ing to a 3rd party domain. This method is
 *  used only by the Retail API JavaScript pixel and Google Tag Manager. Users
 *  should not call this method directly.
 *
 *  @param parent Required. The parent catalog name, such as
 *    `projects/1234/locations/global/catalogs/default_catalog`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsCollect
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Bulk import of User events. Request processing might be synchronous. Events
 *  that already exist are skipped. Use this method for backfilling historical
 *  user events. `Operation.response` is of type `ImportResponse`. Note that it
 *  is possible for a subset of the items to be successfully inserted.
 *  `Operation.metadata` is of type `ImportMetadata`.
 *
 *  Method: retail.projects.locations.catalogs.userEvents.import
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsImport : GTLRCloudRetailQuery

/** Required. `projects/1234/locations/global/catalogs/default_catalog` */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Bulk import of User events. Request processing might be synchronous. Events
 *  that already exist are skipped. Use this method for backfilling historical
 *  user events. `Operation.response` is of type `ImportResponse`. Note that it
 *  is possible for a subset of the items to be successfully inserted.
 *  `Operation.metadata` is of type `ImportMetadata`.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2ImportUserEventsRequest to include in
 *    the query.
 *  @param parent Required.
 *    `projects/1234/locations/global/catalogs/default_catalog`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsImport
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ImportUserEventsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes permanently all user events specified by the filter provided.
 *  Depending on the number of events specified by the filter, this operation
 *  could take hours or days to complete. To test a filter, use the list command
 *  first.
 *
 *  Method: retail.projects.locations.catalogs.userEvents.purge
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsPurge : GTLRCloudRetailQuery

/**
 *  Required. The resource name of the catalog under which the events are
 *  created. The format is
 *  `projects/${projectId}/locations/global/catalogs/${catalogId}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Deletes permanently all user events specified by the filter provided.
 *  Depending on the number of events specified by the filter, this operation
 *  could take hours or days to complete. To test a filter, use the list command
 *  first.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2PurgeUserEventsRequest to include in
 *    the query.
 *  @param parent Required. The resource name of the catalog under which the
 *    events are created. The format is
 *    `projects/${projectId}/locations/global/catalogs/${catalogId}`
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsPurge
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2PurgeUserEventsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Starts a user-event rejoin operation with latest product catalog. Events are
 *  not annotated with detailed product information for products that are
 *  missing from the catalog when the user event is ingested. These events are
 *  stored as unjoined events with limited usage on training and serving. You
 *  can use this method to start a join operation on specified events with the
 *  latest version of product catalog. You can also use this method to correct
 *  events joined with the wrong product catalog. A rejoin operation can take
 *  hours or days to complete.
 *
 *  Method: retail.projects.locations.catalogs.userEvents.rejoin
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsRejoin : GTLRCloudRetailQuery

/**
 *  Required. The parent catalog resource name, such as
 *  `projects/1234/locations/global/catalogs/default_catalog`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Starts a user-event rejoin operation with latest product catalog. Events are
 *  not annotated with detailed product information for products that are
 *  missing from the catalog when the user event is ingested. These events are
 *  stored as unjoined events with limited usage on training and serving. You
 *  can use this method to start a join operation on specified events with the
 *  latest version of product catalog. You can also use this method to correct
 *  events joined with the wrong product catalog. A rejoin operation can take
 *  hours or days to complete.
 *
 *  @param object The @c
 *    GTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsRequest to include in
 *    the query.
 *  @param parent Required. The parent catalog resource name, such as
 *    `projects/1234/locations/global/catalogs/default_catalog`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsRejoin
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Writes a single user event.
 *
 *  Method: retail.projects.locations.catalogs.userEvents.write
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsWrite : GTLRCloudRetailQuery

/**
 *  Required. The parent catalog resource name, such as
 *  `projects/1234/locations/global/catalogs/default_catalog`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleCloudRetailV2UserEvent.
 *
 *  Writes a single user event.
 *
 *  @param object The @c GTLRCloudRetail_GoogleCloudRetailV2UserEvent to include
 *    in the query.
 *  @param parent Required. The parent catalog resource name, such as
 *    `projects/1234/locations/global/catalogs/default_catalog`.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsWrite
 */
+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2UserEvent *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: retail.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsOperationsGet : GTLRCloudRetailQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: retail.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsLocationsOperationsList : GTLRCloudRetailQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRCloudRetailQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: retail.projects.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsOperationsGet : GTLRCloudRetailQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudRetailQuery_ProjectsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: retail.projects.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudRetailCloudPlatform
 */
@interface GTLRCloudRetailQuery_ProjectsOperationsList : GTLRCloudRetailQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRCloudRetail_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRCloudRetailQuery_ProjectsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
