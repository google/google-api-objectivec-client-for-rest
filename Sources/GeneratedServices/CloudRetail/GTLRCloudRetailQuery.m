// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Vertex AI Search for Retail API (retail/v2)
// Description:
//   Vertex AI Search for Retail API is made up of Retail Search, Browse and
//   Recommendations. These discovery AI solutions help you implement
//   personalized search, browse and recommendations, based on machine learning
//   models, across your websites and mobile applications.
// Documentation:
//   https://cloud.google.com/recommendations

#import <GoogleAPIClientForREST/GTLRCloudRetailQuery.h>

@implementation GTLRCloudRetailQuery

@dynamic fields;

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsAttributesConfigAddCatalogAttribute

@dynamic attributesConfig;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2AddCatalogAttributeRequest *)object
               attributesConfig:(NSString *)attributesConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"attributesConfig" ];
  NSString *pathURITemplate = @"v2/{+attributesConfig}:addCatalogAttribute";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsAttributesConfigAddCatalogAttribute *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.attributesConfig = attributesConfig;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig class];
  query.loggingName = @"retail.projects.locations.catalogs.attributesConfig.addCatalogAttribute";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsAttributesConfigRemoveCatalogAttribute

@dynamic attributesConfig;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2RemoveCatalogAttributeRequest *)object
               attributesConfig:(NSString *)attributesConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"attributesConfig" ];
  NSString *pathURITemplate = @"v2/{+attributesConfig}:removeCatalogAttribute";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsAttributesConfigRemoveCatalogAttribute *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.attributesConfig = attributesConfig;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig class];
  query.loggingName = @"retail.projects.locations.catalogs.attributesConfig.removeCatalogAttribute";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsAttributesConfigReplaceCatalogAttribute

@dynamic attributesConfig;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ReplaceCatalogAttributeRequest *)object
               attributesConfig:(NSString *)attributesConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"attributesConfig" ];
  NSString *pathURITemplate = @"v2/{+attributesConfig}:replaceCatalogAttribute";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsAttributesConfigReplaceCatalogAttribute *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.attributesConfig = attributesConfig;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig class];
  query.loggingName = @"retail.projects.locations.catalogs.attributesConfig.replaceCatalogAttribute";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.branches.operations.get";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsAddFulfillmentPlaces

@dynamic product;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2AddFulfillmentPlacesRequest *)object
                        product:(NSString *)product {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"product" ];
  NSString *pathURITemplate = @"v2/{+product}:addFulfillmentPlaces";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsAddFulfillmentPlaces *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.product = product;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.branches.products.addFulfillmentPlaces";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsAddLocalInventories

@dynamic product;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2AddLocalInventoriesRequest *)object
                        product:(NSString *)product {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"product" ];
  NSString *pathURITemplate = @"v2/{+product}:addLocalInventories";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsAddLocalInventories *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.product = product;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.branches.products.addLocalInventories";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsCreate

@dynamic parent, productId;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2Product *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/products";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2Product class];
  query.loggingName = @"retail.projects.locations.catalogs.branches.products.create";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleProtobufEmpty class];
  query.loggingName = @"retail.projects.locations.catalogs.branches.products.delete";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2Product class];
  query.loggingName = @"retail.projects.locations.catalogs.branches.products.get";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ImportProductsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/products:import";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.branches.products.import";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/products";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2ListProductsResponse class];
  query.loggingName = @"retail.projects.locations.catalogs.branches.products.list";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsPatch

@dynamic allowMissing, name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2Product *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2Product class];
  query.loggingName = @"retail.projects.locations.catalogs.branches.products.patch";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2PurgeProductsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/products:purge";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.branches.products.purge";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsRemoveFulfillmentPlaces

@dynamic product;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2RemoveFulfillmentPlacesRequest *)object
                        product:(NSString *)product {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"product" ];
  NSString *pathURITemplate = @"v2/{+product}:removeFulfillmentPlaces";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsRemoveFulfillmentPlaces *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.product = product;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.branches.products.removeFulfillmentPlaces";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsRemoveLocalInventories

@dynamic product;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2RemoveLocalInventoriesRequest *)object
                        product:(NSString *)product {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"product" ];
  NSString *pathURITemplate = @"v2/{+product}:removeLocalInventories";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsRemoveLocalInventories *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.product = product;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.branches.products.removeLocalInventories";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsSetInventory

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2SetInventoryRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:setInventory";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsBranchesProductsSetInventory *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.branches.products.setInventory";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsCompleteQuery

@dynamic catalog, dataset, deviceType, enableAttributeSuggestions, entity,
         languageCodes, maxSuggestions, query, visitorId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"languageCodes" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithCatalog:(NSString *)catalog {
  NSArray *pathParams = @[ @"catalog" ];
  NSString *pathURITemplate = @"v2/{+catalog}:completeQuery";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsCompleteQuery *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.catalog = catalog;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2CompleteQueryResponse class];
  query.loggingName = @"retail.projects.locations.catalogs.completeQuery";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsCompletionDataImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ImportCompletionDataRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/completionData:import";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsCompletionDataImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.completionData.import";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsCreate

@dynamic controlId, parent;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2Control *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/controls";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2Control class];
  query.loggingName = @"retail.projects.locations.catalogs.controls.create";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleProtobufEmpty class];
  query.loggingName = @"retail.projects.locations.catalogs.controls.delete";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2Control class];
  query.loggingName = @"retail.projects.locations.catalogs.controls.get";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/controls";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2ListControlsResponse class];
  query.loggingName = @"retail.projects.locations.catalogs.controls.list";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2Control *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsControlsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2Control class];
  query.loggingName = @"retail.projects.locations.catalogs.controls.patch";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsExportAnalyticsMetrics

@dynamic catalog;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ExportAnalyticsMetricsRequest *)object
                        catalog:(NSString *)catalog {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"catalog" ];
  NSString *pathURITemplate = @"v2/{+catalog}:exportAnalyticsMetrics";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsExportAnalyticsMetrics *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.catalog = catalog;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.exportAnalyticsMetrics";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsGenerativeQuestionBatchUpdate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2BatchUpdateGenerativeQuestionConfigsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/generativeQuestion:batchUpdate";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsGenerativeQuestionBatchUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2BatchUpdateGenerativeQuestionConfigsResponse class];
  query.loggingName = @"retail.projects.locations.catalogs.generativeQuestion.batchUpdate";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsGenerativeQuestionsList

@dynamic parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/generativeQuestions";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsGenerativeQuestionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2ListGenerativeQuestionConfigsResponse class];
  query.loggingName = @"retail.projects.locations.catalogs.generativeQuestions.list";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetAttributesConfig

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetAttributesConfig *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig class];
  query.loggingName = @"retail.projects.locations.catalogs.getAttributesConfig";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetCompletionConfig

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetCompletionConfig *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2CompletionConfig class];
  query.loggingName = @"retail.projects.locations.catalogs.getCompletionConfig";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetDefaultBranch

@dynamic catalog;

+ (instancetype)queryWithCatalog:(NSString *)catalog {
  NSArray *pathParams = @[ @"catalog" ];
  NSString *pathURITemplate = @"v2/{+catalog}:getDefaultBranch";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetDefaultBranch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.catalog = catalog;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2GetDefaultBranchResponse class];
  query.loggingName = @"retail.projects.locations.catalogs.getDefaultBranch";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetGenerativeQuestionFeature

@dynamic catalog;

+ (instancetype)queryWithCatalog:(NSString *)catalog {
  NSArray *pathParams = @[ @"catalog" ];
  NSString *pathURITemplate = @"v2/{+catalog}/generativeQuestionFeature";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsGetGenerativeQuestionFeature *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.catalog = catalog;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2GenerativeQuestionsFeatureConfig class];
  query.loggingName = @"retail.projects.locations.catalogs.getGenerativeQuestionFeature";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/catalogs";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2ListCatalogsResponse class];
  query.loggingName = @"retail.projects.locations.catalogs.list";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsCreate

@dynamic dryRun, parent;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2Model *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/models";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.models.create";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleProtobufEmpty class];
  query.loggingName = @"retail.projects.locations.catalogs.models.delete";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2Model class];
  query.loggingName = @"retail.projects.locations.catalogs.models.get";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/models";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2ListModelsResponse class];
  query.loggingName = @"retail.projects.locations.catalogs.models.list";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2Model *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2Model class];
  query.loggingName = @"retail.projects.locations.catalogs.models.patch";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsPause

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2PauseModelRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:pause";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsPause *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2Model class];
  query.loggingName = @"retail.projects.locations.catalogs.models.pause";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsResume

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ResumeModelRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:resume";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsResume *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2Model class];
  query.loggingName = @"retail.projects.locations.catalogs.models.resume";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsTune

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2TuneModelRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:tune";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsModelsTune *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.models.tune";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.operations.get";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}/operations";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"retail.projects.locations.catalogs.operations.list";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2Catalog *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2Catalog class];
  query.loggingName = @"retail.projects.locations.catalogs.patch";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsPlacementsPredict

@dynamic placement;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2PredictRequest *)object
                      placement:(NSString *)placement {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"placement" ];
  NSString *pathURITemplate = @"v2/{+placement}:predict";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsPlacementsPredict *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.placement = placement;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2PredictResponse class];
  query.loggingName = @"retail.projects.locations.catalogs.placements.predict";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsPlacementsSearch

@dynamic placement;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2SearchRequest *)object
                      placement:(NSString *)placement {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"placement" ];
  NSString *pathURITemplate = @"v2/{+placement}:search";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsPlacementsSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.placement = placement;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2SearchResponse class];
  query.loggingName = @"retail.projects.locations.catalogs.placements.search";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsAddControl

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2AddControlRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v2/{+servingConfig}:addControl";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsAddControl *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2ServingConfig class];
  query.loggingName = @"retail.projects.locations.catalogs.servingConfigs.addControl";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsCreate

@dynamic parent, servingConfigId;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ServingConfig *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/servingConfigs";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2ServingConfig class];
  query.loggingName = @"retail.projects.locations.catalogs.servingConfigs.create";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleProtobufEmpty class];
  query.loggingName = @"retail.projects.locations.catalogs.servingConfigs.delete";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2ServingConfig class];
  query.loggingName = @"retail.projects.locations.catalogs.servingConfigs.get";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/servingConfigs";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2ListServingConfigsResponse class];
  query.loggingName = @"retail.projects.locations.catalogs.servingConfigs.list";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ServingConfig *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2ServingConfig class];
  query.loggingName = @"retail.projects.locations.catalogs.servingConfigs.patch";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsPredict

@dynamic placement;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2PredictRequest *)object
                      placement:(NSString *)placement {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"placement" ];
  NSString *pathURITemplate = @"v2/{+placement}:predict";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsPredict *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.placement = placement;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2PredictResponse class];
  query.loggingName = @"retail.projects.locations.catalogs.servingConfigs.predict";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsRemoveControl

@dynamic servingConfig;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2RemoveControlRequest *)object
                  servingConfig:(NSString *)servingConfig {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"servingConfig" ];
  NSString *pathURITemplate = @"v2/{+servingConfig}:removeControl";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsRemoveControl *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.servingConfig = servingConfig;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2ServingConfig class];
  query.loggingName = @"retail.projects.locations.catalogs.servingConfigs.removeControl";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsSearch

@dynamic placement;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2SearchRequest *)object
                      placement:(NSString *)placement {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"placement" ];
  NSString *pathURITemplate = @"v2/{+placement}:search";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsServingConfigsSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.placement = placement;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2SearchResponse class];
  query.loggingName = @"retail.projects.locations.catalogs.servingConfigs.search";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsSetDefaultBranch

@dynamic catalog;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2SetDefaultBranchRequest *)object
                        catalog:(NSString *)catalog {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"catalog" ];
  NSString *pathURITemplate = @"v2/{+catalog}:setDefaultBranch";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsSetDefaultBranch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.catalog = catalog;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleProtobufEmpty class];
  query.loggingName = @"retail.projects.locations.catalogs.setDefaultBranch";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsUpdateAttributesConfig

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsUpdateAttributesConfig *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2AttributesConfig class];
  query.loggingName = @"retail.projects.locations.catalogs.updateAttributesConfig";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsUpdateCompletionConfig

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2CompletionConfig *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsUpdateCompletionConfig *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2CompletionConfig class];
  query.loggingName = @"retail.projects.locations.catalogs.updateCompletionConfig";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsUpdateGenerativeQuestion

@dynamic catalog, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2GenerativeQuestionConfig *)object
                        catalog:(NSString *)catalog {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"catalog" ];
  NSString *pathURITemplate = @"v2/{+catalog}/generativeQuestion";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsUpdateGenerativeQuestion *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.catalog = catalog;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2GenerativeQuestionConfig class];
  query.loggingName = @"retail.projects.locations.catalogs.updateGenerativeQuestion";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsUpdateGenerativeQuestionFeature

@dynamic catalog, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2GenerativeQuestionsFeatureConfig *)object
                        catalog:(NSString *)catalog {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"catalog" ];
  NSString *pathURITemplate = @"v2/{+catalog}/generativeQuestionFeature";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsUpdateGenerativeQuestionFeature *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.catalog = catalog;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2GenerativeQuestionsFeatureConfig class];
  query.loggingName = @"retail.projects.locations.catalogs.updateGenerativeQuestionFeature";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsCollect

@dynamic ets, parent, prebuiltRule, rawJson, uri, userEvent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/userEvents:collect";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsCollect *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleApiHttpBody class];
  query.loggingName = @"retail.projects.locations.catalogs.userEvents.collect";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2ImportUserEventsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/userEvents:import";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.userEvents.import";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsPurge

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2PurgeUserEventsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/userEvents:purge";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsPurge *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.userEvents.purge";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsRejoin

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2RejoinUserEventsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/userEvents:rejoin";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsRejoin *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.catalogs.userEvents.rejoin";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsWrite

@dynamic parent, writeAsync;

+ (instancetype)queryWithObject:(GTLRCloudRetail_GoogleCloudRetailV2UserEvent *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/userEvents:write";
  GTLRCloudRetailQuery_ProjectsLocationsCatalogsUserEventsWrite *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleCloudRetailV2UserEvent class];
  query.loggingName = @"retail.projects.locations.catalogs.userEvents.write";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}/operations";
  GTLRCloudRetailQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"retail.projects.locations.operations.list";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRCloudRetailQuery_ProjectsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningOperation class];
  query.loggingName = @"retail.projects.operations.get";
  return query;
}

@end

@implementation GTLRCloudRetailQuery_ProjectsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}/operations";
  GTLRCloudRetailQuery_ProjectsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudRetail_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"retail.projects.operations.list";
  return query;
}

@end
