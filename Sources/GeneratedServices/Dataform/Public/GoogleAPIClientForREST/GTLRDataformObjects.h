// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Dataform API (dataform/v1beta1)
// Documentation:
//   https://cloud.google.com/dataform/docs

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDataform_Assertion;
@class GTLRDataform_BigQueryAction;
@class GTLRDataform_CodeCompilationConfig;
@class GTLRDataform_CodeCompilationConfig_Vars;
@class GTLRDataform_ColumnDescriptor;
@class GTLRDataform_CommitAuthor;
@class GTLRDataform_CompilationError;
@class GTLRDataform_CompilationResult;
@class GTLRDataform_CompilationResultAction;
@class GTLRDataform_Declaration;
@class GTLRDataform_DirectoryEntry;
@class GTLRDataform_GitRemoteSettings;
@class GTLRDataform_IncrementalTableConfig;
@class GTLRDataform_Interval;
@class GTLRDataform_InvocationConfig;
@class GTLRDataform_Location;
@class GTLRDataform_Location_Labels;
@class GTLRDataform_Location_Metadata;
@class GTLRDataform_Operations;
@class GTLRDataform_Relation;
@class GTLRDataform_Relation_AdditionalOptions;
@class GTLRDataform_RelationDescriptor;
@class GTLRDataform_RelationDescriptor_BigqueryLabels;
@class GTLRDataform_ReleaseConfig;
@class GTLRDataform_Repository;
@class GTLRDataform_ScheduledExecutionRecord;
@class GTLRDataform_ScheduledReleaseRecord;
@class GTLRDataform_Status;
@class GTLRDataform_Status_Details_Item;
@class GTLRDataform_Target;
@class GTLRDataform_UncommittedFileChange;
@class GTLRDataform_WorkflowConfig;
@class GTLRDataform_WorkflowInvocation;
@class GTLRDataform_WorkflowInvocationAction;
@class GTLRDataform_Workspace;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRDataform_GitRemoteSettings.tokenStatus

/**
 *  The token could not be used to authenticate against the Git remote.
 *
 *  Value: "INVALID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_GitRemoteSettings_TokenStatus_Invalid;
/**
 *  The token could not be found in Secret Manager (or the Dataform Service
 *  Account did not have permission to access it).
 *
 *  Value: "NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_GitRemoteSettings_TokenStatus_NotFound;
/**
 *  Default value. This value is unused.
 *
 *  Value: "TOKEN_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_GitRemoteSettings_TokenStatus_TokenStatusUnspecified;
/**
 *  The token was used successfully to authenticate against the Git remote.
 *
 *  Value: "VALID"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_GitRemoteSettings_TokenStatus_Valid;

// ----------------------------------------------------------------------------
// GTLRDataform_Relation.relationType

/**
 *  The relation is an incrementalized table.
 *
 *  Value: "INCREMENTAL_TABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_Relation_RelationType_IncrementalTable;
/**
 *  The relation is a materialized view.
 *
 *  Value: "MATERIALIZED_VIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_Relation_RelationType_MaterializedView;
/**
 *  Default value. This value is unused.
 *
 *  Value: "RELATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_Relation_RelationType_RelationTypeUnspecified;
/**
 *  The relation is a table.
 *
 *  Value: "TABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_Relation_RelationType_Table;
/**
 *  The relation is a view.
 *
 *  Value: "VIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_Relation_RelationType_View;

// ----------------------------------------------------------------------------
// GTLRDataform_UncommittedFileChange.state

/**
 *  The file has been newly added.
 *
 *  Value: "ADDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_UncommittedFileChange_State_Added;
/**
 *  The file has been deleted.
 *
 *  Value: "DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_UncommittedFileChange_State_Deleted;
/**
 *  The file contains merge conflicts.
 *
 *  Value: "HAS_CONFLICTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_UncommittedFileChange_State_HasConflicts;
/**
 *  The file has been modified.
 *
 *  Value: "MODIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_UncommittedFileChange_State_Modified;
/**
 *  Default value. This value is unused.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_UncommittedFileChange_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRDataform_WorkflowInvocation.state

/**
 *  The workflow invocation is being cancelled, but some actions are still
 *  running.
 *
 *  Value: "CANCELING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_WorkflowInvocation_State_Canceling;
/**
 *  The workflow invocation was cancelled. A terminal state.
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_WorkflowInvocation_State_Cancelled;
/**
 *  The workflow invocation failed. A terminal state.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_WorkflowInvocation_State_Failed;
/**
 *  The workflow invocation is currently running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_WorkflowInvocation_State_Running;
/**
 *  Default value. This value is unused.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_WorkflowInvocation_State_StateUnspecified;
/**
 *  The workflow invocation succeeded. A terminal state.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_WorkflowInvocation_State_Succeeded;

// ----------------------------------------------------------------------------
// GTLRDataform_WorkflowInvocationAction.state

/**
 *  The action was cancelled. A terminal state.
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_WorkflowInvocationAction_State_Cancelled;
/**
 *  Execution of the action was disabled as per the configuration of the
 *  corresponding compilation result action. A terminal state.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_WorkflowInvocationAction_State_Disabled;
/**
 *  The action failed. A terminal state.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_WorkflowInvocationAction_State_Failed;
/**
 *  The action has not yet been considered for invocation.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_WorkflowInvocationAction_State_Pending;
/**
 *  The action is currently running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_WorkflowInvocationAction_State_Running;
/**
 *  Execution of the action was skipped because upstream dependencies did not
 *  all complete successfully. A terminal state.
 *
 *  Value: "SKIPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_WorkflowInvocationAction_State_Skipped;
/**
 *  The action succeeded. A terminal state.
 *
 *  Value: "SUCCEEDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDataform_WorkflowInvocationAction_State_Succeeded;

/**
 *  Represents an assertion upon a SQL query which is required return zero rows.
 */
@interface GTLRDataform_Assertion : GTLRObject

/** A list of actions that this action depends on. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_Target *> *dependencyTargets;

/**
 *  Whether this action is disabled (i.e. should not be run).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/**
 *  The parent action of this assertion. Only set if this assertion was
 *  automatically generated.
 */
@property(nonatomic, strong, nullable) GTLRDataform_Target *parentAction;

/**
 *  Descriptor for the assertion's automatically-generated view and its columns.
 */
@property(nonatomic, strong, nullable) GTLRDataform_RelationDescriptor *relationDescriptor;

/**
 *  The SELECT query which must return zero rows in order for this assertion to
 *  succeed.
 */
@property(nonatomic, copy, nullable) NSString *selectQuery;

/** Arbitrary, user-defined tags on this action. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tags;

@end


/**
 *  Represents a workflow action that will run against BigQuery.
 */
@interface GTLRDataform_BigQueryAction : GTLRObject

/** Output only. The generated BigQuery SQL script that will be executed. */
@property(nonatomic, copy, nullable) NSString *sqlScript;

@end


/**
 *  `CancelWorkflowInvocation` request message.
 */
@interface GTLRDataform_CancelWorkflowInvocationRequest : GTLRObject
@end


/**
 *  Configures various aspects of Dataform code compilation.
 */
@interface GTLRDataform_CodeCompilationConfig : GTLRObject

/** Optional. The default schema (BigQuery dataset ID) for assertions. */
@property(nonatomic, copy, nullable) NSString *assertionSchema;

/**
 *  Optional. The suffix that should be appended to all database (Google Cloud
 *  project ID) names.
 */
@property(nonatomic, copy, nullable) NSString *databaseSuffix;

/** Optional. The default database (Google Cloud project ID). */
@property(nonatomic, copy, nullable) NSString *defaultDatabase;

/**
 *  Optional. The default BigQuery location to use. Defaults to "US". See the
 *  BigQuery docs for a full list of locations:
 *  https://cloud.google.com/bigquery/docs/locations.
 */
@property(nonatomic, copy, nullable) NSString *defaultLocation;

/** Optional. The default schema (BigQuery dataset ID). */
@property(nonatomic, copy, nullable) NSString *defaultSchema;

/**
 *  Optional. The suffix that should be appended to all schema (BigQuery dataset
 *  ID) names.
 */
@property(nonatomic, copy, nullable) NSString *schemaSuffix;

/** Optional. The prefix that should be prepended to all table names. */
@property(nonatomic, copy, nullable) NSString *tablePrefix;

/**
 *  Optional. User-defined variables that are made available to project code
 *  during compilation.
 */
@property(nonatomic, strong, nullable) GTLRDataform_CodeCompilationConfig_Vars *vars;

@end


/**
 *  Optional. User-defined variables that are made available to project code
 *  during compilation.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDataform_CodeCompilationConfig_Vars : GTLRObject
@end


/**
 *  Describes a column.
 */
@interface GTLRDataform_ColumnDescriptor : GTLRObject

/** A list of BigQuery policy tags that will be applied to the column. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *bigqueryPolicyTags;

/**
 *  A textual description of the column.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The identifier for the column. Each entry in `path` represents one level of
 *  nesting.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *path;

@end


/**
 *  Represents the author of a Git commit.
 */
@interface GTLRDataform_CommitAuthor : GTLRObject

/** Required. The commit author's email address. */
@property(nonatomic, copy, nullable) NSString *emailAddress;

/** Required. The commit author's name. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  `CommitWorkspaceChanges` request message.
 */
@interface GTLRDataform_CommitWorkspaceChangesRequest : GTLRObject

/** Required. The commit's author. */
@property(nonatomic, strong, nullable) GTLRDataform_CommitAuthor *author;

/** Optional. The commit's message. */
@property(nonatomic, copy, nullable) NSString *commitMessage;

/**
 *  Optional. Full file paths to commit including filename, rooted at workspace
 *  root. If left empty, all files will be committed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *paths;

@end


/**
 *  An error encountered when attempting to compile a Dataform project.
 */
@interface GTLRDataform_CompilationError : GTLRObject

/**
 *  Output only. The identifier of the action where this error occurred, if
 *  available.
 */
@property(nonatomic, strong, nullable) GTLRDataform_Target *actionTarget;

/** Output only. The error's top level message. */
@property(nonatomic, copy, nullable) NSString *message;

/**
 *  Output only. The path of the file where this error occurred, if available,
 *  relative to the project root.
 */
@property(nonatomic, copy, nullable) NSString *path;

/** Output only. The error's full stack trace. */
@property(nonatomic, copy, nullable) NSString *stack;

@end


/**
 *  Represents the result of compiling a Dataform project.
 */
@interface GTLRDataform_CompilationResult : GTLRObject

/**
 *  Immutable. If set, fields of `code_compilation_config` override the default
 *  compilation settings that are specified in dataform.json.
 */
@property(nonatomic, strong, nullable) GTLRDataform_CodeCompilationConfig *codeCompilationConfig;

/** Output only. Errors encountered during project compilation. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_CompilationError *> *compilationErrors;

/**
 *  Output only. The version of `\@dataform/core` that was used for compilation.
 */
@property(nonatomic, copy, nullable) NSString *dataformCoreVersion;

/**
 *  Immutable. Git commit/tag/branch name at which the repository should be
 *  compiled. Must exist in the remote repository. Examples: - a commit SHA:
 *  `12ade345` - a tag: `tag1` - a branch name: `branch1`
 */
@property(nonatomic, copy, nullable) NSString *gitCommitish;

/** Output only. The compilation result's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Immutable. The name of the release config to compile. The release config's
 *  'current_compilation_result' field will be updated to this compilation
 *  result. Must be in the format `projects/ * /locations/ * /repositories/ *
 *  /releaseConfigs/ *`.
 */
@property(nonatomic, copy, nullable) NSString *releaseConfig;

/**
 *  Output only. The fully resolved Git commit SHA of the code that was
 *  compiled. Not set for compilation results whose source is a workspace.
 */
@property(nonatomic, copy, nullable) NSString *resolvedGitCommitSha;

/**
 *  Immutable. The name of the workspace to compile. Must be in the format
 *  `projects/ * /locations/ * /repositories/ * /workspaces/ *`.
 */
@property(nonatomic, copy, nullable) NSString *workspace;

@end


/**
 *  Represents a single Dataform action in a compilation result.
 */
@interface GTLRDataform_CompilationResultAction : GTLRObject

/** The assertion executed by this action. */
@property(nonatomic, strong, nullable) GTLRDataform_Assertion *assertion;

/**
 *  The action's identifier if the project had been compiled without any
 *  overrides configured. Unique within the compilation result.
 */
@property(nonatomic, strong, nullable) GTLRDataform_Target *canonicalTarget;

/** The declaration declared by this action. */
@property(nonatomic, strong, nullable) GTLRDataform_Declaration *declaration;

/**
 *  The full path including filename in which this action is located, relative
 *  to the workspace root.
 */
@property(nonatomic, copy, nullable) NSString *filePath;

/** The database operations executed by this action. */
@property(nonatomic, strong, nullable) GTLRDataform_Operations *operations;

/** The database relation created/updated by this action. */
@property(nonatomic, strong, nullable) GTLRDataform_Relation *relation;

/** This action's identifier. Unique within the compilation result. */
@property(nonatomic, strong, nullable) GTLRDataform_Target *target;

@end


/**
 *  Represents a relation which is not managed by Dataform but which may be
 *  referenced by Dataform actions.
 */
@interface GTLRDataform_Declaration : GTLRObject

/**
 *  Descriptor for the relation and its columns. Used as documentation only,
 *  i.e. values here will result in no changes to the relation's metadata.
 */
@property(nonatomic, strong, nullable) GTLRDataform_RelationDescriptor *relationDescriptor;

@end


/**
 *  Represents a single entry in a workspace directory.
 */
@interface GTLRDataform_DirectoryEntry : GTLRObject

/** A child directory in the directory. */
@property(nonatomic, copy, nullable) NSString *directory;

/** A file in the directory. */
@property(nonatomic, copy, nullable) NSString *file;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRDataform_Empty : GTLRObject
@end


/**
 *  `FetchFileDiff` response message.
 */
@interface GTLRDataform_FetchFileDiffResponse : GTLRObject

/** The raw formatted Git diff for the file. */
@property(nonatomic, copy, nullable) NSString *formattedDiff;

@end


/**
 *  `FetchFileGitStatuses` response message.
 */
@interface GTLRDataform_FetchFileGitStatusesResponse : GTLRObject

/**
 *  A list of all files which have uncommitted Git changes. There will only be a
 *  single entry for any given file.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_UncommittedFileChange *> *uncommittedFileChanges;

@end


/**
 *  `FetchGitAheadBehind` response message.
 */
@interface GTLRDataform_FetchGitAheadBehindResponse : GTLRObject

/**
 *  The number of commits in the remote branch that are not in the workspace.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *commitsAhead;

/**
 *  The number of commits in the workspace that are not in the remote branch.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *commitsBehind;

@end


/**
 *  `FetchRemoteBranches` response message.
 */
@interface GTLRDataform_FetchRemoteBranchesResponse : GTLRObject

/** The remote repository's branch names. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *branches;

@end


/**
 *  Controls Git remote configuration for a repository.
 */
@interface GTLRDataform_GitRemoteSettings : GTLRObject

/**
 *  Required. The name of the Secret Manager secret version to use as an
 *  authentication token for Git operations. Must be in the format `projects/ *
 *  /secrets/ * /versions/ *`.
 */
@property(nonatomic, copy, nullable) NSString *authenticationTokenSecretVersion;

/** Required. The Git remote's default branch name. */
@property(nonatomic, copy, nullable) NSString *defaultBranch;

/**
 *  Output only. Indicates the status of the Git access token.
 *
 *  Likely values:
 *    @arg @c kGTLRDataform_GitRemoteSettings_TokenStatus_Invalid The token
 *        could not be used to authenticate against the Git remote. (Value:
 *        "INVALID")
 *    @arg @c kGTLRDataform_GitRemoteSettings_TokenStatus_NotFound The token
 *        could not be found in Secret Manager (or the Dataform Service Account
 *        did not have permission to access it). (Value: "NOT_FOUND")
 *    @arg @c kGTLRDataform_GitRemoteSettings_TokenStatus_TokenStatusUnspecified
 *        Default value. This value is unused. (Value:
 *        "TOKEN_STATUS_UNSPECIFIED")
 *    @arg @c kGTLRDataform_GitRemoteSettings_TokenStatus_Valid The token was
 *        used successfully to authenticate against the Git remote. (Value:
 *        "VALID")
 */
@property(nonatomic, copy, nullable) NSString *tokenStatus;

/** Required. The Git remote's URL. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  Contains settings for relations of type `INCREMENTAL_TABLE`.
 */
@interface GTLRDataform_IncrementalTableConfig : GTLRObject

/**
 *  SQL statements to be executed after inserting new rows into the relation.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *incrementalPostOperations;

/**
 *  SQL statements to be executed before inserting new rows into the relation.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *incrementalPreOperations;

/**
 *  The SELECT query which returns rows which should be inserted into the
 *  relation if it already exists and is not being refreshed.
 */
@property(nonatomic, copy, nullable) NSString *incrementalSelectQuery;

/**
 *  Whether this table should be protected from being refreshed.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *refreshDisabled;

/**
 *  A set of columns or SQL expressions used to define row uniqueness. If any
 *  duplicates are discovered (as defined by `unique_key_parts`), only the newly
 *  selected rows (as defined by `incremental_select_query`) will be included in
 *  the relation.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *uniqueKeyParts;

/**
 *  A SQL expression conditional used to limit the set of existing rows
 *  considered for a merge operation (see `unique_key_parts` for more
 *  information).
 */
@property(nonatomic, copy, nullable) NSString *updatePartitionFilter;

@end


/**
 *  `InstallNpmPackages` request message.
 */
@interface GTLRDataform_InstallNpmPackagesRequest : GTLRObject
@end


/**
 *  `InstallNpmPackages` response message.
 */
@interface GTLRDataform_InstallNpmPackagesResponse : GTLRObject
@end


/**
 *  Represents a time interval, encoded as a Timestamp start (inclusive) and a
 *  Timestamp end (exclusive). The start must be less than or equal to the end.
 *  When the start equals the end, the interval is empty (matches no time). When
 *  both start and end are unspecified, the interval matches any time.
 */
@interface GTLRDataform_Interval : GTLRObject

/**
 *  Optional. Exclusive end of the interval. If specified, a Timestamp matching
 *  this interval will have to be before the end.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Optional. Inclusive start of the interval. If specified, a Timestamp
 *  matching this interval will have to be the same or after the start.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  Includes various configuration options for a workflow invocation. If both
 *  `included_targets` and `included_tags` are unset, all actions will be
 *  included.
 */
@interface GTLRDataform_InvocationConfig : GTLRObject

/**
 *  Optional. When set to true, any incremental tables will be fully refreshed.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fullyRefreshIncrementalTablesEnabled;

/** Optional. The set of tags to include. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includedTags;

/** Optional. The set of action identifiers to include. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_Target *> *includedTargets;

/**
 *  Optional. When set to true, transitive dependencies of included actions will
 *  be executed.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *transitiveDependenciesIncluded;

/**
 *  Optional. When set to true, transitive dependents of included actions will
 *  be executed.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *transitiveDependentsIncluded;

@end


/**
 *  `ListCompilationResults` response message.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "compilationResults" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDataform_ListCompilationResultsResponse : GTLRCollectionObject

/**
 *  List of compilation results.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_CompilationResult *> *compilationResults;

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations which could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDataform_ListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_Location *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  `ListReleaseConfigs` response message.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "releaseConfigs" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRDataform_ListReleaseConfigsResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of release configs.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_ReleaseConfig *> *releaseConfigs;

/** Locations which could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  `ListRepositories` response message.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "repositories" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDataform_ListRepositoriesResponse : GTLRCollectionObject

/**
 *  A token which can be sent as `page_token` to retrieve the next page. If this
 *  field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of repositories.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_Repository *> *repositories;

/** Locations which could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

@end


/**
 *  `ListWorkflowConfigs` response message.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workflowConfigs" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRDataform_ListWorkflowConfigsResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations which could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  List of workflow configs.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_WorkflowConfig *> *workflowConfigs;

@end


/**
 *  `ListWorkflowInvocations` response message.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workflowInvocations" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDataform_ListWorkflowInvocationsResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations which could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  List of workflow invocations.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_WorkflowInvocation *> *workflowInvocations;

@end


/**
 *  `ListWorkspaces` response message.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workspaces" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDataform_ListWorkspacesResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Locations which could not be reached. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  List of workspaces.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_Workspace *> *workspaces;

@end


/**
 *  A resource that represents Google Cloud Platform location.
 */
@interface GTLRDataform_Location : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name. For
 *  example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRDataform_Location_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRDataform_Location_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations. For
 *  example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDataform_Location_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDataform_Location_Metadata : GTLRObject
@end


/**
 *  `MakeDirectory` request message.
 */
@interface GTLRDataform_MakeDirectoryRequest : GTLRObject

/**
 *  Required. The directory's full path including directory name, relative to
 *  the workspace root.
 */
@property(nonatomic, copy, nullable) NSString *path;

@end


/**
 *  `MakeDirectory` response message.
 */
@interface GTLRDataform_MakeDirectoryResponse : GTLRObject
@end


/**
 *  `MoveDirectory` request message.
 */
@interface GTLRDataform_MoveDirectoryRequest : GTLRObject

/**
 *  Required. The new path for the directory including directory name, rooted at
 *  workspace root.
 */
@property(nonatomic, copy, nullable) NSString *newPath NS_RETURNS_NOT_RETAINED;

/**
 *  Required. The directory's full path including directory name, relative to
 *  the workspace root.
 */
@property(nonatomic, copy, nullable) NSString *path;

@end


/**
 *  `MoveDirectory` response message.
 */
@interface GTLRDataform_MoveDirectoryResponse : GTLRObject
@end


/**
 *  `MoveFile` request message.
 */
@interface GTLRDataform_MoveFileRequest : GTLRObject

/**
 *  Required. The file's new path including filename, relative to the workspace
 *  root.
 */
@property(nonatomic, copy, nullable) NSString *newPath NS_RETURNS_NOT_RETAINED;

/**
 *  Required. The file's full path including filename, relative to the workspace
 *  root.
 */
@property(nonatomic, copy, nullable) NSString *path;

@end


/**
 *  `MoveFile` response message.
 */
@interface GTLRDataform_MoveFileResponse : GTLRObject
@end


/**
 *  Represents the metadata of the long-running operation.
 */
@interface GTLRDataform_OperationMetadata : GTLRObject

/** Output only. API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/**
 *  Output only. Identifies whether the user has requested cancellation of the
 *  operation. Operations that have been cancelled successfully have
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cancelRequested;

/** Output only. The time the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. The time the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** Output only. Human-readable status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusDetail;

/**
 *  Output only. Server-defined resource path for the target of the operation.
 */
@property(nonatomic, copy, nullable) NSString *target;

/** Output only. Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  Represents a list of arbitrary database operations.
 */
@interface GTLRDataform_Operations : GTLRObject

/** A list of actions that this action depends on. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_Target *> *dependencyTargets;

/**
 *  Whether this action is disabled (i.e. should not be run).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/**
 *  Whether these operations produce an output relation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hasOutput;

/**
 *  A list of arbitrary SQL statements that will be executed without alteration.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *queries;

/**
 *  Descriptor for any output relation and its columns. Only set if `has_output`
 *  is true.
 */
@property(nonatomic, strong, nullable) GTLRDataform_RelationDescriptor *relationDescriptor;

/** Arbitrary, user-defined tags on this action. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tags;

@end


/**
 *  `PullGitCommits` request message.
 */
@interface GTLRDataform_PullGitCommitsRequest : GTLRObject

/**
 *  Required. The author of any merge commit which may be created as a result of
 *  merging fetched Git commits into this workspace.
 */
@property(nonatomic, strong, nullable) GTLRDataform_CommitAuthor *author;

/**
 *  Optional. The name of the branch in the Git remote from which to pull
 *  commits. If left unset, the repository's default branch name will be used.
 */
@property(nonatomic, copy, nullable) NSString *remoteBranch;

@end


/**
 *  `PushGitCommits` request message.
 */
@interface GTLRDataform_PushGitCommitsRequest : GTLRObject

/**
 *  Optional. The name of the branch in the Git remote to which commits should
 *  be pushed. If left unset, the repository's default branch name will be used.
 */
@property(nonatomic, copy, nullable) NSString *remoteBranch;

@end


/**
 *  `QueryCompilationResultActions` response message.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "compilationResultActions" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDataform_QueryCompilationResultActionsResponse : GTLRCollectionObject

/**
 *  List of compilation result actions.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_CompilationResultAction *> *compilationResultActions;

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  `QueryDirectoryContents` response message.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "directoryEntries" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRDataform_QueryDirectoryContentsResponse : GTLRCollectionObject

/**
 *  List of entries in the directory.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_DirectoryEntry *> *directoryEntries;

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  `QueryWorkflowInvocationActions` response message.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workflowInvocationActions" property. If returned as the result of
 *        a query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRDataform_QueryWorkflowInvocationActionsResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of workflow invocation actions.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_WorkflowInvocationAction *> *workflowInvocationActions;

@end


/**
 *  `ReadFile` response message.
 */
@interface GTLRDataform_ReadFileResponse : GTLRObject

/**
 *  The file's contents.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fileContents;

@end


/**
 *  Represents a database relation.
 */
@interface GTLRDataform_Relation : GTLRObject

/**
 *  Additional options that will be provided as key/value pairs into the options
 *  clause of a create table/view statement. See
 *  https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language
 *  for more information on which options are supported.
 */
@property(nonatomic, strong, nullable) GTLRDataform_Relation_AdditionalOptions *additionalOptions;

/** A list of columns or SQL expressions used to cluster the table. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *clusterExpressions;

/** A list of actions that this action depends on. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_Target *> *dependencyTargets;

/**
 *  Whether this action is disabled (i.e. should not be run).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/**
 *  Configures `INCREMENTAL_TABLE` settings for this relation. Only set if
 *  `relation_type` is `INCREMENTAL_TABLE`.
 */
@property(nonatomic, strong, nullable) GTLRDataform_IncrementalTableConfig *incrementalTableConfig;

/**
 *  Sets the partition expiration in days.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partitionExpirationDays;

/** The SQL expression used to partition the relation. */
@property(nonatomic, copy, nullable) NSString *partitionExpression;

/** SQL statements to be executed after creating the relation. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *postOperations;

/** SQL statements to be executed before creating the relation. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *preOperations;

/** Descriptor for the relation and its columns. */
@property(nonatomic, strong, nullable) GTLRDataform_RelationDescriptor *relationDescriptor;

/**
 *  The type of this relation.
 *
 *  Likely values:
 *    @arg @c kGTLRDataform_Relation_RelationType_IncrementalTable The relation
 *        is an incrementalized table. (Value: "INCREMENTAL_TABLE")
 *    @arg @c kGTLRDataform_Relation_RelationType_MaterializedView The relation
 *        is a materialized view. (Value: "MATERIALIZED_VIEW")
 *    @arg @c kGTLRDataform_Relation_RelationType_RelationTypeUnspecified
 *        Default value. This value is unused. (Value:
 *        "RELATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRDataform_Relation_RelationType_Table The relation is a table.
 *        (Value: "TABLE")
 *    @arg @c kGTLRDataform_Relation_RelationType_View The relation is a view.
 *        (Value: "VIEW")
 */
@property(nonatomic, copy, nullable) NSString *relationType;

/**
 *  Specifies whether queries on this table must include a predicate filter that
 *  filters on the partitioning column.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requirePartitionFilter;

/** The SELECT query which returns rows which this relation should contain. */
@property(nonatomic, copy, nullable) NSString *selectQuery;

/** Arbitrary, user-defined tags on this action. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tags;

@end


/**
 *  Additional options that will be provided as key/value pairs into the options
 *  clause of a create table/view statement. See
 *  https://cloud.google.com/bigquery/docs/reference/standard-sql/data-definition-language
 *  for more information on which options are supported.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDataform_Relation_AdditionalOptions : GTLRObject
@end


/**
 *  Describes a relation and its columns.
 */
@interface GTLRDataform_RelationDescriptor : GTLRObject

/** A set of BigQuery labels that should be applied to the relation. */
@property(nonatomic, strong, nullable) GTLRDataform_RelationDescriptor_BigqueryLabels *bigqueryLabels;

/** A list of descriptions of columns within the relation. */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_ColumnDescriptor *> *columns;

/**
 *  A text description of the relation.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

@end


/**
 *  A set of BigQuery labels that should be applied to the relation.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRDataform_RelationDescriptor_BigqueryLabels : GTLRObject
@end


/**
 *  Represents a Dataform release configuration.
 */
@interface GTLRDataform_ReleaseConfig : GTLRObject

/**
 *  Optional. If set, fields of `code_compilation_config` override the default
 *  compilation settings that are specified in dataform.json.
 */
@property(nonatomic, strong, nullable) GTLRDataform_CodeCompilationConfig *codeCompilationConfig;

/**
 *  Optional. Optional schedule (in cron format) for automatic creation of
 *  compilation results.
 */
@property(nonatomic, copy, nullable) NSString *cronSchedule;

/**
 *  Required. Git commit/tag/branch name at which the repository should be
 *  compiled. Must exist in the remote repository. Examples: - a commit SHA:
 *  `12ade345` - a tag: `tag1` - a branch name: `branch1`
 */
@property(nonatomic, copy, nullable) NSString *gitCommitish;

/** Output only. The release config's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Records of the 10 most recent scheduled release attempts.
 *  Updated whenever automatic creation of a compilation result is triggered by
 *  cron_schedule.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_ScheduledReleaseRecord *> *recentScheduledReleaseRecords;

/**
 *  Optional. The name of the currently released compilation result for this
 *  release config. This value is updated when a compilation result is created
 *  from this release config, or when this resource is updated by API call
 *  (perhaps to roll back to an earlier release). The compilation result must
 *  have been created using this release config. Must be in the format
 *  `projects/ * /locations/ * /repositories/ * /compilationResults/ *`.
 */
@property(nonatomic, copy, nullable) NSString *releaseCompilationResult;

/**
 *  Optional. Specifies the time zone to be used when interpreting
 *  cron_schedule. Must be a time zone name from the time zone database
 *  (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left
 *  unspecified, the default is UTC.
 */
@property(nonatomic, copy, nullable) NSString *timeZone;

@end


/**
 *  `RemoveDirectory` request message.
 */
@interface GTLRDataform_RemoveDirectoryRequest : GTLRObject

/**
 *  Required. The directory's full path including directory name, relative to
 *  the workspace root.
 */
@property(nonatomic, copy, nullable) NSString *path;

@end


/**
 *  `RemoveFile` request message.
 */
@interface GTLRDataform_RemoveFileRequest : GTLRObject

/**
 *  Required. The file's full path including filename, relative to the workspace
 *  root.
 */
@property(nonatomic, copy, nullable) NSString *path;

@end


/**
 *  Represents a Dataform Git repository.
 */
@interface GTLRDataform_Repository : GTLRObject

/**
 *  Optional. If set, configures this repository to be linked to a Git remote.
 */
@property(nonatomic, strong, nullable) GTLRDataform_GitRemoteSettings *gitRemoteSettings;

/** Output only. The repository's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The name of the Secret Manager secret version to be used to
 *  interpolate variables into the .npmrc file for package installation
 *  operations. Must be in the format `projects/ * /secrets/ * /versions/ *`.
 *  The file itself must be in a JSON format.
 */
@property(nonatomic, copy, nullable) NSString *npmrcEnvironmentVariablesSecretVersion;

@end


/**
 *  `ResetWorkspaceChanges` request message.
 */
@interface GTLRDataform_ResetWorkspaceChangesRequest : GTLRObject

/**
 *  Optional. If set to true, untracked files will be deleted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clean;

/**
 *  Optional. Full file paths to reset back to their committed state including
 *  filename, rooted at workspace root. If left empty, all files will be reset.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *paths;

@end


/**
 *  A record of an attempt to create a workflow invocation for this workflow
 *  config.
 */
@interface GTLRDataform_ScheduledExecutionRecord : GTLRObject

/**
 *  The error status encountered upon this attempt to create the workflow
 *  invocation, if the attempt was unsuccessful.
 */
@property(nonatomic, strong, nullable) GTLRDataform_Status *errorStatus;

/** The timestamp of this execution attempt. */
@property(nonatomic, strong, nullable) GTLRDateTime *executionTime;

/**
 *  The name of the created workflow invocation, if one was successfully
 *  created. Must be in the format `projects/ * /locations/ * /repositories/ *
 *  /workflowInvocations/ *`.
 */
@property(nonatomic, copy, nullable) NSString *workflowInvocation;

@end


/**
 *  A record of an attempt to create a compilation result for this release
 *  config.
 */
@interface GTLRDataform_ScheduledReleaseRecord : GTLRObject

/**
 *  The name of the created compilation result, if one was successfully created.
 *  Must be in the format `projects/ * /locations/ * /repositories/ *
 *  /compilationResults/ *`.
 */
@property(nonatomic, copy, nullable) NSString *compilationResult;

/**
 *  The error status encountered upon this attempt to create the compilation
 *  result, if the attempt was unsuccessful.
 */
@property(nonatomic, strong, nullable) GTLRDataform_Status *errorStatus;

/** The timestamp of this release attempt. */
@property(nonatomic, strong, nullable) GTLRDateTime *releaseTime;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRDataform_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDataform_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRDataform_Status_Details_Item : GTLRObject
@end


/**
 *  Represents an action identifier. If the action writes output, the output
 *  will be written to the referenced database object.
 */
@interface GTLRDataform_Target : GTLRObject

/** The action's database (Google Cloud project ID) . */
@property(nonatomic, copy, nullable) NSString *database;

/** The action's name, within `database` and `schema`. */
@property(nonatomic, copy, nullable) NSString *name;

/** The action's schema (BigQuery dataset ID), within `database`. */
@property(nonatomic, copy, nullable) NSString *schema;

@end


/**
 *  Represents the Git state of a file with uncommitted changes.
 */
@interface GTLRDataform_UncommittedFileChange : GTLRObject

/**
 *  The file's full path including filename, relative to the workspace root.
 */
@property(nonatomic, copy, nullable) NSString *path;

/**
 *  Indicates the status of the file.
 *
 *  Likely values:
 *    @arg @c kGTLRDataform_UncommittedFileChange_State_Added The file has been
 *        newly added. (Value: "ADDED")
 *    @arg @c kGTLRDataform_UncommittedFileChange_State_Deleted The file has
 *        been deleted. (Value: "DELETED")
 *    @arg @c kGTLRDataform_UncommittedFileChange_State_HasConflicts The file
 *        contains merge conflicts. (Value: "HAS_CONFLICTS")
 *    @arg @c kGTLRDataform_UncommittedFileChange_State_Modified The file has
 *        been modified. (Value: "MODIFIED")
 *    @arg @c kGTLRDataform_UncommittedFileChange_State_StateUnspecified Default
 *        value. This value is unused. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Represents a Dataform workflow configuration.
 */
@interface GTLRDataform_WorkflowConfig : GTLRObject

/**
 *  Optional. Optional schedule (in cron format) for automatic execution of this
 *  workflow config.
 */
@property(nonatomic, copy, nullable) NSString *cronSchedule;

/** Optional. If left unset, a default InvocationConfig will be used. */
@property(nonatomic, strong, nullable) GTLRDataform_InvocationConfig *invocationConfig;

/** Output only. The workflow config's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Records of the 10 most recent scheduled execution attempts.
 *  Updated whenever automatic creation of a compilation result is triggered by
 *  cron_schedule.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDataform_ScheduledExecutionRecord *> *recentScheduledExecutionRecords;

/**
 *  Required. The name of the release config whose release_compilation_result
 *  should be executed. Must be in the format `projects/ * /locations/ *
 *  /repositories/ * /releaseConfigs/ *`.
 */
@property(nonatomic, copy, nullable) NSString *releaseConfig;

/**
 *  Optional. Specifies the time zone to be used when interpreting
 *  cron_schedule. Must be a time zone name from the time zone database
 *  (https://en.wikipedia.org/wiki/List_of_tz_database_time_zones). If left
 *  unspecified, the default is UTC.
 */
@property(nonatomic, copy, nullable) NSString *timeZone;

@end


/**
 *  Represents a single invocation of a compilation result.
 */
@interface GTLRDataform_WorkflowInvocation : GTLRObject

/**
 *  Immutable. The name of the compilation result to compile. Must be in the
 *  format `projects/ * /locations/ * /repositories/ * /compilationResults/ *`.
 */
@property(nonatomic, copy, nullable) NSString *compilationResult;

/** Immutable. If left unset, a default InvocationConfig will be used. */
@property(nonatomic, strong, nullable) GTLRDataform_InvocationConfig *invocationConfig;

/** Output only. This workflow invocation's timing details. */
@property(nonatomic, strong, nullable) GTLRDataform_Interval *invocationTiming;

/** Output only. The workflow invocation's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. This workflow invocation's current state.
 *
 *  Likely values:
 *    @arg @c kGTLRDataform_WorkflowInvocation_State_Canceling The workflow
 *        invocation is being cancelled, but some actions are still running.
 *        (Value: "CANCELING")
 *    @arg @c kGTLRDataform_WorkflowInvocation_State_Cancelled The workflow
 *        invocation was cancelled. A terminal state. (Value: "CANCELLED")
 *    @arg @c kGTLRDataform_WorkflowInvocation_State_Failed The workflow
 *        invocation failed. A terminal state. (Value: "FAILED")
 *    @arg @c kGTLRDataform_WorkflowInvocation_State_Running The workflow
 *        invocation is currently running. (Value: "RUNNING")
 *    @arg @c kGTLRDataform_WorkflowInvocation_State_StateUnspecified Default
 *        value. This value is unused. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRDataform_WorkflowInvocation_State_Succeeded The workflow
 *        invocation succeeded. A terminal state. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Immutable. The name of the workflow config to invoke. Must be in the format
 *  `projects/ * /locations/ * /repositories/ * /workflowConfigs/ *`.
 */
@property(nonatomic, copy, nullable) NSString *workflowConfig;

@end


/**
 *  Represents a single action in a workflow invocation.
 */
@interface GTLRDataform_WorkflowInvocationAction : GTLRObject

/** Output only. The workflow action's bigquery action details. */
@property(nonatomic, strong, nullable) GTLRDataform_BigQueryAction *bigqueryAction;

/**
 *  Output only. The action's identifier if the project had been compiled
 *  without any overrides configured. Unique within the compilation result.
 */
@property(nonatomic, strong, nullable) GTLRDataform_Target *canonicalTarget;

/**
 *  Output only. If and only if action's state is FAILED a failure reason is
 *  set.
 */
@property(nonatomic, copy, nullable) NSString *failureReason;

/**
 *  Output only. This action's timing details. `start_time` will be set if the
 *  action is in [RUNNING, SUCCEEDED, CANCELLED, FAILED] state. `end_time` will
 *  be set if the action is in [SUCCEEDED, CANCELLED, FAILED] state.
 */
@property(nonatomic, strong, nullable) GTLRDataform_Interval *invocationTiming;

/**
 *  Output only. This action's current state.
 *
 *  Likely values:
 *    @arg @c kGTLRDataform_WorkflowInvocationAction_State_Cancelled The action
 *        was cancelled. A terminal state. (Value: "CANCELLED")
 *    @arg @c kGTLRDataform_WorkflowInvocationAction_State_Disabled Execution of
 *        the action was disabled as per the configuration of the corresponding
 *        compilation result action. A terminal state. (Value: "DISABLED")
 *    @arg @c kGTLRDataform_WorkflowInvocationAction_State_Failed The action
 *        failed. A terminal state. (Value: "FAILED")
 *    @arg @c kGTLRDataform_WorkflowInvocationAction_State_Pending The action
 *        has not yet been considered for invocation. (Value: "PENDING")
 *    @arg @c kGTLRDataform_WorkflowInvocationAction_State_Running The action is
 *        currently running. (Value: "RUNNING")
 *    @arg @c kGTLRDataform_WorkflowInvocationAction_State_Skipped Execution of
 *        the action was skipped because upstream dependencies did not all
 *        complete successfully. A terminal state. (Value: "SKIPPED")
 *    @arg @c kGTLRDataform_WorkflowInvocationAction_State_Succeeded The action
 *        succeeded. A terminal state. (Value: "SUCCEEDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. This action's identifier. Unique within the workflow
 *  invocation.
 */
@property(nonatomic, strong, nullable) GTLRDataform_Target *target;

@end


/**
 *  Represents a Dataform Git workspace.
 */
@interface GTLRDataform_Workspace : GTLRObject

/** Output only. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  `WriteFile` request message.
 */
@interface GTLRDataform_WriteFileRequest : GTLRObject

/**
 *  Required. The file's contents.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *contents;

/** Required. The file. */
@property(nonatomic, copy, nullable) NSString *path;

@end


/**
 *  `WriteFile` response message.
 */
@interface GTLRDataform_WriteFileResponse : GTLRObject
@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
