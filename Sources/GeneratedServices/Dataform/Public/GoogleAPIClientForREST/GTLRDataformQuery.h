// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Dataform API (dataform/v1beta1)
// Description:
//   Service to develop, version control, and operationalize SQL pipelines in
//   BigQuery.
// Documentation:
//   https://cloud.google.com/dataform/docs

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRDataformObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Dataform query classes.
 */
@interface GTLRDataformQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets information about a location.
 *
 *  Method: dataform.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsGet : GTLRDataformQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get default config for a given project and location.
 *
 *  Method: dataform.projects.locations.getConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsGetConfig : GTLRDataformQuery

/** Required. The config name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_Config.
 *
 *  Get default config for a given project and location.
 *
 *  @param name Required. The config name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsGetConfig
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: dataform.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsList : GTLRDataformQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDataform_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Applies a Git commit to a Repository. The Repository must not have a value
 *  for `git_remote_settings.url`.
 *
 *  Method: dataform.projects.locations.repositories.commit
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesCommit : GTLRDataformQuery

/** Required. The repository's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_CommitRepositoryChangesResponse.
 *
 *  Applies a Git commit to a Repository. The Repository must not have a value
 *  for `git_remote_settings.url`.
 *
 *  @param object The @c GTLRDataform_CommitRepositoryChangesRequest to include
 *    in the query.
 *  @param name Required. The repository's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesCommit
 */
+ (instancetype)queryWithObject:(GTLRDataform_CommitRepositoryChangesRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new CompilationResult in a given project and location.
 *
 *  Method: dataform.projects.locations.repositories.compilationResults.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesCompilationResultsCreate : GTLRDataformQuery

/**
 *  Required. The repository in which to create the compilation result. Must be
 *  in the format `projects/ * /locations/ * /repositories/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataform_CompilationResult.
 *
 *  Creates a new CompilationResult in a given project and location.
 *
 *  @param object The @c GTLRDataform_CompilationResult to include in the query.
 *  @param parent Required. The repository in which to create the compilation
 *    result. Must be in the format `projects/ * /locations/ * /repositories/
 *    *`.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesCompilationResultsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataform_CompilationResult *)object
                         parent:(NSString *)parent;

@end

/**
 *  Fetches a single CompilationResult.
 *
 *  Method: dataform.projects.locations.repositories.compilationResults.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesCompilationResultsGet : GTLRDataformQuery

/** Required. The compilation result's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_CompilationResult.
 *
 *  Fetches a single CompilationResult.
 *
 *  @param name Required. The compilation result's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesCompilationResultsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists CompilationResults in a given Repository.
 *
 *  Method: dataform.projects.locations.repositories.compilationResults.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesCompilationResultsList : GTLRDataformQuery

/** Optional. Filter for the returned list. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. This field only supports ordering by `name` and `create_time`. If
 *  unspecified, the server will choose the ordering. If specified, the default
 *  order is ascending for the `name` field.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Maximum number of compilation results to return. The server may
 *  return fewer items than requested. If unspecified, the server will pick an
 *  appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token received from a previous `ListCompilationResults` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListCompilationResults`, with the exception of
 *  `page_size`, must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The repository in which to list compilation results. Must be in
 *  the format `projects/ * /locations/ * /repositories/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataform_ListCompilationResultsResponse.
 *
 *  Lists CompilationResults in a given Repository.
 *
 *  @param parent Required. The repository in which to list compilation results.
 *    Must be in the format `projects/ * /locations/ * /repositories/ *`.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesCompilationResultsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Returns CompilationResultActions in a given CompilationResult.
 *
 *  Method: dataform.projects.locations.repositories.compilationResults.query
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesCompilationResultsQuery : GTLRDataformQuery

/**
 *  Optional. Optional filter for the returned list. Filtering is only currently
 *  supported on the `file_path` field.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Required. The compilation result's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Maximum number of compilation results to return. The server may
 *  return fewer items than requested. If unspecified, the server will pick an
 *  appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token received from a previous
 *  `QueryCompilationResultActions` call. Provide this to retrieve the
 *  subsequent page. When paginating, all other parameters provided to
 *  `QueryCompilationResultActions`, with the exception of `page_size`, must
 *  match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDataform_QueryCompilationResultActionsResponse.
 *
 *  Returns CompilationResultActions in a given CompilationResult.
 *
 *  @param name Required. The compilation result's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesCompilationResultsQuery
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Computes a Repository's Git access token status.
 *
 *  Method: dataform.projects.locations.repositories.computeAccessTokenStatus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesComputeAccessTokenStatus : GTLRDataformQuery

/** Required. The repository's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_ComputeRepositoryAccessTokenStatusResponse.
 *
 *  Computes a Repository's Git access token status.
 *
 *  @param name Required. The repository's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesComputeAccessTokenStatus
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new Repository in a given project and location.
 *
 *  Method: dataform.projects.locations.repositories.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesCreate : GTLRDataformQuery

/**
 *  Required. The location in which to create the repository. Must be in the
 *  format `projects/ * /locations/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID to use for the repository, which will become the final
 *  component of the repository's resource name.
 */
@property(nonatomic, copy, nullable) NSString *repositoryId;

/**
 *  Fetches a @c GTLRDataform_Repository.
 *
 *  Creates a new Repository in a given project and location.
 *
 *  @param object The @c GTLRDataform_Repository to include in the query.
 *  @param parent Required. The location in which to create the repository. Must
 *    be in the format `projects/ * /locations/ *`.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesCreate
 */
+ (instancetype)queryWithObject:(GTLRDataform_Repository *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Repository.
 *
 *  Method: dataform.projects.locations.repositories.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesDelete : GTLRDataformQuery

/**
 *  If set to true, any child resources of this repository will also be deleted.
 *  (Otherwise, the request will only succeed if the repository has no child
 *  resources.)
 */
@property(nonatomic, assign) BOOL force;

/** Required. The repository's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_Empty.
 *
 *  Deletes a single Repository.
 *
 *  @param name Required. The repository's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Fetches a Repository's history of commits. The Repository must not have a
 *  value for `git_remote_settings.url`.
 *
 *  Method: dataform.projects.locations.repositories.fetchHistory
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesFetchHistory : GTLRDataformQuery

/** Required. The repository's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Maximum number of commits to return. The server may return fewer
 *  items than requested. If unspecified, the server will pick an appropriate
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token received from a previous `FetchRepositoryHistory` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `FetchRepositoryHistory`, with the exception of
 *  `page_size`, must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDataform_FetchRepositoryHistoryResponse.
 *
 *  Fetches a Repository's history of commits. The Repository must not have a
 *  value for `git_remote_settings.url`.
 *
 *  @param name Required. The repository's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesFetchHistory
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Fetches a Repository's remote branches.
 *
 *  Method: dataform.projects.locations.repositories.fetchRemoteBranches
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesFetchRemoteBranches : GTLRDataformQuery

/** Required. The repository's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_FetchRemoteBranchesResponse.
 *
 *  Fetches a Repository's remote branches.
 *
 *  @param name Required. The repository's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesFetchRemoteBranches
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Fetches a single Repository.
 *
 *  Method: dataform.projects.locations.repositories.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesGet : GTLRDataformQuery

/** Required. The repository's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_Repository.
 *
 *  Fetches a single Repository.
 *
 *  @param name Required. The repository's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: dataform.projects.locations.repositories.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesGetIamPolicy : GTLRDataformQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataform_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists Repositories in a given project and location.
 *
 *  Method: dataform.projects.locations.repositories.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesList : GTLRDataformQuery

/** Optional. Filter for the returned list. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. This field only supports ordering by `name`. If unspecified, the
 *  server will choose the ordering. If specified, the default order is
 *  ascending for the `name` field.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Maximum number of repositories to return. The server may return
 *  fewer items than requested. If unspecified, the server will pick an
 *  appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token received from a previous `ListRepositories` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListRepositories`, with the exception of
 *  `page_size`, must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The location in which to list repositories. Must be in the format
 *  `projects/ * /locations/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataform_ListRepositoriesResponse.
 *
 *  Lists Repositories in a given project and location.
 *
 *  @param parent Required. The location in which to list repositories. Must be
 *    in the format `projects/ * /locations/ *`.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a single Repository. *Note:* This method does not fully implement
 *  AIP/134. In particular: 1. The wildcard entry (***) is treated as a bad
 *  request 2. When the *field_mask* is omitted, instead of only updating the
 *  set fields, the request is treated as a full update on all modifiable fields
 *
 *  Method: dataform.projects.locations.repositories.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesPatch : GTLRDataformQuery

/** Identifier. The repository's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Specifies the fields to be updated in the repository. If left
 *  unset, all fields will be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataform_Repository.
 *
 *  Updates a single Repository. *Note:* This method does not fully implement
 *  AIP/134. In particular: 1. The wildcard entry (***) is treated as a bad
 *  request 2. When the *field_mask* is omitted, instead of only updating the
 *  set fields, the request is treated as a full update on all modifiable fields
 *
 *  @param object The @c GTLRDataform_Repository to include in the query.
 *  @param name Identifier. The repository's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesPatch
 */
+ (instancetype)queryWithObject:(GTLRDataform_Repository *)object
                           name:(NSString *)name;

@end

/**
 *  Returns the contents of a given Repository directory. The Repository must
 *  not have a value for `git_remote_settings.url`.
 *
 *  Method: dataform.projects.locations.repositories.queryDirectoryContents
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesQueryDirectoryContents : GTLRDataformQuery

/**
 *  Optional. The Commit SHA for the commit to query from. If unset, the
 *  directory will be queried from HEAD.
 */
@property(nonatomic, copy, nullable) NSString *commitSha;

/** Required. The repository's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Maximum number of paths to return. The server may return fewer
 *  items than requested. If unspecified, the server will pick an appropriate
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token received from a previous
 *  `QueryRepositoryDirectoryContents` call. Provide this to retrieve the
 *  subsequent page. When paginating, all other parameters provided to
 *  `QueryRepositoryDirectoryContents`, with the exception of `page_size`, must
 *  match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Optional. The directory's full path including directory name, relative to
 *  root. If left unset, the root is used.
 */
@property(nonatomic, copy, nullable) NSString *path;

/**
 *  Fetches a @c GTLRDataform_QueryRepositoryDirectoryContentsResponse.
 *
 *  Returns the contents of a given Repository directory. The Repository must
 *  not have a value for `git_remote_settings.url`.
 *
 *  @param name Required. The repository's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesQueryDirectoryContents
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the contents of a file (inside a Repository). The Repository must
 *  not have a value for `git_remote_settings.url`.
 *
 *  Method: dataform.projects.locations.repositories.readFile
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesReadFile : GTLRDataformQuery

/**
 *  Optional. The commit SHA for the commit to read from. If unset, the file
 *  will be read from HEAD.
 */
@property(nonatomic, copy, nullable) NSString *commitSha;

/** Required. The repository's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Full file path to read including filename, from repository root.
 */
@property(nonatomic, copy, nullable) NSString *path;

/**
 *  Fetches a @c GTLRDataform_ReadRepositoryFileResponse.
 *
 *  Returns the contents of a file (inside a Repository). The Repository must
 *  not have a value for `git_remote_settings.url`.
 *
 *  @param name Required. The repository's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesReadFile
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new ReleaseConfig in a given Repository.
 *
 *  Method: dataform.projects.locations.repositories.releaseConfigs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesReleaseConfigsCreate : GTLRDataformQuery

/**
 *  Required. The repository in which to create the release config. Must be in
 *  the format `projects/ * /locations/ * /repositories/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID to use for the release config, which will become the final
 *  component of the release config's resource name.
 */
@property(nonatomic, copy, nullable) NSString *releaseConfigId;

/**
 *  Fetches a @c GTLRDataform_ReleaseConfig.
 *
 *  Creates a new ReleaseConfig in a given Repository.
 *
 *  @param object The @c GTLRDataform_ReleaseConfig to include in the query.
 *  @param parent Required. The repository in which to create the release
 *    config. Must be in the format `projects/ * /locations/ * /repositories/
 *    *`.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesReleaseConfigsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataform_ReleaseConfig *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single ReleaseConfig.
 *
 *  Method: dataform.projects.locations.repositories.releaseConfigs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesReleaseConfigsDelete : GTLRDataformQuery

/** Required. The release config's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_Empty.
 *
 *  Deletes a single ReleaseConfig.
 *
 *  @param name Required. The release config's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesReleaseConfigsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Fetches a single ReleaseConfig.
 *
 *  Method: dataform.projects.locations.repositories.releaseConfigs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesReleaseConfigsGet : GTLRDataformQuery

/** Required. The release config's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_ReleaseConfig.
 *
 *  Fetches a single ReleaseConfig.
 *
 *  @param name Required. The release config's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesReleaseConfigsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists ReleaseConfigs in a given Repository.
 *
 *  Method: dataform.projects.locations.repositories.releaseConfigs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesReleaseConfigsList : GTLRDataformQuery

/**
 *  Optional. Maximum number of release configs to return. The server may return
 *  fewer items than requested. If unspecified, the server will pick an
 *  appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token received from a previous `ListReleaseConfigs` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListReleaseConfigs`, with the exception of
 *  `page_size`, must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The repository in which to list release configs. Must be in the
 *  format `projects/ * /locations/ * /repositories/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataform_ListReleaseConfigsResponse.
 *
 *  Lists ReleaseConfigs in a given Repository.
 *
 *  @param parent Required. The repository in which to list release configs.
 *    Must be in the format `projects/ * /locations/ * /repositories/ *`.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesReleaseConfigsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a single ReleaseConfig. *Note:* This method does not fully implement
 *  AIP/134. In particular: 1. The wildcard entry (***) is treated as a bad
 *  request 2. When the *field_mask* is omitted, instead of only updating the
 *  set fields, the request is treated as a full update on all modifiable fields
 *
 *  Method: dataform.projects.locations.repositories.releaseConfigs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesReleaseConfigsPatch : GTLRDataformQuery

/** Identifier. The release config's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Specifies the fields to be updated in the release config. If left
 *  unset, all fields will be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataform_ReleaseConfig.
 *
 *  Updates a single ReleaseConfig. *Note:* This method does not fully implement
 *  AIP/134. In particular: 1. The wildcard entry (***) is treated as a bad
 *  request 2. When the *field_mask* is omitted, instead of only updating the
 *  set fields, the request is treated as a full update on all modifiable fields
 *
 *  @param object The @c GTLRDataform_ReleaseConfig to include in the query.
 *  @param name Identifier. The release config's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesReleaseConfigsPatch
 */
+ (instancetype)queryWithObject:(GTLRDataform_ReleaseConfig *)object
                           name:(NSString *)name;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: dataform.projects.locations.repositories.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesSetIamPolicy : GTLRDataformQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataform_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRDataform_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataform_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: dataform.projects.locations.repositories.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesTestIamPermissions : GTLRDataformQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataform_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRDataform_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRDataform_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new WorkflowConfig in a given Repository.
 *
 *  Method: dataform.projects.locations.repositories.workflowConfigs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowConfigsCreate : GTLRDataformQuery

/**
 *  Required. The repository in which to create the workflow config. Must be in
 *  the format `projects/ * /locations/ * /repositories/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID to use for the workflow config, which will become the final
 *  component of the workflow config's resource name.
 */
@property(nonatomic, copy, nullable) NSString *workflowConfigId;

/**
 *  Fetches a @c GTLRDataform_WorkflowConfig.
 *
 *  Creates a new WorkflowConfig in a given Repository.
 *
 *  @param object The @c GTLRDataform_WorkflowConfig to include in the query.
 *  @param parent Required. The repository in which to create the workflow
 *    config. Must be in the format `projects/ * /locations/ * /repositories/
 *    *`.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowConfigsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataform_WorkflowConfig *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single WorkflowConfig.
 *
 *  Method: dataform.projects.locations.repositories.workflowConfigs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowConfigsDelete : GTLRDataformQuery

/** Required. The workflow config's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_Empty.
 *
 *  Deletes a single WorkflowConfig.
 *
 *  @param name Required. The workflow config's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowConfigsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Fetches a single WorkflowConfig.
 *
 *  Method: dataform.projects.locations.repositories.workflowConfigs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowConfigsGet : GTLRDataformQuery

/** Required. The workflow config's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_WorkflowConfig.
 *
 *  Fetches a single WorkflowConfig.
 *
 *  @param name Required. The workflow config's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowConfigsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists WorkflowConfigs in a given Repository.
 *
 *  Method: dataform.projects.locations.repositories.workflowConfigs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowConfigsList : GTLRDataformQuery

/**
 *  Optional. Maximum number of workflow configs to return. The server may
 *  return fewer items than requested. If unspecified, the server will pick an
 *  appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token received from a previous `ListWorkflowConfigs` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListWorkflowConfigs`, with the exception of
 *  `page_size`, must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The repository in which to list workflow configs. Must be in the
 *  format `projects/ * /locations/ * /repositories/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataform_ListWorkflowConfigsResponse.
 *
 *  Lists WorkflowConfigs in a given Repository.
 *
 *  @param parent Required. The repository in which to list workflow configs.
 *    Must be in the format `projects/ * /locations/ * /repositories/ *`.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowConfigsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a single WorkflowConfig. *Note:* This method does not fully
 *  implement AIP/134. In particular: 1. The wildcard entry (***) is treated as
 *  a bad request 2. When the *field_mask* is omitted, instead of only updating
 *  the set fields, the request is treated as a full update on all modifiable
 *  fields
 *
 *  Method: dataform.projects.locations.repositories.workflowConfigs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowConfigsPatch : GTLRDataformQuery

/** Identifier. The workflow config's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Specifies the fields to be updated in the workflow config. If left
 *  unset, all fields will be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataform_WorkflowConfig.
 *
 *  Updates a single WorkflowConfig. *Note:* This method does not fully
 *  implement AIP/134. In particular: 1. The wildcard entry (***) is treated as
 *  a bad request 2. When the *field_mask* is omitted, instead of only updating
 *  the set fields, the request is treated as a full update on all modifiable
 *  fields
 *
 *  @param object The @c GTLRDataform_WorkflowConfig to include in the query.
 *  @param name Identifier. The workflow config's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowConfigsPatch
 */
+ (instancetype)queryWithObject:(GTLRDataform_WorkflowConfig *)object
                           name:(NSString *)name;

@end

/**
 *  Requests cancellation of a running WorkflowInvocation.
 *
 *  Method: dataform.projects.locations.repositories.workflowInvocations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowInvocationsCancel : GTLRDataformQuery

/** Required. The workflow invocation resource's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_Empty.
 *
 *  Requests cancellation of a running WorkflowInvocation.
 *
 *  @param object The @c GTLRDataform_CancelWorkflowInvocationRequest to include
 *    in the query.
 *  @param name Required. The workflow invocation resource's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowInvocationsCancel
 */
+ (instancetype)queryWithObject:(GTLRDataform_CancelWorkflowInvocationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new WorkflowInvocation in a given Repository.
 *
 *  Method: dataform.projects.locations.repositories.workflowInvocations.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowInvocationsCreate : GTLRDataformQuery

/**
 *  Required. The repository in which to create the workflow invocation. Must be
 *  in the format `projects/ * /locations/ * /repositories/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataform_WorkflowInvocation.
 *
 *  Creates a new WorkflowInvocation in a given Repository.
 *
 *  @param object The @c GTLRDataform_WorkflowInvocation to include in the
 *    query.
 *  @param parent Required. The repository in which to create the workflow
 *    invocation. Must be in the format `projects/ * /locations/ *
 *    /repositories/ *`.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowInvocationsCreate
 */
+ (instancetype)queryWithObject:(GTLRDataform_WorkflowInvocation *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single WorkflowInvocation.
 *
 *  Method: dataform.projects.locations.repositories.workflowInvocations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowInvocationsDelete : GTLRDataformQuery

/** Required. The workflow invocation resource's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_Empty.
 *
 *  Deletes a single WorkflowInvocation.
 *
 *  @param name Required. The workflow invocation resource's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowInvocationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Fetches a single WorkflowInvocation.
 *
 *  Method: dataform.projects.locations.repositories.workflowInvocations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowInvocationsGet : GTLRDataformQuery

/** Required. The workflow invocation resource's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_WorkflowInvocation.
 *
 *  Fetches a single WorkflowInvocation.
 *
 *  @param name Required. The workflow invocation resource's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowInvocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists WorkflowInvocations in a given Repository.
 *
 *  Method: dataform.projects.locations.repositories.workflowInvocations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowInvocationsList : GTLRDataformQuery

/** Optional. Filter for the returned list. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. This field only supports ordering by `name`. If unspecified, the
 *  server will choose the ordering. If specified, the default order is
 *  ascending for the `name` field.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Maximum number of workflow invocations to return. The server may
 *  return fewer items than requested. If unspecified, the server will pick an
 *  appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token received from a previous `ListWorkflowInvocations`
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to `ListWorkflowInvocations`, with the exception
 *  of `page_size`, must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource of the WorkflowInvocation type. Must be in the
 *  format `projects/ * /locations/ * /repositories/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataform_ListWorkflowInvocationsResponse.
 *
 *  Lists WorkflowInvocations in a given Repository.
 *
 *  @param parent Required. The parent resource of the WorkflowInvocation type.
 *    Must be in the format `projects/ * /locations/ * /repositories/ *`.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowInvocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Returns WorkflowInvocationActions in a given WorkflowInvocation.
 *
 *  Method: dataform.projects.locations.repositories.workflowInvocations.query
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowInvocationsQuery : GTLRDataformQuery

/** Required. The workflow invocation's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Maximum number of workflow invocations to return. The server may
 *  return fewer items than requested. If unspecified, the server will pick an
 *  appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token received from a previous
 *  `QueryWorkflowInvocationActions` call. Provide this to retrieve the
 *  subsequent page. When paginating, all other parameters provided to
 *  `QueryWorkflowInvocationActions`, with the exception of `page_size`, must
 *  match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRDataform_QueryWorkflowInvocationActionsResponse.
 *
 *  Returns WorkflowInvocationActions in a given WorkflowInvocation.
 *
 *  @param name Required. The workflow invocation's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkflowInvocationsQuery
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Applies a Git commit for uncommitted files in a Workspace.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.commit
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesCommit : GTLRDataformQuery

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_Empty.
 *
 *  Applies a Git commit for uncommitted files in a Workspace.
 *
 *  @param object The @c GTLRDataform_CommitWorkspaceChangesRequest to include
 *    in the query.
 *  @param name Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesCommit
 */
+ (instancetype)queryWithObject:(GTLRDataform_CommitWorkspaceChangesRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new Workspace in a given Repository.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesCreate : GTLRDataformQuery

/**
 *  Required. The repository in which to create the workspace. Must be in the
 *  format `projects/ * /locations/ * /repositories/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. The ID to use for the workspace, which will become the final
 *  component of the workspace's resource name.
 */
@property(nonatomic, copy, nullable) NSString *workspaceId;

/**
 *  Fetches a @c GTLRDataform_Workspace.
 *
 *  Creates a new Workspace in a given Repository.
 *
 *  @param object The @c GTLRDataform_Workspace to include in the query.
 *  @param parent Required. The repository in which to create the workspace.
 *    Must be in the format `projects/ * /locations/ * /repositories/ *`.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesCreate
 */
+ (instancetype)queryWithObject:(GTLRDataform_Workspace *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single Workspace.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesDelete : GTLRDataformQuery

/** Required. The workspace resource's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_Empty.
 *
 *  Deletes a single Workspace.
 *
 *  @param name Required. The workspace resource's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Fetches Git diff for an uncommitted file in a Workspace.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.fetchFileDiff
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesFetchFileDiff : GTLRDataformQuery

/**
 *  Required. The file's full path including filename, relative to the workspace
 *  root.
 */
@property(nonatomic, copy, nullable) NSString *path;

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *workspace;

/**
 *  Fetches a @c GTLRDataform_FetchFileDiffResponse.
 *
 *  Fetches Git diff for an uncommitted file in a Workspace.
 *
 *  @param workspace Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesFetchFileDiff
 */
+ (instancetype)queryWithWorkspace:(NSString *)workspace;

@end

/**
 *  Fetches Git statuses for the files in a Workspace.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.fetchFileGitStatuses
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesFetchFileGitStatuses : GTLRDataformQuery

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_FetchFileGitStatusesResponse.
 *
 *  Fetches Git statuses for the files in a Workspace.
 *
 *  @param name Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesFetchFileGitStatuses
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Fetches Git ahead/behind against a remote branch.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.fetchGitAheadBehind
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesFetchGitAheadBehind : GTLRDataformQuery

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The name of the branch in the Git remote against which this
 *  workspace should be compared. If left unset, the repository's default branch
 *  name will be used.
 */
@property(nonatomic, copy, nullable) NSString *remoteBranch;

/**
 *  Fetches a @c GTLRDataform_FetchGitAheadBehindResponse.
 *
 *  Fetches Git ahead/behind against a remote branch.
 *
 *  @param name Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesFetchGitAheadBehind
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Fetches a single Workspace.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesGet : GTLRDataformQuery

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_Workspace.
 *
 *  Fetches a single Workspace.
 *
 *  @param name Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesGetIamPolicy : GTLRDataformQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataform_Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Installs dependency NPM packages (inside a Workspace).
 *
 *  Method: dataform.projects.locations.repositories.workspaces.installNpmPackages
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesInstallNpmPackages : GTLRDataformQuery

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *workspace;

/**
 *  Fetches a @c GTLRDataform_InstallNpmPackagesResponse.
 *
 *  Installs dependency NPM packages (inside a Workspace).
 *
 *  @param object The @c GTLRDataform_InstallNpmPackagesRequest to include in
 *    the query.
 *  @param workspace Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesInstallNpmPackages
 */
+ (instancetype)queryWithObject:(GTLRDataform_InstallNpmPackagesRequest *)object
                      workspace:(NSString *)workspace;

@end

/**
 *  Lists Workspaces in a given Repository.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesList : GTLRDataformQuery

/** Optional. Filter for the returned list. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. This field only supports ordering by `name`. If unspecified, the
 *  server will choose the ordering. If specified, the default order is
 *  ascending for the `name` field.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. Maximum number of workspaces to return. The server may return
 *  fewer items than requested. If unspecified, the server will pick an
 *  appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token received from a previous `ListWorkspaces` call. Provide
 *  this to retrieve the subsequent page. When paginating, all other parameters
 *  provided to `ListWorkspaces`, with the exception of `page_size`, must match
 *  the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The repository in which to list workspaces. Must be in the format
 *  `projects/ * /locations/ * /repositories/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRDataform_ListWorkspacesResponse.
 *
 *  Lists Workspaces in a given Repository.
 *
 *  @param parent Required. The repository in which to list workspaces. Must be
 *    in the format `projects/ * /locations/ * /repositories/ *`.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a directory inside a Workspace.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.makeDirectory
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesMakeDirectory : GTLRDataformQuery

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *workspace;

/**
 *  Fetches a @c GTLRDataform_MakeDirectoryResponse.
 *
 *  Creates a directory inside a Workspace.
 *
 *  @param object The @c GTLRDataform_MakeDirectoryRequest to include in the
 *    query.
 *  @param workspace Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesMakeDirectory
 */
+ (instancetype)queryWithObject:(GTLRDataform_MakeDirectoryRequest *)object
                      workspace:(NSString *)workspace;

@end

/**
 *  Moves a directory (inside a Workspace), and all of its contents, to a new
 *  location.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.moveDirectory
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesMoveDirectory : GTLRDataformQuery

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *workspace;

/**
 *  Fetches a @c GTLRDataform_MoveDirectoryResponse.
 *
 *  Moves a directory (inside a Workspace), and all of its contents, to a new
 *  location.
 *
 *  @param object The @c GTLRDataform_MoveDirectoryRequest to include in the
 *    query.
 *  @param workspace Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesMoveDirectory
 */
+ (instancetype)queryWithObject:(GTLRDataform_MoveDirectoryRequest *)object
                      workspace:(NSString *)workspace;

@end

/**
 *  Moves a file (inside a Workspace) to a new location.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.moveFile
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesMoveFile : GTLRDataformQuery

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *workspace;

/**
 *  Fetches a @c GTLRDataform_MoveFileResponse.
 *
 *  Moves a file (inside a Workspace) to a new location.
 *
 *  @param object The @c GTLRDataform_MoveFileRequest to include in the query.
 *  @param workspace Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesMoveFile
 */
+ (instancetype)queryWithObject:(GTLRDataform_MoveFileRequest *)object
                      workspace:(NSString *)workspace;

@end

/**
 *  Pulls Git commits from the Repository's remote into a Workspace.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.pull
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesPull : GTLRDataformQuery

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_Empty.
 *
 *  Pulls Git commits from the Repository's remote into a Workspace.
 *
 *  @param object The @c GTLRDataform_PullGitCommitsRequest to include in the
 *    query.
 *  @param name Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesPull
 */
+ (instancetype)queryWithObject:(GTLRDataform_PullGitCommitsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Pushes Git commits from a Workspace to the Repository's remote.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.push
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesPush : GTLRDataformQuery

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_Empty.
 *
 *  Pushes Git commits from a Workspace to the Repository's remote.
 *
 *  @param object The @c GTLRDataform_PushGitCommitsRequest to include in the
 *    query.
 *  @param name Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesPush
 */
+ (instancetype)queryWithObject:(GTLRDataform_PushGitCommitsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Returns the contents of a given Workspace directory.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.queryDirectoryContents
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesQueryDirectoryContents : GTLRDataformQuery

/**
 *  Optional. Maximum number of paths to return. The server may return fewer
 *  items than requested. If unspecified, the server will pick an appropriate
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token received from a previous `QueryDirectoryContents` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `QueryDirectoryContents`, with the exception of
 *  `page_size`, must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Optional. The directory's full path including directory name, relative to
 *  the workspace root. If left unset, the workspace root is used.
 */
@property(nonatomic, copy, nullable) NSString *path;

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *workspace;

/**
 *  Fetches a @c GTLRDataform_QueryDirectoryContentsResponse.
 *
 *  Returns the contents of a given Workspace directory.
 *
 *  @param workspace Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesQueryDirectoryContents
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithWorkspace:(NSString *)workspace;

@end

/**
 *  Returns the contents of a file (inside a Workspace).
 *
 *  Method: dataform.projects.locations.repositories.workspaces.readFile
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesReadFile : GTLRDataformQuery

/**
 *  Required. The file's full path including filename, relative to the workspace
 *  root.
 */
@property(nonatomic, copy, nullable) NSString *path;

/**
 *  Optional. The Git revision of the file to return. If left empty, the current
 *  contents of `path` will be returned.
 */
@property(nonatomic, copy, nullable) NSString *revision;

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *workspace;

/**
 *  Fetches a @c GTLRDataform_ReadFileResponse.
 *
 *  Returns the contents of a file (inside a Workspace).
 *
 *  @param workspace Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesReadFile
 */
+ (instancetype)queryWithWorkspace:(NSString *)workspace;

@end

/**
 *  Deletes a directory (inside a Workspace) and all of its contents.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.removeDirectory
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesRemoveDirectory : GTLRDataformQuery

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *workspace;

/**
 *  Fetches a @c GTLRDataform_Empty.
 *
 *  Deletes a directory (inside a Workspace) and all of its contents.
 *
 *  @param object The @c GTLRDataform_RemoveDirectoryRequest to include in the
 *    query.
 *  @param workspace Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesRemoveDirectory
 */
+ (instancetype)queryWithObject:(GTLRDataform_RemoveDirectoryRequest *)object
                      workspace:(NSString *)workspace;

@end

/**
 *  Deletes a file (inside a Workspace).
 *
 *  Method: dataform.projects.locations.repositories.workspaces.removeFile
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesRemoveFile : GTLRDataformQuery

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *workspace;

/**
 *  Fetches a @c GTLRDataform_Empty.
 *
 *  Deletes a file (inside a Workspace).
 *
 *  @param object The @c GTLRDataform_RemoveFileRequest to include in the query.
 *  @param workspace Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesRemoveFile
 */
+ (instancetype)queryWithObject:(GTLRDataform_RemoveFileRequest *)object
                      workspace:(NSString *)workspace;

@end

/**
 *  Performs a Git reset for uncommitted files in a Workspace.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.reset
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesReset : GTLRDataformQuery

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRDataform_Empty.
 *
 *  Performs a Git reset for uncommitted files in a Workspace.
 *
 *  @param object The @c GTLRDataform_ResetWorkspaceChangesRequest to include in
 *    the query.
 *  @param name Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesReset
 */
+ (instancetype)queryWithObject:(GTLRDataform_ResetWorkspaceChangesRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Finds the contents of a given Workspace directory by filter.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.searchFiles
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesSearchFiles : GTLRDataformQuery

/**
 *  Optional. Optional filter for the returned list in filtering format.
 *  Filtering is only currently supported on the `path` field. See
 *  https://google.aip.dev/160 for details.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Maximum number of search results to return. The server may return
 *  fewer items than requested. If unspecified, the server will pick an
 *  appropriate default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token received from a previous `SearchFilesRequest` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `SearchFilesRequest`, with the exception of
 *  `page_size`, must match the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *workspace;

/**
 *  Fetches a @c GTLRDataform_SearchFilesResponse.
 *
 *  Finds the contents of a given Workspace directory by filter.
 *
 *  @param workspace Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesSearchFiles
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithWorkspace:(NSString *)workspace;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesSetIamPolicy : GTLRDataformQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataform_Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRDataform_SetIamPolicyRequest to include in the
 *    query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRDataform_SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: dataform.projects.locations.repositories.workspaces.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesTestIamPermissions : GTLRDataformQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRDataform_TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRDataform_TestIamPermissionsRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRDataform_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Writes to a file (inside a Workspace).
 *
 *  Method: dataform.projects.locations.repositories.workspaces.writeFile
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesWriteFile : GTLRDataformQuery

/** Required. The workspace's name. */
@property(nonatomic, copy, nullable) NSString *workspace;

/**
 *  Fetches a @c GTLRDataform_WriteFileResponse.
 *
 *  Writes to a file (inside a Workspace).
 *
 *  @param object The @c GTLRDataform_WriteFileRequest to include in the query.
 *  @param workspace Required. The workspace's name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsRepositoriesWorkspacesWriteFile
 */
+ (instancetype)queryWithObject:(GTLRDataform_WriteFileRequest *)object
                      workspace:(NSString *)workspace;

@end

/**
 *  Update default config for a given project and location. *Note:* This method
 *  does not fully implement AIP/134. In particular: 1. The wildcard entry (***)
 *  is treated as a bad request 2. When the *field_mask* is omitted, instead of
 *  only updating the set fields, the request is treated as a full update on all
 *  modifiable fields
 *
 *  Method: dataform.projects.locations.updateConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDataformCloudPlatform
 */
@interface GTLRDataformQuery_ProjectsLocationsUpdateConfig : GTLRDataformQuery

/** Identifier. The config name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. Specifies the fields to be updated in the config.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRDataform_Config.
 *
 *  Update default config for a given project and location. *Note:* This method
 *  does not fully implement AIP/134. In particular: 1. The wildcard entry (***)
 *  is treated as a bad request 2. When the *field_mask* is omitted, instead of
 *  only updating the set fields, the request is treated as a full update on all
 *  modifiable fields
 *
 *  @param object The @c GTLRDataform_Config to include in the query.
 *  @param name Identifier. The config name.
 *
 *  @return GTLRDataformQuery_ProjectsLocationsUpdateConfig
 */
+ (instancetype)queryWithObject:(GTLRDataform_Config *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
