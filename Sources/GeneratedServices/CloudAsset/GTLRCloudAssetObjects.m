// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Asset API (cloudasset/v1)
// Description:
//   The cloud asset API manages the history and inventory of cloud resources.
// Documentation:
//   https://cloud.google.com/asset-inventory/docs/quickstart

#import <GoogleAPIClientForREST/GTLRCloudAssetObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRCloudAsset_AuditLogConfig.logType
NSString * const kGTLRCloudAsset_AuditLogConfig_LogType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRCloudAsset_AuditLogConfig_LogType_DataRead = @"DATA_READ";
NSString * const kGTLRCloudAsset_AuditLogConfig_LogType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRCloudAsset_AuditLogConfig_LogType_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";

// GTLRCloudAsset_ConditionEvaluation.evaluationValue
NSString * const kGTLRCloudAsset_ConditionEvaluation_EvaluationValue_Conditional = @"CONDITIONAL";
NSString * const kGTLRCloudAsset_ConditionEvaluation_EvaluationValue_EvaluationValueUnspecified = @"EVALUATION_VALUE_UNSPECIFIED";
NSString * const kGTLRCloudAsset_ConditionEvaluation_EvaluationValue_False = @"FALSE";
NSString * const kGTLRCloudAsset_ConditionEvaluation_EvaluationValue_True = @"TRUE";

// GTLRCloudAsset_ExportAssetsRequest.contentType
NSString * const kGTLRCloudAsset_ExportAssetsRequest_ContentType_AccessPolicy = @"ACCESS_POLICY";
NSString * const kGTLRCloudAsset_ExportAssetsRequest_ContentType_ContentTypeUnspecified = @"CONTENT_TYPE_UNSPECIFIED";
NSString * const kGTLRCloudAsset_ExportAssetsRequest_ContentType_IamPolicy = @"IAM_POLICY";
NSString * const kGTLRCloudAsset_ExportAssetsRequest_ContentType_OrgPolicy = @"ORG_POLICY";
NSString * const kGTLRCloudAsset_ExportAssetsRequest_ContentType_OsInventory = @"OS_INVENTORY";
NSString * const kGTLRCloudAsset_ExportAssetsRequest_ContentType_Relationship = @"RELATIONSHIP";
NSString * const kGTLRCloudAsset_ExportAssetsRequest_ContentType_Resource = @"RESOURCE";

// GTLRCloudAsset_Feed.contentType
NSString * const kGTLRCloudAsset_Feed_ContentType_AccessPolicy = @"ACCESS_POLICY";
NSString * const kGTLRCloudAsset_Feed_ContentType_ContentTypeUnspecified = @"CONTENT_TYPE_UNSPECIFIED";
NSString * const kGTLRCloudAsset_Feed_ContentType_IamPolicy    = @"IAM_POLICY";
NSString * const kGTLRCloudAsset_Feed_ContentType_OrgPolicy    = @"ORG_POLICY";
NSString * const kGTLRCloudAsset_Feed_ContentType_OsInventory  = @"OS_INVENTORY";
NSString * const kGTLRCloudAsset_Feed_ContentType_Relationship = @"RELATIONSHIP";
NSString * const kGTLRCloudAsset_Feed_ContentType_Resource     = @"RESOURCE";

// GTLRCloudAsset_GoogleCloudAssetV1BigQueryDestination.partitionKey
NSString * const kGTLRCloudAsset_GoogleCloudAssetV1BigQueryDestination_PartitionKey_PartitionKeyUnspecified = @"PARTITION_KEY_UNSPECIFIED";
NSString * const kGTLRCloudAsset_GoogleCloudAssetV1BigQueryDestination_PartitionKey_RequestTime = @"REQUEST_TIME";

// GTLRCloudAsset_GoogleCloudOrgpolicyV1ListPolicy.allValues
NSString * const kGTLRCloudAsset_GoogleCloudOrgpolicyV1ListPolicy_AllValues_Allow = @"ALLOW";
NSString * const kGTLRCloudAsset_GoogleCloudOrgpolicyV1ListPolicy_AllValues_AllValuesUnspecified = @"ALL_VALUES_UNSPECIFIED";
NSString * const kGTLRCloudAsset_GoogleCloudOrgpolicyV1ListPolicy_AllValues_Deny = @"DENY";

// GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1BasicLevel.combiningFunction
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1BasicLevel_CombiningFunction_And = @"AND";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1BasicLevel_CombiningFunction_Or = @"OR";

// GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1DevicePolicy.allowedDeviceManagementLevels
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1DevicePolicy_AllowedDeviceManagementLevels_Basic = @"BASIC";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1DevicePolicy_AllowedDeviceManagementLevels_Complete = @"COMPLETE";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1DevicePolicy_AllowedDeviceManagementLevels_ManagementUnspecified = @"MANAGEMENT_UNSPECIFIED";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1DevicePolicy_AllowedDeviceManagementLevels_None = @"NONE";

// GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1DevicePolicy.allowedEncryptionStatuses
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1DevicePolicy_AllowedEncryptionStatuses_Encrypted = @"ENCRYPTED";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1DevicePolicy_AllowedEncryptionStatuses_EncryptionUnspecified = @"ENCRYPTION_UNSPECIFIED";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1DevicePolicy_AllowedEncryptionStatuses_EncryptionUnsupported = @"ENCRYPTION_UNSUPPORTED";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1DevicePolicy_AllowedEncryptionStatuses_Unencrypted = @"UNENCRYPTED";

// GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1EgressFrom.identityType
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1EgressFrom_IdentityType_AnyIdentity = @"ANY_IDENTITY";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1EgressFrom_IdentityType_AnyServiceAccount = @"ANY_SERVICE_ACCOUNT";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1EgressFrom_IdentityType_AnyUserAccount = @"ANY_USER_ACCOUNT";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1EgressFrom_IdentityType_IdentityTypeUnspecified = @"IDENTITY_TYPE_UNSPECIFIED";

// GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1IngressFrom.identityType
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1IngressFrom_IdentityType_AnyIdentity = @"ANY_IDENTITY";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1IngressFrom_IdentityType_AnyServiceAccount = @"ANY_SERVICE_ACCOUNT";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1IngressFrom_IdentityType_AnyUserAccount = @"ANY_USER_ACCOUNT";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1IngressFrom_IdentityType_IdentityTypeUnspecified = @"IDENTITY_TYPE_UNSPECIFIED";

// GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1OsConstraint.osType
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1OsConstraint_OsType_Android = @"ANDROID";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1OsConstraint_OsType_DesktopChromeOs = @"DESKTOP_CHROME_OS";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1OsConstraint_OsType_DesktopLinux = @"DESKTOP_LINUX";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1OsConstraint_OsType_DesktopMac = @"DESKTOP_MAC";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1OsConstraint_OsType_DesktopWindows = @"DESKTOP_WINDOWS";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1OsConstraint_OsType_Ios = @"IOS";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1OsConstraint_OsType_OsUnspecified = @"OS_UNSPECIFIED";

// GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1ServicePerimeter.perimeterType
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1ServicePerimeter_PerimeterType_PerimeterTypeBridge = @"PERIMETER_TYPE_BRIDGE";
NSString * const kGTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1ServicePerimeter_PerimeterType_PerimeterTypeRegular = @"PERIMETER_TYPE_REGULAR";

// GTLRCloudAsset_IamPolicyAnalysisState.code
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_Aborted = @"ABORTED";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_AlreadyExists = @"ALREADY_EXISTS";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_Cancelled = @"CANCELLED";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_DataLoss = @"DATA_LOSS";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_DeadlineExceeded = @"DEADLINE_EXCEEDED";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_FailedPrecondition = @"FAILED_PRECONDITION";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_Internal = @"INTERNAL";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_InvalidArgument = @"INVALID_ARGUMENT";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_NotFound = @"NOT_FOUND";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_Ok = @"OK";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_OutOfRange = @"OUT_OF_RANGE";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_PermissionDenied = @"PERMISSION_DENIED";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_ResourceExhausted = @"RESOURCE_EXHAUSTED";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_Unauthenticated = @"UNAUTHENTICATED";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_Unavailable = @"UNAVAILABLE";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_Unimplemented = @"UNIMPLEMENTED";
NSString * const kGTLRCloudAsset_IamPolicyAnalysisState_Code_Unknown = @"UNKNOWN";

// GTLRCloudAsset_Item.originType
NSString * const kGTLRCloudAsset_Item_OriginType_InventoryReport = @"INVENTORY_REPORT";
NSString * const kGTLRCloudAsset_Item_OriginType_OriginTypeUnspecified = @"ORIGIN_TYPE_UNSPECIFIED";

// GTLRCloudAsset_Item.type
NSString * const kGTLRCloudAsset_Item_Type_AvailablePackage = @"AVAILABLE_PACKAGE";
NSString * const kGTLRCloudAsset_Item_Type_InstalledPackage = @"INSTALLED_PACKAGE";
NSString * const kGTLRCloudAsset_Item_Type_TypeUnspecified  = @"TYPE_UNSPECIFIED";

// GTLRCloudAsset_PartitionSpec.partitionKey
NSString * const kGTLRCloudAsset_PartitionSpec_PartitionKey_PartitionKeyUnspecified = @"PARTITION_KEY_UNSPECIFIED";
NSString * const kGTLRCloudAsset_PartitionSpec_PartitionKey_ReadTime = @"READ_TIME";
NSString * const kGTLRCloudAsset_PartitionSpec_PartitionKey_RequestTime = @"REQUEST_TIME";

// GTLRCloudAsset_TemporalAsset.priorAssetState
NSString * const kGTLRCloudAsset_TemporalAsset_PriorAssetState_Deleted = @"DELETED";
NSString * const kGTLRCloudAsset_TemporalAsset_PriorAssetState_DoesNotExist = @"DOES_NOT_EXIST";
NSString * const kGTLRCloudAsset_TemporalAsset_PriorAssetState_Invalid = @"INVALID";
NSString * const kGTLRCloudAsset_TemporalAsset_PriorAssetState_Present = @"PRESENT";
NSString * const kGTLRCloudAsset_TemporalAsset_PriorAssetState_PriorAssetStateUnspecified = @"PRIOR_ASSET_STATE_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_AccessSelector
//

@implementation GTLRCloudAsset_AccessSelector
@dynamic permissions, roles;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class],
    @"roles" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_AnalyzeIamPolicyLongrunningMetadata
//

@implementation GTLRCloudAsset_AnalyzeIamPolicyLongrunningMetadata
@dynamic createTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_AnalyzeIamPolicyLongrunningRequest
//

@implementation GTLRCloudAsset_AnalyzeIamPolicyLongrunningRequest
@dynamic analysisQuery, outputConfig, savedAnalysisQuery;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_AnalyzeIamPolicyLongrunningResponse
//

@implementation GTLRCloudAsset_AnalyzeIamPolicyLongrunningResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_AnalyzeIamPolicyResponse
//

@implementation GTLRCloudAsset_AnalyzeIamPolicyResponse
@dynamic fullyExplored, mainAnalysis, serviceAccountImpersonationAnalysis;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"serviceAccountImpersonationAnalysis" : [GTLRCloudAsset_IamPolicyAnalysis class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_AnalyzeMoveResponse
//

@implementation GTLRCloudAsset_AnalyzeMoveResponse
@dynamic moveAnalysis;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"moveAnalysis" : [GTLRCloudAsset_MoveAnalysis class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Asset
//

@implementation GTLRCloudAsset_Asset
@dynamic accessLevel, accessPolicy, ancestors, assetType, iamPolicy, name,
         orgPolicy, osInventory, relatedAsset, relatedAssets, resource,
         servicePerimeter, updateTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"ancestors" : [NSString class],
    @"orgPolicy" : [GTLRCloudAsset_GoogleCloudOrgpolicyV1Policy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_AttachedResource
//

@implementation GTLRCloudAsset_AttachedResource
@dynamic assetType, versionedResources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"versionedResources" : [GTLRCloudAsset_VersionedResource class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_AuditConfig
//

@implementation GTLRCloudAsset_AuditConfig
@dynamic auditLogConfigs, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditLogConfigs" : [GTLRCloudAsset_AuditLogConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_AuditLogConfig
//

@implementation GTLRCloudAsset_AuditLogConfig
@dynamic exemptedMembers, logType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_BatchGetAssetsHistoryResponse
//

@implementation GTLRCloudAsset_BatchGetAssetsHistoryResponse
@dynamic assets;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"assets" : [GTLRCloudAsset_TemporalAsset class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_BatchGetEffectiveIamPoliciesResponse
//

@implementation GTLRCloudAsset_BatchGetEffectiveIamPoliciesResponse
@dynamic policyResults;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"policyResults" : [GTLRCloudAsset_EffectiveIamPolicy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_BigQueryDestination
//

@implementation GTLRCloudAsset_BigQueryDestination
@dynamic dataset, force, partitionSpec, separateTablesPerAssetType, table;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Binding
//

@implementation GTLRCloudAsset_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_ConditionContext
//

@implementation GTLRCloudAsset_ConditionContext
@dynamic accessTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_ConditionEvaluation
//

@implementation GTLRCloudAsset_ConditionEvaluation
@dynamic evaluationValue;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_CreateFeedRequest
//

@implementation GTLRCloudAsset_CreateFeedRequest
@dynamic feed, feedId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Date
//

@implementation GTLRCloudAsset_Date
@dynamic day, month, year;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_EffectiveIamPolicy
//

@implementation GTLRCloudAsset_EffectiveIamPolicy
@dynamic fullResourceName, policies;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"policies" : [GTLRCloudAsset_PolicyInfo class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Empty
//

@implementation GTLRCloudAsset_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Explanation
//

@implementation GTLRCloudAsset_Explanation
@dynamic matchedPermissions;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Explanation_MatchedPermissions
//

@implementation GTLRCloudAsset_Explanation_MatchedPermissions

+ (Class)classForAdditionalProperties {
  return [GTLRCloudAsset_Permissions class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_ExportAssetsRequest
//

@implementation GTLRCloudAsset_ExportAssetsRequest
@dynamic assetTypes, contentType, outputConfig, readTime, relationshipTypes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"assetTypes" : [NSString class],
    @"relationshipTypes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Expr
//

@implementation GTLRCloudAsset_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Feed
//

@implementation GTLRCloudAsset_Feed
@dynamic assetNames, assetTypes, condition, contentType, feedOutputConfig, name,
         relationshipTypes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"assetNames" : [NSString class],
    @"assetTypes" : [NSString class],
    @"relationshipTypes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_FeedOutputConfig
//

@implementation GTLRCloudAsset_FeedOutputConfig
@dynamic pubsubDestination;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GcsDestination
//

@implementation GTLRCloudAsset_GcsDestination
@dynamic uri, uriPrefix;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudAssetV1Access
//

@implementation GTLRCloudAsset_GoogleCloudAssetV1Access
@dynamic analysisState, permission, role;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudAssetV1AccessControlList
//

@implementation GTLRCloudAsset_GoogleCloudAssetV1AccessControlList
@dynamic accesses, conditionEvaluation, resourceEdges, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accesses" : [GTLRCloudAsset_GoogleCloudAssetV1Access class],
    @"resourceEdges" : [GTLRCloudAsset_GoogleCloudAssetV1Edge class],
    @"resources" : [GTLRCloudAsset_GoogleCloudAssetV1Resource class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudAssetV1BigQueryDestination
//

@implementation GTLRCloudAsset_GoogleCloudAssetV1BigQueryDestination
@dynamic dataset, partitionKey, tablePrefix, writeDisposition;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudAssetV1Edge
//

@implementation GTLRCloudAsset_GoogleCloudAssetV1Edge
@dynamic sourceNode, targetNode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudAssetV1GcsDestination
//

@implementation GTLRCloudAsset_GoogleCloudAssetV1GcsDestination
@dynamic uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudAssetV1Identity
//

@implementation GTLRCloudAsset_GoogleCloudAssetV1Identity
@dynamic analysisState, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudAssetV1IdentityList
//

@implementation GTLRCloudAsset_GoogleCloudAssetV1IdentityList
@dynamic groupEdges, identities;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"groupEdges" : [GTLRCloudAsset_GoogleCloudAssetV1Edge class],
    @"identities" : [GTLRCloudAsset_GoogleCloudAssetV1Identity class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudAssetV1p7beta1Asset
//

@implementation GTLRCloudAsset_GoogleCloudAssetV1p7beta1Asset
@dynamic accessLevel, accessPolicy, ancestors, assetType, iamPolicy, name,
         orgPolicy, relatedAssets, resource, servicePerimeter, updateTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"ancestors" : [NSString class],
    @"orgPolicy" : [GTLRCloudAsset_GoogleCloudOrgpolicyV1Policy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudAssetV1p7beta1RelatedAsset
//

@implementation GTLRCloudAsset_GoogleCloudAssetV1p7beta1RelatedAsset
@dynamic ancestors, asset, assetType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"ancestors" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudAssetV1p7beta1RelatedAssets
//

@implementation GTLRCloudAsset_GoogleCloudAssetV1p7beta1RelatedAssets
@dynamic assets, relationshipAttributes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"assets" : [GTLRCloudAsset_GoogleCloudAssetV1p7beta1RelatedAsset class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudAssetV1p7beta1RelationshipAttributes
//

@implementation GTLRCloudAsset_GoogleCloudAssetV1p7beta1RelationshipAttributes
@dynamic action, sourceResourceType, targetResourceType, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudAssetV1p7beta1Resource
//

@implementation GTLRCloudAsset_GoogleCloudAssetV1p7beta1Resource
@dynamic data, discoveryDocumentUri, discoveryName, location, parent,
         resourceUrl, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudAssetV1p7beta1Resource_Data
//

@implementation GTLRCloudAsset_GoogleCloudAssetV1p7beta1Resource_Data

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudAssetV1Resource
//

@implementation GTLRCloudAsset_GoogleCloudAssetV1Resource
@dynamic analysisState, fullResourceName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudOrgpolicyV1BooleanPolicy
//

@implementation GTLRCloudAsset_GoogleCloudOrgpolicyV1BooleanPolicy
@dynamic enforced;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudOrgpolicyV1ListPolicy
//

@implementation GTLRCloudAsset_GoogleCloudOrgpolicyV1ListPolicy
@dynamic allowedValues, allValues, deniedValues, inheritFromParent,
         suggestedValue;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"allowedValues" : [NSString class],
    @"deniedValues" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudOrgpolicyV1Policy
//

@implementation GTLRCloudAsset_GoogleCloudOrgpolicyV1Policy
@dynamic booleanPolicy, constraint, ETag, listPolicy, restoreDefault,
         updateTime, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleCloudOrgpolicyV1RestoreDefault
//

@implementation GTLRCloudAsset_GoogleCloudOrgpolicyV1RestoreDefault
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1AccessLevel
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1AccessLevel
@dynamic basic, custom, descriptionProperty, name, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1AccessPolicy
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1AccessPolicy
@dynamic ETag, name, parent, scopes, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"scopes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1ApiOperation
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1ApiOperation
@dynamic methodSelectors, serviceName;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"methodSelectors" : [GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1MethodSelector class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1BasicLevel
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1BasicLevel
@dynamic combiningFunction, conditions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"conditions" : [GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1Condition class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1Condition
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1Condition
@dynamic devicePolicy, ipSubnetworks, members, negate, regions,
         requiredAccessLevels;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"ipSubnetworks" : [NSString class],
    @"members" : [NSString class],
    @"regions" : [NSString class],
    @"requiredAccessLevels" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1CustomLevel
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1CustomLevel
@dynamic expr;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1DevicePolicy
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1DevicePolicy
@dynamic allowedDeviceManagementLevels, allowedEncryptionStatuses,
         osConstraints, requireAdminApproval, requireCorpOwned,
         requireScreenlock;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"allowedDeviceManagementLevels" : [NSString class],
    @"allowedEncryptionStatuses" : [NSString class],
    @"osConstraints" : [GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1OsConstraint class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1EgressFrom
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1EgressFrom
@dynamic identities, identityType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"identities" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1EgressPolicy
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1EgressPolicy
@dynamic egressFrom, egressTo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1EgressTo
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1EgressTo
@dynamic externalResources, operations, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"externalResources" : [NSString class],
    @"operations" : [GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1ApiOperation class],
    @"resources" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1IngressFrom
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1IngressFrom
@dynamic identities, identityType, sources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"identities" : [NSString class],
    @"sources" : [GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1IngressSource class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1IngressPolicy
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1IngressPolicy
@dynamic ingressFrom, ingressTo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1IngressSource
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1IngressSource
@dynamic accessLevel, resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1IngressTo
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1IngressTo
@dynamic operations, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1ApiOperation class],
    @"resources" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1MethodSelector
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1MethodSelector
@dynamic method, permission;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1OsConstraint
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1OsConstraint
@dynamic minimumVersion, osType, requireVerifiedChromeOs;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1ServicePerimeter
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1ServicePerimeter
@dynamic descriptionProperty, name, perimeterType, spec, status, title,
         useExplicitDryRunSpec;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig
@dynamic accessLevels, egressPolicies, ingressPolicies, resources,
         restrictedServices, vpcAccessibleServices;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accessLevels" : [NSString class],
    @"egressPolicies" : [GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1EgressPolicy class],
    @"ingressPolicies" : [GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1IngressPolicy class],
    @"resources" : [NSString class],
    @"restrictedServices" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices
//

@implementation GTLRCloudAsset_GoogleIdentityAccesscontextmanagerV1VpcAccessibleServices
@dynamic allowedServices, enableRestriction;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"allowedServices" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_IamPolicyAnalysis
//

@implementation GTLRCloudAsset_IamPolicyAnalysis
@dynamic analysisQuery, analysisResults, fullyExplored, nonCriticalErrors;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"analysisResults" : [GTLRCloudAsset_IamPolicyAnalysisResult class],
    @"nonCriticalErrors" : [GTLRCloudAsset_IamPolicyAnalysisState class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_IamPolicyAnalysisOutputConfig
//

@implementation GTLRCloudAsset_IamPolicyAnalysisOutputConfig
@dynamic bigqueryDestination, gcsDestination;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_IamPolicyAnalysisQuery
//

@implementation GTLRCloudAsset_IamPolicyAnalysisQuery
@dynamic accessSelector, conditionContext, identitySelector, options,
         resourceSelector, scope;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_IamPolicyAnalysisResult
//

@implementation GTLRCloudAsset_IamPolicyAnalysisResult
@dynamic accessControlLists, attachedResourceFullName, fullyExplored,
         iamBinding, identityList;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accessControlLists" : [GTLRCloudAsset_GoogleCloudAssetV1AccessControlList class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_IamPolicyAnalysisState
//

@implementation GTLRCloudAsset_IamPolicyAnalysisState
@dynamic cause, code;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_IamPolicySearchResult
//

@implementation GTLRCloudAsset_IamPolicySearchResult
@dynamic assetType, explanation, folders, organization, policy, project,
         resource;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"folders" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_IdentitySelector
//

@implementation GTLRCloudAsset_IdentitySelector
@dynamic identity;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Inventory
//

@implementation GTLRCloudAsset_Inventory
@dynamic items, name, osInfo, updateTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Inventory_Items
//

@implementation GTLRCloudAsset_Inventory_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCloudAsset_Item class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Item
//

@implementation GTLRCloudAsset_Item
@dynamic availablePackage, createTime, identifier, installedPackage, originType,
         type, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_ListAssetsResponse
//

@implementation GTLRCloudAsset_ListAssetsResponse
@dynamic assets, nextPageToken, readTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"assets" : [GTLRCloudAsset_Asset class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"assets";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_ListFeedsResponse
//

@implementation GTLRCloudAsset_ListFeedsResponse
@dynamic feeds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"feeds" : [GTLRCloudAsset_Feed class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_ListSavedQueriesResponse
//

@implementation GTLRCloudAsset_ListSavedQueriesResponse
@dynamic nextPageToken, savedQueries;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"savedQueries" : [GTLRCloudAsset_SavedQuery class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"savedQueries";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_MoveAnalysis
//

@implementation GTLRCloudAsset_MoveAnalysis
@dynamic analysis, displayName, error;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_MoveAnalysisResult
//

@implementation GTLRCloudAsset_MoveAnalysisResult
@dynamic blockers, warnings;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"blockers" : [GTLRCloudAsset_MoveImpact class],
    @"warnings" : [GTLRCloudAsset_MoveImpact class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_MoveImpact
//

@implementation GTLRCloudAsset_MoveImpact
@dynamic detail;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Operation
//

@implementation GTLRCloudAsset_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Operation_Metadata
//

@implementation GTLRCloudAsset_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Operation_Response
//

@implementation GTLRCloudAsset_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Options
//

@implementation GTLRCloudAsset_Options
@dynamic analyzeServiceAccountImpersonation, expandGroups, expandResources,
         expandRoles, outputGroupEdges, outputResourceEdges;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_OsInfo
//

@implementation GTLRCloudAsset_OsInfo
@dynamic architecture, hostname, kernelRelease, kernelVersion, longName,
         osconfigAgentVersion, shortName, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_OutputConfig
//

@implementation GTLRCloudAsset_OutputConfig
@dynamic bigqueryDestination, gcsDestination;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_PartitionSpec
//

@implementation GTLRCloudAsset_PartitionSpec
@dynamic partitionKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Permissions
//

@implementation GTLRCloudAsset_Permissions
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Policy
//

@implementation GTLRCloudAsset_Policy
@dynamic auditConfigs, bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditConfigs" : [GTLRCloudAsset_AuditConfig class],
    @"bindings" : [GTLRCloudAsset_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_PolicyInfo
//

@implementation GTLRCloudAsset_PolicyInfo
@dynamic attachedResource, policy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_PubsubDestination
//

@implementation GTLRCloudAsset_PubsubDestination
@dynamic topic;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_QueryContent
//

@implementation GTLRCloudAsset_QueryContent
@dynamic iamPolicyAnalysisQuery;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_RelatedAsset
//

@implementation GTLRCloudAsset_RelatedAsset
@dynamic ancestors, asset, assetType, relationshipType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"ancestors" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_RelatedAssets
//

@implementation GTLRCloudAsset_RelatedAssets
@dynamic assets, relationshipAttributes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"assets" : [GTLRCloudAsset_RelatedAsset class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_RelatedResource
//

@implementation GTLRCloudAsset_RelatedResource
@dynamic assetType, fullResourceName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_RelatedResources
//

@implementation GTLRCloudAsset_RelatedResources
@dynamic relatedResources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"relatedResources" : [GTLRCloudAsset_RelatedResource class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_RelationshipAttributes
//

@implementation GTLRCloudAsset_RelationshipAttributes
@dynamic action, sourceResourceType, targetResourceType, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Resource
//

@implementation GTLRCloudAsset_Resource
@dynamic data, discoveryDocumentUri, discoveryName, location, parent,
         resourceUrl, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Resource_Data
//

@implementation GTLRCloudAsset_Resource_Data

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_ResourceSearchResult
//

@implementation GTLRCloudAsset_ResourceSearchResult
@dynamic additionalAttributes, assetType, attachedResources, createTime,
         descriptionProperty, displayName, folders, kmsKey, kmsKeys, labels,
         location, name, networkTags, organization, parentAssetType,
         parentFullResourceName, project, relationships, state, tagKeys,
         tagValueIds, tagValues, updateTime, versionedResources;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"attachedResources" : [GTLRCloudAsset_AttachedResource class],
    @"folders" : [NSString class],
    @"kmsKeys" : [NSString class],
    @"networkTags" : [NSString class],
    @"tagKeys" : [NSString class],
    @"tagValueIds" : [NSString class],
    @"tagValues" : [NSString class],
    @"versionedResources" : [GTLRCloudAsset_VersionedResource class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_ResourceSearchResult_AdditionalAttributes
//

@implementation GTLRCloudAsset_ResourceSearchResult_AdditionalAttributes

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_ResourceSearchResult_Labels
//

@implementation GTLRCloudAsset_ResourceSearchResult_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_ResourceSearchResult_Relationships
//

@implementation GTLRCloudAsset_ResourceSearchResult_Relationships

+ (Class)classForAdditionalProperties {
  return [GTLRCloudAsset_RelatedResources class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_ResourceSelector
//

@implementation GTLRCloudAsset_ResourceSelector
@dynamic fullResourceName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_SavedQuery
//

@implementation GTLRCloudAsset_SavedQuery
@dynamic content, createTime, creator, descriptionProperty, labels, lastUpdater,
         lastUpdateTime, name;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_SavedQuery_Labels
//

@implementation GTLRCloudAsset_SavedQuery_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_SearchAllIamPoliciesResponse
//

@implementation GTLRCloudAsset_SearchAllIamPoliciesResponse
@dynamic nextPageToken, results;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"results" : [GTLRCloudAsset_IamPolicySearchResult class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"results";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_SearchAllResourcesResponse
//

@implementation GTLRCloudAsset_SearchAllResourcesResponse
@dynamic nextPageToken, results;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"results" : [GTLRCloudAsset_ResourceSearchResult class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"results";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_SoftwarePackage
//

@implementation GTLRCloudAsset_SoftwarePackage
@dynamic aptPackage, cosPackage, googetPackage, qfePackage, windowsApplication,
         wuaPackage, yumPackage, zypperPackage, zypperPatch;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Status
//

@implementation GTLRCloudAsset_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRCloudAsset_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_Status_Details_Item
//

@implementation GTLRCloudAsset_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_TemporalAsset
//

@implementation GTLRCloudAsset_TemporalAsset
@dynamic asset, deleted, priorAsset, priorAssetState, window;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_TimeWindow
//

@implementation GTLRCloudAsset_TimeWindow
@dynamic endTime, startTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_UpdateFeedRequest
//

@implementation GTLRCloudAsset_UpdateFeedRequest
@dynamic feed, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_VersionedPackage
//

@implementation GTLRCloudAsset_VersionedPackage
@dynamic architecture, packageName, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_VersionedResource
//

@implementation GTLRCloudAsset_VersionedResource
@dynamic resource, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_VersionedResource_Resource
//

@implementation GTLRCloudAsset_VersionedResource_Resource

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_WindowsApplication
//

@implementation GTLRCloudAsset_WindowsApplication
@dynamic displayName, displayVersion, helpLink, installDate, publisher;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_WindowsQuickFixEngineeringPackage
//

@implementation GTLRCloudAsset_WindowsQuickFixEngineeringPackage
@dynamic caption, descriptionProperty, hotFixId, installTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_WindowsUpdateCategory
//

@implementation GTLRCloudAsset_WindowsUpdateCategory
@dynamic identifier, name;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_WindowsUpdatePackage
//

@implementation GTLRCloudAsset_WindowsUpdatePackage
@dynamic categories, descriptionProperty, kbArticleIds,
         lastDeploymentChangeTime, moreInfoUrls, revisionNumber, supportUrl,
         title, updateId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"categories" : [GTLRCloudAsset_WindowsUpdateCategory class],
    @"kbArticleIds" : [NSString class],
    @"moreInfoUrls" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudAsset_ZypperPatch
//

@implementation GTLRCloudAsset_ZypperPatch
@dynamic category, patchName, severity, summary;
@end
