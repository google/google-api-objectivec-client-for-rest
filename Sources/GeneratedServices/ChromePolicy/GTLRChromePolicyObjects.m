// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Chrome Policy API (chromepolicy/v1)
// Description:
//   The Chrome Policy API is a suite of services that allows Chrome
//   administrators to control the policies applied to their managed Chrome OS
//   devices and Chrome browsers.
// Documentation:
//   http://developers.google.com/chrome/policy

#import <GoogleAPIClientForREST/GTLRChromePolicyObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRChromePolicy_ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle.policyApiLifecycleStage
NSString * const kGTLRChromePolicy_ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle_PolicyApiLifecycleStage_ApiCurrent = @"API_CURRENT";
NSString * const kGTLRChromePolicy_ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle_PolicyApiLifecycleStage_ApiDeprecated = @"API_DEPRECATED";
NSString * const kGTLRChromePolicy_ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle_PolicyApiLifecycleStage_ApiDevelopment = @"API_DEVELOPMENT";
NSString * const kGTLRChromePolicy_ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle_PolicyApiLifecycleStage_ApiPreview = @"API_PREVIEW";
NSString * const kGTLRChromePolicy_ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle_PolicyApiLifecycleStage_ApiUnspecified = @"API_UNSPECIFIED";

// GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchema.validTargetResources
NSString * const kGTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchema_ValidTargetResources_Group = @"GROUP";
NSString * const kGTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchema_ValidTargetResources_OrgUnit = @"ORG_UNIT";
NSString * const kGTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchema_ValidTargetResources_TargetResourceUnspecified = @"TARGET_RESOURCE_UNSPECIFIED";

// GTLRChromePolicy_Proto2FieldDescriptorProto.label
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Label_LabelOptional = @"LABEL_OPTIONAL";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Label_LabelRepeated = @"LABEL_REPEATED";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Label_LabelRequired = @"LABEL_REQUIRED";

// GTLRChromePolicy_Proto2FieldDescriptorProto.type
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeBool = @"TYPE_BOOL";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeBytes = @"TYPE_BYTES";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeDouble = @"TYPE_DOUBLE";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeEnum = @"TYPE_ENUM";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeFixed32 = @"TYPE_FIXED32";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeFixed64 = @"TYPE_FIXED64";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeFloat = @"TYPE_FLOAT";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeGroup = @"TYPE_GROUP";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeInt32 = @"TYPE_INT32";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeInt64 = @"TYPE_INT64";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeMessage = @"TYPE_MESSAGE";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeSfixed32 = @"TYPE_SFIXED32";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeSfixed64 = @"TYPE_SFIXED64";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeSint32 = @"TYPE_SINT32";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeSint64 = @"TYPE_SINT64";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeString = @"TYPE_STRING";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeUint32 = @"TYPE_UINT32";
NSString * const kGTLRChromePolicy_Proto2FieldDescriptorProto_Type_TypeUint64 = @"TYPE_UINT64";

// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle
//

@implementation GTLRChromePolicy_ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle
@dynamic descriptionProperty, endSupport, policyApiLifecycleStage;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1AdditionalTargetKeyName
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1AdditionalTargetKeyName
@dynamic key, keyDescription;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1BatchDeleteGroupPoliciesRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1BatchDeleteGroupPoliciesRequest
@dynamic requests;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"requests" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1DeleteGroupPolicyRequest class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1BatchInheritOrgUnitPoliciesRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1BatchInheritOrgUnitPoliciesRequest
@dynamic requests;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"requests" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1InheritOrgUnitPolicyRequest class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1BatchModifyGroupPoliciesRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1BatchModifyGroupPoliciesRequest
@dynamic requests;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"requests" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1ModifyGroupPolicyRequest class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest
@dynamic requests;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"requests" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1CertificateReference
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1CertificateReference
@dynamic network, orgUnitId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1DefineCertificateRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1DefineCertificateRequest
@dynamic ceritificateName, certificate, settings, targetResource;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"settings" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1NetworkSetting class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1DefineCertificateResponse
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1DefineCertificateResponse
@dynamic networkId, settings, targetResource;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"settings" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1NetworkSetting class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1DefineNetworkRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1DefineNetworkRequest
@dynamic name, settings, targetResource;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"settings" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1NetworkSetting class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1DefineNetworkResponse
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1DefineNetworkResponse
@dynamic networkId, settings, targetResource;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"settings" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1NetworkSetting class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1DeleteGroupPolicyRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1DeleteGroupPolicyRequest
@dynamic policySchema, policyTargetKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1InheritOrgUnitPolicyRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1InheritOrgUnitPolicyRequest
@dynamic policySchema, policyTargetKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1ListGroupPriorityOrderingRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1ListGroupPriorityOrderingRequest
@dynamic policyNamespace, policyTargetKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse
@dynamic groupIds, policyNamespace, policyTargetKey;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"groupIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1ListPolicySchemasResponse
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1ListPolicySchemasResponse
@dynamic nextPageToken, policySchemas;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"policySchemas" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchema class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"policySchemas";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1ModifyGroupPolicyRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1ModifyGroupPolicyRequest
@dynamic policyTargetKey, policyValue, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest
@dynamic policyTargetKey, policyValue, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1NetworkSetting
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1NetworkSetting
@dynamic policySchema, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1NetworkSetting_Value
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1NetworkSetting_Value

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicyModificationFieldError
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicyModificationFieldError
@dynamic error, field;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchema
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchema
@dynamic accessRestrictions, additionalTargetKeyNames, categoryTitle,
         definition, fieldDescriptions, name, notices, policyApiLifecycle,
         policyApiLifeycle, policyDescription, schemaName, supportUri,
         validTargetResources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accessRestrictions" : [NSString class],
    @"additionalTargetKeyNames" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1AdditionalTargetKeyName class],
    @"fieldDescriptions" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaFieldDescription class],
    @"notices" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription class],
    @"validTargetResources" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies
@dynamic sourceField, sourceFieldValue;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaFieldDescription
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaFieldDescription
@dynamic defaultValue, descriptionProperty, field, fieldDependencies,
         fieldDescription, inputConstraint, knownValueDescriptions, name,
         nestedFieldDescriptions, requiredItems;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"fieldDependencies" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies class],
    @"knownValueDescriptions" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription class],
    @"nestedFieldDescriptions" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaFieldDescription class],
    @"requiredItems" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaRequiredItems class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription
@dynamic descriptionProperty, value;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription
@dynamic acknowledgementRequired, field, noticeMessage, noticeValue;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaRequiredItems
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicySchemaRequiredItems
@dynamic fieldConditions, requiredFields;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"fieldConditions" : [NSString class],
    @"requiredFields" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicyTargetKey
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicyTargetKey
@dynamic additionalTargetKeys, targetResource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicyTargetKey_AdditionalTargetKeys
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicyTargetKey_AdditionalTargetKeys

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicyValue
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicyValue
@dynamic policySchema, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicyValue_Value
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1PolicyValue_Value

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails
@dynamic certificateReferences;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"certificateReferences" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1CertificateReference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1RemoveCertificateRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1RemoveCertificateRequest
@dynamic networkId, targetResource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1RemoveCertificateResponse
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1RemoveCertificateResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1RemoveNetworkRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1RemoveNetworkRequest
@dynamic networkId, targetResource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1RemoveNetworkResponse
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1RemoveNetworkResponse
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1ResolvedPolicy
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1ResolvedPolicy
@dynamic addedSourceKey, sourceKey, targetKey, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1ResolveRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1ResolveRequest
@dynamic pageSize, pageToken, policySchemaFilter, policyTargetKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1ResolveResponse
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1ResolveResponse
@dynamic nextPageToken, resolvedPolicies;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resolvedPolicies" : [GTLRChromePolicy_GoogleChromePolicyVersionsV1ResolvedPolicy class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"resolvedPolicies";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest
@dynamic groupIds, policyNamespace, policyTargetKey;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"groupIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1UploadPolicyFileRequest
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1UploadPolicyFileRequest
@dynamic policyField;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleChromePolicyVersionsV1UploadPolicyFileResponse
//

@implementation GTLRChromePolicy_GoogleChromePolicyVersionsV1UploadPolicyFileResponse
@dynamic downloadUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleProtobufEmpty
//

@implementation GTLRChromePolicy_GoogleProtobufEmpty
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_GoogleTypeDate
//

@implementation GTLRChromePolicy_GoogleTypeDate
@dynamic day, month, year;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_Proto2DescriptorProto
//

@implementation GTLRChromePolicy_Proto2DescriptorProto
@dynamic enumType, field, name, nestedType, oneofDecl;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"enumType" : [GTLRChromePolicy_Proto2EnumDescriptorProto class],
    @"field" : [GTLRChromePolicy_Proto2FieldDescriptorProto class],
    @"nestedType" : [GTLRChromePolicy_Proto2DescriptorProto class],
    @"oneofDecl" : [GTLRChromePolicy_Proto2OneofDescriptorProto class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_Proto2EnumDescriptorProto
//

@implementation GTLRChromePolicy_Proto2EnumDescriptorProto
@dynamic name, value;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"value" : [GTLRChromePolicy_Proto2EnumValueDescriptorProto class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_Proto2EnumValueDescriptorProto
//

@implementation GTLRChromePolicy_Proto2EnumValueDescriptorProto
@dynamic name, number;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_Proto2FieldDescriptorProto
//

@implementation GTLRChromePolicy_Proto2FieldDescriptorProto
@dynamic defaultValue, jsonName, label, name, number, oneofIndex,
         proto3Optional, type, typeName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_Proto2FileDescriptorProto
//

@implementation GTLRChromePolicy_Proto2FileDescriptorProto
@dynamic enumType, messageType, name, package, syntax;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"enumType" : [GTLRChromePolicy_Proto2EnumDescriptorProto class],
    @"messageType" : [GTLRChromePolicy_Proto2DescriptorProto class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromePolicy_Proto2OneofDescriptorProto
//

@implementation GTLRChromePolicy_Proto2OneofDescriptorProto
@dynamic name;
@end
