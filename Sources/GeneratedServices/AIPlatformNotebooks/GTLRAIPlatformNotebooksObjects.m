// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Notebooks API (notebooks/v2)
// Description:
//   Notebooks API is used to manage notebook resources in Google Cloud.
// Documentation:
//   https://cloud.google.com/notebooks/docs/

#import <GoogleAPIClientForREST/GTLRAIPlatformNotebooksObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRAIPlatformNotebooks_AcceleratorConfig.type
NSString * const kGTLRAIPlatformNotebooks_AcceleratorConfig_Type_AcceleratorTypeUnspecified = @"ACCELERATOR_TYPE_UNSPECIFIED";
NSString * const kGTLRAIPlatformNotebooks_AcceleratorConfig_Type_NvidiaA10080gb = @"NVIDIA_A100_80GB";
NSString * const kGTLRAIPlatformNotebooks_AcceleratorConfig_Type_NvidiaH10080gb = @"NVIDIA_H100_80GB";
NSString * const kGTLRAIPlatformNotebooks_AcceleratorConfig_Type_NvidiaH100Mega80gb = @"NVIDIA_H100_MEGA_80GB";
NSString * const kGTLRAIPlatformNotebooks_AcceleratorConfig_Type_NvidiaL4 = @"NVIDIA_L4";
NSString * const kGTLRAIPlatformNotebooks_AcceleratorConfig_Type_NvidiaTeslaA100 = @"NVIDIA_TESLA_A100";
NSString * const kGTLRAIPlatformNotebooks_AcceleratorConfig_Type_NvidiaTeslaP100 = @"NVIDIA_TESLA_P100";
NSString * const kGTLRAIPlatformNotebooks_AcceleratorConfig_Type_NvidiaTeslaP100Vws = @"NVIDIA_TESLA_P100_VWS";
NSString * const kGTLRAIPlatformNotebooks_AcceleratorConfig_Type_NvidiaTeslaP4 = @"NVIDIA_TESLA_P4";
NSString * const kGTLRAIPlatformNotebooks_AcceleratorConfig_Type_NvidiaTeslaP4Vws = @"NVIDIA_TESLA_P4_VWS";
NSString * const kGTLRAIPlatformNotebooks_AcceleratorConfig_Type_NvidiaTeslaT4 = @"NVIDIA_TESLA_T4";
NSString * const kGTLRAIPlatformNotebooks_AcceleratorConfig_Type_NvidiaTeslaT4Vws = @"NVIDIA_TESLA_T4_VWS";
NSString * const kGTLRAIPlatformNotebooks_AcceleratorConfig_Type_NvidiaTeslaV100 = @"NVIDIA_TESLA_V100";

// GTLRAIPlatformNotebooks_BootDisk.diskEncryption
NSString * const kGTLRAIPlatformNotebooks_BootDisk_DiskEncryption_Cmek = @"CMEK";
NSString * const kGTLRAIPlatformNotebooks_BootDisk_DiskEncryption_DiskEncryptionUnspecified = @"DISK_ENCRYPTION_UNSPECIFIED";
NSString * const kGTLRAIPlatformNotebooks_BootDisk_DiskEncryption_Gmek = @"GMEK";

// GTLRAIPlatformNotebooks_BootDisk.diskType
NSString * const kGTLRAIPlatformNotebooks_BootDisk_DiskType_DiskTypeUnspecified = @"DISK_TYPE_UNSPECIFIED";
NSString * const kGTLRAIPlatformNotebooks_BootDisk_DiskType_PdBalanced = @"PD_BALANCED";
NSString * const kGTLRAIPlatformNotebooks_BootDisk_DiskType_PdExtreme = @"PD_EXTREME";
NSString * const kGTLRAIPlatformNotebooks_BootDisk_DiskType_PdSsd = @"PD_SSD";
NSString * const kGTLRAIPlatformNotebooks_BootDisk_DiskType_PdStandard = @"PD_STANDARD";

// GTLRAIPlatformNotebooks_DataDisk.diskEncryption
NSString * const kGTLRAIPlatformNotebooks_DataDisk_DiskEncryption_Cmek = @"CMEK";
NSString * const kGTLRAIPlatformNotebooks_DataDisk_DiskEncryption_DiskEncryptionUnspecified = @"DISK_ENCRYPTION_UNSPECIFIED";
NSString * const kGTLRAIPlatformNotebooks_DataDisk_DiskEncryption_Gmek = @"GMEK";

// GTLRAIPlatformNotebooks_DataDisk.diskType
NSString * const kGTLRAIPlatformNotebooks_DataDisk_DiskType_DiskTypeUnspecified = @"DISK_TYPE_UNSPECIFIED";
NSString * const kGTLRAIPlatformNotebooks_DataDisk_DiskType_PdBalanced = @"PD_BALANCED";
NSString * const kGTLRAIPlatformNotebooks_DataDisk_DiskType_PdExtreme = @"PD_EXTREME";
NSString * const kGTLRAIPlatformNotebooks_DataDisk_DiskType_PdSsd = @"PD_SSD";
NSString * const kGTLRAIPlatformNotebooks_DataDisk_DiskType_PdStandard = @"PD_STANDARD";

// GTLRAIPlatformNotebooks_Event.type
NSString * const kGTLRAIPlatformNotebooks_Event_Type_EventTypeUnspecified = @"EVENT_TYPE_UNSPECIFIED";
NSString * const kGTLRAIPlatformNotebooks_Event_Type_Health    = @"HEALTH";
NSString * const kGTLRAIPlatformNotebooks_Event_Type_Heartbeat = @"HEARTBEAT";
NSString * const kGTLRAIPlatformNotebooks_Event_Type_Idle      = @"IDLE";
NSString * const kGTLRAIPlatformNotebooks_Event_Type_Maintenance = @"MAINTENANCE";
NSString * const kGTLRAIPlatformNotebooks_Event_Type_MetadataChange = @"METADATA_CHANGE";

// GTLRAIPlatformNotebooks_Instance.healthState
NSString * const kGTLRAIPlatformNotebooks_Instance_HealthState_AgentNotInstalled = @"AGENT_NOT_INSTALLED";
NSString * const kGTLRAIPlatformNotebooks_Instance_HealthState_AgentNotRunning = @"AGENT_NOT_RUNNING";
NSString * const kGTLRAIPlatformNotebooks_Instance_HealthState_HealthStateUnspecified = @"HEALTH_STATE_UNSPECIFIED";
NSString * const kGTLRAIPlatformNotebooks_Instance_HealthState_Healthy = @"HEALTHY";
NSString * const kGTLRAIPlatformNotebooks_Instance_HealthState_Unhealthy = @"UNHEALTHY";

// GTLRAIPlatformNotebooks_Instance.state
NSString * const kGTLRAIPlatformNotebooks_Instance_State_Active = @"ACTIVE";
NSString * const kGTLRAIPlatformNotebooks_Instance_State_Deleted = @"DELETED";
NSString * const kGTLRAIPlatformNotebooks_Instance_State_Initializing = @"INITIALIZING";
NSString * const kGTLRAIPlatformNotebooks_Instance_State_Provisioning = @"PROVISIONING";
NSString * const kGTLRAIPlatformNotebooks_Instance_State_Starting = @"STARTING";
NSString * const kGTLRAIPlatformNotebooks_Instance_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRAIPlatformNotebooks_Instance_State_Stopped = @"STOPPED";
NSString * const kGTLRAIPlatformNotebooks_Instance_State_Stopping = @"STOPPING";
NSString * const kGTLRAIPlatformNotebooks_Instance_State_Suspended = @"SUSPENDED";
NSString * const kGTLRAIPlatformNotebooks_Instance_State_Suspending = @"SUSPENDING";
NSString * const kGTLRAIPlatformNotebooks_Instance_State_Upgrading = @"UPGRADING";

// GTLRAIPlatformNotebooks_NetworkInterface.nicType
NSString * const kGTLRAIPlatformNotebooks_NetworkInterface_NicType_Gvnic = @"GVNIC";
NSString * const kGTLRAIPlatformNotebooks_NetworkInterface_NicType_NicTypeUnspecified = @"NIC_TYPE_UNSPECIFIED";
NSString * const kGTLRAIPlatformNotebooks_NetworkInterface_NicType_VirtioNet = @"VIRTIO_NET";

// GTLRAIPlatformNotebooks_UpgradeHistoryEntry.action
NSString * const kGTLRAIPlatformNotebooks_UpgradeHistoryEntry_Action_ActionUnspecified = @"ACTION_UNSPECIFIED";
NSString * const kGTLRAIPlatformNotebooks_UpgradeHistoryEntry_Action_Rollback = @"ROLLBACK";
NSString * const kGTLRAIPlatformNotebooks_UpgradeHistoryEntry_Action_Upgrade = @"UPGRADE";

// GTLRAIPlatformNotebooks_UpgradeHistoryEntry.state
NSString * const kGTLRAIPlatformNotebooks_UpgradeHistoryEntry_State_Failed = @"FAILED";
NSString * const kGTLRAIPlatformNotebooks_UpgradeHistoryEntry_State_Started = @"STARTED";
NSString * const kGTLRAIPlatformNotebooks_UpgradeHistoryEntry_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRAIPlatformNotebooks_UpgradeHistoryEntry_State_Succeeded = @"SUCCEEDED";

// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_AcceleratorConfig
//

@implementation GTLRAIPlatformNotebooks_AcceleratorConfig
@dynamic coreCount, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_AccessConfig
//

@implementation GTLRAIPlatformNotebooks_AccessConfig
@dynamic externalIp;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Binding
//

@implementation GTLRAIPlatformNotebooks_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_BootDisk
//

@implementation GTLRAIPlatformNotebooks_BootDisk
@dynamic diskEncryption, diskSizeGb, diskType, kmsKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_CancelOperationRequest
//

@implementation GTLRAIPlatformNotebooks_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_CheckInstanceUpgradabilityResponse
//

@implementation GTLRAIPlatformNotebooks_CheckInstanceUpgradabilityResponse
@dynamic upgradeable, upgradeImage, upgradeInfo, upgradeVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Config
//

@implementation GTLRAIPlatformNotebooks_Config
@dynamic availableImages, defaultValues, supportedValues;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"availableImages" : [GTLRAIPlatformNotebooks_ImageRelease class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_ContainerImage
//

@implementation GTLRAIPlatformNotebooks_ContainerImage
@dynamic repository, tag;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_DataDisk
//

@implementation GTLRAIPlatformNotebooks_DataDisk
@dynamic diskEncryption, diskSizeGb, diskType, kmsKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_DefaultValues
//

@implementation GTLRAIPlatformNotebooks_DefaultValues
@dynamic machineType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_DiagnoseInstanceRequest
//

@implementation GTLRAIPlatformNotebooks_DiagnoseInstanceRequest
@dynamic diagnosticConfig, timeoutMinutes;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_DiagnosticConfig
//

@implementation GTLRAIPlatformNotebooks_DiagnosticConfig
@dynamic enableCopyHomeFilesFlag, enablePacketCaptureFlag, enableRepairFlag,
         gcsBucket, relativePath;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Empty
//

@implementation GTLRAIPlatformNotebooks_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Event
//

@implementation GTLRAIPlatformNotebooks_Event
@dynamic details, reportTime, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Event_Details
//

@implementation GTLRAIPlatformNotebooks_Event_Details

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Expr
//

@implementation GTLRAIPlatformNotebooks_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_GceSetup
//

@implementation GTLRAIPlatformNotebooks_GceSetup
@dynamic acceleratorConfigs, bootDisk, containerImage, dataDisks,
         disablePublicIp, enableIpForwarding, gpuDriverConfig, machineType,
         metadata, minCpuPlatform, networkInterfaces, serviceAccounts,
         shieldedInstanceConfig, tags, vmImage;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"acceleratorConfigs" : [GTLRAIPlatformNotebooks_AcceleratorConfig class],
    @"dataDisks" : [GTLRAIPlatformNotebooks_DataDisk class],
    @"networkInterfaces" : [GTLRAIPlatformNotebooks_NetworkInterface class],
    @"serviceAccounts" : [GTLRAIPlatformNotebooks_ServiceAccount class],
    @"tags" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_GceSetup_Metadata
//

@implementation GTLRAIPlatformNotebooks_GceSetup_Metadata

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_GPUDriverConfig
//

@implementation GTLRAIPlatformNotebooks_GPUDriverConfig
@dynamic customGpuDriverPath, enableGpuDriver;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_ImageRelease
//

@implementation GTLRAIPlatformNotebooks_ImageRelease
@dynamic imageName, releaseName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Instance
//

@implementation GTLRAIPlatformNotebooks_Instance
@dynamic createTime, creator, disableProxyAccess, enableThirdPartyIdentity,
         gceSetup, healthInfo, healthState, identifier, instanceOwners, labels,
         name, proxyUri, satisfiesPzi, satisfiesPzs, state, thirdPartyProxyUrl,
         updateTime, upgradeHistory;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instanceOwners" : [NSString class],
    @"upgradeHistory" : [GTLRAIPlatformNotebooks_UpgradeHistoryEntry class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Instance_HealthInfo
//

@implementation GTLRAIPlatformNotebooks_Instance_HealthInfo

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Instance_Labels
//

@implementation GTLRAIPlatformNotebooks_Instance_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_ListInstancesResponse
//

@implementation GTLRAIPlatformNotebooks_ListInstancesResponse
@dynamic instances, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRAIPlatformNotebooks_Instance class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"instances";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_ListLocationsResponse
//

@implementation GTLRAIPlatformNotebooks_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRAIPlatformNotebooks_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_ListOperationsResponse
//

@implementation GTLRAIPlatformNotebooks_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRAIPlatformNotebooks_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Location
//

@implementation GTLRAIPlatformNotebooks_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Location_Labels
//

@implementation GTLRAIPlatformNotebooks_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Location_Metadata
//

@implementation GTLRAIPlatformNotebooks_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_NetworkInterface
//

@implementation GTLRAIPlatformNotebooks_NetworkInterface
@dynamic accessConfigs, network, nicType, subnet;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accessConfigs" : [GTLRAIPlatformNotebooks_AccessConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Operation
//

@implementation GTLRAIPlatformNotebooks_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Operation_Metadata
//

@implementation GTLRAIPlatformNotebooks_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Operation_Response
//

@implementation GTLRAIPlatformNotebooks_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_OperationMetadata
//

@implementation GTLRAIPlatformNotebooks_OperationMetadata
@dynamic apiVersion, createTime, endpoint, endTime, requestedCancellation,
         statusMessage, target, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Policy
//

@implementation GTLRAIPlatformNotebooks_Policy
@dynamic bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bindings" : [GTLRAIPlatformNotebooks_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_ReportInstanceInfoSystemRequest
//

@implementation GTLRAIPlatformNotebooks_ReportInstanceInfoSystemRequest
@dynamic event, vmId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_ResetInstanceRequest
//

@implementation GTLRAIPlatformNotebooks_ResetInstanceRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_ResizeDiskRequest
//

@implementation GTLRAIPlatformNotebooks_ResizeDiskRequest
@dynamic bootDisk, dataDisk;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_RestoreInstanceRequest
//

@implementation GTLRAIPlatformNotebooks_RestoreInstanceRequest
@dynamic snapshot;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_RollbackInstanceRequest
//

@implementation GTLRAIPlatformNotebooks_RollbackInstanceRequest
@dynamic revisionId, targetSnapshot;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_ServiceAccount
//

@implementation GTLRAIPlatformNotebooks_ServiceAccount
@dynamic email, scopes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"scopes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_SetIamPolicyRequest
//

@implementation GTLRAIPlatformNotebooks_SetIamPolicyRequest
@dynamic policy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_ShieldedInstanceConfig
//

@implementation GTLRAIPlatformNotebooks_ShieldedInstanceConfig
@dynamic enableIntegrityMonitoring, enableSecureBoot, enableVtpm;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Snapshot
//

@implementation GTLRAIPlatformNotebooks_Snapshot
@dynamic projectId, snapshotId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_StartInstanceRequest
//

@implementation GTLRAIPlatformNotebooks_StartInstanceRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Status
//

@implementation GTLRAIPlatformNotebooks_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRAIPlatformNotebooks_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_Status_Details_Item
//

@implementation GTLRAIPlatformNotebooks_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_StopInstanceRequest
//

@implementation GTLRAIPlatformNotebooks_StopInstanceRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_SupportedValues
//

@implementation GTLRAIPlatformNotebooks_SupportedValues
@dynamic acceleratorTypes, machineTypes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"acceleratorTypes" : [NSString class],
    @"machineTypes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_TestIamPermissionsRequest
//

@implementation GTLRAIPlatformNotebooks_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_TestIamPermissionsResponse
//

@implementation GTLRAIPlatformNotebooks_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_UpgradeHistoryEntry
//

@implementation GTLRAIPlatformNotebooks_UpgradeHistoryEntry
@dynamic action, containerImage, createTime, framework, snapshot, state,
         targetVersion, version, vmImage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_UpgradeInstanceRequest
//

@implementation GTLRAIPlatformNotebooks_UpgradeInstanceRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_UpgradeInstanceSystemRequest
//

@implementation GTLRAIPlatformNotebooks_UpgradeInstanceSystemRequest
@dynamic vmId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRAIPlatformNotebooks_VmImage
//

@implementation GTLRAIPlatformNotebooks_VmImage
@dynamic family, name, project;
@end
