// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Build API (cloudbuild/v2)
// Description:
//   Creates and manages builds on Google Cloud Platform.
// Documentation:
//   https://cloud.google.com/cloud-build/docs/

#import <GoogleAPIClientForREST/GTLRCloudBuildObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRCloudBuild_AuditLogConfig.logType
NSString * const kGTLRCloudBuild_AuditLogConfig_LogType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRCloudBuild_AuditLogConfig_LogType_DataRead = @"DATA_READ";
NSString * const kGTLRCloudBuild_AuditLogConfig_LogType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRCloudBuild_AuditLogConfig_LogType_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";

// GTLRCloudBuild_ChildStatusReference.type
NSString * const kGTLRCloudBuild_ChildStatusReference_Type_TaskRun = @"TASK_RUN";
NSString * const kGTLRCloudBuild_ChildStatusReference_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudBuild_GoogleDevtoolsCloudbuildV2Condition.severity
NSString * const kGTLRCloudBuild_GoogleDevtoolsCloudbuildV2Condition_Severity_Info = @"INFO";
NSString * const kGTLRCloudBuild_GoogleDevtoolsCloudbuildV2Condition_Severity_SeverityUnspecified = @"SEVERITY_UNSPECIFIED";
NSString * const kGTLRCloudBuild_GoogleDevtoolsCloudbuildV2Condition_Severity_Warning = @"WARNING";

// GTLRCloudBuild_GoogleDevtoolsCloudbuildV2Condition.status
NSString * const kGTLRCloudBuild_GoogleDevtoolsCloudbuildV2Condition_Status_False = @"FALSE";
NSString * const kGTLRCloudBuild_GoogleDevtoolsCloudbuildV2Condition_Status_True = @"TRUE";
NSString * const kGTLRCloudBuild_GoogleDevtoolsCloudbuildV2Condition_Status_Unknown = @"UNKNOWN";

// GTLRCloudBuild_InstallationState.stage
NSString * const kGTLRCloudBuild_InstallationState_Stage_Complete = @"COMPLETE";
NSString * const kGTLRCloudBuild_InstallationState_Stage_PendingCreateApp = @"PENDING_CREATE_APP";
NSString * const kGTLRCloudBuild_InstallationState_Stage_PendingInstallApp = @"PENDING_INSTALL_APP";
NSString * const kGTLRCloudBuild_InstallationState_Stage_PendingUserOauth = @"PENDING_USER_OAUTH";
NSString * const kGTLRCloudBuild_InstallationState_Stage_StageUnspecified = @"STAGE_UNSPECIFIED";

// GTLRCloudBuild_ParamSpec.type
NSString * const kGTLRCloudBuild_ParamSpec_Type_Array          = @"ARRAY";
NSString * const kGTLRCloudBuild_ParamSpec_Type_Object         = @"OBJECT";
NSString * const kGTLRCloudBuild_ParamSpec_Type_String         = @"STRING";
NSString * const kGTLRCloudBuild_ParamSpec_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudBuild_ParamValue.type
NSString * const kGTLRCloudBuild_ParamValue_Type_Array         = @"ARRAY";
NSString * const kGTLRCloudBuild_ParamValue_Type_Object        = @"OBJECT";
NSString * const kGTLRCloudBuild_ParamValue_Type_String        = @"STRING";
NSString * const kGTLRCloudBuild_ParamValue_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudBuild_PipelineRef.resolver
NSString * const kGTLRCloudBuild_PipelineRef_Resolver_Bundles  = @"BUNDLES";
NSString * const kGTLRCloudBuild_PipelineRef_Resolver_Default  = @"DEFAULT";
NSString * const kGTLRCloudBuild_PipelineRef_Resolver_DeveloperConnect = @"DEVELOPER_CONNECT";
NSString * const kGTLRCloudBuild_PipelineRef_Resolver_GcbRepo  = @"GCB_REPO";
NSString * const kGTLRCloudBuild_PipelineRef_Resolver_Git      = @"GIT";
NSString * const kGTLRCloudBuild_PipelineRef_Resolver_ResolverNameUnspecified = @"RESOLVER_NAME_UNSPECIFIED";

// GTLRCloudBuild_PipelineResult.type
NSString * const kGTLRCloudBuild_PipelineResult_Type_Array     = @"ARRAY";
NSString * const kGTLRCloudBuild_PipelineResult_Type_Object    = @"OBJECT";
NSString * const kGTLRCloudBuild_PipelineResult_Type_String    = @"STRING";
NSString * const kGTLRCloudBuild_PipelineResult_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudBuild_PipelineRun.pipelineRunStatus
NSString * const kGTLRCloudBuild_PipelineRun_PipelineRunStatus_PipelineRunCancelled = @"PIPELINE_RUN_CANCELLED";
NSString * const kGTLRCloudBuild_PipelineRun_PipelineRunStatus_PipelineRunStatusUnspecified = @"PIPELINE_RUN_STATUS_UNSPECIFIED";

// GTLRCloudBuild_PropertySpec.type
NSString * const kGTLRCloudBuild_PropertySpec_Type_String      = @"STRING";
NSString * const kGTLRCloudBuild_PropertySpec_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudBuild_Provenance.enabled
NSString * const kGTLRCloudBuild_Provenance_Enabled_Disabled   = @"DISABLED";
NSString * const kGTLRCloudBuild_Provenance_Enabled_EnabledUnspecified = @"ENABLED_UNSPECIFIED";
NSString * const kGTLRCloudBuild_Provenance_Enabled_Optimistic = @"OPTIMISTIC";
NSString * const kGTLRCloudBuild_Provenance_Enabled_Required   = @"REQUIRED";

// GTLRCloudBuild_Provenance.region
NSString * const kGTLRCloudBuild_Provenance_Region_Global      = @"GLOBAL";
NSString * const kGTLRCloudBuild_Provenance_Region_RegionUnspecified = @"REGION_UNSPECIFIED";

// GTLRCloudBuild_Provenance.storage
NSString * const kGTLRCloudBuild_Provenance_Storage_ArtifactProjectOnly = @"ARTIFACT_PROJECT_ONLY";
NSString * const kGTLRCloudBuild_Provenance_Storage_BuildProjectOnly = @"BUILD_PROJECT_ONLY";
NSString * const kGTLRCloudBuild_Provenance_Storage_PreferArtifactProject = @"PREFER_ARTIFACT_PROJECT";
NSString * const kGTLRCloudBuild_Provenance_Storage_StorageUnspecified = @"STORAGE_UNSPECIFIED";

// GTLRCloudBuild_ResultValue.type
NSString * const kGTLRCloudBuild_ResultValue_Type_Array        = @"ARRAY";
NSString * const kGTLRCloudBuild_ResultValue_Type_Object       = @"OBJECT";
NSString * const kGTLRCloudBuild_ResultValue_Type_String       = @"STRING";
NSString * const kGTLRCloudBuild_ResultValue_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudBuild_Security.privilegeMode
NSString * const kGTLRCloudBuild_Security_PrivilegeMode_Privileged = @"PRIVILEGED";
NSString * const kGTLRCloudBuild_Security_PrivilegeMode_PrivilegeModeUnspecified = @"PRIVILEGE_MODE_UNSPECIFIED";
NSString * const kGTLRCloudBuild_Security_PrivilegeMode_Unprivileged = @"UNPRIVILEGED";

// GTLRCloudBuild_Step.onError
NSString * const kGTLRCloudBuild_Step_OnError_Continue         = @"CONTINUE";
NSString * const kGTLRCloudBuild_Step_OnError_OnErrorTypeUnspecified = @"ON_ERROR_TYPE_UNSPECIFIED";
NSString * const kGTLRCloudBuild_Step_OnError_StopAndFail      = @"STOP_AND_FAIL";

// GTLRCloudBuild_StepRef.resolver
NSString * const kGTLRCloudBuild_StepRef_Resolver_Bundles      = @"BUNDLES";
NSString * const kGTLRCloudBuild_StepRef_Resolver_Default      = @"DEFAULT";
NSString * const kGTLRCloudBuild_StepRef_Resolver_DeveloperConnect = @"DEVELOPER_CONNECT";
NSString * const kGTLRCloudBuild_StepRef_Resolver_GcbRepo      = @"GCB_REPO";
NSString * const kGTLRCloudBuild_StepRef_Resolver_Git          = @"GIT";
NSString * const kGTLRCloudBuild_StepRef_Resolver_ResolverNameUnspecified = @"RESOLVER_NAME_UNSPECIFIED";

// GTLRCloudBuild_TaskRef.resolver
NSString * const kGTLRCloudBuild_TaskRef_Resolver_Bundles      = @"BUNDLES";
NSString * const kGTLRCloudBuild_TaskRef_Resolver_Default      = @"DEFAULT";
NSString * const kGTLRCloudBuild_TaskRef_Resolver_DeveloperConnect = @"DEVELOPER_CONNECT";
NSString * const kGTLRCloudBuild_TaskRef_Resolver_GcbRepo      = @"GCB_REPO";
NSString * const kGTLRCloudBuild_TaskRef_Resolver_Git          = @"GIT";
NSString * const kGTLRCloudBuild_TaskRef_Resolver_ResolverNameUnspecified = @"RESOLVER_NAME_UNSPECIFIED";

// GTLRCloudBuild_TaskResult.type
NSString * const kGTLRCloudBuild_TaskResult_Type_Array         = @"ARRAY";
NSString * const kGTLRCloudBuild_TaskResult_Type_Object        = @"OBJECT";
NSString * const kGTLRCloudBuild_TaskResult_Type_String        = @"STRING";
NSString * const kGTLRCloudBuild_TaskResult_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCloudBuild_TaskSpec.managedSidecars
NSString * const kGTLRCloudBuild_TaskSpec_ManagedSidecars_ManagedSidecarUnspecified = @"MANAGED_SIDECAR_UNSPECIFIED";
NSString * const kGTLRCloudBuild_TaskSpec_ManagedSidecars_PrivilegedDockerDaemon = @"PRIVILEGED_DOCKER_DAEMON";

// GTLRCloudBuild_WhenExpression.expressionOperator
NSString * const kGTLRCloudBuild_WhenExpression_ExpressionOperator_ExpressionOperatorUnspecified = @"EXPRESSION_OPERATOR_UNSPECIFIED";
NSString * const kGTLRCloudBuild_WhenExpression_ExpressionOperator_In = @"IN";
NSString * const kGTLRCloudBuild_WhenExpression_ExpressionOperator_NotIn = @"NOT_IN";

// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_AuditConfig
//

@implementation GTLRCloudBuild_AuditConfig
@dynamic auditLogConfigs, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditLogConfigs" : [GTLRCloudBuild_AuditLogConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_AuditLogConfig
//

@implementation GTLRCloudBuild_AuditLogConfig
@dynamic exemptedMembers, logType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_BatchCreateRepositoriesRequest
//

@implementation GTLRCloudBuild_BatchCreateRepositoriesRequest
@dynamic requests;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"requests" : [GTLRCloudBuild_CreateRepositoryRequest class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_BatchCreateRepositoriesResponse
//

@implementation GTLRCloudBuild_BatchCreateRepositoriesResponse
@dynamic repositories;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"repositories" : [GTLRCloudBuild_Repository class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Binding
//

@implementation GTLRCloudBuild_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_BitbucketCloudConfig
//

@implementation GTLRCloudBuild_BitbucketCloudConfig
@dynamic authorizerCredential, readAuthorizerCredential,
         webhookSecretSecretVersion, workspace;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_BitbucketDataCenterConfig
//

@implementation GTLRCloudBuild_BitbucketDataCenterConfig
@dynamic authorizerCredential, hostUri, readAuthorizerCredential, serverVersion,
         serviceDirectoryConfig, sslCa, webhookSecretSecretVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_CancelOperationRequest
//

@implementation GTLRCloudBuild_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Capabilities
//

@implementation GTLRCloudBuild_Capabilities
@dynamic add, drop;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"add" : [NSString class],
    @"drop" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_ChildStatusReference
//

@implementation GTLRCloudBuild_ChildStatusReference
@dynamic name, pipelineTaskName, type, whenExpressions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"whenExpressions" : [GTLRCloudBuild_WhenExpression class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Connection
//

@implementation GTLRCloudBuild_Connection
@dynamic annotations, bitbucketCloudConfig, bitbucketDataCenterConfig,
         createTime, disabled, ETag, githubConfig, githubEnterpriseConfig,
         gitlabConfig, installationState, name, reconciling, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Connection_Annotations
//

@implementation GTLRCloudBuild_Connection_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_CreateRepositoryRequest
//

@implementation GTLRCloudBuild_CreateRepositoryRequest
@dynamic parent, repository, repositoryId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_EmbeddedTask
//

@implementation GTLRCloudBuild_EmbeddedTask
@dynamic annotations, taskSpec;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_EmbeddedTask_Annotations
//

@implementation GTLRCloudBuild_EmbeddedTask_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Empty
//

@implementation GTLRCloudBuild_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_EmptyDirVolumeSource
//

@implementation GTLRCloudBuild_EmptyDirVolumeSource
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_EnvVar
//

@implementation GTLRCloudBuild_EnvVar
@dynamic name, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_ExecAction
//

@implementation GTLRCloudBuild_ExecAction
@dynamic command;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"command" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Expr
//

@implementation GTLRCloudBuild_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_FetchGitRefsResponse
//

@implementation GTLRCloudBuild_FetchGitRefsResponse
@dynamic nextPageToken, refNames;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"refNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_FetchLinkableRepositoriesResponse
//

@implementation GTLRCloudBuild_FetchLinkableRepositoriesResponse
@dynamic nextPageToken, repositories;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"repositories" : [GTLRCloudBuild_Repository class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"repositories";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_FetchReadTokenRequest
//

@implementation GTLRCloudBuild_FetchReadTokenRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_FetchReadTokenResponse
//

@implementation GTLRCloudBuild_FetchReadTokenResponse
@dynamic expirationTime, token;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_FetchReadWriteTokenRequest
//

@implementation GTLRCloudBuild_FetchReadWriteTokenRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_FetchReadWriteTokenResponse
//

@implementation GTLRCloudBuild_FetchReadWriteTokenResponse
@dynamic expirationTime, token;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_GitHubConfig
//

@implementation GTLRCloudBuild_GitHubConfig
@dynamic appInstallationId, authorizerCredential;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_GoogleDevtoolsCloudbuildV2Condition
//

@implementation GTLRCloudBuild_GoogleDevtoolsCloudbuildV2Condition
@dynamic lastTransitionTime, message, reason, severity, status, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_GoogleDevtoolsCloudbuildV2GitHubEnterpriseConfig
//

@implementation GTLRCloudBuild_GoogleDevtoolsCloudbuildV2GitHubEnterpriseConfig
@dynamic apiKey, appId, appInstallationId, appSlug, hostUri,
         privateKeySecretVersion, serverVersion, serviceDirectoryConfig, sslCa,
         webhookSecretSecretVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_GoogleDevtoolsCloudbuildV2GitLabConfig
//

@implementation GTLRCloudBuild_GoogleDevtoolsCloudbuildV2GitLabConfig
@dynamic authorizerCredential, hostUri, readAuthorizerCredential, serverVersion,
         serviceDirectoryConfig, sslCa, webhookSecretSecretVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_GoogleDevtoolsCloudbuildV2OperationMetadata
//

@implementation GTLRCloudBuild_GoogleDevtoolsCloudbuildV2OperationMetadata
@dynamic apiVersion, createTime, endTime, requestedCancellation, statusMessage,
         target, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_GoogleDevtoolsCloudbuildV2ServiceDirectoryConfig
//

@implementation GTLRCloudBuild_GoogleDevtoolsCloudbuildV2ServiceDirectoryConfig
@dynamic service;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_HttpBody
//

@implementation GTLRCloudBuild_HttpBody
@dynamic contentType, data, extensions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"extensions" : [GTLRCloudBuild_HttpBody_Extensions_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_HttpBody_Extensions_Item
//

@implementation GTLRCloudBuild_HttpBody_Extensions_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_InstallationState
//

@implementation GTLRCloudBuild_InstallationState
@dynamic actionUri, message, stage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_ListConnectionsResponse
//

@implementation GTLRCloudBuild_ListConnectionsResponse
@dynamic connections, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"connections" : [GTLRCloudBuild_Connection class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"connections";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_ListLocationsResponse
//

@implementation GTLRCloudBuild_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRCloudBuild_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_ListRepositoriesResponse
//

@implementation GTLRCloudBuild_ListRepositoriesResponse
@dynamic nextPageToken, repositories;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"repositories" : [GTLRCloudBuild_Repository class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"repositories";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Location
//

@implementation GTLRCloudBuild_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Location_Labels
//

@implementation GTLRCloudBuild_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Location_Metadata
//

@implementation GTLRCloudBuild_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_OAuthCredential
//

@implementation GTLRCloudBuild_OAuthCredential
@dynamic oauthTokenSecretVersion, username;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Operation
//

@implementation GTLRCloudBuild_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Operation_Metadata
//

@implementation GTLRCloudBuild_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Operation_Response
//

@implementation GTLRCloudBuild_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_OperationMetadata
//

@implementation GTLRCloudBuild_OperationMetadata
@dynamic apiVersion, cancelRequested, createTime, endTime, statusDetail, target,
         verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Param
//

@implementation GTLRCloudBuild_Param
@dynamic name, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_ParamSpec
//

@implementation GTLRCloudBuild_ParamSpec
@dynamic defaultProperty, descriptionProperty, name, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"defaultProperty" : @"default",
    @"descriptionProperty" : @"description"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_ParamValue
//

@implementation GTLRCloudBuild_ParamValue
@dynamic arrayVal, objectVal, stringVal, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"arrayVal" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_ParamValue_ObjectVal
//

@implementation GTLRCloudBuild_ParamValue_ObjectVal

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_PipelineRef
//

@implementation GTLRCloudBuild_PipelineRef
@dynamic name, params, resolver;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"params" : [GTLRCloudBuild_Param class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_PipelineResult
//

@implementation GTLRCloudBuild_PipelineResult
@dynamic descriptionProperty, name, type, value;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_PipelineRun
//

@implementation GTLRCloudBuild_PipelineRun
@dynamic annotations, childReferences, completionTime, conditions, createTime,
         ETag, finallyStartTime, gcbParams, name, params, pipelineRef,
         pipelineRunStatus, pipelineSpec, pipelineSpecYaml, provenance, record,
         resolvedPipelineSpec, results, security, serviceAccount, skippedTasks,
         startTime, timeouts, uid, updateTime, worker, workerPool, workflow,
         workspaces;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"childReferences" : [GTLRCloudBuild_ChildStatusReference class],
    @"conditions" : [GTLRCloudBuild_GoogleDevtoolsCloudbuildV2Condition class],
    @"params" : [GTLRCloudBuild_Param class],
    @"results" : [GTLRCloudBuild_PipelineRunResult class],
    @"skippedTasks" : [GTLRCloudBuild_SkippedTask class],
    @"workspaces" : [GTLRCloudBuild_WorkspaceBinding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_PipelineRun_Annotations
//

@implementation GTLRCloudBuild_PipelineRun_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_PipelineRun_GcbParams
//

@implementation GTLRCloudBuild_PipelineRun_GcbParams

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_PipelineRunResult
//

@implementation GTLRCloudBuild_PipelineRunResult
@dynamic name, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_PipelineSpec
//

@implementation GTLRCloudBuild_PipelineSpec
@dynamic finallyTasks, generatedYaml, params, results, tasks, workspaces;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"finallyTasks" : [GTLRCloudBuild_PipelineTask class],
    @"params" : [GTLRCloudBuild_ParamSpec class],
    @"results" : [GTLRCloudBuild_PipelineResult class],
    @"tasks" : [GTLRCloudBuild_PipelineTask class],
    @"workspaces" : [GTLRCloudBuild_PipelineWorkspaceDeclaration class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_PipelineTask
//

@implementation GTLRCloudBuild_PipelineTask
@dynamic name, params, retries, runAfter, taskRef, taskSpec, timeout,
         whenExpressions, workspaces;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"params" : [GTLRCloudBuild_Param class],
    @"runAfter" : [NSString class],
    @"whenExpressions" : [GTLRCloudBuild_WhenExpression class],
    @"workspaces" : [GTLRCloudBuild_WorkspacePipelineTaskBinding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_PipelineWorkspaceDeclaration
//

@implementation GTLRCloudBuild_PipelineWorkspaceDeclaration
@dynamic descriptionProperty, name, optional;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Policy
//

@implementation GTLRCloudBuild_Policy
@dynamic auditConfigs, bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditConfigs" : [GTLRCloudBuild_AuditConfig class],
    @"bindings" : [GTLRCloudBuild_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Probe
//

@implementation GTLRCloudBuild_Probe
@dynamic exec, periodSeconds;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_PropertySpec
//

@implementation GTLRCloudBuild_PropertySpec
@dynamic type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Provenance
//

@implementation GTLRCloudBuild_Provenance
@dynamic enabled, region, storage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Repository
//

@implementation GTLRCloudBuild_Repository
@dynamic annotations, createTime, ETag, name, remoteUri, updateTime, webhookId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Repository_Annotations
//

@implementation GTLRCloudBuild_Repository_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_ResultValue
//

@implementation GTLRCloudBuild_ResultValue
@dynamic arrayVal, objectVal, stringVal, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"arrayVal" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_ResultValue_ObjectVal
//

@implementation GTLRCloudBuild_ResultValue_ObjectVal

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_RunWorkflowCustomOperationMetadata
//

@implementation GTLRCloudBuild_RunWorkflowCustomOperationMetadata
@dynamic apiVersion, createTime, endTime, pipelineRunId, requestedCancellation,
         target, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_SecretVolumeSource
//

@implementation GTLRCloudBuild_SecretVolumeSource
@dynamic secretName, secretVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Security
//

@implementation GTLRCloudBuild_Security
@dynamic privilegeMode, serviceAccount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_SecurityContext
//

@implementation GTLRCloudBuild_SecurityContext
@dynamic allowPrivilegeEscalation, capabilities, privileged, runAsGroup,
         runAsNonRoot, runAsUser;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_SetIamPolicyRequest
//

@implementation GTLRCloudBuild_SetIamPolicyRequest
@dynamic policy, updateMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Sidecar
//

@implementation GTLRCloudBuild_Sidecar
@dynamic args, command, env, image, name, readinessProbe, script,
         securityContext, volumeMounts, workingDir;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"args" : [NSString class],
    @"command" : [NSString class],
    @"env" : [GTLRCloudBuild_EnvVar class],
    @"volumeMounts" : [GTLRCloudBuild_VolumeMount class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_SkippedTask
//

@implementation GTLRCloudBuild_SkippedTask
@dynamic name, reason, whenExpressions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"whenExpressions" : [GTLRCloudBuild_WhenExpression class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Status
//

@implementation GTLRCloudBuild_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRCloudBuild_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Status_Details_Item
//

@implementation GTLRCloudBuild_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Step
//

@implementation GTLRCloudBuild_Step
@dynamic args, command, env, image, name, onError, params, ref, script,
         securityContext, timeout, volumeMounts, workingDir;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"args" : [NSString class],
    @"command" : [NSString class],
    @"env" : [GTLRCloudBuild_EnvVar class],
    @"params" : [GTLRCloudBuild_Param class],
    @"volumeMounts" : [GTLRCloudBuild_VolumeMount class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_StepRef
//

@implementation GTLRCloudBuild_StepRef
@dynamic name, params, resolver;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"params" : [GTLRCloudBuild_Param class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_StepTemplate
//

@implementation GTLRCloudBuild_StepTemplate
@dynamic env, volumeMounts;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"env" : [GTLRCloudBuild_EnvVar class],
    @"volumeMounts" : [GTLRCloudBuild_VolumeMount class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_TaskRef
//

@implementation GTLRCloudBuild_TaskRef
@dynamic name, params, resolver;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"params" : [GTLRCloudBuild_Param class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_TaskResult
//

@implementation GTLRCloudBuild_TaskResult
@dynamic descriptionProperty, name, properties, type, value;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_TaskResult_Properties
//

@implementation GTLRCloudBuild_TaskResult_Properties

+ (Class)classForAdditionalProperties {
  return [GTLRCloudBuild_PropertySpec class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_TaskSpec
//

@implementation GTLRCloudBuild_TaskSpec
@dynamic descriptionProperty, managedSidecars, params, results, sidecars, steps,
         stepTemplate, volumes, workspaces;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"managedSidecars" : [NSString class],
    @"params" : [GTLRCloudBuild_ParamSpec class],
    @"results" : [GTLRCloudBuild_TaskResult class],
    @"sidecars" : [GTLRCloudBuild_Sidecar class],
    @"steps" : [GTLRCloudBuild_Step class],
    @"volumes" : [GTLRCloudBuild_VolumeSource class],
    @"workspaces" : [GTLRCloudBuild_WorkspaceDeclaration class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_TestIamPermissionsRequest
//

@implementation GTLRCloudBuild_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_TestIamPermissionsResponse
//

@implementation GTLRCloudBuild_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_TimeoutFields
//

@implementation GTLRCloudBuild_TimeoutFields
@dynamic finally, pipeline, tasks;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_UserCredential
//

@implementation GTLRCloudBuild_UserCredential
@dynamic username, userTokenSecretVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_VolumeMount
//

@implementation GTLRCloudBuild_VolumeMount
@dynamic mountPath, name, readOnly, subPath, subPathExpr;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_VolumeSource
//

@implementation GTLRCloudBuild_VolumeSource
@dynamic emptyDir, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_WhenExpression
//

@implementation GTLRCloudBuild_WhenExpression
@dynamic expressionOperator, input, values;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"values" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_Worker
//

@implementation GTLRCloudBuild_Worker
@dynamic machineType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_WorkspaceBinding
//

@implementation GTLRCloudBuild_WorkspaceBinding
@dynamic name, secret, subPath;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_WorkspaceDeclaration
//

@implementation GTLRCloudBuild_WorkspaceDeclaration
@dynamic descriptionProperty, mountPath, name, optional, readOnly;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCloudBuild_WorkspacePipelineTaskBinding
//

@implementation GTLRCloudBuild_WorkspacePipelineTaskBinding
@dynamic name, subPath, workspace;
@end
