// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Service Networking API (servicenetworking/v1)
// Description:
//   Provides automatic management of network configurations necessary for
//   certain services.
// Documentation:
//   https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRServiceNetworkingObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Service Networking query classes.
 */
@interface GTLRServiceNetworkingQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: servicenetworking.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_OperationsCancel : GTLRServiceNetworkingQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRServiceNetworking_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRServiceNetworking_CancelOperationRequest to include
 *    in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRServiceNetworkingQuery_OperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: servicenetworking.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_OperationsDelete : GTLRServiceNetworkingQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRServiceNetworking_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRServiceNetworkingQuery_OperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: servicenetworking.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_OperationsGet : GTLRServiceNetworkingQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRServiceNetworkingQuery_OperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: servicenetworking.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_OperationsList : GTLRServiceNetworkingQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRServiceNetworking_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRServiceNetworkingQuery_OperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  For service producers, provisions a new subnet in a peered service's shared
 *  VPC network in the requested region and with the requested size that's
 *  expressed as a CIDR range (number of leading bits of ipV4 network mask). The
 *  method checks against the assigned allocated ranges to find a
 *  non-conflicting IP address range. The method will reuse a subnet if
 *  subsequent calls contain the same subnet name, region, and prefix length.
 *  This method will make producer's tenant project to be a shared VPC service
 *  project as needed.
 *
 *  Method: servicenetworking.services.addSubnetwork
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesAddSubnetwork : GTLRServiceNetworkingQuery

/**
 *  Required. A tenant project in the service producer organization, in the
 *  following format: services/{service}/{collection-id}/{resource-id}.
 *  {collection-id} is the cloud resource collection type that represents the
 *  tenant project. Only `projects` are supported. {resource-id} is the tenant
 *  project numeric id, such as `123456`. {service} the name of the peering
 *  service, such as `service-peering.example.com`. This service must already be
 *  enabled in the service consumer's project.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  For service producers, provisions a new subnet in a peered service's shared
 *  VPC network in the requested region and with the requested size that's
 *  expressed as a CIDR range (number of leading bits of ipV4 network mask). The
 *  method checks against the assigned allocated ranges to find a
 *  non-conflicting IP address range. The method will reuse a subnet if
 *  subsequent calls contain the same subnet name, region, and prefix length.
 *  This method will make producer's tenant project to be a shared VPC service
 *  project as needed.
 *
 *  @param object The @c GTLRServiceNetworking_AddSubnetworkRequest to include
 *    in the query.
 *  @param parent Required. A tenant project in the service producer
 *    organization, in the following format:
 *    services/{service}/{collection-id}/{resource-id}. {collection-id} is the
 *    cloud resource collection type that represents the tenant project. Only
 *    `projects` are supported. {resource-id} is the tenant project numeric id,
 *    such as `123456`. {service} the name of the peering service, such as
 *    `service-peering.example.com`. This service must already be enabled in the
 *    service consumer's project.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesAddSubnetwork
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_AddSubnetworkRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a private connection that establishes a VPC Network Peering
 *  connection to a VPC network in the service producer's organization. The
 *  administrator of the service consumer's VPC network invokes this method. The
 *  administrator must assign one or more allocated IP ranges for provisioning
 *  subnetworks in the service producer's VPC network. This connection is used
 *  for all supported services in the service producer's organization, so it
 *  only needs to be invoked once.
 *
 *  Method: servicenetworking.services.connections.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesConnectionsCreate : GTLRServiceNetworkingQuery

/**
 *  The service that is managing peering connectivity for a service producer's
 *  organization. For Google services that support this functionality, this
 *  value is `services/servicenetworking.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Creates a private connection that establishes a VPC Network Peering
 *  connection to a VPC network in the service producer's organization. The
 *  administrator of the service consumer's VPC network invokes this method. The
 *  administrator must assign one or more allocated IP ranges for provisioning
 *  subnetworks in the service producer's VPC network. This connection is used
 *  for all supported services in the service producer's organization, so it
 *  only needs to be invoked once.
 *
 *  @param object The @c GTLRServiceNetworking_Connection to include in the
 *    query.
 *  @param parent The service that is managing peering connectivity for a
 *    service producer's organization. For Google services that support this
 *    functionality, this value is `services/servicenetworking.googleapis.com`.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesConnectionsCreate
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_Connection *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a private service access connection.
 *
 *  Method: servicenetworking.services.connections.deleteConnection
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesConnectionsDeleteConnection : GTLRServiceNetworkingQuery

/**
 *  Required. The private service connection that connects to a service producer
 *  organization. The name includes both the private service name and the VPC
 *  network peering name in the format of
 *  `services/{peering_service_name}/connections/{vpc_peering_name}`. For Google
 *  services that support this functionality, this is
 *  `services/servicenetworking.googleapis.com/connections/servicenetworking-googleapis-com`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Deletes a private service access connection.
 *
 *  @param object The @c GTLRServiceNetworking_DeleteConnectionRequest to
 *    include in the query.
 *  @param name Required. The private service connection that connects to a
 *    service producer organization. The name includes both the private service
 *    name and the VPC network peering name in the format of
 *    `services/{peering_service_name}/connections/{vpc_peering_name}`. For
 *    Google services that support this functionality, this is
 *    `services/servicenetworking.googleapis.com/connections/servicenetworking-googleapis-com`.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesConnectionsDeleteConnection
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_DeleteConnectionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  List the private connections that are configured in a service consumer's VPC
 *  network.
 *
 *  Method: servicenetworking.services.connections.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesConnectionsList : GTLRServiceNetworkingQuery

/**
 *  The name of service consumer's VPC network that's connected with service
 *  producer network through a private connection. The network name must be in
 *  the following format: `projects/{project}/global/networks/{network}`.
 *  {project} is a project number, such as in `12345` that includes the VPC
 *  service consumer's VPC network. {network} is the name of the service
 *  consumer's VPC network.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  The service that is managing peering connectivity for a service producer's
 *  organization. For Google services that support this functionality, this
 *  value is `services/servicenetworking.googleapis.com`. If you specify
 *  `services/-` as the parameter value, all configured peering services are
 *  listed.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_ListConnectionsResponse.
 *
 *  List the private connections that are configured in a service consumer's VPC
 *  network.
 *
 *  @param parent The service that is managing peering connectivity for a
 *    service producer's organization. For Google services that support this
 *    functionality, this value is `services/servicenetworking.googleapis.com`.
 *    If you specify `services/-` as the parameter value, all configured peering
 *    services are listed.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesConnectionsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the allocated ranges that are assigned to a connection.
 *
 *  Method: servicenetworking.services.connections.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesConnectionsPatch : GTLRServiceNetworkingQuery

/**
 *  If a previously defined allocated range is removed, force flag must be set
 *  to true.
 */
@property(nonatomic, assign) BOOL force;

/**
 *  The private service connection that connects to a service producer
 *  organization. The name includes both the private service name and the VPC
 *  network peering name in the format of
 *  `services/{peering_service_name}/connections/{vpc_peering_name}`. For Google
 *  services that support this functionality, this is
 *  `services/servicenetworking.googleapis.com/connections/servicenetworking-googleapis-com`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The update mask. If this is omitted, it defaults to "*". You can only update
 *  the listed peering ranges.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Updates the allocated ranges that are assigned to a connection.
 *
 *  @param object The @c GTLRServiceNetworking_Connection to include in the
 *    query.
 *  @param name The private service connection that connects to a service
 *    producer organization. The name includes both the private service name and
 *    the VPC network peering name in the format of
 *    `services/{peering_service_name}/connections/{vpc_peering_name}`. For
 *    Google services that support this functionality, this is
 *    `services/servicenetworking.googleapis.com/connections/servicenetworking-googleapis-com`.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesConnectionsPatch
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_Connection *)object
                           name:(NSString *)name;

@end

/**
 *  Disables VPC service controls for a connection.
 *
 *  Method: servicenetworking.services.disableVpcServiceControls
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesDisableVpcServiceControls : GTLRServiceNetworkingQuery

/**
 *  The service that is managing peering connectivity for a service producer's
 *  organization. For Google services that support this functionality, this
 *  value is `services/servicenetworking.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Disables VPC service controls for a connection.
 *
 *  @param object The @c GTLRServiceNetworking_DisableVpcServiceControlsRequest
 *    to include in the query.
 *  @param parent The service that is managing peering connectivity for a
 *    service producer's organization. For Google services that support this
 *    functionality, this value is `services/servicenetworking.googleapis.com`.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesDisableVpcServiceControls
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_DisableVpcServiceControlsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Service producers can use this method to add DNS record sets to private DNS
 *  zones in the shared producer host project.
 *
 *  Method: servicenetworking.services.dnsRecordSets.add
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesDnsRecordSetsAdd : GTLRServiceNetworkingQuery

/**
 *  Required. The service that is managing peering connectivity for a service
 *  producer's organization. For Google services that support this
 *  functionality, this value is `services/servicenetworking.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Service producers can use this method to add DNS record sets to private DNS
 *  zones in the shared producer host project.
 *
 *  @param object The @c GTLRServiceNetworking_AddDnsRecordSetRequest to include
 *    in the query.
 *  @param parent Required. The service that is managing peering connectivity
 *    for a service producer's organization. For Google services that support
 *    this functionality, this value is
 *    `services/servicenetworking.googleapis.com`.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesDnsRecordSetsAdd
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_AddDnsRecordSetRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Service producers can use this method to remove DNS record sets from private
 *  DNS zones in the shared producer host project.
 *
 *  Method: servicenetworking.services.dnsRecordSets.remove
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesDnsRecordSetsRemove : GTLRServiceNetworkingQuery

/**
 *  Required. The service that is managing peering connectivity for a service
 *  producer's organization. For Google services that support this
 *  functionality, this value is `services/servicenetworking.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Service producers can use this method to remove DNS record sets from private
 *  DNS zones in the shared producer host project.
 *
 *  @param object The @c GTLRServiceNetworking_RemoveDnsRecordSetRequest to
 *    include in the query.
 *  @param parent Required. The service that is managing peering connectivity
 *    for a service producer's organization. For Google services that support
 *    this functionality, this value is
 *    `services/servicenetworking.googleapis.com`.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesDnsRecordSetsRemove
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_RemoveDnsRecordSetRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Service producers can use this method to update DNS record sets from private
 *  DNS zones in the shared producer host project.
 *
 *  Method: servicenetworking.services.dnsRecordSets.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesDnsRecordSetsUpdate : GTLRServiceNetworkingQuery

/**
 *  Required. The service that is managing peering connectivity for a service
 *  producer's organization. For Google services that support this
 *  functionality, this value is `services/servicenetworking.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Service producers can use this method to update DNS record sets from private
 *  DNS zones in the shared producer host project.
 *
 *  @param object The @c GTLRServiceNetworking_UpdateDnsRecordSetRequest to
 *    include in the query.
 *  @param parent Required. The service that is managing peering connectivity
 *    for a service producer's organization. For Google services that support
 *    this functionality, this value is
 *    `services/servicenetworking.googleapis.com`.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesDnsRecordSetsUpdate
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_UpdateDnsRecordSetRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Service producers can use this method to add private DNS zones in the shared
 *  producer host project and matching peering zones in the consumer project.
 *
 *  Method: servicenetworking.services.dnsZones.add
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesDnsZonesAdd : GTLRServiceNetworkingQuery

/**
 *  Required. The service that is managing peering connectivity for a service
 *  producer's organization. For Google services that support this
 *  functionality, this value is `services/servicenetworking.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Service producers can use this method to add private DNS zones in the shared
 *  producer host project and matching peering zones in the consumer project.
 *
 *  @param object The @c GTLRServiceNetworking_AddDnsZoneRequest to include in
 *    the query.
 *  @param parent Required. The service that is managing peering connectivity
 *    for a service producer's organization. For Google services that support
 *    this functionality, this value is
 *    `services/servicenetworking.googleapis.com`.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesDnsZonesAdd
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_AddDnsZoneRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Service producers can use this method to remove private DNS zones in the
 *  shared producer host project and matching peering zones in the consumer
 *  project.
 *
 *  Method: servicenetworking.services.dnsZones.remove
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesDnsZonesRemove : GTLRServiceNetworkingQuery

/**
 *  Required. The service that is managing peering connectivity for a service
 *  producer's organization. For Google services that support this
 *  functionality, this value is `services/servicenetworking.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Service producers can use this method to remove private DNS zones in the
 *  shared producer host project and matching peering zones in the consumer
 *  project.
 *
 *  @param object The @c GTLRServiceNetworking_RemoveDnsZoneRequest to include
 *    in the query.
 *  @param parent Required. The service that is managing peering connectivity
 *    for a service producer's organization. For Google services that support
 *    this functionality, this value is
 *    `services/servicenetworking.googleapis.com`.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesDnsZonesRemove
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_RemoveDnsZoneRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Enables VPC service controls for a connection.
 *
 *  Method: servicenetworking.services.enableVpcServiceControls
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesEnableVpcServiceControls : GTLRServiceNetworkingQuery

/**
 *  The service that is managing peering connectivity for a service producer's
 *  organization. For Google services that support this functionality, this
 *  value is `services/servicenetworking.googleapis.com`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Enables VPC service controls for a connection.
 *
 *  @param object The @c GTLRServiceNetworking_EnableVpcServiceControlsRequest
 *    to include in the query.
 *  @param parent The service that is managing peering connectivity for a
 *    service producer's organization. For Google services that support this
 *    functionality, this value is `services/servicenetworking.googleapis.com`.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesEnableVpcServiceControls
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_EnableVpcServiceControlsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Service producers use this method to get the configuration of their
 *  connection including the import/export of custom routes and subnetwork
 *  routes with public IP.
 *
 *  Method: servicenetworking.services.projects.global.networks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesProjectsGlobalNetworksGet : GTLRServiceNetworkingQuery

/**
 *  Optional. When true, include the used IP ranges as part of the
 *  GetConsumerConfig output. This includes routes created inside the service
 *  networking network, consumer network, peers of the consumer network, and
 *  reserved ranges inside the service networking network. By default, this is
 *  false
 */
@property(nonatomic, assign) BOOL includeUsedIpRanges;

/**
 *  Required. Name of the consumer config to retrieve in the format:
 *  `services/{service}/projects/{project}/global/networks/{network}`. {service}
 *  is the peering service that is managing connectivity for the service
 *  producer's organization. For Google services that support this
 *  functionality, this value is `servicenetworking.googleapis.com`. {project}
 *  is a project number e.g. `12345` that contains the service consumer's VPC
 *  network. {network} is the name of the service consumer's VPC network.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRServiceNetworking_ConsumerConfig.
 *
 *  Service producers use this method to get the configuration of their
 *  connection including the import/export of custom routes and subnetwork
 *  routes with public IP.
 *
 *  @param name Required. Name of the consumer config to retrieve in the format:
 *    `services/{service}/projects/{project}/global/networks/{network}`.
 *    {service} is the peering service that is managing connectivity for the
 *    service producer's organization. For Google services that support this
 *    functionality, this value is `servicenetworking.googleapis.com`. {project}
 *    is a project number e.g. `12345` that contains the service consumer's VPC
 *    network. {network} is the name of the service consumer's VPC network.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesProjectsGlobalNetworksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a peered DNS domain which sends requests for records in given
 *  namespace originating in the service producer VPC network to the consumer
 *  VPC network to be resolved.
 *
 *  Method: servicenetworking.services.projects.global.networks.peeredDnsDomains.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesProjectsGlobalNetworksPeeredDnsDomainsCreate : GTLRServiceNetworkingQuery

/**
 *  Required. Parent resource identifying the connection for which the peered
 *  DNS domain will be created in the format:
 *  `services/{service}/projects/{project}/global/networks/{network}` {service}
 *  is the peering service that is managing connectivity for the service
 *  producer's organization. For Google services that support this
 *  functionality, this value is `servicenetworking.googleapis.com`. {project}
 *  is the number of the project that contains the service consumer's VPC
 *  network e.g. `12345`. {network} is the name of the service consumer's VPC
 *  network.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Creates a peered DNS domain which sends requests for records in given
 *  namespace originating in the service producer VPC network to the consumer
 *  VPC network to be resolved.
 *
 *  @param object The @c GTLRServiceNetworking_PeeredDnsDomain to include in the
 *    query.
 *  @param parent Required. Parent resource identifying the connection for which
 *    the peered DNS domain will be created in the format:
 *    `services/{service}/projects/{project}/global/networks/{network}`
 *    {service} is the peering service that is managing connectivity for the
 *    service producer's organization. For Google services that support this
 *    functionality, this value is `servicenetworking.googleapis.com`. {project}
 *    is the number of the project that contains the service consumer's VPC
 *    network e.g. `12345`. {network} is the name of the service consumer's VPC
 *    network.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesProjectsGlobalNetworksPeeredDnsDomainsCreate
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_PeeredDnsDomain *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a peered DNS domain.
 *
 *  Method: servicenetworking.services.projects.global.networks.peeredDnsDomains.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesProjectsGlobalNetworksPeeredDnsDomainsDelete : GTLRServiceNetworkingQuery

/**
 *  Required. The name of the peered DNS domain to delete in the format:
 *  `services/{service}/projects/{project}/global/networks/{network}/peeredDnsDomains/{name}`.
 *  {service} is the peering service that is managing connectivity for the
 *  service producer's organization. For Google services that support this
 *  functionality, this value is `servicenetworking.googleapis.com`. {project}
 *  is the number of the project that contains the service consumer's VPC
 *  network e.g. `12345`. {network} is the name of the service consumer's VPC
 *  network. {name} is the name of the peered DNS domain.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Deletes a peered DNS domain.
 *
 *  @param name Required. The name of the peered DNS domain to delete in the
 *    format:
 *    `services/{service}/projects/{project}/global/networks/{network}/peeredDnsDomains/{name}`.
 *    {service} is the peering service that is managing connectivity for the
 *    service producer's organization. For Google services that support this
 *    functionality, this value is `servicenetworking.googleapis.com`. {project}
 *    is the number of the project that contains the service consumer's VPC
 *    network e.g. `12345`. {network} is the name of the service consumer's VPC
 *    network. {name} is the name of the peered DNS domain.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesProjectsGlobalNetworksPeeredDnsDomainsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists peered DNS domains for a connection.
 *
 *  Method: servicenetworking.services.projects.global.networks.peeredDnsDomains.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesProjectsGlobalNetworksPeeredDnsDomainsList : GTLRServiceNetworkingQuery

/**
 *  Required. Parent resource identifying the connection which owns this
 *  collection of peered DNS domains in the format:
 *  `services/{service}/projects/{project}/global/networks/{network}`. {service}
 *  is the peering service that is managing connectivity for the service
 *  producer's organization. For Google services that support this
 *  functionality, this value is `servicenetworking.googleapis.com`. {project}
 *  is a project number e.g. `12345` that contains the service consumer's VPC
 *  network. {network} is the name of the service consumer's VPC network.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_ListPeeredDnsDomainsResponse.
 *
 *  Lists peered DNS domains for a connection.
 *
 *  @param parent Required. Parent resource identifying the connection which
 *    owns this collection of peered DNS domains in the format:
 *    `services/{service}/projects/{project}/global/networks/{network}`.
 *    {service} is the peering service that is managing connectivity for the
 *    service producer's organization. For Google services that support this
 *    functionality, this value is `servicenetworking.googleapis.com`. {project}
 *    is a project number e.g. `12345` that contains the service consumer's VPC
 *    network. {network} is the name of the service consumer's VPC network.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesProjectsGlobalNetworksPeeredDnsDomainsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Service producers use this method to update the configuration of their
 *  connection including the import/export of custom routes and subnetwork
 *  routes with public IP.
 *
 *  Method: servicenetworking.services.projects.global.networks.updateConsumerConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesProjectsGlobalNetworksUpdateConsumerConfig : GTLRServiceNetworkingQuery

/**
 *  Required. Parent resource identifying the connection for which the consumer
 *  config is being updated in the format:
 *  `services/{service}/projects/{project}/global/networks/{network}` {service}
 *  is the peering service that is managing connectivity for the service
 *  producer's organization. For Google services that support this
 *  functionality, this value is `servicenetworking.googleapis.com`. {project}
 *  is the number of the project that contains the service consumer's VPC
 *  network e.g. `12345`. {network} is the name of the service consumer's VPC
 *  network.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Service producers use this method to update the configuration of their
 *  connection including the import/export of custom routes and subnetwork
 *  routes with public IP.
 *
 *  @param object The @c GTLRServiceNetworking_UpdateConsumerConfigRequest to
 *    include in the query.
 *  @param parent Required. Parent resource identifying the connection for which
 *    the consumer config is being updated in the format:
 *    `services/{service}/projects/{project}/global/networks/{network}`
 *    {service} is the peering service that is managing connectivity for the
 *    service producer's organization. For Google services that support this
 *    functionality, this value is `servicenetworking.googleapis.com`. {project}
 *    is the number of the project that contains the service consumer's VPC
 *    network e.g. `12345`. {network} is the name of the service consumer's VPC
 *    network.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesProjectsGlobalNetworksUpdateConsumerConfig
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_UpdateConsumerConfigRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Service producers can use this method to add roles in the shared VPC host
 *  project. Each role is bound to the provided member. Each role must be
 *  selected from within an allowlisted set of roles. Each role is applied at
 *  only the granularity specified in the allowlist.
 *
 *  Method: servicenetworking.services.roles.add
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesRolesAdd : GTLRServiceNetworkingQuery

/**
 *  Required. This is in a form services/{service} where {service} is the name
 *  of the private access management service. For example
 *  'service-peering.example.com'.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Service producers can use this method to add roles in the shared VPC host
 *  project. Each role is bound to the provided member. Each role must be
 *  selected from within an allowlisted set of roles. Each role is applied at
 *  only the granularity specified in the allowlist.
 *
 *  @param object The @c GTLRServiceNetworking_AddRolesRequest to include in the
 *    query.
 *  @param parent Required. This is in a form services/{service} where {service}
 *    is the name of the private access management service. For example
 *    'service-peering.example.com'.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesRolesAdd
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_AddRolesRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Service producers can use this method to find a currently unused range
 *  within consumer allocated ranges. This returned range is not reserved, and
 *  not guaranteed to remain unused. It will validate previously provided
 *  allocated ranges, find non-conflicting sub-range of requested size
 *  (expressed in number of leading bits of ipv4 network mask, as in CIDR range
 *  notation).
 *
 *  Method: servicenetworking.services.searchRange
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesSearchRange : GTLRServiceNetworkingQuery

/**
 *  Required. This is in a form services/{service}. {service} the name of the
 *  private access management service, for example
 *  'service-peering.example.com'.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_Operation.
 *
 *  Service producers can use this method to find a currently unused range
 *  within consumer allocated ranges. This returned range is not reserved, and
 *  not guaranteed to remain unused. It will validate previously provided
 *  allocated ranges, find non-conflicting sub-range of requested size
 *  (expressed in number of leading bits of ipv4 network mask, as in CIDR range
 *  notation).
 *
 *  @param object The @c GTLRServiceNetworking_SearchRangeRequest to include in
 *    the query.
 *  @param parent Required. This is in a form services/{service}. {service} the
 *    name of the private access management service, for example
 *    'service-peering.example.com'.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesSearchRange
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_SearchRangeRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Service producers use this method to validate if the consumer provided
 *  network, project and requested range are valid. This allows them to use a
 *  fail-fast mechanism for consumer requests, and not have to wait for
 *  AddSubnetwork operation completion to determine if user request is invalid.
 *
 *  Method: servicenetworking.services.validate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeServiceNetworkingCloudPlatform
 *    @c kGTLRAuthScopeServiceNetworkingServiceManagement
 */
@interface GTLRServiceNetworkingQuery_ServicesValidate : GTLRServiceNetworkingQuery

/**
 *  Required. This is in a form services/{service} where {service} is the name
 *  of the private access management service. For example
 *  'service-peering.example.com'.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRServiceNetworking_ValidateConsumerConfigResponse.
 *
 *  Service producers use this method to validate if the consumer provided
 *  network, project and requested range are valid. This allows them to use a
 *  fail-fast mechanism for consumer requests, and not have to wait for
 *  AddSubnetwork operation completion to determine if user request is invalid.
 *
 *  @param object The @c GTLRServiceNetworking_ValidateConsumerConfigRequest to
 *    include in the query.
 *  @param parent Required. This is in a form services/{service} where {service}
 *    is the name of the private access management service. For example
 *    'service-peering.example.com'.
 *
 *  @return GTLRServiceNetworkingQuery_ServicesValidate
 */
+ (instancetype)queryWithObject:(GTLRServiceNetworking_ValidateConsumerConfigRequest *)object
                         parent:(NSString *)parent;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
