// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Data Portability API (dataportability/v1beta)
// Description:
//   The Data Portability API lets you build applications that request
//   authorization from a user to move a copy of data from Google services into
//   your application. This enables data portability and facilitates switching
//   services.
// Documentation:
//   https://developers.google.com/data-portability

#import <GoogleAPIClientForREST/GTLRService.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Authorization scopes

/**
 *  Authorization scope: Move a copy of messages between you and the businesses
 *  you have conversations with across Google services.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.businessmessaging.conversations"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityBusinessmessagingConversations;
/**
 *  Authorization scope: Move a copy of your pinned trips on Maps.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.maps.commute_routes"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityMapsCommuteRoutes;
/**
 *  Authorization scope: Move a copy of your commute settings on Maps.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.maps.commute_settings"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityMapsCommuteSettings;
/**
 *  Authorization scope: Move a copy of your electric vehicle profile on Maps.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.maps.ev_profile"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityMapsEvProfile;
/**
 *  Authorization scope: Move a copy of your updates to places on Maps.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.maps.offering_contributions"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityMapsOfferingContributions;
/**
 *  Authorization scope: Move a copy of the photos and videos you posted on
 *  Maps.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.maps.photos_videos"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityMapsPhotosVideos;
/**
 *  Authorization scope: Move a copy of your reviews and posts on Maps.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.maps.reviews"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityMapsReviews;
/**
 *  Authorization scope: Move a copy of your Starred places list on Maps.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.maps.starred_places"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityMapsStarredPlaces;
/**
 *  Authorization scope: Move a copy of your Maps activity.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.myactivity.maps"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityMyactivityMaps;
/**
 *  Authorization scope: Move a copy of your Google Search activity.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.myactivity.search"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityMyactivitySearch;
/**
 *  Authorization scope: Move a copy of your Shopping activity.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.myactivity.shopping"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityMyactivityShopping;
/**
 *  Authorization scope: Move a copy of your YouTube activity.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.myactivity.youtube"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityMyactivityYoutube;
/**
 *  Authorization scope: Move a copy of your shipping information on Shopping.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.shopping.addresses"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityShoppingAddresses;
/**
 *  Authorization scope: Move a copy of reviews you wrote about products or
 *  online stores on Google Search.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.shopping.reviews"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityShoppingReviews;
/**
 *  Authorization scope: Move a copy of information about your YouTube channel.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.youtube.channel"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityYoutubeChannel;
/**
 *  Authorization scope: Move a copy of your YouTube comments.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.youtube.comments"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityYoutubeComments;
/**
 *  Authorization scope: Move a copy of your YouTube messages in live chat.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.youtube.live_chat"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityYoutubeLiveChat;
/**
 *  Authorization scope: Move a copy of your uploaded YouTube music tracks and
 *  your YouTube music library.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.youtube.music"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityYoutubeMusic;
/**
 *  Authorization scope: Move a copy of your YouTube private playlists.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.youtube.private_playlists"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityYoutubePrivatePlaylists;
/**
 *  Authorization scope: Move a copy of your private YouTube videos and
 *  information about them.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.youtube.private_videos"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityYoutubePrivateVideos;
/**
 *  Authorization scope: Move a copy of your public YouTube playlists.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.youtube.public_playlists"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityYoutubePublicPlaylists;
/**
 *  Authorization scope: Move a copy of your public YouTube videos and
 *  information about them.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.youtube.public_videos"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityYoutubePublicVideos;
/**
 *  Authorization scope: Move a copy of your YouTube shopping wishlists, and
 *  wishlist items.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.youtube.shopping"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityYoutubeShopping;
/**
 *  Authorization scope: Move a copy of your YouTube channel subscriptions, even
 *  if they're private.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.youtube.subscriptions"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityYoutubeSubscriptions;
/**
 *  Authorization scope: Move a copy of your unlisted YouTube playlists.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.youtube.unlisted_playlists"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityYoutubeUnlistedPlaylists;
/**
 *  Authorization scope: Move a copy of your unlisted YouTube videos and
 *  information about them.
 *
 *  Value "https://www.googleapis.com/auth/dataportability.youtube.unlisted_videos"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthScopeDataPortabilityYoutubeUnlistedVideos;

// ----------------------------------------------------------------------------
//   GTLRDataPortabilityService
//

/**
 *  Service for executing Data Portability API queries.
 *
 *  The Data Portability API lets you build applications that request
 *  authorization from a user to move a copy of data from Google services into
 *  your application. This enables data portability and facilitates switching
 *  services.
 */
@interface GTLRDataPortabilityService : GTLRService

// No new methods

// Clients should create a standard query with any of the class methods in
// GTLRDataPortabilityQuery.h. The query can the be sent with GTLRService's
// execute methods,
//
//   - (GTLRServiceTicket *)executeQuery:(GTLRQuery *)query
//                     completionHandler:(void (^)(GTLRServiceTicket *ticket,
//                                                 id object, NSError *error))handler;
// or
//   - (GTLRServiceTicket *)executeQuery:(GTLRQuery *)query
//                              delegate:(id)delegate
//                     didFinishSelector:(SEL)finishedSelector;
//
// where finishedSelector has a signature of:
//
//   - (void)serviceTicket:(GTLRServiceTicket *)ticket
//      finishedWithObject:(id)object
//                   error:(NSError *)error;
//
// The object passed to the completion handler or delegate method
// is a subclass of GTLRObject, determined by the query method executed.

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
