// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   SaaS Runtime API (saasservicemgmt/v1beta1)
// Documentation:
//   https://cloud.google.com/saas-runtime/docs

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRSaaSServiceManagementObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other SaaS Service Management query classes.
 */
@interface GTLRSaaSServiceManagementQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets information about a location.
 *
 *  Method: saasservicemgmt.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsGet : GTLRSaaSServiceManagementQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_GoogleCloudLocationLocation.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: saasservicemgmt.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsList : GTLRSaaSServiceManagementQuery

/**
 *  Optional. A list of extra location types that should be used as conditions
 *  for controlling the visibility of the locations.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *extraLocationTypes;

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Create a new release.
 *
 *  Method: saasservicemgmt.projects.locations.releases.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsReleasesCreate : GTLRSaaSServiceManagementQuery

/** Required. The parent of the release. */
@property(nonatomic, copy, nullable) NSString *parent;

/** Required. The ID value for the new release. */
@property(nonatomic, copy, nullable) NSString *releaseId;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Release.
 *
 *  Create a new release.
 *
 *  @param object The @c GTLRSaaSServiceManagement_Release to include in the
 *    query.
 *  @param parent Required. The parent of the release.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsReleasesCreate
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_Release *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete a single release.
 *
 *  Method: saasservicemgmt.projects.locations.releases.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsReleasesDelete : GTLRSaaSServiceManagementQuery

/**
 *  The etag known to the client for the expected state of the release. This is
 *  used with state-changing methods to prevent accidental overwrites when
 *  multiple user agents might be acting in parallel on the same resource. An
 *  etag wildcard provide optimistic concurrency based on the expected existence
 *  of the release. The Any wildcard (`*`) requires that the resource must
 *  already exists, and the Not Any wildcard (`!*`) requires that it must not.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Empty.
 *
 *  Delete a single release.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsReleasesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a single release.
 *
 *  Method: saasservicemgmt.projects.locations.releases.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsReleasesGet : GTLRSaaSServiceManagementQuery

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Release.
 *
 *  Retrieve a single release.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsReleasesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a collection of releases.
 *
 *  Method: saasservicemgmt.projects.locations.releases.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsReleasesList : GTLRSaaSServiceManagementQuery

/** Filter the list as specified in https://google.aip.dev/160. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Order results as specified in https://google.aip.dev/132. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of releases to send per page. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The page token: If the next_page_token from a previous response is provided,
 *  this request will send the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent of the release. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_ListReleasesResponse.
 *
 *  Retrieve a collection of releases.
 *
 *  @param parent Required. The parent of the release.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsReleasesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a single release.
 *
 *  Method: saasservicemgmt.projects.locations.releases.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsReleasesPatch : GTLRSaaSServiceManagementQuery

/**
 *  Identifier. The resource name (full URI of the resource) following the
 *  standard naming scheme:
 *  "projects/{project}/locations/{location}/releases/{release}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Field mask is used to specify the fields to be overwritten in the Release
 *  resource by the update. The fields specified in the update_mask are relative
 *  to the resource, not the full request. A field will be overwritten if it is
 *  in the mask. If the user does not provide a mask then all fields in the
 *  Release will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Release.
 *
 *  Update a single release.
 *
 *  @param object The @c GTLRSaaSServiceManagement_Release to include in the
 *    query.
 *  @param name Identifier. The resource name (full URI of the resource)
 *    following the standard naming scheme:
 *    "projects/{project}/locations/{location}/releases/{release}"
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsReleasesPatch
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_Release *)object
                           name:(NSString *)name;

@end

/**
 *  Create a new rollout kind.
 *
 *  Method: saasservicemgmt.projects.locations.rolloutKinds.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutKindsCreate : GTLRSaaSServiceManagementQuery

/** Required. The parent of the rollout kind. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. The ID value for the new rollout kind. */
@property(nonatomic, copy, nullable) NSString *rolloutKindId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_RolloutKind.
 *
 *  Create a new rollout kind.
 *
 *  @param object The @c GTLRSaaSServiceManagement_RolloutKind to include in the
 *    query.
 *  @param parent Required. The parent of the rollout kind.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutKindsCreate
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_RolloutKind *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete a single rollout kind.
 *
 *  Method: saasservicemgmt.projects.locations.rolloutKinds.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutKindsDelete : GTLRSaaSServiceManagementQuery

/**
 *  The etag known to the client for the expected state of the rollout kind.
 *  This is used with state-changing methods to prevent accidental overwrites
 *  when multiple user agents might be acting in parallel on the same resource.
 *  An etag wildcard provide optimistic concurrency based on the expected
 *  existence of the rollout kind. The Any wildcard (`*`) requires that the
 *  resource must already exists, and the Not Any wildcard (`!*`) requires that
 *  it must not.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Empty.
 *
 *  Delete a single rollout kind.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutKindsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a single rollout kind.
 *
 *  Method: saasservicemgmt.projects.locations.rolloutKinds.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutKindsGet : GTLRSaaSServiceManagementQuery

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_RolloutKind.
 *
 *  Retrieve a single rollout kind.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutKindsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a collection of rollout kinds.
 *
 *  Method: saasservicemgmt.projects.locations.rolloutKinds.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutKindsList : GTLRSaaSServiceManagementQuery

/** Filter the list as specified in https://google.aip.dev/160. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Order results as specified in https://google.aip.dev/132. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of rollout kinds to send per page. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The page token: If the next_page_token from a previous response is provided,
 *  this request will send the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent of the rollout kind. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_ListRolloutKindsResponse.
 *
 *  Retrieve a collection of rollout kinds.
 *
 *  @param parent Required. The parent of the rollout kind.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutKindsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a single rollout kind.
 *
 *  Method: saasservicemgmt.projects.locations.rolloutKinds.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutKindsPatch : GTLRSaaSServiceManagementQuery

/**
 *  Identifier. The resource name (full URI of the resource) following the
 *  standard naming scheme:
 *  "projects/{project}/locations/{location}/rolloutKinds/{rollout_kind_id}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Field mask is used to specify the fields to be overwritten in the
 *  RolloutKind resource by the update. The fields specified in the update_mask
 *  are relative to the resource, not the full request. A field will be
 *  overwritten if it is in the mask. If the user does not provide a mask then
 *  all fields in the RolloutKind will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_RolloutKind.
 *
 *  Update a single rollout kind.
 *
 *  @param object The @c GTLRSaaSServiceManagement_RolloutKind to include in the
 *    query.
 *  @param name Identifier. The resource name (full URI of the resource)
 *    following the standard naming scheme:
 *    "projects/{project}/locations/{location}/rolloutKinds/{rollout_kind_id}"
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutKindsPatch
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_RolloutKind *)object
                           name:(NSString *)name;

@end

/**
 *  Create a new rollout.
 *
 *  Method: saasservicemgmt.projects.locations.rollouts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutsCreate : GTLRSaaSServiceManagementQuery

/** Required. The parent of the rollout. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. The ID value for the new rollout. */
@property(nonatomic, copy, nullable) NSString *rolloutId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Rollout.
 *
 *  Create a new rollout.
 *
 *  @param object The @c GTLRSaaSServiceManagement_Rollout to include in the
 *    query.
 *  @param parent Required. The parent of the rollout.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutsCreate
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_Rollout *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete a single rollout.
 *
 *  Method: saasservicemgmt.projects.locations.rollouts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutsDelete : GTLRSaaSServiceManagementQuery

/**
 *  The etag known to the client for the expected state of the rollout. This is
 *  used with state-changing methods to prevent accidental overwrites when
 *  multiple user agents might be acting in parallel on the same resource. An
 *  etag wildcard provide optimistic concurrency based on the expected existence
 *  of the rollout. The Any wildcard (`*`) requires that the resource must
 *  already exists, and the Not Any wildcard (`!*`) requires that it must not.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Empty.
 *
 *  Delete a single rollout.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a single rollout.
 *
 *  Method: saasservicemgmt.projects.locations.rollouts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutsGet : GTLRSaaSServiceManagementQuery

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Rollout.
 *
 *  Retrieve a single rollout.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a collection of rollouts.
 *
 *  Method: saasservicemgmt.projects.locations.rollouts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutsList : GTLRSaaSServiceManagementQuery

/** Filter the list as specified in https://google.aip.dev/160. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Order results as specified in https://google.aip.dev/132. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of rollouts to send per page. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The page token: If the next_page_token from a previous response is provided,
 *  this request will send the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent of the rollout. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_ListRolloutsResponse.
 *
 *  Retrieve a collection of rollouts.
 *
 *  @param parent Required. The parent of the rollout.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a single rollout.
 *
 *  Method: saasservicemgmt.projects.locations.rollouts.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutsPatch : GTLRSaaSServiceManagementQuery

/**
 *  Identifier. The resource name (full URI of the resource) following the
 *  standard naming scheme:
 *  "projects/{project}/locations/{location}/rollout/{rollout_id}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Field mask is used to specify the fields to be overwritten in the Rollout
 *  resource by the update. The fields specified in the update_mask are relative
 *  to the resource, not the full request. A field will be overwritten if it is
 *  in the mask. If the user does not provide a mask then all fields in the
 *  Rollout will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Rollout.
 *
 *  Update a single rollout.
 *
 *  @param object The @c GTLRSaaSServiceManagement_Rollout to include in the
 *    query.
 *  @param name Identifier. The resource name (full URI of the resource)
 *    following the standard naming scheme:
 *    "projects/{project}/locations/{location}/rollout/{rollout_id}"
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsRolloutsPatch
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_Rollout *)object
                           name:(NSString *)name;

@end

/**
 *  Create a new saas.
 *
 *  Method: saasservicemgmt.projects.locations.saas.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsSaasCreate : GTLRSaaSServiceManagementQuery

/** Required. The parent of the saas. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. The ID value for the new saas. */
@property(nonatomic, copy, nullable) NSString *saasId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Saas.
 *
 *  Create a new saas.
 *
 *  @param object The @c GTLRSaaSServiceManagement_Saas to include in the query.
 *  @param parent Required. The parent of the saas.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsSaasCreate
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_Saas *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete a single saas.
 *
 *  Method: saasservicemgmt.projects.locations.saas.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsSaasDelete : GTLRSaaSServiceManagementQuery

/**
 *  The etag known to the client for the expected state of the saas. This is
 *  used with state-changing methods to prevent accidental overwrites when
 *  multiple user agents might be acting in parallel on the same resource. An
 *  etag wildcard provide optimistic concurrency based on the expected existence
 *  of the saas. The Any wildcard (`*`) requires that the resource must already
 *  exists, and the Not Any wildcard (`!*`) requires that it must not.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Empty.
 *
 *  Delete a single saas.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsSaasDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a single saas.
 *
 *  Method: saasservicemgmt.projects.locations.saas.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsSaasGet : GTLRSaaSServiceManagementQuery

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Saas.
 *
 *  Retrieve a single saas.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsSaasGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a collection of saas.
 *
 *  Method: saasservicemgmt.projects.locations.saas.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsSaasList : GTLRSaaSServiceManagementQuery

/** Filter the list as specified in https://google.aip.dev/160. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Order results as specified in https://google.aip.dev/132. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of saas to send per page. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The page token: If the next_page_token from a previous response is provided,
 *  this request will send the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent of the saas. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_ListSaasResponse.
 *
 *  Retrieve a collection of saas.
 *
 *  @param parent Required. The parent of the saas.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsSaasList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a single saas.
 *
 *  Method: saasservicemgmt.projects.locations.saas.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsSaasPatch : GTLRSaaSServiceManagementQuery

/**
 *  Identifier. The resource name (full URI of the resource) following the
 *  standard naming scheme:
 *  "projects/{project}/locations/{location}/saas/{saas}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Field mask is used to specify the fields to be overwritten in the Saas
 *  resource by the update. The fields specified in the update_mask are relative
 *  to the resource, not the full request. A field will be overwritten if it is
 *  in the mask. If the user does not provide a mask then all fields in the Saas
 *  will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Saas.
 *
 *  Update a single saas.
 *
 *  @param object The @c GTLRSaaSServiceManagement_Saas to include in the query.
 *  @param name Identifier. The resource name (full URI of the resource)
 *    following the standard naming scheme:
 *    "projects/{project}/locations/{location}/saas/{saas}"
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsSaasPatch
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_Saas *)object
                           name:(NSString *)name;

@end

/**
 *  Create a new tenant.
 *
 *  Method: saasservicemgmt.projects.locations.tenants.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsTenantsCreate : GTLRSaaSServiceManagementQuery

/** Required. The parent of the tenant. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. The ID value for the new tenant. */
@property(nonatomic, copy, nullable) NSString *tenantId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Tenant.
 *
 *  Create a new tenant.
 *
 *  @param object The @c GTLRSaaSServiceManagement_Tenant to include in the
 *    query.
 *  @param parent Required. The parent of the tenant.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsTenantsCreate
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_Tenant *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete a single tenant.
 *
 *  Method: saasservicemgmt.projects.locations.tenants.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsTenantsDelete : GTLRSaaSServiceManagementQuery

/**
 *  The etag known to the client for the expected state of the tenant. This is
 *  used with state-changing methods to prevent accidental overwrites when
 *  multiple user agents might be acting in parallel on the same resource. An
 *  etag wildcard provide optimistic concurrency based on the expected existence
 *  of the tenant. The Any wildcard (`*`) requires that the resource must
 *  already exists, and the Not Any wildcard (`!*`) requires that it must not.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Empty.
 *
 *  Delete a single tenant.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsTenantsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a single tenant.
 *
 *  Method: saasservicemgmt.projects.locations.tenants.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsTenantsGet : GTLRSaaSServiceManagementQuery

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Tenant.
 *
 *  Retrieve a single tenant.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsTenantsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a collection of tenants.
 *
 *  Method: saasservicemgmt.projects.locations.tenants.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsTenantsList : GTLRSaaSServiceManagementQuery

/** Filter the list as specified in https://google.aip.dev/160. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Order results as specified in https://google.aip.dev/132. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of tenants to send per page. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The page token: If the next_page_token from a previous response is provided,
 *  this request will send the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent of the tenant. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_ListTenantsResponse.
 *
 *  Retrieve a collection of tenants.
 *
 *  @param parent Required. The parent of the tenant.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsTenantsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a single tenant.
 *
 *  Method: saasservicemgmt.projects.locations.tenants.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsTenantsPatch : GTLRSaaSServiceManagementQuery

/**
 *  Identifier. The resource name (full URI of the resource) following the
 *  standard naming scheme:
 *  "projects/{project}/locations/{location}/tenants/{tenant}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Field mask is used to specify the fields to be overwritten in the Tenant
 *  resource by the update. The fields specified in the update_mask are relative
 *  to the resource, not the full request. A field will be overwritten if it is
 *  in the mask. If the user does not provide a mask then all fields in the
 *  Tenant will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Tenant.
 *
 *  Update a single tenant.
 *
 *  @param object The @c GTLRSaaSServiceManagement_Tenant to include in the
 *    query.
 *  @param name Identifier. The resource name (full URI of the resource)
 *    following the standard naming scheme:
 *    "projects/{project}/locations/{location}/tenants/{tenant}"
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsTenantsPatch
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_Tenant *)object
                           name:(NSString *)name;

@end

/**
 *  Create a new unit kind.
 *
 *  Method: saasservicemgmt.projects.locations.unitKinds.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitKindsCreate : GTLRSaaSServiceManagementQuery

/** Required. The parent of the unit kind. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. The ID value for the new unit kind. */
@property(nonatomic, copy, nullable) NSString *unitKindId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_UnitKind.
 *
 *  Create a new unit kind.
 *
 *  @param object The @c GTLRSaaSServiceManagement_UnitKind to include in the
 *    query.
 *  @param parent Required. The parent of the unit kind.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitKindsCreate
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_UnitKind *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete a single unit kind.
 *
 *  Method: saasservicemgmt.projects.locations.unitKinds.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitKindsDelete : GTLRSaaSServiceManagementQuery

/**
 *  The etag known to the client for the expected state of the unit kind. This
 *  is used with state-changing methods to prevent accidental overwrites when
 *  multiple user agents might be acting in parallel on the same resource. An
 *  etag wildcard provide optimistic concurrency based on the expected existence
 *  of the unit kind. The Any wildcard (`*`) requires that the resource must
 *  already exists, and the Not Any wildcard (`!*`) requires that it must not.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Empty.
 *
 *  Delete a single unit kind.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitKindsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a single unit kind.
 *
 *  Method: saasservicemgmt.projects.locations.unitKinds.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitKindsGet : GTLRSaaSServiceManagementQuery

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_UnitKind.
 *
 *  Retrieve a single unit kind.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitKindsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a collection of unit kinds.
 *
 *  Method: saasservicemgmt.projects.locations.unitKinds.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitKindsList : GTLRSaaSServiceManagementQuery

/** Filter the list as specified in https://google.aip.dev/160. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Order results as specified in https://google.aip.dev/132. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of unit kinds to send per page. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The page token: If the next_page_token from a previous response is provided,
 *  this request will send the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent of the unit kind. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_ListUnitKindsResponse.
 *
 *  Retrieve a collection of unit kinds.
 *
 *  @param parent Required. The parent of the unit kind.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitKindsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a single unit kind.
 *
 *  Method: saasservicemgmt.projects.locations.unitKinds.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitKindsPatch : GTLRSaaSServiceManagementQuery

/**
 *  Identifier. The resource name (full URI of the resource) following the
 *  standard naming scheme:
 *  "projects/{project}/locations/{location}/unitKinds/{unitKind}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Field mask is used to specify the fields to be overwritten in the UnitKind
 *  resource by the update. The fields specified in the update_mask are relative
 *  to the resource, not the full request. A field will be overwritten if it is
 *  in the mask. If the user does not provide a mask then all fields in the
 *  UnitKind will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_UnitKind.
 *
 *  Update a single unit kind.
 *
 *  @param object The @c GTLRSaaSServiceManagement_UnitKind to include in the
 *    query.
 *  @param name Identifier. The resource name (full URI of the resource)
 *    following the standard naming scheme:
 *    "projects/{project}/locations/{location}/unitKinds/{unitKind}"
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitKindsPatch
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_UnitKind *)object
                           name:(NSString *)name;

@end

/**
 *  Create a new unit operation.
 *
 *  Method: saasservicemgmt.projects.locations.unitOperations.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitOperationsCreate : GTLRSaaSServiceManagementQuery

/** Required. The parent of the unit operation. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. The ID value for the new unit operation. */
@property(nonatomic, copy, nullable) NSString *unitOperationId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_UnitOperation.
 *
 *  Create a new unit operation.
 *
 *  @param object The @c GTLRSaaSServiceManagement_UnitOperation to include in
 *    the query.
 *  @param parent Required. The parent of the unit operation.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitOperationsCreate
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_UnitOperation *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete a single unit operation.
 *
 *  Method: saasservicemgmt.projects.locations.unitOperations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitOperationsDelete : GTLRSaaSServiceManagementQuery

/**
 *  The etag known to the client for the expected state of the unit operation.
 *  This is used with state-changing methods to prevent accidental overwrites
 *  when multiple user agents might be acting in parallel on the same resource.
 *  An etag wildcard provide optimistic concurrency based on the expected
 *  existence of the unit operation. The Any wildcard (`*`) requires that the
 *  resource must already exists, and the Not Any wildcard (`!*`) requires that
 *  it must not.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Empty.
 *
 *  Delete a single unit operation.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a single unit operation.
 *
 *  Method: saasservicemgmt.projects.locations.unitOperations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitOperationsGet : GTLRSaaSServiceManagementQuery

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_UnitOperation.
 *
 *  Retrieve a single unit operation.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a collection of unit operations.
 *
 *  Method: saasservicemgmt.projects.locations.unitOperations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitOperationsList : GTLRSaaSServiceManagementQuery

/** Filter the list as specified in https://google.aip.dev/160. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Order results as specified in https://google.aip.dev/132. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of unit operations to send per page. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The page token: If the next_page_token from a previous response is provided,
 *  this request will send the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent of the unit operation. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_ListUnitOperationsResponse.
 *
 *  Retrieve a collection of unit operations.
 *
 *  @param parent Required. The parent of the unit operation.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a single unit operation.
 *
 *  Method: saasservicemgmt.projects.locations.unitOperations.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitOperationsPatch : GTLRSaaSServiceManagementQuery

/**
 *  Identifier. The resource name (full URI of the resource) following the
 *  standard naming scheme:
 *  "projects/{project}/locations/{location}/unitOperations/{unitOperation}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Field mask is used to specify the fields to be overwritten in the
 *  UnitOperation resource by the update. The fields specified in the
 *  update_mask are relative to the resource, not the full request. A field will
 *  be overwritten if it is in the mask. If the user does not provide a mask
 *  then all fields in the UnitOperation will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_UnitOperation.
 *
 *  Update a single unit operation.
 *
 *  @param object The @c GTLRSaaSServiceManagement_UnitOperation to include in
 *    the query.
 *  @param name Identifier. The resource name (full URI of the resource)
 *    following the standard naming scheme:
 *    "projects/{project}/locations/{location}/unitOperations/{unitOperation}"
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitOperationsPatch
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_UnitOperation *)object
                           name:(NSString *)name;

@end

/**
 *  Create a new unit.
 *
 *  Method: saasservicemgmt.projects.locations.units.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitsCreate : GTLRSaaSServiceManagementQuery

/** Required. The parent of the unit. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/** Required. The ID value for the new unit. */
@property(nonatomic, copy, nullable) NSString *unitId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Unit.
 *
 *  Create a new unit.
 *
 *  @param object The @c GTLRSaaSServiceManagement_Unit to include in the query.
 *  @param parent Required. The parent of the unit.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitsCreate
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_Unit *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete a single unit.
 *
 *  Method: saasservicemgmt.projects.locations.units.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitsDelete : GTLRSaaSServiceManagementQuery

/**
 *  The etag known to the client for the expected state of the unit. This is
 *  used with state-changing methods to prevent accidental overwrites when
 *  multiple user agents might be acting in parallel on the same resource. An
 *  etag wildcard provide optimistic concurrency based on the expected existence
 *  of the unit. The Any wildcard (`*`) requires that the resource must already
 *  exists, and the Not Any wildcard (`!*`) requires that it must not.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Empty.
 *
 *  Delete a single unit.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a single unit.
 *
 *  Method: saasservicemgmt.projects.locations.units.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitsGet : GTLRSaaSServiceManagementQuery

/** Required. The resource name of the resource within a service. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Unit.
 *
 *  Retrieve a single unit.
 *
 *  @param name Required. The resource name of the resource within a service.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a collection of units.
 *
 *  Method: saasservicemgmt.projects.locations.units.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitsList : GTLRSaaSServiceManagementQuery

/** Filter the list as specified in https://google.aip.dev/160. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Order results as specified in https://google.aip.dev/132. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The maximum number of units to send per page. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The page token: If the next_page_token from a previous response is provided,
 *  this request will send the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent of the unit. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_ListUnitsResponse.
 *
 *  Retrieve a collection of units.
 *
 *  @param parent Required. The parent of the unit.
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a single unit.
 *
 *  Method: saasservicemgmt.projects.locations.units.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeSaaSServiceManagementCloudPlatform
 */
@interface GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitsPatch : GTLRSaaSServiceManagementQuery

/**
 *  Identifier. The resource name (full URI of the resource) following the
 *  standard naming scheme:
 *  "projects/{project}/locations/{location}/units/{unit}"
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An optional request ID to identify requests. Specify a unique request ID so
 *  that if you must retry your request, the server will know to ignore the
 *  request if it has already been completed. The server will guarantee that for
 *  at least 60 minutes since the first request. For example, consider a
 *  situation where you make an initial request and the request times out. If
 *  you make the request again with the same request ID, the server can check if
 *  original operation with the same request ID was received, and if so, will
 *  ignore the second request. This prevents clients from accidentally creating
 *  duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Field mask is used to specify the fields to be overwritten in the Unit
 *  resource by the update. The fields specified in the update_mask are relative
 *  to the resource, not the full request. A field will be overwritten if it is
 *  in the mask. If the user does not provide a mask then all fields in the Unit
 *  will be overwritten.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  If "validate_only" is set to true, the service will try to validate that
 *  this request would succeed, but will not actually make changes.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRSaaSServiceManagement_Unit.
 *
 *  Update a single unit.
 *
 *  @param object The @c GTLRSaaSServiceManagement_Unit to include in the query.
 *  @param name Identifier. The resource name (full URI of the resource)
 *    following the standard naming scheme:
 *    "projects/{project}/locations/{location}/units/{unit}"
 *
 *  @return GTLRSaaSServiceManagementQuery_ProjectsLocationsUnitsPatch
 */
+ (instancetype)queryWithObject:(GTLRSaaSServiceManagement_Unit *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
