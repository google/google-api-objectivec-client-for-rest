// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Talent Solution API (jobs/v4)
// Description:
//   Cloud Talent Solution provides the capability to create, read, update, and
//   delete job postings, as well as search jobs based on keywords and filters.
// Documentation:
//   https://cloud.google.com/talent-solution/job-search/docs/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRCloudTalentSolutionObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// jobView

/**
 *  All available attributes are included in the search results.
 *
 *  Value: "JOB_VIEW_FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudTalentSolutionJobViewJobViewFull;
/**
 *  A ID only view of job, with following attributes: Job.name,
 *  Job.requisition_id, Job.language_code.
 *
 *  Value: "JOB_VIEW_ID_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudTalentSolutionJobViewJobViewIdOnly;
/**
 *  A minimal view of the job, with the following attributes: Job.name,
 *  Job.requisition_id, Job.title, Job.company, Job.DerivedInfo.locations,
 *  Job.language_code.
 *
 *  Value: "JOB_VIEW_MINIMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudTalentSolutionJobViewJobViewMinimal;
/**
 *  A small view of the job, with the following attributes in the search
 *  results: Job.name, Job.requisition_id, Job.title, Job.company,
 *  Job.DerivedInfo.locations, Job.visibility, Job.language_code,
 *  Job.description.
 *
 *  Value: "JOB_VIEW_SMALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudTalentSolutionJobViewJobViewSmall;
/**
 *  Default value.
 *
 *  Value: "JOB_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudTalentSolutionJobViewJobViewUnspecified;

// ----------------------------------------------------------------------------
// scope

/**
 *  Default value.
 *
 *  Value: "COMPLETION_SCOPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudTalentSolutionScopeCompletionScopeUnspecified;
/**
 *  Suggestions are based on all jobs data in the system that's visible to the
 *  client
 *
 *  Value: "PUBLIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudTalentSolutionScopePublic;
/**
 *  Suggestions are based only on the data provided by the client.
 *
 *  Value: "TENANT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudTalentSolutionScopeTenant;

// ----------------------------------------------------------------------------
// type

/**
 *  Suggest both job titles and company names for jobs autocomplete. For
 *  CompletionType.COMBINED type, only open jobs with the same language_codes or
 *  companies having open jobs with the same language_codes are returned.
 *
 *  Value: "COMBINED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudTalentSolutionTypeCombined;
/**
 *  Suggest company names for jobs autocomplete. For CompletionType.COMPANY_NAME
 *  type, only companies having open jobs with the same language_codes are
 *  returned.
 *
 *  Value: "COMPANY_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudTalentSolutionTypeCompanyName;
/**
 *  Default value.
 *
 *  Value: "COMPLETION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudTalentSolutionTypeCompletionTypeUnspecified;
/**
 *  Suggest job titles for jobs autocomplete. For CompletionType.JOB_TITLE type,
 *  only open jobs with the same language_codes are returned.
 *
 *  Value: "JOB_TITLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudTalentSolutionTypeJobTitle;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Cloud Talent Solution query classes.
 */
@interface GTLRCloudTalentSolutionQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: jobs.projects.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsOperationsGet : GTLRCloudTalentSolutionQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Report events issued when end user interacts with customer's application
 *  that uses Cloud Talent Solution. You may inspect the created events in [self
 *  service tools](https://console.cloud.google.com/talent-solution/overview).
 *  [Learn more](https://cloud.google.com/talent-solution/docs/management-tools)
 *  about self service tools.
 *
 *  Method: jobs.projects.tenants.clientEvents.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsClientEventsCreate : GTLRCloudTalentSolutionQuery

/**
 *  Required. Resource name of the tenant under which the event is created. The
 *  format is "projects/{project_id}/tenants/{tenant_id}", for example,
 *  "projects/foo/tenants/bar".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudTalentSolution_ClientEvent.
 *
 *  Report events issued when end user interacts with customer's application
 *  that uses Cloud Talent Solution. You may inspect the created events in [self
 *  service tools](https://console.cloud.google.com/talent-solution/overview).
 *  [Learn more](https://cloud.google.com/talent-solution/docs/management-tools)
 *  about self service tools.
 *
 *  @param object The @c GTLRCloudTalentSolution_ClientEvent to include in the
 *    query.
 *  @param parent Required. Resource name of the tenant under which the event is
 *    created. The format is "projects/{project_id}/tenants/{tenant_id}", for
 *    example, "projects/foo/tenants/bar".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsClientEventsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudTalentSolution_ClientEvent *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a new company entity.
 *
 *  Method: jobs.projects.tenants.companies.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsCompaniesCreate : GTLRCloudTalentSolutionQuery

/**
 *  Required. Resource name of the tenant under which the company is created.
 *  The format is "projects/{project_id}/tenants/{tenant_id}", for example,
 *  "projects/foo/tenants/bar".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Company.
 *
 *  Creates a new company entity.
 *
 *  @param object The @c GTLRCloudTalentSolution_Company to include in the
 *    query.
 *  @param parent Required. Resource name of the tenant under which the company
 *    is created. The format is "projects/{project_id}/tenants/{tenant_id}", for
 *    example, "projects/foo/tenants/bar".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsCompaniesCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudTalentSolution_Company *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes specified company. Prerequisite: The company has no jobs associated
 *  with it.
 *
 *  Method: jobs.projects.tenants.companies.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsCompaniesDelete : GTLRCloudTalentSolutionQuery

/**
 *  Required. The resource name of the company to be deleted. The format is
 *  "projects/{project_id}/tenants/{tenant_id}/companies/{company_id}", for
 *  example, "projects/foo/tenants/bar/companies/baz".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Empty.
 *
 *  Deletes specified company. Prerequisite: The company has no jobs associated
 *  with it.
 *
 *  @param name Required. The resource name of the company to be deleted. The
 *    format is
 *    "projects/{project_id}/tenants/{tenant_id}/companies/{company_id}", for
 *    example, "projects/foo/tenants/bar/companies/baz".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsCompaniesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves specified company.
 *
 *  Method: jobs.projects.tenants.companies.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsCompaniesGet : GTLRCloudTalentSolutionQuery

/**
 *  Required. The resource name of the company to be retrieved. The format is
 *  "projects/{project_id}/tenants/{tenant_id}/companies/{company_id}", for
 *  example, "projects/api-test-project/tenants/foo/companies/bar".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Company.
 *
 *  Retrieves specified company.
 *
 *  @param name Required. The resource name of the company to be retrieved. The
 *    format is
 *    "projects/{project_id}/tenants/{tenant_id}/companies/{company_id}", for
 *    example, "projects/api-test-project/tenants/foo/companies/bar".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsCompaniesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all companies associated with the project.
 *
 *  Method: jobs.projects.tenants.companies.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsCompaniesList : GTLRCloudTalentSolutionQuery

/**
 *  The maximum number of companies to be returned, at most 100. Default is 100
 *  if a non-positive number is provided.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The starting indicator from which to return results. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Resource name of the tenant under which the company is created.
 *  The format is "projects/{project_id}/tenants/{tenant_id}", for example,
 *  "projects/foo/tenants/bar".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Set to true if the companies requested must have open jobs. Defaults to
 *  false. If true, at most page_size of companies are fetched, among which only
 *  those with open jobs are returned.
 */
@property(nonatomic, assign) BOOL requireOpenJobs;

/**
 *  Fetches a @c GTLRCloudTalentSolution_ListCompaniesResponse.
 *
 *  Lists all companies associated with the project.
 *
 *  @param parent Required. Resource name of the tenant under which the company
 *    is created. The format is "projects/{project_id}/tenants/{tenant_id}", for
 *    example, "projects/foo/tenants/bar".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsCompaniesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates specified company.
 *
 *  Method: jobs.projects.tenants.companies.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsCompaniesPatch : GTLRCloudTalentSolutionQuery

/**
 *  Required during company update. The resource name for a company. This is
 *  generated by the service when a company is created. The format is
 *  "projects/{project_id}/tenants/{tenant_id}/companies/{company_id}", for
 *  example, "projects/foo/tenants/bar/companies/baz".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Strongly recommended for the best service experience. If update_mask is
 *  provided, only the specified fields in company are updated. Otherwise all
 *  the fields are updated. A field mask to specify the company fields to be
 *  updated. Only top level fields of Company are supported.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Company.
 *
 *  Updates specified company.
 *
 *  @param object The @c GTLRCloudTalentSolution_Company to include in the
 *    query.
 *  @param name Required during company update. The resource name for a company.
 *    This is generated by the service when a company is created. The format is
 *    "projects/{project_id}/tenants/{tenant_id}/companies/{company_id}", for
 *    example, "projects/foo/tenants/bar/companies/baz".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsCompaniesPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudTalentSolution_Company *)object
                           name:(NSString *)name;

@end

/**
 *  Completes the specified prefix with keyword suggestions. Intended for use by
 *  a job search auto-complete search box.
 *
 *  Method: jobs.projects.tenants.completeQuery
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsCompleteQuery : GTLRCloudTalentSolutionQuery

/**
 *  If provided, restricts completion to specified company. The format is
 *  "projects/{project_id}/tenants/{tenant_id}/companies/{company_id}", for
 *  example, "projects/foo/tenants/bar/companies/baz".
 */
@property(nonatomic, copy, nullable) NSString *company;

/**
 *  The list of languages of the query. This is the BCP-47 language code, such
 *  as "en-US" or "sr-Latn". For more information, see [Tags for Identifying
 *  Languages](https://tools.ietf.org/html/bcp47). The maximum number of allowed
 *  characters is 255.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *languageCodes;

/** Required. Completion result count. The maximum allowed page size is 10. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Required. The query used to generate suggestions. The maximum number of
 *  allowed characters is 255.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  The scope of the completion. The defaults is CompletionScope.PUBLIC.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudTalentSolutionScopeCompletionScopeUnspecified Default
 *        value. (Value: "COMPLETION_SCOPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudTalentSolutionScopeTenant Suggestions are based only on
 *        the data provided by the client. (Value: "TENANT")
 *    @arg @c kGTLRCloudTalentSolutionScopePublic Suggestions are based on all
 *        jobs data in the system that's visible to the client (Value: "PUBLIC")
 */
@property(nonatomic, copy, nullable) NSString *scope;

/**
 *  Required. Resource name of tenant the completion is performed within. The
 *  format is "projects/{project_id}/tenants/{tenant_id}", for example,
 *  "projects/foo/tenants/bar".
 */
@property(nonatomic, copy, nullable) NSString *tenant;

/**
 *  The completion topic. The default is CompletionType.COMBINED.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudTalentSolutionTypeCompletionTypeUnspecified Default
 *        value. (Value: "COMPLETION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCloudTalentSolutionTypeJobTitle Suggest job titles for jobs
 *        autocomplete. For CompletionType.JOB_TITLE type, only open jobs with
 *        the same language_codes are returned. (Value: "JOB_TITLE")
 *    @arg @c kGTLRCloudTalentSolutionTypeCompanyName Suggest company names for
 *        jobs autocomplete. For CompletionType.COMPANY_NAME type, only
 *        companies having open jobs with the same language_codes are returned.
 *        (Value: "COMPANY_NAME")
 *    @arg @c kGTLRCloudTalentSolutionTypeCombined Suggest both job titles and
 *        company names for jobs autocomplete. For CompletionType.COMBINED type,
 *        only open jobs with the same language_codes or companies having open
 *        jobs with the same language_codes are returned. (Value: "COMBINED")
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Fetches a @c GTLRCloudTalentSolution_CompleteQueryResponse.
 *
 *  Completes the specified prefix with keyword suggestions. Intended for use by
 *  a job search auto-complete search box.
 *
 *  @param tenant Required. Resource name of tenant the completion is performed
 *    within. The format is "projects/{project_id}/tenants/{tenant_id}", for
 *    example, "projects/foo/tenants/bar".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsCompleteQuery
 */
+ (instancetype)queryWithTenant:(NSString *)tenant;

@end

/**
 *  Creates a new tenant entity.
 *
 *  Method: jobs.projects.tenants.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsCreate : GTLRCloudTalentSolutionQuery

/**
 *  Required. Resource name of the project under which the tenant is created.
 *  The format is "projects/{project_id}", for example, "projects/foo".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Tenant.
 *
 *  Creates a new tenant entity.
 *
 *  @param object The @c GTLRCloudTalentSolution_Tenant to include in the query.
 *  @param parent Required. Resource name of the project under which the tenant
 *    is created. The format is "projects/{project_id}", for example,
 *    "projects/foo".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudTalentSolution_Tenant *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes specified tenant.
 *
 *  Method: jobs.projects.tenants.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsDelete : GTLRCloudTalentSolutionQuery

/**
 *  Required. The resource name of the tenant to be deleted. The format is
 *  "projects/{project_id}/tenants/{tenant_id}", for example,
 *  "projects/foo/tenants/bar".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Empty.
 *
 *  Deletes specified tenant.
 *
 *  @param name Required. The resource name of the tenant to be deleted. The
 *    format is "projects/{project_id}/tenants/{tenant_id}", for example,
 *    "projects/foo/tenants/bar".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves specified tenant.
 *
 *  Method: jobs.projects.tenants.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsGet : GTLRCloudTalentSolutionQuery

/**
 *  Required. The resource name of the tenant to be retrieved. The format is
 *  "projects/{project_id}/tenants/{tenant_id}", for example,
 *  "projects/foo/tenants/bar".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Tenant.
 *
 *  Retrieves specified tenant.
 *
 *  @param name Required. The resource name of the tenant to be retrieved. The
 *    format is "projects/{project_id}/tenants/{tenant_id}", for example,
 *    "projects/foo/tenants/bar".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Begins executing a batch create jobs operation.
 *
 *  Method: jobs.projects.tenants.jobs.batchCreate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsBatchCreate : GTLRCloudTalentSolutionQuery

/**
 *  Required. The resource name of the tenant under which the job is created.
 *  The format is "projects/{project_id}/tenants/{tenant_id}". For example,
 *  "projects/foo/tenants/bar".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Operation.
 *
 *  Begins executing a batch create jobs operation.
 *
 *  @param object The @c GTLRCloudTalentSolution_BatchCreateJobsRequest to
 *    include in the query.
 *  @param parent Required. The resource name of the tenant under which the job
 *    is created. The format is "projects/{project_id}/tenants/{tenant_id}". For
 *    example, "projects/foo/tenants/bar".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsBatchCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudTalentSolution_BatchCreateJobsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Begins executing a batch delete jobs operation.
 *
 *  Method: jobs.projects.tenants.jobs.batchDelete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsBatchDelete : GTLRCloudTalentSolutionQuery

/**
 *  Required. The resource name of the tenant under which the job is created.
 *  The format is "projects/{project_id}/tenants/{tenant_id}". For example,
 *  "projects/foo/tenants/bar". The parent of all of the jobs specified in
 *  `names` must match this field.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Operation.
 *
 *  Begins executing a batch delete jobs operation.
 *
 *  @param object The @c GTLRCloudTalentSolution_BatchDeleteJobsRequest to
 *    include in the query.
 *  @param parent Required. The resource name of the tenant under which the job
 *    is created. The format is "projects/{project_id}/tenants/{tenant_id}". For
 *    example, "projects/foo/tenants/bar". The parent of all of the jobs
 *    specified in `names` must match this field.
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsBatchDelete
 */
+ (instancetype)queryWithObject:(GTLRCloudTalentSolution_BatchDeleteJobsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Begins executing a batch update jobs operation.
 *
 *  Method: jobs.projects.tenants.jobs.batchUpdate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsBatchUpdate : GTLRCloudTalentSolutionQuery

/**
 *  Required. The resource name of the tenant under which the job is created.
 *  The format is "projects/{project_id}/tenants/{tenant_id}". For example,
 *  "projects/foo/tenants/bar".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Operation.
 *
 *  Begins executing a batch update jobs operation.
 *
 *  @param object The @c GTLRCloudTalentSolution_BatchUpdateJobsRequest to
 *    include in the query.
 *  @param parent Required. The resource name of the tenant under which the job
 *    is created. The format is "projects/{project_id}/tenants/{tenant_id}". For
 *    example, "projects/foo/tenants/bar".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsBatchUpdate
 */
+ (instancetype)queryWithObject:(GTLRCloudTalentSolution_BatchUpdateJobsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a new job. Typically, the job becomes searchable within 10 seconds,
 *  but it may take up to 5 minutes.
 *
 *  Method: jobs.projects.tenants.jobs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsCreate : GTLRCloudTalentSolutionQuery

/**
 *  Required. The resource name of the tenant under which the job is created.
 *  The format is "projects/{project_id}/tenants/{tenant_id}". For example,
 *  "projects/foo/tenants/bar".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Job.
 *
 *  Creates a new job. Typically, the job becomes searchable within 10 seconds,
 *  but it may take up to 5 minutes.
 *
 *  @param object The @c GTLRCloudTalentSolution_Job to include in the query.
 *  @param parent Required. The resource name of the tenant under which the job
 *    is created. The format is "projects/{project_id}/tenants/{tenant_id}". For
 *    example, "projects/foo/tenants/bar".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsCreate
 */
+ (instancetype)queryWithObject:(GTLRCloudTalentSolution_Job *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the specified job. Typically, the job becomes unsearchable within 10
 *  seconds, but it may take up to 5 minutes.
 *
 *  Method: jobs.projects.tenants.jobs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsDelete : GTLRCloudTalentSolutionQuery

/**
 *  Required. The resource name of the job to be deleted. The format is
 *  "projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}". For example,
 *  "projects/foo/tenants/bar/jobs/baz".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Empty.
 *
 *  Deletes the specified job. Typically, the job becomes unsearchable within 10
 *  seconds, but it may take up to 5 minutes.
 *
 *  @param name Required. The resource name of the job to be deleted. The format
 *    is "projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}". For example,
 *    "projects/foo/tenants/bar/jobs/baz".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves the specified job, whose status is OPEN or recently EXPIRED within
 *  the last 90 days.
 *
 *  Method: jobs.projects.tenants.jobs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsGet : GTLRCloudTalentSolutionQuery

/**
 *  Required. The resource name of the job to retrieve. The format is
 *  "projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}". For example,
 *  "projects/foo/tenants/bar/jobs/baz".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Job.
 *
 *  Retrieves the specified job, whose status is OPEN or recently EXPIRED within
 *  the last 90 days.
 *
 *  @param name Required. The resource name of the job to retrieve. The format
 *    is "projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}". For example,
 *    "projects/foo/tenants/bar/jobs/baz".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists jobs by filter.
 *
 *  Method: jobs.projects.tenants.jobs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsList : GTLRCloudTalentSolutionQuery

/**
 *  Required. The filter string specifies the jobs to be enumerated. Supported
 *  operator: =, AND The fields eligible for filtering are: * `companyName` *
 *  `requisitionId` * `status` Available values: OPEN, EXPIRED, ALL. Defaults to
 *  OPEN if no value is specified. At least one of `companyName` and
 *  `requisitionId` must present or an INVALID_ARGUMENT error is thrown. Sample
 *  Query: * companyName = "projects/foo/tenants/bar/companies/baz" *
 *  companyName = "projects/foo/tenants/bar/companies/baz" AND requisitionId =
 *  "req-1" * companyName = "projects/foo/tenants/bar/companies/baz" AND status
 *  = "EXPIRED" * requisitionId = "req-1" * requisitionId = "req-1" AND status =
 *  "EXPIRED"
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The desired job attributes returned for jobs in the search response.
 *  Defaults to JobView.JOB_VIEW_FULL if no value is specified.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudTalentSolutionJobViewJobViewUnspecified Default value.
 *        (Value: "JOB_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRCloudTalentSolutionJobViewJobViewIdOnly A ID only view of
 *        job, with following attributes: Job.name, Job.requisition_id,
 *        Job.language_code. (Value: "JOB_VIEW_ID_ONLY")
 *    @arg @c kGTLRCloudTalentSolutionJobViewJobViewMinimal A minimal view of
 *        the job, with the following attributes: Job.name, Job.requisition_id,
 *        Job.title, Job.company, Job.DerivedInfo.locations, Job.language_code.
 *        (Value: "JOB_VIEW_MINIMAL")
 *    @arg @c kGTLRCloudTalentSolutionJobViewJobViewSmall A small view of the
 *        job, with the following attributes in the search results: Job.name,
 *        Job.requisition_id, Job.title, Job.company, Job.DerivedInfo.locations,
 *        Job.visibility, Job.language_code, Job.description. (Value:
 *        "JOB_VIEW_SMALL")
 *    @arg @c kGTLRCloudTalentSolutionJobViewJobViewFull All available
 *        attributes are included in the search results. (Value:
 *        "JOB_VIEW_FULL")
 */
@property(nonatomic, copy, nullable) NSString *jobView;

/**
 *  The maximum number of jobs to be returned per page of results. If job_view
 *  is set to JobView.JOB_VIEW_ID_ONLY, the maximum allowed page size is 1000.
 *  Otherwise, the maximum allowed page size is 100. Default is 100 if empty or
 *  a number < 1 is specified.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The starting point of a query result. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the tenant under which the job is created.
 *  The format is "projects/{project_id}/tenants/{tenant_id}". For example,
 *  "projects/foo/tenants/bar".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudTalentSolution_ListJobsResponse.
 *
 *  Lists jobs by filter.
 *
 *  @param parent Required. The resource name of the tenant under which the job
 *    is created. The format is "projects/{project_id}/tenants/{tenant_id}". For
 *    example, "projects/foo/tenants/bar".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates specified job. Typically, updated contents become visible in search
 *  results within 10 seconds, but it may take up to 5 minutes.
 *
 *  Method: jobs.projects.tenants.jobs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsPatch : GTLRCloudTalentSolutionQuery

/**
 *  Required during job update. The resource name for the job. This is generated
 *  by the service when a job is created. The format is
 *  "projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}". For example,
 *  "projects/foo/tenants/bar/jobs/baz". Use of this field in job queries and
 *  API calls is preferred over the use of requisition_id since this value is
 *  unique.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Strongly recommended for the best service experience. If update_mask is
 *  provided, only the specified fields in job are updated. Otherwise all the
 *  fields are updated. A field mask to restrict the fields that are updated.
 *  Only top level fields of Job are supported.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Job.
 *
 *  Updates specified job. Typically, updated contents become visible in search
 *  results within 10 seconds, but it may take up to 5 minutes.
 *
 *  @param object The @c GTLRCloudTalentSolution_Job to include in the query.
 *  @param name Required during job update. The resource name for the job. This
 *    is generated by the service when a job is created. The format is
 *    "projects/{project_id}/tenants/{tenant_id}/jobs/{job_id}". For example,
 *    "projects/foo/tenants/bar/jobs/baz". Use of this field in job queries and
 *    API calls is preferred over the use of requisition_id since this value is
 *    unique.
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudTalentSolution_Job *)object
                           name:(NSString *)name;

@end

/**
 *  Searches for jobs using the provided SearchJobsRequest. This call constrains
 *  the visibility of jobs present in the database, and only returns jobs that
 *  the caller has permission to search against.
 *
 *  Method: jobs.projects.tenants.jobs.search
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsSearch : GTLRCloudTalentSolutionQuery

/**
 *  Required. The resource name of the tenant to search within. The format is
 *  "projects/{project_id}/tenants/{tenant_id}". For example,
 *  "projects/foo/tenants/bar".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudTalentSolution_SearchJobsResponse.
 *
 *  Searches for jobs using the provided SearchJobsRequest. This call constrains
 *  the visibility of jobs present in the database, and only returns jobs that
 *  the caller has permission to search against.
 *
 *  @param object The @c GTLRCloudTalentSolution_SearchJobsRequest to include in
 *    the query.
 *  @param parent Required. The resource name of the tenant to search within.
 *    The format is "projects/{project_id}/tenants/{tenant_id}". For example,
 *    "projects/foo/tenants/bar".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsSearch
 */
+ (instancetype)queryWithObject:(GTLRCloudTalentSolution_SearchJobsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Searches for jobs using the provided SearchJobsRequest. This API call is
 *  intended for the use case of targeting passive job seekers (for example, job
 *  seekers who have signed up to receive email alerts about potential job
 *  opportunities), it has different algorithmic adjustments that are designed
 *  to specifically target passive job seekers. This call constrains the
 *  visibility of jobs present in the database, and only returns jobs the caller
 *  has permission to search against.
 *
 *  Method: jobs.projects.tenants.jobs.searchForAlert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsSearchForAlert : GTLRCloudTalentSolutionQuery

/**
 *  Required. The resource name of the tenant to search within. The format is
 *  "projects/{project_id}/tenants/{tenant_id}". For example,
 *  "projects/foo/tenants/bar".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudTalentSolution_SearchJobsResponse.
 *
 *  Searches for jobs using the provided SearchJobsRequest. This API call is
 *  intended for the use case of targeting passive job seekers (for example, job
 *  seekers who have signed up to receive email alerts about potential job
 *  opportunities), it has different algorithmic adjustments that are designed
 *  to specifically target passive job seekers. This call constrains the
 *  visibility of jobs present in the database, and only returns jobs the caller
 *  has permission to search against.
 *
 *  @param object The @c GTLRCloudTalentSolution_SearchJobsRequest to include in
 *    the query.
 *  @param parent Required. The resource name of the tenant to search within.
 *    The format is "projects/{project_id}/tenants/{tenant_id}". For example,
 *    "projects/foo/tenants/bar".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsJobsSearchForAlert
 */
+ (instancetype)queryWithObject:(GTLRCloudTalentSolution_SearchJobsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists all tenants associated with the project.
 *
 *  Method: jobs.projects.tenants.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsList : GTLRCloudTalentSolutionQuery

/**
 *  The maximum number of tenants to be returned, at most 100. Default is 100 if
 *  a non-positive number is provided.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** The starting indicator from which to return results. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Resource name of the project under which the tenant is created.
 *  The format is "projects/{project_id}", for example, "projects/foo".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRCloudTalentSolution_ListTenantsResponse.
 *
 *  Lists all tenants associated with the project.
 *
 *  @param parent Required. Resource name of the project under which the tenant
 *    is created. The format is "projects/{project_id}", for example,
 *    "projects/foo".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates specified tenant.
 *
 *  Method: jobs.projects.tenants.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeCloudTalentSolution
 *    @c kGTLRAuthScopeCloudTalentSolutionCloudPlatform
 */
@interface GTLRCloudTalentSolutionQuery_ProjectsTenantsPatch : GTLRCloudTalentSolutionQuery

/**
 *  Required during tenant update. The resource name for a tenant. This is
 *  generated by the service when a tenant is created. The format is
 *  "projects/{project_id}/tenants/{tenant_id}", for example,
 *  "projects/foo/tenants/bar".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Strongly recommended for the best service experience. If update_mask is
 *  provided, only the specified fields in tenant are updated. Otherwise all the
 *  fields are updated. A field mask to specify the tenant fields to be updated.
 *  Only top level fields of Tenant are supported.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRCloudTalentSolution_Tenant.
 *
 *  Updates specified tenant.
 *
 *  @param object The @c GTLRCloudTalentSolution_Tenant to include in the query.
 *  @param name Required during tenant update. The resource name for a tenant.
 *    This is generated by the service when a tenant is created. The format is
 *    "projects/{project_id}/tenants/{tenant_id}", for example,
 *    "projects/foo/tenants/bar".
 *
 *  @return GTLRCloudTalentSolutionQuery_ProjectsTenantsPatch
 */
+ (instancetype)queryWithObject:(GTLRCloudTalentSolution_Tenant *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
