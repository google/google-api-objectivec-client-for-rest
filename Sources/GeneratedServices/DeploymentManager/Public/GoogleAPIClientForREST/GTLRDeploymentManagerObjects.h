// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Deployment Manager V2 API (deploymentmanager/v2)
// Description:
//   The Google Cloud Deployment Manager v2 API provides services for
//   configuring, deploying, and viewing Google Cloud services and APIs via
//   templates which specify deployments of Cloud resources.
// Documentation:
//   https://cloud.google.com/deployment-manager

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRDeploymentManager_AuditConfig;
@class GTLRDeploymentManager_AuditLogConfig;
@class GTLRDeploymentManager_Binding;
@class GTLRDeploymentManager_ConfigFile;
@class GTLRDeploymentManager_Deployment;
@class GTLRDeploymentManager_DeploymentLabelEntry;
@class GTLRDeploymentManager_DeploymentUpdate;
@class GTLRDeploymentManager_DeploymentUpdateLabelEntry;
@class GTLRDeploymentManager_Expr;
@class GTLRDeploymentManager_ImportFile;
@class GTLRDeploymentManager_Manifest;
@class GTLRDeploymentManager_Operation;
@class GTLRDeploymentManager_Operation_Error;
@class GTLRDeploymentManager_Operation_Error_Errors_Item;
@class GTLRDeploymentManager_Operation_Warnings_Item;
@class GTLRDeploymentManager_Operation_Warnings_Item_Data_Item;
@class GTLRDeploymentManager_Policy;
@class GTLRDeploymentManager_Resource;
@class GTLRDeploymentManager_Resource_Warnings_Item;
@class GTLRDeploymentManager_Resource_Warnings_Item_Data_Item;
@class GTLRDeploymentManager_ResourceAccessControl;
@class GTLRDeploymentManager_ResourceUpdate;
@class GTLRDeploymentManager_ResourceUpdate_Error;
@class GTLRDeploymentManager_ResourceUpdate_Error_Errors_Item;
@class GTLRDeploymentManager_ResourceUpdate_Warnings_Item;
@class GTLRDeploymentManager_ResourceUpdate_Warnings_Item_Data_Item;
@class GTLRDeploymentManager_TargetConfiguration;
@class GTLRDeploymentManager_Type;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRDeploymentManager_AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_AuditLogConfig_LogType_LogTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRDeploymentManager_Operation.status

/** Value: "DONE" */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Status_Done;
/** Value: "PENDING" */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Status_Pending;
/** Value: "RUNNING" */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Status_Running;

// ----------------------------------------------------------------------------
// GTLRDeploymentManager_Operation_Warnings_Item.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Operation_Warnings_Item_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRDeploymentManager_Resource_Warnings_Item.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_Resource_Warnings_Item_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRDeploymentManager_ResourceUpdate.intent

/**
 *  The resource is scheduled to be abandoned.
 *
 *  Value: "ABANDON"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Intent_Abandon;
/**
 *  The resource is scheduled to be acquired.
 *
 *  Value: "ACQUIRE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Intent_Acquire;
/**
 *  The resource is scheduled to be created.
 *
 *  Value: "CREATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Intent_Create;
/**
 *  The resource is scheduled to be created, or if it already exists, acquired.
 *
 *  Value: "CREATE_OR_ACQUIRE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Intent_CreateOrAcquire;
/**
 *  The resource is scheduled to be deleted.
 *
 *  Value: "DELETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Intent_Delete;
/**
 *  The resource is scheduled to be updated via the UPDATE method.
 *
 *  Value: "UPDATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Intent_Update;

// ----------------------------------------------------------------------------
// GTLRDeploymentManager_ResourceUpdate.state

/**
 *  The service has aborted trying to change the resource.
 *
 *  Value: "ABORTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_State_Aborted;
/**
 *  The service has failed to change the resource.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_State_Failed;
/**
 *  The service is previewing changes on the resource.
 *
 *  Value: "IN_PREVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_State_InPreview;
/**
 *  The service is executing changes on the resource.
 *
 *  Value: "IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_State_InProgress;
/**
 *  There are changes pending for this resource.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_State_Pending;

// ----------------------------------------------------------------------------
// GTLRDeploymentManager_ResourceUpdate_Warnings_Item.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_Unreachable;

/**
 *  Specifies the audit configuration for a service. The configuration
 *  determines which permission types are logged, and what identities, if any,
 *  are exempted from logging. An AuditConfig must have one or more
 *  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
 *  specific service, the union of the two AuditConfigs is used for that
 *  service: the log_types specified in each AuditConfig are enabled, and the
 *  exempted_members in each AuditLogConfig are exempted. Example Policy with
 *  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
 *  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
 *  "DATA_WRITE", "exempted_members": [ "user:aliya\@example.com" ] } ] } ] }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts `jose\@example.com` from DATA_READ logging, and
 *  `aliya\@example.com` from DATA_WRITE logging.
 */
@interface GTLRDeploymentManager_AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging. For example,
 *  `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions. Example: {
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
 *  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose\@example.com from
 *  DATA_READ logging.
 */
@interface GTLRDeploymentManager_AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission. Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRDeploymentManager_AuditLogConfig_LogType_AdminRead Admin
 *        reads. Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRDeploymentManager_AuditLogConfig_LogType_DataRead Data reads.
 *        Example: CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRDeploymentManager_AuditLogConfig_LogType_DataWrite Data
 *        writes. Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRDeploymentManager_AuditLogConfig_LogType_LogTypeUnspecified
 *        Default case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRDeploymentManager_Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_Expr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`:
 *  An email address (plus unique identifier) representing a user that has been
 *  recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. * `domain:{domain}`: The G Suite domain (primary) that
 *  represents all the users of that domain. For example, `google.com` or
 *  `example.com`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  GTLRDeploymentManager_ConfigFile
 */
@interface GTLRDeploymentManager_ConfigFile : GTLRObject

/** The contents of the file. */
@property(nonatomic, copy, nullable) NSString *content;

@end


/**
 *  GTLRDeploymentManager_Deployment
 */
@interface GTLRDeploymentManager_Deployment : GTLRObject

/**
 *  An optional user-provided description of the deployment.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Provides a fingerprint to use in requests to modify a deployment, such as
 *  `update()`, `stop()`, and `cancelPreview()` requests. A fingerprint is a
 *  randomly generated value that must be provided with `update()`, `stop()`,
 *  and `cancelPreview()` requests to perform optimistic locking. This ensures
 *  optimistic concurrency so that only one request happens at a time. The
 *  fingerprint is initially generated by Deployment Manager and changes after
 *  every request to modify data. To get the latest fingerprint value, perform a
 *  `get()` request to a deployment.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  identifier
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** Output only. Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *insertTime;

/**
 *  Map of One Platform labels; provided by the client when the resource is
 *  created or updated. Specifically: Label keys must be between 1 and 63
 *  characters long and must conform to the following regular expression:
 *  `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63
 *  characters long and must conform to the regular expression
 *  `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_DeploymentLabelEntry *> *labels;

/**
 *  Output only. URL of the manifest representing the last manifest that was
 *  successfully deployed. If no manifest has been successfully deployed, this
 *  field will be absent.
 */
@property(nonatomic, copy, nullable) NSString *manifest;

/**
 *  Name of the resource; provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The Operation that most recently ran, or is currently running,
 *  on this deployment.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_Operation *operation;

/** Output only. Server defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Input Only] The parameters that define your deployment, including the
 *  deployment configuration and relevant templates.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_TargetConfiguration *target;

/**
 *  Output only. If Deployment Manager is currently updating or previewing an
 *  update to this deployment, the updated configuration appears here.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_DeploymentUpdate *update;

/** Output only. Update timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *updateTime;

@end


/**
 *  Label object for Deployments
 */
@interface GTLRDeploymentManager_DeploymentLabelEntry : GTLRObject

/** Key of the label */
@property(nonatomic, copy, nullable) NSString *key;

/** Value of the label */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRDeploymentManager_DeploymentsCancelPreviewRequest
 */
@interface GTLRDeploymentManager_DeploymentsCancelPreviewRequest : GTLRObject

/**
 *  Specifies a fingerprint for `cancelPreview()` requests. A fingerprint is a
 *  randomly generated value that must be provided in `cancelPreview()` requests
 *  to perform optimistic locking. This ensures optimistic concurrency so that
 *  the deployment does not have conflicting requests (e.g. if someone attempts
 *  to make a new update request while another user attempts to cancel a
 *  preview, this would prevent one of the requests). The fingerprint is
 *  initially generated by Deployment Manager and changes after every request to
 *  modify a deployment. To get the latest fingerprint value, perform a `get()`
 *  request on the deployment.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

@end


/**
 *  A response containing a partial list of deployments and a page token used to
 *  build the next request if the request has been truncated.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "deployments" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDeploymentManager_DeploymentsListResponse : GTLRCollectionObject

/**
 *  Output only. The deployments contained in this response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Deployment *> *deployments;

/** Output only. A token used to continue a truncated list request. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRDeploymentManager_DeploymentsStopRequest
 */
@interface GTLRDeploymentManager_DeploymentsStopRequest : GTLRObject

/**
 *  Specifies a fingerprint for `stop()` requests. A fingerprint is a randomly
 *  generated value that must be provided in `stop()` requests to perform
 *  optimistic locking. This ensures optimistic concurrency so that the
 *  deployment does not have conflicting requests (e.g. if someone attempts to
 *  make a new update request while another user attempts to stop an ongoing
 *  update request, this would prevent a collision). The fingerprint is
 *  initially generated by Deployment Manager and changes after every request to
 *  modify a deployment. To get the latest fingerprint value, perform a `get()`
 *  request on the deployment.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

@end


/**
 *  GTLRDeploymentManager_DeploymentUpdate
 */
@interface GTLRDeploymentManager_DeploymentUpdate : GTLRObject

/**
 *  Output only. An optional user-provided description of the deployment after
 *  the current update has been applied.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Map of One Platform labels; provided by the client when the resource is
 *  created or updated. Specifically: Label keys must be between 1 and 63
 *  characters long and must conform to the following regular expression:
 *  `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63
 *  characters long and must conform to the regular expression
 *  `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_DeploymentUpdateLabelEntry *> *labels;

/**
 *  Output only. URL of the manifest representing the update configuration of
 *  this deployment.
 */
@property(nonatomic, copy, nullable) NSString *manifest;

@end


/**
 *  Label object for DeploymentUpdate
 */
@interface GTLRDeploymentManager_DeploymentUpdateLabelEntry : GTLRObject

/** Key of the label */
@property(nonatomic, copy, nullable) NSString *key;

/** Value of the label */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRDeploymentManager_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  GTLRDeploymentManager_GlobalSetPolicyRequest
 */
@interface GTLRDeploymentManager_GlobalSetPolicyRequest : GTLRObject

/**
 *  Flatten Policy to create a backward compatible wire-format. Deprecated. Use
 *  'policy' to specify bindings.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Binding *> *bindings;

/**
 *  Flatten Policy to create a backward compatible wire-format. Deprecated. Use
 *  'policy' to specify the etag.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  REQUIRED: The complete policy to be applied to the 'resource'. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is in general a
 *  valid policy but certain services (like Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_Policy *policy;

@end


/**
 *  GTLRDeploymentManager_ImportFile
 */
@interface GTLRDeploymentManager_ImportFile : GTLRObject

/** The contents of the file. */
@property(nonatomic, copy, nullable) NSString *content;

/** The name of the file. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  GTLRDeploymentManager_Manifest
 */
@interface GTLRDeploymentManager_Manifest : GTLRObject

/** Output only. The YAML configuration for this manifest. */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_ConfigFile *config;

/**
 *  Output only. The fully-expanded configuration file, including any templates
 *  and references.
 */
@property(nonatomic, copy, nullable) NSString *expandedConfig;

/**
 *  identifier
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** Output only. The imported files for this manifest. */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_ImportFile *> *imports;

/** Output only. Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *insertTime;

/** Output only. The YAML layout for this manifest. */
@property(nonatomic, copy, nullable) NSString *layout;

/**
 *  Output only. The computed size of the fully expanded manifest.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *manifestSizeBytes;

/**
 *  Output only. The size limit for expanded manifests in the project.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *manifestSizeLimitBytes;

/** Output only. The name of the manifest. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. Self link for the manifest. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end


/**
 *  A response containing a partial list of manifests and a page token used to
 *  build the next request if the request has been truncated.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "manifests" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDeploymentManager_ManifestsListResponse : GTLRCollectionObject

/**
 *  Output only. Manifests contained in this list response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Manifest *> *manifests;

/** Output only. A token used to continue a truncated list request. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Represents an Operation resource. Google Compute Engine has three Operation
 *  resources: *
 *  [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) *
 *  [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) *
 *  [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can
 *  use an operation resource to manage asynchronous API requests. For more
 *  information, read Handling API responses. Operations can be global, regional
 *  or zonal. - For global operations, use the `globalOperations` resource. -
 *  For regional operations, use the `regionOperations` resource. - For zonal
 *  operations, use the `zonalOperations` resource. For more information, read
 *  Global, Regional, and Zonal Resources.
 */
@interface GTLRDeploymentManager_Operation : GTLRObject

/**
 *  [Output Only] The value of `requestId` if you provided it in the request.
 *  Not present otherwise.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/** [Deprecated] This field is deprecated. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  [Output Only] A textual description of the operation, which is set when the
 *  operation is created.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The time that this operation was completed. This value is in
 *  RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *endTime;

/**
 *  [Output Only] If errors are generated during processing of the operation,
 *  this field will be populated.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_Operation_Error *error;

/**
 *  [Output Only] If the operation fails, this field contains the HTTP error
 *  message that was returned, such as `NOT FOUND`.
 */
@property(nonatomic, copy, nullable) NSString *httpErrorMessage;

/**
 *  [Output Only] If the operation fails, this field contains the HTTP error
 *  status code that was returned. For example, a `404` means the resource was
 *  not found.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *httpErrorStatusCode;

/**
 *  [Output Only] The unique identifier for the operation. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] The time that this operation was requested. This value is in
 *  RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *insertTime;

/**
 *  [Output Only] Type of the resource. Always `compute#operation` for Operation
 *  resources.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** [Output Only] Name of the operation. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] An ID that represents a group of operations, such as when a
 *  group of operations results from a `bulkInsert` API request.
 */
@property(nonatomic, copy, nullable) NSString *operationGroupId;

/**
 *  [Output Only] The type of operation, such as `insert`, `update`, or
 *  `delete`, and so on.
 */
@property(nonatomic, copy, nullable) NSString *operationType;

/**
 *  [Output Only] An optional progress indicator that ranges from 0 to 100.
 *  There is no requirement that this be linear or support any granularity of
 *  operations. This should not be used to guess when the operation will be
 *  complete. This number should monotonically increase as the operation
 *  progresses.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *progress;

/**
 *  [Output Only] The URL of the region where the operation resides. Only
 *  applicable when performing regional operations.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] The time that this operation was started by the server. This
 *  value is in RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *startTime;

/**
 *  [Output Only] The status of the operation, which can be one of the
 *  following: `PENDING`, `RUNNING`, or `DONE`.
 *
 *  Likely values:
 *    @arg @c kGTLRDeploymentManager_Operation_Status_Done Value "DONE"
 *    @arg @c kGTLRDeploymentManager_Operation_Status_Pending Value "PENDING"
 *    @arg @c kGTLRDeploymentManager_Operation_Status_Running Value "RUNNING"
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  [Output Only] An optional textual description of the current status of the
 *  operation.
 */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  [Output Only] The unique target ID, which identifies a specific incarnation
 *  of the target resource.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *targetId;

/**
 *  [Output Only] The URL of the resource that the operation modifies. For
 *  operations related to creating a snapshot, this points to the persistent
 *  disk that the snapshot was created from.
 */
@property(nonatomic, copy, nullable) NSString *targetLink;

/**
 *  [Output Only] User who requested the operation, for example:
 *  `user\@example.com`.
 */
@property(nonatomic, copy, nullable) NSString *user;

/**
 *  [Output Only] If warning messages are generated during processing of the
 *  operation, this field will be populated.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Operation_Warnings_Item *> *warnings;

/**
 *  [Output Only] The URL of the zone where the operation resides. Only
 *  applicable when performing per-zone operations.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  [Output Only] If errors are generated during processing of the operation,
 *  this field will be populated.
 */
@interface GTLRDeploymentManager_Operation_Error : GTLRObject

/**
 *  [Output Only] The array of errors encountered while processing this
 *  operation.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Operation_Error_Errors_Item *> *errors;

@end


/**
 *  GTLRDeploymentManager_Operation_Warnings_Item
 */
@interface GTLRDeploymentManager_Operation_Warnings_Item : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRDeploymentManager_Operation_Warnings_Item_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Operation_Warnings_Item_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDeploymentManager_Operation_Error_Errors_Item
 */
@interface GTLRDeploymentManager_Operation_Error_Errors_Item : GTLRObject

/** [Output Only] The error type identifier for this error. */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Indicates the field in the request that caused the error. This
 *  property is optional.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** [Output Only] An optional, human-readable error message. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDeploymentManager_Operation_Warnings_Item_Data_Item
 */
@interface GTLRDeploymentManager_Operation_Warnings_Item_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  A response containing a partial list of operations and a page token used to
 *  build the next request if the request has been truncated.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDeploymentManager_OperationsListResponse : GTLRCollectionObject

/** Output only. A token used to continue a truncated list request. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Output only. Operations contained in this list response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Operation *> *operations;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
 *  user:mike\@example.com - group:admins\@example.com - domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRDeploymentManager_Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  GTLRDeploymentManager_Resource
 */
@interface GTLRDeploymentManager_Resource : GTLRObject

/** The Access Control Policy set on this resource. */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_ResourceAccessControl *accessControl;

/**
 *  Output only. The evaluated properties of the resource with references
 *  expanded. Returned as serialized YAML.
 */
@property(nonatomic, copy, nullable) NSString *finalProperties;

/**
 *  identifier
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** Output only. Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *insertTime;

/**
 *  Output only. URL of the manifest representing the current configuration of
 *  this resource.
 */
@property(nonatomic, copy, nullable) NSString *manifest;

/** Output only. The name of the resource as it appears in the YAML config. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The current properties of the resource before any references
 *  have been filled in. Returned as serialized YAML.
 */
@property(nonatomic, copy, nullable) NSString *properties;

/**
 *  Output only. The type of the resource, for example `compute.v1.instance`, or
 *  `cloudfunctions.v1beta1.function`.
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Output only. If Deployment Manager is currently updating or previewing an
 *  update to this resource, the updated configuration appears here.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_ResourceUpdate *update;

/** Output only. Update timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *updateTime;

/** Output only. The URL of the actual resource. */
@property(nonatomic, copy, nullable) NSString *url;

/**
 *  Output only. If warning messages are generated during processing of this
 *  resource, this field will be populated.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Resource_Warnings_Item *> *warnings;

@end


/**
 *  GTLRDeploymentManager_Resource_Warnings_Item
 */
@interface GTLRDeploymentManager_Resource_Warnings_Item : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRDeploymentManager_Resource_Warnings_Item_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Resource_Warnings_Item_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDeploymentManager_Resource_Warnings_Item_Data_Item
 */
@interface GTLRDeploymentManager_Resource_Warnings_Item_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  The access controls set on the resource.
 */
@interface GTLRDeploymentManager_ResourceAccessControl : GTLRObject

/** The GCP IAM Policy to set on the resource. */
@property(nonatomic, copy, nullable) NSString *gcpIamPolicy;

@end


/**
 *  A response containing a partial list of resources and a page token used to
 *  build the next request if the request has been truncated.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDeploymentManager_ResourcesListResponse : GTLRCollectionObject

/** A token used to continue a truncated list request. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Resources contained in this list response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Resource *> *resources;

@end


/**
 *  GTLRDeploymentManager_ResourceUpdate
 */
@interface GTLRDeploymentManager_ResourceUpdate : GTLRObject

/**
 *  The Access Control Policy to set on this resource after updating the
 *  resource itself.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_ResourceAccessControl *accessControl;

/**
 *  Output only. If errors are generated during update of the resource, this
 *  field will be populated.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_ResourceUpdate_Error *error;

/**
 *  Output only. The expanded properties of the resource with reference values
 *  expanded. Returned as serialized YAML.
 */
@property(nonatomic, copy, nullable) NSString *finalProperties;

/**
 *  Output only. The intent of the resource: `PREVIEW`, `UPDATE`, or `CANCEL`.
 *
 *  Likely values:
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Intent_Abandon The resource
 *        is scheduled to be abandoned. (Value: "ABANDON")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Intent_Acquire The resource
 *        is scheduled to be acquired. (Value: "ACQUIRE")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Intent_Create The resource
 *        is scheduled to be created. (Value: "CREATE")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Intent_CreateOrAcquire The
 *        resource is scheduled to be created, or if it already exists,
 *        acquired. (Value: "CREATE_OR_ACQUIRE")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Intent_Delete The resource
 *        is scheduled to be deleted. (Value: "DELETE")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Intent_Update The resource
 *        is scheduled to be updated via the UPDATE method. (Value: "UPDATE")
 */
@property(nonatomic, copy, nullable) NSString *intent;

/**
 *  Output only. URL of the manifest representing the update configuration of
 *  this resource.
 */
@property(nonatomic, copy, nullable) NSString *manifest;

/**
 *  Output only. The set of updated properties for this resource, before
 *  references are expanded. Returned as serialized YAML.
 */
@property(nonatomic, copy, nullable) NSString *properties;

/**
 *  Output only. The state of the resource.
 *
 *  Likely values:
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_State_Aborted The service
 *        has aborted trying to change the resource. (Value: "ABORTED")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_State_Failed The service has
 *        failed to change the resource. (Value: "FAILED")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_State_InPreview The service
 *        is previewing changes on the resource. (Value: "IN_PREVIEW")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_State_InProgress The service
 *        is executing changes on the resource. (Value: "IN_PROGRESS")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_State_Pending There are
 *        changes pending for this resource. (Value: "PENDING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. If warning messages are generated during processing of this
 *  resource, this field will be populated.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_ResourceUpdate_Warnings_Item *> *warnings;

@end


/**
 *  Output only. If errors are generated during update of the resource, this
 *  field will be populated.
 */
@interface GTLRDeploymentManager_ResourceUpdate_Error : GTLRObject

/**
 *  [Output Only] The array of errors encountered while processing this
 *  operation.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_ResourceUpdate_Error_Errors_Item *> *errors;

@end


/**
 *  GTLRDeploymentManager_ResourceUpdate_Warnings_Item
 */
@interface GTLRDeploymentManager_ResourceUpdate_Warnings_Item : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRDeploymentManager_ResourceUpdate_Warnings_Item_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_ResourceUpdate_Warnings_Item_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDeploymentManager_ResourceUpdate_Error_Errors_Item
 */
@interface GTLRDeploymentManager_ResourceUpdate_Error_Errors_Item : GTLRObject

/** [Output Only] The error type identifier for this error. */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Indicates the field in the request that caused the error. This
 *  property is optional.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** [Output Only] An optional, human-readable error message. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRDeploymentManager_ResourceUpdate_Warnings_Item_Data_Item
 */
@interface GTLRDeploymentManager_ResourceUpdate_Warnings_Item_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRDeploymentManager_TargetConfiguration
 */
@interface GTLRDeploymentManager_TargetConfiguration : GTLRObject

/** The configuration to use for this deployment. */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_ConfigFile *config;

/**
 *  Specifies any files to import for this configuration. This can be used to
 *  import templates or other files. For example, you might import a text file
 *  in order to use the file in a template.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_ImportFile *> *imports;

@end


/**
 *  GTLRDeploymentManager_TestPermissionsRequest
 */
@interface GTLRDeploymentManager_TestPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the 'resource'. Permissions with
 *  wildcards (such as '*' or 'storage.*') are not allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  GTLRDeploymentManager_TestPermissionsResponse
 */
@interface GTLRDeploymentManager_TestPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  A resource type supported by Deployment Manager.
 */
@interface GTLRDeploymentManager_Type : GTLRObject

/**
 *  identifier
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** Output only. Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *insertTime;

/** Name of the type. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The Operation that most recently ran, or is currently running,
 *  on this type.
 */
@property(nonatomic, strong, nullable) GTLRDeploymentManager_Operation *operation;

/** Output only. Server defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end


/**
 *  A response that returns all Types supported by Deployment Manager
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "types" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRDeploymentManager_TypesListResponse : GTLRCollectionObject

/** A token used to continue a truncated list request. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Output only. A list of resource types supported by Deployment Manager.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRDeploymentManager_Type *> *types;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
