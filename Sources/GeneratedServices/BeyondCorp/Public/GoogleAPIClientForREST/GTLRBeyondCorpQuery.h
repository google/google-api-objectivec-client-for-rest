// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   BeyondCorp API (beyondcorp/v1)
// Description:
//   Beyondcorp Enterprise provides identity and context aware access controls
//   for enterprise resources and enables zero-trust access. Using the
//   Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem
//   connectivity solutions.
// Documentation:
//   https://cloud.google.com/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRBeyondCorpObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other BeyondCorp query classes.
 */
@interface GTLRBeyondCorpQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: beyondcorp.organizations.locations.global.partnerTenants.browserDlpRules.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsBrowserDlpRulesGetIamPolicy : GTLRBeyondCorpQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsBrowserDlpRulesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: beyondcorp.organizations.locations.global.partnerTenants.browserDlpRules.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsBrowserDlpRulesSetIamPolicy : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsBrowserDlpRulesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: beyondcorp.organizations.locations.global.partnerTenants.browserDlpRules.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsBrowserDlpRulesTestIamPermissions : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsBrowserDlpRulesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: beyondcorp.organizations.locations.global.partnerTenants.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsGetIamPolicy : GTLRBeyondCorpQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: beyondcorp.organizations.locations.global.partnerTenants.proxyConfigs.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsProxyConfigsGetIamPolicy : GTLRBeyondCorpQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsProxyConfigsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: beyondcorp.organizations.locations.global.partnerTenants.proxyConfigs.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsProxyConfigsSetIamPolicy : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsProxyConfigsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: beyondcorp.organizations.locations.global.partnerTenants.proxyConfigs.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsProxyConfigsTestIamPermissions : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsProxyConfigsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: beyondcorp.organizations.locations.global.partnerTenants.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsSetIamPolicy : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: beyondcorp.organizations.locations.global.partnerTenants.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsTestIamPermissions : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_OrganizationsLocationsGlobalPartnerTenantsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: beyondcorp.organizations.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_OrganizationsLocationsOperationsCancel : GTLRBeyondCorpQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBeyondCorp_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleLongrunningCancelOperationRequest
 *    to include in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRBeyondCorpQuery_OrganizationsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: beyondcorp.organizations.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_OrganizationsLocationsOperationsDelete : GTLRBeyondCorpQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBeyondCorp_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRBeyondCorpQuery_OrganizationsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: beyondcorp.organizations.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_OrganizationsLocationsOperationsGet : GTLRBeyondCorpQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRBeyondCorpQuery_OrganizationsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: beyondcorp.organizations.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_OrganizationsLocationsOperationsList : GTLRBeyondCorpQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRBeyondCorpQuery_OrganizationsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new AppConnection in a given project and location.
 *
 *  Method: beyondcorp.projects.locations.appConnections.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsCreate : GTLRBeyondCorpQuery

/**
 *  Optional. User-settable AppConnection resource ID. * Must start with a
 *  letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end
 *  with a number or a letter.
 */
@property(nonatomic, copy, nullable) NSString *appConnectionId;

/**
 *  Required. The resource project name of the AppConnection location using the
 *  form: `projects/{project_id}/locations/{location_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, validates request by executing a dry-run which would not
 *  alter the resource in any way.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleLongrunningOperation.
 *
 *  Creates a new AppConnection in a given project and location.
 *
 *  @param object The @c
 *    GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectionsV1AppConnection to
 *    include in the query.
 *  @param parent Required. The resource project name of the AppConnection
 *    location using the form: `projects/{project_id}/locations/{location_id}`
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsCreate
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectionsV1AppConnection *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single AppConnection.
 *
 *  Method: beyondcorp.projects.locations.appConnections.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsDelete : GTLRBeyondCorpQuery

/**
 *  Required. BeyondCorp Connector name using the form:
 *  `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, validates request by executing a dry-run which would not
 *  alter the resource in any way.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleLongrunningOperation.
 *
 *  Deletes a single AppConnection.
 *
 *  @param name Required. BeyondCorp Connector name using the form:
 *    `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single AppConnection.
 *
 *  Method: beyondcorp.projects.locations.appConnections.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsGet : GTLRBeyondCorpQuery

/**
 *  Required. BeyondCorp AppConnection name using the form:
 *  `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectionsV1AppConnection.
 *
 *  Gets details of a single AppConnection.
 *
 *  @param name Required. BeyondCorp AppConnection name using the form:
 *    `projects/{project_id}/locations/{location_id}/appConnections/{app_connection_id}`
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: beyondcorp.projects.locations.appConnections.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsGetIamPolicy : GTLRBeyondCorpQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists AppConnections in a given project and location.
 *
 *  Method: beyondcorp.projects.locations.appConnections.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsList : GTLRBeyondCorpQuery

/** Optional. A filter specifying constraints of a list operation. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Specifies the ordering of results. See [Sorting
 *  order](https://cloud.google.com/apis/design/design_patterns#sorting_order)
 *  for more information.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of items to return. If not specified, a default
 *  value of 50 will be used by the service. Regardless of the page_size value,
 *  the response may include a partial list and a caller should only rely on
 *  response's next_page_token to determine if there are more instances left to
 *  be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The next_page_token value returned from a previous
 *  ListAppConnectionsRequest, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the AppConnection location using the form:
 *  `projects/{project_id}/locations/{location_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectionsV1ListAppConnectionsResponse.
 *
 *  Lists AppConnections in a given project and location.
 *
 *  @param parent Required. The resource name of the AppConnection location
 *    using the form: `projects/{project_id}/locations/{location_id}`
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single AppConnection.
 *
 *  Method: beyondcorp.projects.locations.appConnections.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsPatch : GTLRBeyondCorpQuery

/** Optional. If set as true, will create the resource if it is not found. */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Required. Unique resource name of the AppConnection. The name is ignored
 *  when creating a AppConnection.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Mask of fields to update. At least one path must be supplied in
 *  this field. The elements of the repeated paths field may only include these
 *  fields from [BeyondCorp.AppConnection]: * `labels` * `display_name` *
 *  `application_endpoint` * `connectors`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Optional. If set, validates request by executing a dry-run which would not
 *  alter the resource in any way.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single AppConnection.
 *
 *  @param object The @c
 *    GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectionsV1AppConnection to
 *    include in the query.
 *  @param name Required. Unique resource name of the AppConnection. The name is
 *    ignored when creating a AppConnection.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsPatch
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectionsV1AppConnection *)object
                           name:(NSString *)name;

@end

/**
 *  Resolves AppConnections details for a given AppConnector. An internal method
 *  called by a connector to find AppConnections to connect to.
 *
 *  Method: beyondcorp.projects.locations.appConnections.resolve
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsResolve : GTLRBeyondCorpQuery

/**
 *  Required. BeyondCorp Connector name of the connector associated with those
 *  AppConnections using the form:
 *  `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
 */
@property(nonatomic, copy, nullable) NSString *appConnectorId;

/**
 *  Optional. The maximum number of items to return. If not specified, a default
 *  value of 50 will be used by the service. Regardless of the page_size value,
 *  the response may include a partial list and a caller should only rely on
 *  response's next_page_token to determine if there are more instances left to
 *  be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The next_page_token value returned from a previous
 *  ResolveAppConnectionsResponse, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the AppConnection location using the form:
 *  `projects/{project_id}/locations/{location_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectionsV1ResolveAppConnectionsResponse.
 *
 *  Resolves AppConnections details for a given AppConnector. An internal method
 *  called by a connector to find AppConnections to connect to.
 *
 *  @param parent Required. The resource name of the AppConnection location
 *    using the form: `projects/{project_id}/locations/{location_id}`
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsResolve
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: beyondcorp.projects.locations.appConnections.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsSetIamPolicy : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: beyondcorp.projects.locations.appConnections.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsTestIamPermissions : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectionsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new AppConnector in a given project and location.
 *
 *  Method: beyondcorp.projects.locations.appConnectors.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsCreate : GTLRBeyondCorpQuery

/**
 *  Optional. User-settable AppConnector resource ID. * Must start with a
 *  letter. * Must contain between 4-63 characters from `/a-z-/`. * Must end
 *  with a number or a letter.
 */
@property(nonatomic, copy, nullable) NSString *appConnectorId;

/**
 *  Required. The resource project name of the AppConnector location using the
 *  form: `projects/{project_id}/locations/{location_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, validates request by executing a dry-run which would not
 *  alter the resource in any way.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleLongrunningOperation.
 *
 *  Creates a new AppConnector in a given project and location.
 *
 *  @param object The @c
 *    GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectorsV1AppConnector to include
 *    in the query.
 *  @param parent Required. The resource project name of the AppConnector
 *    location using the form: `projects/{project_id}/locations/{location_id}`
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsCreate
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectorsV1AppConnector *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single AppConnector.
 *
 *  Method: beyondcorp.projects.locations.appConnectors.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsDelete : GTLRBeyondCorpQuery

/**
 *  Required. BeyondCorp AppConnector name using the form:
 *  `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, validates request by executing a dry-run which would not
 *  alter the resource in any way.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleLongrunningOperation.
 *
 *  Deletes a single AppConnector.
 *
 *  @param name Required. BeyondCorp AppConnector name using the form:
 *    `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single AppConnector.
 *
 *  Method: beyondcorp.projects.locations.appConnectors.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsGet : GTLRBeyondCorpQuery

/**
 *  Required. BeyondCorp AppConnector name using the form:
 *  `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectorsV1AppConnector.
 *
 *  Gets details of a single AppConnector.
 *
 *  @param name Required. BeyondCorp AppConnector name using the form:
 *    `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector_id}`
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: beyondcorp.projects.locations.appConnectors.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsGetIamPolicy : GTLRBeyondCorpQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists AppConnectors in a given project and location.
 *
 *  Method: beyondcorp.projects.locations.appConnectors.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsList : GTLRBeyondCorpQuery

/** Optional. A filter specifying constraints of a list operation. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Specifies the ordering of results. See [Sorting
 *  order](https://cloud.google.com/apis/design/design_patterns#sorting_order)
 *  for more information.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of items to return. If not specified, a default
 *  value of 50 will be used by the service. Regardless of the page_size value,
 *  the response may include a partial list and a caller should only rely on
 *  response's next_page_token to determine if there are more instances left to
 *  be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The next_page_token value returned from a previous
 *  ListAppConnectorsRequest, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the AppConnector location using the form:
 *  `projects/{project_id}/locations/{location_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectorsV1ListAppConnectorsResponse.
 *
 *  Lists AppConnectors in a given project and location.
 *
 *  @param parent Required. The resource name of the AppConnector location using
 *    the form: `projects/{project_id}/locations/{location_id}`
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the parameters of a single AppConnector.
 *
 *  Method: beyondcorp.projects.locations.appConnectors.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsPatch : GTLRBeyondCorpQuery

/**
 *  Required. Unique resource name of the AppConnector. The name is ignored when
 *  creating a AppConnector.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Mask of fields to update. At least one path must be supplied in
 *  this field. The elements of the repeated paths field may only include these
 *  fields from [BeyondCorp.AppConnector]: * `labels` * `display_name`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Optional. If set, validates request by executing a dry-run which would not
 *  alter the resource in any way.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleLongrunningOperation.
 *
 *  Updates the parameters of a single AppConnector.
 *
 *  @param object The @c
 *    GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectorsV1AppConnector to include
 *    in the query.
 *  @param name Required. Unique resource name of the AppConnector. The name is
 *    ignored when creating a AppConnector.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsPatch
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectorsV1AppConnector *)object
                           name:(NSString *)name;

@end

/**
 *  Report status for a given connector.
 *
 *  Method: beyondcorp.projects.locations.appConnectors.reportStatus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsReportStatus : GTLRBeyondCorpQuery

/**
 *  Required. BeyondCorp Connector name using the form:
 *  `projects/{project_id}/locations/{location_id}/connectors/{connector}`
 */
@property(nonatomic, copy, nullable) NSString *appConnector;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleLongrunningOperation.
 *
 *  Report status for a given connector.
 *
 *  @param object The @c
 *    GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest to
 *    include in the query.
 *  @param appConnector Required. BeyondCorp Connector name using the form:
 *    `projects/{project_id}/locations/{location_id}/connectors/{connector}`
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsReportStatus
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectorsV1ReportStatusRequest *)object
                   appConnector:(NSString *)appConnector;

@end

/**
 *  Gets instance configuration for a given AppConnector. An internal method
 *  called by a AppConnector to get its container config.
 *
 *  Method: beyondcorp.projects.locations.appConnectors.resolveInstanceConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsResolveInstanceConfig : GTLRBeyondCorpQuery

/**
 *  Required. BeyondCorp AppConnector name using the form:
 *  `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector}`
 */
@property(nonatomic, copy, nullable) NSString *appConnector;

/**
 *  Fetches a @c
 *  GTLRBeyondCorp_GoogleCloudBeyondcorpAppconnectorsV1ResolveInstanceConfigResponse.
 *
 *  Gets instance configuration for a given AppConnector. An internal method
 *  called by a AppConnector to get its container config.
 *
 *  @param appConnector Required. BeyondCorp AppConnector name using the form:
 *    `projects/{project_id}/locations/{location_id}/appConnectors/{app_connector}`
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsResolveInstanceConfig
 */
+ (instancetype)queryWithAppConnector:(NSString *)appConnector;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: beyondcorp.projects.locations.appConnectors.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsSetIamPolicy : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: beyondcorp.projects.locations.appConnectors.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsTestIamPermissions : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppConnectorsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a new AppGateway in a given project and location.
 *
 *  Method: beyondcorp.projects.locations.appGateways.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppGatewaysCreate : GTLRBeyondCorpQuery

/**
 *  Optional. User-settable AppGateway resource ID. * Must start with a letter.
 *  * Must contain between 4-63 characters from `/a-z-/`. * Must end with a
 *  number or a letter.
 */
@property(nonatomic, copy, nullable) NSString *appGatewayId;

/**
 *  Required. The resource project name of the AppGateway location using the
 *  form: `projects/{project_id}/locations/{location_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes since the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, validates request by executing a dry-run which would not
 *  alter the resource in any way.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleLongrunningOperation.
 *
 *  Creates a new AppGateway in a given project and location.
 *
 *  @param object The @c GTLRBeyondCorp_AppGateway to include in the query.
 *  @param parent Required. The resource project name of the AppGateway location
 *    using the form: `projects/{project_id}/locations/{location_id}`
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppGatewaysCreate
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_AppGateway *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a single AppGateway.
 *
 *  Method: beyondcorp.projects.locations.appGateways.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppGatewaysDelete : GTLRBeyondCorpQuery

/**
 *  Required. BeyondCorp AppGateway name using the form:
 *  `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. An optional request ID to identify requests. Specify a unique
 *  request ID so that if you must retry your request, the server will know to
 *  ignore the request if it has already been completed. The server will
 *  guarantee that for at least 60 minutes after the first request. For example,
 *  consider a situation where you make an initial request and the request times
 *  out. If you make the request again with the same request ID, the server can
 *  check if original operation with the same request ID was received, and if
 *  so, will ignore the second request. This prevents clients from accidentally
 *  creating duplicate commitments. The request ID must be a valid UUID with the
 *  exception that zero UUID is not supported
 *  (00000000-0000-0000-0000-000000000000).
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If set, validates request by executing a dry-run which would not
 *  alter the resource in any way.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleLongrunningOperation.
 *
 *  Deletes a single AppGateway.
 *
 *  @param name Required. BeyondCorp AppGateway name using the form:
 *    `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppGatewaysDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details of a single AppGateway.
 *
 *  Method: beyondcorp.projects.locations.appGateways.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppGatewaysGet : GTLRBeyondCorpQuery

/**
 *  Required. BeyondCorp AppGateway name using the form:
 *  `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBeyondCorp_AppGateway.
 *
 *  Gets details of a single AppGateway.
 *
 *  @param name Required. BeyondCorp AppGateway name using the form:
 *    `projects/{project_id}/locations/{location_id}/appGateways/{app_gateway_id}`
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppGatewaysGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: beyondcorp.projects.locations.appGateways.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppGatewaysGetIamPolicy : GTLRBeyondCorpQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppGatewaysGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Lists AppGateways in a given project and location.
 *
 *  Method: beyondcorp.projects.locations.appGateways.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppGatewaysList : GTLRBeyondCorpQuery

/** Optional. A filter specifying constraints of a list operation. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Specifies the ordering of results. See [Sorting
 *  order](https://cloud.google.com/apis/design/design_patterns#sorting_order)
 *  for more information.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. The maximum number of items to return. If not specified, a default
 *  value of 50 will be used by the service. Regardless of the page_size value,
 *  the response may include a partial list and a caller should only rely on
 *  response's next_page_token to determine if there are more instances left to
 *  be queried.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. The next_page_token value returned from a previous
 *  ListAppGatewaysRequest, if any.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The resource name of the AppGateway location using the form:
 *  `projects/{project_id}/locations/{location_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRBeyondCorp_ListAppGatewaysResponse.
 *
 *  Lists AppGateways in a given project and location.
 *
 *  @param parent Required. The resource name of the AppGateway location using
 *    the form: `projects/{project_id}/locations/{location_id}`
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppGatewaysList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: beyondcorp.projects.locations.appGateways.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppGatewaysSetIamPolicy : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppGatewaysSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: beyondcorp.projects.locations.appGateways.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsAppGatewaysTestIamPermissions : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsAppGatewaysTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: beyondcorp.projects.locations.clientConnectorServices.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsClientConnectorServicesGetIamPolicy : GTLRBeyondCorpQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsClientConnectorServicesGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: beyondcorp.projects.locations.clientConnectorServices.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsClientConnectorServicesSetIamPolicy : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsClientConnectorServicesSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: beyondcorp.projects.locations.clientConnectorServices.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsClientConnectorServicesTestIamPermissions : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsClientConnectorServicesTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  Method: beyondcorp.projects.locations.clientGateways.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsClientGatewaysGetIamPolicy : GTLRBeyondCorpQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Gets the access control policy for a resource. Returns an empty policy if
 *  the resource exists and does not have a policy set.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsClientGatewaysGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  Method: beyondcorp.projects.locations.clientGateways.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsClientGatewaysSetIamPolicy : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1Policy.
 *
 *  Sets the access control policy on the specified resource. Replaces any
 *  existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and
 *  `PERMISSION_DENIED` errors.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsClientGatewaysSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  Method: beyondcorp.projects.locations.clientGateways.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsClientGatewaysTestIamPermissions : GTLRBeyondCorpQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Returns permissions that a caller has on the specified resource. If the
 *  resource does not exist, this will return an empty set of permissions, not a
 *  `NOT_FOUND` error. Note: This operation is designed to be used for building
 *  permission-aware UIs and command-line tools, not for authorization checking.
 *  This operation may "fail open" without warning.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsClientGatewaysTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Gets information about a location.
 *
 *  Method: beyondcorp.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsGet : GTLRBeyondCorpQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleCloudLocationLocation.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: beyondcorp.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsList : GTLRBeyondCorpQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleCloudLocationListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: beyondcorp.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsOperationsCancel : GTLRBeyondCorpQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBeyondCorp_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRBeyondCorp_GoogleLongrunningCancelOperationRequest
 *    to include in the query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRBeyondCorp_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  Method: beyondcorp.projects.locations.operations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsOperationsDelete : GTLRBeyondCorpQuery

/** The name of the operation resource to be deleted. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBeyondCorp_Empty.
 *
 *  Deletes a long-running operation. This method indicates that the client is
 *  no longer interested in the operation result. It does not cancel the
 *  operation. If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`.
 *
 *  @param name The name of the operation resource to be deleted.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsOperationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: beyondcorp.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsOperationsGet : GTLRBeyondCorpQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: beyondcorp.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeBeyondCorpCloudPlatform
 */
@interface GTLRBeyondCorpQuery_ProjectsLocationsOperationsList : GTLRBeyondCorpQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRBeyondCorp_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRBeyondCorpQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
