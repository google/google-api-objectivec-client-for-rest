// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Developer Connect API (developerconnect/v1)
// Description:
//   Connect third-party source code management to Google
// Documentation:
//   http://cloud.google.com/developer-connect/docs/overview

#import <GoogleAPIClientForREST/GTLRDeveloperConnectObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRDeveloperConnect_GitHubConfig.githubApp
NSString * const kGTLRDeveloperConnect_GitHubConfig_GithubApp_DeveloperConnect = @"DEVELOPER_CONNECT";
NSString * const kGTLRDeveloperConnect_GitHubConfig_GithubApp_Firebase = @"FIREBASE";
NSString * const kGTLRDeveloperConnect_GitHubConfig_GithubApp_GitHubAppUnspecified = @"GIT_HUB_APP_UNSPECIFIED";

// GTLRDeveloperConnect_InsightsConfig.state
NSString * const kGTLRDeveloperConnect_InsightsConfig_State_Complete = @"COMPLETE";
NSString * const kGTLRDeveloperConnect_InsightsConfig_State_Error = @"ERROR";
NSString * const kGTLRDeveloperConnect_InsightsConfig_State_Pending = @"PENDING";
NSString * const kGTLRDeveloperConnect_InsightsConfig_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRDeveloperConnect_InstallationState.stage
NSString * const kGTLRDeveloperConnect_InstallationState_Stage_Complete = @"COMPLETE";
NSString * const kGTLRDeveloperConnect_InstallationState_Stage_PendingCreateApp = @"PENDING_CREATE_APP";
NSString * const kGTLRDeveloperConnect_InstallationState_Stage_PendingInstallApp = @"PENDING_INSTALL_APP";
NSString * const kGTLRDeveloperConnect_InstallationState_Stage_PendingUserOauth = @"PENDING_USER_OAUTH";
NSString * const kGTLRDeveloperConnect_InstallationState_Stage_StageUnspecified = @"STAGE_UNSPECIFIED";

// GTLRDeveloperConnect_ProviderOAuthConfig.systemProviderId
NSString * const kGTLRDeveloperConnect_ProviderOAuthConfig_SystemProviderId_Datastax = @"DATASTAX";
NSString * const kGTLRDeveloperConnect_ProviderOAuthConfig_SystemProviderId_Dynatrace = @"DYNATRACE";
NSString * const kGTLRDeveloperConnect_ProviderOAuthConfig_SystemProviderId_Github = @"GITHUB";
NSString * const kGTLRDeveloperConnect_ProviderOAuthConfig_SystemProviderId_Gitlab = @"GITLAB";
NSString * const kGTLRDeveloperConnect_ProviderOAuthConfig_SystemProviderId_Google = @"GOOGLE";
NSString * const kGTLRDeveloperConnect_ProviderOAuthConfig_SystemProviderId_NewRelic = @"NEW_RELIC";
NSString * const kGTLRDeveloperConnect_ProviderOAuthConfig_SystemProviderId_Rovo = @"ROVO";
NSString * const kGTLRDeveloperConnect_ProviderOAuthConfig_SystemProviderId_Sentry = @"SENTRY";
NSString * const kGTLRDeveloperConnect_ProviderOAuthConfig_SystemProviderId_SystemProviderUnspecified = @"SYSTEM_PROVIDER_UNSPECIFIED";

// GTLRDeveloperConnect_RuntimeConfig.state
NSString * const kGTLRDeveloperConnect_RuntimeConfig_State_Linked = @"LINKED";
NSString * const kGTLRDeveloperConnect_RuntimeConfig_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRDeveloperConnect_RuntimeConfig_State_Unlinked = @"UNLINKED";

// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_AccountConnector
//

@implementation GTLRDeveloperConnect_AccountConnector
@dynamic annotations, createTime, ETag, labels, name, oauthStartUri,
         providerOauthConfig, updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_AccountConnector_Annotations
//

@implementation GTLRDeveloperConnect_AccountConnector_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_AccountConnector_Labels
//

@implementation GTLRDeveloperConnect_AccountConnector_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_AppHubWorkload
//

@implementation GTLRDeveloperConnect_AppHubWorkload
@dynamic criticality, environment, workload;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ArtifactConfig
//

@implementation GTLRDeveloperConnect_ArtifactConfig
@dynamic googleArtifactAnalysis, googleArtifactRegistry, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_BitbucketCloudConfig
//

@implementation GTLRDeveloperConnect_BitbucketCloudConfig
@dynamic authorizerCredential, readAuthorizerCredential,
         webhookSecretSecretVersion, workspace;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_BitbucketDataCenterConfig
//

@implementation GTLRDeveloperConnect_BitbucketDataCenterConfig
@dynamic authorizerCredential, hostUri, readAuthorizerCredential, serverVersion,
         serviceDirectoryConfig, sslCaCertificate, webhookSecretSecretVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_CancelOperationRequest
//

@implementation GTLRDeveloperConnect_CancelOperationRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_Connection
//

@implementation GTLRDeveloperConnect_Connection
@dynamic annotations, bitbucketCloudConfig, bitbucketDataCenterConfig,
         createTime, cryptoKeyConfig, deleteTime, disabled, ETag, githubConfig,
         githubEnterpriseConfig, gitlabConfig, gitlabEnterpriseConfig,
         gitProxyConfig, installationState, labels, name, reconciling, uid,
         updateTime;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_Connection_Annotations
//

@implementation GTLRDeveloperConnect_Connection_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_Connection_Labels
//

@implementation GTLRDeveloperConnect_Connection_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_CryptoKeyConfig
//

@implementation GTLRDeveloperConnect_CryptoKeyConfig
@dynamic keyReference;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_Empty
//

@implementation GTLRDeveloperConnect_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ExchangeError
//

@implementation GTLRDeveloperConnect_ExchangeError
@dynamic code, descriptionProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_FetchAccessTokenRequest
//

@implementation GTLRDeveloperConnect_FetchAccessTokenRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_FetchAccessTokenResponse
//

@implementation GTLRDeveloperConnect_FetchAccessTokenResponse
@dynamic exchangeError, expirationTime, scopes, token;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"scopes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_FetchGitHubInstallationsResponse
//

@implementation GTLRDeveloperConnect_FetchGitHubInstallationsResponse
@dynamic installations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"installations" : [GTLRDeveloperConnect_Installation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_FetchGitRefsResponse
//

@implementation GTLRDeveloperConnect_FetchGitRefsResponse
@dynamic nextPageToken, refNames;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"refNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_FetchLinkableGitRepositoriesResponse
//

@implementation GTLRDeveloperConnect_FetchLinkableGitRepositoriesResponse
@dynamic linkableGitRepositories, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"linkableGitRepositories" : [GTLRDeveloperConnect_LinkableGitRepository class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"linkableGitRepositories";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_FetchReadTokenRequest
//

@implementation GTLRDeveloperConnect_FetchReadTokenRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_FetchReadTokenResponse
//

@implementation GTLRDeveloperConnect_FetchReadTokenResponse
@dynamic expirationTime, gitUsername, token;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_FetchReadWriteTokenRequest
//

@implementation GTLRDeveloperConnect_FetchReadWriteTokenRequest
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_FetchReadWriteTokenResponse
//

@implementation GTLRDeveloperConnect_FetchReadWriteTokenResponse
@dynamic expirationTime, gitUsername, token;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_GitHubConfig
//

@implementation GTLRDeveloperConnect_GitHubConfig
@dynamic appInstallationId, authorizerCredential, githubApp, installationUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_GitHubEnterpriseConfig
//

@implementation GTLRDeveloperConnect_GitHubEnterpriseConfig
@dynamic appId, appInstallationId, appSlug, hostUri, installationUri,
         privateKeySecretVersion, serverVersion, serviceDirectoryConfig,
         sslCaCertificate, webhookSecretSecretVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_GitLabConfig
//

@implementation GTLRDeveloperConnect_GitLabConfig
@dynamic authorizerCredential, readAuthorizerCredential,
         webhookSecretSecretVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_GitLabEnterpriseConfig
//

@implementation GTLRDeveloperConnect_GitLabEnterpriseConfig
@dynamic authorizerCredential, hostUri, readAuthorizerCredential, serverVersion,
         serviceDirectoryConfig, sslCaCertificate, webhookSecretSecretVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_GitProxyConfig
//

@implementation GTLRDeveloperConnect_GitProxyConfig
@dynamic enabled;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_GitRepositoryLink
//

@implementation GTLRDeveloperConnect_GitRepositoryLink
@dynamic annotations, cloneUri, createTime, deleteTime, ETag, gitProxyUri,
         labels, name, reconciling, uid, updateTime, webhookId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_GitRepositoryLink_Annotations
//

@implementation GTLRDeveloperConnect_GitRepositoryLink_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_GitRepositoryLink_Labels
//

@implementation GTLRDeveloperConnect_GitRepositoryLink_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_GKEWorkload
//

@implementation GTLRDeveloperConnect_GKEWorkload
@dynamic cluster, deployment;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_GoogleArtifactAnalysis
//

@implementation GTLRDeveloperConnect_GoogleArtifactAnalysis
@dynamic projectId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_GoogleArtifactRegistry
//

@implementation GTLRDeveloperConnect_GoogleArtifactRegistry
@dynamic artifactRegistryPackage, projectId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_HttpBody
//

@implementation GTLRDeveloperConnect_HttpBody
@dynamic contentType, data, extensions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"extensions" : [GTLRDeveloperConnect_HttpBody_Extensions_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_HttpBody_Extensions_Item
//

@implementation GTLRDeveloperConnect_HttpBody_Extensions_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_InsightsConfig
//

@implementation GTLRDeveloperConnect_InsightsConfig
@dynamic annotations, appHubApplication, artifactConfigs, createTime, errors,
         labels, name, reconciling, runtimeConfigs, state, updateTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"artifactConfigs" : [GTLRDeveloperConnect_ArtifactConfig class],
    @"errors" : [GTLRDeveloperConnect_Status class],
    @"runtimeConfigs" : [GTLRDeveloperConnect_RuntimeConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_InsightsConfig_Annotations
//

@implementation GTLRDeveloperConnect_InsightsConfig_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_InsightsConfig_Labels
//

@implementation GTLRDeveloperConnect_InsightsConfig_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_Installation
//

@implementation GTLRDeveloperConnect_Installation
@dynamic identifier, name, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_InstallationState
//

@implementation GTLRDeveloperConnect_InstallationState
@dynamic actionUri, message, stage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_LinkableGitRepository
//

@implementation GTLRDeveloperConnect_LinkableGitRepository
@dynamic cloneUri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ListAccountConnectorsResponse
//

@implementation GTLRDeveloperConnect_ListAccountConnectorsResponse
@dynamic accountConnectors, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accountConnectors" : [GTLRDeveloperConnect_AccountConnector class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"accountConnectors";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ListConnectionsResponse
//

@implementation GTLRDeveloperConnect_ListConnectionsResponse
@dynamic connections, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"connections" : [GTLRDeveloperConnect_Connection class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"connections";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ListGitRepositoryLinksResponse
//

@implementation GTLRDeveloperConnect_ListGitRepositoryLinksResponse
@dynamic gitRepositoryLinks, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"gitRepositoryLinks" : [GTLRDeveloperConnect_GitRepositoryLink class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"gitRepositoryLinks";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ListInsightsConfigsResponse
//

@implementation GTLRDeveloperConnect_ListInsightsConfigsResponse
@dynamic insightsConfigs, nextPageToken, unreachable;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"insightsConfigs" : [GTLRDeveloperConnect_InsightsConfig class],
    @"unreachable" : [NSString class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"insightsConfigs";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ListLocationsResponse
//

@implementation GTLRDeveloperConnect_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRDeveloperConnect_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ListOperationsResponse
//

@implementation GTLRDeveloperConnect_ListOperationsResponse
@dynamic nextPageToken, operations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRDeveloperConnect_Operation class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"operations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ListUsersResponse
//

@implementation GTLRDeveloperConnect_ListUsersResponse
@dynamic nextPageToken, unreachable, users;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachable" : [NSString class],
    @"users" : [GTLRDeveloperConnect_User class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"users";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_Location
//

@implementation GTLRDeveloperConnect_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_Location_Labels
//

@implementation GTLRDeveloperConnect_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_Location_Metadata
//

@implementation GTLRDeveloperConnect_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_OAuthCredential
//

@implementation GTLRDeveloperConnect_OAuthCredential
@dynamic oauthTokenSecretVersion, username;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_Operation
//

@implementation GTLRDeveloperConnect_Operation
@dynamic done, error, metadata, name, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_Operation_Metadata
//

@implementation GTLRDeveloperConnect_Operation_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_Operation_Response
//

@implementation GTLRDeveloperConnect_Operation_Response

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_OperationMetadata
//

@implementation GTLRDeveloperConnect_OperationMetadata
@dynamic apiVersion, createTime, endTime, requestedCancellation, statusMessage,
         target, verb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ProcessBitbucketCloudWebhookRequest
//

@implementation GTLRDeveloperConnect_ProcessBitbucketCloudWebhookRequest
@dynamic body;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ProcessBitbucketDataCenterWebhookRequest
//

@implementation GTLRDeveloperConnect_ProcessBitbucketDataCenterWebhookRequest
@dynamic body;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ProcessGitHubEnterpriseWebhookRequest
//

@implementation GTLRDeveloperConnect_ProcessGitHubEnterpriseWebhookRequest
@dynamic body;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ProcessGitLabEnterpriseWebhookRequest
//

@implementation GTLRDeveloperConnect_ProcessGitLabEnterpriseWebhookRequest
@dynamic body;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ProcessGitLabWebhookRequest
//

@implementation GTLRDeveloperConnect_ProcessGitLabWebhookRequest
@dynamic body;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ProviderOAuthConfig
//

@implementation GTLRDeveloperConnect_ProviderOAuthConfig
@dynamic scopes, systemProviderId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"scopes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_RuntimeConfig
//

@implementation GTLRDeveloperConnect_RuntimeConfig
@dynamic appHubWorkload, gkeWorkload, state, uri;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_ServiceDirectoryConfig
//

@implementation GTLRDeveloperConnect_ServiceDirectoryConfig
@dynamic service;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_Status
//

@implementation GTLRDeveloperConnect_Status
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRDeveloperConnect_Status_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_Status_Details_Item
//

@implementation GTLRDeveloperConnect_Status_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_User
//

@implementation GTLRDeveloperConnect_User
@dynamic createTime, displayName, lastTokenRequestTime, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRDeveloperConnect_UserCredential
//

@implementation GTLRDeveloperConnect_UserCredential
@dynamic username, userTokenSecretVersion;
@end
