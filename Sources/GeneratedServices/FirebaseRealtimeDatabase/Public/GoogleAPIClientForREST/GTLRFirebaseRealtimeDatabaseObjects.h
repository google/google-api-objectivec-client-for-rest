// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Firebase Realtime Database API (firebasedatabase/v1beta)
// Description:
//   The Firebase Realtime Database Management API enables programmatic
//   provisioning and management of Realtime Database instances.
// Documentation:
//   https://firebase.google.com/docs/reference/rest/database/database-management/rest/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRFirebaseRealtimeDatabase_DatabaseInstance;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRFirebaseRealtimeDatabase_DatabaseInstance.state

/**
 *  The normal and active state.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRFirebaseRealtimeDatabase_DatabaseInstance_State_Active;
/**
 *  The database is in a deleted state.
 *
 *  Value: "DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRFirebaseRealtimeDatabase_DatabaseInstance_State_Deleted;
/**
 *  The database is in a disabled state. It can be re-enabled later.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRFirebaseRealtimeDatabase_DatabaseInstance_State_Disabled;
/**
 *  Unspecified state, likely the result of an error on the backend. This is
 *  only used for distinguishing unset values.
 *
 *  Value: "LIFECYCLE_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRFirebaseRealtimeDatabase_DatabaseInstance_State_LifecycleStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRFirebaseRealtimeDatabase_DatabaseInstance.type

/**
 *  Unknown state, likely the result of an error on the backend. This is only
 *  used for distinguishing unset values.
 *
 *  Value: "DATABASE_INSTANCE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRFirebaseRealtimeDatabase_DatabaseInstance_Type_DatabaseInstanceTypeUnspecified;
/**
 *  The default database that is provisioned when a project is created.
 *
 *  Value: "DEFAULT_DATABASE"
 */
FOUNDATION_EXTERN NSString * const kGTLRFirebaseRealtimeDatabase_DatabaseInstance_Type_DefaultDatabase;
/**
 *  A database that the user created.
 *
 *  Value: "USER_DATABASE"
 */
FOUNDATION_EXTERN NSString * const kGTLRFirebaseRealtimeDatabase_DatabaseInstance_Type_UserDatabase;

/**
 *  Representation of a Realtime Database instance. Details on interacting with
 *  contents of a DatabaseInstance can be found at:
 *  https://firebase.google.com/docs/database/rest/start.
 */
@interface GTLRFirebaseRealtimeDatabase_DatabaseInstance : GTLRObject

/** Output only. Output Only. The globally unique hostname of the database. */
@property(nonatomic, copy, nullable) NSString *databaseUrl;

/**
 *  The fully qualified resource name of the database instance, in the form:
 *  `projects/{project-number}/locations/{location-id}/instances/{database-id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The resource name of the project this instance belongs to. For
 *  example: `projects/{project-number}`.
 */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Output only. The database's lifecycle state. Read-only.
 *
 *  Likely values:
 *    @arg @c kGTLRFirebaseRealtimeDatabase_DatabaseInstance_State_Active The
 *        normal and active state. (Value: "ACTIVE")
 *    @arg @c kGTLRFirebaseRealtimeDatabase_DatabaseInstance_State_Deleted The
 *        database is in a deleted state. (Value: "DELETED")
 *    @arg @c kGTLRFirebaseRealtimeDatabase_DatabaseInstance_State_Disabled The
 *        database is in a disabled state. It can be re-enabled later. (Value:
 *        "DISABLED")
 *    @arg @c kGTLRFirebaseRealtimeDatabase_DatabaseInstance_State_LifecycleStateUnspecified
 *        Unspecified state, likely the result of an error on the backend. This
 *        is only used for distinguishing unset values. (Value:
 *        "LIFECYCLE_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Immutable. The database instance type. On creation only USER_DATABASE is
 *  allowed, which is also the default when omitted.
 *
 *  Likely values:
 *    @arg @c kGTLRFirebaseRealtimeDatabase_DatabaseInstance_Type_DatabaseInstanceTypeUnspecified
 *        Unknown state, likely the result of an error on the backend. This is
 *        only used for distinguishing unset values. (Value:
 *        "DATABASE_INSTANCE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRFirebaseRealtimeDatabase_DatabaseInstance_Type_DefaultDatabase
 *        The default database that is provisioned when a project is created.
 *        (Value: "DEFAULT_DATABASE")
 *    @arg @c kGTLRFirebaseRealtimeDatabase_DatabaseInstance_Type_UserDatabase A
 *        database that the user created. (Value: "USER_DATABASE")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  The request sent to the DisableDatabaseInstance method.
 */
@interface GTLRFirebaseRealtimeDatabase_DisableDatabaseInstanceRequest : GTLRObject
@end


/**
 *  The response from the ListDatabaseInstances method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "instances" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRFirebaseRealtimeDatabase_ListDatabaseInstancesResponse : GTLRCollectionObject

/**
 *  List of each DatabaseInstance that is in the parent Firebase project.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRFirebaseRealtimeDatabase_DatabaseInstance *> *instances;

/**
 *  If the result list is too large to fit in a single response, then a token is
 *  returned. If the string is empty, then this response is the last page of
 *  results. This token can be used in a subsequent call to
 *  `ListDatabaseInstances` to find the next group of database instances. Page
 *  tokens are short-lived and should not be persisted.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The request sent to the ReenableDatabaseInstance method.
 */
@interface GTLRFirebaseRealtimeDatabase_ReenableDatabaseInstanceRequest : GTLRObject
@end


/**
 *  The request sent to UndeleteDatabaseInstance method.
 */
@interface GTLRFirebaseRealtimeDatabase_UndeleteDatabaseInstanceRequest : GTLRObject
@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
