// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Content API for Shopping (content/v2.1)
// Description:
//   Manage your product listings and accounts for Google Shopping
// Documentation:
//   https://developers.google.com/shopping-content/v2/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRShoppingContent_Account;
@class GTLRShoppingContent_AccountAddress;
@class GTLRShoppingContent_AccountAdsLink;
@class GTLRShoppingContent_AccountAutomaticImprovements;
@class GTLRShoppingContent_AccountBusinessInformation;
@class GTLRShoppingContent_AccountCustomerService;
@class GTLRShoppingContent_AccountGoogleMyBusinessLink;
@class GTLRShoppingContent_AccountIdentifier;
@class GTLRShoppingContent_AccountImageImprovements;
@class GTLRShoppingContent_AccountImageImprovementsSettings;
@class GTLRShoppingContent_AccountItemUpdates;
@class GTLRShoppingContent_AccountItemUpdatesSettings;
@class GTLRShoppingContent_AccountLabel;
@class GTLRShoppingContent_AccountReturnCarrier;
@class GTLRShoppingContent_AccountsCustomBatchRequestEntry;
@class GTLRShoppingContent_AccountsCustomBatchRequestEntryLinkRequest;
@class GTLRShoppingContent_AccountsCustomBatchResponseEntry;
@class GTLRShoppingContent_AccountShippingImprovements;
@class GTLRShoppingContent_AccountStatus;
@class GTLRShoppingContent_AccountStatusAccountLevelIssue;
@class GTLRShoppingContent_AccountstatusesCustomBatchRequestEntry;
@class GTLRShoppingContent_AccountstatusesCustomBatchResponseEntry;
@class GTLRShoppingContent_AccountStatusItemLevelIssue;
@class GTLRShoppingContent_AccountStatusProducts;
@class GTLRShoppingContent_AccountStatusStatistics;
@class GTLRShoppingContent_AccountTax;
@class GTLRShoppingContent_AccounttaxCustomBatchRequestEntry;
@class GTLRShoppingContent_AccounttaxCustomBatchResponseEntry;
@class GTLRShoppingContent_AccountTaxTaxRule;
@class GTLRShoppingContent_AccountUser;
@class GTLRShoppingContent_AccountYouTubeChannelLink;
@class GTLRShoppingContent_Address;
@class GTLRShoppingContent_Amount;
@class GTLRShoppingContent_BusinessDayConfig;
@class GTLRShoppingContent_CarrierRate;
@class GTLRShoppingContent_CarriersCarrier;
@class GTLRShoppingContent_Collection;
@class GTLRShoppingContent_CollectionFeaturedProduct;
@class GTLRShoppingContent_CollectionStatus;
@class GTLRShoppingContent_CollectionStatusDestinationStatus;
@class GTLRShoppingContent_CollectionStatusItemLevelIssue;
@class GTLRShoppingContent_Css;
@class GTLRShoppingContent_CustomAttribute;
@class GTLRShoppingContent_CustomerReturnReason;
@class GTLRShoppingContent_CutoffTime;
@class GTLRShoppingContent_Datafeed;
@class GTLRShoppingContent_DatafeedFetchSchedule;
@class GTLRShoppingContent_DatafeedFormat;
@class GTLRShoppingContent_DatafeedsCustomBatchRequestEntry;
@class GTLRShoppingContent_DatafeedsCustomBatchResponseEntry;
@class GTLRShoppingContent_DatafeedStatus;
@class GTLRShoppingContent_DatafeedStatusError;
@class GTLRShoppingContent_DatafeedstatusesCustomBatchRequestEntry;
@class GTLRShoppingContent_DatafeedstatusesCustomBatchResponseEntry;
@class GTLRShoppingContent_DatafeedStatusExample;
@class GTLRShoppingContent_DatafeedTarget;
@class GTLRShoppingContent_Date;
@class GTLRShoppingContent_DateTime;
@class GTLRShoppingContent_DeliveryArea;
@class GTLRShoppingContent_DeliveryAreaPostalCodeRange;
@class GTLRShoppingContent_DeliveryTime;
@class GTLRShoppingContent_ECommercePlatformLinkInfo;
@class GTLRShoppingContent_Error;
@class GTLRShoppingContent_Errors;
@class GTLRShoppingContent_FreeListingsProgramStatusRegionStatus;
@class GTLRShoppingContent_FreeListingsProgramStatusReviewIneligibilityReasonDetails;
@class GTLRShoppingContent_GmbAccounts;
@class GTLRShoppingContent_GmbAccountsGmbAccount;
@class GTLRShoppingContent_Headers;
@class GTLRShoppingContent_HolidayCutoff;
@class GTLRShoppingContent_HolidaysHoliday;
@class GTLRShoppingContent_InapplicabilityDetails;
@class GTLRShoppingContent_Installment;
@class GTLRShoppingContent_InvoiceSummary;
@class GTLRShoppingContent_InvoiceSummaryAdditionalChargeSummary;
@class GTLRShoppingContent_LiaAboutPageSettings;
@class GTLRShoppingContent_LiaCountrySettings;
@class GTLRShoppingContent_LiaInventorySettings;
@class GTLRShoppingContent_LiaOnDisplayToOrderSettings;
@class GTLRShoppingContent_LiaPosDataProvider;
@class GTLRShoppingContent_LiaSettings;
@class GTLRShoppingContent_LiasettingsCustomBatchRequestEntry;
@class GTLRShoppingContent_LiasettingsCustomBatchResponseEntry;
@class GTLRShoppingContent_LinkedAccount;
@class GTLRShoppingContent_LinkService;
@class GTLRShoppingContent_LocalInventory;
@class GTLRShoppingContent_LocalinventoryCustomBatchRequestEntry;
@class GTLRShoppingContent_LocalinventoryCustomBatchResponseEntry;
@class GTLRShoppingContent_LocationIdSet;
@class GTLRShoppingContent_LoyaltyPoints;
@class GTLRShoppingContent_MerchantOrderReturn;
@class GTLRShoppingContent_MerchantOrderReturnItem;
@class GTLRShoppingContent_MerchantRejectionReason;
@class GTLRShoppingContent_MethodQuota;
@class GTLRShoppingContent_Metrics;
@class GTLRShoppingContent_MinimumOrderValueTable;
@class GTLRShoppingContent_MinimumOrderValueTableStoreCodeSetWithMov;
@class GTLRShoppingContent_MonetaryAmount;
@class GTLRShoppingContent_Order;
@class GTLRShoppingContent_OrderAddress;
@class GTLRShoppingContent_OrderCancellation;
@class GTLRShoppingContent_OrderCustomer;
@class GTLRShoppingContent_OrderCustomerLoyaltyInfo;
@class GTLRShoppingContent_OrderCustomerMarketingRightsInfo;
@class GTLRShoppingContent_OrderDeliveryDetails;
@class GTLRShoppingContent_OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption;
@class GTLRShoppingContent_OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption;
@class GTLRShoppingContent_OrderLineItem;
@class GTLRShoppingContent_OrderLineItemAdjustment;
@class GTLRShoppingContent_OrderLineItemProduct;
@class GTLRShoppingContent_OrderLineItemProductFee;
@class GTLRShoppingContent_OrderLineItemProductVariantAttribute;
@class GTLRShoppingContent_OrderLineItemReturnInfo;
@class GTLRShoppingContent_OrderLineItemShippingDetails;
@class GTLRShoppingContent_OrderLineItemShippingDetailsMethod;
@class GTLRShoppingContent_OrderMerchantProvidedAnnotation;
@class GTLRShoppingContent_OrderOrderAnnotation;
@class GTLRShoppingContent_OrderPickupDetails;
@class GTLRShoppingContent_OrderPickupDetailsCollector;
@class GTLRShoppingContent_OrderPromotion;
@class GTLRShoppingContent_OrderPromotionItem;
@class GTLRShoppingContent_OrderRefund;
@class GTLRShoppingContent_OrderReportDisbursement;
@class GTLRShoppingContent_OrderReportTransaction;
@class GTLRShoppingContent_OrderReturn;
@class GTLRShoppingContent_OrderreturnsLineItem;
@class GTLRShoppingContent_OrderreturnsPartialRefund;
@class GTLRShoppingContent_OrderreturnsRefundOperation;
@class GTLRShoppingContent_OrderreturnsRejectOperation;
@class GTLRShoppingContent_OrderreturnsReturnItem;
@class GTLRShoppingContent_OrdersCustomBatchRequestEntryCreateTestReturnReturnItem;
@class GTLRShoppingContent_OrdersCustomBatchRequestEntryRefundItemItem;
@class GTLRShoppingContent_OrdersCustomBatchRequestEntryRefundItemShipping;
@class GTLRShoppingContent_OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo;
@class GTLRShoppingContent_OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails;
@class GTLRShoppingContent_OrderShipment;
@class GTLRShoppingContent_OrderShipmentLineItemShipment;
@class GTLRShoppingContent_OrderShipmentScheduledDeliveryDetails;
@class GTLRShoppingContent_OrderTrackingSignalLineItemDetails;
@class GTLRShoppingContent_OrderTrackingSignalShipmentLineItemMapping;
@class GTLRShoppingContent_OrderTrackingSignalShippingInfo;
@class GTLRShoppingContent_PaymentServiceProviderLinkInfo;
@class GTLRShoppingContent_PickupCarrierService;
@class GTLRShoppingContent_PickupServicesPickupService;
@class GTLRShoppingContent_PosCustomBatchRequestEntry;
@class GTLRShoppingContent_PosCustomBatchResponseEntry;
@class GTLRShoppingContent_PosDataProviders;
@class GTLRShoppingContent_PosDataProvidersPosDataProvider;
@class GTLRShoppingContent_PosInventory;
@class GTLRShoppingContent_PosSale;
@class GTLRShoppingContent_PosStore;
@class GTLRShoppingContent_PostalCodeGroup;
@class GTLRShoppingContent_PostalCodeRange;
@class GTLRShoppingContent_Price;
@class GTLRShoppingContent_PriceAmount;
@class GTLRShoppingContent_Product;
@class GTLRShoppingContent_ProductAmount;
@class GTLRShoppingContent_ProductDeliveryTimeAreaDeliveryTime;
@class GTLRShoppingContent_ProductDeliveryTimeAreaDeliveryTimeDeliveryTime;
@class GTLRShoppingContent_ProductDimension;
@class GTLRShoppingContent_ProductId;
@class GTLRShoppingContent_ProductProductDetail;
@class GTLRShoppingContent_ProductsCustomBatchRequestEntry;
@class GTLRShoppingContent_ProductsCustomBatchResponseEntry;
@class GTLRShoppingContent_ProductShipping;
@class GTLRShoppingContent_ProductShippingDimension;
@class GTLRShoppingContent_ProductShippingWeight;
@class GTLRShoppingContent_ProductStatus;
@class GTLRShoppingContent_ProductStatusDestinationStatus;
@class GTLRShoppingContent_ProductstatusesCustomBatchRequestEntry;
@class GTLRShoppingContent_ProductstatusesCustomBatchResponseEntry;
@class GTLRShoppingContent_ProductStatusItemLevelIssue;
@class GTLRShoppingContent_ProductSubscriptionCost;
@class GTLRShoppingContent_ProductTax;
@class GTLRShoppingContent_ProductUnitPricingBaseMeasure;
@class GTLRShoppingContent_ProductUnitPricingMeasure;
@class GTLRShoppingContent_ProductView;
@class GTLRShoppingContent_ProductViewItemIssue;
@class GTLRShoppingContent_ProductViewItemIssueIssueSeverityPerDestination;
@class GTLRShoppingContent_ProductViewItemIssueItemIssueSeverity;
@class GTLRShoppingContent_ProductViewItemIssueItemIssueType;
@class GTLRShoppingContent_ProductWeight;
@class GTLRShoppingContent_RateGroup;
@class GTLRShoppingContent_RefundReason;
@class GTLRShoppingContent_Region;
@class GTLRShoppingContent_RegionalInventory;
@class GTLRShoppingContent_RegionalinventoryCustomBatchRequestEntry;
@class GTLRShoppingContent_RegionalinventoryCustomBatchResponseEntry;
@class GTLRShoppingContent_RegionGeoTargetArea;
@class GTLRShoppingContent_RegionPostalCodeArea;
@class GTLRShoppingContent_RegionPostalCodeAreaPostalCodeRange;
@class GTLRShoppingContent_ReportRow;
@class GTLRShoppingContent_RepricingProductReport;
@class GTLRShoppingContent_RepricingProductReportBuyboxWinningProductStats;
@class GTLRShoppingContent_RepricingRule;
@class GTLRShoppingContent_RepricingRuleCostOfGoodsSaleRule;
@class GTLRShoppingContent_RepricingRuleEffectiveTime;
@class GTLRShoppingContent_RepricingRuleEffectiveTimeFixedTimePeriod;
@class GTLRShoppingContent_RepricingRuleEligibleOfferMatcher;
@class GTLRShoppingContent_RepricingRuleEligibleOfferMatcherStringMatcher;
@class GTLRShoppingContent_RepricingRuleReport;
@class GTLRShoppingContent_RepricingRuleReportBuyboxWinningRuleStats;
@class GTLRShoppingContent_RepricingRuleRestriction;
@class GTLRShoppingContent_RepricingRuleRestrictionBoundary;
@class GTLRShoppingContent_RepricingRuleStatsBasedRule;
@class GTLRShoppingContent_ReturnAddress;
@class GTLRShoppingContent_ReturnAddressAddress;
@class GTLRShoppingContent_ReturnaddressCustomBatchRequestEntry;
@class GTLRShoppingContent_ReturnaddressCustomBatchResponseEntry;
@class GTLRShoppingContent_ReturnPolicy;
@class GTLRShoppingContent_ReturnpolicyCustomBatchRequestEntry;
@class GTLRShoppingContent_ReturnpolicyCustomBatchResponseEntry;
@class GTLRShoppingContent_ReturnPolicyOnline;
@class GTLRShoppingContent_ReturnPolicyOnlinePolicy;
@class GTLRShoppingContent_ReturnPolicyOnlineRestockingFee;
@class GTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo;
@class GTLRShoppingContent_ReturnPolicyOnlineReturnShippingFee;
@class GTLRShoppingContent_ReturnPolicyPolicy;
@class GTLRShoppingContent_ReturnPolicySeasonalOverride;
@class GTLRShoppingContent_ReturnPricingInfo;
@class GTLRShoppingContent_ReturnShipment;
@class GTLRShoppingContent_Row;
@class GTLRShoppingContent_Segments;
@class GTLRShoppingContent_Service;
@class GTLRShoppingContent_SettlementReport;
@class GTLRShoppingContent_SettlementTransaction;
@class GTLRShoppingContent_SettlementTransactionAmount;
@class GTLRShoppingContent_SettlementTransactionAmountCommission;
@class GTLRShoppingContent_SettlementTransactionIdentifiers;
@class GTLRShoppingContent_SettlementTransactionTransaction;
@class GTLRShoppingContent_ShipmentInvoice;
@class GTLRShoppingContent_ShipmentInvoiceLineItemInvoice;
@class GTLRShoppingContent_ShipmentTrackingInfo;
@class GTLRShoppingContent_ShippingSettings;
@class GTLRShoppingContent_ShippingsettingsCustomBatchRequestEntry;
@class GTLRShoppingContent_ShippingsettingsCustomBatchResponseEntry;
@class GTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus;
@class GTLRShoppingContent_ShoppingAdsProgramStatusReviewIneligibilityReasonDetails;
@class GTLRShoppingContent_Table;
@class GTLRShoppingContent_TestOrder;
@class GTLRShoppingContent_TestOrderAddress;
@class GTLRShoppingContent_TestOrderDeliveryDetails;
@class GTLRShoppingContent_TestOrderLineItem;
@class GTLRShoppingContent_TestOrderLineItemProduct;
@class GTLRShoppingContent_TestOrderPickupDetails;
@class GTLRShoppingContent_TestOrderPickupDetailsPickupPerson;
@class GTLRShoppingContent_TimePeriod;
@class GTLRShoppingContent_TimeZone;
@class GTLRShoppingContent_TransitTable;
@class GTLRShoppingContent_TransitTableTransitTimeRow;
@class GTLRShoppingContent_TransitTableTransitTimeRowTransitTimeValue;
@class GTLRShoppingContent_UnitInvoice;
@class GTLRShoppingContent_UnitInvoiceAdditionalCharge;
@class GTLRShoppingContent_UnitInvoiceTaxLine;
@class GTLRShoppingContent_Value;
@class GTLRShoppingContent_Warehouse;
@class GTLRShoppingContent_WarehouseBasedDeliveryTime;
@class GTLRShoppingContent_WarehouseCutoffTime;
@class GTLRShoppingContent_Weight;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRShoppingContent_AccountCredentials.purpose

/**
 *  Unknown purpose.
 *
 *  Value: "ACCOUNT_CREDENTIALS_PURPOSE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_AccountCredentials_Purpose_AccountCredentialsPurposeUnspecified;
/**
 *  The credentials allow Google to manage Shopify integration on behalf of the
 *  merchant.
 *
 *  Value: "SHOPIFY_INTEGRATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_AccountCredentials_Purpose_ShopifyIntegration;
/**
 *  The credentials allow Google to manage Shopify orders on behalf of the
 *  merchant (deprecated).
 *
 *  Value: "SHOPIFY_ORDER_MANAGEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_AccountCredentials_Purpose_ShopifyOrderManagement;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_AccountLabel.labelType

/**
 *  Indicates that the label was created automatically by CSS Center.
 *
 *  Value: "AUTOMATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_AccountLabel_LabelType_Automatic;
/**
 *  Unknown label type.
 *
 *  Value: "LABEL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_AccountLabel_LabelType_LabelTypeUnspecified;
/**
 *  Indicates that the label was created manually.
 *
 *  Value: "MANUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_AccountLabel_LabelType_Manual;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_AccountReturnCarrier.carrierCode

/**
 *  Carrier not specified
 *
 *  Value: "CARRIER_CODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_AccountReturnCarrier_CarrierCode_CarrierCodeUnspecified;
/**
 *  FedEx carrier
 *
 *  Value: "FEDEX"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_AccountReturnCarrier_CarrierCode_Fedex;
/**
 *  UPS carrier
 *
 *  Value: "UPS"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_AccountReturnCarrier_CarrierCode_Ups;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_BuyOnGoogleProgramStatus.businessModel

/**
 *  Default value when business model is not set.
 *
 *  Value: "BUSINESS_MODEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_BusinessModel_BusinessModelUnspecified;
/**
 *  Merchant is an importer.
 *
 *  Value: "IMPORTER"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_BusinessModel_Importer;
/**
 *  Merchant is a manufacturer.
 *
 *  Value: "MANUFACTURER"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_BusinessModel_Manufacturer;
/**
 *  Merchant has a different business model.
 *
 *  Value: "OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_BusinessModel_Other;
/**
 *  Merchant is a reseller.
 *
 *  Value: "RESELLER"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_BusinessModel_Reseller;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_BuyOnGoogleProgramStatus.onlineSalesChannel

/**
 *  Merchant is selling on Google and other websites.
 *
 *  Value: "GOOGLE_AND_OTHER_WEBSITES"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_OnlineSalesChannel_GoogleAndOtherWebsites;
/**
 *  Merchant is selling exclusively on Google.
 *
 *  Value: "GOOGLE_EXCLUSIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_OnlineSalesChannel_GoogleExclusive;
/**
 *  Default value when online sales channel is not set.
 *
 *  Value: "ONLINE_SALES_CHANNEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_OnlineSalesChannel_OnlineSalesChannelUnspecified;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_BuyOnGoogleProgramStatus.participationStage

/**
 *  Merchant's program participation is active for a specific region code.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_Active;
/**
 *  Merchant is eligible for onboarding to a given program in a specific region
 *  code.
 *
 *  Value: "ELIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_Eligible;
/**
 *  Merchant fulfilled all the requirements and is ready to request review in a
 *  specific region code.
 *
 *  Value: "ELIGIBLE_FOR_REVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_EligibleForReview;
/**
 *  Merchant is not eligible for onboarding to a given program in a specific
 *  region code.
 *
 *  Value: "NOT_ELIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_NotEligible;
/**
 *  Merchant is onboarding to a given program in a specific region code.
 *
 *  Value: "ONBOARDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_Onboarding;
/**
 *  Participation has been paused.
 *
 *  Value: "PAUSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_Paused;
/**
 *  Merchant is waiting for the review to be completed in a specific region
 *  code.
 *
 *  Value: "PENDING_REVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_PendingReview;
/**
 *  Default value when participation stage is not set.
 *
 *  Value: "PROGRAM_PARTICIPATION_STAGE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_ProgramParticipationStageUnspecified;
/**
 *  The review for a merchant has been rejected in a specific region code.
 *
 *  Value: "REVIEW_DISAPPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_ReviewDisapproved;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_CaptureOrderResponse.executionStatus

/**
 *  The request was not performed because it already executed once successfully.
 *
 *  Value: "DUPLICATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_CaptureOrderResponse_ExecutionStatus_Duplicate;
/**
 *  The request was completed successfully.
 *
 *  Value: "EXECUTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_CaptureOrderResponse_ExecutionStatus_Executed;
/**
 *  Default value. This value is unused.
 *
 *  Value: "EXECUTION_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_CaptureOrderResponse_ExecutionStatus_ExecutionStatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_FreeListingsProgramStatus.globalState

/**
 *  Program is enabled and offers are uploaded for at least one country.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatus_GlobalState_Enabled;
/**
 *  No products have been uploaded for any region. Upload products to Merchant
 *  Center.
 *
 *  Value: "NO_OFFERS_UPLOADED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatus_GlobalState_NoOffersUploaded;
/**
 *  Program is not enabled for any country.
 *
 *  Value: "NOT_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatus_GlobalState_NotEnabled;
/**
 *  State is unknown.
 *
 *  Value: "PROGRAM_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatus_GlobalState_ProgramStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_FreeListingsProgramStatusRegionStatus.eligibilityStatus

/**
 *  If the account has no issues and review is completed successfully.
 *
 *  Value: "APPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_EligibilityStatus_Approved;
/**
 *  There are one or more issues that needs to be resolved for account to be
 *  active for the program. Detailed list of account issues are available in
 *  [accountstatuses](https://developers.google.com/shopping-content/reference/rest/v2.1/accountstatuses)
 *  API.
 *
 *  Value: "DISAPPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_EligibilityStatus_Disapproved;
/**
 *  Program is currently onboarding. Upload valid offers to complete onboarding.
 *
 *  Value: "ONBOARDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_EligibilityStatus_Onboarding;
/**
 *  Account is waiting for review to start.
 *
 *  Value: "PENDING_REVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_EligibilityStatus_PendingReview;
/**
 *  State is not known.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_EligibilityStatus_StateUnspecified;
/**
 *  Account is under review.
 *
 *  Value: "UNDER_REVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_EligibilityStatus_UnderReview;
/**
 *  If account has issues but offers are servable. Some of the issue can make
 *  account DISAPPROVED after a certain deadline.
 *
 *  Value: "WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_EligibilityStatus_Warning;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_FreeListingsProgramStatusRegionStatus.reviewEligibilityStatus

/**
 *  Account is eligible for review for a specified region code.
 *
 *  Value: "ELIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewEligibilityStatus_Eligible;
/**
 *  Account is not eligible for review for a specified region code.
 *
 *  Value: "INELIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewEligibilityStatus_Ineligible;
/**
 *  Review eligibility state is unknown.
 *
 *  Value: "REVIEW_ELIGIBILITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewEligibilityStatus_ReviewEligibilityUnspecified;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_FreeListingsProgramStatusRegionStatus.reviewIneligibilityReason

/**
 *  Account was already reviewd.
 *
 *  Value: "ALREADY_REVIEWED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_AlreadyReviewed;
/**
 *  Account is already under review.
 *
 *  Value: "ALREADY_UNDER_REVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_AlreadyUnderReview;
/**
 *  Cooldown period applies. Wait until cooldown period ends.
 *
 *  Value: "IN_COOLDOWN_PERIOD"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_InCooldownPeriod;
/**
 *  Account is retired. Should not appear in MC.
 *
 *  Value: "IS_RETIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_IsRetired;
/**
 *  No issues available to review.
 *
 *  Value: "NO_REVIEW_REQUIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_NoReviewRequired;
/**
 *  Not enough offers uploaded for this country.
 *
 *  Value: "NOT_ENOUGH_OFFERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_NotEnoughOffers;
/**
 *  All onboarding issues needs to be fixed.
 *
 *  Value: "ONBOARDING_ISSUES"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_OnboardingIssues;
/**
 *  Requesting a review from Google is not possible.
 *
 *  Value: "REVIEW_INELIGIBILITY_REASON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_ReviewIneligibilityReasonUnspecified;
/**
 *  Account will be automatically reviewed at the end of the grace period.
 *
 *  Value: "WILL_BE_REVIEWED_AUTOMATICALLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_WillBeReviewedAutomatically;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_InapplicabilityDetails.inapplicableReason

/**
 *  This product can already win the buybox without rule.
 *
 *  Value: "ALREADY_WINNING_BUYBOX"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_AlreadyWinningBuybox;
/**
 *  The rule set for this product cannot beat the buybox winner.
 *
 *  Value: "CANNOT_BEAT_BUYBOX_WINNER"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_CannotBeatBuyboxWinner;
/**
 *  Default value. Should not be used.
 *
 *  Value: "INAPPLICABLE_REASON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_InapplicableReasonUnspecified;
/**
 *  The auto_pricing_min_price is invalid. For example, it is missing or < 0.
 *
 *  Value: "INVALID_AUTO_PRICE_MIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_InvalidAutoPriceMin;
/**
 *  The floor defined in the rule is invalid. For example, it has the wrong sign
 *  which results in a floor < 0.
 *
 *  Value: "INVALID_FLOOR_CONFIG"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_InvalidFloorConfig;
/**
 *  The rule restrictions are not met. For example, this may be the case if the
 *  calculated rule price is lower than floor price in the restriction.
 *
 *  Value: "RESTRICTIONS_NOT_MET"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_RestrictionsNotMet;
/**
 *  Another rule of a different type takes precedence over this one.
 *
 *  Value: "TRIUMPHED_OVER_BY_OTHER_RULE_ON_OFFER"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_TriumphedOverByOtherRuleOnOffer;
/**
 *  Another rule of the same type takes precedence over this one.
 *
 *  Value: "TRIUMPHED_OVER_BY_SAME_TYPE_RULE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_TriumphedOverBySameTypeRule;
/**
 *  The reason is not categorized to any known reason.
 *
 *  Value: "UNCATEGORIZED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_Uncategorized;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_OrderTrackingSignalShippingInfo.shippingStatus

/**
 *  The shipment is already delivered.
 *
 *  Value: "DELIVERED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_OrderTrackingSignalShippingInfo_ShippingStatus_Delivered;
/**
 *  All items are shipped.
 *
 *  Value: "SHIPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_OrderTrackingSignalShippingInfo_ShippingStatus_Shipped;
/**
 *  The shipping status is not known to merchant.
 *
 *  Value: "SHIPPING_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_OrderTrackingSignalShippingInfo_ShippingStatus_ShippingStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_ProductView.aggregatedDestinationStatus

/**
 *  Undefined aggregated status.
 *
 *  Value: "AGGREGATED_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ProductView_AggregatedDestinationStatus_AggregatedStatusUnspecified;
/**
 *  Offer is eligible for all destinations.
 *
 *  Value: "ELIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ProductView_AggregatedDestinationStatus_Eligible;
/**
 *  Offer is eligible for some (but not all) destinations.
 *
 *  Value: "ELIGIBLE_LIMITED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ProductView_AggregatedDestinationStatus_EligibleLimited;
/**
 *  Offer isn't eligible, or is disapproved for all destinations.
 *
 *  Value: "NOT_ELIGIBLE_OR_DISAPPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ProductView_AggregatedDestinationStatus_NotEligibleOrDisapproved;
/**
 *  Offer's status is pending in all destinations.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ProductView_AggregatedDestinationStatus_Pending;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_ProductView.channel

/**
 *  Indicates that the channel is unspecified.
 *
 *  Value: "CHANNEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ProductView_Channel_ChannelUnspecified;
/**
 *  Indicates that the channel is local.
 *
 *  Value: "LOCAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ProductView_Channel_Local;
/**
 *  Indicates that the channel is online.
 *
 *  Value: "ONLINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ProductView_Channel_Online;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_ProductViewItemIssue.resolution

/**
 *  The merchant has to fix the issue.
 *
 *  Value: "MERCHANT_ACTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ProductViewItemIssue_Resolution_MerchantAction;
/**
 *  The issue will be resolved automatically (for example, image crawl), or
 *  Google review. No merchant action is required now. Resolution might lead to
 *  another issue (for example, if crawl fails).
 *
 *  Value: "PENDING_PROCESSING"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ProductViewItemIssue_Resolution_PendingProcessing;
/**
 *  Unknown resolution type.
 *
 *  Value: "UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ProductViewItemIssue_Resolution_Unknown;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_ProductViewItemIssueItemIssueSeverity.aggregatedSeverity

/**
 *  Undefined Issue severity.
 *
 *  Value: "AGGREGATED_ISSUE_SEVERITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ProductViewItemIssueItemIssueSeverity_AggregatedSeverity_AggregatedIssueSeverityUnspecified;
/**
 *  Issue demotes the product in all selected destinations it affects.
 *
 *  Value: "DEMOTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ProductViewItemIssueItemIssueSeverity_AggregatedSeverity_Demoted;
/**
 *  Issue disapproves the product in at least one of the selected destinations.
 *
 *  Value: "DISAPPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ProductViewItemIssueItemIssueSeverity_AggregatedSeverity_Disapproved;
/**
 *  Issue resolution is `PENDING_PROCESSING`.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ProductViewItemIssueItemIssueSeverity_AggregatedSeverity_Pending;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_Promotion.couponValueType

/**
 *  Buy M quantity, get money off. `buy_this_quantity` and `money_off_amount`
 *  must be present.
 *
 *  Value: "BUY_M_GET_MONEY_OFF"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_CouponValueType_BuyMGetMoneyOff;
/**
 *  Buy M quantity, get N money off coupon value type. `buy_this_quantity` and
 *  `get_this_quantity` must be present. `money_off_amount` must also be
 *  present.
 *
 *  Value: "BUY_M_GET_N_MONEY_OFF"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_CouponValueType_BuyMGetNMoneyOff;
/**
 *  Buy M quantity, get N percent off coupon value type. `buy_this_quantity` and
 *  `get_this_quantity` must be present. `percent_off_percentage` must also be
 *  present.
 *
 *  Value: "BUY_M_GET_N_PERCENT_OFF"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_CouponValueType_BuyMGetNPercentOff;
/**
 *  Buy M quantity, get money off. `buy_this_quantity` and
 *  `percent_off_percentage` must be present.
 *
 *  Value: "BUY_M_GET_PERCENT_OFF"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_CouponValueType_BuyMGetPercentOff;
/**
 *  Indicates that the coupon value type is unspecified.
 *
 *  Value: "COUPON_VALUE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_CouponValueType_CouponValueTypeUnspecified;
/**
 *  Free gift with description only.
 *
 *  Value: "FREE_GIFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_CouponValueType_FreeGift;
/**
 *  Free gift with item ID (description is optional).
 *
 *  Value: "FREE_GIFT_WITH_ITEM_ID"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_CouponValueType_FreeGiftWithItemId;
/**
 *  Free gift with value (description is optional).
 *
 *  Value: "FREE_GIFT_WITH_VALUE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_CouponValueType_FreeGiftWithValue;
/**
 *  Overnight free shipping coupon value type.
 *
 *  Value: "FREE_SHIPPING_OVERNIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_CouponValueType_FreeShippingOvernight;
/**
 *  Standard free shipping coupon value type.
 *
 *  Value: "FREE_SHIPPING_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_CouponValueType_FreeShippingStandard;
/**
 *  Two day free shipping coupon value type.
 *
 *  Value: "FREE_SHIPPING_TWO_DAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_CouponValueType_FreeShippingTwoDay;
/**
 *  Money off coupon value type.
 *
 *  Value: "MONEY_OFF"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_CouponValueType_MoneyOff;
/**
 *  Percent off coupon value type.
 *
 *  Value: "PERCENT_OFF"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_CouponValueType_PercentOff;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_Promotion.offerType

/**
 *  Offer type with a code.
 *
 *  Value: "GENERIC_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_OfferType_GenericCode;
/**
 *  Offer type without a code.
 *
 *  Value: "NO_CODE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_OfferType_NoCode;
/**
 *  Unknown offer type.
 *
 *  Value: "OFFER_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_OfferType_OfferTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_Promotion.productApplicability

/**
 *  Applicable to all products.
 *
 *  Value: "ALL_PRODUCTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_ProductApplicability_AllProducts;
/**
 *  Which products the promotion applies to is unknown.
 *
 *  Value: "PRODUCT_APPLICABILITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_ProductApplicability_ProductApplicabilityUnspecified;
/**
 *  Applicable to only a single product or list of products.
 *
 *  Value: "SPECIFIC_PRODUCTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_ProductApplicability_SpecificProducts;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_Promotion.redemptionChannel

/**
 *  Indicates that the channel is in store.
 *
 *  Value: "IN_STORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_RedemptionChannel_InStore;
/**
 *  Indicates that the channel is online.
 *
 *  Value: "ONLINE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_RedemptionChannel_Online;
/**
 *  Indicates that the channel is unspecified.
 *
 *  Value: "REDEMPTION_CHANNEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_RedemptionChannel_RedemptionChannelUnspecified;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_Promotion.storeApplicability

/**
 *  Promotion applies to all stores.
 *
 *  Value: "ALL_STORES"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_StoreApplicability_AllStores;
/**
 *  Promotion applies to only the specified stores.
 *
 *  Value: "SPECIFIC_STORES"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_StoreApplicability_SpecificStores;
/**
 *  Which store codes the promotion applies to is unknown.
 *
 *  Value: "STORE_APPLICABILITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Promotion_StoreApplicability_StoreApplicabilityUnspecified;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_RepricingProductReport.type

/**
 *  Unused.
 *
 *  Value: "REPRICING_RULE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingProductReport_Type_RepricingRuleTypeUnspecified;
/**
 *  Cost of goods sale based rule. Repricer will adjust the offer price based on
 *  the offer's sale cost which is provided by the merchant.
 *
 *  Value: "TYPE_COGS_BASED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingProductReport_Type_TypeCogsBased;
/**
 *  Competitive price rule. Repricer will adjust the offer price based on the
 *  min price from a list of unnamed big competitors.
 *
 *  Value: "TYPE_COMPETITIVE_PRICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingProductReport_Type_TypeCompetitivePrice;
/**
 *  Sales volume based rule. Repricer will adjust the offer price based on the
 *  offer's sales volume in the past period of time defined within the rule.
 *
 *  Value: "TYPE_SALES_VOLUME_BASED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingProductReport_Type_TypeSalesVolumeBased;
/**
 *  Statistical measurement based rules among Google SA merchants. If this rule
 *  is chosen, repricer will adjust the offer price based on statistical metrics
 *  (currently only min is available) among other merchants who sell the same
 *  product. Details need to be provdided in the RuleDefinition.
 *
 *  Value: "TYPE_STATS_BASED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingProductReport_Type_TypeStatsBased;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_RepricingRule.type

/**
 *  Unused.
 *
 *  Value: "REPRICING_RULE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingRule_Type_RepricingRuleTypeUnspecified;
/**
 *  Cost of goods sale based rule. Repricer will adjust the offer price based on
 *  the offer's sale cost which is provided by the merchant.
 *
 *  Value: "TYPE_COGS_BASED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingRule_Type_TypeCogsBased;
/**
 *  Competitive price rule. Repricer will adjust the offer price based on the
 *  min price from a list of unnamed big competitors.
 *
 *  Value: "TYPE_COMPETITIVE_PRICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingRule_Type_TypeCompetitivePrice;
/**
 *  Sales volume based rule. Repricer will adjust the offer price based on the
 *  offer's sales volume in the past period of time defined within the rule.
 *
 *  Value: "TYPE_SALES_VOLUME_BASED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingRule_Type_TypeSalesVolumeBased;
/**
 *  Statistical measurement based rules among Google SA merchants. If this rule
 *  is chosen, repricer will adjust the offer price based on statistical metrics
 *  (currently only min is available) among other merchants who sell the same
 *  product. Details need to be provdided in the RuleDefinition.
 *
 *  Value: "TYPE_STATS_BASED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingRule_Type_TypeStatsBased;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_RepricingRuleEligibleOfferMatcher.matcherOption

/**
 *  Matching all products.
 *
 *  Value: "MATCHER_OPTION_ALL_PRODUCTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingRuleEligibleOfferMatcher_MatcherOption_MatcherOptionAllProducts;
/**
 *  Use custom filters.
 *
 *  Value: "MATCHER_OPTION_CUSTOM_FILTER"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingRuleEligibleOfferMatcher_MatcherOption_MatcherOptionCustomFilter;
/**
 *  Unused.
 *
 *  Value: "MATCHER_OPTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingRuleEligibleOfferMatcher_MatcherOption_MatcherOptionUnspecified;
/**
 *  Use repricing_rule_id feed attribute on the product resource to specify
 *  offer-rule mapping.
 *
 *  Value: "MATCHER_OPTION_USE_FEED_ATTRIBUTE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingRuleEligibleOfferMatcher_MatcherOption_MatcherOptionUseFeedAttribute;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_RepricingRuleReport.type

/**
 *  Unused.
 *
 *  Value: "REPRICING_RULE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingRuleReport_Type_RepricingRuleTypeUnspecified;
/**
 *  Cost of goods sale based rule. Repricer will adjust the offer price based on
 *  the offer's sale cost which is provided by the merchant.
 *
 *  Value: "TYPE_COGS_BASED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingRuleReport_Type_TypeCogsBased;
/**
 *  Competitive price rule. Repricer will adjust the offer price based on the
 *  min price from a list of unnamed big competitors.
 *
 *  Value: "TYPE_COMPETITIVE_PRICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingRuleReport_Type_TypeCompetitivePrice;
/**
 *  Sales volume based rule. Repricer will adjust the offer price based on the
 *  offer's sales volume in the past period of time defined within the rule.
 *
 *  Value: "TYPE_SALES_VOLUME_BASED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingRuleReport_Type_TypeSalesVolumeBased;
/**
 *  Statistical measurement based rules among Google SA merchants. If this rule
 *  is chosen, repricer will adjust the offer price based on statistical metrics
 *  (currently only min is available) among other merchants who sell the same
 *  product. Details need to be provdided in the RuleDefinition.
 *
 *  Value: "TYPE_STATS_BASED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RepricingRuleReport_Type_TypeStatsBased;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_RequestPhoneVerificationRequest.phoneVerificationMethod

/**
 *  Receive verification code by phone call.
 *
 *  Value: "PHONE_CALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RequestPhoneVerificationRequest_PhoneVerificationMethod_PhoneCall;
/**
 *  Unknown method.
 *
 *  Value: "PHONE_VERIFICATION_METHOD_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RequestPhoneVerificationRequest_PhoneVerificationMethod_PhoneVerificationMethodUnspecified;
/**
 *  Receive verification code by SMS.
 *
 *  Value: "SMS"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_RequestPhoneVerificationRequest_PhoneVerificationMethod_Sms;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_ReturnPolicyOnline.itemConditions

/**
 *  Default value. This value is unused.
 *
 *  Value: "ITEM_CONDITION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnline_ItemConditions_ItemConditionUnspecified;
/**
 *  New.
 *
 *  Value: "NEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnline_ItemConditions_New;
/**
 *  Used.
 *
 *  Value: "USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnline_ItemConditions_Used;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_ReturnPolicyOnline.returnMethods

/**
 *  At a kiosk.
 *
 *  Value: "AT_A_KIOSK"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnline_ReturnMethods_AtAKiosk;
/**
 *  By mail.
 *
 *  Value: "BY_MAIL"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnline_ReturnMethods_ByMail;
/**
 *  In store.
 *
 *  Value: "IN_STORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnline_ReturnMethods_InStore;
/**
 *  Default value. This value is unused.
 *
 *  Value: "RETURN_METHOD_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnline_ReturnMethods_ReturnMethodUnspecified;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_ReturnPolicyOnlinePolicy.type

/**
 *  Life time returns.
 *
 *  Value: "LIFETIME_RETURNS"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnlinePolicy_Type_LifetimeReturns;
/**
 *  No returns.
 *
 *  Value: "NO_RETURNS"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnlinePolicy_Type_NoReturns;
/**
 *  Number of days after a return is delivered.
 *
 *  Value: "NUMBER_OF_DAYS_AFTER_DELIVERY"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnlinePolicy_Type_NumberOfDaysAfterDelivery;
/**
 *  Default value. This value is unused.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnlinePolicy_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo.returnLabelSource

/**
 *  Customers' responsibility to get the label.
 *
 *  Value: "CUSTOMER_RESPONSIBILITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo_ReturnLabelSource_CustomerResponsibility;
/**
 *  Download and print the label.
 *
 *  Value: "DOWNLOAD_AND_PRINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo_ReturnLabelSource_DownloadAndPrint;
/**
 *  Label in the box.
 *
 *  Value: "IN_THE_BOX"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo_ReturnLabelSource_InTheBox;
/**
 *  Default value. This value is unused.
 *
 *  Value: "RETURN_LABEL_SOURCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo_ReturnLabelSource_ReturnLabelSourceUnspecified;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo.returnReasonCategory

/**
 *  Buyer remorse.
 *
 *  Value: "BUYER_REMORSE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo_ReturnReasonCategory_BuyerRemorse;
/**
 *  Item defect.
 *
 *  Value: "ITEM_DEFECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo_ReturnReasonCategory_ItemDefect;
/**
 *  Default value. This value is unused.
 *
 *  Value: "RETURN_REASON_CATEGORY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo_ReturnReasonCategory_ReturnReasonCategoryUnspecified;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_ReturnPolicyOnlineReturnShippingFee.type

/**
 *  Customer will pay the actual return shipping fee.
 *
 *  Value: "CUSTOMER_PAYING_ACTUAL_FEE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnlineReturnShippingFee_Type_CustomerPayingActualFee;
/**
 *  The return shipping fee is a fixed value.
 *
 *  Value: "FIXED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnlineReturnShippingFee_Type_Fixed;
/**
 *  Default value. This value is unused.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ReturnPolicyOnlineReturnShippingFee_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_Segments.program

/**
 *  Buy on Google Listing.
 *
 *  Value: "BUY_ON_GOOGLE_LISTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Segments_Program_BuyOnGoogleListing;
/**
 *  Free Local Product Listing.
 *
 *  Value: "FREE_LOCAL_PRODUCT_LISTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Segments_Program_FreeLocalProductListing;
/**
 *  Free Product Listing.
 *
 *  Value: "FREE_PRODUCT_LISTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Segments_Program_FreeProductListing;
/**
 *  Not specified.
 *
 *  Value: "PROGRAM_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Segments_Program_ProgramUnspecified;
/**
 *  Shopping Ads.
 *
 *  Value: "SHOPPING_ADS"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_Segments_Program_ShoppingAds;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_ShoppingAdsProgramStatus.globalState

/**
 *  Program is enabled and offers are uploaded for at least one country.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatus_GlobalState_Enabled;
/**
 *  No products have been uploaded for any region. Upload products to Merchant
 *  Center.
 *
 *  Value: "NO_OFFERS_UPLOADED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatus_GlobalState_NoOffersUploaded;
/**
 *  Program is not enabled for any country.
 *
 *  Value: "NOT_ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatus_GlobalState_NotEnabled;
/**
 *  State is unknown.
 *
 *  Value: "PROGRAM_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatus_GlobalState_ProgramStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus.eligibilityStatus

/**
 *  If the account has no issues and review is completed successfully.
 *
 *  Value: "APPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_EligibilityStatus_Approved;
/**
 *  There are one or more issues that needs to be resolved for account to be
 *  active for the program. Detailed list of account issues are available in
 *  [accountstatuses](https://developers.google.com/shopping-content/reference/rest/v2.1/accountstatuses)
 *  API.
 *
 *  Value: "DISAPPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_EligibilityStatus_Disapproved;
/**
 *  Program is currently onboarding. Upload valid offers to complete onboarding.
 *
 *  Value: "ONBOARDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_EligibilityStatus_Onboarding;
/**
 *  Account is waiting for review to start.
 *
 *  Value: "PENDING_REVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_EligibilityStatus_PendingReview;
/**
 *  State is not known.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_EligibilityStatus_StateUnspecified;
/**
 *  Account is under review.
 *
 *  Value: "UNDER_REVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_EligibilityStatus_UnderReview;
/**
 *  If account has issues but offers are servable. Some of the issue can make
 *  account DISAPPROVED after a certain deadline.
 *
 *  Value: "WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_EligibilityStatus_Warning;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus.reviewEligibilityStatus

/**
 *  Account is eligible for review for a specified region code.
 *
 *  Value: "ELIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewEligibilityStatus_Eligible;
/**
 *  Account is not eligible for review for a specified region code.
 *
 *  Value: "INELIGIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewEligibilityStatus_Ineligible;
/**
 *  Review eligibility state is unknown.
 *
 *  Value: "REVIEW_ELIGIBILITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewEligibilityStatus_ReviewEligibilityUnspecified;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus.reviewIneligibilityReason

/**
 *  Account was already reviewd.
 *
 *  Value: "ALREADY_REVIEWED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_AlreadyReviewed;
/**
 *  Account is already under review.
 *
 *  Value: "ALREADY_UNDER_REVIEW"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_AlreadyUnderReview;
/**
 *  Cooldown period applies. Wait until cooldown period ends.
 *
 *  Value: "IN_COOLDOWN_PERIOD"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_InCooldownPeriod;
/**
 *  Account is retired. Should not appear in MC.
 *
 *  Value: "IS_RETIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_IsRetired;
/**
 *  No issues available to review.
 *
 *  Value: "NO_REVIEW_REQUIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_NoReviewRequired;
/**
 *  Not enough offers uploaded for this country.
 *
 *  Value: "NOT_ENOUGH_OFFERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_NotEnoughOffers;
/**
 *  All onboarding issues needs to be fixed.
 *
 *  Value: "ONBOARDING_ISSUES"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_OnboardingIssues;
/**
 *  Requesting a review from Google is not possible.
 *
 *  Value: "REVIEW_INELIGIBILITY_REASON_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_ReviewIneligibilityReasonUnspecified;
/**
 *  Account will be automatically reviewed at the end of the grace period.
 *
 *  Value: "WILL_BE_REVIEWED_AUTOMATICALLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_WillBeReviewedAutomatically;

// ----------------------------------------------------------------------------
// GTLRShoppingContent_VerifyPhoneNumberRequest.phoneVerificationMethod

/**
 *  Receive verification code by phone call.
 *
 *  Value: "PHONE_CALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_VerifyPhoneNumberRequest_PhoneVerificationMethod_PhoneCall;
/**
 *  Unknown method.
 *
 *  Value: "PHONE_VERIFICATION_METHOD_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_VerifyPhoneNumberRequest_PhoneVerificationMethod_PhoneVerificationMethodUnspecified;
/**
 *  Receive verification code by SMS.
 *
 *  Value: "SMS"
 */
FOUNDATION_EXTERN NSString * const kGTLRShoppingContent_VerifyPhoneNumberRequest_PhoneVerificationMethod_Sms;

/**
 *  Account data. After the creation of a new account it may take a few minutes
 *  before it's fully operational. The methods delete, insert, and update
 *  require the admin role.
 */
@interface GTLRShoppingContent_Account : GTLRObject

/**
 *  Output only. How the account is managed. Acceptable values are: - "`manual`"
 *  - "`automatic`"
 */
@property(nonatomic, copy, nullable) NSString *accountManagement;

/**
 *  Linked Ads accounts that are active or pending approval. To create a new
 *  link request, add a new link with status `active` to the list. It will
 *  remain in a `pending` state until approved or rejected either in the Ads
 *  interface or through the AdWords API. To delete an active link, or to cancel
 *  a link request, remove it from the list.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountAdsLink *> *adsLinks;

/**
 *  Indicates whether the merchant sells adult content.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adultContent;

/**
 *  The automatic improvements of the account can be used to automatically
 *  update items, improve images and shipping. Each section inside
 *  AutomaticImprovements is updated separately.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_AccountAutomaticImprovements *automaticImprovements;

/**
 *  Automatically created label IDs that are assigned to the account by CSS
 *  Center.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *automaticLabelIds;

/** The business information of the account. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_AccountBusinessInformation *businessInformation;

/**
 *  ID of CSS the account belongs to.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cssId;

/**
 *  The Business Profile which is linked or in the process of being linked with
 *  the Merchant Center account.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_AccountGoogleMyBusinessLink *googleMyBusinessLink;

/**
 *  Required. 64-bit Merchant Center account ID.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#account`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Manually created label IDs that are assigned to the account by CSS.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *labelIds;

/** Required. Display name for the account. */
@property(nonatomic, copy, nullable) NSString *name;

/** Client-specific, locally-unique, internal ID for the child account. */
@property(nonatomic, copy, nullable) NSString *sellerId;

/**
 *  Users with access to the account. Every account (except for subaccounts)
 *  must have at least one admin user.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountUser *> *users;

/** The merchant's website. */
@property(nonatomic, copy, nullable) NSString *websiteUrl;

/**
 *  Linked YouTube channels that are active or pending approval. To create a new
 *  link request, add a new link with status `active` to the list. It will
 *  remain in a `pending` state until approved or rejected in the YT Creator
 *  Studio interface. To delete an active link, or to cancel a link request,
 *  remove it from the list.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountYouTubeChannelLink *> *youtubeChannelLinks;

@end


/**
 *  GTLRShoppingContent_AccountAddress
 */
@interface GTLRShoppingContent_AccountAddress : GTLRObject

/**
 *  CLDR country code (for example, "US"). All MCA sub-accounts inherit the
 *  country of their parent MCA by default, however the country can be updated
 *  for individual sub-accounts.
 */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  City, town or commune. May also include dependent localities or
 *  sublocalities (for example, neighborhoods or suburbs).
 */
@property(nonatomic, copy, nullable) NSString *locality;

/** Postal code or ZIP (for example, "94043"). */
@property(nonatomic, copy, nullable) NSString *postalCode;

/**
 *  Top-level administrative subdivision of the country. For example, a state
 *  like California ("CA") or a province like Quebec ("QC").
 */
@property(nonatomic, copy, nullable) NSString *region;

/** Street-level part of the address. Use `\\n` to add a second line. */
@property(nonatomic, copy, nullable) NSString *streetAddress;

@end


/**
 *  GTLRShoppingContent_AccountAdsLink
 */
@interface GTLRShoppingContent_AccountAdsLink : GTLRObject

/**
 *  Customer ID of the Ads account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adsId;

/**
 *  Status of the link between this Merchant Center account and the Ads account.
 *  Upon retrieval, it represents the actual status of the link and can be
 *  either `active` if it was approved in Google Ads or `pending` if it's
 *  pending approval. Upon insertion, it represents the *intended* status of the
 *  link. Re-uploading a link with status `active` when it's still pending or
 *  with status `pending` when it's already active will have no effect: the
 *  status will remain unchanged. Re-uploading a link with deprecated status
 *  `inactive` is equivalent to not submitting the link at all and will delete
 *  the link if it was active or cancel the link request if it was pending.
 *  Acceptable values are: - "`active`" - "`pending`"
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  The automatic improvements of the account can be used to automatically
 *  update items, improve images and shipping.
 */
@interface GTLRShoppingContent_AccountAutomaticImprovements : GTLRObject

/**
 *  This improvement will attempt to automatically correct submitted images if
 *  they don't meet the [image
 *  requirements](https://support.google.com/merchants/answer/6324350), for
 *  example, removing overlays. If successful, the image will be replaced and
 *  approved. This improvement is only applied to images of disapproved offers.
 *  For more information see: [Automatic image
 *  improvements](https://support.google.com/merchants/answer/9242973) This
 *  field is only updated (cleared) if provided.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_AccountImageImprovements *imageImprovements;

/**
 *  Turning on [item
 *  updates](https://support.google.com/merchants/answer/3246284) allows Google
 *  to automatically update items for you. When item updates are on, Google uses
 *  the structured data markup on the website and advanced data extractors to
 *  update the price and availability of the items. When the item updates are
 *  off, items with mismatched data aren't shown. This field is only updated
 *  (cleared) if provided.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_AccountItemUpdates *itemUpdates;

/**
 *  Not available for MCAs
 *  [accounts](https://support.google.com/merchants/answer/188487). By turning
 *  on [automatic shipping
 *  improvements](https://support.google.com/merchants/answer/10027038), you are
 *  allowing Google to improve the accuracy of your delivery times shown to
 *  shoppers using Google. More accurate delivery times, especially when faster,
 *  typically lead to better conversion rates. Google will improve your
 *  estimated delivery times based on various factors: - Delivery address of an
 *  order - Current handling time and shipping time settings - Estimated
 *  weekdays or business days - Parcel tracking data This field is only updated
 *  (cleared) if provided.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_AccountShippingImprovements *shippingImprovements;

@end


/**
 *  GTLRShoppingContent_AccountBusinessInformation
 */
@interface GTLRShoppingContent_AccountBusinessInformation : GTLRObject

/** The address of the business. Use `\\n` to add a second address line. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_AccountAddress *address;

/** The customer service information of the business. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_AccountCustomerService *customerService;

/**
 *  The 10-digit [Korean business registration
 *  number](https://support.google.com/merchants/answer/9037766) separated with
 *  dashes in the format: XXX-XX-XXXXX. This field will only be updated if
 *  explicitly set.
 */
@property(nonatomic, copy, nullable) NSString *koreanBusinessRegistrationNumber;

/**
 *  The phone number of the business. This can only be updated if a verified
 *  phone number is not already set. To replace a verified phone number use the
 *  `Accounts.requestphoneverification` and `Accounts.verifyphonenumber`.
 */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

/**
 *  Verification status of the phone number of the business. This status is read
 *  only and can be updated only by successful phone verification. Acceptable
 *  values are: - "`verified`" - "`unverified`"
 */
@property(nonatomic, copy, nullable) NSString *phoneVerificationStatus;

@end


/**
 *  Credentials allowing Google to call a partner's API on behalf of a merchant.
 */
@interface GTLRShoppingContent_AccountCredentials : GTLRObject

/** An OAuth access token. */
@property(nonatomic, copy, nullable) NSString *accessToken;

/**
 *  The amount of time, in seconds, after which the access token is no longer
 *  valid.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *expiresIn;

/**
 *  Indicates to Google how Google should use these OAuth tokens.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_AccountCredentials_Purpose_AccountCredentialsPurposeUnspecified
 *        Unknown purpose. (Value: "ACCOUNT_CREDENTIALS_PURPOSE_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_AccountCredentials_Purpose_ShopifyIntegration
 *        The credentials allow Google to manage Shopify integration on behalf
 *        of the merchant. (Value: "SHOPIFY_INTEGRATION")
 *    @arg @c kGTLRShoppingContent_AccountCredentials_Purpose_ShopifyOrderManagement
 *        The credentials allow Google to manage Shopify orders on behalf of the
 *        merchant (deprecated). (Value: "SHOPIFY_ORDER_MANAGEMENT")
 */
@property(nonatomic, copy, nullable) NSString *purpose;

@end


/**
 *  GTLRShoppingContent_AccountCustomerService
 */
@interface GTLRShoppingContent_AccountCustomerService : GTLRObject

/** Customer service email. */
@property(nonatomic, copy, nullable) NSString *email;

/** Customer service phone number. */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

/** Customer service URL. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  GTLRShoppingContent_AccountGoogleMyBusinessLink
 */
@interface GTLRShoppingContent_AccountGoogleMyBusinessLink : GTLRObject

/**
 *  The ID of the Business Profile. If this is provided, then `gmbEmail` is
 *  ignored. The value of this field should match the `accountId` used by the
 *  Business Profile API.
 */
@property(nonatomic, copy, nullable) NSString *gmbAccountId;

/**
 *  The Business Profile email address of a specific account within a Business
 *  Profile. A sample account within a Business Profile could be a business
 *  account with set of locations, managed under the Business Profile.
 */
@property(nonatomic, copy, nullable) NSString *gmbEmail;

/**
 *  Status of the link between this Merchant Center account and the Business
 *  Profile. Acceptable values are: - "`active`" - "`pending`"
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  GTLRShoppingContent_AccountIdentifier
 */
@interface GTLRShoppingContent_AccountIdentifier : GTLRObject

/**
 *  The aggregator ID, set for aggregators and subaccounts (in that case, it
 *  represents the aggregator of the subaccount).
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *aggregatorId;

/**
 *  The merchant account ID, set for individual accounts and subaccounts.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

@end


/**
 *  This improvement will attempt to automatically correct submitted images if
 *  they don't meet the [image
 *  requirements](https://support.google.com/merchants/answer/6324350), for
 *  example, removing overlays. If successful, the image will be replaced and
 *  approved. This improvement is only applied to images of disapproved offers.
 *  For more information see: [Automatic image
 *  improvements](https://support.google.com/merchants/answer/9242973)
 */
@interface GTLRShoppingContent_AccountImageImprovements : GTLRObject

/**
 *  Determines how the images should be automatically updated. If this field is
 *  not present, then the settings will be deleted. If there are no settings for
 *  subaccount, they are inherited from aggregator.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_AccountImageImprovementsSettings *accountImageImprovementsSettings;

/**
 *  Output only. The effective value of allow_automatic_image_improvements. If
 *  account_image_improvements_settings is present, then this value is the same.
 *  Otherwise, it represents the inherited value of the parent account.
 *  Read-only.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *effectiveAllowAutomaticImageImprovements;

@end


/**
 *  Settings for the Automatic Image Improvements.
 */
@interface GTLRShoppingContent_AccountImageImprovementsSettings : GTLRObject

/**
 *  Enables automatic image improvements.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowAutomaticImageImprovements;

@end


/**
 *  Turning on [item
 *  updates](https://support.google.com/merchants/answer/3246284) allows Google
 *  to automatically update items for you. When item updates are on, Google uses
 *  the structured data markup on the website and advanced data extractors to
 *  update the price and availability of the items. When the item updates are
 *  off, items with mismatched data aren't shown.
 */
@interface GTLRShoppingContent_AccountItemUpdates : GTLRObject

/**
 *  Determines which attributes of the items should be automatically updated. If
 *  this field is not present, then the settings will be deleted. If there are
 *  no settings for subaccount, they are inherited from aggregator.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_AccountItemUpdatesSettings *accountItemUpdatesSettings;

/**
 *  Output only. The effective value of allow_availability_updates. If
 *  account_item_updates_settings is present, then this value is the same.
 *  Otherwise, it represents the inherited value of the parent account.
 *  Read-only.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *effectiveAllowAvailabilityUpdates;

/**
 *  Output only. The effective value of allow_condition_updates. If
 *  account_item_updates_settings is present, then this value is the same.
 *  Otherwise, it represents the inherited value of the parent account.
 *  Read-only.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *effectiveAllowConditionUpdates;

/**
 *  Output only. The effective value of allow_price_updates. If
 *  account_item_updates_settings is present, then this value is the same.
 *  Otherwise, it represents the inherited value of the parent account.
 *  Read-only.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *effectiveAllowPriceUpdates;

/**
 *  Output only. The effective value of allow_strict_availability_updates. If
 *  account_item_updates_settings is present, then this value is the same.
 *  Otherwise, it represents the inherited value of the parent account.
 *  Read-only.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *effectiveAllowStrictAvailabilityUpdates;

@end


/**
 *  Settings for the Automatic Item Updates.
 */
@interface GTLRShoppingContent_AccountItemUpdatesSettings : GTLRObject

/**
 *  If availability updates are enabled, any previous availability values get
 *  overwritten if Google finds an out-of-stock annotation on the offer's page.
 *  If additionally `allow_availability_updates` field is set to true, values
 *  get overwritten if Google finds an in-stock annotation on the offer’s page.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowAvailabilityUpdates;

/**
 *  If condition updates are enabled, Google always updates item condition with
 *  the condition detected from the details of your product.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowConditionUpdates;

/**
 *  If price updates are enabled, Google always updates the active price with
 *  the crawled information.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowPriceUpdates;

/**
 *  If allow_availability_updates is enabled, items are automatically updated in
 *  all your Shopping target countries. By default, availability updates will
 *  only be applied to items that are 'out of stock' on your website but 'in
 *  stock' on Shopping. Set this to true to also update items that are 'in
 *  stock' on your website, but 'out of stock' on Google Shopping. In order for
 *  this field to have an effect, you must also allow availability updates.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowStrictAvailabilityUpdates;

@end


/**
 *  Label assigned by CSS domain or CSS group to one of its sub-accounts.
 */
@interface GTLRShoppingContent_AccountLabel : GTLRObject

/**
 *  Immutable. The ID of account this label belongs to.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *accountId;

/**
 *  The description of this label.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Output only. The ID of the label.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *labelId;

/**
 *  Output only. The type of this label.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_AccountLabel_LabelType_Automatic Indicates
 *        that the label was created automatically by CSS Center. (Value:
 *        "AUTOMATIC")
 *    @arg @c kGTLRShoppingContent_AccountLabel_LabelType_LabelTypeUnspecified
 *        Unknown label type. (Value: "LABEL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_AccountLabel_LabelType_Manual Indicates that
 *        the label was created manually. (Value: "MANUAL")
 */
@property(nonatomic, copy, nullable) NSString *labelType;

/** The display name of this label. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  The return carrier information. This service is designed for merchants
 *  enrolled in the Buy on Google program.
 */
@interface GTLRShoppingContent_AccountReturnCarrier : GTLRObject

/**
 *  Output only. Immutable. The Google-provided unique carrier ID, used to
 *  update the resource.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *carrierAccountId;

/** Name of the carrier account. */
@property(nonatomic, copy, nullable) NSString *carrierAccountName;

/** Number of the carrier account. */
@property(nonatomic, copy, nullable) NSString *carrierAccountNumber;

/**
 *  The carrier code enum. Accepts the values FEDEX or UPS.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_AccountReturnCarrier_CarrierCode_CarrierCodeUnspecified
 *        Carrier not specified (Value: "CARRIER_CODE_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_AccountReturnCarrier_CarrierCode_Fedex FedEx
 *        carrier (Value: "FEDEX")
 *    @arg @c kGTLRShoppingContent_AccountReturnCarrier_CarrierCode_Ups UPS
 *        carrier (Value: "UPS")
 */
@property(nonatomic, copy, nullable) NSString *carrierCode;

@end


/**
 *  GTLRShoppingContent_AccountsAuthInfoResponse
 */
@interface GTLRShoppingContent_AccountsAuthInfoResponse : GTLRObject

/**
 *  The account identifiers corresponding to the authenticated user. - For an
 *  individual account: only the merchant ID is defined - For an aggregator:
 *  only the aggregator ID is defined - For a subaccount of an MCA: both the
 *  merchant ID and the aggregator ID are defined.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountIdentifier *> *accountIdentifiers;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#accountsAuthInfoResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_AccountsClaimWebsiteResponse
 */
@interface GTLRShoppingContent_AccountsClaimWebsiteResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#accountsClaimWebsiteResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_AccountsCustomBatchRequest
 */
@interface GTLRShoppingContent_AccountsCustomBatchRequest : GTLRObject

/** The request entries to be processed in the batch. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountsCustomBatchRequestEntry *> *entries;

@end


/**
 *  A batch entry encoding a single non-batch accounts request.
 */
@interface GTLRShoppingContent_AccountsCustomBatchRequestEntry : GTLRObject

/**
 *  The account to create or update. Only defined if the method is `insert` or
 *  `update`.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Account *account;

/**
 *  The ID of the targeted account. Only defined if the method is not `insert`.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *accountId;

/**
 *  An entry ID, unique within the batch request.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  Whether the account should be deleted if the account has offers. Only
 *  applicable if the method is `delete`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *force;

/**
 *  Label IDs for the 'updatelabels' request.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *labelIds;

/** Details about the `link` request. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_AccountsCustomBatchRequestEntryLinkRequest *linkRequest;

/**
 *  The ID of the managing account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/**
 *  The method of the batch entry. Acceptable values are: - "`claimWebsite`" -
 *  "`delete`" - "`get`" - "`insert`" - "`link`" - "`update`"
 */
@property(nonatomic, copy, nullable) NSString *method;

/**
 *  Only applicable if the method is `claimwebsite`. Indicates whether or not to
 *  take the claim from another account in case there is a conflict.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *overwrite;

/**
 *  Controls which fields are visible. Only applicable if the method is 'get'.
 */
@property(nonatomic, copy, nullable) NSString *view;

@end


/**
 *  GTLRShoppingContent_AccountsCustomBatchRequestEntryLinkRequest
 */
@interface GTLRShoppingContent_AccountsCustomBatchRequestEntryLinkRequest : GTLRObject

/**
 *  Action to perform for this link. The `"request"` action is only available to
 *  select merchants. Acceptable values are: - "`approve`" - "`remove`" -
 *  "`request`"
 */
@property(nonatomic, copy, nullable) NSString *action;

/** The ID of the linked account. */
@property(nonatomic, copy, nullable) NSString *linkedAccountId;

/**
 *  Type of the link between the two accounts. Acceptable values are: -
 *  "`channelPartner`" - "`eCommercePlatform`" - "`paymentServiceProvider`"
 */
@property(nonatomic, copy, nullable) NSString *linkType;

/**
 *  Provided services. Acceptable values are: - "`shoppingAdsProductManagement`"
 *  - "`shoppingActionsProductManagement`" - "`shoppingActionsOrderManagement`"
 *  - "`paymentProcessing`"
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *services;

@end


/**
 *  GTLRShoppingContent_AccountsCustomBatchResponse
 */
@interface GTLRShoppingContent_AccountsCustomBatchResponse : GTLRObject

/** The result of the execution of the batch requests. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountsCustomBatchResponseEntry *> *entries;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#accountsCustomBatchResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  A batch entry encoding a single non-batch accounts response.
 */
@interface GTLRShoppingContent_AccountsCustomBatchResponseEntry : GTLRObject

/**
 *  The retrieved, created, or updated account. Not defined if the method was
 *  `delete`, `claimwebsite` or `link`.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Account *account;

/**
 *  The ID of the request entry this entry responds to.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  A list of errors for failed custombatch entries. *Note:* Schema errors fail
 *  the whole request.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Errors *errors;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#accountsCustomBatchResponseEntry`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  Not available for MCAs
 *  [accounts](https://support.google.com/merchants/answer/188487). By turning
 *  on [automatic shipping
 *  improvements](https://support.google.com/merchants/answer/10027038), you are
 *  allowing Google to improve the accuracy of your delivery times shown to
 *  shoppers using Google. More accurate delivery times, especially when faster,
 *  typically lead to better conversion rates. Google will improve your
 *  estimated delivery times based on various factors: * Delivery address of an
 *  order * Current handling time and shipping time settings * Estimated
 *  weekdays or business days * Parcel tracking data
 */
@interface GTLRShoppingContent_AccountShippingImprovements : GTLRObject

/**
 *  Enables automatic shipping improvements.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowShippingImprovements;

@end


/**
 *  GTLRShoppingContent_AccountsLinkRequest
 */
@interface GTLRShoppingContent_AccountsLinkRequest : GTLRObject

/**
 *  Action to perform for this link. The `"request"` action is only available to
 *  select merchants. Acceptable values are: - "`approve`" - "`remove`" -
 *  "`request`"
 */
@property(nonatomic, copy, nullable) NSString *action;

/** Additional information required for `eCommercePlatform` link type. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ECommercePlatformLinkInfo *eCommercePlatformLinkInfo;

/** The ID of the linked account. */
@property(nonatomic, copy, nullable) NSString *linkedAccountId;

/**
 *  Type of the link between the two accounts. Acceptable values are: -
 *  "`channelPartner`" - "`eCommercePlatform`" - "`paymentServiceProvider`"
 */
@property(nonatomic, copy, nullable) NSString *linkType;

/** Additional information required for `paymentServiceProvider` link type. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PaymentServiceProviderLinkInfo *paymentServiceProviderLinkInfo;

/**
 *  Acceptable values are: - "`shoppingAdsProductManagement`" -
 *  "`shoppingActionsProductManagement`" - "`shoppingActionsOrderManagement`" -
 *  "`paymentProcessing`"
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *services;

@end


/**
 *  GTLRShoppingContent_AccountsLinkResponse
 */
@interface GTLRShoppingContent_AccountsLinkResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#accountsLinkResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_AccountsListLinksResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "links" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_AccountsListLinksResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#accountsListLinksResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The list of available links.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_LinkedAccount *> *links;

/** The token for the retrieval of the next page of links. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRShoppingContent_AccountsListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_AccountsListResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#accountsListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of accounts. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_Account *> *resources;

@end


/**
 *  The status of an account, that is, information about its products, which is
 *  computed offline and not returned immediately at insertion time.
 */
@interface GTLRShoppingContent_AccountStatus : GTLRObject

/** The ID of the account for which the status is reported. */
@property(nonatomic, copy, nullable) NSString *accountId;

/** A list of account level issues. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountStatusAccountLevelIssue *> *accountLevelIssues;

/**
 *  How the account is managed. Acceptable values are: - "`manual`" -
 *  "`automatic`"
 */
@property(nonatomic, copy, nullable) NSString *accountManagement;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#accountStatus`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  List of product-related data by channel, destination, and country. Data in
 *  this field may be delayed by up to 30 minutes.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountStatusProducts *> *products;

/**
 *  Whether the account's website is claimed or not.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *websiteClaimed;

@end


/**
 *  GTLRShoppingContent_AccountStatusAccountLevelIssue
 */
@interface GTLRShoppingContent_AccountStatusAccountLevelIssue : GTLRObject

/** Country for which this issue is reported. */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  The destination the issue applies to. If this field is empty then the issue
 *  applies to all available destinations.
 */
@property(nonatomic, copy, nullable) NSString *destination;

/** Additional details about the issue. */
@property(nonatomic, copy, nullable) NSString *detail;

/** The URL of a web page to help resolving this issue. */
@property(nonatomic, copy, nullable) NSString *documentation;

/**
 *  Issue identifier.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Severity of the issue. Acceptable values are: - "`critical`" - "`error`" -
 *  "`suggestion`"
 */
@property(nonatomic, copy, nullable) NSString *severity;

/** Short description of the issue. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  GTLRShoppingContent_AccountstatusesCustomBatchRequest
 */
@interface GTLRShoppingContent_AccountstatusesCustomBatchRequest : GTLRObject

/** The request entries to be processed in the batch. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountstatusesCustomBatchRequestEntry *> *entries;

@end


/**
 *  A batch entry encoding a single non-batch accountstatuses request.
 */
@interface GTLRShoppingContent_AccountstatusesCustomBatchRequestEntry : GTLRObject

/**
 *  The ID of the (sub-)account whose status to get.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *accountId;

/**
 *  An entry ID, unique within the batch request.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  If set, only issues for the specified destinations are returned, otherwise
 *  only issues for the Shopping destination.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *destinations;

/**
 *  The ID of the managing account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/** The method of the batch entry. Acceptable values are: - "`get`" */
@property(nonatomic, copy, nullable) NSString *method;

@end


/**
 *  GTLRShoppingContent_AccountstatusesCustomBatchResponse
 */
@interface GTLRShoppingContent_AccountstatusesCustomBatchResponse : GTLRObject

/** The result of the execution of the batch requests. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountstatusesCustomBatchResponseEntry *> *entries;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#accountstatusesCustomBatchResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  A batch entry encoding a single non-batch accountstatuses response.
 */
@interface GTLRShoppingContent_AccountstatusesCustomBatchResponseEntry : GTLRObject

/**
 *  The requested account status. Defined if and only if the request was
 *  successful.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_AccountStatus *accountStatus;

/**
 *  The ID of the request entry this entry responds to.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  A list of errors for failed custombatch entries. *Note:* Schema errors fail
 *  the whole request.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Errors *errors;

@end


/**
 *  GTLRShoppingContent_AccountstatusesListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_AccountstatusesListResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#accountstatusesListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of account statuses. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountStatus *> *resources;

@end


/**
 *  GTLRShoppingContent_AccountStatusItemLevelIssue
 */
@interface GTLRShoppingContent_AccountStatusItemLevelIssue : GTLRObject

/** The attribute's name, if the issue is caused by a single attribute. */
@property(nonatomic, copy, nullable) NSString *attributeName;

/** The error code of the issue. */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  A short issue description in English.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** A detailed issue description in English. */
@property(nonatomic, copy, nullable) NSString *detail;

/** The URL of a web page to help with resolving this issue. */
@property(nonatomic, copy, nullable) NSString *documentation;

/**
 *  Number of items with this issue.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numItems;

/** Whether the issue can be resolved by the merchant. */
@property(nonatomic, copy, nullable) NSString *resolution;

/** How this issue affects serving of the offer. */
@property(nonatomic, copy, nullable) NSString *servability;

@end


/**
 *  GTLRShoppingContent_AccountStatusProducts
 */
@interface GTLRShoppingContent_AccountStatusProducts : GTLRObject

/**
 *  The channel the data applies to. Acceptable values are: - "`local`" -
 *  "`online`"
 */
@property(nonatomic, copy, nullable) NSString *channel;

/** The country the data applies to. */
@property(nonatomic, copy, nullable) NSString *country;

/** The destination the data applies to. */
@property(nonatomic, copy, nullable) NSString *destination;

/** List of item-level issues. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountStatusItemLevelIssue *> *itemLevelIssues;

/** Aggregated product statistics. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_AccountStatusStatistics *statistics;

@end


/**
 *  GTLRShoppingContent_AccountStatusStatistics
 */
@interface GTLRShoppingContent_AccountStatusStatistics : GTLRObject

/**
 *  Number of active offers.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *active;

/**
 *  Number of disapproved offers.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disapproved;

/**
 *  Number of expiring offers.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *expiring;

/**
 *  Number of pending offers.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pending;

@end


/**
 *  GTLRShoppingContent_AccountsUpdateLabelsRequest
 */
@interface GTLRShoppingContent_AccountsUpdateLabelsRequest : GTLRObject

/**
 *  The IDs of labels that should be assigned to the account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *labelIds;

@end


/**
 *  GTLRShoppingContent_AccountsUpdateLabelsResponse
 */
@interface GTLRShoppingContent_AccountsUpdateLabelsResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#accountsUpdateLabelsResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  The tax settings of a merchant account. All methods require the admin role.
 */
@interface GTLRShoppingContent_AccountTax : GTLRObject

/**
 *  Required. The ID of the account to which these account tax settings belong.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *accountId;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#accountTax`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Tax rules. Updating the tax rules will enable "US" taxes (not reversible).
 *  Defining no rules is equivalent to not charging tax at all.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountTaxTaxRule *> *rules;

@end


/**
 *  GTLRShoppingContent_AccounttaxCustomBatchRequest
 */
@interface GTLRShoppingContent_AccounttaxCustomBatchRequest : GTLRObject

/** The request entries to be processed in the batch. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccounttaxCustomBatchRequestEntry *> *entries;

@end


/**
 *  A batch entry encoding a single non-batch accounttax request.
 */
@interface GTLRShoppingContent_AccounttaxCustomBatchRequestEntry : GTLRObject

/**
 *  The ID of the account for which to get/update account tax settings.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *accountId;

/**
 *  The account tax settings to update. Only defined if the method is `update`.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_AccountTax *accountTax;

/**
 *  An entry ID, unique within the batch request.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  The ID of the managing account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/**
 *  The method of the batch entry. Acceptable values are: - "`get`" - "`update`"
 */
@property(nonatomic, copy, nullable) NSString *method;

@end


/**
 *  GTLRShoppingContent_AccounttaxCustomBatchResponse
 */
@interface GTLRShoppingContent_AccounttaxCustomBatchResponse : GTLRObject

/** The result of the execution of the batch requests. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccounttaxCustomBatchResponseEntry *> *entries;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#accounttaxCustomBatchResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  A batch entry encoding a single non-batch accounttax response.
 */
@interface GTLRShoppingContent_AccounttaxCustomBatchResponseEntry : GTLRObject

/** The retrieved or updated account tax settings. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_AccountTax *accountTax;

/**
 *  The ID of the request entry this entry responds to.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  A list of errors for failed custombatch entries. *Note:* Schema errors fail
 *  the whole request.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Errors *errors;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#accounttaxCustomBatchResponseEntry`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_AccounttaxListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_AccounttaxListResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#accounttaxListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of account tax settings. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountTax *> *resources;

@end


/**
 *  Tax calculation rule to apply in a state or province (US only).
 */
@interface GTLRShoppingContent_AccountTaxTaxRule : GTLRObject

/** Country code in which tax is applicable. */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  Required. State (or province) is which the tax is applicable, described by
 *  its location ID (also called criteria ID).
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *locationId;

/**
 *  Explicit tax rate in percent, represented as a floating point number without
 *  the percentage character. Must not be negative.
 */
@property(nonatomic, copy, nullable) NSString *ratePercent;

/**
 *  If true, shipping charges are also taxed.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shippingTaxed;

/**
 *  Whether the tax rate is taken from a global tax table or specified
 *  explicitly.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useGlobalRate;

@end


/**
 *  GTLRShoppingContent_AccountUser
 */
@interface GTLRShoppingContent_AccountUser : GTLRObject

/**
 *  Whether user is an admin.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *admin;

/** User's email address. */
@property(nonatomic, copy, nullable) NSString *emailAddress;

/**
 *  Whether user is an order manager.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *orderManager;

/**
 *  Whether user can access payment statements.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *paymentsAnalyst;

/**
 *  Whether user can manage payment settings.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *paymentsManager;

/**
 *  Whether user is a reporting manager.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reportingManager;

@end


/**
 *  GTLRShoppingContent_AccountYouTubeChannelLink
 */
@interface GTLRShoppingContent_AccountYouTubeChannelLink : GTLRObject

/** Channel ID. */
@property(nonatomic, copy, nullable) NSString *channelId;

/**
 *  Status of the link between this Merchant Center account and the YouTube
 *  channel. Upon retrieval, it represents the actual status of the link and can
 *  be either `active` if it was approved in YT Creator Studio or `pending` if
 *  it's pending approval. Upon insertion, it represents the *intended* status
 *  of the link. Re-uploading a link with status `active` when it's still
 *  pending or with status `pending` when it's already active will have no
 *  effect: the status will remain unchanged. Re-uploading a link with
 *  deprecated status `inactive` is equivalent to not submitting the link at all
 *  and will delete the link if it was active or cancel the link request if it
 *  was pending.
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  Request message for the ActivateProgram method.
 */
@interface GTLRShoppingContent_ActivateBuyOnGoogleProgramRequest : GTLRObject
@end


/**
 *  GTLRShoppingContent_Address
 */
@interface GTLRShoppingContent_Address : GTLRObject

/**
 *  Required. Top-level administrative subdivision of the country. For example,
 *  a state like California ("CA") or a province like Quebec ("QC").
 */
@property(nonatomic, copy, nullable) NSString *administrativeArea;

/**
 *  Required. City, town or commune. May also include dependent localities or
 *  sublocalities (for example, neighborhoods or suburbs).
 */
@property(nonatomic, copy, nullable) NSString *city;

/**
 *  Required. [CLDR country
 *  code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml)
 *  (for example, "US").
 */
@property(nonatomic, copy, nullable) NSString *country;

/** Required. Postal code or ZIP (for example, "94043"). */
@property(nonatomic, copy, nullable) NSString *postalCode;

/** Street-level part of the address. Use `\\n` to add a second line. */
@property(nonatomic, copy, nullable) NSString *streetAddress;

@end


/**
 *  GTLRShoppingContent_Amount
 */
@interface GTLRShoppingContent_Amount : GTLRObject

/**
 *  [required] The pre-tax or post-tax price depending on the location of the
 *  order.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *priceAmount;

/** [required] Tax value. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *taxAmount;

@end


/**
 *  GTLRShoppingContent_BusinessDayConfig
 */
@interface GTLRShoppingContent_BusinessDayConfig : GTLRObject

/** Regular business days, such as '"monday"'. May not be empty. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *businessDays;

@end


/**
 *  Response message for the GetProgramStatus method.
 */
@interface GTLRShoppingContent_BuyOnGoogleProgramStatus : GTLRObject

/** The business models in which merchant participates. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *businessModel;

/**
 *  The customer service pending email. After verification this field becomes
 *  empty.
 */
@property(nonatomic, copy, nullable) NSString *customerServicePendingEmail;

/**
 *  The pending phone number specified for BuyOnGoogle program. It might be
 *  different than account level phone number. In order to update this field the
 *  customer_service_pending_phone_region_code must also be set. After
 *  verification this field becomes empty.
 */
@property(nonatomic, copy, nullable) NSString *customerServicePendingPhoneNumber;

/**
 *  Two letter country code for the pending phone number, for example `CA` for
 *  Canadian numbers. See the [ISO 3166-1
 *  alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements)
 *  officially assigned codes. In order to update this field the
 *  customer_service_pending_phone_number must also be set. After verification
 *  this field becomes empty.
 */
@property(nonatomic, copy, nullable) NSString *customerServicePendingPhoneRegionCode;

/** Output only. The customer service verified email. */
@property(nonatomic, copy, nullable) NSString *customerServiceVerifiedEmail;

/**
 *  Output only. The verified phone number specified for BuyOnGoogle program. It
 *  might be different than account level phone number.
 */
@property(nonatomic, copy, nullable) NSString *customerServiceVerifiedPhoneNumber;

/**
 *  Output only. Two letter country code for the verified phone number, for
 *  example `CA` for Canadian numbers. See the [ISO 3166-1
 *  alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements)
 *  officially assigned codes.
 */
@property(nonatomic, copy, nullable) NSString *customerServiceVerifiedPhoneRegionCode;

/**
 *  The channels through which the merchant is selling.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_BuyOnGoogleProgramStatus_OnlineSalesChannel_GoogleAndOtherWebsites
 *        Merchant is selling on Google and other websites. (Value:
 *        "GOOGLE_AND_OTHER_WEBSITES")
 *    @arg @c kGTLRShoppingContent_BuyOnGoogleProgramStatus_OnlineSalesChannel_GoogleExclusive
 *        Merchant is selling exclusively on Google. (Value: "GOOGLE_EXCLUSIVE")
 *    @arg @c kGTLRShoppingContent_BuyOnGoogleProgramStatus_OnlineSalesChannel_OnlineSalesChannelUnspecified
 *        Default value when online sales channel is not set. (Value:
 *        "ONLINE_SALES_CHANNEL_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *onlineSalesChannel;

/**
 *  Output only. The current participation stage for the program.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_Active
 *        Merchant's program participation is active for a specific region code.
 *        (Value: "ACTIVE")
 *    @arg @c kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_Eligible
 *        Merchant is eligible for onboarding to a given program in a specific
 *        region code. (Value: "ELIGIBLE")
 *    @arg @c kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_EligibleForReview
 *        Merchant fulfilled all the requirements and is ready to request review
 *        in a specific region code. (Value: "ELIGIBLE_FOR_REVIEW")
 *    @arg @c kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_NotEligible
 *        Merchant is not eligible for onboarding to a given program in a
 *        specific region code. (Value: "NOT_ELIGIBLE")
 *    @arg @c kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_Onboarding
 *        Merchant is onboarding to a given program in a specific region code.
 *        (Value: "ONBOARDING")
 *    @arg @c kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_Paused
 *        Participation has been paused. (Value: "PAUSED")
 *    @arg @c kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_PendingReview
 *        Merchant is waiting for the review to be completed in a specific
 *        region code. (Value: "PENDING_REVIEW")
 *    @arg @c kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_ProgramParticipationStageUnspecified
 *        Default value when participation stage is not set. (Value:
 *        "PROGRAM_PARTICIPATION_STAGE_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_BuyOnGoogleProgramStatus_ParticipationStage_ReviewDisapproved
 *        The review for a merchant has been rejected in a specific region code.
 *        (Value: "REVIEW_DISAPPROVED")
 */
@property(nonatomic, copy, nullable) NSString *participationStage;

@end


/**
 *  Request message for the CaptureOrder method.
 */
@interface GTLRShoppingContent_CaptureOrderRequest : GTLRObject
@end


/**
 *  Response message for the CaptureOrder method.
 */
@interface GTLRShoppingContent_CaptureOrderResponse : GTLRObject

/**
 *  The status of the execution. Only defined if the request was successful.
 *  Acceptable values are: * "duplicate" * "executed"
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_CaptureOrderResponse_ExecutionStatus_Duplicate
 *        The request was not performed because it already executed once
 *        successfully. (Value: "DUPLICATE")
 *    @arg @c kGTLRShoppingContent_CaptureOrderResponse_ExecutionStatus_Executed
 *        The request was completed successfully. (Value: "EXECUTED")
 *    @arg @c kGTLRShoppingContent_CaptureOrderResponse_ExecutionStatus_ExecutionStatusUnspecified
 *        Default value. This value is unused. (Value:
 *        "EXECUTION_STATUS_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

@end


/**
 *  GTLRShoppingContent_CarrierRate
 */
@interface GTLRShoppingContent_CarrierRate : GTLRObject

/**
 *  Carrier service, such as `"UPS"` or `"Fedex"`. The list of supported
 *  carriers can be retrieved through the `getSupportedCarriers` method.
 *  Required.
 */
@property(nonatomic, copy, nullable) NSString *carrierName;

/**
 *  Carrier service, such as `"ground"` or `"2 days"`. The list of supported
 *  services for a carrier can be retrieved through the `getSupportedCarriers`
 *  method. Required.
 */
@property(nonatomic, copy, nullable) NSString *carrierService;

/**
 *  Additive shipping rate modifier. Can be negative. For example `{ "value":
 *  "1", "currency" : "USD" }` adds $1 to the rate, `{ "value": "-3", "currency"
 *  : "USD" }` removes $3 from the rate. Optional.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *flatAdjustment;

/** Name of the carrier rate. Must be unique per rate group. Required. */
@property(nonatomic, copy, nullable) NSString *name;

/** Shipping origin for this carrier rate. Required. */
@property(nonatomic, copy, nullable) NSString *originPostalCode;

/**
 *  Multiplicative shipping rate modifier as a number in decimal notation. Can
 *  be negative. For example `"5.4"` increases the rate by 5.4%, `"-3"`
 *  decreases the rate by 3%. Optional.
 */
@property(nonatomic, copy, nullable) NSString *percentageAdjustment;

@end


/**
 *  GTLRShoppingContent_CarriersCarrier
 */
@interface GTLRShoppingContent_CarriersCarrier : GTLRObject

/**
 *  The CLDR country code of the carrier (for example, "US"). Always present.
 */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  A list of services supported for EDD (Estimated Delivery Date) calculation.
 *  This is the list of valid values for
 *  WarehouseBasedDeliveryTime.carrierService.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *eddServices;

/** The name of the carrier (for example, `"UPS"`). Always present. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A list of supported services (for example, `"ground"`) for that carrier.
 *  Contains at least one service. This is the list of valid values for
 *  CarrierRate.carrierService.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *services;

@end


/**
 *  The collection message.
 */
@interface GTLRShoppingContent_Collection : GTLRObject

/**
 *  Label that you assign to a collection to help organize bidding and reporting
 *  in Shopping campaigns. [Custom
 *  label](https://support.google.com/merchants/answer/9674217)
 */
@property(nonatomic, copy, nullable) NSString *customLabel0;

/**
 *  Label that you assign to a collection to help organize bidding and reporting
 *  in Shopping campaigns.
 */
@property(nonatomic, copy, nullable) NSString *customLabel1;

/**
 *  Label that you assign to a collection to help organize bidding and reporting
 *  in Shopping campaigns.
 */
@property(nonatomic, copy, nullable) NSString *customLabel2;

/**
 *  Label that you assign to a collection to help organize bidding and reporting
 *  in Shopping campaigns.
 */
@property(nonatomic, copy, nullable) NSString *customLabel3;

/**
 *  Label that you assign to a collection to help organize bidding and reporting
 *  in Shopping campaigns.
 */
@property(nonatomic, copy, nullable) NSString *customLabel4;

/**
 *  This identifies one or more products associated with the collection. Used as
 *  a lookup to the corresponding product ID in your product feeds. Provide a
 *  maximum of 100 featuredProduct (for collections). Provide up to 10
 *  featuredProduct (for Shoppable Images only) with ID and X and Y coordinates.
 *  [featured_product
 *  attribute](https://support.google.com/merchants/answer/9703736)
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_CollectionFeaturedProduct *> *featuredProduct;

/**
 *  Your collection's name. [headline
 *  attribute](https://support.google.com/merchants/answer/9673580)
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *headline;

/**
 *  Required. The REST ID of the collection. Content API methods that operate on
 *  collections take this as their collectionId parameter. The REST ID for a
 *  collection is of the form collectionId. [id
 *  attribute](https://support.google.com/merchants/answer/9649290)
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The URL of a collection’s image. [image_link
 *  attribute](https://support.google.com/merchants/answer/9703236)
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *imageLink;

/**
 *  The language of a collection and the language of any featured products
 *  linked to the collection. [language
 *  attribute](https://support.google.com/merchants/answer/9673781)
 */
@property(nonatomic, copy, nullable) NSString *language;

/**
 *  A collection’s landing page. URL directly linking to your collection's page
 *  on your website. [link
 *  attribute](https://support.google.com/merchants/answer/9673983)
 */
@property(nonatomic, copy, nullable) NSString *link;

/**
 *  A collection’s mobile-optimized landing page when you have a different URL
 *  for mobile and desktop traffic. [mobile_link
 *  attribute](https://support.google.com/merchants/answer/9646123)
 */
@property(nonatomic, copy, nullable) NSString *mobileLink;

/**
 *  [product_country
 *  attribute](https://support.google.com/merchants/answer/9674155)
 */
@property(nonatomic, copy, nullable) NSString *productCountry;

@end


/**
 *  The message for FeaturedProduct.
 *  [FeaturedProduct](https://support.google.com/merchants/answer/9703736)
 */
@interface GTLRShoppingContent_CollectionFeaturedProduct : GTLRObject

/** The unique identifier for the product item. */
@property(nonatomic, copy, nullable) NSString *offerId;

/**
 *  Required. X-coordinate of the product callout on the Shoppable Image.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *x;

/**
 *  Required. Y-coordinate of the product callout on the Shoppable Image.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *y;

@end


/**
 *  The collectionstatus message.
 */
@interface GTLRShoppingContent_CollectionStatus : GTLRObject

/** A list of all issues associated with the collection. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_CollectionStatusItemLevelIssue *> *collectionLevelIssuses;

/**
 *  Date on which the collection has been created in [ISO
 *  8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset,
 *  for example "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z"
 */
@property(nonatomic, copy, nullable) NSString *creationDate;

/** The intended destinations for the collection. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_CollectionStatusDestinationStatus *> *destinationStatuses;

/**
 *  Required. The ID of the collection for which status is reported.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Date on which the collection has been last updated in [ISO
 *  8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset,
 *  for example "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z"
 */
@property(nonatomic, copy, nullable) NSString *lastUpdateDate;

@end


/**
 *  Destination status message.
 */
@interface GTLRShoppingContent_CollectionStatusDestinationStatus : GTLRObject

/** Country codes (ISO 3166-1 alpha-2) where the collection is approved. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *approvedCountries;

/** The name of the destination */
@property(nonatomic, copy, nullable) NSString *destination;

/** Country codes (ISO 3166-1 alpha-2) where the collection is disapproved. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *disapprovedCountries;

/**
 *  Country codes (ISO 3166-1 alpha-2) where the collection is pending approval.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *pendingCountries;

/**
 *  The status for the specified destination in the collections target country.
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  Issue associated with the collection.
 */
@interface GTLRShoppingContent_CollectionStatusItemLevelIssue : GTLRObject

/** Country codes (ISO 3166-1 alpha-2) where issue applies to the offer. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *applicableCountries;

/** The attribute's name, if the issue is caused by a single attribute. */
@property(nonatomic, copy, nullable) NSString *attributeName;

/** The error code of the issue. */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  A short issue description in English.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The destination the issue applies to. */
@property(nonatomic, copy, nullable) NSString *destination;

/** A detailed issue description in English. */
@property(nonatomic, copy, nullable) NSString *detail;

/** The URL of a web page to help with resolving this issue. */
@property(nonatomic, copy, nullable) NSString *documentation;

/** Whether the issue can be resolved by the merchant. */
@property(nonatomic, copy, nullable) NSString *resolution;

/** How this issue affects the serving of the collection. */
@property(nonatomic, copy, nullable) NSString *servability;

@end


/**
 *  Information about CSS domain.
 */
@interface GTLRShoppingContent_Css : GTLRObject

/**
 *  Output only. Immutable. The CSS domain ID.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cssDomainId;

/**
 *  Output only. Immutable. The ID of the CSS group this CSS domain is
 *  affiliated with. Only populated for CSS group users.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cssGroupId;

/**
 *  Output only. Immutable. The CSS domain's display name, used when space is
 *  constrained.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Output only. Immutable. The CSS domain's full name. */
@property(nonatomic, copy, nullable) NSString *fullName;

/** Output only. Immutable. The CSS domain's homepage. */
@property(nonatomic, copy, nullable) NSString *homepageUri;

/**
 *  A list of label IDs that are assigned to this CSS domain by its CSS group.
 *  Only populated for CSS group users.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *labelIds;

@end


/**
 *  GTLRShoppingContent_CustomAttribute
 */
@interface GTLRShoppingContent_CustomAttribute : GTLRObject

/**
 *  Subattributes within this attribute group. Exactly one of value or
 *  groupValues must be provided.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_CustomAttribute *> *groupValues;

/**
 *  The name of the attribute. Underscores will be replaced by spaces upon
 *  insertion.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The value of the attribute. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRShoppingContent_CustomerReturnReason
 */
@interface GTLRShoppingContent_CustomerReturnReason : GTLRObject

/**
 *  Description of the reason.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Code of the return reason. Acceptable values are: - "`betterPriceFound`" -
 *  "`changedMind`" - "`damagedOrDefectiveItem`" - "`didNotMatchDescription`" -
 *  "`doesNotFit`" - "`expiredItem`" - "`incorrectItemReceived`" -
 *  "`noLongerNeeded`" - "`notSpecified`" - "`orderedWrongItem`" - "`other`" -
 *  "`qualityNotExpected`" - "`receivedTooLate`" - "`undeliverable`"
 */
@property(nonatomic, copy, nullable) NSString *reasonCode;

@end


/**
 *  GTLRShoppingContent_CutoffTime
 */
@interface GTLRShoppingContent_CutoffTime : GTLRObject

/**
 *  Hour of the cutoff time until which an order has to be placed to be
 *  processed in the same day. Required.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hour;

/**
 *  Minute of the cutoff time until which an order has to be placed to be
 *  processed in the same day. Required.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minute;

/**
 *  Timezone identifier for the cutoff time (for example, "Europe/Zurich"). List
 *  of identifiers. Required.
 */
@property(nonatomic, copy, nullable) NSString *timezone;

@end


/**
 *  Datafeed configuration data.
 */
@interface GTLRShoppingContent_Datafeed : GTLRObject

/**
 *  The two-letter ISO 639-1 language in which the attributes are defined in the
 *  data feed.
 */
@property(nonatomic, copy, nullable) NSString *attributeLanguage;

/**
 *  Required. The type of data feed. For product inventory feeds, only feeds for
 *  local stores, not online stores, are supported. Acceptable values are: -
 *  "`local products`" - "`product inventory`" - "`products`"
 */
@property(nonatomic, copy, nullable) NSString *contentType;

/** Fetch schedule for the feed file. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_DatafeedFetchSchedule *fetchSchedule;

/**
 *  Required. The filename of the feed. All feeds must have a unique file name.
 */
@property(nonatomic, copy, nullable) NSString *fileName;

/** Format of the feed file. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_DatafeedFormat *format;

/**
 *  Required for update. The ID of the data feed.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#datafeed`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Required for insert. A descriptive name of the data feed. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The targets this feed should apply to (country, language, destinations).
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_DatafeedTarget *> *targets;

@end


/**
 *  The required fields vary based on the frequency of fetching. For a monthly
 *  fetch schedule, day_of_month and hour are required. For a weekly fetch
 *  schedule, weekday and hour are required. For a daily fetch schedule, only
 *  hour is required.
 */
@interface GTLRShoppingContent_DatafeedFetchSchedule : GTLRObject

/**
 *  The day of the month the feed file should be fetched (1-31).
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dayOfMonth;

/**
 *  The URL where the feed file can be fetched. Google Merchant Center will
 *  support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP
 *  protocols, so the value will need to be a valid link using one of those four
 *  protocols.
 */
@property(nonatomic, copy, nullable) NSString *fetchUrl;

/**
 *  The hour of the day the feed file should be fetched (0-23).
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hour;

/**
 *  The minute of the hour the feed file should be fetched (0-59). Read-only.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minuteOfHour;

/** An optional password for fetch_url. */
@property(nonatomic, copy, nullable) NSString *password;

/**
 *  Whether the scheduled fetch is paused or not.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *paused;

/**
 *  Time zone used for schedule. UTC by default. For example,
 *  "America/Los_Angeles".
 */
@property(nonatomic, copy, nullable) NSString *timeZone;

/** An optional user name for fetch_url. */
@property(nonatomic, copy, nullable) NSString *username;

/**
 *  The day of the week the feed file should be fetched. Acceptable values are:
 *  - "`monday`" - "`tuesday`" - "`wednesday`" - "`thursday`" - "`friday`" -
 *  "`saturday`" - "`sunday`"
 */
@property(nonatomic, copy, nullable) NSString *weekday;

@end


/**
 *  GTLRShoppingContent_DatafeedFormat
 */
@interface GTLRShoppingContent_DatafeedFormat : GTLRObject

/**
 *  Delimiter for the separation of values in a delimiter-separated values feed.
 *  If not specified, the delimiter will be auto-detected. Ignored for non-DSV
 *  data feeds. Acceptable values are: - "`pipe`" - "`tab`" - "`tilde`"
 */
@property(nonatomic, copy, nullable) NSString *columnDelimiter;

/**
 *  Character encoding scheme of the data feed. If not specified, the encoding
 *  will be auto-detected. Acceptable values are: - "`latin-1`" - "`utf-16be`" -
 *  "`utf-16le`" - "`utf-8`" - "`windows-1252`"
 */
@property(nonatomic, copy, nullable) NSString *fileEncoding;

/**
 *  Specifies how double quotes are interpreted. If not specified, the mode will
 *  be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: -
 *  "`normal character`" - "`value quoting`"
 */
@property(nonatomic, copy, nullable) NSString *quotingMode;

@end


/**
 *  GTLRShoppingContent_DatafeedsCustomBatchRequest
 */
@interface GTLRShoppingContent_DatafeedsCustomBatchRequest : GTLRObject

/** The request entries to be processed in the batch. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_DatafeedsCustomBatchRequestEntry *> *entries;

@end


/**
 *  A batch entry encoding a single non-batch datafeeds request.
 */
@interface GTLRShoppingContent_DatafeedsCustomBatchRequestEntry : GTLRObject

/**
 *  An entry ID, unique within the batch request.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/** The data feed to insert. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Datafeed *datafeed;

/**
 *  The ID of the data feed to get, delete or fetch.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *datafeedId;

/**
 *  The ID of the managing account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/**
 *  The method of the batch entry. Acceptable values are: - "`delete`" -
 *  "`fetchNow`" - "`get`" - "`insert`" - "`update`"
 */
@property(nonatomic, copy, nullable) NSString *method;

@end


/**
 *  GTLRShoppingContent_DatafeedsCustomBatchResponse
 */
@interface GTLRShoppingContent_DatafeedsCustomBatchResponse : GTLRObject

/** The result of the execution of the batch requests. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_DatafeedsCustomBatchResponseEntry *> *entries;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#datafeedsCustomBatchResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  A batch entry encoding a single non-batch datafeeds response.
 */
@interface GTLRShoppingContent_DatafeedsCustomBatchResponseEntry : GTLRObject

/**
 *  The ID of the request entry this entry responds to.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  The requested data feed. Defined if and only if the request was successful.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Datafeed *datafeed;

/**
 *  A list of errors for failed custombatch entries. *Note:* Schema errors fail
 *  the whole request.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Errors *errors;

@end


/**
 *  GTLRShoppingContent_DatafeedsFetchNowResponse
 */
@interface GTLRShoppingContent_DatafeedsFetchNowResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#datafeedsFetchNowResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_DatafeedsListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_DatafeedsListResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#datafeedsListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of datafeeds. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_Datafeed *> *resources;

@end


/**
 *  The status of a datafeed, that is, the result of the last retrieval of the
 *  datafeed computed asynchronously when the feed processing is finished.
 */
@interface GTLRShoppingContent_DatafeedStatus : GTLRObject

/**
 *  The country for which the status is reported, represented as a CLDR
 *  territory code.
 */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  The ID of the feed for which the status is reported.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *datafeedId;

/** The list of errors occurring in the feed. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_DatafeedStatusError *> *errors;

/** The feed label status is reported for. */
@property(nonatomic, copy, nullable) NSString *feedLabel;

/**
 *  The number of items in the feed that were processed.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *itemsTotal;

/**
 *  The number of items in the feed that were valid.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *itemsValid;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#datafeedStatus`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The two-letter ISO 639-1 language for which the status is reported. */
@property(nonatomic, copy, nullable) NSString *language;

/** The last date at which the feed was uploaded. */
@property(nonatomic, copy, nullable) NSString *lastUploadDate;

/**
 *  The processing status of the feed. Acceptable values are: - "`"`failure`":
 *  The feed could not be processed or all items had errors.`" - "`in
 *  progress`": The feed is being processed. - "`none`": The feed has not yet
 *  been processed. For example, a feed that has never been uploaded will have
 *  this processing status. - "`success`": The feed was processed successfully,
 *  though some items might have had errors.
 */
@property(nonatomic, copy, nullable) NSString *processingStatus;

/** The list of errors occurring in the feed. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_DatafeedStatusError *> *warnings;

@end


/**
 *  An error occurring in the feed, like "invalid price".
 */
@interface GTLRShoppingContent_DatafeedStatusError : GTLRObject

/** The code of the error, for example, "validation/invalid_value". */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  The number of occurrences of the error in the feed.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/** A list of example occurrences of the error, grouped by product. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_DatafeedStatusExample *> *examples;

/** The error message, for example, "Invalid price". */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRShoppingContent_DatafeedstatusesCustomBatchRequest
 */
@interface GTLRShoppingContent_DatafeedstatusesCustomBatchRequest : GTLRObject

/** The request entries to be processed in the batch. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_DatafeedstatusesCustomBatchRequestEntry *> *entries;

@end


/**
 *  A batch entry encoding a single non-batch datafeedstatuses request.
 */
@interface GTLRShoppingContent_DatafeedstatusesCustomBatchRequestEntry : GTLRObject

/**
 *  An entry ID, unique within the batch request.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  Deprecated. Use `feedLabel` instead. The country to get the datafeed status
 *  for. If this parameter is provided, then `language` must also be provided.
 *  Note that for multi-target datafeeds this parameter is required.
 */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  The ID of the data feed to get.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *datafeedId;

/**
 *  The feed label to get the datafeed status for. If this parameter is
 *  provided, then `language` must also be provided. Note that for multi-target
 *  datafeeds this parameter is required.
 */
@property(nonatomic, copy, nullable) NSString *feedLabel;

/**
 *  The language to get the datafeed status for. If this parameter is provided
 *  then `country` must also be provided. Note that for multi-target datafeeds
 *  this parameter is required.
 */
@property(nonatomic, copy, nullable) NSString *language;

/**
 *  The ID of the managing account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/** The method of the batch entry. Acceptable values are: - "`get`" */
@property(nonatomic, copy, nullable) NSString *method;

@end


/**
 *  GTLRShoppingContent_DatafeedstatusesCustomBatchResponse
 */
@interface GTLRShoppingContent_DatafeedstatusesCustomBatchResponse : GTLRObject

/** The result of the execution of the batch requests. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_DatafeedstatusesCustomBatchResponseEntry *> *entries;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#datafeedstatusesCustomBatchResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  A batch entry encoding a single non-batch datafeedstatuses response.
 */
@interface GTLRShoppingContent_DatafeedstatusesCustomBatchResponseEntry : GTLRObject

/**
 *  The ID of the request entry this entry responds to.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  The requested data feed status. Defined if and only if the request was
 *  successful.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_DatafeedStatus *datafeedStatus;

/**
 *  A list of errors for failed custombatch entries. *Note:* Schema errors fail
 *  the whole request.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Errors *errors;

@end


/**
 *  GTLRShoppingContent_DatafeedstatusesListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_DatafeedstatusesListResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#datafeedstatusesListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of datafeed statuses. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_DatafeedStatus *> *resources;

@end


/**
 *  An example occurrence for a particular error.
 */
@interface GTLRShoppingContent_DatafeedStatusExample : GTLRObject

/** The ID of the example item. */
@property(nonatomic, copy, nullable) NSString *itemId;

/**
 *  Line number in the data feed where the example is found.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *lineNumber;

/** The problematic value. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRShoppingContent_DatafeedTarget
 */
@interface GTLRShoppingContent_DatafeedTarget : GTLRObject

/**
 *  Deprecated. Use `feedLabel` instead. The country where the items in the feed
 *  will be included in the search index, represented as a CLDR territory code.
 */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  The list of destinations to exclude for this target (corresponds to cleared
 *  check boxes in Merchant Center).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *excludedDestinations;

/**
 *  Feed label for the DatafeedTarget. Either `country` or `feedLabel` is
 *  required. If both `feedLabel` and `country` is specified, the values must
 *  match.
 */
@property(nonatomic, copy, nullable) NSString *feedLabel;

/**
 *  The list of destinations to include for this target (corresponds to checked
 *  check boxes in Merchant Center). Default destinations are always included
 *  unless provided in `excludedDestinations`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includedDestinations;

/**
 *  The two-letter ISO 639-1 language of the items in the feed. Must be a valid
 *  language for `targets[].country`.
 */
@property(nonatomic, copy, nullable) NSString *language;

/**
 *  The countries where the items may be displayed. Represented as a CLDR
 *  territory code. Will be ignored for "product inventory" feeds.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *targetCountries;

@end


/**
 *  Represents a whole or partial calendar date, such as a birthday. The time of
 *  day and time zone are either specified elsewhere or are insignificant. The
 *  date is relative to the Gregorian Calendar. This can represent one of the
 *  following: * A full date, with non-zero year, month, and day values. * A
 *  month and day, with a zero year (for example, an anniversary). * A year on
 *  its own, with a zero month and a zero day. * A year and month, with a zero
 *  day (for example, a credit card expiration date). Related types: *
 *  google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
 */
@interface GTLRShoppingContent_Date : GTLRObject

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end


/**
 *  Represents civil time (or occasionally physical time). This type can
 *  represent a civil time in one of a few possible ways: * When utc_offset is
 *  set and time_zone is unset: a civil time on a calendar day with a particular
 *  offset from UTC. * When time_zone is set and utc_offset is unset: a civil
 *  time on a calendar day in a particular time zone. * When neither time_zone
 *  nor utc_offset is set: a civil time on a calendar day in local time. The
 *  date is relative to the Proleptic Gregorian Calendar. If year, month, or day
 *  are 0, the DateTime is considered not to have a specific year, month, or day
 *  respectively. This type may also be used to represent a physical time if all
 *  the date and time fields are set and either case of the `time_offset` oneof
 *  is set. Consider using `Timestamp` message for physical time instead. If
 *  your use case also would like to store the user's timezone, that can be done
 *  in another field. This type is more flexible than some applications may
 *  want. Make sure to document and validate your application's limitations.
 */
@interface GTLRShoppingContent_DateTime : GTLRObject

/**
 *  Optional. Day of month. Must be from 1 to 31 and valid for the year and
 *  month, or 0 if specifying a datetime without a day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults
 *  to 0 (midnight). An API may choose to allow the value "24:00:00" for
 *  scenarios like business closing time.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hours;

/**
 *  Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minutes;

/**
 *  Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime
 *  without a month.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Optional. Fractions of seconds in nanoseconds. Must be from 0 to
 *  999,999,999, defaults to 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  Optional. Seconds of minutes of the time. Must normally be from 0 to 59,
 *  defaults to 0. An API may allow the value 60 if it allows leap-seconds.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *seconds;

/** Time zone. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_TimeZone *timeZone;

/**
 *  UTC offset. Must be whole seconds, between -18 hours and +18 hours. For
 *  example, a UTC offset of -4:00 would be represented as { seconds: -14400 }.
 */
@property(nonatomic, strong, nullable) GTLRDuration *utcOffset;

/**
 *  Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a
 *  datetime without a year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end


/**
 *  A delivery area for the product. Only one of `countryCode` or
 *  `postalCodeRange` must be set.
 */
@interface GTLRShoppingContent_DeliveryArea : GTLRObject

/**
 *  Required. The country that the product can be delivered to. Submit a
 *  [unicode CLDR
 *  region](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml)
 *  such as `US` or `CH`.
 */
@property(nonatomic, copy, nullable) NSString *countryCode;

/**
 *  A postal code, postal code range or postal code prefix that defines this
 *  area. Limited to US and AUS.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_DeliveryAreaPostalCodeRange *postalCodeRange;

/**
 *  A state, territory, or prefecture. This is supported for the United States,
 *  Australia, and Japan. Provide a subdivision code from the ISO 3166-2 code
 *  tables ([US](https://en.wikipedia.org/wiki/ISO_3166-2:US),
 *  [AU](https://en.wikipedia.org/wiki/ISO_3166-2:AU), or
 *  [JP](https://en.wikipedia.org/wiki/ISO_3166-2:JP)) without country prefix
 *  (for example, `"NY"`, `"NSW"`, `"03"`).
 */
@property(nonatomic, copy, nullable) NSString *regionCode;

@end


/**
 *  A range of postal codes that defines the delivery area. Only set
 *  `firstPostalCode` when specifying a single postal code.
 */
@interface GTLRShoppingContent_DeliveryAreaPostalCodeRange : GTLRObject

/**
 *  Required. A postal code or a pattern of the form prefix* denoting the
 *  inclusive lower bound of the range defining the area. Examples values:
 *  `"94108"`, `"9410*"`, `"9*"`.
 */
@property(nonatomic, copy, nullable) NSString *firstPostalCode;

/**
 *  A postal code or a pattern of the form prefix* denoting the inclusive upper
 *  bound of the range defining the area (for example [070* - 078*] results in
 *  the range [07000 - 07899]). It must have the same length as
 *  `firstPostalCode`: if `firstPostalCode` is a postal code then
 *  `lastPostalCode` must be a postal code too; if firstPostalCode is a pattern
 *  then `lastPostalCode` must be a pattern with the same prefix length. Ignored
 *  if not set, then the area is defined as being all the postal codes matching
 *  `firstPostalCode`.
 */
@property(nonatomic, copy, nullable) NSString *lastPostalCode;

@end


/**
 *  GTLRShoppingContent_DeliveryTime
 */
@interface GTLRShoppingContent_DeliveryTime : GTLRObject

/**
 *  Business days cutoff time definition. If not configured the cutoff time will
 *  be defaulted to 8AM PST.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_CutoffTime *cutoffTime;

/**
 *  The business days during which orders can be handled. If not provided,
 *  Monday to Friday business days will be assumed.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_BusinessDayConfig *handlingBusinessDayConfig;

/**
 *  Holiday cutoff definitions. If configured, they specify order cutoff times
 *  for holiday-specific shipping.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_HolidayCutoff *> *holidayCutoffs;

/**
 *  Maximum number of business days spent before an order is shipped. 0 means
 *  same day shipped, 1 means next day shipped. Must be greater than or equal to
 *  `minHandlingTimeInDays`.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxHandlingTimeInDays;

/**
 *  Maximum number of business days that are spent in transit. 0 means same day
 *  delivery, 1 means next day delivery. Must be greater than or equal to
 *  `minTransitTimeInDays`.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxTransitTimeInDays;

/**
 *  Minimum number of business days spent before an order is shipped. 0 means
 *  same day shipped, 1 means next day shipped.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minHandlingTimeInDays;

/**
 *  Minimum number of business days that are spent in transit. 0 means same day
 *  delivery, 1 means next day delivery. Either `{min,max}TransitTimeInDays` or
 *  `transitTimeTable` must be set, but not both.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minTransitTimeInDays;

/**
 *  The business days during which orders can be in-transit. If not provided,
 *  Monday to Friday business days will be assumed.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_BusinessDayConfig *transitBusinessDayConfig;

/**
 *  Transit time table, number of business days spent in transit based on row
 *  and column dimensions. Either `{min,max}TransitTimeInDays` or
 *  `transitTimeTable` can be set, but not both.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_TransitTable *transitTimeTable;

/**
 *  Indicates that the delivery time should be calculated per warehouse
 *  (shipping origin location) based on the settings of the selected carrier.
 *  When set, no other transit time related field in DeliveryTime should be set.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_WarehouseBasedDeliveryTime *> *warehouseBasedDeliveryTimes;

@end


/**
 *  Additional information required for E_COMMERCE_PLATFORM link type.
 */
@interface GTLRShoppingContent_ECommercePlatformLinkInfo : GTLRObject

/**
 *  The id used by the third party service provider to identify the merchant.
 */
@property(nonatomic, copy, nullable) NSString *externalAccountId;

@end


/**
 *  An error returned by the API.
 */
@interface GTLRShoppingContent_Error : GTLRObject

/** The domain of the error. */
@property(nonatomic, copy, nullable) NSString *domain;

/** A description of the error. */
@property(nonatomic, copy, nullable) NSString *message;

/** The error code. */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  A list of errors returned by a failed batch entry.
 */
@interface GTLRShoppingContent_Errors : GTLRObject

/**
 *  The HTTP status of the first error in `errors`.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/** A list of errors. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_Error *> *errors;

/** The message of the first error in `errors`. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  Response message for GetFreeListingsProgramStatus.
 */
@interface GTLRShoppingContent_FreeListingsProgramStatus : GTLRObject

/**
 *  State of the program. `ENABLED` if there are offers for at least one region.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatus_GlobalState_Enabled
 *        Program is enabled and offers are uploaded for at least one country.
 *        (Value: "ENABLED")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatus_GlobalState_NoOffersUploaded
 *        No products have been uploaded for any region. Upload products to
 *        Merchant Center. (Value: "NO_OFFERS_UPLOADED")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatus_GlobalState_NotEnabled
 *        Program is not enabled for any country. (Value: "NOT_ENABLED")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatus_GlobalState_ProgramStateUnspecified
 *        State is unknown. (Value: "PROGRAM_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *globalState;

/**
 *  Status of the program in each region. Regions with the same status and
 *  review eligibility are grouped together in `regionCodes`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_FreeListingsProgramStatusRegionStatus *> *regionStatuses;

@end


/**
 *  Status of program and region.
 */
@interface GTLRShoppingContent_FreeListingsProgramStatusRegionStatus : GTLRObject

/**
 *  Date by which eligibilityStatus will go from `WARNING` to `DISAPPROVED`.
 *  Only visible when your eligibilityStatus is WARNING. In [ISO
 *  8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DD`.
 */
@property(nonatomic, copy, nullable) NSString *disapprovalDate;

/**
 *  Eligibility status of the standard free listing program.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_EligibilityStatus_Approved
 *        If the account has no issues and review is completed successfully.
 *        (Value: "APPROVED")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_EligibilityStatus_Disapproved
 *        There are one or more issues that needs to be resolved for account to
 *        be active for the program. Detailed list of account issues are
 *        available in
 *        [accountstatuses](https://developers.google.com/shopping-content/reference/rest/v2.1/accountstatuses)
 *        API. (Value: "DISAPPROVED")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_EligibilityStatus_Onboarding
 *        Program is currently onboarding. Upload valid offers to complete
 *        onboarding. (Value: "ONBOARDING")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_EligibilityStatus_PendingReview
 *        Account is waiting for review to start. (Value: "PENDING_REVIEW")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_EligibilityStatus_StateUnspecified
 *        State is not known. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_EligibilityStatus_UnderReview
 *        Account is under review. (Value: "UNDER_REVIEW")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_EligibilityStatus_Warning
 *        If account has issues but offers are servable. Some of the issue can
 *        make account DISAPPROVED after a certain deadline. (Value: "WARNING")
 */
@property(nonatomic, copy, nullable) NSString *eligibilityStatus;

/** Issues that must be fixed to be eligible for review. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *onboardingIssues;

/**
 *  The two-letter [ISO 3166-1
 *  alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes for all the
 *  regions with the same `eligibilityStatus` and `reviewEligibility`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *regionCodes;

/**
 *  If a program is eligible for review in a specific region. Only visible if
 *  `eligibilityStatus` is `DISAPPROVED`.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewEligibilityStatus_Eligible
 *        Account is eligible for review for a specified region code. (Value:
 *        "ELIGIBLE")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewEligibilityStatus_Ineligible
 *        Account is not eligible for review for a specified region code.
 *        (Value: "INELIGIBLE")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewEligibilityStatus_ReviewEligibilityUnspecified
 *        Review eligibility state is unknown. (Value:
 *        "REVIEW_ELIGIBILITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *reviewEligibilityStatus;

/**
 *  Review ineligibility reason if account is not eligible for review.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_AlreadyReviewed
 *        Account was already reviewd. (Value: "ALREADY_REVIEWED")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_AlreadyUnderReview
 *        Account is already under review. (Value: "ALREADY_UNDER_REVIEW")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_InCooldownPeriod
 *        Cooldown period applies. Wait until cooldown period ends. (Value:
 *        "IN_COOLDOWN_PERIOD")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_IsRetired
 *        Account is retired. Should not appear in MC. (Value: "IS_RETIRED")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_NoReviewRequired
 *        No issues available to review. (Value: "NO_REVIEW_REQUIRED")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_NotEnoughOffers
 *        Not enough offers uploaded for this country. (Value:
 *        "NOT_ENOUGH_OFFERS")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_OnboardingIssues
 *        All onboarding issues needs to be fixed. (Value: "ONBOARDING_ISSUES")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_ReviewIneligibilityReasonUnspecified
 *        Requesting a review from Google is not possible. (Value:
 *        "REVIEW_INELIGIBILITY_REASON_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_FreeListingsProgramStatusRegionStatus_ReviewIneligibilityReason_WillBeReviewedAutomatically
 *        Account will be automatically reviewed at the end of the grace period.
 *        (Value: "WILL_BE_REVIEWED_AUTOMATICALLY")
 */
@property(nonatomic, copy, nullable) NSString *reviewIneligibilityReason;

/**
 *  Reason a program in a specific region isn’t eligible for review. Only
 *  visible if `reviewEligibilityStatus` is `INELIGIBLE`.
 */
@property(nonatomic, copy, nullable) NSString *reviewIneligibilityReasonDescription;

/**
 *  Additional information for ineligibility. If `reviewIneligibilityReason` is
 *  `IN_COOLDOWN_PERIOD`, a timestamp for the end of the cooldown period is
 *  provided.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_FreeListingsProgramStatusReviewIneligibilityReasonDetails *reviewIneligibilityReasonDetails;

/**
 *  Issues evaluated in the review process. Fix all issues before requesting a
 *  review.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *reviewIssues;

@end


/**
 *  Additional details for review ineligibility reasons.
 */
@interface GTLRShoppingContent_FreeListingsProgramStatusReviewIneligibilityReasonDetails : GTLRObject

/**
 *  This timestamp represents end of cooldown period for review ineligbility
 *  reason `IN_COOLDOWN_PERIOD`.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *cooldownTime;

@end


/**
 *  GTLRShoppingContent_GmbAccounts
 */
@interface GTLRShoppingContent_GmbAccounts : GTLRObject

/**
 *  The ID of the Merchant Center account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *accountId;

/** A list of Business Profiles which are available to the merchant. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_GmbAccountsGmbAccount *> *gmbAccounts;

@end


/**
 *  GTLRShoppingContent_GmbAccountsGmbAccount
 */
@interface GTLRShoppingContent_GmbAccountsGmbAccount : GTLRObject

/** The email which identifies the Business Profile. */
@property(nonatomic, copy, nullable) NSString *email;

/**
 *  Number of listings under this account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *listingCount;

/** The name of the Business Profile. */
@property(nonatomic, copy, nullable) NSString *name;

/** The type of the Business Profile (User or Business). */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  A non-empty list of row or column headers for a table. Exactly one of
 *  `prices`, `weights`, `numItems`, `postalCodeGroupNames`, or `location` must
 *  be set.
 */
@interface GTLRShoppingContent_Headers : GTLRObject

/**
 *  A list of location ID sets. Must be non-empty. Can only be set if all other
 *  fields are not set.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_LocationIdSet *> *locations;

/**
 *  A list of inclusive number of items upper bounds. The last value can be
 *  `"infinity"`. For example `["10", "50", "infinity"]` represents the headers
 *  "<= 10 items", "<= 50 items", and "> 50 items". Must be non-empty. Can only
 *  be set if all other fields are not set.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *numberOfItems;

/**
 *  A list of postal group names. The last value can be `"all other locations"`.
 *  Example: `["zone 1", "zone 2", "all other locations"]`. The referred postal
 *  code groups must match the delivery country of the service. Must be
 *  non-empty. Can only be set if all other fields are not set.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *postalCodeGroupNames;

/**
 *  A list of inclusive order price upper bounds. The last price's value can be
 *  `"infinity"`. For example `[{"value": "10", "currency": "USD"}, {"value":
 *  "500", "currency": "USD"}, {"value": "infinity", "currency": "USD"}]`
 *  represents the headers "<= $10", "<= $500", and "> $500". All prices within
 *  a service must have the same currency. Must be non-empty. Can only be set if
 *  all other fields are not set.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_Price *> *prices;

/**
 *  A list of inclusive order weight upper bounds. The last weight's value can
 *  be `"infinity"`. For example `[{"value": "10", "unit": "kg"}, {"value":
 *  "50", "unit": "kg"}, {"value": "infinity", "unit": "kg"}]` represents the
 *  headers "<= 10kg", "<= 50kg", and "> 50kg". All weights within a service
 *  must have the same unit. Must be non-empty. Can only be set if all other
 *  fields are not set.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_Weight *> *weights;

@end


/**
 *  GTLRShoppingContent_HolidayCutoff
 */
@interface GTLRShoppingContent_HolidayCutoff : GTLRObject

/**
 *  Date of the order deadline, in ISO 8601 format. For example, "2016-11-29"
 *  for 29th November 2016. Required.
 */
@property(nonatomic, copy, nullable) NSString *deadlineDate;

/**
 *  Hour of the day on the deadline date until which the order has to be placed
 *  to qualify for the delivery guarantee. Possible values are: 0 (midnight), 1,
 *  ..., 12 (noon), 13, ..., 23. Required.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deadlineHour;

/**
 *  Timezone identifier for the deadline hour (for example, "Europe/Zurich").
 *  List of identifiers. Required.
 */
@property(nonatomic, copy, nullable) NSString *deadlineTimezone;

/** Unique identifier for the holiday. Required. */
@property(nonatomic, copy, nullable) NSString *holidayId;

/**
 *  Date on which the deadline will become visible to consumers in ISO 8601
 *  format. For example, "2016-10-31" for 31st October 2016. Required.
 */
@property(nonatomic, copy, nullable) NSString *visibleFromDate;

@end


/**
 *  GTLRShoppingContent_HolidaysHoliday
 */
@interface GTLRShoppingContent_HolidaysHoliday : GTLRObject

/**
 *  The CLDR territory code of the country in which the holiday is available.
 *  For example, "US", "DE", "GB". A holiday cutoff can only be configured in a
 *  shipping settings service with matching delivery country. Always present.
 */
@property(nonatomic, copy, nullable) NSString *countryCode;

/**
 *  Date of the holiday, in ISO 8601 format. For example, "2016-12-25" for
 *  Christmas 2016. Always present.
 */
@property(nonatomic, copy, nullable) NSString *date;

/**
 *  Date on which the order has to arrive at the customer's, in ISO 8601 format.
 *  For example, "2016-12-24" for 24th December 2016. Always present.
 */
@property(nonatomic, copy, nullable) NSString *deliveryGuaranteeDate;

/**
 *  Hour of the day in the delivery location's timezone on the guaranteed
 *  delivery date by which the order has to arrive at the customer's. Possible
 *  values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Always present.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deliveryGuaranteeHour;

/**
 *  Unique identifier for the holiday to be used when configuring holiday
 *  cutoffs. Always present.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The holiday type. Always present. Acceptable values are: - "`Christmas`" -
 *  "`Easter`" - "`Father's Day`" - "`Halloween`" - "`Independence Day (USA)`" -
 *  "`Mother's Day`" - "`Thanksgiving`" - "`Valentine's Day`"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Map of inapplicability details.
 */
@interface GTLRShoppingContent_InapplicabilityDetails : GTLRObject

/**
 *  Count of this inapplicable reason code.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *inapplicableCount;

/**
 *  Reason code this rule was not applicable.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_AlreadyWinningBuybox
 *        This product can already win the buybox without rule. (Value:
 *        "ALREADY_WINNING_BUYBOX")
 *    @arg @c kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_CannotBeatBuyboxWinner
 *        The rule set for this product cannot beat the buybox winner. (Value:
 *        "CANNOT_BEAT_BUYBOX_WINNER")
 *    @arg @c kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_InapplicableReasonUnspecified
 *        Default value. Should not be used. (Value:
 *        "INAPPLICABLE_REASON_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_InvalidAutoPriceMin
 *        The auto_pricing_min_price is invalid. For example, it is missing or <
 *        0. (Value: "INVALID_AUTO_PRICE_MIN")
 *    @arg @c kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_InvalidFloorConfig
 *        The floor defined in the rule is invalid. For example, it has the
 *        wrong sign which results in a floor < 0. (Value:
 *        "INVALID_FLOOR_CONFIG")
 *    @arg @c kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_RestrictionsNotMet
 *        The rule restrictions are not met. For example, this may be the case
 *        if the calculated rule price is lower than floor price in the
 *        restriction. (Value: "RESTRICTIONS_NOT_MET")
 *    @arg @c kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_TriumphedOverByOtherRuleOnOffer
 *        Another rule of a different type takes precedence over this one.
 *        (Value: "TRIUMPHED_OVER_BY_OTHER_RULE_ON_OFFER")
 *    @arg @c kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_TriumphedOverBySameTypeRule
 *        Another rule of the same type takes precedence over this one. (Value:
 *        "TRIUMPHED_OVER_BY_SAME_TYPE_RULE")
 *    @arg @c kGTLRShoppingContent_InapplicabilityDetails_InapplicableReason_Uncategorized
 *        The reason is not categorized to any known reason. (Value:
 *        "UNCATEGORIZED")
 */
@property(nonatomic, copy, nullable) NSString *inapplicableReason;

@end


/**
 *  GTLRShoppingContent_Installment
 */
@interface GTLRShoppingContent_Installment : GTLRObject

/** The amount the buyer has to pay per month. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *amount;

/**
 *  The number of installments the buyer has to pay.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *months;

@end


/**
 *  GTLRShoppingContent_InvoiceSummary
 */
@interface GTLRShoppingContent_InvoiceSummary : GTLRObject

/** Summary of the total amounts of the additional charges. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_InvoiceSummaryAdditionalChargeSummary *> *additionalChargeSummaries;

/** [required] Total price for the product. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Amount *productTotal;

@end


/**
 *  GTLRShoppingContent_InvoiceSummaryAdditionalChargeSummary
 */
@interface GTLRShoppingContent_InvoiceSummaryAdditionalChargeSummary : GTLRObject

/** [required] Total additional charge for this type. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Amount *totalAmount;

/**
 *  [required] Type of the additional charge. Acceptable values are: -
 *  "`shipping`"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  The IDs of labels that should be assigned to the CSS domain.
 */
@interface GTLRShoppingContent_LabelIds : GTLRObject

/**
 *  The list of label IDs.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *labelIds;

@end


/**
 *  GTLRShoppingContent_LiaAboutPageSettings
 */
@interface GTLRShoppingContent_LiaAboutPageSettings : GTLRObject

/**
 *  The status of the verification process for the About page. Acceptable values
 *  are: - "`active`" - "`inactive`" - "`pending`"
 */
@property(nonatomic, copy, nullable) NSString *status;

/** The URL for the About page. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  GTLRShoppingContent_LiaCountrySettings
 */
@interface GTLRShoppingContent_LiaCountrySettings : GTLRObject

/** The settings for the About page. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_LiaAboutPageSettings *about;

/** Required. CLDR country code (for example, "US"). */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  The status of the "Merchant hosted local storefront" feature.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hostedLocalStorefrontActive;

/** LIA inventory verification settings. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_LiaInventorySettings *inventory;

/** LIA "On Display To Order" settings. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_LiaOnDisplayToOrderSettings *onDisplayToOrder;

/** The POS data provider linked with this country. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_LiaPosDataProvider *posDataProvider;

/**
 *  The status of the "Store pickup" feature.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *storePickupActive;

@end


/**
 *  GTLRShoppingContent_LiaInventorySettings
 */
@interface GTLRShoppingContent_LiaInventorySettings : GTLRObject

/** The email of the contact for the inventory verification process. */
@property(nonatomic, copy, nullable) NSString *inventoryVerificationContactEmail;

/** The name of the contact for the inventory verification process. */
@property(nonatomic, copy, nullable) NSString *inventoryVerificationContactName;

/**
 *  The status of the verification contact. Acceptable values are: - "`active`"
 *  - "`inactive`" - "`pending`"
 */
@property(nonatomic, copy, nullable) NSString *inventoryVerificationContactStatus;

/**
 *  The status of the inventory verification process. Acceptable values are: -
 *  "`active`" - "`inactive`" - "`pending`"
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  GTLRShoppingContent_LiaOnDisplayToOrderSettings
 */
@interface GTLRShoppingContent_LiaOnDisplayToOrderSettings : GTLRObject

/** Shipping cost and policy URL. */
@property(nonatomic, copy, nullable) NSString *shippingCostPolicyUrl;

/**
 *  The status of the ?On display to order? feature. Acceptable values are: -
 *  "`active`" - "`inactive`" - "`pending`"
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  GTLRShoppingContent_LiaPosDataProvider
 */
@interface GTLRShoppingContent_LiaPosDataProvider : GTLRObject

/**
 *  The ID of the POS data provider.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *posDataProviderId;

/**
 *  The account ID by which this merchant is known to the POS data provider.
 */
@property(nonatomic, copy, nullable) NSString *posExternalAccountId;

@end


/**
 *  Local Inventory ads (LIA) settings. All methods except listposdataproviders
 *  require the admin role.
 */
@interface GTLRShoppingContent_LiaSettings : GTLRObject

/**
 *  The ID of the account to which these LIA settings belong. Ignored upon
 *  update, always present in get request responses.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *accountId;

/** The LIA settings for each country. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_LiaCountrySettings *> *countrySettings;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#liaSettings`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_LiasettingsCustomBatchRequest
 */
@interface GTLRShoppingContent_LiasettingsCustomBatchRequest : GTLRObject

/** The request entries to be processed in the batch. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_LiasettingsCustomBatchRequestEntry *> *entries;

@end


/**
 *  GTLRShoppingContent_LiasettingsCustomBatchRequestEntry
 */
@interface GTLRShoppingContent_LiasettingsCustomBatchRequestEntry : GTLRObject

/**
 *  The ID of the account for which to get/update account LIA settings.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *accountId;

/**
 *  An entry ID, unique within the batch request.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  Inventory validation contact email. Required only for
 *  SetInventoryValidationContact.
 */
@property(nonatomic, copy, nullable) NSString *contactEmail;

/**
 *  Inventory validation contact name. Required only for
 *  SetInventoryValidationContact.
 */
@property(nonatomic, copy, nullable) NSString *contactName;

/** The country code. Required only for RequestInventoryVerification. */
@property(nonatomic, copy, nullable) NSString *country;

/** The Business Profile. Required only for RequestGmbAccess. */
@property(nonatomic, copy, nullable) NSString *gmbEmail;

/**
 *  The account Lia settings to update. Only defined if the method is `update`.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_LiaSettings *liaSettings;

/**
 *  The ID of the managing account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/**
 *  The method of the batch entry. Acceptable values are: - "`get`" -
 *  "`getAccessibleGmbAccounts`" - "`requestGmbAccess`" -
 *  "`requestInventoryVerification`" - "`setInventoryVerificationContact`" -
 *  "`update`"
 */
@property(nonatomic, copy, nullable) NSString *method;

/**
 *  The ID of POS data provider. Required only for SetPosProvider.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *posDataProviderId;

/** The account ID by which this merchant is known to the POS provider. */
@property(nonatomic, copy, nullable) NSString *posExternalAccountId;

@end


/**
 *  GTLRShoppingContent_LiasettingsCustomBatchResponse
 */
@interface GTLRShoppingContent_LiasettingsCustomBatchResponse : GTLRObject

/** The result of the execution of the batch requests. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_LiasettingsCustomBatchResponseEntry *> *entries;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#liasettingsCustomBatchResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_LiasettingsCustomBatchResponseEntry
 */
@interface GTLRShoppingContent_LiasettingsCustomBatchResponseEntry : GTLRObject

/**
 *  The ID of the request entry to which this entry responds.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/** A list of errors defined if, and only if, the request failed. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Errors *errors;

/** The list of accessible Business Profiles. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_GmbAccounts *gmbAccounts;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#liasettingsCustomBatchResponseEntry`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The retrieved or updated Lia settings. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_LiaSettings *liaSettings;

/** The list of POS data providers. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_PosDataProviders *> *posDataProviders;

@end


/**
 *  GTLRShoppingContent_LiasettingsGetAccessibleGmbAccountsResponse
 */
@interface GTLRShoppingContent_LiasettingsGetAccessibleGmbAccountsResponse : GTLRObject

/**
 *  The ID of the Merchant Center account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *accountId;

/** A list of Business Profiles which are available to the merchant. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_GmbAccountsGmbAccount *> *gmbAccounts;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#liasettingsGetAccessibleGmbAccountsResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_LiasettingsListPosDataProvidersResponse
 */
@interface GTLRShoppingContent_LiasettingsListPosDataProvidersResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#liasettingsListPosDataProvidersResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The list of POS data providers for each eligible country */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_PosDataProviders *> *posDataProviders;

@end


/**
 *  GTLRShoppingContent_LiasettingsListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_LiasettingsListResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#liasettingsListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of LIA settings. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_LiaSettings *> *resources;

@end


/**
 *  GTLRShoppingContent_LiasettingsRequestGmbAccessResponse
 */
@interface GTLRShoppingContent_LiasettingsRequestGmbAccessResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#liasettingsRequestGmbAccessResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_LiasettingsRequestInventoryVerificationResponse
 */
@interface GTLRShoppingContent_LiasettingsRequestInventoryVerificationResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#liasettingsRequestInventoryVerificationResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_LiasettingsSetInventoryVerificationContactResponse
 */
@interface GTLRShoppingContent_LiasettingsSetInventoryVerificationContactResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#liasettingsSetInventoryVerificationContactResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_LiasettingsSetPosDataProviderResponse
 */
@interface GTLRShoppingContent_LiasettingsSetPosDataProviderResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#liasettingsSetPosDataProviderResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_LinkedAccount
 */
@interface GTLRShoppingContent_LinkedAccount : GTLRObject

/** The ID of the linked account. */
@property(nonatomic, copy, nullable) NSString *linkedAccountId;

/** List of provided services. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_LinkService *> *services;

@end


/**
 *  GTLRShoppingContent_LinkService
 */
@interface GTLRShoppingContent_LinkService : GTLRObject

/**
 *  Service provided to or by the linked account. Acceptable values are: -
 *  "`shoppingActionsOrderManagement`" - "`shoppingActionsProductManagement`" -
 *  "`shoppingAdsProductManagement`" - "`paymentProcessing`"
 */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  Status of the link Acceptable values are: - "`active`" - "`inactive`" -
 *  "`pending`"
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  Response message for the `ListAccountLabels` method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "accountLabels" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_ListAccountLabelsResponse : GTLRCollectionObject

/**
 *  The labels from the specified account.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountLabel *> *accountLabels;

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response for listing account return carriers.
 */
@interface GTLRShoppingContent_ListAccountReturnCarrierResponse : GTLRObject

/** List of all available account return carriers for the merchant. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_AccountReturnCarrier *> *accountReturnCarriers;

@end


/**
 *  Response message for the ListCollections method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_ListCollectionsResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The collections listed.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_Collection *> *resources;

@end


/**
 *  Response message for the ListCollectionStatuses method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_ListCollectionStatusesResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The collectionstatuses listed.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_CollectionStatus *> *resources;

@end


/**
 *  The response message for the `ListCsses` method
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "csses" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_ListCssesResponse : GTLRCollectionObject

/**
 *  The CSS domains affiliated with the specified CSS group.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_Css *> *csses;

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for the ListMethodQuotas method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "methodQuotas" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_ListMethodQuotasResponse : GTLRCollectionObject

/**
 *  The current quota usage and limits per each method.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_MethodQuota *> *methodQuotas;

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for the `ListRegions` method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "regions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_ListRegionsResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The regions from the specified merchant.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_Region *> *regions;

@end


/**
 *  Response message for the ListRepricingProductReports method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "repricingProductReports" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRShoppingContent_ListRepricingProductReportsResponse : GTLRCollectionObject

/**
 *  A token for retrieving the next page. Its absence means there is no
 *  subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Periodic reports for the given Repricing product.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_RepricingProductReport *> *repricingProductReports;

@end


/**
 *  Response message for the ListRepricingRuleReports method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "repricingRuleReports" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRShoppingContent_ListRepricingRuleReportsResponse : GTLRCollectionObject

/**
 *  A token for retrieving the next page. Its absence means there is no
 *  subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Daily reports for the given Repricing rule.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_RepricingRuleReport *> *repricingRuleReports;

@end


/**
 *  Response message for the `ListRepricingRules` method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "repricingRules" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRShoppingContent_ListRepricingRulesResponse : GTLRCollectionObject

/**
 *  A token, which can be sent as `page_token` to retrieve the next page. If
 *  this field is omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The rules from the specified merchant.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_RepricingRule *> *repricingRules;

@end


/**
 *  Response message for the `ListReturnPolicyOnline` method.
 */
@interface GTLRShoppingContent_ListReturnPolicyOnlineResponse : GTLRObject

/** The retrieved return policies. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ReturnPolicyOnline *> *returnPolicies;

@end


/**
 *  Local inventory resource. For accepted attribute values, see the local
 *  product inventory feed specification.
 */
@interface GTLRShoppingContent_LocalInventory : GTLRObject

/**
 *  Availability of the product. For accepted attribute values, see the local
 *  product inventory feed specification.
 */
@property(nonatomic, copy, nullable) NSString *availability;

/**
 *  A list of custom (merchant-provided) attributes. Can also be used to submit
 *  any attribute of the feed specification in its generic form, for example, `{
 *  "name": "size type", "value": "regular" }`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_CustomAttribute *> *customAttributes;

/** In-store product location. */
@property(nonatomic, copy, nullable) NSString *instoreProductLocation;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#localInventory`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Supported pickup method for this offer. Unless the value is "not supported",
 *  this field must be submitted together with `pickupSla`. For accepted
 *  attribute values, see the local product inventory feed specification.
 */
@property(nonatomic, copy, nullable) NSString *pickupMethod;

/**
 *  Expected date that an order will be ready for pickup relative to the order
 *  date. Must be submitted together with `pickupMethod`. For accepted attribute
 *  values, see the local product inventory feed specification.
 */
@property(nonatomic, copy, nullable) NSString *pickupSla;

/** Price of the product. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *price;

/**
 *  Quantity of the product. Must be nonnegative.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/**
 *  Sale price of the product. Mandatory if `sale_price_effective_date` is
 *  defined.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *salePrice;

/**
 *  A date range represented by a pair of ISO 8601 dates separated by a space,
 *  comma, or slash. Both dates may be specified as 'null' if undecided.
 */
@property(nonatomic, copy, nullable) NSString *salePriceEffectiveDate;

/** Required. Store code of this local inventory resource. */
@property(nonatomic, copy, nullable) NSString *storeCode;

@end


/**
 *  GTLRShoppingContent_LocalinventoryCustomBatchRequest
 */
@interface GTLRShoppingContent_LocalinventoryCustomBatchRequest : GTLRObject

/** The request entries to be processed in the batch. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_LocalinventoryCustomBatchRequestEntry *> *entries;

@end


/**
 *  Batch entry encoding a single local inventory update request.
 */
@interface GTLRShoppingContent_LocalinventoryCustomBatchRequestEntry : GTLRObject

/**
 *  An entry ID, unique within the batch request.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/** Local inventory of the product. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_LocalInventory *localInventory;

/**
 *  The ID of the managing account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/** Method of the batch request entry. Acceptable values are: - "`insert`" */
@property(nonatomic, copy, nullable) NSString *method;

/** The ID of the product for which to update local inventory. */
@property(nonatomic, copy, nullable) NSString *productId;

@end


/**
 *  GTLRShoppingContent_LocalinventoryCustomBatchResponse
 */
@interface GTLRShoppingContent_LocalinventoryCustomBatchResponse : GTLRObject

/** The result of the execution of the batch requests. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_LocalinventoryCustomBatchResponseEntry *> *entries;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#localinventoryCustomBatchResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  Batch entry encoding a single local inventory update response.
 */
@interface GTLRShoppingContent_LocalinventoryCustomBatchResponseEntry : GTLRObject

/**
 *  The ID of the request entry this entry responds to.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  A list of errors for failed custombatch entries. *Note:* Schema errors fail
 *  the whole request.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Errors *errors;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#localinventoryCustomBatchResponseEntry`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_LocationIdSet
 */
@interface GTLRShoppingContent_LocationIdSet : GTLRObject

/**
 *  A non-empty list of location IDs. They must all be of the same location type
 *  (for example, state).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *locationIds;

@end


/**
 *  GTLRShoppingContent_LoyaltyPoints
 */
@interface GTLRShoppingContent_LoyaltyPoints : GTLRObject

/**
 *  Name of loyalty points program. It is recommended to limit the name to 12
 *  full-width characters or 24 Roman characters.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The retailer's loyalty points in absolute value.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pointsValue;

/**
 *  The ratio of a point when converted to currency. Google assumes currency
 *  based on Merchant Center settings. If ratio is left out, it defaults to 1.0.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ratio;

@end


/**
 *  Order return. Production access (all methods) requires the order manager
 *  role. Sandbox access does not.
 */
@interface GTLRShoppingContent_MerchantOrderReturn : GTLRObject

/** The date of creation of the return, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *creationDate;

/** Merchant defined order ID. */
@property(nonatomic, copy, nullable) NSString *merchantOrderId;

/** Google order ID. */
@property(nonatomic, copy, nullable) NSString *orderId;

/** Order return ID generated by Google. */
@property(nonatomic, copy, nullable) NSString *orderReturnId;

/** Items of the return. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_MerchantOrderReturnItem *> *returnItems;

/** Information about shipping costs. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ReturnPricingInfo *returnPricingInfo;

/** Shipments of the return. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ReturnShipment *> *returnShipments;

@end


/**
 *  GTLRShoppingContent_MerchantOrderReturnItem
 */
@interface GTLRShoppingContent_MerchantOrderReturnItem : GTLRObject

/** The reason that the customer chooses to return an item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_CustomerReturnReason *customerReturnReason;

/**
 *  Product level item ID. If the returned items are of the same product, they
 *  will have the same ID.
 */
@property(nonatomic, copy, nullable) NSString *itemId;

/** The reason that the merchant chose to reject an item return. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_MerchantRejectionReason *merchantRejectionReason;

/** The reason that merchant chooses to accept a return item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RefundReason *merchantReturnReason;

/** Product data from the time of the order placement. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderLineItemProduct *product;

/** Maximum amount that can be refunded for this return item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_MonetaryAmount *refundableAmount;

/**
 *  Unit level ID for the return item. Different units of the same product will
 *  have different IDs.
 */
@property(nonatomic, copy, nullable) NSString *returnItemId;

/** IDs of the return shipments that this return item belongs to. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *returnShipmentIds;

/**
 *  ID of the original shipment group. Provided for shipments with invoice
 *  support.
 */
@property(nonatomic, copy, nullable) NSString *shipmentGroupId;

/**
 *  ID of the shipment unit assigned by the merchant. Provided for shipments
 *  with invoice support.
 */
@property(nonatomic, copy, nullable) NSString *shipmentUnitId;

/**
 *  State of the item. Acceptable values are: - "`canceled`" - "`new`" -
 *  "`received`" - "`refunded`" - "`rejected`"
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  GTLRShoppingContent_MerchantRejectionReason
 */
@interface GTLRShoppingContent_MerchantRejectionReason : GTLRObject

/**
 *  Description of the reason.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Code of the rejection reason. */
@property(nonatomic, copy, nullable) NSString *reasonCode;

@end


/**
 *  The quota information per method in the Content API.
 */
@interface GTLRShoppingContent_MethodQuota : GTLRObject

/**
 *  The method name, for example “products.list”. Method name does not contain
 *  version because quota can be shared between different API versions of the
 *  same method.
 */
@property(nonatomic, copy, nullable) NSString *method;

/**
 *  The current quota limit, for example the maximum number of calls for the
 *  method.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quotaLimit;

/**
 *  The current quota usage, for example the number of calls for the method.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quotaUsage;

@end


/**
 *  Performance metrics. Values are only set for metrics requested explicitly in
 *  the request's search query.
 */
@interface GTLRShoppingContent_Metrics : GTLRObject

/**
 *  Average order size - the average number of items in an order. **This metric
 *  cannot be segmented by product dimensions and customer_country_code.**
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *aos;

/**
 *  Average order value - the average value (total price of items) of all placed
 *  orders. The currency of the returned value is stored in the currency_code
 *  segment. If this metric is selected, 'segments.currency_code' is
 *  automatically added to the SELECT clause in the search query (unless it is
 *  explicitly selected by the user) and the currency_code segment is populated
 *  in the response. **This metric cannot be segmented by product dimensions and
 *  customer_country_code.**
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *aovMicros;

/**
 *  Number of clicks.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clicks;

/**
 *  Number of conversions divided by the number of clicks, reported on the
 *  impression date. The metric is currently available only for the
 *  FREE_PRODUCT_LISTING program.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *conversionRate;

/**
 *  Number of conversions attributed to the product, reported on the conversion
 *  date. Depending on the attribution model, a conversion might be distributed
 *  across multiple clicks, where each click gets its own credit assigned. This
 *  metric is a sum of all such credits. The metric is currently available only
 *  for the FREE_PRODUCT_LISTING program.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *conversions;

/**
 *  Value of conversions in micros attributed to the product, reported on the
 *  conversion date. The metric is currently available only for the
 *  FREE_PRODUCT_LISTING program. The currency of the returned value is stored
 *  in the currency_code segment. If this metric is selected,
 *  'segments.currency_code' is automatically added to the SELECT clause in the
 *  search query (unless it is explicitly selected by the user) and the
 *  currency_code segment is populated in the response.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *conversionValueMicros;

/**
 *  Click-through rate - the number of clicks merchant's products receive
 *  (clicks) divided by the number of times the products are shown
 *  (impressions).
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ctr;

/**
 *  Average number of days between an order being placed and the order being
 *  fully shipped, reported on the last shipment date. **This metric cannot be
 *  segmented by product dimensions and customer_country_code.**
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *daysToShip;

/**
 *  Number of times merchant's products are shown.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *impressions;

/**
 *  Average number of days between an item being ordered and the item being
 *  **This metric cannot be segmented by customer_country_code.**
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *itemDaysToShip;

/**
 *  Percentage of shipped items in relation to all finalized items (shipped or
 *  rejected by the merchant; unshipped items are not taken into account),
 *  reported on the order date. Item fill rate is lowered by merchant
 *  rejections. **This metric cannot be segmented by customer_country_code.**
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *itemFillRate;

/**
 *  Number of ordered items. Excludes customer cancellations that happened
 *  within 30 minutes of placing the order. **This metric cannot be segmented by
 *  customer_country_code.**
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *orderedItems;

/**
 *  Total price of ordered items. Excludes shipping, taxes (US only), and
 *  customer cancellations that happened within 30 minutes of placing the order.
 *  The currency of the returned value is stored in the currency_code segment.
 *  If this metric is selected, 'segments.currency_code' is automatically added
 *  to the SELECT clause in the search query (unless it is explicitly selected
 *  by the user) and the currency_code segment is populated in the response.
 *  **This metric cannot be segmented by customer_country_code.**
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *orderedItemSalesMicros;

/**
 *  Number of placed orders. Excludes customer cancellations that happened
 *  within 30 minutes of placing the order. **This metric cannot be segmented by
 *  product dimensions and customer_country_code.**
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *orders;

/**
 *  Number of ordered items canceled by the merchant, reported on the order
 *  date. **This metric cannot be segmented by customer_country_code.**
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rejectedItems;

/**
 *  Number of ordered items sent back for return, reported on the date when the
 *  merchant accepted the return. **This metric cannot be segmented by
 *  customer_country_code.**
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnedItems;

/**
 *  Total price of returned items divided by the total price of shipped items,
 *  reported on the order date. If this metric is selected,
 *  'segments.currency_code' is automatically added to the SELECT clause in the
 *  search query (unless it is explicitly selected by the user) and the
 *  currency_code segment is populated in the response. **This metric cannot be
 *  segmented by customer_country_code.**
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnRate;

/**
 *  Total price of ordered items sent back for return, reported on the date when
 *  the merchant accepted the return. The currency of the returned value is
 *  stored in the currency_code segment. If this metric is selected,
 *  'segments.currency_code' is automatically added to the SELECT clause in the
 *  search query (unless it is explicitly selected by the user) and the
 *  currency_code segment is populated in the response. **This metric cannot be
 *  segmented by customer_country_code.**
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *returnsMicros;

/**
 *  Number of shipped items, reported on the shipment date. **This metric cannot
 *  be segmented by customer_country_code.**
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shippedItems;

/**
 *  Total price of shipped items, reported on the order date. Excludes shipping
 *  and taxes (US only). The currency of the returned value is stored in the
 *  currency_code segment. If this metric is selected, 'segments.currency_code'
 *  is automatically added to the SELECT clause in the search query (unless it
 *  is explicitly selected by the user) and the currency_code segment is
 *  populated in the response. **This metric cannot be segmented by
 *  customer_country_code.**
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shippedItemSalesMicros;

/**
 *  Number of fully shipped orders, reported on the last shipment date. **This
 *  metric cannot be segmented by product dimensions and
 *  customer_country_code.**
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shippedOrders;

/**
 *  Number of ordered items not shipped up until the end of the queried day. If
 *  a multi-day period is specified in the search query, the returned value is
 *  the average number of unshipped items over the days in the queried period.
 *  **This metric cannot be segmented by customer_country_code.**
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unshippedItems;

/**
 *  Number of orders not shipped or partially shipped up until the end of the
 *  queried day. If a multi-day period is specified in the search query, the
 *  returned value is the average number of unshipped orders over the days in
 *  the queried period. **This metric cannot be segmented by product dimensions
 *  and customer_country_code.**
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unshippedOrders;

@end


/**
 *  GTLRShoppingContent_MinimumOrderValueTable
 */
@interface GTLRShoppingContent_MinimumOrderValueTable : GTLRObject

@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_MinimumOrderValueTableStoreCodeSetWithMov *> *storeCodeSetWithMovs;

@end


/**
 *  A list of store code sets sharing the same minimum order value. At least two
 *  sets are required and the last one must be empty, which signifies 'MOV for
 *  all other stores'. Each store code can only appear once across all the sets.
 *  All prices within a service must have the same currency.
 */
@interface GTLRShoppingContent_MinimumOrderValueTableStoreCodeSetWithMov : GTLRObject

/** A list of unique store codes or empty for the catch all. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *storeCodes;

/** The minimum order value for the given stores. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *value;

@end


/**
 *  GTLRShoppingContent_MonetaryAmount
 */
@interface GTLRShoppingContent_MonetaryAmount : GTLRObject

/**
 *  The pre-tax or post-tax price depends on the location of the order. - For
 *  countries (for example, "US". where price attribute excludes tax, this field
 *  corresponds to the pre-tax value. - For coutries (for example, "France")
 *  where price attribute includes tax, this field corresponds to the post-tax
 *  value .
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *priceAmount;

/**
 *  Tax value, present only for countries where price attribute excludes tax
 *  (for example, "US". No tax is referenced as 0 value with the corresponding
 *  `currency`.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *taxAmount;

@end


/**
 *  Request message for the OnboardProgram method.
 */
@interface GTLRShoppingContent_OnboardBuyOnGoogleProgramRequest : GTLRObject

/** The customer service email. */
@property(nonatomic, copy, nullable) NSString *customerServiceEmail;

@end


/**
 *  Order. Production access (all methods) requires the order manager role.
 *  Sandbox access does not.
 */
@interface GTLRShoppingContent_Order : GTLRObject

/**
 *  Whether the order was acknowledged.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *acknowledged;

/** List of key-value pairs that are attached to a given order. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderOrderAnnotation *> *annotations;

/** The billing address. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderAddress *billingAddress;

/** The details of the customer who placed the order. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderCustomer *customer;

/** Delivery details for shipments of type `delivery`. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderDeliveryDetails *deliveryDetails;

/**
 *  The REST ID of the order. Globally unique.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#order`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Line items that are ordered. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderLineItem *> *lineItems;

/**
 *  merchantId
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/** Merchant-provided ID of the order. */
@property(nonatomic, copy, nullable) NSString *merchantOrderId;

/**
 *  The net amount for the order (price part). For example, if an order was
 *  originally for $100 and a refund was issued for $20, the net amount will be
 *  $80.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *netPriceAmount;

/**
 *  The net amount for the order (tax part). Note that in certain cases due to
 *  taxable base adjustment `netTaxAmount` might not match to a sum of tax field
 *  across all lineItems and refunds.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *netTaxAmount;

/**
 *  The status of the payment. Acceptable values are: - "`paymentCaptured`" -
 *  "`paymentRejected`" - "`paymentSecured`" - "`pendingAuthorization`"
 */
@property(nonatomic, copy, nullable) NSString *paymentStatus;

/** Pickup details for shipments of type `pickup`. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderPickupDetails *pickupDetails;

/** The date when the order was placed, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *placedDate;

/**
 *  Promotions associated with the order. To determine which promotions apply to
 *  which products, check the `Promotions[].appliedItems[].lineItemId` field
 *  against the `LineItems[].id` field for each promotion. If a promotion is
 *  applied to more than 1 offerId, divide the discount value by the number of
 *  affected offers to determine how much discount to apply to each offerId.
 *  Examples: 1. To calculate price paid by the customer for a single line item
 *  including the discount: For each promotion, subtract the
 *  `LineItems[].adjustments[].priceAdjustment.value` amount from the
 *  `LineItems[].Price.value`. 2. To calculate price paid by the customer for a
 *  single line item including the discount in case of multiple quantity: For
 *  each promotion, divide the `LineItems[].adjustments[].priceAdjustment.value`
 *  by the quantity of products then subtract the resulting value from the
 *  `LineItems[].Product.Price.value` for each quantity item. Only 1 promotion
 *  can be applied to an offerId in a given order. To refund an item which had a
 *  promotion applied to it, make sure to refund the amount after first
 *  subtracting the promotion discount from the item price. More details about
 *  the program are here.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderPromotion *> *promotions;

/** Refunds for the order. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderRefund *> *refunds;

/** Shipments of the order. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderShipment *> *shipments;

/** The total cost of shipping for all items. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *shippingCost;

/** The tax for the total shipping cost. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *shippingCostTax;

/**
 *  The status of the order. Acceptable values are: - "`canceled`" -
 *  "`delivered`" - "`inProgress`" - "`partiallyDelivered`" -
 *  "`partiallyReturned`" - "`partiallyShipped`" - "`pendingShipment`" -
 *  "`returned`" - "`shipped`"
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  The party responsible for collecting and remitting taxes. Acceptable values
 *  are: - "`marketplaceFacilitator`" - "`merchant`"
 */
@property(nonatomic, copy, nullable) NSString *taxCollector;

@end


/**
 *  GTLRShoppingContent_OrderAddress
 */
@interface GTLRShoppingContent_OrderAddress : GTLRObject

/** CLDR country code (for example, "US"). */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  Strings representing the lines of the printed label for mailing the order,
 *  for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043
 *  United States
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *fullAddress;

/**
 *  Whether the address is a post office box.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isPostOfficeBox;

/**
 *  City, town or commune. May also include dependent localities or
 *  sublocalities (for example, neighborhoods or suburbs).
 */
@property(nonatomic, copy, nullable) NSString *locality;

/** Postal Code or ZIP (for example, "94043"). */
@property(nonatomic, copy, nullable) NSString *postalCode;

/** Name of the recipient. */
@property(nonatomic, copy, nullable) NSString *recipientName;

/**
 *  Top-level administrative subdivision of the country. For example, a state
 *  like California ("CA") or a province like Quebec ("QC").
 */
@property(nonatomic, copy, nullable) NSString *region;

/** Street-level part of the address. Use `\\n` to add a second line. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *streetAddress;

@end


/**
 *  GTLRShoppingContent_OrderCancellation
 */
@interface GTLRShoppingContent_OrderCancellation : GTLRObject

/**
 *  The actor that created the cancellation. Acceptable values are: -
 *  "`customer`" - "`googleBot`" - "`googleCustomerService`" -
 *  "`googlePayments`" - "`googleSabre`" - "`merchant`"
 */
@property(nonatomic, copy, nullable) NSString *actor;

/** Date on which the cancellation has been created, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *creationDate;

/**
 *  The quantity that was canceled.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/**
 *  The reason for the cancellation. Orders that are canceled with a noInventory
 *  reason will lead to the removal of the product from Buy on Google until you
 *  make an update to that product. This won't affect your Shopping ads.
 *  Acceptable values are: - "`autoPostInternal`" -
 *  "`autoPostInvalidBillingAddress`" - "`autoPostNoInventory`" -
 *  "`autoPostPriceError`" - "`autoPostUndeliverableShippingAddress`" -
 *  "`couponAbuse`" - "`customerCanceled`" - "`customerInitiatedCancel`" -
 *  "`customerSupportRequested`" - "`failToPushOrderGoogleError`" -
 *  "`failToPushOrderMerchantError`" -
 *  "`failToPushOrderMerchantFulfillmentError`" - "`failToPushOrderToMerchant`"
 *  - "`failToPushOrderToMerchantOutOfStock`" - "`invalidCoupon`" -
 *  "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" -
 *  "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" -
 *  "`paymentDeclined`" - "`priceError`" - "`returnRefundAbuse`" -
 *  "`shippingPriceError`" - "`taxError`" - "`undeliverableShippingAddress`" -
 *  "`unsupportedPoBoxAddress`" - "`failedToCaptureFunds`"
 */
@property(nonatomic, copy, nullable) NSString *reason;

/** The explanation of the reason. */
@property(nonatomic, copy, nullable) NSString *reasonText;

@end


/**
 *  GTLRShoppingContent_OrderCustomer
 */
@interface GTLRShoppingContent_OrderCustomer : GTLRObject

/** Full name of the customer. */
@property(nonatomic, copy, nullable) NSString *fullName;

/**
 *  Email address for the merchant to send value-added tax or invoice
 *  documentation of the order. Only the last document sent is made available to
 *  the customer. For more information, see About automated VAT invoicing for
 *  Buy on Google.
 */
@property(nonatomic, copy, nullable) NSString *invoiceReceivingEmail;

/** Loyalty program information. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderCustomerLoyaltyInfo *loyaltyInfo;

/**
 *  Customer's marketing preferences. Contains the marketing opt-in information
 *  that is current at the time that the merchant call. User preference
 *  selections can change from one order to the next so preferences must be
 *  checked with every order.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderCustomerMarketingRightsInfo *marketingRightsInfo;

@end


/**
 *  GTLRShoppingContent_OrderCustomerLoyaltyInfo
 */
@interface GTLRShoppingContent_OrderCustomerLoyaltyInfo : GTLRObject

/** The loyalty card/membership number. */
@property(nonatomic, copy, nullable) NSString *loyaltyNumber;

/** Name of card/membership holder, this field will be populated when */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  GTLRShoppingContent_OrderCustomerMarketingRightsInfo
 */
@interface GTLRShoppingContent_OrderCustomerMarketingRightsInfo : GTLRObject

/**
 *  Last known customer selection regarding marketing preferences. In certain
 *  cases this selection might not be known, so this field would be empty. If a
 *  customer selected `granted` in their most recent order, they can be
 *  subscribed to marketing emails. Customers who have chosen `denied` must not
 *  be subscribed, or must be unsubscribed if already opted-in. Acceptable
 *  values are: - "`denied`" - "`granted`"
 */
@property(nonatomic, copy, nullable) NSString *explicitMarketingPreference;

/**
 *  Timestamp when last time marketing preference was updated. Could be empty,
 *  if user wasn't offered a selection yet.
 */
@property(nonatomic, copy, nullable) NSString *lastUpdatedTimestamp;

/**
 *  Email address that can be used for marketing purposes. The field may be
 *  empty even if `explicitMarketingPreference` is 'granted'. This happens when
 *  retrieving an old order from the customer who deleted their account.
 */
@property(nonatomic, copy, nullable) NSString *marketingEmailAddress;

@end


/**
 *  GTLRShoppingContent_OrderDeliveryDetails
 */
@interface GTLRShoppingContent_OrderDeliveryDetails : GTLRObject

/** The delivery address */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderAddress *address;

/** The phone number of the person receiving the delivery. */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

@end


/**
 *  GTLRShoppingContent_OrderinvoicesCreateChargeInvoiceRequest
 */
@interface GTLRShoppingContent_OrderinvoicesCreateChargeInvoiceRequest : GTLRObject

/** [required] The ID of the invoice. */
@property(nonatomic, copy, nullable) NSString *invoiceId;

/** [required] Invoice summary. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_InvoiceSummary *invoiceSummary;

/** [required] Invoice details per line item. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ShipmentInvoiceLineItemInvoice *> *lineItemInvoices;

/**
 *  [required] The ID of the operation, unique across all operations for a given
 *  order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/**
 *  [required] ID of the shipment group. It is assigned by the merchant in the
 *  `shipLineItems` method and is used to group multiple line items that have
 *  the same kind of shipping charges.
 */
@property(nonatomic, copy, nullable) NSString *shipmentGroupId;

@end


/**
 *  GTLRShoppingContent_OrderinvoicesCreateChargeInvoiceResponse
 */
@interface GTLRShoppingContent_OrderinvoicesCreateChargeInvoiceResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#orderinvoicesCreateChargeInvoiceResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrderinvoicesCreateRefundInvoiceRequest
 */
@interface GTLRShoppingContent_OrderinvoicesCreateRefundInvoiceRequest : GTLRObject

/** [required] The ID of the invoice. */
@property(nonatomic, copy, nullable) NSString *invoiceId;

/**
 *  [required] The ID of the operation, unique across all operations for a given
 *  order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/**
 *  Option to create a refund-only invoice. Exactly one of `refundOnlyOption` or
 *  `returnOption` must be provided.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption *refundOnlyOption;

/**
 *  Option to create an invoice for a refund and mark all items within the
 *  invoice as returned. Exactly one of `refundOnlyOption` or `returnOption`
 *  must be provided.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption *returnOption;

/** Invoice details for different shipment groups. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ShipmentInvoice *> *shipmentInvoices;

@end


/**
 *  GTLRShoppingContent_OrderinvoicesCreateRefundInvoiceResponse
 */
@interface GTLRShoppingContent_OrderinvoicesCreateRefundInvoiceResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#orderinvoicesCreateRefundInvoiceResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption
 */
@interface GTLRShoppingContent_OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption : GTLRObject

/**
 *  Optional description of the refund reason.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [required] Reason for the refund. Acceptable values are: - "`adjustment`" -
 *  "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" -
 *  "`autoPostNoInventory`" - "`autoPostPriceError`" -
 *  "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" -
 *  "`courtesyAdjustment`" - "`customerCanceled`" -
 *  "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" -
 *  "`customerSupportRequested`" - "`deliveredLateByCarrier`" -
 *  "`deliveredTooLate`" - "`expiredItem`" - "`failToPushOrderGoogleError`" -
 *  "`failToPushOrderMerchantError`" -
 *  "`failToPushOrderMerchantFulfillmentError`" - "`failToPushOrderToMerchant`"
 *  - "`failToPushOrderToMerchantOutOfStock`" - "`feeAdjustment`" -
 *  "`invalidCoupon`" - "`lateShipmentCredit`" - "`malformedShippingAddress`" -
 *  "`merchantDidNotShipOnTime`" - "`noInventory`" - "`orderTimeout`" -
 *  "`other`" - "`paymentAbuse`" - "`paymentDeclined`" - "`priceAdjustment`" -
 *  "`priceError`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" -
 *  "`promoReallocation`" - "`qualityNotAsExpected`" - "`returnRefundAbuse`" -
 *  "`shippingCostAdjustment`" - "`shippingPriceError`" - "`taxAdjustment`" -
 *  "`taxError`" - "`undeliverableShippingAddress`" -
 *  "`unsupportedPoBoxAddress`" - "`wrongProductShipped`"
 */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  GTLRShoppingContent_OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption
 */
@interface GTLRShoppingContent_OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption : GTLRObject

/**
 *  Optional description of the return reason.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [required] Reason for the return. Acceptable values are: -
 *  "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" -
 *  "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" -
 *  "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" -
 *  "`productNotAsDescribed`" - "`qualityNotAsExpected`" -
 *  "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" -
 *  "`wrongProductShipped`"
 */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  GTLRShoppingContent_OrderLineItem
 */
@interface GTLRShoppingContent_OrderLineItem : GTLRObject

/** Price and tax adjustments applied on the line item. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderLineItemAdjustment *> *adjustments;

/** Annotations that are attached to the line item. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderMerchantProvidedAnnotation *> *annotations;

/** Cancellations of the line item. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderCancellation *> *cancellations;

/**
 *  The ID of the line item.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  Total price for the line item. For example, if two items for $10 are
 *  purchased, the total price will be $20.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *price;

/**
 *  Product data as seen by customer from the time of the order placement. Note
 *  that certain attributes values (for example, title or gtin) might be
 *  reformatted and no longer match values submitted through product feed.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderLineItemProduct *product;

/**
 *  Number of items canceled.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantityCanceled;

/**
 *  Number of items delivered.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantityDelivered;

/**
 *  Number of items ordered.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantityOrdered;

/**
 *  Number of items pending.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantityPending;

/**
 *  Number of items ready for pickup.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantityReadyForPickup;

/**
 *  Number of items returned.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantityReturned;

/**
 *  Number of items shipped.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantityShipped;

/**
 *  Number of items undeliverable.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantityUndeliverable;

/** Details of the return policy for the line item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderLineItemReturnInfo *returnInfo;

/** Returns of the line item. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderReturn *> *returns;

/** Details of the requested shipping for the line item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderLineItemShippingDetails *shippingDetails;

/**
 *  Total tax amount for the line item. For example, if two items are purchased,
 *  and each have a cost tax of $2, the total tax amount will be $4.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *tax;

@end


/**
 *  GTLRShoppingContent_OrderLineItemAdjustment
 */
@interface GTLRShoppingContent_OrderLineItemAdjustment : GTLRObject

/** Adjustment for total price of the line item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *priceAdjustment;

/** Adjustment for total tax of the line item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *taxAdjustment;

/** Type of this adjustment. Acceptable values are: - "`promotion`" */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRShoppingContent_OrderLineItemProduct
 */
@interface GTLRShoppingContent_OrderLineItemProduct : GTLRObject

/** Brand of the item. */
@property(nonatomic, copy, nullable) NSString *brand;

/**
 *  Condition or state of the item. Acceptable values are: - "`new`" -
 *  "`refurbished`" - "`used`"
 */
@property(nonatomic, copy, nullable) NSString *condition;

/** The two-letter ISO 639-1 language code for the item. */
@property(nonatomic, copy, nullable) NSString *contentLanguage;

/** Associated fees at order creation time. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderLineItemProductFee *> *fees;

/** Global Trade Item Number (GTIN) of the item. */
@property(nonatomic, copy, nullable) NSString *gtin;

/**
 *  The REST ID of the product.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** URL of an image of the item. */
@property(nonatomic, copy, nullable) NSString *imageLink;

/** Shared identifier for all variants of the same product. */
@property(nonatomic, copy, nullable) NSString *itemGroupId;

/** Manufacturer Part Number (MPN) of the item. */
@property(nonatomic, copy, nullable) NSString *mpn;

/** An identifier of the item. */
@property(nonatomic, copy, nullable) NSString *offerId;

/** Price of the item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *price;

/** URL to the cached image shown to the user when order was placed. */
@property(nonatomic, copy, nullable) NSString *shownImage;

/** The CLDR territory code of the target country of the product. */
@property(nonatomic, copy, nullable) NSString *targetCountry;

/** The title of the product. */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  Variant attributes for the item. These are dimensions of the product, such
 *  as color, gender, material, pattern, and size. You can find a comprehensive
 *  list of variant attributes here.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderLineItemProductVariantAttribute *> *variantAttributes;

@end


/**
 *  GTLRShoppingContent_OrderLineItemProductFee
 */
@interface GTLRShoppingContent_OrderLineItemProductFee : GTLRObject

/** Amount of the fee. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *amount;

/** Name of the fee. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  GTLRShoppingContent_OrderLineItemProductVariantAttribute
 */
@interface GTLRShoppingContent_OrderLineItemProductVariantAttribute : GTLRObject

/** The dimension of the variant. */
@property(nonatomic, copy, nullable) NSString *dimension;

/** The value for the dimension. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRShoppingContent_OrderLineItemReturnInfo
 */
@interface GTLRShoppingContent_OrderLineItemReturnInfo : GTLRObject

/**
 *  Required. How many days later the item can be returned.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *daysToReturn;

/**
 *  Required. Whether the item is returnable.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isReturnable;

/** Required. URL of the item return policy. */
@property(nonatomic, copy, nullable) NSString *policyUrl;

@end


/**
 *  GTLRShoppingContent_OrderLineItemShippingDetails
 */
@interface GTLRShoppingContent_OrderLineItemShippingDetails : GTLRObject

/** Required. The delivery by date, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *deliverByDate;

/** Required. Details of the shipping method. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderLineItemShippingDetailsMethod *method;

/**
 *  The promised time in minutes in which the order will be ready for pickup.
 *  This only applies to buy-online-pickup-in-store same-day order.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pickupPromiseInMinutes;

/** Required. The ship by date, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *shipByDate;

/**
 *  Type of shipment. Indicates whether `deliveryDetails` or `pickupDetails` is
 *  applicable for this shipment. Acceptable values are: - "`delivery`" -
 *  "`pickup`"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRShoppingContent_OrderLineItemShippingDetailsMethod
 */
@interface GTLRShoppingContent_OrderLineItemShippingDetailsMethod : GTLRObject

/**
 *  The carrier for the shipping. Optional. See `shipments[].carrier` for a list
 *  of acceptable values.
 */
@property(nonatomic, copy, nullable) NSString *carrier;

/**
 *  Required. Maximum transit time.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxDaysInTransit;

/** Required. The name of the shipping method. */
@property(nonatomic, copy, nullable) NSString *methodName;

/**
 *  Required. Minimum transit time.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minDaysInTransit;

@end


/**
 *  GTLRShoppingContent_OrderMerchantProvidedAnnotation
 */
@interface GTLRShoppingContent_OrderMerchantProvidedAnnotation : GTLRObject

/**
 *  Key for additional merchant provided (as key-value pairs) annotation about
 *  the line item.
 */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  Value for additional merchant provided (as key-value pairs) annotation about
 *  the line item.
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRShoppingContent_OrderOrderAnnotation
 */
@interface GTLRShoppingContent_OrderOrderAnnotation : GTLRObject

/** Key for additional google provided (as key-value pairs) annotation. */
@property(nonatomic, copy, nullable) NSString *key;

/** Value for additional google provided (as key-value pairs) annotation. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRShoppingContent_OrderPickupDetails
 */
@interface GTLRShoppingContent_OrderPickupDetails : GTLRObject

/**
 *  Address of the pickup location where the shipment should be sent. Note that
 *  `recipientName` in the address is the name of the business at the pickup
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderAddress *address;

/** Collectors authorized to pick up shipment from the pickup location. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderPickupDetailsCollector *> *collectors;

/** ID of the pickup location. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  The pickup type of this order. Acceptable values are: - "`merchantStore`" -
 *  "`merchantStoreCurbside`" - "`merchantStoreLocker`" -
 *  "`thirdPartyPickupPoint`" - "`thirdPartyLocker`"
 */
@property(nonatomic, copy, nullable) NSString *pickupType;

@end


/**
 *  GTLRShoppingContent_OrderPickupDetailsCollector
 */
@interface GTLRShoppingContent_OrderPickupDetailsCollector : GTLRObject

/** Name of the person picking up the shipment. */
@property(nonatomic, copy, nullable) NSString *name;

/** Phone number of the person picking up the shipment. */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

@end


/**
 *  GTLRShoppingContent_OrderPromotion
 */
@interface GTLRShoppingContent_OrderPromotion : GTLRObject

/**
 *  Items that this promotion may be applied to. If empty, there are no
 *  restrictions on applicable items and quantity. This field will also be empty
 *  for shipping promotions because shipping is not tied to any specific item.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderPromotionItem *> *applicableItems;

/**
 *  Items that this promotion have been applied to. Do not provide for
 *  `orders.createtestorder`. This field will be empty for shipping promotions
 *  because shipping is not tied to any specific item.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderPromotionItem *> *appliedItems;

/**
 *  Promotion end time in ISO 8601 format. Date, time, and offset required, for
 *  example, "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z".
 */
@property(nonatomic, copy, nullable) NSString *endTime;

/**
 *  Required. The party funding the promotion. Only `merchant` is supported for
 *  `orders.createtestorder`. Acceptable values are: - "`google`" - "`merchant`"
 */
@property(nonatomic, copy, nullable) NSString *funder;

/**
 *  Required. This field is used to identify promotions within merchants' own
 *  systems.
 */
@property(nonatomic, copy, nullable) NSString *merchantPromotionId;

/**
 *  Estimated discount applied to price. Amount is pre-tax or post-tax depending
 *  on location of order.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *priceValue;

/**
 *  A short title of the promotion to be shown on the checkout page. Do not
 *  provide for `orders.createtestorder`.
 */
@property(nonatomic, copy, nullable) NSString *shortTitle;

/**
 *  Promotion start time in ISO 8601 format. Date, time, and offset required,
 *  for example, "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z".
 */
@property(nonatomic, copy, nullable) NSString *startTime;

/**
 *  Required. The category of the promotion. Only `moneyOff` is supported for
 *  `orders.createtestorder`. Acceptable values are: - "`buyMGetMoneyOff`" -
 *  "`buyMGetNMoneyOff`" - "`buyMGetNPercentOff`" - "`buyMGetPercentOff`" -
 *  "`freeGift`" - "`freeGiftWithItemId`" - "`freeGiftWithValue`" -
 *  "`freeShippingOvernight`" - "`freeShippingStandard`" -
 *  "`freeShippingTwoDay`" - "`moneyOff`" - "`percentOff`" - "`rewardPoints`" -
 *  "`salePrice`"
 */
@property(nonatomic, copy, nullable) NSString *subtype;

/**
 *  Estimated discount applied to tax (if allowed by law). Do not provide for
 *  `orders.createtestorder`.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *taxValue;

/** Required. The title of the promotion. */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  Required. The scope of the promotion. Only `product` is supported for
 *  `orders.createtestorder`. Acceptable values are: - "`product`" -
 *  "`shipping`"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRShoppingContent_OrderPromotionItem
 */
@interface GTLRShoppingContent_OrderPromotionItem : GTLRObject

/**
 *  The line item ID of a product. Do not provide for `orders.createtestorder`.
 */
@property(nonatomic, copy, nullable) NSString *lineItemId;

/** Required. Offer ID of a product. Only for `orders.createtestorder`. */
@property(nonatomic, copy, nullable) NSString *offerId;

/** `orders.createtestorder`. */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  The quantity of the associated product. Do not provide for
 *  `orders.createtestorder`.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

@end


/**
 *  GTLRShoppingContent_OrderRefund
 */
@interface GTLRShoppingContent_OrderRefund : GTLRObject

/**
 *  The actor that created the refund. Acceptable values are: - "`customer`" -
 *  "`googleBot`" - "`googleCustomerService`" - "`googlePayments`" -
 *  "`googleSabre`" - "`merchant`"
 */
@property(nonatomic, copy, nullable) NSString *actor;

/** The amount that is refunded. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *amount;

/** Date on which the item has been created, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *creationDate;

/**
 *  The reason for the refund. Acceptable values are: - "`adjustment`" -
 *  "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" -
 *  "`autoPostNoInventory`" - "`autoPostPriceError`" -
 *  "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" -
 *  "`courtesyAdjustment`" - "`customerCanceled`" -
 *  "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" -
 *  "`customerSupportRequested`" - "`deliveredLateByCarrier`" -
 *  "`deliveredTooLate`" - "`expiredItem`" - "`failToPushOrderGoogleError`" -
 *  "`failToPushOrderMerchantError`" -
 *  "`failToPushOrderMerchantFulfillmentError`" - "`failToPushOrderToMerchant`"
 *  - "`failToPushOrderToMerchantOutOfStock`" - "`feeAdjustment`" -
 *  "`invalidCoupon`" - "`lateShipmentCredit`" - "`malformedShippingAddress`" -
 *  "`merchantDidNotShipOnTime`" - "`noInventory`" - "`orderTimeout`" -
 *  "`other`" - "`paymentAbuse`" - "`paymentDeclined`" - "`priceAdjustment`" -
 *  "`priceError`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" -
 *  "`promoReallocation`" - "`qualityNotAsExpected`" - "`returnRefundAbuse`" -
 *  "`shippingCostAdjustment`" - "`shippingPriceError`" - "`taxAdjustment`" -
 *  "`taxError`" - "`undeliverableShippingAddress`" -
 *  "`unsupportedPoBoxAddress`" - "`wrongProductShipped`"
 */
@property(nonatomic, copy, nullable) NSString *reason;

/** The explanation of the reason. */
@property(nonatomic, copy, nullable) NSString *reasonText;

@end


/**
 *  Order disbursement. All methods require the payment analyst role.
 */
@interface GTLRShoppingContent_OrderReportDisbursement : GTLRObject

/** The disbursement amount. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *disbursementAmount;

/** The disbursement date, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *disbursementCreationDate;

/** The date the disbursement was initiated, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *disbursementDate;

/** The ID of the disbursement. */
@property(nonatomic, copy, nullable) NSString *disbursementId;

/**
 *  The ID of the managing account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

@end


/**
 *  GTLRShoppingContent_OrderreportsListDisbursementsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "disbursements" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_OrderreportsListDisbursementsResponse : GTLRCollectionObject

/**
 *  The list of disbursements.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderReportDisbursement *> *disbursements;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#orderreportsListDisbursementsResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of disbursements. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRShoppingContent_OrderreportsListTransactionsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "transactions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_OrderreportsListTransactionsResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#orderreportsListTransactionsResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of transactions. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of transactions.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderReportTransaction *> *transactions;

@end


/**
 *  GTLRShoppingContent_OrderReportTransaction
 */
@interface GTLRShoppingContent_OrderReportTransaction : GTLRObject

/** The disbursement amount. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *disbursementAmount;

/** The date the disbursement was created, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *disbursementCreationDate;

/** The date the disbursement was initiated, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *disbursementDate;

/** The ID of the disbursement. */
@property(nonatomic, copy, nullable) NSString *disbursementId;

/**
 *  The ID of the managing account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/** Merchant-provided ID of the order. */
@property(nonatomic, copy, nullable) NSString *merchantOrderId;

/** The ID of the order. */
@property(nonatomic, copy, nullable) NSString *orderId;

/** Total amount for the items. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductAmount *productAmount;

/** The date of the transaction, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *transactionDate;

@end


/**
 *  GTLRShoppingContent_OrderReturn
 */
@interface GTLRShoppingContent_OrderReturn : GTLRObject

/**
 *  The actor that created the refund. Acceptable values are: - "`customer`" -
 *  "`googleBot`" - "`googleCustomerService`" - "`googlePayments`" -
 *  "`googleSabre`" - "`merchant`"
 */
@property(nonatomic, copy, nullable) NSString *actor;

/** Date on which the item has been created, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *creationDate;

/**
 *  Quantity that is returned.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/**
 *  The reason for the return. Acceptable values are: -
 *  "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" -
 *  "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" -
 *  "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" -
 *  "`productNotAsDescribed`" - "`qualityNotAsExpected`" -
 *  "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" -
 *  "`wrongProductShipped`"
 */
@property(nonatomic, copy, nullable) NSString *reason;

/** The explanation of the reason. */
@property(nonatomic, copy, nullable) NSString *reasonText;

@end


/**
 *  GTLRShoppingContent_OrderreturnsAcknowledgeRequest
 */
@interface GTLRShoppingContent_OrderreturnsAcknowledgeRequest : GTLRObject

/**
 *  [required] The ID of the operation, unique across all operations for a given
 *  order return.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

@end


/**
 *  GTLRShoppingContent_OrderreturnsAcknowledgeResponse
 */
@interface GTLRShoppingContent_OrderreturnsAcknowledgeResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#orderreturnsAcknowledgeResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrderreturnsCreateOrderReturnRequest
 */
@interface GTLRShoppingContent_OrderreturnsCreateOrderReturnRequest : GTLRObject

/** The list of line items to return. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderreturnsLineItem *> *lineItems;

/**
 *  The ID of the operation. Unique across all operations for a given order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/** The ID of the order. */
@property(nonatomic, copy, nullable) NSString *orderId;

/** The way of the package being returned. */
@property(nonatomic, copy, nullable) NSString *returnMethodType;

@end


/**
 *  GTLRShoppingContent_OrderreturnsCreateOrderReturnResponse
 */
@interface GTLRShoppingContent_OrderreturnsCreateOrderReturnResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#orderreturnsCreateOrderReturnResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Created order return. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_MerchantOrderReturn *orderReturn;

@end


/**
 *  GTLRShoppingContent_OrderreturnsLineItem
 */
@interface GTLRShoppingContent_OrderreturnsLineItem : GTLRObject

/**
 *  The ID of the line item. This value is assigned by Google when an order is
 *  created. Either lineItemId or productId is required.
 */
@property(nonatomic, copy, nullable) NSString *lineItemId;

/**
 *  The ID of the product to cancel. This is the REST ID used in the products
 *  service. Either lineItemId or productId is required.
 */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  The quantity of this line item.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

@end


/**
 *  GTLRShoppingContent_OrderreturnsListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_OrderreturnsListResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#orderreturnsListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of returns. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_MerchantOrderReturn *> *resources;

@end


/**
 *  GTLRShoppingContent_OrderreturnsPartialRefund
 */
@interface GTLRShoppingContent_OrderreturnsPartialRefund : GTLRObject

/**
 *  The pre-tax or post-tax amount to be refunded, depending on the location of
 *  the order.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *priceAmount;

/**
 *  Tax amount to be refunded. Note: This has different meaning depending on the
 *  location of the order.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *taxAmount;

@end


/**
 *  GTLRShoppingContent_OrderreturnsProcessRequest
 */
@interface GTLRShoppingContent_OrderreturnsProcessRequest : GTLRObject

/**
 *  Option to charge the customer return shipping cost.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fullChargeReturnShippingCost;

/**
 *  [required] The ID of the operation, unique across all operations for a given
 *  order return.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/** Refunds for original shipping fee. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderreturnsRefundOperation *refundShippingFee;

/** The list of items to return. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderreturnsReturnItem *> *returnItems;

@end


/**
 *  GTLRShoppingContent_OrderreturnsProcessResponse
 */
@interface GTLRShoppingContent_OrderreturnsProcessResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#orderreturnsProcessResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrderreturnsRefundOperation
 */
@interface GTLRShoppingContent_OrderreturnsRefundOperation : GTLRObject

/**
 *  If true, the item will be fully refunded. Allowed only when payment_type is
 *  FOP. Merchant can choose this refund option to indicate the full remaining
 *  amount of corresponding object to be refunded to the customer through FOP.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fullRefund;

/**
 *  If this is set, the item will be partially refunded. Merchant can choose
 *  this refund option to specify the customized amount that to be refunded to
 *  the customer.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderreturnsPartialRefund *partialRefund;

/**
 *  The payment way of issuing refund. Default value is ORIGINAL_FOP if not set.
 */
@property(nonatomic, copy, nullable) NSString *paymentType;

/** The explanation of the reason. */
@property(nonatomic, copy, nullable) NSString *reasonText;

/** Code of the refund reason. */
@property(nonatomic, copy, nullable) NSString *returnRefundReason;

@end


/**
 *  GTLRShoppingContent_OrderreturnsRejectOperation
 */
@interface GTLRShoppingContent_OrderreturnsRejectOperation : GTLRObject

/** The reason for the return. */
@property(nonatomic, copy, nullable) NSString *reason;

/** The explanation of the reason. */
@property(nonatomic, copy, nullable) NSString *reasonText;

@end


/**
 *  GTLRShoppingContent_OrderreturnsReturnItem
 */
@interface GTLRShoppingContent_OrderreturnsReturnItem : GTLRObject

/** Refunds the item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderreturnsRefundOperation *refund;

/** Rejects the item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderreturnsRejectOperation *reject;

/**
 *  Unit level ID for the return item. Different units of the same product will
 *  have different IDs.
 */
@property(nonatomic, copy, nullable) NSString *returnItemId;

@end


/**
 *  GTLRShoppingContent_OrdersAcknowledgeRequest
 */
@interface GTLRShoppingContent_OrdersAcknowledgeRequest : GTLRObject

/**
 *  The ID of the operation. Unique across all operations for a given order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

@end


/**
 *  GTLRShoppingContent_OrdersAcknowledgeResponse
 */
@interface GTLRShoppingContent_OrdersAcknowledgeResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersAcknowledgeResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrdersAdvanceTestOrderResponse
 */
@interface GTLRShoppingContent_OrdersAdvanceTestOrderResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersAdvanceTestOrderResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrdersCancelLineItemRequest
 */
@interface GTLRShoppingContent_OrdersCancelLineItemRequest : GTLRObject

/**
 *  The ID of the line item to cancel. Either lineItemId or productId is
 *  required.
 */
@property(nonatomic, copy, nullable) NSString *lineItemId;

/**
 *  The ID of the operation. Unique across all operations for a given order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/**
 *  The ID of the product to cancel. This is the REST ID used in the products
 *  service. Either lineItemId or productId is required.
 */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  The quantity to cancel.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/**
 *  The reason for the cancellation. Acceptable values are: -
 *  "`customerInitiatedCancel`" - "`invalidCoupon`" -
 *  "`malformedShippingAddress`" - "`noInventory`" - "`other`" - "`priceError`"
 *  - "`shippingPriceError`" - "`taxError`" - "`undeliverableShippingAddress`" -
 *  "`unsupportedPoBoxAddress`" - "`failedToCaptureFunds`"
 */
@property(nonatomic, copy, nullable) NSString *reason;

/** The explanation of the reason. */
@property(nonatomic, copy, nullable) NSString *reasonText;

@end


/**
 *  GTLRShoppingContent_OrdersCancelLineItemResponse
 */
@interface GTLRShoppingContent_OrdersCancelLineItemResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersCancelLineItemResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrdersCancelRequest
 */
@interface GTLRShoppingContent_OrdersCancelRequest : GTLRObject

/**
 *  The ID of the operation. Unique across all operations for a given order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/**
 *  The reason for the cancellation. Acceptable values are: -
 *  "`customerInitiatedCancel`" - "`invalidCoupon`" -
 *  "`malformedShippingAddress`" - "`noInventory`" - "`other`" - "`priceError`"
 *  - "`shippingPriceError`" - "`taxError`" - "`undeliverableShippingAddress`" -
 *  "`unsupportedPoBoxAddress`" - "`failedToCaptureFunds`"
 */
@property(nonatomic, copy, nullable) NSString *reason;

/** The explanation of the reason. */
@property(nonatomic, copy, nullable) NSString *reasonText;

@end


/**
 *  GTLRShoppingContent_OrdersCancelResponse
 */
@interface GTLRShoppingContent_OrdersCancelResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersCancelResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrdersCancelTestOrderByCustomerRequest
 */
@interface GTLRShoppingContent_OrdersCancelTestOrderByCustomerRequest : GTLRObject

/**
 *  The reason for the cancellation. Acceptable values are: - "`changedMind`" -
 *  "`orderedWrongItem`" - "`other`"
 */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  GTLRShoppingContent_OrdersCancelTestOrderByCustomerResponse
 */
@interface GTLRShoppingContent_OrdersCancelTestOrderByCustomerResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersCancelTestOrderByCustomerResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrdersCreateTestOrderRequest
 */
@interface GTLRShoppingContent_OrdersCreateTestOrderRequest : GTLRObject

/**
 *  The CLDR territory code of the country of the test order to create. Affects
 *  the currency and addresses of orders created through `template_name`, or the
 *  addresses of orders created through `test_order`. Acceptable values are: -
 *  "`US`" - "`FR`" Defaults to "`US`".
 */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  The test order template to use. Specify as an alternative to `testOrder` as
 *  a shortcut for retrieving a template and then creating an order using that
 *  template. Acceptable values are: - "`template1`" - "`template1a`" -
 *  "`template1b`" - "`template2`" - "`template3`"
 */
@property(nonatomic, copy, nullable) NSString *templateName;

/** The test order to create. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_TestOrder *testOrder;

@end


/**
 *  GTLRShoppingContent_OrdersCreateTestOrderResponse
 */
@interface GTLRShoppingContent_OrdersCreateTestOrderResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersCreateTestOrderResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The ID of the newly created test order. */
@property(nonatomic, copy, nullable) NSString *orderId;

@end


/**
 *  GTLRShoppingContent_OrdersCreateTestReturnRequest
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRShoppingContent_OrdersCreateTestReturnRequest : GTLRCollectionObject

/**
 *  Returned items.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrdersCustomBatchRequestEntryCreateTestReturnReturnItem *> *items;

@end


/**
 *  GTLRShoppingContent_OrdersCreateTestReturnResponse
 */
@interface GTLRShoppingContent_OrdersCreateTestReturnResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersCreateTestReturnResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The ID of the newly created test order return. */
@property(nonatomic, copy, nullable) NSString *returnId;

@end


/**
 *  GTLRShoppingContent_OrdersCustomBatchRequestEntryCreateTestReturnReturnItem
 */
@interface GTLRShoppingContent_OrdersCustomBatchRequestEntryCreateTestReturnReturnItem : GTLRObject

/** The ID of the line item to return. */
@property(nonatomic, copy, nullable) NSString *lineItemId;

/**
 *  Quantity that is returned.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

@end


/**
 *  GTLRShoppingContent_OrdersCustomBatchRequestEntryRefundItemItem
 */
@interface GTLRShoppingContent_OrdersCustomBatchRequestEntryRefundItemItem : GTLRObject

/**
 *  The total amount that is refunded. (for example, refunding $5 each for 2
 *  products should be done by setting quantity to 2 and amount to 10$) In case
 *  of multiple refunds, this should be the amount you currently want to refund
 *  to the customer.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_MonetaryAmount *amount;

/**
 *  If true, the full item will be refunded. If this is true, amount shouldn't
 *  be provided and will be ignored.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fullRefund;

/** The ID of the line item. Either lineItemId or productId is required. */
@property(nonatomic, copy, nullable) NSString *lineItemId;

/**
 *  The ID of the product. This is the REST ID used in the products service.
 *  Either lineItemId or productId is required.
 */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  The number of products that are refunded.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

@end


/**
 *  GTLRShoppingContent_OrdersCustomBatchRequestEntryRefundItemShipping
 */
@interface GTLRShoppingContent_OrdersCustomBatchRequestEntryRefundItemShipping : GTLRObject

/**
 *  The amount that is refunded. If this is not the first refund for the
 *  shipment, this should be the newly refunded amount.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *amount;

/**
 *  If set to true, all shipping costs for the order will be refunded. If this
 *  is true, amount shouldn't be provided and will be ignored. If set to false,
 *  submit the amount of the partial shipping refund, excluding the shipping
 *  tax. The shipping tax is calculated and handled on Google's side.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fullRefund;

@end


/**
 *  GTLRShoppingContent_OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo
 */
@interface GTLRShoppingContent_OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo : GTLRObject

/**
 *  The carrier handling the shipment. See `shipments[].carrier` in the Orders
 *  resource representation for a list of acceptable values.
 */
@property(nonatomic, copy, nullable) NSString *carrier;

/**
 *  Required. The ID of the shipment. This is assigned by the merchant and is
 *  unique to each shipment.
 */
@property(nonatomic, copy, nullable) NSString *shipmentId;

/** The tracking ID for the shipment. */
@property(nonatomic, copy, nullable) NSString *trackingId;

@end


/**
 *  ScheduledDeliveryDetails used to update the scheduled delivery order.
 */
@interface GTLRShoppingContent_OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails : GTLRObject

/**
 *  The phone number of the carrier fulfilling the delivery. The phone number
 *  should be formatted as the international notation in
 */
@property(nonatomic, copy, nullable) NSString *carrierPhoneNumber;

/** The date a shipment is scheduled for delivery, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *scheduledDate;

@end


/**
 *  GTLRShoppingContent_OrdersGetByMerchantOrderIdResponse
 */
@interface GTLRShoppingContent_OrdersGetByMerchantOrderIdResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersGetByMerchantOrderIdResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The requested order. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Order *order;

@end


/**
 *  GTLRShoppingContent_OrdersGetTestOrderTemplateResponse
 */
@interface GTLRShoppingContent_OrdersGetTestOrderTemplateResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersGetTestOrderTemplateResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The requested test order template.
 *
 *  Remapped to 'templateProperty' to avoid language reserved word 'template'.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_TestOrder *templateProperty;

@end


/**
 *  GTLRShoppingContent_OrderShipment
 */
@interface GTLRShoppingContent_OrderShipment : GTLRObject

/**
 *  The carrier handling the shipment. For supported carriers, Google includes
 *  the carrier name and tracking URL in emails to customers. For select
 *  supported carriers, Google also automatically updates the shipment status
 *  based on the provided shipment ID. *Note:* You can also use unsupported
 *  carriers, but emails to customers won't include the carrier name or tracking
 *  URL, and there will be no automatic order status updates. Supported carriers
 *  for "US" are: - "`ups`" (United Parcel Service) *automatic status updates* -
 *  "`usps`" (United States Postal Service) *automatic status updates* -
 *  "`fedex`" (FedEx) *automatic status updates * - "`dhl`" (DHL eCommerce)
 *  *automatic status updates* (US only) - "`ontrac`" (OnTrac) *automatic status
 *  updates * - "`dhl express`" (DHL Express) - "`deliv`" (Deliv) - "`dynamex`"
 *  (TForce) - "`lasership`" (LaserShip) - "`mpx`" (Military Parcel Xpress) -
 *  "`uds`" (United Delivery Service) - "`efw`" (Estes Forwarding Worldwide) -
 *  "`jd logistics`" (JD Logistics) - "`yunexpress`" (YunExpress) - "`china
 *  post`" (China Post) - "`china ems`" (China Post Express Mail Service) -
 *  "`singapore post`" (Singapore Post) - "`pos malaysia`" (Pos Malaysia) -
 *  "`postnl`" (PostNL) - "`ptt`" (PTT Turkish Post) - "`eub`" (ePacket) -
 *  "`chukou1`" (Chukou1 Logistics) - "`bestex`" (Best Express) - "`canada
 *  post`" (Canada Post) - "`purolator`" (Purolator) - "`canpar`" (Canpar) -
 *  "`india post`" (India Post) - "`blue dart`" (Blue Dart) - "`delhivery`"
 *  (Delhivery) - "`dtdc`" (DTDC) - "`tpc india`" (TPC India) - "`lso`" (Lone
 *  Star Overnight) - "`tww`" (Team Worldwide) - "`deliver-it`" (Deliver-IT) -
 *  "`cdl last mile`" (CDL Last Mile) Supported carriers for FR are: - "`la
 *  poste`" (La Poste) *automatic status updates * - "`colissimo`" (Colissimo by
 *  La Poste) *automatic status updates* - "`ups`" (United Parcel Service)
 *  *automatic status updates * - "`chronopost`" (Chronopost by La Poste) -
 *  "`gls`" (General Logistics Systems France) - "`dpd`" (DPD Group by GeoPost)
 *  - "`bpost`" (Belgian Post Group) - "`colis prive`" (Colis Privé) -
 *  "`boxtal`" (Boxtal) - "`geodis`" (GEODIS) - "`tnt`" (TNT) - "`db schenker`"
 *  (DB Schenker) - "`aramex`" (Aramex)
 */
@property(nonatomic, copy, nullable) NSString *carrier;

/** Date on which the shipment has been created, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *creationDate;

/**
 *  Date on which the shipment has been delivered, in ISO 8601 format. Present
 *  only if `status` is `delivered`
 */
@property(nonatomic, copy, nullable) NSString *deliveryDate;

/**
 *  The ID of the shipment.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** The line items that are shipped. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderShipmentLineItemShipment *> *lineItems;

/** Delivery details of the shipment if scheduling is needed. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderShipmentScheduledDeliveryDetails *scheduledDeliveryDetails;

/**
 *  The shipment group ID of the shipment. This is set in shiplineitems request.
 */
@property(nonatomic, copy, nullable) NSString *shipmentGroupId;

/**
 *  The status of the shipment. Acceptable values are: - "`delivered`" -
 *  "`readyForPickup`" - "`shipped`" - "`undeliverable`"
 */
@property(nonatomic, copy, nullable) NSString *status;

/** The tracking ID for the shipment. */
@property(nonatomic, copy, nullable) NSString *trackingId;

@end


/**
 *  GTLRShoppingContent_OrderShipmentLineItemShipment
 */
@interface GTLRShoppingContent_OrderShipmentLineItemShipment : GTLRObject

/**
 *  The ID of the line item that is shipped. This value is assigned by Google
 *  when an order is created. Either lineItemId or productId is required.
 */
@property(nonatomic, copy, nullable) NSString *lineItemId;

/**
 *  The ID of the product to ship. This is the REST ID used in the products
 *  service. Either lineItemId or productId is required.
 */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  The quantity that is shipped.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

@end


/**
 *  GTLRShoppingContent_OrderShipmentScheduledDeliveryDetails
 */
@interface GTLRShoppingContent_OrderShipmentScheduledDeliveryDetails : GTLRObject

/**
 *  The phone number of the carrier fulfilling the delivery. The phone number is
 *  formatted as the international notation in ITU-T Recommendation E.123 (for
 *  example, "+41 44 668 1800").
 */
@property(nonatomic, copy, nullable) NSString *carrierPhoneNumber;

/** The date a shipment is scheduled for delivery, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *scheduledDate;

@end


/**
 *  GTLRShoppingContent_OrdersInStoreRefundLineItemRequest
 */
@interface GTLRShoppingContent_OrdersInStoreRefundLineItemRequest : GTLRObject

/**
 *  The ID of the line item to return. Either lineItemId or productId is
 *  required.
 */
@property(nonatomic, copy, nullable) NSString *lineItemId;

/**
 *  The ID of the operation. Unique across all operations for a given order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/**
 *  The amount to be refunded. This may be pre-tax or post-tax depending on the
 *  location of the order. Required.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *priceAmount;

/**
 *  The ID of the product to return. This is the REST ID used in the products
 *  service. Either lineItemId or productId is required.
 */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  The quantity to return and refund.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/**
 *  The reason for the return. Acceptable values are: -
 *  "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" -
 *  "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" -
 *  "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" -
 *  "`productNotAsDescribed`" - "`qualityNotAsExpected`" -
 *  "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" -
 *  "`wrongProductShipped`"
 */
@property(nonatomic, copy, nullable) NSString *reason;

/** The explanation of the reason. */
@property(nonatomic, copy, nullable) NSString *reasonText;

/** The amount of tax to be refunded. Required. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *taxAmount;

@end


/**
 *  GTLRShoppingContent_OrdersInStoreRefundLineItemResponse
 */
@interface GTLRShoppingContent_OrdersInStoreRefundLineItemResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersInStoreRefundLineItemResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrdersListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_OrdersListResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of orders. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_Order *> *resources;

@end


/**
 *  GTLRShoppingContent_OrdersRefundItemRequest
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRShoppingContent_OrdersRefundItemRequest : GTLRCollectionObject

/**
 *  The items that are refunded. Either Item or Shipping must be provided in the
 *  request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrdersCustomBatchRequestEntryRefundItemItem *> *items;

/**
 *  The ID of the operation. Unique across all operations for a given order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/**
 *  The reason for the refund. Acceptable values are: -
 *  "`shippingCostAdjustment`" - "`priceAdjustment`" - "`taxAdjustment`" -
 *  "`feeAdjustment`" - "`courtesyAdjustment`" - "`adjustment`" -
 *  "`customerCancelled`" - "`noInventory`" - "`productNotAsDescribed`" -
 *  "`undeliverableShippingAddress`" - "`wrongProductShipped`" -
 *  "`lateShipmentCredit`" - "`deliveredLateByCarrier`" -
 *  "`productArrivedDamaged`"
 */
@property(nonatomic, copy, nullable) NSString *reason;

/** The explanation of the reason. */
@property(nonatomic, copy, nullable) NSString *reasonText;

/**
 *  The refund on shipping. Optional, but either Item or Shipping must be
 *  provided in the request.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrdersCustomBatchRequestEntryRefundItemShipping *shipping;

@end


/**
 *  GTLRShoppingContent_OrdersRefundItemResponse
 */
@interface GTLRShoppingContent_OrdersRefundItemResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersRefundItemResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrdersRefundOrderRequest
 */
@interface GTLRShoppingContent_OrdersRefundOrderRequest : GTLRObject

/**
 *  The amount that is refunded. If this is not the first refund for the order,
 *  this should be the newly refunded amount.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_MonetaryAmount *amount;

/**
 *  If true, the full order will be refunded, including shipping. If this is
 *  true, amount shouldn't be provided and will be ignored.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fullRefund;

/**
 *  The ID of the operation. Unique across all operations for a given order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/**
 *  The reason for the refund. Acceptable values are: - "`courtesyAdjustment`" -
 *  "`other`"
 */
@property(nonatomic, copy, nullable) NSString *reason;

/** The explanation of the reason. */
@property(nonatomic, copy, nullable) NSString *reasonText;

@end


/**
 *  GTLRShoppingContent_OrdersRefundOrderResponse
 */
@interface GTLRShoppingContent_OrdersRefundOrderResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersRefundOrderResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrdersRejectReturnLineItemRequest
 */
@interface GTLRShoppingContent_OrdersRejectReturnLineItemRequest : GTLRObject

/**
 *  The ID of the line item to return. Either lineItemId or productId is
 *  required.
 */
@property(nonatomic, copy, nullable) NSString *lineItemId;

/**
 *  The ID of the operation. Unique across all operations for a given order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/**
 *  The ID of the product to return. This is the REST ID used in the products
 *  service. Either lineItemId or productId is required.
 */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  The quantity to return and refund.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/**
 *  The reason for the return. Acceptable values are: - "`damagedOrUsed`" -
 *  "`missingComponent`" - "`notEligible`" - "`other`" - "`outOfReturnWindow`"
 */
@property(nonatomic, copy, nullable) NSString *reason;

/** The explanation of the reason. */
@property(nonatomic, copy, nullable) NSString *reasonText;

@end


/**
 *  GTLRShoppingContent_OrdersRejectReturnLineItemResponse
 */
@interface GTLRShoppingContent_OrdersRejectReturnLineItemResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersRejectReturnLineItemResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrdersReturnRefundLineItemRequest
 */
@interface GTLRShoppingContent_OrdersReturnRefundLineItemRequest : GTLRObject

/**
 *  The ID of the line item to return. Either lineItemId or productId is
 *  required.
 */
@property(nonatomic, copy, nullable) NSString *lineItemId;

/**
 *  The ID of the operation. Unique across all operations for a given order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/**
 *  The amount to be refunded. This may be pre-tax or post-tax depending on the
 *  location of the order. If omitted, refundless return is assumed.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *priceAmount;

/**
 *  The ID of the product to return. This is the REST ID used in the products
 *  service. Either lineItemId or productId is required.
 */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  The quantity to return and refund. Quantity is required.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/**
 *  The reason for the return. Acceptable values are: -
 *  "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" -
 *  "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" -
 *  "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" -
 *  "`productNotAsDescribed`" - "`qualityNotAsExpected`" -
 *  "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" -
 *  "`wrongProductShipped`"
 */
@property(nonatomic, copy, nullable) NSString *reason;

/** The explanation of the reason. */
@property(nonatomic, copy, nullable) NSString *reasonText;

/**
 *  The amount of tax to be refunded. Optional, but if filled, then priceAmount
 *  must be set. Calculated automatically if not provided.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *taxAmount;

@end


/**
 *  GTLRShoppingContent_OrdersReturnRefundLineItemResponse
 */
@interface GTLRShoppingContent_OrdersReturnRefundLineItemResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersReturnRefundLineItemResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrdersSetLineItemMetadataRequest
 */
@interface GTLRShoppingContent_OrdersSetLineItemMetadataRequest : GTLRObject

@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderMerchantProvidedAnnotation *> *annotations;

/**
 *  The ID of the line item to set metadata. Either lineItemId or productId is
 *  required.
 */
@property(nonatomic, copy, nullable) NSString *lineItemId;

/**
 *  The ID of the operation. Unique across all operations for a given order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/**
 *  The ID of the product to set metadata. This is the REST ID used in the
 *  products service. Either lineItemId or productId is required.
 */
@property(nonatomic, copy, nullable) NSString *productId;

@end


/**
 *  GTLRShoppingContent_OrdersSetLineItemMetadataResponse
 */
@interface GTLRShoppingContent_OrdersSetLineItemMetadataResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersSetLineItemMetadataResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrdersShipLineItemsRequest
 */
@interface GTLRShoppingContent_OrdersShipLineItemsRequest : GTLRObject

/** Line items to ship. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderShipmentLineItemShipment *> *lineItems;

/**
 *  The ID of the operation. Unique across all operations for a given order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/**
 *  ID of the shipment group. Required for orders that use the orderinvoices
 *  service.
 */
@property(nonatomic, copy, nullable) NSString *shipmentGroupId;

/**
 *  Shipment information. This field is repeated because a single line item can
 *  be shipped in several packages (and have several tracking IDs).
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo *> *shipmentInfos;

@end


/**
 *  GTLRShoppingContent_OrdersShipLineItemsResponse
 */
@interface GTLRShoppingContent_OrdersShipLineItemsResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersShipLineItemsResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrdersUpdateLineItemShippingDetailsRequest
 */
@interface GTLRShoppingContent_OrdersUpdateLineItemShippingDetailsRequest : GTLRObject

/**
 *  Updated delivery by date, in ISO 8601 format. If not specified only ship by
 *  date is updated. Provided date should be within 1 year timeframe and can't
 *  be a date in the past.
 */
@property(nonatomic, copy, nullable) NSString *deliverByDate;

/**
 *  The ID of the line item to set metadata. Either lineItemId or productId is
 *  required.
 */
@property(nonatomic, copy, nullable) NSString *lineItemId;

/**
 *  The ID of the operation. Unique across all operations for a given order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/**
 *  The ID of the product to set metadata. This is the REST ID used in the
 *  products service. Either lineItemId or productId is required.
 */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  Updated ship by date, in ISO 8601 format. If not specified only deliver by
 *  date is updated. Provided date should be within 1 year timeframe and can't
 *  be a date in the past.
 */
@property(nonatomic, copy, nullable) NSString *shipByDate;

@end


/**
 *  GTLRShoppingContent_OrdersUpdateLineItemShippingDetailsResponse
 */
@interface GTLRShoppingContent_OrdersUpdateLineItemShippingDetailsResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersUpdateLineItemShippingDetailsResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrdersUpdateMerchantOrderIdRequest
 */
@interface GTLRShoppingContent_OrdersUpdateMerchantOrderIdRequest : GTLRObject

/**
 *  The merchant order id to be assigned to the order. Must be unique per
 *  merchant.
 */
@property(nonatomic, copy, nullable) NSString *merchantOrderId;

/**
 *  The ID of the operation. Unique across all operations for a given order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

@end


/**
 *  GTLRShoppingContent_OrdersUpdateMerchantOrderIdResponse
 */
@interface GTLRShoppingContent_OrdersUpdateMerchantOrderIdResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersUpdateMerchantOrderIdResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_OrdersUpdateShipmentRequest
 */
@interface GTLRShoppingContent_OrdersUpdateShipmentRequest : GTLRObject

/**
 *  The carrier handling the shipment. Not updated if missing. See
 *  `shipments[].carrier` in the Orders resource representation for a list of
 *  acceptable values.
 */
@property(nonatomic, copy, nullable) NSString *carrier;

/**
 *  Date on which the shipment has been delivered, in ISO 8601 format. Optional
 *  and can be provided only if `status` is `delivered`.
 */
@property(nonatomic, copy, nullable) NSString *deliveryDate;

/**
 *  Date after which the pickup will expire, in ISO 8601 format. Required only
 *  when order is buy-online-pickup-in-store(BOPIS) and `status` is `ready for
 *  pickup`.
 */
@property(nonatomic, copy, nullable) NSString *lastPickupDate;

/**
 *  The ID of the operation. Unique across all operations for a given order.
 */
@property(nonatomic, copy, nullable) NSString *operationId;

/**
 *  Date on which the shipment has been ready for pickup, in ISO 8601 format.
 *  Optional and can be provided only if `status` is `ready for pickup`.
 */
@property(nonatomic, copy, nullable) NSString *readyPickupDate;

/** Delivery details of the shipment if scheduling is needed. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails *scheduledDeliveryDetails;

/** The ID of the shipment. */
@property(nonatomic, copy, nullable) NSString *shipmentId;

/**
 *  New status for the shipment. Not updated if missing. Acceptable values are:
 *  - "`delivered`" - "`undeliverable`" - "`readyForPickup`"
 */
@property(nonatomic, copy, nullable) NSString *status;

/** The tracking ID for the shipment. Not updated if missing. */
@property(nonatomic, copy, nullable) NSString *trackingId;

/**
 *  Date on which the shipment has been undeliverable, in ISO 8601 format.
 *  Optional and can be provided only if `status` is `undeliverable`.
 */
@property(nonatomic, copy, nullable) NSString *undeliveredDate;

@end


/**
 *  GTLRShoppingContent_OrdersUpdateShipmentResponse
 */
@interface GTLRShoppingContent_OrdersUpdateShipmentResponse : GTLRObject

/**
 *  The status of the execution. Acceptable values are: - "`duplicate`" -
 *  "`executed`"
 */
@property(nonatomic, copy, nullable) NSString *executionStatus;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#ordersUpdateShipmentResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  Represents a merchant trade from which signals are extracted, e.g. shipping.
 */
@interface GTLRShoppingContent_OrderTrackingSignal : GTLRObject

/**
 *  The shipping fee of the order; this value should be set to zero in the case
 *  of free shipping.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PriceAmount *customerShippingFee;

/**
 *  Required. The delivery postal code, as a continuous string without spaces or
 *  dashes, e.g. "95016". This field will be anonymized in returned
 *  OrderTrackingSignal creation response.
 */
@property(nonatomic, copy, nullable) NSString *deliveryPostalCode;

/**
 *  Required. The [CLDR territory code]
 *  (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for the
 *  shipping destination.
 */
@property(nonatomic, copy, nullable) NSString *deliveryRegionCode;

/** Information about line items in the order. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderTrackingSignalLineItemDetails *> *lineItems;

/**
 *  The Google merchant ID of this order tracking signal. This value is
 *  optional. If left unset, the caller's merchant ID is used. You must request
 *  access in order to provide data on behalf of another merchant. For more
 *  information, see [Submitting Order Tracking
 *  Signals](/shopping-content/guides/order-tracking-signals).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/**
 *  Required. The time when the order was created on the merchant side. Include
 *  the year and timezone string, if available.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_DateTime *orderCreatedTime;

/**
 *  Required. The ID of the order on the merchant side. This field will be
 *  hashed in returned OrderTrackingSignal creation response.
 */
@property(nonatomic, copy, nullable) NSString *orderId;

/**
 *  Output only. The ID that uniquely identifies this order tracking signal.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *orderTrackingSignalId;

/** The mapping of the line items to the shipment information. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderTrackingSignalShipmentLineItemMapping *> *shipmentLineItemMapping;

/** The shipping information for the order. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderTrackingSignalShippingInfo *> *shippingInfo;

@end


/**
 *  The line items of the order.
 */
@interface GTLRShoppingContent_OrderTrackingSignalLineItemDetails : GTLRObject

/** Brand of the product. */
@property(nonatomic, copy, nullable) NSString *brand;

/** The Global Trade Item Number. */
@property(nonatomic, copy, nullable) NSString *gtin;

/** Required. The ID for this line item. */
@property(nonatomic, copy, nullable) NSString *lineItemId;

/** The manufacturer part number. */
@property(nonatomic, copy, nullable) NSString *mpn;

/**
 *  Plain text description of this product (deprecated: Please use product_title
 *  instead).
 */
@property(nonatomic, copy, nullable) NSString *productDescription;

/**
 *  Required. The Content API REST ID of the product, in the form
 *  channel:contentLanguage:targetCountry:offerId.
 */
@property(nonatomic, copy, nullable) NSString *productId;

/** Plain text title of this product. */
@property(nonatomic, copy, nullable) NSString *productTitle;

/**
 *  The quantity of the line item in the order.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/** Merchant SKU for this item (deprecated). */
@property(nonatomic, copy, nullable) NSString *sku;

/**
 *  Universal product code for this item (deprecated: Please use GTIN instead).
 */
@property(nonatomic, copy, nullable) NSString *upc;

@end


/**
 *  Represents how many items are in the shipment for the given shipment_id and
 *  line_item_id.
 */
@interface GTLRShoppingContent_OrderTrackingSignalShipmentLineItemMapping : GTLRObject

/** Required. The line item ID. */
@property(nonatomic, copy, nullable) NSString *lineItemId;

/**
 *  The line item quantity in the shipment.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/**
 *  Required. The shipment ID. This field will be hashed in returned
 *  OrderTrackingSignal creation response.
 */
@property(nonatomic, copy, nullable) NSString *shipmentId;

@end


/**
 *  The shipping information for the order.
 */
@interface GTLRShoppingContent_OrderTrackingSignalShippingInfo : GTLRObject

/**
 *  The time when the shipment was actually delivered. Include the year and
 *  timezone string, if available. This field is required, if one of the
 *  following fields is absent: tracking_id or carrier_name.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_DateTime *actualDeliveryTime;

/**
 *  The name of the shipping carrier for the delivery. This field is required if
 *  one of the following fields is absent: earliest_delivery_promise_time,
 *  latest_delivery_promise_time, and actual_delivery_time.
 */
@property(nonatomic, copy, nullable) NSString *carrierName;

/** The service type for fulfillment, e.g., GROUND, FIRST_CLASS, etc. */
@property(nonatomic, copy, nullable) NSString *carrierServiceName;

/**
 *  The earliest delivery promised time. Include the year and timezone string,
 *  if available. This field is required, if one of the following fields is
 *  absent: tracking_id or carrier_name.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_DateTime *earliestDeliveryPromiseTime;

/**
 *  The latest delivery promised time. Include the year and timezone string, if
 *  available. This field is required, if one of the following fields is absent:
 *  tracking_id or carrier_name.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_DateTime *latestDeliveryPromiseTime;

/**
 *  The origin postal code, as a continuous string without spaces or dashes,
 *  e.g. "95016". This field will be anonymized in returned OrderTrackingSignal
 *  creation response.
 */
@property(nonatomic, copy, nullable) NSString *originPostalCode;

/**
 *  The [CLDR territory code]
 *  (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for the
 *  shipping origin.
 */
@property(nonatomic, copy, nullable) NSString *originRegionCode;

/**
 *  Required. The shipment ID. This field will be hashed in returned
 *  OrderTrackingSignal creation response.
 */
@property(nonatomic, copy, nullable) NSString *shipmentId;

/**
 *  The time when the shipment was shipped. Include the year and timezone
 *  string, if available.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_DateTime *shippedTime;

/**
 *  The status of the shipment.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_OrderTrackingSignalShippingInfo_ShippingStatus_Delivered
 *        The shipment is already delivered. (Value: "DELIVERED")
 *    @arg @c kGTLRShoppingContent_OrderTrackingSignalShippingInfo_ShippingStatus_Shipped
 *        All items are shipped. (Value: "SHIPPED")
 *    @arg @c kGTLRShoppingContent_OrderTrackingSignalShippingInfo_ShippingStatus_ShippingStateUnspecified
 *        The shipping status is not known to merchant. (Value:
 *        "SHIPPING_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *shippingStatus;

/**
 *  The tracking ID of the shipment. This field is required if one of the
 *  following fields is absent: earliest_delivery_promise_time,
 *  latest_delivery_promise_time, and actual_delivery_time.
 */
@property(nonatomic, copy, nullable) NSString *trackingId;

@end


/**
 *  Request message for the PauseProgram method.
 */
@interface GTLRShoppingContent_PauseBuyOnGoogleProgramRequest : GTLRObject
@end


/**
 *  Additional information required for PAYMENT_SERVICE_PROVIDER link type.
 */
@interface GTLRShoppingContent_PaymentServiceProviderLinkInfo : GTLRObject

/**
 *  The business country of the merchant account as identified by the third
 *  party service provider.
 */
@property(nonatomic, copy, nullable) NSString *externalAccountBusinessCountry;

/**
 *  The id used by the third party service provider to identify the merchant.
 */
@property(nonatomic, copy, nullable) NSString *externalAccountId;

@end


/**
 *  GTLRShoppingContent_PickupCarrierService
 */
@interface GTLRShoppingContent_PickupCarrierService : GTLRObject

/** The name of the pickup carrier (for example, `"UPS"`). Required. */
@property(nonatomic, copy, nullable) NSString *carrierName;

/**
 *  The name of the pickup service (for example, `"Access point"`). Required.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

@end


/**
 *  GTLRShoppingContent_PickupServicesPickupService
 */
@interface GTLRShoppingContent_PickupServicesPickupService : GTLRObject

/** The name of the carrier (for example, `"UPS"`). Always present. */
@property(nonatomic, copy, nullable) NSString *carrierName;

/**
 *  The CLDR country code of the carrier (for example, "US"). Always present.
 */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  The name of the pickup service (for example, `"Access point"`). Always
 *  present.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

@end


/**
 *  GTLRShoppingContent_PosCustomBatchRequest
 */
@interface GTLRShoppingContent_PosCustomBatchRequest : GTLRObject

/** The request entries to be processed in the batch. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_PosCustomBatchRequestEntry *> *entries;

@end


/**
 *  GTLRShoppingContent_PosCustomBatchRequestEntry
 */
@interface GTLRShoppingContent_PosCustomBatchRequestEntry : GTLRObject

/**
 *  An entry ID, unique within the batch request.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  The inventory to submit. This should be set only if the method is
 *  `inventory`.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PosInventory *inventory;

/**
 *  The ID of the POS data provider.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/**
 *  The method of the batch entry. Acceptable values are: - "`delete`" - "`get`"
 *  - "`insert`" - "`inventory`" - "`sale`"
 */
@property(nonatomic, copy, nullable) NSString *method;

/**
 *  The sale information to submit. This should be set only if the method is
 *  `sale`.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PosSale *sale;

/**
 *  The store information to submit. This should be set only if the method is
 *  `insert`.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PosStore *store;

/**
 *  The store code. This should be set only if the method is `delete` or `get`.
 */
@property(nonatomic, copy, nullable) NSString *storeCode;

/**
 *  The ID of the account for which to get/submit data.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *targetMerchantId;

@end


/**
 *  GTLRShoppingContent_PosCustomBatchResponse
 */
@interface GTLRShoppingContent_PosCustomBatchResponse : GTLRObject

/** The result of the execution of the batch requests. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_PosCustomBatchResponseEntry *> *entries;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#posCustomBatchResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_PosCustomBatchResponseEntry
 */
@interface GTLRShoppingContent_PosCustomBatchResponseEntry : GTLRObject

/**
 *  The ID of the request entry to which this entry responds.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/** A list of errors defined if, and only if, the request failed. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Errors *errors;

/** The updated inventory information. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PosInventory *inventory;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#posCustomBatchResponseEntry`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The updated sale information. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PosSale *sale;

/** The retrieved or updated store information. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PosStore *store;

@end


/**
 *  GTLRShoppingContent_PosDataProviders
 */
@interface GTLRShoppingContent_PosDataProviders : GTLRObject

/** Country code. */
@property(nonatomic, copy, nullable) NSString *country;

/** A list of POS data providers. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_PosDataProvidersPosDataProvider *> *posDataProviders;

@end


/**
 *  GTLRShoppingContent_PosDataProvidersPosDataProvider
 */
@interface GTLRShoppingContent_PosDataProvidersPosDataProvider : GTLRObject

/** The display name of Pos data Provider. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** The full name of this POS data Provider. */
@property(nonatomic, copy, nullable) NSString *fullName;

/**
 *  The ID of the account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *providerId;

@end


/**
 *  The absolute quantity of an item available at the given store.
 */
@interface GTLRShoppingContent_PosInventory : GTLRObject

/** Required. The two-letter ISO 639-1 language code for the item. */
@property(nonatomic, copy, nullable) NSString *contentLanguage;

/** Global Trade Item Number. */
@property(nonatomic, copy, nullable) NSString *gtin;

/** Required. A unique identifier for the item. */
@property(nonatomic, copy, nullable) NSString *itemId;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#posInventory`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Required. The current price of the item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *price;

/**
 *  Required. The available quantity of the item.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/**
 *  Required. The identifier of the merchant's store. Either a `storeCode`
 *  inserted through the API or the code of the store in a Business Profile.
 */
@property(nonatomic, copy, nullable) NSString *storeCode;

/** Required. The CLDR territory code for the item. */
@property(nonatomic, copy, nullable) NSString *targetCountry;

/** Required. The inventory timestamp, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *timestamp;

@end


/**
 *  GTLRShoppingContent_PosInventoryRequest
 */
@interface GTLRShoppingContent_PosInventoryRequest : GTLRObject

/** Required. The two-letter ISO 639-1 language code for the item. */
@property(nonatomic, copy, nullable) NSString *contentLanguage;

/** Global Trade Item Number. */
@property(nonatomic, copy, nullable) NSString *gtin;

/** Required. A unique identifier for the item. */
@property(nonatomic, copy, nullable) NSString *itemId;

/** Required. The current price of the item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *price;

/**
 *  Required. The available quantity of the item.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/**
 *  Required. The identifier of the merchant's store. Either a `storeCode`
 *  inserted through the API or the code of the store in a Business Profile.
 */
@property(nonatomic, copy, nullable) NSString *storeCode;

/** Required. The CLDR territory code for the item. */
@property(nonatomic, copy, nullable) NSString *targetCountry;

/** Required. The inventory timestamp, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *timestamp;

@end


/**
 *  GTLRShoppingContent_PosInventoryResponse
 */
@interface GTLRShoppingContent_PosInventoryResponse : GTLRObject

/** Required. The two-letter ISO 639-1 language code for the item. */
@property(nonatomic, copy, nullable) NSString *contentLanguage;

/** Global Trade Item Number. */
@property(nonatomic, copy, nullable) NSString *gtin;

/** Required. A unique identifier for the item. */
@property(nonatomic, copy, nullable) NSString *itemId;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#posInventoryResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Required. The current price of the item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *price;

/**
 *  Required. The available quantity of the item.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/**
 *  Required. The identifier of the merchant's store. Either a `storeCode`
 *  inserted through the API or the code of the store in a Business Profile.
 */
@property(nonatomic, copy, nullable) NSString *storeCode;

/** Required. The CLDR territory code for the item. */
@property(nonatomic, copy, nullable) NSString *targetCountry;

/** Required. The inventory timestamp, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *timestamp;

@end


/**
 *  GTLRShoppingContent_PosListResponse
 */
@interface GTLRShoppingContent_PosListResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#posListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_PosStore *> *resources;

@end


/**
 *  The change of the available quantity of an item at the given store.
 */
@interface GTLRShoppingContent_PosSale : GTLRObject

/** Required. The two-letter ISO 639-1 language code for the item. */
@property(nonatomic, copy, nullable) NSString *contentLanguage;

/** Global Trade Item Number. */
@property(nonatomic, copy, nullable) NSString *gtin;

/** Required. A unique identifier for the item. */
@property(nonatomic, copy, nullable) NSString *itemId;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#posSale`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Required. The price of the item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *price;

/**
 *  Required. The relative change of the available quantity. Negative for items
 *  returned.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/** A unique ID to group items from the same sale event. */
@property(nonatomic, copy, nullable) NSString *saleId;

/**
 *  Required. The identifier of the merchant's store. Either a `storeCode`
 *  inserted through the API or the code of the store in a Business Profile.
 */
@property(nonatomic, copy, nullable) NSString *storeCode;

/** Required. The CLDR territory code for the item. */
@property(nonatomic, copy, nullable) NSString *targetCountry;

/** Required. The inventory timestamp, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *timestamp;

@end


/**
 *  GTLRShoppingContent_PosSaleRequest
 */
@interface GTLRShoppingContent_PosSaleRequest : GTLRObject

/** Required. The two-letter ISO 639-1 language code for the item. */
@property(nonatomic, copy, nullable) NSString *contentLanguage;

/** Global Trade Item Number. */
@property(nonatomic, copy, nullable) NSString *gtin;

/** Required. A unique identifier for the item. */
@property(nonatomic, copy, nullable) NSString *itemId;

/** Required. The price of the item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *price;

/**
 *  Required. The relative change of the available quantity. Negative for items
 *  returned.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/** A unique ID to group items from the same sale event. */
@property(nonatomic, copy, nullable) NSString *saleId;

/**
 *  Required. The identifier of the merchant's store. Either a `storeCode`
 *  inserted through the API or the code of the store in a Business Profile.
 */
@property(nonatomic, copy, nullable) NSString *storeCode;

/** Required. The CLDR territory code for the item. */
@property(nonatomic, copy, nullable) NSString *targetCountry;

/** Required. The inventory timestamp, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *timestamp;

@end


/**
 *  GTLRShoppingContent_PosSaleResponse
 */
@interface GTLRShoppingContent_PosSaleResponse : GTLRObject

/** Required. The two-letter ISO 639-1 language code for the item. */
@property(nonatomic, copy, nullable) NSString *contentLanguage;

/** Global Trade Item Number. */
@property(nonatomic, copy, nullable) NSString *gtin;

/** Required. A unique identifier for the item. */
@property(nonatomic, copy, nullable) NSString *itemId;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#posSaleResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Required. The price of the item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *price;

/**
 *  Required. The relative change of the available quantity. Negative for items
 *  returned.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantity;

/** A unique ID to group items from the same sale event. */
@property(nonatomic, copy, nullable) NSString *saleId;

/**
 *  Required. The identifier of the merchant's store. Either a `storeCode`
 *  inserted through the API or the code of the store in a Business Profile.
 */
@property(nonatomic, copy, nullable) NSString *storeCode;

/** Required. The CLDR territory code for the item. */
@property(nonatomic, copy, nullable) NSString *targetCountry;

/** Required. The inventory timestamp, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *timestamp;

@end


/**
 *  Store resource.
 */
@interface GTLRShoppingContent_PosStore : GTLRObject

/** The business type of the store. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *gcidCategory;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#posStore`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The store phone number. */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

/** The Google Place Id of the store location. */
@property(nonatomic, copy, nullable) NSString *placeId;

/** Required. The street address of the store. */
@property(nonatomic, copy, nullable) NSString *storeAddress;

/** Required. A store identifier that is unique for the given merchant. */
@property(nonatomic, copy, nullable) NSString *storeCode;

/** The merchant or store name. */
@property(nonatomic, copy, nullable) NSString *storeName;

/** The website url for the store or merchant. */
@property(nonatomic, copy, nullable) NSString *websiteUrl;

@end


/**
 *  GTLRShoppingContent_PostalCodeGroup
 */
@interface GTLRShoppingContent_PostalCodeGroup : GTLRObject

/**
 *  The CLDR territory code of the country the postal code group applies to.
 *  Required.
 */
@property(nonatomic, copy, nullable) NSString *country;

/** The name of the postal code group, referred to in headers. Required. */
@property(nonatomic, copy, nullable) NSString *name;

/** A range of postal codes. Required. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_PostalCodeRange *> *postalCodeRanges;

@end


/**
 *  GTLRShoppingContent_PostalCodeRange
 */
@interface GTLRShoppingContent_PostalCodeRange : GTLRObject

/**
 *  A postal code or a pattern of the form `prefix*` denoting the inclusive
 *  lower bound of the range defining the area. Examples values: `"94108"`,
 *  `"9410*"`, `"9*"`. Required.
 */
@property(nonatomic, copy, nullable) NSString *postalCodeRangeBegin;

/**
 *  A postal code or a pattern of the form `prefix*` denoting the inclusive
 *  upper bound of the range defining the area. It must have the same length as
 *  `postalCodeRangeBegin`: if `postalCodeRangeBegin` is a postal code then
 *  `postalCodeRangeEnd` must be a postal code too; if `postalCodeRangeBegin` is
 *  a pattern then `postalCodeRangeEnd` must be a pattern with the same prefix
 *  length. Optional: if not set, then the area is defined as being all the
 *  postal codes matching `postalCodeRangeBegin`.
 */
@property(nonatomic, copy, nullable) NSString *postalCodeRangeEnd;

@end


/**
 *  GTLRShoppingContent_Price
 */
@interface GTLRShoppingContent_Price : GTLRObject

/** The currency of the price. */
@property(nonatomic, copy, nullable) NSString *currency;

/** The price represented as a number. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  The price represented as a number and currency.
 */
@interface GTLRShoppingContent_PriceAmount : GTLRObject

/** The currency of the price. */
@property(nonatomic, copy, nullable) NSString *currency;

/** The price represented as a number. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Required product attributes are primarily defined by the products data
 *  specification. See the Products Data Specification Help Center article for
 *  information. Product data. After inserting, updating, or deleting a product,
 *  it may take several minutes before changes take effect.
 */
@interface GTLRShoppingContent_Product : GTLRObject

/** Additional URLs of images of the item. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *additionalImageLinks;

/**
 *  Additional cut of the item. Used together with size_type to represent
 *  combined size types for apparel items.
 */
@property(nonatomic, copy, nullable) NSString *additionalSizeType;

/**
 *  Used to group items in an arbitrary way. Only for CPA%, discouraged
 *  otherwise.
 */
@property(nonatomic, copy, nullable) NSString *adsGrouping;

/** Similar to ads_grouping, but only works on CPC. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *adsLabels;

/**
 *  Allows advertisers to override the item URL when the product is shown within
 *  the context of Product Ads.
 */
@property(nonatomic, copy, nullable) NSString *adsRedirect;

/**
 *  Should be set to true if the item is targeted towards adults.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adult;

/** Target age group of the item. */
@property(nonatomic, copy, nullable) NSString *ageGroup;

/** Availability status of the item. */
@property(nonatomic, copy, nullable) NSString *availability;

/**
 *  The day a pre-ordered product becomes available for delivery, in ISO 8601
 *  format.
 */
@property(nonatomic, copy, nullable) NSString *availabilityDate;

/** Brand of the item. */
@property(nonatomic, copy, nullable) NSString *brand;

/** URL for the canonical version of your item's landing page. */
@property(nonatomic, copy, nullable) NSString *canonicalLink;

/**
 *  Required. The item's channel (online or local). Acceptable values are: -
 *  "`local`" - "`online`"
 */
@property(nonatomic, copy, nullable) NSString *channel;

/** Color of the item. */
@property(nonatomic, copy, nullable) NSString *color;

/** Condition or state of the item. */
@property(nonatomic, copy, nullable) NSString *condition;

/** Required. The two-letter ISO 639-1 language code for the item. */
@property(nonatomic, copy, nullable) NSString *contentLanguage;

/** Cost of goods sold. Used for gross profit reporting. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *costOfGoodsSold;

/**
 *  A list of custom (merchant-provided) attributes. It can also be used for
 *  submitting any attribute of the feed specification in its generic form (for
 *  example, `{ "name": "size type", "value": "regular" }`). This is useful for
 *  submitting attributes not explicitly exposed by the API, such as additional
 *  attributes used for Buy on Google (formerly known as Shopping Actions).
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_CustomAttribute *> *customAttributes;

/** Custom label 0 for custom grouping of items in a Shopping campaign. */
@property(nonatomic, copy, nullable) NSString *customLabel0;

/** Custom label 1 for custom grouping of items in a Shopping campaign. */
@property(nonatomic, copy, nullable) NSString *customLabel1;

/** Custom label 2 for custom grouping of items in a Shopping campaign. */
@property(nonatomic, copy, nullable) NSString *customLabel2;

/** Custom label 3 for custom grouping of items in a Shopping campaign. */
@property(nonatomic, copy, nullable) NSString *customLabel3;

/** Custom label 4 for custom grouping of items in a Shopping campaign. */
@property(nonatomic, copy, nullable) NSString *customLabel4;

/**
 *  Description of the item.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** An identifier for an item for dynamic remarketing campaigns. */
@property(nonatomic, copy, nullable) NSString *displayAdsId;

/**
 *  URL directly to your item's landing page for dynamic remarketing campaigns.
 */
@property(nonatomic, copy, nullable) NSString *displayAdsLink;

/** Advertiser-specified recommendations. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *displayAdsSimilarIds;

/** Title of an item for dynamic remarketing campaigns. */
@property(nonatomic, copy, nullable) NSString *displayAdsTitle;

/**
 *  Offer margin for dynamic remarketing campaigns.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *displayAdsValue;

/** The energy efficiency class as defined in EU directive 2010/30/EU. */
@property(nonatomic, copy, nullable) NSString *energyEfficiencyClass;

/**
 *  The list of destinations to exclude for this target (corresponds to cleared
 *  check boxes in Merchant Center).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *excludedDestinations;

/**
 *  Date on which the item should expire, as specified upon insertion, in ISO
 *  8601 format. The actual expiration date in Google Shopping is exposed in
 *  `productstatuses` as `googleExpirationDate` and might be earlier if
 *  `expirationDate` is too far in the future.
 */
@property(nonatomic, copy, nullable) NSString *expirationDate;

/**
 *  Required for multi-seller accounts. Use this attribute if you're a
 *  marketplace uploading products for various sellers to your multi-seller
 *  account.
 */
@property(nonatomic, copy, nullable) NSString *externalSellerId;

/**
 *  Feed label for the item. Either `targetCountry` or `feedLabel` is required.
 */
@property(nonatomic, copy, nullable) NSString *feedLabel;

/** Target gender of the item. */
@property(nonatomic, copy, nullable) NSString *gender;

/**
 *  Google's category of the item (see [Google product
 *  taxonomy](https://support.google.com/merchants/answer/1705911)). When
 *  querying products, this field will contain the user provided value. There is
 *  currently no way to get back the auto assigned google product categories
 *  through the API.
 */
@property(nonatomic, copy, nullable) NSString *googleProductCategory;

/** Global Trade Item Number (GTIN) of the item. */
@property(nonatomic, copy, nullable) NSString *gtin;

/**
 *  The REST ID of the product. Content API methods that operate on products
 *  take this as their `productId` parameter. The REST ID for a product is of
 *  the form channel:contentLanguage: targetCountry: offerId.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  False when the item does not have unique product identifiers appropriate to
 *  its category, such as GTIN, MPN, and brand. Required according to the Unique
 *  Product Identifier Rules for all target countries except for Canada.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifierExists;

/** URL of an image of the item. */
@property(nonatomic, copy, nullable) NSString *imageLink;

/**
 *  The list of destinations to include for this target (corresponds to checked
 *  check boxes in Merchant Center). Default destinations are always included
 *  unless provided in `excludedDestinations`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includedDestinations;

/** Number and amount of installments to pay for an item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Installment *installment;

/**
 *  Whether the item is a merchant-defined bundle. A bundle is a custom grouping
 *  of different products sold by a merchant for a single price.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isBundle;

/** Shared identifier for all variants of the same product. */
@property(nonatomic, copy, nullable) NSString *itemGroupId;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#product`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** URL directly linking to your item's page on your website. */
@property(nonatomic, copy, nullable) NSString *link;

/** URL template for merchant hosted local storefront. */
@property(nonatomic, copy, nullable) NSString *linkTemplate;

/**
 *  Loyalty points that users receive after purchasing the item. Japan only.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_LoyaltyPoints *loyaltyPoints;

/** The material of which the item is made. */
@property(nonatomic, copy, nullable) NSString *material;

/** The energy efficiency class as defined in EU directive 2010/30/EU. */
@property(nonatomic, copy, nullable) NSString *maxEnergyEfficiencyClass;

/**
 *  Maximal product handling time (in business days).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxHandlingTime;

/** The energy efficiency class as defined in EU directive 2010/30/EU. */
@property(nonatomic, copy, nullable) NSString *minEnergyEfficiencyClass;

/**
 *  Minimal product handling time (in business days).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minHandlingTime;

/** URL for the mobile-optimized version of your item's landing page. */
@property(nonatomic, copy, nullable) NSString *mobileLink;

/**
 *  URL template for merchant hosted local storefront optimized for mobile
 *  devices.
 */
@property(nonatomic, copy, nullable) NSString *mobileLinkTemplate;

/** Manufacturer Part Number (MPN) of the item. */
@property(nonatomic, copy, nullable) NSString *mpn;

/**
 *  The number of identical products in a merchant-defined multipack.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *multipack;

/**
 *  Required. A unique identifier for the item. Leading and trailing whitespaces
 *  are stripped and multiple whitespaces are replaced by a single whitespace
 *  upon submission. Only valid unicode characters are accepted. See the
 *  products feed specification for details. *Note:* Content API methods that
 *  operate on products take the REST ID of the product, *not* this identifier.
 */
@property(nonatomic, copy, nullable) NSString *offerId;

/** The item's pattern (for example, polka dots). */
@property(nonatomic, copy, nullable) NSString *pattern;

/**
 *  Publication of this item should be temporarily paused. Acceptable values
 *  are: - "`ads`"
 */
@property(nonatomic, copy, nullable) NSString *pause;

/**
 *  The pick up option for the item. Acceptable values are: - "`buy`" -
 *  "`reserve`" - "`ship to store`" - "`not supported`"
 */
@property(nonatomic, copy, nullable) NSString *pickupMethod;

/**
 *  Item store pickup timeline. Acceptable values are: - "`same day`" - "`next
 *  day`" - "`2-day`" - "`3-day`" - "`4-day`" - "`5-day`" - "`6-day`" -
 *  "`7-day`" - "`multi-week`"
 */
@property(nonatomic, copy, nullable) NSString *pickupSla;

/** Price of the item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *price;

/** Technical specification or additional product details. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ProductProductDetail *> *productDetails;

/**
 *  The height of the product in the units provided. The value must be between 0
 *  (exclusive) and 3000 (inclusive).
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductDimension *productHeight;

/** Bullet points describing the most relevant highlights of a product. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *productHighlights;

/**
 *  The length of the product in the units provided. The value must be between 0
 *  (exclusive) and 3000 (inclusive).
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductDimension *productLength;

/** Categories of the item (formatted as in products data specification). */
@property(nonatomic, strong, nullable) NSArray<NSString *> *productTypes;

/**
 *  The weight of the product in the units provided. The value must be between 0
 *  (exclusive) and 2000 (inclusive).
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductWeight *productWeight;

/**
 *  The width of the product in the units provided. The value must be between 0
 *  (exclusive) and 3000 (inclusive).
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductDimension *productWidth;

/** The unique ID of a promotion. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *promotionIds;

/** Advertised sale price of the item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *salePrice;

/**
 *  Date range during which the item is on sale (see products data specification
 *  ).
 */
@property(nonatomic, copy, nullable) NSString *salePriceEffectiveDate;

/**
 *  The quantity of the product that is available for selling on Google.
 *  Supported only for online products.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sellOnGoogleQuantity;

/** Shipping rules. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ProductShipping *> *shipping;

/** Height of the item for shipping. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductShippingDimension *shippingHeight;

/**
 *  The shipping label of the product, used to group product in account-level
 *  shipping rules.
 */
@property(nonatomic, copy, nullable) NSString *shippingLabel;

/** Length of the item for shipping. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductShippingDimension *shippingLength;

/** Weight of the item for shipping. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductShippingWeight *shippingWeight;

/** Width of the item for shipping. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductShippingDimension *shippingWidth;

/**
 *  List of country codes (ISO 3166-1 alpha-2) to exclude the offer from
 *  Shopping Ads destination. Countries from this list are removed from
 *  countries configured in MC feed settings.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *shoppingAdsExcludedCountries;

/**
 *  Size of the item. Only one value is allowed. For variants with different
 *  sizes, insert a separate product for each size with the same `itemGroupId`
 *  value (see size definition).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sizes;

/** System in which the size is specified. Recommended for apparel items. */
@property(nonatomic, copy, nullable) NSString *sizeSystem;

/** The cut of the item. Recommended for apparel items. */
@property(nonatomic, copy, nullable) NSString *sizeType;

/**
 *  The source of the offer, that is, how the offer was created. Acceptable
 *  values are: - "`api`" - "`crawl`" - "`feed`"
 */
@property(nonatomic, copy, nullable) NSString *source;

/**
 *  Number of periods (months or years) and amount of payment per period for an
 *  item with an associated subscription contract.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductSubscriptionCost *subscriptionCost;

/** Required. The CLDR territory code for the item. */
@property(nonatomic, copy, nullable) NSString *targetCountry;

/**
 *  The tax category of the product, used to configure detailed tax nexus in
 *  account-level tax settings.
 */
@property(nonatomic, copy, nullable) NSString *taxCategory;

/** Tax information. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ProductTax *> *taxes;

/** Title of the item. */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  The transit time label of the product, used to group product in
 *  account-level transit time tables.
 */
@property(nonatomic, copy, nullable) NSString *transitTimeLabel;

/** The preference of the denominator of the unit price. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductUnitPricingBaseMeasure *unitPricingBaseMeasure;

/** The measure and dimension of an item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductUnitPricingMeasure *unitPricingMeasure;

@end


/**
 *  GTLRShoppingContent_ProductAmount
 */
@interface GTLRShoppingContent_ProductAmount : GTLRObject

/** The pre-tax or post-tax price depending on the location of the order. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *priceAmount;

/** Remitted tax value. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *remittedTaxAmount;

/** Tax value. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *taxAmount;

@end


/**
 *  The estimated days to deliver a product after an order is placed. Only
 *  authorized shipping signals partners working with a merchant can use this
 *  resource. Merchants should use the
 *  [`products`](https://developers.google.com/shopping-content/reference/rest/v2.1/products#productshipping)
 *  resource instead.
 */
@interface GTLRShoppingContent_ProductDeliveryTime : GTLRObject

/**
 *  Required. A set of associations between `DeliveryArea` and `DeliveryTime`
 *  entries. The total number of `areaDeliveryTimes` can be at most 100.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ProductDeliveryTimeAreaDeliveryTime *> *areaDeliveryTimes;

/** Required. The `id` of the product. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductId *productId;

@end


/**
 *  A pairing of `DeliveryArea` associated with a `DeliveryTime` for this
 *  product.
 */
@interface GTLRShoppingContent_ProductDeliveryTimeAreaDeliveryTime : GTLRObject

/**
 *  Required. The delivery area associated with `deliveryTime` for this product.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_DeliveryArea *deliveryArea;

/**
 *  Required. The delivery time associated with `deliveryArea` for this product.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductDeliveryTimeAreaDeliveryTimeDeliveryTime *deliveryTime;

@end


/**
 *  A delivery time for this product.
 */
@interface GTLRShoppingContent_ProductDeliveryTimeAreaDeliveryTimeDeliveryTime : GTLRObject

/**
 *  Required. The maximum number of business days (inclusive) between when an
 *  order is placed and when the product ships. If a product ships in the same
 *  day, set this value to 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxHandlingTimeDays;

/**
 *  Required. The maximum number of business days (inclusive) between when the
 *  product ships and when the product is delivered.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxTransitTimeDays;

/**
 *  Required. The minimum number of business days (inclusive) between when an
 *  order is placed and when the product ships. If a product ships in the same
 *  day, set this value to 0.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minHandlingTimeDays;

/**
 *  Required. The minimum number of business days (inclusive) between when the
 *  product ships and when the product is delivered.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minTransitTimeDays;

@end


/**
 *  GTLRShoppingContent_ProductDimension
 */
@interface GTLRShoppingContent_ProductDimension : GTLRObject

/** Required. The length units. Acceptable values are: - "`in`" - "`cm`" */
@property(nonatomic, copy, nullable) NSString *unit;

/**
 *  Required. The length value represented as a number. The value can have a
 *  maximum precision of four decimal places.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  The Content API ID of the product.
 */
@interface GTLRShoppingContent_ProductId : GTLRObject

/**
 *  The Content API ID of the product, in the form
 *  `channel:contentLanguage:targetCountry:offerId`.
 */
@property(nonatomic, copy, nullable) NSString *productId;

@end


/**
 *  GTLRShoppingContent_ProductProductDetail
 */
@interface GTLRShoppingContent_ProductProductDetail : GTLRObject

/** The name of the product detail. */
@property(nonatomic, copy, nullable) NSString *attributeName;

/** The value of the product detail. */
@property(nonatomic, copy, nullable) NSString *attributeValue;

/** The section header used to group a set of product details. */
@property(nonatomic, copy, nullable) NSString *sectionName;

@end


/**
 *  GTLRShoppingContent_ProductsCustomBatchRequest
 */
@interface GTLRShoppingContent_ProductsCustomBatchRequest : GTLRObject

/** The request entries to be processed in the batch. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ProductsCustomBatchRequestEntry *> *entries;

@end


/**
 *  A batch entry encoding a single non-batch products request.
 */
@interface GTLRShoppingContent_ProductsCustomBatchRequestEntry : GTLRObject

/**
 *  An entry ID, unique within the batch request.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  The Content API Supplemental Feed ID. If present then product insertion or
 *  deletion applies to a supplemental feed instead of primary Content API feed.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *feedId;

/**
 *  The ID of the managing account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/**
 *  The method of the batch entry. Acceptable values are: - "`delete`" - "`get`"
 *  - "`insert`" - "`update`"
 */
@property(nonatomic, copy, nullable) NSString *method;

/**
 *  The product to insert or update. Only required if the method is `insert` or
 *  `update`. If the `update` method is used with `updateMask` only to delete a
 *  field, then this isn't required. For example, setting `salePrice` on the
 *  `updateMask` and not providing a `product` will result in an existing sale
 *  price on the product specified by `productId` being deleted.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Product *product;

/**
 *  The ID of the product to get or mutate. Only defined if the method is `get`,
 *  `delete`, or `update`.
 */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  The comma-separated list of product attributes to be updated. Example:
 *  `"title,salePrice"`. Attributes specified in the update mask without a value
 *  specified in the body will be deleted from the product. *You must specify
 *  the update mask to delete attributes.* Only top-level product attributes can
 *  be updated. If not defined, product attributes with set values will be
 *  updated and other attributes will stay unchanged. Only defined if the method
 *  is `update`.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  GTLRShoppingContent_ProductsCustomBatchResponse
 */
@interface GTLRShoppingContent_ProductsCustomBatchResponse : GTLRObject

/** The result of the execution of the batch requests. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ProductsCustomBatchResponseEntry *> *entries;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#productsCustomBatchResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  A batch entry encoding a single non-batch products response.
 */
@interface GTLRShoppingContent_ProductsCustomBatchResponseEntry : GTLRObject

/**
 *  The ID of the request entry this entry responds to.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  A list of errors for failed custombatch entries. *Note:* Schema errors fail
 *  the whole request.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Errors *errors;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#productsCustomBatchResponseEntry`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The inserted product. Only defined if the method is `insert` and if the
 *  request was successful.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Product *product;

@end


/**
 *  GTLRShoppingContent_ProductShipping
 */
@interface GTLRShoppingContent_ProductShipping : GTLRObject

/** The CLDR territory code of the country to which an item will ship. */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  The location where the shipping is applicable, represented by a location
 *  group name.
 */
@property(nonatomic, copy, nullable) NSString *locationGroupName;

/**
 *  The numeric ID of a location that the shipping rate applies to as defined in
 *  the AdWords API.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *locationId;

/**
 *  Maximum handling time (inclusive) between when the order is received and
 *  shipped in business days. 0 means that the order is shipped on the same day
 *  as it's received if it happens before the cut-off time. Both maxHandlingTime
 *  and maxTransitTime are required if providing shipping speeds.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxHandlingTime;

/**
 *  Maximum transit time (inclusive) between when the order has shipped and when
 *  it's delivered in business days. 0 means that the order is delivered on the
 *  same day as it ships. Both maxHandlingTime and maxTransitTime are required
 *  if providing shipping speeds.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxTransitTime;

/**
 *  Minimum handling time (inclusive) between when the order is received and
 *  shipped in business days. 0 means that the order is shipped on the same day
 *  as it's received if it happens before the cut-off time. minHandlingTime can
 *  only be present together with maxHandlingTime; but it's not required if
 *  maxHandlingTime is present.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minHandlingTime;

/**
 *  Minimum transit time (inclusive) between when the order has shipped and when
 *  it's delivered in business days. 0 means that the order is delivered on the
 *  same day as it ships. minTransitTime can only be present together with
 *  maxTransitTime; but it's not required if maxTransitTime is present.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minTransitTime;

/**
 *  The postal code range that the shipping rate applies to, represented by a
 *  postal code, a postal code prefix followed by a * wildcard, a range between
 *  two postal codes or two postal code prefixes of equal length.
 */
@property(nonatomic, copy, nullable) NSString *postalCode;

/** Fixed shipping price, represented as a number. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *price;

/** The geographic region to which a shipping rate applies. */
@property(nonatomic, copy, nullable) NSString *region;

/** A free-form description of the service class or delivery speed. */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  GTLRShoppingContent_ProductShippingDimension
 */
@interface GTLRShoppingContent_ProductShippingDimension : GTLRObject

/** The unit of value. */
@property(nonatomic, copy, nullable) NSString *unit;

/**
 *  The dimension of the product used to calculate the shipping cost of the
 *  item.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  GTLRShoppingContent_ProductShippingWeight
 */
@interface GTLRShoppingContent_ProductShippingWeight : GTLRObject

/** The unit of value. */
@property(nonatomic, copy, nullable) NSString *unit;

/**
 *  The weight of the product used to calculate the shipping cost of the item.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  GTLRShoppingContent_ProductsListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_ProductsListResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#productsListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of products. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_Product *> *resources;

@end


/**
 *  The status of a product, that is, information about a product computed
 *  asynchronously.
 */
@interface GTLRShoppingContent_ProductStatus : GTLRObject

/** Date on which the item has been created, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *creationDate;

/** The intended destinations for the product. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ProductStatusDestinationStatus *> *destinationStatuses;

/** Date on which the item expires in Google Shopping, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *googleExpirationDate;

/** A list of all issues associated with the product. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ProductStatusItemLevelIssue *> *itemLevelIssues;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#productStatus`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Date on which the item has been last updated, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *lastUpdateDate;

/** The link to the product. */
@property(nonatomic, copy, nullable) NSString *link;

/** The ID of the product for which status is reported. */
@property(nonatomic, copy, nullable) NSString *productId;

/** The title of the product. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  GTLRShoppingContent_ProductStatusDestinationStatus
 */
@interface GTLRShoppingContent_ProductStatusDestinationStatus : GTLRObject

/** List of country codes (ISO 3166-1 alpha-2) where the offer is approved. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *approvedCountries;

/** The name of the destination */
@property(nonatomic, copy, nullable) NSString *destination;

/**
 *  List of country codes (ISO 3166-1 alpha-2) where the offer is disapproved.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *disapprovedCountries;

/**
 *  List of country codes (ISO 3166-1 alpha-2) where the offer is pending
 *  approval.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *pendingCountries;

/** Destination approval status in `targetCountry` of the offer. */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  GTLRShoppingContent_ProductstatusesCustomBatchRequest
 */
@interface GTLRShoppingContent_ProductstatusesCustomBatchRequest : GTLRObject

/** The request entries to be processed in the batch. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ProductstatusesCustomBatchRequestEntry *> *entries;

@end


/**
 *  A batch entry encoding a single non-batch productstatuses request.
 */
@interface GTLRShoppingContent_ProductstatusesCustomBatchRequestEntry : GTLRObject

/**
 *  An entry ID, unique within the batch request.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  If set, only issues for the specified destinations are returned, otherwise
 *  only issues for the Shopping destination.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *destinations;

/**
 *  Deprecated: Setting this field has no effect and attributes are never
 *  included.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeAttributes;

/**
 *  The ID of the managing account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/** The method of the batch entry. Acceptable values are: - "`get`" */
@property(nonatomic, copy, nullable) NSString *method;

/** The ID of the product whose status to get. */
@property(nonatomic, copy, nullable) NSString *productId;

@end


/**
 *  GTLRShoppingContent_ProductstatusesCustomBatchResponse
 */
@interface GTLRShoppingContent_ProductstatusesCustomBatchResponse : GTLRObject

/** The result of the execution of the batch requests. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ProductstatusesCustomBatchResponseEntry *> *entries;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#productstatusesCustomBatchResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  A batch entry encoding a single non-batch productstatuses response.
 */
@interface GTLRShoppingContent_ProductstatusesCustomBatchResponseEntry : GTLRObject

/**
 *  The ID of the request entry this entry responds to.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  A list of errors for failed custombatch entries. *Note:* Schema errors fail
 *  the whole request.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Errors *errors;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#productstatusesCustomBatchResponseEntry`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The requested product status. Only defined if the request was successful.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductStatus *productStatus;

@end


/**
 *  GTLRShoppingContent_ProductstatusesListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_ProductstatusesListResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#productstatusesListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of products statuses. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ProductStatus *> *resources;

@end


/**
 *  GTLRShoppingContent_ProductStatusItemLevelIssue
 */
@interface GTLRShoppingContent_ProductStatusItemLevelIssue : GTLRObject

/**
 *  List of country codes (ISO 3166-1 alpha-2) where issue applies to the offer.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *applicableCountries;

/** The attribute's name, if the issue is caused by a single attribute. */
@property(nonatomic, copy, nullable) NSString *attributeName;

/** The error code of the issue. */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  A short issue description in English.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The destination the issue applies to. */
@property(nonatomic, copy, nullable) NSString *destination;

/** A detailed issue description in English. */
@property(nonatomic, copy, nullable) NSString *detail;

/** The URL of a web page to help with resolving this issue. */
@property(nonatomic, copy, nullable) NSString *documentation;

/** Whether the issue can be resolved by the merchant. */
@property(nonatomic, copy, nullable) NSString *resolution;

/** How this issue affects serving of the offer. */
@property(nonatomic, copy, nullable) NSString *servability;

@end


/**
 *  GTLRShoppingContent_ProductSubscriptionCost
 */
@interface GTLRShoppingContent_ProductSubscriptionCost : GTLRObject

/** The amount the buyer has to pay per subscription period. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *amount;

/** The type of subscription period. */
@property(nonatomic, copy, nullable) NSString *period;

/**
 *  The number of subscription periods the buyer has to pay.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *periodLength;

@end


/**
 *  GTLRShoppingContent_ProductTax
 */
@interface GTLRShoppingContent_ProductTax : GTLRObject

/**
 *  The country within which the item is taxed, specified as a CLDR territory
 *  code.
 */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  The numeric ID of a location that the tax rate applies to as defined in the
 *  AdWords API.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *locationId;

/**
 *  The postal code range that the tax rate applies to, represented by a ZIP
 *  code, a ZIP code prefix using * wildcard, a range between two ZIP codes or
 *  two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460,
 *  94*-95*.
 */
@property(nonatomic, copy, nullable) NSString *postalCode;

/**
 *  The percentage of tax rate that applies to the item price.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rate;

/** The geographic region to which the tax rate applies. */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  Should be set to true if tax is charged on shipping.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *taxShip;

@end


/**
 *  GTLRShoppingContent_ProductUnitPricingBaseMeasure
 */
@interface GTLRShoppingContent_ProductUnitPricingBaseMeasure : GTLRObject

/** The unit of the denominator. */
@property(nonatomic, copy, nullable) NSString *unit;

/**
 *  The denominator of the unit price.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  GTLRShoppingContent_ProductUnitPricingMeasure
 */
@interface GTLRShoppingContent_ProductUnitPricingMeasure : GTLRObject

/** The unit of the measure. */
@property(nonatomic, copy, nullable) NSString *unit;

/**
 *  The measure of an item.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  Product fields. Values are only set for fields requested explicitly in the
 *  request's search query. Available only to selected merchants. Submit the
 *  [interest form](https://forms.gle/7Uy8htzAN8oNokz9A) to request access.
 */
@interface GTLRShoppingContent_ProductView : GTLRObject

/**
 *  Aggregated destination status.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_ProductView_AggregatedDestinationStatus_AggregatedStatusUnspecified
 *        Undefined aggregated status. (Value: "AGGREGATED_STATUS_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_ProductView_AggregatedDestinationStatus_Eligible
 *        Offer is eligible for all destinations. (Value: "ELIGIBLE")
 *    @arg @c kGTLRShoppingContent_ProductView_AggregatedDestinationStatus_EligibleLimited
 *        Offer is eligible for some (but not all) destinations. (Value:
 *        "ELIGIBLE_LIMITED")
 *    @arg @c kGTLRShoppingContent_ProductView_AggregatedDestinationStatus_NotEligibleOrDisapproved
 *        Offer isn't eligible, or is disapproved for all destinations. (Value:
 *        "NOT_ELIGIBLE_OR_DISAPPROVED")
 *    @arg @c kGTLRShoppingContent_ProductView_AggregatedDestinationStatus_Pending
 *        Offer's status is pending in all destinations. (Value: "PENDING")
 */
@property(nonatomic, copy, nullable) NSString *aggregatedDestinationStatus;

/** Availability of the product. */
@property(nonatomic, copy, nullable) NSString *availability;

/** Brand of the product. */
@property(nonatomic, copy, nullable) NSString *brand;

/**
 *  Channel of the product (online versus local).
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_ProductView_Channel_ChannelUnspecified
 *        Indicates that the channel is unspecified. (Value:
 *        "CHANNEL_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_ProductView_Channel_Local Indicates that the
 *        channel is local. (Value: "LOCAL")
 *    @arg @c kGTLRShoppingContent_ProductView_Channel_Online Indicates that the
 *        channel is online. (Value: "ONLINE")
 */
@property(nonatomic, copy, nullable) NSString *channel;

/** Condition of the product. */
@property(nonatomic, copy, nullable) NSString *condition;

/** The time the merchant created the product in timestamp seconds. */
@property(nonatomic, strong, nullable) GTLRDateTime *creationTime;

/**
 *  Product price currency code (for example, ISO 4217). Absent if product price
 *  is not available.
 */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/** Expiration date for the product. Specified on insertion. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Date *expirationDate;

/** GTIN of the product. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *gtin;

/**
 *  The REST ID of the product, in the form of
 *  channel:contentLanguage:targetCountry:offerId. Content API methods that
 *  operate on products take this as their productId parameter. Should always be
 *  included in the SELECT clause.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Item group ID provided by the merchant for grouping variants together. */
@property(nonatomic, copy, nullable) NSString *itemGroupId;

/** List of item issues for the product. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ProductViewItemIssue *> *itemIssues;

/** Language code of the product in BCP 47 format. */
@property(nonatomic, copy, nullable) NSString *languageCode;

/** Merchant-provided id of the product. */
@property(nonatomic, copy, nullable) NSString *offerId;

/**
 *  Product price specified as micros in the product currency. Absent in case
 *  the information about the price of the product is not available.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priceMicros;

/** The normalized shipping label specified in the feed */
@property(nonatomic, copy, nullable) NSString *shippingLabel;

/** Title of the product. */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Item issue associated with the product.
 */
@interface GTLRShoppingContent_ProductViewItemIssue : GTLRObject

/** Item issue type. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductViewItemIssueItemIssueType *issueType;

/**
 *  Item issue resolution.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_ProductViewItemIssue_Resolution_MerchantAction
 *        The merchant has to fix the issue. (Value: "MERCHANT_ACTION")
 *    @arg @c kGTLRShoppingContent_ProductViewItemIssue_Resolution_PendingProcessing
 *        The issue will be resolved automatically (for example, image crawl),
 *        or Google review. No merchant action is required now. Resolution might
 *        lead to another issue (for example, if crawl fails). (Value:
 *        "PENDING_PROCESSING")
 *    @arg @c kGTLRShoppingContent_ProductViewItemIssue_Resolution_Unknown
 *        Unknown resolution type. (Value: "UNKNOWN")
 */
@property(nonatomic, copy, nullable) NSString *resolution;

/** Item issue severity. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductViewItemIssueItemIssueSeverity *severity;

@end


/**
 *  Issue severity for all affected regions in a destination.
 */
@interface GTLRShoppingContent_ProductViewItemIssueIssueSeverityPerDestination : GTLRObject

/** List of demoted countries in the destination. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *demotedCountries;

/** Issue destination. */
@property(nonatomic, copy, nullable) NSString *destination;

/** List of disapproved countries in the destination. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *disapprovedCountries;

@end


/**
 *  Severity of an issue per destination in a region, and aggregated severity.
 */
@interface GTLRShoppingContent_ProductViewItemIssueItemIssueSeverity : GTLRObject

/**
 *  Severity of an issue aggregated for destination.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_ProductViewItemIssueItemIssueSeverity_AggregatedSeverity_AggregatedIssueSeverityUnspecified
 *        Undefined Issue severity. (Value:
 *        "AGGREGATED_ISSUE_SEVERITY_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_ProductViewItemIssueItemIssueSeverity_AggregatedSeverity_Demoted
 *        Issue demotes the product in all selected destinations it affects.
 *        (Value: "DEMOTED")
 *    @arg @c kGTLRShoppingContent_ProductViewItemIssueItemIssueSeverity_AggregatedSeverity_Disapproved
 *        Issue disapproves the product in at least one of the selected
 *        destinations. (Value: "DISAPPROVED")
 *    @arg @c kGTLRShoppingContent_ProductViewItemIssueItemIssueSeverity_AggregatedSeverity_Pending
 *        Issue resolution is `PENDING_PROCESSING`. (Value: "PENDING")
 */
@property(nonatomic, copy, nullable) NSString *aggregatedSeverity;

/** Item issue severity for every destination. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ProductViewItemIssueIssueSeverityPerDestination *> *severityPerDestination;

@end


/**
 *  Type of the item issue.
 */
@interface GTLRShoppingContent_ProductViewItemIssueItemIssueType : GTLRObject

/** Canonical attribute name for attribute-specific issues. */
@property(nonatomic, copy, nullable) NSString *canonicalAttribute;

@end


/**
 *  GTLRShoppingContent_ProductWeight
 */
@interface GTLRShoppingContent_ProductWeight : GTLRObject

/**
 *  Required. The weight unit. Acceptable values are: - "`g`" - "`kg`" - "`oz`"
 *  - "`lb`"
 */
@property(nonatomic, copy, nullable) NSString *unit;

/**
 *  Required. The weight represented as a number. The weight can have a maximum
 *  precision of four decimal places.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  Represents a promotion. See the following articles for more details. *
 *  [Promotions feed
 *  specification](https://support.google.com/merchants/answer/2906014) * [Local
 *  promotions feed
 *  specification](https://support.google.com/merchants/answer/10146130) *
 *  [Promotions on Buy on Google product data
 *  specification](https://support.google.com/merchants/answer/9173673)
 */
@interface GTLRShoppingContent_Promotion : GTLRObject

/** Product filter by brand for the promotion. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *brand;

/** Product filter by brand exclusion for the promotion. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *brandExclusion;

/**
 *  Required. The content language used as part of the unique identifier. `en`
 *  content language is available for all target countries. `fr` content
 *  language is available for `CA` and `FR` target countries, and `de` content
 *  language is available for `DE` target country.
 */
@property(nonatomic, copy, nullable) NSString *contentLanguage;

/**
 *  Required. Coupon value type for the promotion.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_Promotion_CouponValueType_BuyMGetMoneyOff Buy
 *        M quantity, get money off. `buy_this_quantity` and `money_off_amount`
 *        must be present. (Value: "BUY_M_GET_MONEY_OFF")
 *    @arg @c kGTLRShoppingContent_Promotion_CouponValueType_BuyMGetNMoneyOff
 *        Buy M quantity, get N money off coupon value type. `buy_this_quantity`
 *        and `get_this_quantity` must be present. `money_off_amount` must also
 *        be present. (Value: "BUY_M_GET_N_MONEY_OFF")
 *    @arg @c kGTLRShoppingContent_Promotion_CouponValueType_BuyMGetNPercentOff
 *        Buy M quantity, get N percent off coupon value type.
 *        `buy_this_quantity` and `get_this_quantity` must be present.
 *        `percent_off_percentage` must also be present. (Value:
 *        "BUY_M_GET_N_PERCENT_OFF")
 *    @arg @c kGTLRShoppingContent_Promotion_CouponValueType_BuyMGetPercentOff
 *        Buy M quantity, get money off. `buy_this_quantity` and
 *        `percent_off_percentage` must be present. (Value:
 *        "BUY_M_GET_PERCENT_OFF")
 *    @arg @c kGTLRShoppingContent_Promotion_CouponValueType_CouponValueTypeUnspecified
 *        Indicates that the coupon value type is unspecified. (Value:
 *        "COUPON_VALUE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_Promotion_CouponValueType_FreeGift Free gift
 *        with description only. (Value: "FREE_GIFT")
 *    @arg @c kGTLRShoppingContent_Promotion_CouponValueType_FreeGiftWithItemId
 *        Free gift with item ID (description is optional). (Value:
 *        "FREE_GIFT_WITH_ITEM_ID")
 *    @arg @c kGTLRShoppingContent_Promotion_CouponValueType_FreeGiftWithValue
 *        Free gift with value (description is optional). (Value:
 *        "FREE_GIFT_WITH_VALUE")
 *    @arg @c kGTLRShoppingContent_Promotion_CouponValueType_FreeShippingOvernight
 *        Overnight free shipping coupon value type. (Value:
 *        "FREE_SHIPPING_OVERNIGHT")
 *    @arg @c kGTLRShoppingContent_Promotion_CouponValueType_FreeShippingStandard
 *        Standard free shipping coupon value type. (Value:
 *        "FREE_SHIPPING_STANDARD")
 *    @arg @c kGTLRShoppingContent_Promotion_CouponValueType_FreeShippingTwoDay
 *        Two day free shipping coupon value type. (Value:
 *        "FREE_SHIPPING_TWO_DAY")
 *    @arg @c kGTLRShoppingContent_Promotion_CouponValueType_MoneyOff Money off
 *        coupon value type. (Value: "MONEY_OFF")
 *    @arg @c kGTLRShoppingContent_Promotion_CouponValueType_PercentOff Percent
 *        off coupon value type. (Value: "PERCENT_OFF")
 */
@property(nonatomic, copy, nullable) NSString *couponValueType;

/** Free gift description for the promotion. */
@property(nonatomic, copy, nullable) NSString *freeGiftDescription;

/** Free gift item ID for the promotion. */
@property(nonatomic, copy, nullable) NSString *freeGiftItemId;

/** Free gift value for the promotion. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PriceAmount *freeGiftValue;

/**
 *  Generic redemption code for the promotion. To be used with the `offerType`
 *  field.
 */
@property(nonatomic, copy, nullable) NSString *genericRedemptionCode;

/**
 *  The number of items discounted in the promotion.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *getThisQuantityDiscounted;

/**
 *  Required. Output only. The REST promotion ID to uniquely identify the
 *  promotion. Content API methods that operate on promotions take this as their
 *  `promotionId` parameter. The REST ID for a promotion is of the form
 *  channel:contentLanguage:targetCountry:promotionId The `channel` field has a
 *  value of `"online"`, `"in_store"`, or `"online_in_store"`.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Product filter by item group ID for the promotion. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *itemGroupId;

/** Product filter by item group ID exclusion for the promotion. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *itemGroupIdExclusion;

/** Product filter by item ID for the promotion. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *itemId;

/** Product filter by item ID exclusion for the promotion. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *itemIdExclusion;

/**
 *  Maximum purchase quantity for the promotion.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *limitQuantity;

/** Maximum purchase value for the promotion. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PriceAmount *limitValue;

/** Required. Long title for the promotion. */
@property(nonatomic, copy, nullable) NSString *longTitle;

/** Minimum purchase amount for the promotion. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PriceAmount *minimumPurchaseAmount;

/**
 *  Minimum purchase quantity for the promotion.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minimumPurchaseQuantity;

/** Cost cap for the promotion. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PriceAmount *moneyBudget;

/** The money off amount offered in the promotion. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PriceAmount *moneyOffAmount;

/**
 *  Required. Type of the promotion.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_Promotion_OfferType_GenericCode Offer type
 *        with a code. (Value: "GENERIC_CODE")
 *    @arg @c kGTLRShoppingContent_Promotion_OfferType_NoCode Offer type without
 *        a code. (Value: "NO_CODE")
 *    @arg @c kGTLRShoppingContent_Promotion_OfferType_OfferTypeUnspecified
 *        Unknown offer type. (Value: "OFFER_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *offerType;

/**
 *  Order limit for the promotion.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *orderLimit;

/**
 *  The percentage discount offered in the promotion.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *percentOff;

/**
 *  Required. Applicability of the promotion to either all products or only
 *  specific products.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_Promotion_ProductApplicability_AllProducts
 *        Applicable to all products. (Value: "ALL_PRODUCTS")
 *    @arg @c kGTLRShoppingContent_Promotion_ProductApplicability_ProductApplicabilityUnspecified
 *        Which products the promotion applies to is unknown. (Value:
 *        "PRODUCT_APPLICABILITY_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_Promotion_ProductApplicability_SpecificProducts
 *        Applicable to only a single product or list of products. (Value:
 *        "SPECIFIC_PRODUCTS")
 */
@property(nonatomic, copy, nullable) NSString *productApplicability;

/** Product filter by product type for the promotion. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *productType;

/** Product filter by product type exclusion for the promotion. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *productTypeExclusion;

/** Destination ID for the promotion. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *promotionDestinationIds;

/**
 *  String representation of the promotion display dates. Deprecated. Use
 *  `promotion_display_time_period` instead.
 */
@property(nonatomic, copy, nullable) NSString *promotionDisplayDates;

/** `TimePeriod` representation of the promotion's display dates. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_TimePeriod *promotionDisplayTimePeriod;

/**
 *  String representation of the promotion effective dates. Deprecated. Use
 *  `promotion_effective_time_period` instead.
 */
@property(nonatomic, copy, nullable) NSString *promotionEffectiveDates;

/**
 *  Required. `TimePeriod` representation of the promotion's effective dates.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_TimePeriod *promotionEffectiveTimePeriod;

/**
 *  Required. The user provided promotion ID to uniquely identify the promotion.
 */
@property(nonatomic, copy, nullable) NSString *promotionId;

/**
 *  URL to the page on the merchant's site where the promotion shows. Local
 *  Inventory ads promotions throw an error if no promo url is included. URL is
 *  used to confirm that the promotion is valid and can be redeemed.
 */
@property(nonatomic, copy, nullable) NSString *promotionUrl;

/**
 *  Required. Redemption channel for the promotion. At least one channel is
 *  required.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *redemptionChannel;

/** Shipping service names for the promotion. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *shippingServiceNames;

/**
 *  Whether the promotion applies to all stores, or only specified stores. Local
 *  Inventory ads promotions throw an error if no store applicability is
 *  included. An INVALID_ARGUMENT error is thrown if store_applicability is set
 *  to ALL_STORES and store_code or score_code_exclusion is set to a value.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_Promotion_StoreApplicability_AllStores
 *        Promotion applies to all stores. (Value: "ALL_STORES")
 *    @arg @c kGTLRShoppingContent_Promotion_StoreApplicability_SpecificStores
 *        Promotion applies to only the specified stores. (Value:
 *        "SPECIFIC_STORES")
 *    @arg @c kGTLRShoppingContent_Promotion_StoreApplicability_StoreApplicabilityUnspecified
 *        Which store codes the promotion applies to is unknown. (Value:
 *        "STORE_APPLICABILITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *storeApplicability;

/** Store codes to include for the promotion. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *storeCode;

/** Store codes to exclude for the promotion. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *storeCodeExclusion;

/**
 *  Required. The target country used as part of the unique identifier. Can be
 *  `AU`, `CA`, `DE`, `FR`, `GB`, `IN` or `US`.
 */
@property(nonatomic, copy, nullable) NSString *targetCountry;

@end


/**
 *  Settings for Pub/Sub notifications, all methods require that the caller is a
 *  direct user of the merchant center account.
 */
@interface GTLRShoppingContent_PubsubNotificationSettings : GTLRObject

/** Cloud pub/sub topic to which notifications are sent (read-only). */
@property(nonatomic, copy, nullable) NSString *cloudTopicName;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#pubsubNotificationSettings`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** List of event types. Acceptable values are: - "`orderPendingShipment`" */
@property(nonatomic, strong, nullable) NSArray<NSString *> *registeredEvents;

@end


/**
 *  GTLRShoppingContent_RateGroup
 */
@interface GTLRShoppingContent_RateGroup : GTLRObject

/**
 *  A list of shipping labels defining the products to which this rate group
 *  applies to. This is a disjunction: only one of the labels has to match for
 *  the rate group to apply. May only be empty for the last rate group of a
 *  service. Required.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *applicableShippingLabels;

/**
 *  A list of carrier rates that can be referred to by `mainTable` or
 *  `singleValue`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_CarrierRate *> *carrierRates;

/**
 *  A table defining the rate group, when `singleValue` is not expressive
 *  enough. Can only be set if `singleValue` is not set.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Table *mainTable;

/**
 *  Name of the rate group. Optional. If set has to be unique within shipping
 *  service.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The value of the rate group (for example, flat rate $10). Can only be set if
 *  `mainTable` and `subtables` are not set.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Value *singleValue;

/**
 *  A list of subtables referred to by `mainTable`. Can only be set if
 *  `mainTable` is set.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_Table *> *subtables;

@end


/**
 *  GTLRShoppingContent_RefundReason
 */
@interface GTLRShoppingContent_RefundReason : GTLRObject

/**
 *  Description of the reason.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Code of the refund reason. Acceptable values are: - "`adjustment`" -
 *  "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" -
 *  "`autoPostNoInventory`" - "`autoPostPriceError`" -
 *  "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" -
 *  "`courtesyAdjustment`" - "`customerCanceled`" -
 *  "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" -
 *  "`customerSupportRequested`" - "`deliveredLateByCarrier`" -
 *  "`deliveredTooLate`" - "`expiredItem`" - "`failToPushOrderGoogleError`" -
 *  "`failToPushOrderMerchantError`" -
 *  "`failToPushOrderMerchantFulfillmentError`" - "`failToPushOrderToMerchant`"
 *  - "`failToPushOrderToMerchantOutOfStock`" - "`feeAdjustment`" -
 *  "`invalidCoupon`" - "`lateShipmentCredit`" - "`malformedShippingAddress`" -
 *  "`merchantDidNotShipOnTime`" - "`noInventory`" - "`orderTimeout`" -
 *  "`other`" - "`paymentAbuse`" - "`paymentDeclined`" - "`priceAdjustment`" -
 *  "`priceError`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" -
 *  "`promoReallocation`" - "`qualityNotAsExpected`" - "`returnRefundAbuse`" -
 *  "`shippingCostAdjustment`" - "`shippingPriceError`" - "`taxAdjustment`" -
 *  "`taxError`" - "`undeliverableShippingAddress`" -
 *  "`unsupportedPoBoxAddress`" - "`wrongProductShipped`"
 */
@property(nonatomic, copy, nullable) NSString *reasonCode;

@end


/**
 *  Represents a geographic region that you can use as a target with both the
 *  `RegionalInventory` and `ShippingSettings` services. You can define regions
 *  as collections of either postal codes or, in some countries, using
 *  predefined geotargets.
 */
@interface GTLRShoppingContent_Region : GTLRObject

/** The display name of the region. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** A list of geotargets that defines the region area. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RegionGeoTargetArea *geotargetArea;

/**
 *  Output only. Immutable. Merchant that owns the region.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/** A list of postal codes that defines the region area. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RegionPostalCodeArea *postalCodeArea;

/**
 *  Output only. Indicates if the region is eligible to use in the Regional
 *  Inventory configuration.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *regionalInventoryEligible;

/** Output only. Immutable. The ID uniquely identifying each region. */
@property(nonatomic, copy, nullable) NSString *regionId;

/**
 *  Output only. Indicates if the region is eligible to use in the Shipping
 *  Services configuration.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *shippingEligible;

@end


/**
 *  Regional inventory resource. contains the regional name and all attributes
 *  which are overridden for the specified region.
 */
@interface GTLRShoppingContent_RegionalInventory : GTLRObject

/** The availability of the product. */
@property(nonatomic, copy, nullable) NSString *availability;

/**
 *  A list of custom (merchant-provided) attributes. It can also be used for
 *  submitting any attribute of the feed specification in its generic form.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_CustomAttribute *> *customAttributes;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#regionalInventory`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The price of the product. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *price;

/** The ID uniquely identifying each region. */
@property(nonatomic, copy, nullable) NSString *regionId;

/**
 *  The sale price of the product. Mandatory if `sale_price_effective_date` is
 *  defined.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *salePrice;

/**
 *  A date range represented by a pair of ISO 8601 dates separated by a space,
 *  comma, or slash. Both dates might be specified as 'null' if undecided.
 */
@property(nonatomic, copy, nullable) NSString *salePriceEffectiveDate;

@end


/**
 *  GTLRShoppingContent_RegionalinventoryCustomBatchRequest
 */
@interface GTLRShoppingContent_RegionalinventoryCustomBatchRequest : GTLRObject

/** The request entries to be processed in the batch. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_RegionalinventoryCustomBatchRequestEntry *> *entries;

@end


/**
 *  A batch entry encoding a single non-batch regional inventory request.
 */
@interface GTLRShoppingContent_RegionalinventoryCustomBatchRequestEntry : GTLRObject

/**
 *  An entry ID, unique within the batch request.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  The ID of the managing account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/** Method of the batch request entry. Acceptable values are: - "`insert`" */
@property(nonatomic, copy, nullable) NSString *method;

/** The ID of the product for which to update price and availability. */
@property(nonatomic, copy, nullable) NSString *productId;

/** Price and availability of the product. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RegionalInventory *regionalInventory;

@end


/**
 *  GTLRShoppingContent_RegionalinventoryCustomBatchResponse
 */
@interface GTLRShoppingContent_RegionalinventoryCustomBatchResponse : GTLRObject

/** The result of the execution of the batch requests. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_RegionalinventoryCustomBatchResponseEntry *> *entries;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#regionalinventoryCustomBatchResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  A batch entry encoding a single non-batch regional inventory response.
 */
@interface GTLRShoppingContent_RegionalinventoryCustomBatchResponseEntry : GTLRObject

/**
 *  The ID of the request entry this entry responds to.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  A list of errors for failed custombatch entries. *Note:* Schema errors fail
 *  the whole request.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Errors *errors;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#regionalinventoryCustomBatchResponseEntry`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Price and availability of the product. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RegionalInventory *regionalInventory;

@end


/**
 *  A list of geotargets that defines the region area.
 */
@interface GTLRShoppingContent_RegionGeoTargetArea : GTLRObject

/**
 *  Required. A non-empty list of [location
 *  IDs](https://developers.google.com/adwords/api/docs/appendix/geotargeting).
 *  They must all be of the same location type (e.g., state).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *geotargetCriteriaIds;

@end


/**
 *  A list of postal codes that defines the region area. Note: All regions
 *  defined using postal codes are accessible via the account's
 *  `ShippingSettings.postalCodeGroups` resource.
 */
@interface GTLRShoppingContent_RegionPostalCodeArea : GTLRObject

/** Required. A range of postal codes. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_RegionPostalCodeAreaPostalCodeRange *> *postalCodes;

/**
 *  Required. CLDR territory code or the country the postal code group applies
 *  to.
 */
@property(nonatomic, copy, nullable) NSString *regionCode;

@end


/**
 *  A range of postal codes that defines the region area.
 */
@interface GTLRShoppingContent_RegionPostalCodeAreaPostalCodeRange : GTLRObject

/**
 *  Required. A postal code or a pattern of the form prefix* denoting the
 *  inclusive lower bound of the range defining the area. Examples values:
 *  "94108", "9410*", "9*".
 */
@property(nonatomic, copy, nullable) NSString *begin;

/**
 *  Optional. A postal code or a pattern of the form prefix* denoting the
 *  inclusive upper bound of the range defining the area. It must have the same
 *  length as postalCodeRangeBegin: if postalCodeRangeBegin is a postal code
 *  then postalCodeRangeEnd must be a postal code too; if postalCodeRangeBegin
 *  is a pattern then postalCodeRangeEnd must be a pattern with the same prefix
 *  length. Optional: if not set, then the area is defined as being all the
 *  postal codes matching postalCodeRangeBegin.
 */
@property(nonatomic, copy, nullable) NSString *end;

@end


/**
 *  Result row returned from the search query.
 */
@interface GTLRShoppingContent_ReportRow : GTLRObject

/**
 *  Metrics requested by the merchant in the query. Metric values are only set
 *  for metrics requested explicitly in the query.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Metrics *metrics;

/**
 *  Product fields requested by the merchant in the query. Field values are only
 *  set if the merchant queries `ProductView`. Available only to selected
 *  merchants. Submit the [interest form](https://forms.gle/7Uy8htzAN8oNokz9A)
 *  to request access.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ProductView *productView;

/**
 *  Segmentation dimensions requested by the merchant in the query. Dimension
 *  values are only set for dimensions requested explicitly in the query.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Segments *segments;

@end


/**
 *  Resource that represents a daily Repricing product report. Each report
 *  contains stats for a single type of Repricing rule for a single product on a
 *  given day. If there are multiple rules of the same type for the product on
 *  that day, the report lists all the rules by rule ids, combines the stats,
 *  and paginates the results by date. To retrieve the stats of a particular
 *  rule, provide the rule_id in the request.
 */
@interface GTLRShoppingContent_RepricingProductReport : GTLRObject

/**
 *  Total count of Repricer applications. This value captures how many times the
 *  rule of this type was applied to this product during this reporting period.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *applicationCount;

/** Stats specific to buybox winning rules for product report (deprecated). */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RepricingProductReportBuyboxWinningProductStats *buyboxWinningProductStats;

/**
 *  Date of the stats in this report. The report starts and ends according to
 *  the merchant's timezone.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Date *date;

/** Maximum displayed price after repriced during this reporting period. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PriceAmount *highWatermark;

/**
 *  List of all reasons the rule did not apply to the product during the
 *  specified reporting period.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_InapplicabilityDetails *> *inapplicabilityDetails;

/** Minimum displayed price after repriced during this reporting period. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PriceAmount *lowWatermark;

/**
 *  Total unit count of impacted products ordered while the rule was active on
 *  the date of the report. This count includes all orders that were started
 *  while the rule was active, even if the rule was no longer active when the
 *  order was completed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *orderItemCount;

/** Ids of the Repricing rule for this report. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ruleIds;

/**
 *  Total GMV generated by impacted products while the rule was active on the
 *  date of the report. This value includes all orders that were started while
 *  the rule was active, even if the rule was no longer active when the order
 *  was completed.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PriceAmount *totalGmv;

/**
 *  Type of the rule.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_RepricingProductReport_Type_RepricingRuleTypeUnspecified
 *        Unused. (Value: "REPRICING_RULE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_RepricingProductReport_Type_TypeCogsBased
 *        Cost of goods sale based rule. Repricer will adjust the offer price
 *        based on the offer's sale cost which is provided by the merchant.
 *        (Value: "TYPE_COGS_BASED")
 *    @arg @c kGTLRShoppingContent_RepricingProductReport_Type_TypeCompetitivePrice
 *        Competitive price rule. Repricer will adjust the offer price based on
 *        the min price from a list of unnamed big competitors. (Value:
 *        "TYPE_COMPETITIVE_PRICE")
 *    @arg @c kGTLRShoppingContent_RepricingProductReport_Type_TypeSalesVolumeBased
 *        Sales volume based rule. Repricer will adjust the offer price based on
 *        the offer's sales volume in the past period of time defined within the
 *        rule. (Value: "TYPE_SALES_VOLUME_BASED")
 *    @arg @c kGTLRShoppingContent_RepricingProductReport_Type_TypeStatsBased
 *        Statistical measurement based rules among Google SA merchants. If this
 *        rule is chosen, repricer will adjust the offer price based on
 *        statistical metrics (currently only min is available) among other
 *        merchants who sell the same product. Details need to be provdided in
 *        the RuleDefinition. (Value: "TYPE_STATS_BASED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Stats specific to buybox winning rules for product report.
 */
@interface GTLRShoppingContent_RepricingProductReportBuyboxWinningProductStats : GTLRObject

/**
 *  Number of times this product won the buybox with these rules during this
 *  time period.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *buyboxWinsCount;

@end


/**
 *  Represents a repricing rule. A repricing rule is used by shopping serving to
 *  adjust transactable offer prices if conditions are met. Next ID: 24
 */
@interface GTLRShoppingContent_RepricingRule : GTLRObject

/**
 *  The rule definition for TYPE_COGS_BASED. Required when the rule type is
 *  TYPE_COGS_BASED.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RepricingRuleCostOfGoodsSaleRule *cogsBasedRule;

/**
 *  Required. Immutable. [CLDR country
 *  code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml)
 *  (e.g. "US").
 */
@property(nonatomic, copy, nullable) NSString *countryCode;

/** Required. Time period when the rule should take effect. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RepricingRuleEffectiveTime *effectiveTimePeriod;

/** Required. Match criteria for the eligible offers. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RepricingRuleEligibleOfferMatcher *eligibleOfferMatcher;

/**
 *  Required. Immutable. The two-letter ISO 639-1 language code associated with
 *  the repricing rule.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Output only. Immutable. Merchant that owns the repricing rule.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/**
 *  Represents whether a rule is paused. A paused rule will behave like a
 *  non-paused rule within CRUD operations, with the major difference that a
 *  paused rule will not be evaluated and will have no effect on offers.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *paused;

/** Required. Restriction of the rule appliance. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RepricingRuleRestriction *restriction;

/**
 *  Output only. Immutable. The ID to uniquely identify each repricing rule.
 */
@property(nonatomic, copy, nullable) NSString *ruleId;

/**
 *  The rule definition for TYPE_STATS_BASED. Required when the rule type is
 *  TYPE_STATS_BASED.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RepricingRuleStatsBasedRule *statsBasedRule;

/** The title for the rule. */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  Required. Immutable. The type of the rule.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_RepricingRule_Type_RepricingRuleTypeUnspecified
 *        Unused. (Value: "REPRICING_RULE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_RepricingRule_Type_TypeCogsBased Cost of
 *        goods sale based rule. Repricer will adjust the offer price based on
 *        the offer's sale cost which is provided by the merchant. (Value:
 *        "TYPE_COGS_BASED")
 *    @arg @c kGTLRShoppingContent_RepricingRule_Type_TypeCompetitivePrice
 *        Competitive price rule. Repricer will adjust the offer price based on
 *        the min price from a list of unnamed big competitors. (Value:
 *        "TYPE_COMPETITIVE_PRICE")
 *    @arg @c kGTLRShoppingContent_RepricingRule_Type_TypeSalesVolumeBased Sales
 *        volume based rule. Repricer will adjust the offer price based on the
 *        offer's sales volume in the past period of time defined within the
 *        rule. (Value: "TYPE_SALES_VOLUME_BASED")
 *    @arg @c kGTLRShoppingContent_RepricingRule_Type_TypeStatsBased Statistical
 *        measurement based rules among Google SA merchants. If this rule is
 *        chosen, repricer will adjust the offer price based on statistical
 *        metrics (currently only min is available) among other merchants who
 *        sell the same product. Details need to be provdided in the
 *        RuleDefinition. (Value: "TYPE_STATS_BASED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  A repricing rule that changes the sale price based on cost of goods sale.
 */
@interface GTLRShoppingContent_RepricingRuleCostOfGoodsSaleRule : GTLRObject

/**
 *  The percent change against the COGS. Ex: 20 would mean to set the adjusted
 *  price 1.2X of the COGS data.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *percentageDelta;

/** The price delta against the COGS. E.g. 2 means $2 more of the COGS. */
@property(nonatomic, copy, nullable) NSString *priceDelta;

@end


/**
 *  GTLRShoppingContent_RepricingRuleEffectiveTime
 */
@interface GTLRShoppingContent_RepricingRuleEffectiveTime : GTLRObject

/**
 *  A list of fixed time periods combined with OR. The maximum number of entries
 *  is limited to 5.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_RepricingRuleEffectiveTimeFixedTimePeriod *> *fixedTimePeriods;

@end


/**
 *  Definition of a fixed time period.
 */
@interface GTLRShoppingContent_RepricingRuleEffectiveTimeFixedTimePeriod : GTLRObject

/**
 *  The end time (exclusive) of the period. It can only be hour granularity.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  The start time (inclusive) of the period. It can only be hour granularity.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  Matcher that specifies eligible offers. When the USE_FEED_ATTRIBUTE option
 *  is selected, only the repricing_rule_id attribute on the product feed is
 *  used to specify offer-rule mapping. When the CUSTOM_FILTER option is
 *  selected, only the *_matcher fields are used to filter the offers for
 *  offer-rule mapping. If the CUSTOM_FILTER option is selected, an offer needs
 *  to satisfy each custom filter matcher to be eligible for a rule. Size limit:
 *  the sum of the number of entries in all the matchers should not exceed 20.
 *  For example, there can be 15 product ids and 5 brands, but not 10 product
 *  ids and 11 brands.
 */
@interface GTLRShoppingContent_RepricingRuleEligibleOfferMatcher : GTLRObject

/** Filter by the brand. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RepricingRuleEligibleOfferMatcherStringMatcher *brandMatcher;

/** Filter by the item group id. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RepricingRuleEligibleOfferMatcherStringMatcher *itemGroupIdMatcher;

/**
 *  Determines whether to use the custom matchers or the product feed attribute
 *  "repricing_rule_id" to specify offer-rule mapping.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_RepricingRuleEligibleOfferMatcher_MatcherOption_MatcherOptionAllProducts
 *        Matching all products. (Value: "MATCHER_OPTION_ALL_PRODUCTS")
 *    @arg @c kGTLRShoppingContent_RepricingRuleEligibleOfferMatcher_MatcherOption_MatcherOptionCustomFilter
 *        Use custom filters. (Value: "MATCHER_OPTION_CUSTOM_FILTER")
 *    @arg @c kGTLRShoppingContent_RepricingRuleEligibleOfferMatcher_MatcherOption_MatcherOptionUnspecified
 *        Unused. (Value: "MATCHER_OPTION_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_RepricingRuleEligibleOfferMatcher_MatcherOption_MatcherOptionUseFeedAttribute
 *        Use repricing_rule_id feed attribute on the product resource to
 *        specify offer-rule mapping. (Value:
 *        "MATCHER_OPTION_USE_FEED_ATTRIBUTE")
 */
@property(nonatomic, copy, nullable) NSString *matcherOption;

/** Filter by the offer id. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RepricingRuleEligibleOfferMatcherStringMatcher *offerIdMatcher;

/**
 *  When true, the rule won't be applied to offers with active promotions.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *skipWhenOnPromotion;

@end


/**
 *  Matcher by string attributes.
 */
@interface GTLRShoppingContent_RepricingRuleEligibleOfferMatcherStringMatcher : GTLRObject

/**
 *  String attributes, as long as such attribute of an offer is one of the
 *  string attribute values, the offer is considered as passing the matcher. The
 *  string matcher checks an offer for inclusivity in the string attributes, not
 *  equality. Only literal string matching is supported, no regex.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *strAttributes;

@end


/**
 *  Resource that represents a daily Repricing rule report. Next ID: 11
 */
@interface GTLRShoppingContent_RepricingRuleReport : GTLRObject

/** Stats specific to buybox winning rules for rule report (deprecated). */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RepricingRuleReportBuyboxWinningRuleStats *buyboxWinningRuleStats;

/**
 *  Date of the stats in this report. The report starts and ends according to
 *  the merchant's timezone.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Date *date;

/**
 *  List of product ids that are impacted by this rule during this reporting
 *  period. Out of stock products and products not searched for by customers are
 *  examples of non-impacted products.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *impactedProducts;

/**
 *  List of all reasons the rule did not apply to the inapplicable products
 *  during the specified reporting period.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_InapplicabilityDetails *> *inapplicabilityDetails;

/**
 *  List of product ids that are inapplicable to this rule during this reporting
 *  period. To get the inapplicable reason for a specific product, see
 *  RepricingProductReport.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *inapplicableProducts;

/**
 *  Total unit count of impacted products ordered while the rule was active on
 *  the date of the report. This count includes all orders that were started
 *  while the rule was active, even if the rule was no longer active when the
 *  order was completed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *orderItemCount;

/** Id of the Repricing rule for this report. */
@property(nonatomic, copy, nullable) NSString *ruleId;

/**
 *  Total GMV generated by impacted products while the rule was active on the
 *  date of the report. This value includes all orders that were started while
 *  the rule was active, even if the rule was no longer active when the order
 *  was completed.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PriceAmount *totalGmv;

/**
 *  Type of the rule.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_RepricingRuleReport_Type_RepricingRuleTypeUnspecified
 *        Unused. (Value: "REPRICING_RULE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_RepricingRuleReport_Type_TypeCogsBased Cost
 *        of goods sale based rule. Repricer will adjust the offer price based
 *        on the offer's sale cost which is provided by the merchant. (Value:
 *        "TYPE_COGS_BASED")
 *    @arg @c kGTLRShoppingContent_RepricingRuleReport_Type_TypeCompetitivePrice
 *        Competitive price rule. Repricer will adjust the offer price based on
 *        the min price from a list of unnamed big competitors. (Value:
 *        "TYPE_COMPETITIVE_PRICE")
 *    @arg @c kGTLRShoppingContent_RepricingRuleReport_Type_TypeSalesVolumeBased
 *        Sales volume based rule. Repricer will adjust the offer price based on
 *        the offer's sales volume in the past period of time defined within the
 *        rule. (Value: "TYPE_SALES_VOLUME_BASED")
 *    @arg @c kGTLRShoppingContent_RepricingRuleReport_Type_TypeStatsBased
 *        Statistical measurement based rules among Google SA merchants. If this
 *        rule is chosen, repricer will adjust the offer price based on
 *        statistical metrics (currently only min is available) among other
 *        merchants who sell the same product. Details need to be provdided in
 *        the RuleDefinition. (Value: "TYPE_STATS_BASED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Stats specific to buybox winning rules for rule report.
 */
@interface GTLRShoppingContent_RepricingRuleReportBuyboxWinningRuleStats : GTLRObject

/**
 *  Number of unique products that won the buybox with this rule during this
 *  period of time.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *buyboxWonProductCount;

@end


/**
 *  Definition of a rule restriction. At least one of the following needs to be
 *  true: (1) use_auto_pricing_min_price is true (2) floor.price_delta exists
 *  (3) floor.percentage_delta exists If floor.price_delta and
 *  floor.percentage_delta are both set on a rule, the highest value will be
 *  chosen by the Repricer. In other words, for a product with a price of $50,
 *  if the `floor.percentage_delta` is "-10" and the floor.price_delta is "-12",
 *  the offer price will only be lowered $5 (10% lower than the original offer
 *  price).
 */
@interface GTLRShoppingContent_RepricingRuleRestriction : GTLRObject

/**
 *  The inclusive floor lower bound. The repricing rule only applies when new
 *  price >= floor.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_RepricingRuleRestrictionBoundary *floor;

/**
 *  If true, use the AUTO_PRICING_MIN_PRICE offer attribute as the lower bound
 *  of the rule. If use_auto_pricing_min_price is true, then only offers with
 *  `AUTO_PRICING_MIN_PRICE` existing on the offer will get Repricer treatment,
 *  even if a floor value is set on the rule. Also, if
 *  use_auto_pricing_min_price is true, the floor restriction will be ignored.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *useAutoPricingMinPrice;

@end


/**
 *  Definition of a boundary.
 */
@interface GTLRShoppingContent_RepricingRuleRestrictionBoundary : GTLRObject

/**
 *  The percentage delta relative to the offer selling price. This field is
 *  signed. It must be negative in floor. When it is used in floor, it should be
 *  > -100. For example, if an offer is selling at $10 and this field is -30 in
 *  floor, the repricing rule only applies if the calculated new price is >= $7.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *percentageDelta;

/**
 *  The price micros relative to the offer selling price. This field is signed.
 *  It must be negative in floor. For example, if an offer is selling at $10 and
 *  this field is -$2 in floor, the repricing rule only applies if the
 *  calculated new price is >= $8.
 */
@property(nonatomic, copy, nullable) NSString *priceDelta;

@end


/**
 *  Definition of stats based rule.
 */
@interface GTLRShoppingContent_RepricingRuleStatsBasedRule : GTLRObject

/**
 *  The percent change against the price target. Valid from 0 to 100
 *  inclusively.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *percentageDelta;

/**
 *  The price delta against the above price target. A positive value means the
 *  price should be adjusted to be above statistical measure, and a negative
 *  value means below. Currency code must not be included.
 */
@property(nonatomic, copy, nullable) NSString *priceDelta;

@end


/**
 *  Request message for the RequestPhoneVerification method.
 */
@interface GTLRShoppingContent_RequestPhoneVerificationRequest : GTLRObject

/**
 *  Language code [IETF BCP 47 syntax](https://tools.ietf.org/html/bcp47) (for
 *  example, en-US). Language code is used to provide localized `SMS` and
 *  `PHONE_CALL`. Default language used is en-US if not provided.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/** Phone number to be verified. */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

/**
 *  Required. Two letter country code for the phone number, for example `CA` for
 *  Canadian numbers. See the [ISO 3166-1
 *  alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements)
 *  officially assigned codes.
 */
@property(nonatomic, copy, nullable) NSString *phoneRegionCode;

/**
 *  Verification method to receive verification code.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_RequestPhoneVerificationRequest_PhoneVerificationMethod_PhoneCall
 *        Receive verification code by phone call. (Value: "PHONE_CALL")
 *    @arg @c kGTLRShoppingContent_RequestPhoneVerificationRequest_PhoneVerificationMethod_PhoneVerificationMethodUnspecified
 *        Unknown method. (Value: "PHONE_VERIFICATION_METHOD_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_RequestPhoneVerificationRequest_PhoneVerificationMethod_Sms
 *        Receive verification code by SMS. (Value: "SMS")
 */
@property(nonatomic, copy, nullable) NSString *phoneVerificationMethod;

@end


/**
 *  Response message for the RequestPhoneVerification method.
 */
@interface GTLRShoppingContent_RequestPhoneVerificationResponse : GTLRObject

/** The verification ID to use in subsequent calls to `verifyphonenumber`. */
@property(nonatomic, copy, nullable) NSString *verificationId;

@end


/**
 *  Request message for the RequestReviewProgram method.
 */
@interface GTLRShoppingContent_RequestReviewBuyOnGoogleProgramRequest : GTLRObject
@end


/**
 *  Request message for the RequestReviewFreeListings Program method.
 */
@interface GTLRShoppingContent_RequestReviewFreeListingsRequest : GTLRObject

/**
 *  The code [ISO 3166-1
 *  alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the country
 *  for which review is to be requested.
 */
@property(nonatomic, copy, nullable) NSString *regionCode;

@end


/**
 *  Request message for the RequestReviewShoppingAds program method.
 */
@interface GTLRShoppingContent_RequestReviewShoppingAdsRequest : GTLRObject

/**
 *  The code [ISO 3166-1
 *  alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the country
 *  for which review is to be requested.
 */
@property(nonatomic, copy, nullable) NSString *regionCode;

@end


/**
 *  Return address resource.
 */
@interface GTLRShoppingContent_ReturnAddress : GTLRObject

/** Required. The address. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ReturnAddressAddress *address;

/** Required. The country of sale where the return address is applicable. */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#returnAddress`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Required. The user-defined label of the return address. For the default
 *  address, use the label "default".
 */
@property(nonatomic, copy, nullable) NSString *label;

/** Required. The merchant's contact phone number regarding the return. */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

/** Return address ID generated by Google. */
@property(nonatomic, copy, nullable) NSString *returnAddressId;

@end


/**
 *  GTLRShoppingContent_ReturnAddressAddress
 */
@interface GTLRShoppingContent_ReturnAddressAddress : GTLRObject

/** CLDR country code (for example, "US"). */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  City, town or commune. May also include dependent localities or
 *  sublocalities (for example, neighborhoods or suburbs).
 */
@property(nonatomic, copy, nullable) NSString *locality;

/** Postal code or ZIP (for example, "94043"). */
@property(nonatomic, copy, nullable) NSString *postalCode;

/** Name of the recipient to address returns to. */
@property(nonatomic, copy, nullable) NSString *recipientName;

/**
 *  Top-level administrative subdivision of the country. For example, a state
 *  like California ("CA") or a province like Quebec ("QC").
 */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  Street-level part of the address. May be up to two lines, each line
 *  specified as an array element.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *streetAddress;

@end


/**
 *  GTLRShoppingContent_ReturnaddressCustomBatchRequest
 */
@interface GTLRShoppingContent_ReturnaddressCustomBatchRequest : GTLRObject

/** The request entries to be processed in the batch. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ReturnaddressCustomBatchRequestEntry *> *entries;

@end


/**
 *  GTLRShoppingContent_ReturnaddressCustomBatchRequestEntry
 */
@interface GTLRShoppingContent_ReturnaddressCustomBatchRequestEntry : GTLRObject

/**
 *  An entry ID, unique within the batch request.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  The Merchant Center account ID.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/**
 *  Method of the batch request entry. Acceptable values are: - "`delete`" -
 *  "`get`" - "`insert`"
 */
@property(nonatomic, copy, nullable) NSString *method;

/**
 *  The return address to submit. This should be set only if the method is
 *  `insert`.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ReturnAddress *returnAddress;

/**
 *  The return address ID. This should be set only if the method is `delete` or
 *  `get`.
 */
@property(nonatomic, copy, nullable) NSString *returnAddressId;

@end


/**
 *  GTLRShoppingContent_ReturnaddressCustomBatchResponse
 */
@interface GTLRShoppingContent_ReturnaddressCustomBatchResponse : GTLRObject

/** The result of the execution of the batch requests. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ReturnaddressCustomBatchResponseEntry *> *entries;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#returnaddressCustomBatchResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_ReturnaddressCustomBatchResponseEntry
 */
@interface GTLRShoppingContent_ReturnaddressCustomBatchResponseEntry : GTLRObject

/**
 *  The ID of the request entry to which this entry responds.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/** A list of errors defined if, and only if, the request failed. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Errors *errors;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#returnaddressCustomBatchResponseEntry`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The retrieved return address. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ReturnAddress *returnAddress;

@end


/**
 *  GTLRShoppingContent_ReturnaddressListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_ReturnaddressListResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#returnaddressListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of addresses. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ReturnAddress *> *resources;

@end


/**
 *  Return policy resource.
 */
@interface GTLRShoppingContent_ReturnPolicy : GTLRObject

/** Required. The country of sale where the return policy is applicable. */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#returnPolicy`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Required. The user-defined label of the return policy. For the default
 *  policy, use the label "default".
 */
@property(nonatomic, copy, nullable) NSString *label;

/** Required. The name of the policy as shown in Merchant Center. */
@property(nonatomic, copy, nullable) NSString *name;

/** Return reasons that will incur return fees. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *nonFreeReturnReasons;

/** Required. The policy. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ReturnPolicyPolicy *policy;

/** Return policy ID generated by Google. */
@property(nonatomic, copy, nullable) NSString *returnPolicyId;

/** The return shipping fee that will apply to non free return reasons. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *returnShippingFee;

/** An optional list of seasonal overrides. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ReturnPolicySeasonalOverride *> *seasonalOverrides;

@end


/**
 *  GTLRShoppingContent_ReturnpolicyCustomBatchRequest
 */
@interface GTLRShoppingContent_ReturnpolicyCustomBatchRequest : GTLRObject

/** The request entries to be processed in the batch. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ReturnpolicyCustomBatchRequestEntry *> *entries;

@end


/**
 *  GTLRShoppingContent_ReturnpolicyCustomBatchRequestEntry
 */
@interface GTLRShoppingContent_ReturnpolicyCustomBatchRequestEntry : GTLRObject

/**
 *  An entry ID, unique within the batch request.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  The Merchant Center account ID.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/**
 *  Method of the batch request entry. Acceptable values are: - "`delete`" -
 *  "`get`" - "`insert`"
 */
@property(nonatomic, copy, nullable) NSString *method;

/**
 *  The return policy to submit. This should be set only if the method is
 *  `insert`.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ReturnPolicy *returnPolicy;

/**
 *  The return policy ID. This should be set only if the method is `delete` or
 *  `get`.
 */
@property(nonatomic, copy, nullable) NSString *returnPolicyId;

@end


/**
 *  GTLRShoppingContent_ReturnpolicyCustomBatchResponse
 */
@interface GTLRShoppingContent_ReturnpolicyCustomBatchResponse : GTLRObject

/** The result of the execution of the batch requests. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ReturnpolicyCustomBatchResponseEntry *> *entries;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#returnpolicyCustomBatchResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_ReturnpolicyCustomBatchResponseEntry
 */
@interface GTLRShoppingContent_ReturnpolicyCustomBatchResponseEntry : GTLRObject

/**
 *  The ID of the request entry to which this entry responds.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/** A list of errors defined if, and only if, the request failed. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Errors *errors;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#returnpolicyCustomBatchResponseEntry`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The retrieved return policy. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ReturnPolicy *returnPolicy;

@end


/**
 *  GTLRShoppingContent_ReturnpolicyListResponse
 */
@interface GTLRShoppingContent_ReturnpolicyListResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#returnpolicyListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ReturnPolicy *> *resources;

@end


/**
 *  Return policy online object. This is currently used to represent return
 *  policies for ads and free listings programs.
 */
@interface GTLRShoppingContent_ReturnPolicyOnline : GTLRObject

/**
 *  The countries of sale where the return policy is applicable. The values must
 *  be a valid 2 letter ISO 3166 code, e.g. "US".
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *countries;

/**
 *  The item conditions that are accepted for returns. This is required to not
 *  be empty unless the type of return policy is noReturns.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *itemConditions;

/**
 *  The unique user-defined label of the return policy. The same label cannot be
 *  used in different return policies for the same country. Policies with the
 *  label 'default' will apply to all products, unless a product specifies a
 *  return_policy_label attribute.
 */
@property(nonatomic, copy, nullable) NSString *label;

/** The name of the policy as shown in Merchant Center. */
@property(nonatomic, copy, nullable) NSString *name;

/** The return policy. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ReturnPolicyOnlinePolicy *policy;

/**
 *  The restocking fee that applies to all return reason categories. This would
 *  be treated as a free restocking fee if the value is not set.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ReturnPolicyOnlineRestockingFee *restockingFee;

/**
 *  The return methods of how customers can return an item. This value is
 *  required to not be empty unless the type of return policy is noReturns.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *returnMethods;

/** Output only. Return policy ID generated by Google. */
@property(nonatomic, copy, nullable) NSString *returnPolicyId;

/**
 *  The return policy uri. This can used by Google to do a sanity check for the
 *  policy.
 */
@property(nonatomic, copy, nullable) NSString *returnPolicyUri;

/**
 *  The return reason category information. This required to not be empty unless
 *  the type of return policy is noReturns.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo *> *returnReasonCategoryInfo;

@end


/**
 *  The available policies.
 */
@interface GTLRShoppingContent_ReturnPolicyOnlinePolicy : GTLRObject

/**
 *  The number of days items can be returned after delivery, where one day is
 *  defined to be 24 hours after the delivery timestamp. Required for
 *  `numberOfDaysAfterDelivery` returns.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *days;

/**
 *  Policy type.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_ReturnPolicyOnlinePolicy_Type_LifetimeReturns
 *        Life time returns. (Value: "LIFETIME_RETURNS")
 *    @arg @c kGTLRShoppingContent_ReturnPolicyOnlinePolicy_Type_NoReturns No
 *        returns. (Value: "NO_RETURNS")
 *    @arg @c kGTLRShoppingContent_ReturnPolicyOnlinePolicy_Type_NumberOfDaysAfterDelivery
 *        Number of days after a return is delivered. (Value:
 *        "NUMBER_OF_DAYS_AFTER_DELIVERY")
 *    @arg @c kGTLRShoppingContent_ReturnPolicyOnlinePolicy_Type_TypeUnspecified
 *        Default value. This value is unused. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  The restocking fee. This can either be a fixed fee or a micro percent.
 */
@interface GTLRShoppingContent_ReturnPolicyOnlineRestockingFee : GTLRObject

/** Fixed restocking fee. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PriceAmount *fixedFee;

/**
 *  Percent of total price in micros. 15,000,000 means 15% of the total price
 *  would be charged.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *microPercent;

@end


/**
 *  The return reason category info wrapper.
 */
@interface GTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo : GTLRObject

/**
 *  The corresponding return label source.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo_ReturnLabelSource_CustomerResponsibility
 *        Customers' responsibility to get the label. (Value:
 *        "CUSTOMER_RESPONSIBILITY")
 *    @arg @c kGTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo_ReturnLabelSource_DownloadAndPrint
 *        Download and print the label. (Value: "DOWNLOAD_AND_PRINT")
 *    @arg @c kGTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo_ReturnLabelSource_InTheBox
 *        Label in the box. (Value: "IN_THE_BOX")
 *    @arg @c kGTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo_ReturnLabelSource_ReturnLabelSourceUnspecified
 *        Default value. This value is unused. (Value:
 *        "RETURN_LABEL_SOURCE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *returnLabelSource;

/**
 *  The return reason category.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo_ReturnReasonCategory_BuyerRemorse
 *        Buyer remorse. (Value: "BUYER_REMORSE")
 *    @arg @c kGTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo_ReturnReasonCategory_ItemDefect
 *        Item defect. (Value: "ITEM_DEFECT")
 *    @arg @c kGTLRShoppingContent_ReturnPolicyOnlineReturnReasonCategoryInfo_ReturnReasonCategory_ReturnReasonCategoryUnspecified
 *        Default value. This value is unused. (Value:
 *        "RETURN_REASON_CATEGORY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *returnReasonCategory;

/**
 *  The corresponding return shipping fee. This is only applicable when
 *  returnLabelSource is not the customer's responsibility.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ReturnPolicyOnlineReturnShippingFee *returnShippingFee;

@end


/**
 *  The return shipping fee. This can either be a fixed fee or a boolean to
 *  indicate that the customer pays the actual shipping cost.
 */
@interface GTLRShoppingContent_ReturnPolicyOnlineReturnShippingFee : GTLRObject

/**
 *  Fixed return shipping fee amount. This value is only applicable when type is
 *  FIXED. We will treat the return shipping fee as free if type is FIXED and
 *  this value is not set.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PriceAmount *fixedFee;

/**
 *  Type of return shipping fee.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_ReturnPolicyOnlineReturnShippingFee_Type_CustomerPayingActualFee
 *        Customer will pay the actual return shipping fee. (Value:
 *        "CUSTOMER_PAYING_ACTUAL_FEE")
 *    @arg @c kGTLRShoppingContent_ReturnPolicyOnlineReturnShippingFee_Type_Fixed
 *        The return shipping fee is a fixed value. (Value: "FIXED")
 *    @arg @c kGTLRShoppingContent_ReturnPolicyOnlineReturnShippingFee_Type_TypeUnspecified
 *        Default value. This value is unused. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRShoppingContent_ReturnPolicyPolicy
 */
@interface GTLRShoppingContent_ReturnPolicyPolicy : GTLRObject

/**
 *  Required. Last day for returning the items. In ISO 8601 format. When
 *  specifying the return window like this, set the policy type to
 *  "lastReturnDate". Use this for seasonal overrides only.
 */
@property(nonatomic, copy, nullable) NSString *lastReturnDate;

/**
 *  The number of days items can be returned after delivery, where one day is
 *  defined to be 24 hours after the delivery timestamp. When specifying the
 *  return window like this, set the policy type to "numberOfDaysAfterDelivery".
 *  Acceptable values are 30, 45, 60, 90, 100, 180, 270 and 365 for the default
 *  policy. Additional policies further allow 14, 15, 21 and 28 days, but note
 *  that for most items a minimum of 30 days is required for returns. Exceptions
 *  may be made for electronics. A policy of less than 30 days can only be
 *  applied to those items.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numberOfDays;

/**
 *  Policy type. Use "lastReturnDate" for seasonal overrides only. Note that for
 *  most items a minimum of 30 days is required for returns. Exceptions may be
 *  made for electronics or non-returnable items such as food, perishables, and
 *  living things. A policy of less than 30 days can only be applied to those
 *  items. Acceptable values are: - "`lastReturnDate`" - "`lifetimeReturns`" -
 *  "`noReturns`" - "`numberOfDaysAfterDelivery`"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRShoppingContent_ReturnPolicySeasonalOverride
 */
@interface GTLRShoppingContent_ReturnPolicySeasonalOverride : GTLRObject

/** Required. Last day on which the override applies. In ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *endDate;

/**
 *  Required. The name of the seasonal override as shown in Merchant Center.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Required. The policy which is in effect during that time. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ReturnPolicyPolicy *policy;

/** Required. First day on which the override applies. In ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *startDate;

@end


/**
 *  GTLRShoppingContent_ReturnPricingInfo
 */
@interface GTLRShoppingContent_ReturnPricingInfo : GTLRObject

/**
 *  Default option for whether merchant should charge the customer for return
 *  shipping costs, based on customer selected return reason and merchant's
 *  return policy for the items being returned.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *chargeReturnShippingFee;

/**
 *  Maximum return shipping costs that may be charged to the customer depending
 *  on merchant's assessment of the return reason and the merchant's return
 *  policy for the items being returned.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_MonetaryAmount *maxReturnShippingFee;

/**
 *  Total amount that can be refunded for the items in this return. It
 *  represents the total amount received by the merchant for the items, after
 *  applying merchant coupons.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_MonetaryAmount *refundableItemsTotalAmount;

/** Maximum amount that can be refunded for the original shipping fee. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_MonetaryAmount *refundableShippingAmount;

/**
 *  Total amount already refunded by the merchant. It includes all types of
 *  refunds (items, shipping, etc.) Not provided if no refund has been applied
 *  yet.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_MonetaryAmount *totalRefundedAmount;

@end


/**
 *  GTLRShoppingContent_ReturnShipment
 */
@interface GTLRShoppingContent_ReturnShipment : GTLRObject

/** The date of creation of the shipment, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *creationDate;

/** The date of delivery of the shipment, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *deliveryDate;

/**
 *  Type of the return method. Acceptable values are: - "`byMail`" -
 *  "`contactCustomerSupport`" - "`returnless`" - "`inStore`"
 */
@property(nonatomic, copy, nullable) NSString *returnMethodType;

/** Shipment ID generated by Google. */
@property(nonatomic, copy, nullable) NSString *shipmentId;

/**
 *  Tracking information of the shipment. One return shipment might be handled
 *  by several shipping carriers sequentially.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ShipmentTrackingInfo *> *shipmentTrackingInfos;

/** The date of shipping of the shipment, in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *shippingDate;

/**
 *  State of the shipment. Acceptable values are: - "`completed`" - "`new`" -
 *  "`shipped`" - "`undeliverable`" - "`pending`"
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Return shipping label for a Buy on Google merchant-managed return.
 */
@interface GTLRShoppingContent_ReturnShippingLabel : GTLRObject

/** Name of the carrier. */
@property(nonatomic, copy, nullable) NSString *carrier;

/** The URL for the return shipping label in PDF format */
@property(nonatomic, copy, nullable) NSString *labelUri;

/** The tracking id of this return label. */
@property(nonatomic, copy, nullable) NSString *trackingId;

@end


/**
 *  GTLRShoppingContent_Row
 */
@interface GTLRShoppingContent_Row : GTLRObject

/**
 *  The list of cells that constitute the row. Must have the same length as
 *  `columnHeaders` for two-dimensional tables, a length of 1 for
 *  one-dimensional tables. Required.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_Value *> *cells;

@end


/**
 *  Request message for the ReportService.Search method.
 */
@interface GTLRShoppingContent_SearchRequest : GTLRObject

/**
 *  Number of ReportRows to retrieve in a single page. Defaults to the maximum
 *  of 1000. Values above 1000 are coerced to 1000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pageSize;

/**
 *  Token of the page to retrieve. If not specified, the first page of results
 *  is returned. In order to request the next page of results, the value
 *  obtained from `next_page_token` in the previous response should be used.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Query that defines performance metrics to retrieve and dimensions
 *  according to which the metrics are to be segmented. For details on how to
 *  construct your query, see the [Query Language
 *  guide](https://developers.google.com/shopping-content/guides/reports/query-language/overview).
 */
@property(nonatomic, copy, nullable) NSString *query;

@end


/**
 *  Response message for the ReportService.Search method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "results" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_SearchResponse : GTLRCollectionObject

/**
 *  Token which can be sent as `page_token` to retrieve the next page. If
 *  omitted, there are no subsequent pages.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Rows that matched the search query.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ReportRow *> *results;

@end


/**
 *  Dimensions according to which metrics are segmented in the response. Values
 *  of product dimensions, such as `offer_id`, reflect the state of a product at
 *  the time of the corresponding event, for example, impression or order.
 *  Segment fields cannot be selected in queries without also selecting at least
 *  one metric field. Values are only set for dimensions requested explicitly in
 *  the request's search query.
 */
@interface GTLRShoppingContent_Segments : GTLRObject

/** Brand of the product. */
@property(nonatomic, copy, nullable) NSString *brand;

/**
 *  [Product category (1st
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in Google's product taxonomy.
 */
@property(nonatomic, copy, nullable) NSString *categoryL1;

/**
 *  [Product category (2nd
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in Google's product taxonomy.
 */
@property(nonatomic, copy, nullable) NSString *categoryL2;

/**
 *  [Product category (3rd
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in Google's product taxonomy.
 */
@property(nonatomic, copy, nullable) NSString *categoryL3;

/**
 *  [Product category (4th
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in Google's product taxonomy.
 */
@property(nonatomic, copy, nullable) NSString *categoryL4;

/**
 *  [Product category (5th
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in Google's product taxonomy.
 */
@property(nonatomic, copy, nullable) NSString *categoryL5;

/**
 *  Currency in which price metrics are represented, for example, if you select
 *  `ordered_item_sales_micros`, the returned value will be represented by this
 *  currency.
 */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Code of the country where the customer is located at the time of the event.
 *  Represented in the ISO 3166 format. If the customer country cannot be
 *  determined, a special 'ZZ' code is returned.
 */
@property(nonatomic, copy, nullable) NSString *customerCountryCode;

/** Custom label 0 for custom grouping of products. */
@property(nonatomic, copy, nullable) NSString *customLabel0;

/** Custom label 1 for custom grouping of products. */
@property(nonatomic, copy, nullable) NSString *customLabel1;

/** Custom label 2 for custom grouping of products. */
@property(nonatomic, copy, nullable) NSString *customLabel2;

/** Custom label 3 for custom grouping of products. */
@property(nonatomic, copy, nullable) NSString *customLabel3;

/** Custom label 4 for custom grouping of products. */
@property(nonatomic, copy, nullable) NSString *customLabel4;

/** Date in the merchant timezone to which metrics apply. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Date *date;

/** Merchant-provided id of the product. */
@property(nonatomic, copy, nullable) NSString *offerId;

/**
 *  [Product type (1st
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in merchant's own product taxonomy.
 */
@property(nonatomic, copy, nullable) NSString *productTypeL1;

/**
 *  [Product type (2nd
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in merchant's own product taxonomy.
 */
@property(nonatomic, copy, nullable) NSString *productTypeL2;

/**
 *  [Product type (3rd
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in merchant's own product taxonomy.
 */
@property(nonatomic, copy, nullable) NSString *productTypeL3;

/**
 *  [Product type (4th
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in merchant's own product taxonomy.
 */
@property(nonatomic, copy, nullable) NSString *productTypeL4;

/**
 *  [Product type (5th
 *  level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type)
 *  in merchant's own product taxonomy.
 */
@property(nonatomic, copy, nullable) NSString *productTypeL5;

/**
 *  Program to which metrics apply, for example, Free Product Listing.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_Segments_Program_BuyOnGoogleListing Buy on
 *        Google Listing. (Value: "BUY_ON_GOOGLE_LISTING")
 *    @arg @c kGTLRShoppingContent_Segments_Program_FreeLocalProductListing Free
 *        Local Product Listing. (Value: "FREE_LOCAL_PRODUCT_LISTING")
 *    @arg @c kGTLRShoppingContent_Segments_Program_FreeProductListing Free
 *        Product Listing. (Value: "FREE_PRODUCT_LISTING")
 *    @arg @c kGTLRShoppingContent_Segments_Program_ProgramUnspecified Not
 *        specified. (Value: "PROGRAM_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_Segments_Program_ShoppingAds Shopping Ads.
 *        (Value: "SHOPPING_ADS")
 */
@property(nonatomic, copy, nullable) NSString *program;

/** Title of the product. */
@property(nonatomic, copy, nullable) NSString *title;

/**
 *  First day of the week (Monday) of the metrics date in the merchant timezone.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Date *week;

@end


/**
 *  GTLRShoppingContent_Service
 */
@interface GTLRShoppingContent_Service : GTLRObject

/**
 *  A boolean exposing the active status of the shipping service. Required.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *active;

/**
 *  The CLDR code of the currency to which this service applies. Must match that
 *  of the prices in rate groups.
 */
@property(nonatomic, copy, nullable) NSString *currency;

/**
 *  The CLDR territory code of the country to which the service applies.
 *  Required.
 */
@property(nonatomic, copy, nullable) NSString *deliveryCountry;

/**
 *  Time spent in various aspects from order to the delivery of the product.
 *  Required.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_DeliveryTime *deliveryTime;

/**
 *  Eligibility for this service. Acceptable values are: - "`All scenarios`" -
 *  "`All scenarios except Shopping Actions`" - "`Shopping Actions`"
 */
@property(nonatomic, copy, nullable) NSString *eligibility;

/**
 *  Minimum order value for this service. If set, indicates that customers will
 *  have to spend at least this amount. All prices within a service must have
 *  the same currency. Cannot be set together with minimum_order_value_table.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *minimumOrderValue;

/**
 *  Table of per store minimum order values for the pickup fulfillment type.
 *  Cannot be set together with minimum_order_value.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_MinimumOrderValueTable *minimumOrderValueTable;

/**
 *  Free-form name of the service. Must be unique within target account.
 *  Required.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The carrier-service pair delivering items to collection points. The list of
 *  supported pickup services can be retrieved through the
 *  `getSupportedPickupServices` method. Required if and only if the service
 *  delivery type is `pickup`.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_PickupCarrierService *pickupService;

/**
 *  Shipping rate group definitions. Only the last one is allowed to have an
 *  empty `applicableShippingLabels`, which means "everything else". The other
 *  `applicableShippingLabels` must not overlap.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_RateGroup *> *rateGroups;

/**
 *  Type of locations this service ships orders to. Acceptable values are: -
 *  "`delivery`" - "`pickup`"
 */
@property(nonatomic, copy, nullable) NSString *shipmentType;

@end


/**
 *  Settlement reports detail order-level and item-level credits and debits
 *  between you and Google.
 */
@interface GTLRShoppingContent_SettlementReport : GTLRObject

/**
 *  The end date on which all transactions are included in the report, in ISO
 *  8601 format.
 */
@property(nonatomic, copy, nullable) NSString *endDate;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#settlementReport`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The residual amount from the previous invoice. This is set only if the
 *  previous invoices are not paid because of negative balance.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *previousBalance;

/** The ID of the settlement report. */
@property(nonatomic, copy, nullable) NSString *settlementId;

/**
 *  The start date on which all transactions are included in the report, in ISO
 *  8601 format.
 */
@property(nonatomic, copy, nullable) NSString *startDate;

/** The money due to the merchant. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *transferAmount;

/**
 *  Date on which transfer for this payment was initiated by Google, in ISO 8601
 *  format.
 */
@property(nonatomic, copy, nullable) NSString *transferDate;

/**
 *  The list of bank identifiers used for the transfer. For example, Trace ID
 *  for Federal Automated Clearing House (ACH). This may also be known as the
 *  Wire ID.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *transferIds;

@end


/**
 *  GTLRShoppingContent_SettlementreportsListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_SettlementreportsListResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#settlementreportsListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of returns. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_SettlementReport *> *resources;

@end


/**
 *  Settlement transactions give a detailed breakdown of the settlement report.
 */
@interface GTLRShoppingContent_SettlementTransaction : GTLRObject

/** The amount for the transaction. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_SettlementTransactionAmount *amount;

/** Identifiers of the transaction. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_SettlementTransactionIdentifiers *identifiers;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#settlementTransaction`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Details of the transaction. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_SettlementTransactionTransaction *transaction;

@end


/**
 *  GTLRShoppingContent_SettlementTransactionAmount
 */
@interface GTLRShoppingContent_SettlementTransactionAmount : GTLRObject

@property(nonatomic, strong, nullable) GTLRShoppingContent_SettlementTransactionAmountCommission *commission;

/**
 *  The description of the event. Acceptable values are: - "`taxWithhold`" -
 *  "`principal`" - "`principalAdjustment`" - "`shippingFee`" -
 *  "`merchantRemittedSalesTax`" - "`googleRemittedSalesTax`" -
 *  "`merchantCoupon`" - "`merchantCouponTax`" - "`merchantRemittedDisposalTax`"
 *  - "`googleRemittedDisposalTax`" - "`merchantRemittedRedemptionFee`" -
 *  "`googleRemittedRedemptionFee`" - "`eeeEcoFee`" - "`furnitureEcoFee`" -
 *  "`copyPrivateFee`" - "`eeeEcoFeeCommission`" - "`furnitureEcoFeeCommission`"
 *  - "`copyPrivateFeeCommission`" - "`principalRefund`" -
 *  "`principalRefundTax`" - "`itemCommission`" - "`adjustmentCommission`" -
 *  "`shippingFeeCommission`" - "`commissionRefund`" - "`damaged`" -
 *  "`damagedOrDefectiveItem`" - "`expiredItem`" - "`faultyItem`" -
 *  "`incorrectItemReceived`" - "`itemMissing`" - "`qualityNotExpected`" -
 *  "`receivedTooLate`" - "`storePackageMissing`" - "`transitPackageMissing`" -
 *  "`unsuccessfulDeliveryUndeliverable`" - "`wrongChargeInStore`" -
 *  "`wrongItem`" - "`returns`" - "`undeliverable`" -
 *  "`issueRelatedRefundAndReplacementAmountDescription`" -
 *  "`refundFromMerchant`" - "`returnLabelShippingFee`" - "`lumpSumCorrection`"
 *  - "`pspFee`" - "`principalRefundDoesNotFit`" -
 *  "`principalRefundOrderedWrongItem`" - "`principalRefundQualityNotExpected`"
 *  - "`principalRefundBetterPriceFound`" - "`principalRefundNoLongerNeeded`" -
 *  "`principalRefundChangedMind`" - "`principalRefundReceivedTooLate`" -
 *  "`principalRefundIncorrectItemReceived`" -
 *  "`principalRefundDamagedOrDefectiveItem`" -
 *  "`principalRefundDidNotMatchDescription`" - "`principalRefundExpiredItem`"
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The amount that contributes to the line item price. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *transactionAmount;

/**
 *  The type of the amount. Acceptable values are: - "`itemPrice`" -
 *  "`orderPrice`" - "`refund`" - "`earlyRefund`" - "`courtesyRefund`" -
 *  "`returnRefund`" - "`returnLabelShippingFeeAmount`" -
 *  "`lumpSumCorrectionAmount`"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRShoppingContent_SettlementTransactionAmountCommission
 */
@interface GTLRShoppingContent_SettlementTransactionAmountCommission : GTLRObject

/**
 *  The category of the commission. Acceptable values are: -
 *  "`animalsAndPetSupplies`" - "`dogCatFoodAndCatLitter`" -
 *  "`apparelAndAccessories`" - "`shoesHandbagsAndSunglasses`" -
 *  "`costumesAndAccessories`" - "`jewelry`" - "`watches`" -
 *  "`hobbiesArtsAndCrafts`" - "`homeAndGarden`" - "`entertainmentCollectibles`"
 *  - "`collectibleCoins`" - "`sportsCollectibles`" - "`sportingGoods`" -
 *  "`toysAndGames`" - "`musicalInstruments`" - "`giftCards`" -
 *  "`babyAndToddler`" - "`babyFoodWipesAndDiapers`" - "`businessAndIndustrial`"
 *  - "`camerasOpticsAndPhotography`" - "`consumerElectronics`" -
 *  "`electronicsAccessories`" - "`personalComputers`" - "`videoGameConsoles`" -
 *  "`foodAndGrocery`" - "`beverages`" - "`tobaccoProducts`" - "`furniture`" -
 *  "`hardware`" - "`buildingMaterials`" - "`tools`" - "`healthAndPersonalCare`"
 *  - "`beauty`" - "`householdSupplies`" - "`kitchenAndDining`" -
 *  "`majorAppliances`" - "`luggageAndBags`" - "`media`" - "`officeSupplies`" -
 *  "`softwareAndVideoGames`" - "`vehiclePartsAndAccessories`" -
 *  "`vehicleTiresAndWheels`" - "`vehicles`" - "`everythingElse`"
 */
@property(nonatomic, copy, nullable) NSString *category;

/** Rate of the commission in percentage. */
@property(nonatomic, copy, nullable) NSString *rate;

@end


/**
 *  GTLRShoppingContent_SettlementTransactionIdentifiers
 */
@interface GTLRShoppingContent_SettlementTransactionIdentifiers : GTLRObject

/** The identifier of the adjustments, if it's available. */
@property(nonatomic, copy, nullable) NSString *adjustmentId;

/** The merchant provided order ID. */
@property(nonatomic, copy, nullable) NSString *merchantOrderId;

/** The identifier of the item. */
@property(nonatomic, copy, nullable) NSString *orderItemId;

/** The unique ID of the settlement transaction entry. */
@property(nonatomic, copy, nullable) NSString *settlementEntryId;

/** The shipment ids for the item. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *shipmentIds;

/** The Google transaction ID. */
@property(nonatomic, copy, nullable) NSString *transactionId;

@end


/**
 *  GTLRShoppingContent_SettlementtransactionsListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_SettlementtransactionsListResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#settlementtransactionsListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of returns. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_SettlementTransaction *> *resources;

@end


/**
 *  GTLRShoppingContent_SettlementTransactionTransaction
 */
@interface GTLRShoppingContent_SettlementTransactionTransaction : GTLRObject

/** The time on which the event occurred in ISO 8601 format. */
@property(nonatomic, copy, nullable) NSString *postDate;

/**
 *  The type of the transaction that occurred. Acceptable values are: -
 *  "`order`" - "`reversal`" - "`orderRefund`" - "`reversalRefund`" -
 *  "`issueRelatedRefundAndReplacement`" - "`returnLabelShippingFeeTransaction`"
 *  - "`reversalIssueRelatedRefundAndReplacement`" -
 *  "`reversalReturnLabelShippingFeeTransaction`" -
 *  "`lumpSumCorrectionTransaction`"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRShoppingContent_ShipmentInvoice
 */
@interface GTLRShoppingContent_ShipmentInvoice : GTLRObject

/** [required] Invoice summary. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_InvoiceSummary *invoiceSummary;

/** [required] Invoice details per line item. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ShipmentInvoiceLineItemInvoice *> *lineItemInvoices;

/**
 *  [required] ID of the shipment group. It is assigned by the merchant in the
 *  `shipLineItems` method and is used to group multiple line items that have
 *  the same kind of shipping charges.
 */
@property(nonatomic, copy, nullable) NSString *shipmentGroupId;

@end


/**
 *  GTLRShoppingContent_ShipmentInvoiceLineItemInvoice
 */
@interface GTLRShoppingContent_ShipmentInvoiceLineItemInvoice : GTLRObject

/** ID of the line item. Either lineItemId or productId must be set. */
@property(nonatomic, copy, nullable) NSString *lineItemId;

/**
 *  ID of the product. This is the REST ID used in the products service. Either
 *  lineItemId or productId must be set.
 */
@property(nonatomic, copy, nullable) NSString *productId;

/**
 *  [required] The shipment unit ID is assigned by the merchant and defines
 *  individual quantities within a line item. The same ID can be assigned to
 *  units that are the same while units that differ must be assigned a different
 *  ID (for example: free or promotional units).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *shipmentUnitIds;

/** [required] Invoice details for a single unit. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_UnitInvoice *unitInvoice;

@end


/**
 *  GTLRShoppingContent_ShipmentTrackingInfo
 */
@interface GTLRShoppingContent_ShipmentTrackingInfo : GTLRObject

/**
 *  The shipping carrier that handles the package. Acceptable values are: -
 *  "`boxtal`" - "`bpost`" - "`chronopost`" - "`colisPrive`" - "`colissimo`" -
 *  "`cxt`" - "`deliv`" - "`dhl`" - "`dpd`" - "`dynamex`" - "`eCourier`" -
 *  "`easypost`" - "`efw`" - "`fedex`" - "`fedexSmartpost`" - "`geodis`" -
 *  "`gls`" - "`googleCourier`" - "`gsx`" - "`jdLogistics`" - "`laPoste`" -
 *  "`lasership`" - "`manual`" - "`mpx`" - "`onTrac`" - "`other`" - "`tnt`" -
 *  "`uds`" - "`ups`" - "`usps`"
 */
@property(nonatomic, copy, nullable) NSString *carrier;

/** The tracking number for the package. */
@property(nonatomic, copy, nullable) NSString *trackingNumber;

@end


/**
 *  The merchant account's shipping settings. All methods except
 *  getsupportedcarriers and getsupportedholidays require the admin role.
 */
@interface GTLRShoppingContent_ShippingSettings : GTLRObject

/**
 *  The ID of the account to which these account shipping settings belong.
 *  Ignored upon update, always present in get request responses.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *accountId;

/**
 *  A list of postal code groups that can be referred to in `services`.
 *  Optional.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_PostalCodeGroup *> *postalCodeGroups;

/** The target account's list of services. Optional. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_Service *> *services;

/** Optional. A list of warehouses which can be referred to in `services`. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_Warehouse *> *warehouses;

@end


/**
 *  GTLRShoppingContent_ShippingsettingsCustomBatchRequest
 */
@interface GTLRShoppingContent_ShippingsettingsCustomBatchRequest : GTLRObject

/** The request entries to be processed in the batch. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ShippingsettingsCustomBatchRequestEntry *> *entries;

@end


/**
 *  A batch entry encoding a single non-batch shippingsettings request.
 */
@interface GTLRShoppingContent_ShippingsettingsCustomBatchRequestEntry : GTLRObject

/**
 *  The ID of the account for which to get/update account shipping settings.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *accountId;

/**
 *  An entry ID, unique within the batch request.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  The ID of the managing account.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *merchantId;

/**
 *  The method of the batch entry. Acceptable values are: - "`get`" - "`update`"
 */
@property(nonatomic, copy, nullable) NSString *method;

/**
 *  The account shipping settings to update. Only defined if the method is
 *  `update`.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ShippingSettings *shippingSettings;

@end


/**
 *  GTLRShoppingContent_ShippingsettingsCustomBatchResponse
 */
@interface GTLRShoppingContent_ShippingsettingsCustomBatchResponse : GTLRObject

/** The result of the execution of the batch requests. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ShippingsettingsCustomBatchResponseEntry *> *entries;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#shippingsettingsCustomBatchResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  A batch entry encoding a single non-batch shipping settings response.
 */
@interface GTLRShoppingContent_ShippingsettingsCustomBatchResponseEntry : GTLRObject

/**
 *  The ID of the request entry to which this entry responds.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *batchId;

/**
 *  A list of errors for failed custombatch entries. *Note:* Schema errors fail
 *  the whole request.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Errors *errors;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#shippingsettingsCustomBatchResponseEntry`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The retrieved or updated account shipping settings. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ShippingSettings *shippingSettings;

@end


/**
 *  GTLRShoppingContent_ShippingsettingsGetSupportedCarriersResponse
 */
@interface GTLRShoppingContent_ShippingsettingsGetSupportedCarriersResponse : GTLRObject

/** A list of supported carriers. May be empty. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_CarriersCarrier *> *carriers;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#shippingsettingsGetSupportedCarriersResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_ShippingsettingsGetSupportedHolidaysResponse
 */
@interface GTLRShoppingContent_ShippingsettingsGetSupportedHolidaysResponse : GTLRObject

/** A list of holidays applicable for delivery guarantees. May be empty. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_HolidaysHoliday *> *holidays;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#shippingsettingsGetSupportedHolidaysResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRShoppingContent_ShippingsettingsGetSupportedPickupServicesResponse
 */
@interface GTLRShoppingContent_ShippingsettingsGetSupportedPickupServicesResponse : GTLRObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#shippingsettingsGetSupportedPickupServicesResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** A list of supported pickup services. May be empty. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_PickupServicesPickupService *> *pickupServices;

@end


/**
 *  GTLRShoppingContent_ShippingsettingsListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRShoppingContent_ShippingsettingsListResponse : GTLRCollectionObject

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#shippingsettingsListResponse`".
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The token for the retrieval of the next page of shipping settings. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  resources
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ShippingSettings *> *resources;

@end


/**
 *  Response message for GetShoppingAdsProgramStatus.
 */
@interface GTLRShoppingContent_ShoppingAdsProgramStatus : GTLRObject

/**
 *  State of the program. `ENABLED` if there are offers for at least one region.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatus_GlobalState_Enabled
 *        Program is enabled and offers are uploaded for at least one country.
 *        (Value: "ENABLED")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatus_GlobalState_NoOffersUploaded
 *        No products have been uploaded for any region. Upload products to
 *        Merchant Center. (Value: "NO_OFFERS_UPLOADED")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatus_GlobalState_NotEnabled
 *        Program is not enabled for any country. (Value: "NOT_ENABLED")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatus_GlobalState_ProgramStateUnspecified
 *        State is unknown. (Value: "PROGRAM_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *globalState;

/**
 *  Status of the program in each region. Regions with the same status and
 *  review eligibility are grouped together in `regionCodes`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus *> *regionStatuses;

@end


/**
 *  Status of program and region.
 */
@interface GTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus : GTLRObject

/**
 *  Date by which eligibilityStatus will go from `WARNING` to `DISAPPROVED`.
 *  Only visible when your eligibilityStatus is WARNING. In [ISO
 *  8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DD`.
 */
@property(nonatomic, copy, nullable) NSString *disapprovalDate;

/**
 *  Eligibility status of the Shopping Ads program.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_EligibilityStatus_Approved
 *        If the account has no issues and review is completed successfully.
 *        (Value: "APPROVED")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_EligibilityStatus_Disapproved
 *        There are one or more issues that needs to be resolved for account to
 *        be active for the program. Detailed list of account issues are
 *        available in
 *        [accountstatuses](https://developers.google.com/shopping-content/reference/rest/v2.1/accountstatuses)
 *        API. (Value: "DISAPPROVED")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_EligibilityStatus_Onboarding
 *        Program is currently onboarding. Upload valid offers to complete
 *        onboarding. (Value: "ONBOARDING")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_EligibilityStatus_PendingReview
 *        Account is waiting for review to start. (Value: "PENDING_REVIEW")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_EligibilityStatus_StateUnspecified
 *        State is not known. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_EligibilityStatus_UnderReview
 *        Account is under review. (Value: "UNDER_REVIEW")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_EligibilityStatus_Warning
 *        If account has issues but offers are servable. Some of the issue can
 *        make account DISAPPROVED after a certain deadline. (Value: "WARNING")
 */
@property(nonatomic, copy, nullable) NSString *eligibilityStatus;

/** Issues that must be fixed to be eligible for review. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *onboardingIssues;

/**
 *  The two-letter [ISO 3166-1
 *  alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes for all the
 *  regions with the same `eligibilityStatus` and `reviewEligibility`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *regionCodes;

/**
 *  If a program is eligible for review in a specific region. Only visible if
 *  `eligibilityStatus` is `DISAPPROVED`.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewEligibilityStatus_Eligible
 *        Account is eligible for review for a specified region code. (Value:
 *        "ELIGIBLE")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewEligibilityStatus_Ineligible
 *        Account is not eligible for review for a specified region code.
 *        (Value: "INELIGIBLE")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewEligibilityStatus_ReviewEligibilityUnspecified
 *        Review eligibility state is unknown. (Value:
 *        "REVIEW_ELIGIBILITY_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *reviewEligibilityStatus;

/**
 *  Review ineligibility reason if account is not eligible for review.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_AlreadyReviewed
 *        Account was already reviewd. (Value: "ALREADY_REVIEWED")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_AlreadyUnderReview
 *        Account is already under review. (Value: "ALREADY_UNDER_REVIEW")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_InCooldownPeriod
 *        Cooldown period applies. Wait until cooldown period ends. (Value:
 *        "IN_COOLDOWN_PERIOD")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_IsRetired
 *        Account is retired. Should not appear in MC. (Value: "IS_RETIRED")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_NoReviewRequired
 *        No issues available to review. (Value: "NO_REVIEW_REQUIRED")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_NotEnoughOffers
 *        Not enough offers uploaded for this country. (Value:
 *        "NOT_ENOUGH_OFFERS")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_OnboardingIssues
 *        All onboarding issues needs to be fixed. (Value: "ONBOARDING_ISSUES")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_ReviewIneligibilityReasonUnspecified
 *        Requesting a review from Google is not possible. (Value:
 *        "REVIEW_INELIGIBILITY_REASON_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_ShoppingAdsProgramStatusRegionStatus_ReviewIneligibilityReason_WillBeReviewedAutomatically
 *        Account will be automatically reviewed at the end of the grace period.
 *        (Value: "WILL_BE_REVIEWED_AUTOMATICALLY")
 */
@property(nonatomic, copy, nullable) NSString *reviewIneligibilityReason;

/**
 *  Reason a program in a specific region isn’t eligible for review. Only
 *  visible if `reviewEligibilityStatus` is `INELIGIBLE`.
 */
@property(nonatomic, copy, nullable) NSString *reviewIneligibilityReasonDescription;

/**
 *  Additional information for ineligibility. If `reviewIneligibilityReason` is
 *  `IN_COOLDOWN_PERIOD`, a timestamp for the end of the cooldown period is
 *  provided.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_ShoppingAdsProgramStatusReviewIneligibilityReasonDetails *reviewIneligibilityReasonDetails;

/**
 *  Issues evaluated in the review process. Fix all issues before requesting a
 *  review.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *reviewIssues;

@end


/**
 *  Additional details for review ineligibility reasons.
 */
@interface GTLRShoppingContent_ShoppingAdsProgramStatusReviewIneligibilityReasonDetails : GTLRObject

/**
 *  This timestamp represents end of cooldown period for review ineligbility
 *  reason `IN_COOLDOWN_PERIOD`.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *cooldownTime;

@end


/**
 *  GTLRShoppingContent_Table
 */
@interface GTLRShoppingContent_Table : GTLRObject

/**
 *  Headers of the table's columns. Optional: if not set then the table has only
 *  one dimension.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Headers *columnHeaders;

/** Name of the table. Required for subtables, ignored for the main table. */
@property(nonatomic, copy, nullable) NSString *name;

/** Headers of the table's rows. Required. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Headers *rowHeaders;

/**
 *  The list of rows that constitute the table. Must have the same length as
 *  `rowHeaders`. Required.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_Row *> *rows;

@end


/**
 *  GTLRShoppingContent_TestOrder
 */
@interface GTLRShoppingContent_TestOrder : GTLRObject

/** Overrides the predefined delivery details if provided. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_TestOrderDeliveryDetails *deliveryDetails;

/**
 *  Whether the orderinvoices service should support this order.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableOrderinvoices;

/**
 *  Identifies what kind of resource this is. Value: the fixed string
 *  "`content#testOrder`"
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Required. Line items that are ordered. At least one line item must be
 *  provided.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_TestOrderLineItem *> *lineItems;

/** Restricted. Do not use. */
@property(nonatomic, copy, nullable) NSString *notificationMode;

/** Overrides the predefined pickup details if provided. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_TestOrderPickupDetails *pickupDetails;

/**
 *  Required. The billing address. Acceptable values are: - "`dwight`" - "`jim`"
 *  - "`pam`"
 */
@property(nonatomic, copy, nullable) NSString *predefinedBillingAddress;

/**
 *  Required. Identifier of one of the predefined delivery addresses for the
 *  delivery. Acceptable values are: - "`dwight`" - "`jim`" - "`pam`"
 */
@property(nonatomic, copy, nullable) NSString *predefinedDeliveryAddress;

/**
 *  Required. Email address of the customer. Acceptable values are: -
 *  "`pog.dwight.schrute\@gmail.com`" - "`pog.jim.halpert\@gmail.com`" -
 *  "`penpog.pam.beesly\@gmail.comding`"
 */
@property(nonatomic, copy, nullable) NSString *predefinedEmail;

/**
 *  Identifier of one of the predefined pickup details. Required for orders
 *  containing line items with shipping type `pickup`. Acceptable values are: -
 *  "`dwight`" - "`jim`" - "`pam`"
 */
@property(nonatomic, copy, nullable) NSString *predefinedPickupDetails;

/** Promotions associated with the order. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderPromotion *> *promotions;

/**
 *  Required. The price of shipping for all items. Shipping tax is automatically
 *  calculated for orders where marketplace facilitator tax laws are applicable.
 *  Otherwise, tax settings from Merchant Center are applied. Note that shipping
 *  is not taxed in certain states.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *shippingCost;

/**
 *  Required. The requested shipping option. Acceptable values are: -
 *  "`economy`" - "`expedited`" - "`oneDay`" - "`sameDay`" - "`standard`" -
 *  "`twoDay`"
 */
@property(nonatomic, copy, nullable) NSString *shippingOption;

@end


/**
 *  GTLRShoppingContent_TestOrderAddress
 */
@interface GTLRShoppingContent_TestOrderAddress : GTLRObject

/** CLDR country code (for example, "US"). */
@property(nonatomic, copy, nullable) NSString *country;

/**
 *  Strings representing the lines of the printed label for mailing the order,
 *  for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043
 *  United States
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *fullAddress;

/**
 *  Whether the address is a post office box.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isPostOfficeBox;

/**
 *  City, town or commune. May also include dependent localities or
 *  sublocalities (for example, neighborhoods or suburbs).
 */
@property(nonatomic, copy, nullable) NSString *locality;

/** Postal Code or ZIP (for example, "94043"). */
@property(nonatomic, copy, nullable) NSString *postalCode;

/** Name of the recipient. */
@property(nonatomic, copy, nullable) NSString *recipientName;

/**
 *  Top-level administrative subdivision of the country. For example, a state
 *  like California ("CA") or a province like Quebec ("QC").
 */
@property(nonatomic, copy, nullable) NSString *region;

/** Street-level part of the address. Use `\\n` to add a second line. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *streetAddress;

@end


/**
 *  GTLRShoppingContent_TestOrderDeliveryDetails
 */
@interface GTLRShoppingContent_TestOrderDeliveryDetails : GTLRObject

/** The delivery address */
@property(nonatomic, strong, nullable) GTLRShoppingContent_TestOrderAddress *address;

/**
 *  Whether the order is scheduled delivery order.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isScheduledDelivery;

/** The phone number of the person receiving the delivery. */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

@end


/**
 *  GTLRShoppingContent_TestOrderLineItem
 */
@interface GTLRShoppingContent_TestOrderLineItem : GTLRObject

/** Required. Product data from the time of the order placement. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_TestOrderLineItemProduct *product;

/**
 *  Required. Number of items ordered.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *quantityOrdered;

/** Required. Details of the return policy for the line item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderLineItemReturnInfo *returnInfo;

/** Required. Details of the requested shipping for the line item. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_OrderLineItemShippingDetails *shippingDetails;

@end


/**
 *  GTLRShoppingContent_TestOrderLineItemProduct
 */
@interface GTLRShoppingContent_TestOrderLineItemProduct : GTLRObject

/** Required. Brand of the item. */
@property(nonatomic, copy, nullable) NSString *brand;

/**
 *  Required. Condition or state of the item. Acceptable values are: - "`new`"
 */
@property(nonatomic, copy, nullable) NSString *condition;

/**
 *  Required. The two-letter ISO 639-1 language code for the item. Acceptable
 *  values are: - "`en`" - "`fr`"
 */
@property(nonatomic, copy, nullable) NSString *contentLanguage;

/** Fees for the item. Optional. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderLineItemProductFee *> *fees;

/** Global Trade Item Number (GTIN) of the item. Optional. */
@property(nonatomic, copy, nullable) NSString *gtin;

/** Required. URL of an image of the item. */
@property(nonatomic, copy, nullable) NSString *imageLink;

/** Shared identifier for all variants of the same product. Optional. */
@property(nonatomic, copy, nullable) NSString *itemGroupId;

/** Manufacturer Part Number (MPN) of the item. Optional. */
@property(nonatomic, copy, nullable) NSString *mpn;

/** Required. An identifier of the item. */
@property(nonatomic, copy, nullable) NSString *offerId;

/**
 *  Required. The price for the product. Tax is automatically calculated for
 *  orders where marketplace facilitator tax laws are applicable. Otherwise, tax
 *  settings from Merchant Center are applied.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *price;

/** Required. The CLDR territory code of the target country of the product. */
@property(nonatomic, copy, nullable) NSString *targetCountry;

/** Required. The title of the product. */
@property(nonatomic, copy, nullable) NSString *title;

/** Variant attributes for the item. Optional. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_OrderLineItemProductVariantAttribute *> *variantAttributes;

@end


/**
 *  GTLRShoppingContent_TestOrderPickupDetails
 */
@interface GTLRShoppingContent_TestOrderPickupDetails : GTLRObject

/** Required. Code of the location defined by provider or merchant. */
@property(nonatomic, copy, nullable) NSString *locationCode;

/** Required. Pickup location address. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_TestOrderAddress *pickupLocationAddress;

/**
 *  Pickup location type. Acceptable values are: - "`locker`" - "`store`" -
 *  "`curbside`"
 */
@property(nonatomic, copy, nullable) NSString *pickupLocationType;

/** Required. all pickup persons set by users. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_TestOrderPickupDetailsPickupPerson *> *pickupPersons;

@end


/**
 *  GTLRShoppingContent_TestOrderPickupDetailsPickupPerson
 */
@interface GTLRShoppingContent_TestOrderPickupDetailsPickupPerson : GTLRObject

/** Required. Full name of the pickup person. */
@property(nonatomic, copy, nullable) NSString *name;

/** Required. The phone number of the person picking up the items. */
@property(nonatomic, copy, nullable) NSString *phoneNumber;

@end


/**
 *  A message that represents a time period.
 */
@interface GTLRShoppingContent_TimePeriod : GTLRObject

/** The ending timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** The starting timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  Represents a time zone from the [IANA Time Zone
 *  Database](https://www.iana.org/time-zones).
 */
@interface GTLRShoppingContent_TimeZone : GTLRObject

/**
 *  IANA Time Zone Database time zone, e.g. "America/New_York".
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Optional. IANA Time Zone Database version number, e.g. "2019a". */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  GTLRShoppingContent_TransitTable
 */
@interface GTLRShoppingContent_TransitTable : GTLRObject

/**
 *  A list of postal group names. The last value can be `"all other locations"`.
 *  Example: `["zone 1", "zone 2", "all other locations"]`. The referred postal
 *  code groups must match the delivery country of the service.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *postalCodeGroupNames;

@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_TransitTableTransitTimeRow *> *rows;

/**
 *  A list of transit time labels. The last value can be `"all other labels"`.
 *  Example: `["food", "electronics", "all other labels"]`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *transitTimeLabels;

@end


/**
 *  GTLRShoppingContent_TransitTableTransitTimeRow
 */
@interface GTLRShoppingContent_TransitTableTransitTimeRow : GTLRObject

@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_TransitTableTransitTimeRowTransitTimeValue *> *values;

@end


/**
 *  GTLRShoppingContent_TransitTableTransitTimeRowTransitTimeValue
 */
@interface GTLRShoppingContent_TransitTableTransitTimeRowTransitTimeValue : GTLRObject

/**
 *  Must be greater than or equal to `minTransitTimeInDays`.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxTransitTimeInDays;

/**
 *  Transit time range (min-max) in business days. 0 means same day delivery, 1
 *  means next day delivery.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minTransitTimeInDays;

@end


/**
 *  GTLRShoppingContent_UnitInvoice
 */
@interface GTLRShoppingContent_UnitInvoice : GTLRObject

/** Additional charges for a unit, for example, shipping costs. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_UnitInvoiceAdditionalCharge *> *additionalCharges;

/**
 *  [required] Pre-tax or post-tax price of one unit depending on the locality
 *  of the order. *Note:* Invoicing works on a per unit basis. The `unitPrice`
 *  is the price of a single unit, and will be multiplied by the number of
 *  entries in `shipmentUnitId`.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *unitPrice;

/** Tax amounts to apply to the unit price. */
@property(nonatomic, strong, nullable) NSArray<GTLRShoppingContent_UnitInvoiceTaxLine *> *unitPriceTaxes;

@end


/**
 *  GTLRShoppingContent_UnitInvoiceAdditionalCharge
 */
@interface GTLRShoppingContent_UnitInvoiceAdditionalCharge : GTLRObject

/**
 *  [required] Amount of the additional charge per unit. *Note:* Invoicing works
 *  on a per unit bases. The `additionalChargeAmount` is the amount charged per
 *  unit, and will be multiplied by the number of entries in `shipmentUnitID`.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Amount *additionalChargeAmount;

/**
 *  [required] Type of the additional charge. Acceptable values are: -
 *  "`shipping`"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRShoppingContent_UnitInvoiceTaxLine
 */
@interface GTLRShoppingContent_UnitInvoiceTaxLine : GTLRObject

/** [required] Tax amount for the tax type. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *taxAmount;

/**
 *  Optional name of the tax type. This should only be provided if `taxType` is
 *  `otherFeeTax`.
 */
@property(nonatomic, copy, nullable) NSString *taxName;

/**
 *  [required] Type of the tax. Acceptable values are: - "`otherFee`" -
 *  "`otherFeeTax`" - "`sales`"
 */
@property(nonatomic, copy, nullable) NSString *taxType;

@end


/**
 *  The single value of a rate group or the value of a rate group table's cell.
 *  Exactly one of `noShipping`, `flatRate`, `pricePercentage`,
 *  `carrierRateName`, `subtableName` must be set.
 */
@interface GTLRShoppingContent_Value : GTLRObject

/**
 *  The name of a carrier rate referring to a carrier rate defined in the same
 *  rate group. Can only be set if all other fields are not set.
 */
@property(nonatomic, copy, nullable) NSString *carrierRateName;

/** A flat rate. Can only be set if all other fields are not set. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Price *flatRate;

/**
 *  If true, then the product can't ship. Must be true when set, can only be set
 *  if all other fields are not set.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *noShipping;

/**
 *  A percentage of the price represented as a number in decimal notation (for
 *  example, `"5.4"`). Can only be set if all other fields are not set.
 */
@property(nonatomic, copy, nullable) NSString *pricePercentage;

/**
 *  The name of a subtable. Can only be set in table cells (not for single
 *  values), and only if all other fields are not set.
 */
@property(nonatomic, copy, nullable) NSString *subtableName;

@end


/**
 *  Request message for the VerifyPhoneNumber method.
 */
@interface GTLRShoppingContent_VerifyPhoneNumberRequest : GTLRObject

/**
 *  Verification method used to receive verification code.
 *
 *  Likely values:
 *    @arg @c kGTLRShoppingContent_VerifyPhoneNumberRequest_PhoneVerificationMethod_PhoneCall
 *        Receive verification code by phone call. (Value: "PHONE_CALL")
 *    @arg @c kGTLRShoppingContent_VerifyPhoneNumberRequest_PhoneVerificationMethod_PhoneVerificationMethodUnspecified
 *        Unknown method. (Value: "PHONE_VERIFICATION_METHOD_UNSPECIFIED")
 *    @arg @c kGTLRShoppingContent_VerifyPhoneNumberRequest_PhoneVerificationMethod_Sms
 *        Receive verification code by SMS. (Value: "SMS")
 */
@property(nonatomic, copy, nullable) NSString *phoneVerificationMethod;

/** The verification code that was sent to the phone number for validation. */
@property(nonatomic, copy, nullable) NSString *verificationCode;

/** The verification ID returned by `requestphoneverification`. */
@property(nonatomic, copy, nullable) NSString *verificationId;

@end


/**
 *  Response message for the VerifyPhoneNumber method.
 */
@interface GTLRShoppingContent_VerifyPhoneNumberResponse : GTLRObject

/**
 *  Verified phone number if verification is successful. This phone number can
 *  only be replaced by another verified phone number.
 */
@property(nonatomic, copy, nullable) NSString *verifiedPhoneNumber;

@end


/**
 *  A fulfillment warehouse, which stores and handles inventory.
 */
@interface GTLRShoppingContent_Warehouse : GTLRObject

/**
 *  Business days of the warehouse. If not set, will be Monday to Friday by
 *  default.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_BusinessDayConfig *businessDayConfig;

/**
 *  Required. The latest time of day that an order can be accepted and begin
 *  processing. Later orders will be processed in the next day. The time is
 *  based on the warehouse postal code.
 */
@property(nonatomic, strong, nullable) GTLRShoppingContent_WarehouseCutoffTime *cutoffTime;

/**
 *  Required. The number of days it takes for this warehouse to pack up and ship
 *  an item. This is on the warehouse level, but can be overridden on the offer
 *  level based on the attributes of an item.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *handlingDays;

/** Required. The name of the warehouse. Must be unique within account. */
@property(nonatomic, copy, nullable) NSString *name;

/** Required. Shipping address of the warehouse. */
@property(nonatomic, strong, nullable) GTLRShoppingContent_Address *shippingAddress;

@end


/**
 *  GTLRShoppingContent_WarehouseBasedDeliveryTime
 */
@interface GTLRShoppingContent_WarehouseBasedDeliveryTime : GTLRObject

/**
 *  Required. Carrier, such as `"UPS"` or `"Fedex"`. The list of supported
 *  carriers can be retrieved through the `listSupportedCarriers` method.
 */
@property(nonatomic, copy, nullable) NSString *carrier;

/**
 *  Required. Carrier service, such as `"ground"` or `"2 days"`. The list of
 *  supported services for a carrier can be retrieved through the
 *  `listSupportedCarriers` method. The name of the service must be in the
 *  eddSupportedServices list.
 */
@property(nonatomic, copy, nullable) NSString *carrierService;

/** Shipping origin's state. */
@property(nonatomic, copy, nullable) NSString *originAdministrativeArea;

/** Shipping origin's city. */
@property(nonatomic, copy, nullable) NSString *originCity;

/**
 *  Shipping origin's country represented as a [CLDR territory
 *  code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml).
 */
@property(nonatomic, copy, nullable) NSString *originCountry;

/** Shipping origin. */
@property(nonatomic, copy, nullable) NSString *originPostalCode;

/** Shipping origin's street address. */
@property(nonatomic, copy, nullable) NSString *originStreetAddress;

/**
 *  The name of the warehouse. Warehouse name need to be matched with name. If
 *  warehouseName is set, the below fields will be ignored. The warehouse info
 *  will be read from warehouse.
 */
@property(nonatomic, copy, nullable) NSString *warehouseName;

@end


/**
 *  GTLRShoppingContent_WarehouseCutoffTime
 */
@interface GTLRShoppingContent_WarehouseCutoffTime : GTLRObject

/**
 *  Required. Hour (24-hour clock) of the cutoff time until which an order has
 *  to be placed to be processed in the same day by the warehouse. Hour is based
 *  on the timezone of warehouse.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hour;

/**
 *  Required. Minute of the cutoff time until which an order has to be placed to
 *  be processed in the same day by the warehouse. Minute is based on the
 *  timezone of warehouse.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minute;

@end


/**
 *  GTLRShoppingContent_Weight
 */
@interface GTLRShoppingContent_Weight : GTLRObject

/** Required. The weight unit. Acceptable values are: - "`kg`" - "`lb`" */
@property(nonatomic, copy, nullable) NSString *unit;

/**
 *  Required. The weight represented as a number. The weight can have a maximum
 *  precision of four decimal places.
 */
@property(nonatomic, copy, nullable) NSString *value;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
