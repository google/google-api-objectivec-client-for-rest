// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Search Ads 360 API (doubleclicksearch/v2)
// Description:
//   The Search Ads 360 API allows developers to automate uploading conversions
//   and downloading reports from Search Ads 360.
// Documentation:
//   https://developers.google.com/search-ads

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRDoubleclicksearchObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other Doubleclicksearch query classes.
 */
@interface GTLRDoubleclicksearchQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Retrieves a list of conversions from a DoubleClick Search engine account.
 *
 *  Method: doubleclicksearch.conversion.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleclicksearch
 */
@interface GTLRDoubleclicksearchQuery_ConversionGet : GTLRDoubleclicksearchQuery

/** Numeric ID of the ad group. */
@property(nonatomic, assign) long long adGroupId;

/** Numeric ID of the ad. */
@property(nonatomic, assign) long long adId;

/** Numeric ID of the advertiser. */
@property(nonatomic, assign) long long advertiserId;

/** Numeric ID of the agency. */
@property(nonatomic, assign) long long agencyId;

/** Numeric ID of the campaign. */
@property(nonatomic, assign) long long campaignId;

/** Numeric ID of the criterion. */
@property(nonatomic, assign) long long criterionId;

/** Customer ID of a client account in the new Search Ads 360 experience. */
@property(nonatomic, copy, nullable) NSString *customerId;

/**
 *  Last date (inclusive) on which to retrieve conversions. Format is yyyymmdd.
 *
 *  @note The documented range is 20091101..99991231.
 */
@property(nonatomic, assign) NSInteger endDate;

/** Numeric ID of the engine account. */
@property(nonatomic, assign) long long engineAccountId;

/**
 *  The number of conversions to return per call.
 *
 *  @note The documented range is 1..1000.
 */
@property(nonatomic, assign) NSInteger rowCount;

/**
 *  First date (inclusive) on which to retrieve conversions. Format is yyyymmdd.
 *
 *  @note The documented range is 20091101..99991231.
 */
@property(nonatomic, assign) NSInteger startDate;

/** The 0-based starting index for retrieving conversions results. */
@property(nonatomic, assign) NSUInteger startRow;

/**
 *  Fetches a @c GTLRDoubleclicksearch_ConversionList.
 *
 *  Retrieves a list of conversions from a DoubleClick Search engine account.
 *
 *  @param agencyId Numeric ID of the agency.
 *  @param advertiserId Numeric ID of the advertiser.
 *  @param engineAccountId Numeric ID of the engine account.
 *  @param endDate Last date (inclusive) on which to retrieve conversions.
 *    Format is yyyymmdd. (Range 20091101..99991231)
 *  @param rowCount The number of conversions to return per call. (Range
 *    1..1000)
 *  @param startDate First date (inclusive) on which to retrieve conversions.
 *    Format is yyyymmdd. (Range 20091101..99991231)
 *  @param startRow The 0-based starting index for retrieving conversions
 *    results.
 *
 *  @return GTLRDoubleclicksearchQuery_ConversionGet
 */
+ (instancetype)queryWithAgencyId:(long long)agencyId
                     advertiserId:(long long)advertiserId
                  engineAccountId:(long long)engineAccountId
                          endDate:(NSInteger)endDate
                         rowCount:(NSInteger)rowCount
                        startDate:(NSInteger)startDate
                         startRow:(NSUInteger)startRow;

@end

/**
 *  Retrieves a list of conversions from a DoubleClick Search engine account.
 *
 *  Method: doubleclicksearch.conversion.GetCustomerId
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleclicksearch
 */
@interface GTLRDoubleclicksearchQuery_ConversionGetCustomerId : GTLRDoubleclicksearchQuery

/** Numeric ID of the ad group. */
@property(nonatomic, assign) long long adGroupId;

/** Numeric ID of the ad. */
@property(nonatomic, assign) long long adId;

/** Numeric ID of the advertiser. */
@property(nonatomic, assign) long long advertiserId;

/** Numeric ID of the agency. */
@property(nonatomic, assign) long long agencyId;

/** Numeric ID of the campaign. */
@property(nonatomic, assign) long long campaignId;

/** Numeric ID of the criterion. */
@property(nonatomic, assign) long long criterionId;

/** Customer ID of a client account in the new Search Ads 360 experience. */
@property(nonatomic, copy, nullable) NSString *customerId;

/**
 *  Last date (inclusive) on which to retrieve conversions. Format is yyyymmdd.
 *
 *  @note The documented range is 20091101..99991231.
 */
@property(nonatomic, assign) NSInteger endDate;

/** Numeric ID of the engine account. */
@property(nonatomic, assign) long long engineAccountId;

/**
 *  The number of conversions to return per call.
 *
 *  @note The documented range is 1..1000.
 */
@property(nonatomic, assign) NSInteger rowCount;

/**
 *  First date (inclusive) on which to retrieve conversions. Format is yyyymmdd.
 *
 *  @note The documented range is 20091101..99991231.
 */
@property(nonatomic, assign) NSInteger startDate;

/** The 0-based starting index for retrieving conversions results. */
@property(nonatomic, assign) NSUInteger startRow;

/**
 *  Fetches a @c GTLRDoubleclicksearch_ConversionList.
 *
 *  Retrieves a list of conversions from a DoubleClick Search engine account.
 *
 *  @param customerId Customer ID of a client account in the new Search Ads 360
 *    experience.
 *  @param endDate Last date (inclusive) on which to retrieve conversions.
 *    Format is yyyymmdd. (Range 20091101..99991231)
 *  @param rowCount The number of conversions to return per call. (Range
 *    1..1000)
 *  @param startDate First date (inclusive) on which to retrieve conversions.
 *    Format is yyyymmdd. (Range 20091101..99991231)
 *  @param startRow The 0-based starting index for retrieving conversions
 *    results.
 *
 *  @return GTLRDoubleclicksearchQuery_ConversionGetCustomerId
 */
+ (instancetype)queryWithCustomerId:(NSString *)customerId
                            endDate:(NSInteger)endDate
                           rowCount:(NSInteger)rowCount
                          startDate:(NSInteger)startDate
                           startRow:(NSUInteger)startRow;

@end

/**
 *  Inserts a batch of new conversions into DoubleClick Search.
 *
 *  Method: doubleclicksearch.conversion.insert
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleclicksearch
 */
@interface GTLRDoubleclicksearchQuery_ConversionInsert : GTLRDoubleclicksearchQuery

/**
 *  Fetches a @c GTLRDoubleclicksearch_ConversionList.
 *
 *  Inserts a batch of new conversions into DoubleClick Search.
 *
 *  @param object The @c GTLRDoubleclicksearch_ConversionList to include in the
 *    query.
 *
 *  @return GTLRDoubleclicksearchQuery_ConversionInsert
 */
+ (instancetype)queryWithObject:(GTLRDoubleclicksearch_ConversionList *)object;

@end

/**
 *  Updates a batch of conversions in DoubleClick Search.
 *
 *  Method: doubleclicksearch.conversion.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleclicksearch
 */
@interface GTLRDoubleclicksearchQuery_ConversionUpdate : GTLRDoubleclicksearchQuery

/**
 *  Fetches a @c GTLRDoubleclicksearch_ConversionList.
 *
 *  Updates a batch of conversions in DoubleClick Search.
 *
 *  @param object The @c GTLRDoubleclicksearch_ConversionList to include in the
 *    query.
 *
 *  @return GTLRDoubleclicksearchQuery_ConversionUpdate
 */
+ (instancetype)queryWithObject:(GTLRDoubleclicksearch_ConversionList *)object;

@end

/**
 *  Updates the availabilities of a batch of floodlight activities in
 *  DoubleClick Search.
 *
 *  Method: doubleclicksearch.conversion.updateAvailability
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleclicksearch
 */
@interface GTLRDoubleclicksearchQuery_ConversionUpdateAvailability : GTLRDoubleclicksearchQuery

/**
 *  Fetches a @c GTLRDoubleclicksearch_UpdateAvailabilityResponse.
 *
 *  Updates the availabilities of a batch of floodlight activities in
 *  DoubleClick Search.
 *
 *  @param object The @c GTLRDoubleclicksearch_UpdateAvailabilityRequest to
 *    include in the query.
 *
 *  @return GTLRDoubleclicksearchQuery_ConversionUpdateAvailability
 */
+ (instancetype)queryWithObject:(GTLRDoubleclicksearch_UpdateAvailabilityRequest *)object;

@end

/**
 *  Generates and returns a report immediately.
 *
 *  Method: doubleclicksearch.reports.generate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleclicksearch
 */
@interface GTLRDoubleclicksearchQuery_ReportsGenerate : GTLRDoubleclicksearchQuery

/**
 *  Fetches a @c GTLRDoubleclicksearch_Report.
 *
 *  Generates and returns a report immediately.
 *
 *  @param object The @c GTLRDoubleclicksearch_ReportRequest to include in the
 *    query.
 *
 *  @return GTLRDoubleclicksearchQuery_ReportsGenerate
 */
+ (instancetype)queryWithObject:(GTLRDoubleclicksearch_ReportRequest *)object;

@end

/**
 *  Polls for the status of a report request.
 *
 *  Method: doubleclicksearch.reports.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleclicksearch
 */
@interface GTLRDoubleclicksearchQuery_ReportsGet : GTLRDoubleclicksearchQuery

/** ID of the report request being polled. */
@property(nonatomic, copy, nullable) NSString *reportId;

/**
 *  Fetches a @c GTLRDoubleclicksearch_Report.
 *
 *  Polls for the status of a report request.
 *
 *  @param reportId ID of the report request being polled.
 *
 *  @return GTLRDoubleclicksearchQuery_ReportsGet
 */
+ (instancetype)queryWithReportId:(NSString *)reportId;

@end

/**
 *  Downloads a report file encoded in UTF-8.
 *
 *  Method: doubleclicksearch.reports.getFile
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleclicksearch
 */
@interface GTLRDoubleclicksearchQuery_ReportsGetFile : GTLRDoubleclicksearchQuery

/** The index of the report fragment to download. */
@property(nonatomic, assign) NSInteger reportFragment;

/** ID of the report. */
@property(nonatomic, copy, nullable) NSString *reportId;

/**
 *  Fetches the requested resource data as a @c GTLRDataObject.
 *
 *  Downloads a report file encoded in UTF-8.
 *
 *  @param reportId ID of the report.
 *  @param reportFragment The index of the report fragment to download.
 *
 *  @return GTLRDoubleclicksearchQuery_ReportsGetFile
 */
+ (instancetype)queryForMediaWithReportId:(NSString *)reportId
                           reportFragment:(NSInteger)reportFragment;

@end

/**
 *  Downloads a csv file(encoded in UTF-8) that contains ID mappings between
 *  legacy SA360 and new SA360. The file includes all children entities of the
 *  given advertiser(e.g. engine accounts, campaigns, ad groups, etc.) that
 *  exist in both legacy SA360 and new SA360.
 *
 *  Method: doubleclicksearch.reports.getIdMappingFile
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleclicksearch
 */
@interface GTLRDoubleclicksearchQuery_ReportsGetIdMappingFile : GTLRDoubleclicksearchQuery

/** Legacy SA360 advertiser ID. */
@property(nonatomic, assign) long long advertiserId;

/** Legacy SA360 agency ID. */
@property(nonatomic, assign) long long agencyId;

/**
 *  Fetches a @c GTLRDoubleclicksearch_IdMappingFile.
 *
 *  Downloads a csv file(encoded in UTF-8) that contains ID mappings between
 *  legacy SA360 and new SA360. The file includes all children entities of the
 *  given advertiser(e.g. engine accounts, campaigns, ad groups, etc.) that
 *  exist in both legacy SA360 and new SA360.
 *
 *  @param agencyId Legacy SA360 agency ID.
 *  @param advertiserId Legacy SA360 advertiser ID.
 *
 *  @return GTLRDoubleclicksearchQuery_ReportsGetIdMappingFile
 */
+ (instancetype)queryWithAgencyId:(long long)agencyId
                     advertiserId:(long long)advertiserId;

/**
 *  Fetches the requested resource data as a @c GTLRDataObject.
 *
 *  Downloads a csv file(encoded in UTF-8) that contains ID mappings between
 *  legacy SA360 and new SA360. The file includes all children entities of the
 *  given advertiser(e.g. engine accounts, campaigns, ad groups, etc.) that
 *  exist in both legacy SA360 and new SA360.
 *
 *  @param agencyId Legacy SA360 agency ID.
 *  @param advertiserId Legacy SA360 advertiser ID.
 *
 *  @return GTLRDoubleclicksearchQuery_ReportsGetIdMappingFile
 */
+ (instancetype)queryForMediaWithAgencyId:(long long)agencyId
                             advertiserId:(long long)advertiserId;

@end

/**
 *  Inserts a report request into the reporting system.
 *
 *  Method: doubleclicksearch.reports.request
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleclicksearch
 */
@interface GTLRDoubleclicksearchQuery_ReportsRequest : GTLRDoubleclicksearchQuery

/**
 *  Fetches a @c GTLRDoubleclicksearch_Report.
 *
 *  Inserts a report request into the reporting system.
 *
 *  @param object The @c GTLRDoubleclicksearch_ReportRequest to include in the
 *    query.
 *
 *  @return GTLRDoubleclicksearchQuery_ReportsRequest
 */
+ (instancetype)queryWithObject:(GTLRDoubleclicksearch_ReportRequest *)object;

@end

/**
 *  Retrieve the list of saved columns for a specified advertiser.
 *
 *  Method: doubleclicksearch.savedColumns.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeDoubleclicksearch
 */
@interface GTLRDoubleclicksearchQuery_SavedColumnsList : GTLRDoubleclicksearchQuery

/** DS ID of the advertiser. */
@property(nonatomic, assign) long long advertiserId;

/** DS ID of the agency. */
@property(nonatomic, assign) long long agencyId;

/**
 *  Fetches a @c GTLRDoubleclicksearch_SavedColumnList.
 *
 *  Retrieve the list of saved columns for a specified advertiser.
 *
 *  @param agencyId DS ID of the agency.
 *  @param advertiserId DS ID of the advertiser.
 *
 *  @return GTLRDoubleclicksearchQuery_SavedColumnsList
 */
+ (instancetype)queryWithAgencyId:(long long)agencyId
                     advertiserId:(long long)advertiserId;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
