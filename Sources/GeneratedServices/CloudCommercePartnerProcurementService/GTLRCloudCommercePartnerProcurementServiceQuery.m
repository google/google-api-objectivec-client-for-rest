// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Commerce Partner Procurement API (cloudcommerceprocurement/v1)
// Description:
//   Partner API for the Cloud Commerce Procurement Service.
// Documentation:
//   https://cloud.google.com/marketplace/docs/partners/

#import <GoogleAPIClientForREST/GTLRCloudCommercePartnerProcurementServiceQuery.h>

@implementation GTLRCloudCommercePartnerProcurementServiceQuery

@dynamic fields;

@end

@implementation GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersAccountsApprove

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudCommercePartnerProcurementService_ApproveAccountRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:approve";
  GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersAccountsApprove *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudCommercePartnerProcurementService_Empty class];
  query.loggingName = @"cloudcommerceprocurement.providers.accounts.approve";
  return query;
}

@end

@implementation GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersAccountsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersAccountsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudCommercePartnerProcurementService_Account class];
  query.loggingName = @"cloudcommerceprocurement.providers.accounts.get";
  return query;
}

@end

@implementation GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersAccountsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/accounts";
  GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersAccountsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudCommercePartnerProcurementService_ListAccountsResponse class];
  query.loggingName = @"cloudcommerceprocurement.providers.accounts.list";
  return query;
}

@end

@implementation GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersAccountsReject

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudCommercePartnerProcurementService_RejectAccountRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:reject";
  GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersAccountsReject *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudCommercePartnerProcurementService_Empty class];
  query.loggingName = @"cloudcommerceprocurement.providers.accounts.reject";
  return query;
}

@end

@implementation GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersAccountsReset

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudCommercePartnerProcurementService_ResetAccountRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:reset";
  GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersAccountsReset *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudCommercePartnerProcurementService_Empty class];
  query.loggingName = @"cloudcommerceprocurement.providers.accounts.reset";
  return query;
}

@end

@implementation GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsApprove

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudCommercePartnerProcurementService_ApproveEntitlementRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:approve";
  GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsApprove *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudCommercePartnerProcurementService_Empty class];
  query.loggingName = @"cloudcommerceprocurement.providers.entitlements.approve";
  return query;
}

@end

@implementation GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsApprovePlanChange

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudCommercePartnerProcurementService_ApproveEntitlementPlanChangeRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:approvePlanChange";
  GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsApprovePlanChange *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudCommercePartnerProcurementService_Empty class];
  query.loggingName = @"cloudcommerceprocurement.providers.entitlements.approvePlanChange";
  return query;
}

@end

@implementation GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudCommercePartnerProcurementService_Entitlement class];
  query.loggingName = @"cloudcommerceprocurement.providers.entitlements.get";
  return query;
}

@end

@implementation GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/entitlements";
  GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudCommercePartnerProcurementService_ListEntitlementsResponse class];
  query.loggingName = @"cloudcommerceprocurement.providers.entitlements.list";
  return query;
}

@end

@implementation GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudCommercePartnerProcurementService_Entitlement *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudCommercePartnerProcurementService_Entitlement class];
  query.loggingName = @"cloudcommerceprocurement.providers.entitlements.patch";
  return query;
}

@end

@implementation GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsReject

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudCommercePartnerProcurementService_RejectEntitlementRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:reject";
  GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsReject *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudCommercePartnerProcurementService_Empty class];
  query.loggingName = @"cloudcommerceprocurement.providers.entitlements.reject";
  return query;
}

@end

@implementation GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsRejectPlanChange

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudCommercePartnerProcurementService_RejectEntitlementPlanChangeRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:rejectPlanChange";
  GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsRejectPlanChange *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudCommercePartnerProcurementService_Empty class];
  query.loggingName = @"cloudcommerceprocurement.providers.entitlements.rejectPlanChange";
  return query;
}

@end

@implementation GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsSuspend

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudCommercePartnerProcurementService_SuspendEntitlementRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:suspend";
  GTLRCloudCommercePartnerProcurementServiceQuery_ProvidersEntitlementsSuspend *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudCommercePartnerProcurementService_Empty class];
  query.loggingName = @"cloudcommerceprocurement.providers.entitlements.suspend";
  return query;
}

@end
