// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Commerce Partner Procurement API (cloudcommerceprocurement/v1)
// Description:
//   Partner API for the Cloud Commerce Procurement Service.
// Documentation:
//   https://cloud.google.com/marketplace/docs/partners/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudCommercePartnerProcurementService_Account;
@class GTLRCloudCommercePartnerProcurementService_Account_InputProperties;
@class GTLRCloudCommercePartnerProcurementService_Approval;
@class GTLRCloudCommercePartnerProcurementService_ApproveAccountRequest_Properties;
@class GTLRCloudCommercePartnerProcurementService_ApproveEntitlementRequest_Properties;
@class GTLRCloudCommercePartnerProcurementService_Consumer;
@class GTLRCloudCommercePartnerProcurementService_Entitlement;
@class GTLRCloudCommercePartnerProcurementService_Entitlement_InputProperties;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRCloudCommercePartnerProcurementService_Account.state

/**
 *  The customer has requested the creation of the account resource, and the
 *  provider notification message is dispatched. This state has been deprecated,
 *  as accounts now immediately transition to AccountState.ACCOUNT_ACTIVE.
 *
 *  Value: "ACCOUNT_ACTIVATION_REQUESTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudCommercePartnerProcurementService_Account_State_AccountActivationRequested;
/**
 *  The account is active and ready for use. The next possible states are: -
 *  Account getting deleted: After the user invokes delete from another API.
 *
 *  Value: "ACCOUNT_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudCommercePartnerProcurementService_Account_State_AccountActive;
/**
 *  Default state of the account. It's only set to this value when the account
 *  is first created and has not been initialized.
 *
 *  Value: "ACCOUNT_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudCommercePartnerProcurementService_Account_State_AccountStateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudCommercePartnerProcurementService_Approval.state

/**
 *  The approval has been granted by the provider.
 *
 *  Value: "APPROVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudCommercePartnerProcurementService_Approval_State_Approved;
/**
 *  The approval is pending response from the provider. The approval state can
 *  transition to Account.Approval.State.APPROVED or
 *  Account.Approval.State.REJECTED.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudCommercePartnerProcurementService_Approval_State_Pending;
/**
 *  The approval has been rejected by the provider. A provider may choose to
 *  approve a previously rejected approval, so is it possible to transition to
 *  Account.Approval.State.APPROVED.
 *
 *  Value: "REJECTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudCommercePartnerProcurementService_Approval_State_Rejected;
/**
 *  Sentinel value; do not use.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudCommercePartnerProcurementService_Approval_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudCommercePartnerProcurementService_Entitlement.state

/**
 *  Indicates that the entitlement has been created but has not yet become
 *  active. The entitlement will remain in this state until it becomes active.
 *  If the entitlement requires provider approval, a notification is sent to the
 *  provider for the activation approval. If the provider does not approve, the
 *  entitlement is removed. If approved, the entitlement transitions to the
 *  EntitlementState.ENTITLEMENT_ACTIVE state after a delay, either a generally
 *  short processing delay or, if applicable, until the scheduled start time of
 *  the purchased offer. Plan changes are not allowed in this state. Instead,
 *  customers are expected to cancel the corresponding order and place a new
 *  order.
 *
 *  Value: "ENTITLEMENT_ACTIVATION_REQUESTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementActivationRequested;
/**
 *  Indicates that the entitlement is active. The procured item is now usable
 *  and any associated billing events will start occurring. Entitlements in this
 *  state WILL renew. The analogous state for an unexpired but non-renewing
 *  entitlement is ENTITLEMENT_PENDING_CANCELLATION. In this state, the customer
 *  can decide to cancel the entitlement, which would change the state to
 *  EntitlementState.ENTITLEMENT_PENDING_CANCELLATION, and then
 *  EntitlementState.ENTITLEMENT_CANCELLED. The user can also request a change
 *  of plan, which will transition the state to
 *  EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE, and then back to
 *  EntitlementState.ENTITLEMENT_ACTIVE.
 *
 *  Value: "ENTITLEMENT_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementActive;
/**
 *  Indicates that the entitlement was cancelled. The entitlement can now be
 *  deleted.
 *
 *  Value: "ENTITLEMENT_CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementCancelled;
/**
 *  Indicates that the entitlement will expire at the end of its term. This
 *  could mean the customer has elected not to renew this entitlement or the
 *  customer elected to cancel an entitlement that only expires at term end. The
 *  entitlement typically stays in this state if the entitlement/plan allows use
 *  of the underlying resource until the end of the current billing cycle. Once
 *  the billing cycle completes, the resource will transition to
 *  EntitlementState.ENTITLEMENT_CANCELLED state. The resource cannot be
 *  modified during this state.
 *
 *  Value: "ENTITLEMENT_PENDING_CANCELLATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementPendingCancellation;
/**
 *  Indicates that the entitlement is currently active, but there is a pending
 *  plan change that is requested by the customer. The entitlement typically
 *  stays in this state, if the entitlement/plan requires the completion of the
 *  current billing cycle before the plan can be changed. Once the billing cycle
 *  completes, the resource will transition to
 *  EntitlementState.ENTITLEMENT_ACTIVE, with its plan changed.
 *
 *  Value: "ENTITLEMENT_PENDING_PLAN_CHANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementPendingPlanChange;
/**
 *  Indicates that the entitlement is currently active, but there is a plan
 *  change request pending provider approval. If the provider approves the plan
 *  change, then the entitlement will transition either to
 *  EntitlementState.ENTITLEMENT_ACTIVE or
 *  EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE depending on whether
 *  current plan requires that the billing cycle completes. If the provider
 *  rejects the plan change, then the pending plan change request is removed and
 *  the entitlement stays in EntitlementState.ENTITLEMENT_ACTIVE state with the
 *  old plan.
 *
 *  Value: "ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementPendingPlanChangeApproval;
/**
 *  Default state of the entitlement. It's only set to this value when the
 *  entitlement is first created and has not been initialized.
 *
 *  Value: "ENTITLEMENT_STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementStateUnspecified;
/**
 *  Indicates that the entitlement is suspended either by Google or provider
 *  request. This can be triggered for various external reasons (e.g. expiration
 *  of credit card on the billing account, violation of terms-of-service of the
 *  provider etc.). As such, any remediating action needs to be taken
 *  externally, before the entitlement can be activated. This is not yet
 *  supported.
 *
 *  Value: "ENTITLEMENT_SUSPENDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementSuspended;

/**
 *  Represents an account that was established by the customer on the service
 *  provider's system.
 */
@interface GTLRCloudCommercePartnerProcurementService_Account : GTLRObject

/**
 *  Output only. The approvals for this account. These approvals are used to
 *  track actions that are permitted or have been completed by a customer within
 *  the context of the provider. This might include a sign up flow or a
 *  provisioning step, for example, that the provider can admit to having
 *  happened.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudCommercePartnerProcurementService_Approval *> *approvals;

/** Output only. The creation timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The custom properties that were collected from the user to
 *  create this account.
 */
@property(nonatomic, strong, nullable) GTLRCloudCommercePartnerProcurementService_Account_InputProperties *inputProperties GTLR_DEPRECATED;

/**
 *  Output only. The resource name of the account. Account names have the form
 *  `accounts/{account_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The identifier of the service provider that this account was
 *  created against. Each service provider is assigned a unique provider value
 *  when they onboard with Cloud Commerce platform.
 */
@property(nonatomic, copy, nullable) NSString *provider;

/**
 *  Output only. The state of the account. This is used to decide whether the
 *  customer is in good standing with the provider and is able to make
 *  purchases. An account might not be able to make a purchase if the billing
 *  account is suspended, for example.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudCommercePartnerProcurementService_Account_State_AccountActivationRequested
 *        The customer has requested the creation of the account resource, and
 *        the provider notification message is dispatched. This state has been
 *        deprecated, as accounts now immediately transition to
 *        AccountState.ACCOUNT_ACTIVE. (Value: "ACCOUNT_ACTIVATION_REQUESTED")
 *    @arg @c kGTLRCloudCommercePartnerProcurementService_Account_State_AccountActive
 *        The account is active and ready for use. The next possible states are:
 *        - Account getting deleted: After the user invokes delete from another
 *        API. (Value: "ACCOUNT_ACTIVE")
 *    @arg @c kGTLRCloudCommercePartnerProcurementService_Account_State_AccountStateUnspecified
 *        Default state of the account. It's only set to this value when the
 *        account is first created and has not been initialized. (Value:
 *        "ACCOUNT_STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. The last update timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Output only. The custom properties that were collected from the user to
 *  create this account.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
GTLR_DEPRECATED
@interface GTLRCloudCommercePartnerProcurementService_Account_InputProperties : GTLRObject
@end


/**
 *  An approval for some action on an account.
 */
@interface GTLRCloudCommercePartnerProcurementService_Approval : GTLRObject

/** Output only. The name of the approval. */
@property(nonatomic, copy, nullable) NSString *name;

/** Output only. An explanation for the state of the approval. */
@property(nonatomic, copy, nullable) NSString *reason;

/**
 *  Output only. The state of the approval.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudCommercePartnerProcurementService_Approval_State_Approved
 *        The approval has been granted by the provider. (Value: "APPROVED")
 *    @arg @c kGTLRCloudCommercePartnerProcurementService_Approval_State_Pending
 *        The approval is pending response from the provider. The approval state
 *        can transition to Account.Approval.State.APPROVED or
 *        Account.Approval.State.REJECTED. (Value: "PENDING")
 *    @arg @c kGTLRCloudCommercePartnerProcurementService_Approval_State_Rejected
 *        The approval has been rejected by the provider. A provider may choose
 *        to approve a previously rejected approval, so is it possible to
 *        transition to Account.Approval.State.APPROVED. (Value: "REJECTED")
 *    @arg @c kGTLRCloudCommercePartnerProcurementService_Approval_State_StateUnspecified
 *        Sentinel value; do not use. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Optional. The last update timestamp of the approval. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for PartnerProcurementService.ApproveAccount.
 */
@interface GTLRCloudCommercePartnerProcurementService_ApproveAccountRequest : GTLRObject

/**
 *  The name of the approval being approved. If absent and there is only one
 *  approval possible, that approval will be granted. If absent and there are
 *  many approvals possible, the request will fail with a 400 Bad Request.
 *  Optional.
 */
@property(nonatomic, copy, nullable) NSString *approvalName;

/** Set of properties that should be associated with the account. Optional. */
@property(nonatomic, strong, nullable) GTLRCloudCommercePartnerProcurementService_ApproveAccountRequest_Properties *properties;

/**
 *  Free form text string explaining the approval reason. Optional. Max allowed
 *  length: 256 bytes. Longer strings will be truncated.
 */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  Set of properties that should be associated with the account. Optional.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudCommercePartnerProcurementService_ApproveAccountRequest_Properties : GTLRObject
@end


/**
 *  Request message for
 *  [PartnerProcurementService.ApproveEntitlementPlanChange[].
 */
@interface GTLRCloudCommercePartnerProcurementService_ApproveEntitlementPlanChangeRequest : GTLRObject

/** Required. Name of the pending plan that's being approved. */
@property(nonatomic, copy, nullable) NSString *pendingPlanName;

@end


/**
 *  Request message for [PartnerProcurementService.ApproveEntitlement[].
 */
@interface GTLRCloudCommercePartnerProcurementService_ApproveEntitlementRequest : GTLRObject

/**
 *  Optional. The resource name of the entitlement that was migrated, with the
 *  format `providers/{provider_id}/entitlements/{entitlement_id}`. Should only
 *  be sent when resources have been migrated from entitlement_migrated to the
 *  new entitlement. Optional.
 */
@property(nonatomic, copy, nullable) NSString *entitlementMigrated;

/**
 *  Set of properties that should be associated with the entitlement. Optional.
 */
@property(nonatomic, strong, nullable) GTLRCloudCommercePartnerProcurementService_ApproveEntitlementRequest_Properties *properties GTLR_DEPRECATED;

@end


/**
 *  Set of properties that should be associated with the entitlement. Optional.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
GTLR_DEPRECATED
@interface GTLRCloudCommercePartnerProcurementService_ApproveEntitlementRequest_Properties : GTLRObject
@end


/**
 *  A resource using (consuming) this entitlement.
 */
@interface GTLRCloudCommercePartnerProcurementService_Consumer : GTLRObject

/** A project name with format `projects/`. */
@property(nonatomic, copy, nullable) NSString *project;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRCloudCommercePartnerProcurementService_Empty : GTLRObject
@end


/**
 *  Represents a procured product of a customer.
 */
@interface GTLRCloudCommercePartnerProcurementService_Entitlement : GTLRObject

/**
 *  Output only. The resource name of the account that this entitlement is based
 *  on, if any.
 */
@property(nonatomic, copy, nullable) NSString *account;

/**
 *  Output only. The reason the entitlement was cancelled. If this entitlement
 *  wasn't cancelled, this field is empty. Possible values include "unknown",
 *  "expired", "user-cancelled", "account-closed", "billing-disabled" (if the
 *  customer has manually disabled billing to their resources), "user-aborted",
 *  and "migrated" (if the entitlement has migrated across products). Values of
 *  this field are subject to change, and we recommend that you don't build your
 *  technical integration to rely on these fields.
 */
@property(nonatomic, copy, nullable) NSString *cancellationReason;

/** Output only. The resources using this entitlement, if applicable. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudCommercePartnerProcurementService_Consumer *> *consumers;

/** Output only. The creation timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. The entitlement benefit IDs associated with the purchase. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *entitlementBenefitIds;

/**
 *  Output only. The custom properties that were collected from the user to
 *  create this entitlement.
 */
@property(nonatomic, strong, nullable) GTLRCloudCommercePartnerProcurementService_Entitlement_InputProperties *inputProperties GTLR_DEPRECATED;

/**
 *  Provider-supplied message that is displayed to the end user. Currently this
 *  is used to communicate progress and ETA for provisioning. This field can be
 *  updated only when a user is waiting for an action from the provider, i.e.
 *  entitlement state is EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED or
 *  EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL. This field is
 *  cleared automatically when the entitlement state changes.
 */
@property(nonatomic, copy, nullable) NSString *messageToUser;

/**
 *  Output only. The resource name of the entitlement. Entitlement names have
 *  the form `providers/{provider_id}/entitlements/{entitlement_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The end time of the new offer. If the offer was has a term
 *  duration instead of a specified end date, this field is empty. This field is
 *  populated even if the entitlement isn't active yet. If there's no upcoming
 *  offer, the field is empty. * If the entitlement is in
 *  ENTITLEMENT_ACTIVATION_REQUESTED, ENTITLEMENT_ACTIVE, or
 *  ENTITLEMENT_PENDING_CANCELLATION state, then this field will be empty. * If
 *  the entitlement is in ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL or
 *  ENTITLEMENT_PENDING_PLAN_CHANGE state, then this field will be populated
 *  with the expected end time of the upcoming offer (in the future) if the
 *  upcoming offer has a specified end date. Otherwise, this field will be
 *  empty. * If the entitlement is in ENTITLEMENT_CANCELLED state, then this
 *  field will be empty.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *newOfferEndTime NS_RETURNS_NOT_RETAINED;

/**
 *  Output only. The timestamp when the new offer becomes effective. This field
 *  is populated even if the entitlement isn't active yet. If there's no
 *  upcoming offer, the field is empty. * If the entitlement is in
 *  ENTITLEMENT_ACTIVATION_REQUESTED state, this field will not be populated
 *  when the entitlement is not yet approved. But after the entitlement is
 *  approved, then this field will be populated with effective time of the
 *  upcoming offer. * If the entitlement is in ENTITLEMENT_ACTIVE or
 *  ENTITLEMENT_PENDING_CANCELLATION state, this field will not be populated. *
 *  If the entitlement is in ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL state,
 *  this field will not be populated since the entitlement change is waiting on
 *  approval. * If the entitlement is in ENTITLEMENT_PENDING_PLAN_CHANGE state,
 *  this field will be populated with the expected effective time of the
 *  upcoming offer (in the future). * If the entitlement is in
 *  ENTITLEMENT_CANCELLED state, then this field will be empty.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *newOfferStartTime NS_RETURNS_NOT_RETAINED;

/**
 *  Output only. The name of the offer the entitlement is switching to upon a
 *  pending plan change. Only exists if the pending plan change is moving to an
 *  offer. This field isn't populated for entitlements which aren't active yet.
 *  Format: 'projects/{project}/services/{service}/privateOffers/{offer}' OR
 *  'projects/{project}/services/{service}/standardOffers/{offer}', depending on
 *  whether the offer is private or public. The {service} in the name is the
 *  listing service of the offer. It could be either the product service that
 *  the offer is referencing, or a generic private offer parent service. We
 *  recommend that you don't build your integration to rely on the meaning of
 *  this {service} part. * If the entitlement is in
 *  ENTITLEMENT_ACTIVATION_REQUESTED, ENTITLEMENT_ACTIVE or
 *  ENTITLEMENT_PENDING_CANCELLATION state, then this field will be empty. * If
 *  the entitlement is in ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL or
 *  ENTITLEMENT_PENDING_PLAN_CHANGE state, then this field will be populated
 *  with the upcoming offer. * If the entitlement is in ENTITLEMENT_CANCELLED
 *  state, then this will be empty.
 */
@property(nonatomic, copy, nullable) NSString *newPendingOffer NS_RETURNS_NOT_RETAINED;

/**
 *  Output only. The duration of the new offer, in ISO 8601 duration format.
 *  This field isn't populated for entitlements which aren't active yet, only
 *  for pending offer changes. If the offer was has a specified end date instead
 *  of a duration, this field is empty. * If the entitlement is in
 *  ENTITLEMENT_ACTIVATION_REQUESTED, ENTITLEENTITLEMENT_ACTIVE, or
 *  ENTITLEMENT_PENDING_CANCELLATION state, then this field is empty. * If the
 *  entitlement is in ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL or
 *  ENTITLEMENT_PENDING_PLAN_CHANGE state, then this field will be populated
 *  with the duration of the upcoming offer, if the upcoming offer is does not
 *  have a specified end date. Otherwise, this field will be empty. * If the
 *  entitlement is in ENTITLEMENT_CANCELLED state, then this field will be
 *  empty.
 */
@property(nonatomic, copy, nullable) NSString *newPendingOfferDuration NS_RETURNS_NOT_RETAINED;

/**
 *  Output only. The identifier of the pending new plan. Required if the product
 *  has plans and the entitlement has a pending plan change.
 */
@property(nonatomic, copy, nullable) NSString *newPendingPlan NS_RETURNS_NOT_RETAINED;

/**
 *  Output only. The name of the offer that was procured. Field is empty if
 *  order was not made using an offer. Format:
 *  'projects/{project}/services/{service}/privateOffers/{offer}' OR
 *  'projects/{project}/services/{service}/standardOffers/{offer}', depending on
 *  whether the offer is private or public. The {service} in the name is the
 *  listing service of the offer. It could be either the product service that
 *  the offer is referencing, or a generic private offer parent service. We
 *  recommend that you don't build your integration to rely on the meaning of
 *  this {service} part. * If the entitlement is in
 *  ENTITLEMENT_ACTIVATION_REQUESTED state, this field will be populated with
 *  the upcoming offer. * If the entitlement is in ENTITLEMENT_ACTIVE,
 *  ENTITLEMENT_PENDING_CANCELLATION, ENTITLEMENT_PENDING_PLAN_CHANGE, or
 *  ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL state, this field will be populated
 *  with the current offer. * If the entitlement is in ENTITLEMENT_CANCELLED
 *  state, then this field will be populated with the latest offer the order was
 *  associated with.
 */
@property(nonatomic, copy, nullable) NSString *offer;

/**
 *  Output only. The offer duration of the current offer in ISO 8601 duration
 *  format. Field is empty if entitlement was not made using an offer. If the
 *  offer has a specified end date instead of a duration, this field is empty. *
 *  If the entitlement is in ENTITLEMENT_ACTIVATION_REQUESTED state, then this
 *  field will be populated with the duration of the upcoming offer, if the
 *  upcoming offer does not have a specified end date. Otherwise, this field
 *  will be empty. * If the entitlement is in ENTITLEMENT_ACTIVE,
 *  ENTITLEMENT_PENDING_CANCELLATION, ENTITLEMENT_PENDING_PLAN_CHANGE, or
 *  ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL state, then this field will be
 *  populated with the duration of the current offer if the current offer is
 *  does not have a specific end date. Otherwise, this field will be empty. * If
 *  the entitlement is in ENTITLEMENT_CANCELLED state, then this field will be
 *  populated with the duration of the latest offer the order was associated
 *  with if that offer does not have a specific end date. Otherwise, this field
 *  will be empty.
 */
@property(nonatomic, copy, nullable) NSString *offerDuration;

/**
 *  Output only. End time for the Offer associated with this entitlement. Note
 *  that this field value can change over time. This occurs naturally even if
 *  the offer is not changed, due to auto renewal. * If the entitlement is in
 *  ENTITLEMENT_ACTIVATION_REQUESTED state, then: * If the entitlement is not
 *  yet approved, then this field will be populated with the expected end time
 *  of the upcoming offer (in the future) if the upcoming offer has a specified
 *  end date. Otherwise this field will be empty. * If the entitlement is
 *  approved, then this field will always be populated with the expected end
 *  time of the upcoming offer (in the future). This means both this field, and
 *  the offer_duration field, can co-exist. * If the entitlement is in
 *  ENTITLEMENT_ACTIVE or ENTITLEMENT_PENDING_CANCELLATION state, then this
 *  field will be populated with the actual expected end time of the current
 *  offer (in the futre). Meaning, this field will be set, regardless of whether
 *  the offer has a specific end date or a duration. This means both this field,
 *  and the offer_duration field, can co-exist. * If the entitlement is in
 *  ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL or ENTITLEMENT_PENDING_PLAN_CHANGE
 *  state: * If the current offer has already ended and became pure PAYG, then
 *  this field reflects the ACTUAL end time of the current offer (in the past).
 *  * Otherwise, then this is the EXPECTED end date of the current offer (in the
 *  future). * If the entitlement is in ENTITLEMENT_CANCELLED state, then this
 *  field will be populated with the ACTUAL end time of the latest offer the
 *  order was associated with (in the past). If the entitlement was cancelled
 *  before any offer started, then this field will be empty.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *offerEndTime;

/**
 *  Output only. The order ID of this entitlement, without any `orders/`
 *  resource name prefix.
 */
@property(nonatomic, copy, nullable) NSString *orderId;

/**
 *  Output only. The identifier of the plan that was procured. Required if the
 *  product has plans.
 */
@property(nonatomic, copy, nullable) NSString *plan;

/**
 *  Output only. The identifier of the entity that was purchased. This may
 *  actually represent a product, quote, or offer. We strongly recommend that
 *  you use the following more explicit fields: productExternalName,
 *  quoteExternalName, or offer.
 */
@property(nonatomic, copy, nullable) NSString *product GTLR_DEPRECATED;

/** Output only. The identifier of the product that was procured. */
@property(nonatomic, copy, nullable) NSString *productExternalName;

/**
 *  Output only. The identifier of the service provider that this entitlement
 *  was created against. Each service provider is assigned a unique provider
 *  value when they onboard with Cloud Commerce platform.
 */
@property(nonatomic, copy, nullable) NSString *provider;

/**
 *  Output only. The identifier of the quote that was used to procure. Empty if
 *  the order is not purchased using a quote.
 */
@property(nonatomic, copy, nullable) NSString *quoteExternalName;

/**
 *  Output only. The state of the entitlement.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementActivationRequested
 *        Indicates that the entitlement has been created but has not yet become
 *        active. The entitlement will remain in this state until it becomes
 *        active. If the entitlement requires provider approval, a notification
 *        is sent to the provider for the activation approval. If the provider
 *        does not approve, the entitlement is removed. If approved, the
 *        entitlement transitions to the EntitlementState.ENTITLEMENT_ACTIVE
 *        state after a delay, either a generally short processing delay or, if
 *        applicable, until the scheduled start time of the purchased offer.
 *        Plan changes are not allowed in this state. Instead, customers are
 *        expected to cancel the corresponding order and place a new order.
 *        (Value: "ENTITLEMENT_ACTIVATION_REQUESTED")
 *    @arg @c kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementActive
 *        Indicates that the entitlement is active. The procured item is now
 *        usable and any associated billing events will start occurring.
 *        Entitlements in this state WILL renew. The analogous state for an
 *        unexpired but non-renewing entitlement is
 *        ENTITLEMENT_PENDING_CANCELLATION. In this state, the customer can
 *        decide to cancel the entitlement, which would change the state to
 *        EntitlementState.ENTITLEMENT_PENDING_CANCELLATION, and then
 *        EntitlementState.ENTITLEMENT_CANCELLED. The user can also request a
 *        change of plan, which will transition the state to
 *        EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE, and then back to
 *        EntitlementState.ENTITLEMENT_ACTIVE. (Value: "ENTITLEMENT_ACTIVE")
 *    @arg @c kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementCancelled
 *        Indicates that the entitlement was cancelled. The entitlement can now
 *        be deleted. (Value: "ENTITLEMENT_CANCELLED")
 *    @arg @c kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementPendingCancellation
 *        Indicates that the entitlement will expire at the end of its term.
 *        This could mean the customer has elected not to renew this entitlement
 *        or the customer elected to cancel an entitlement that only expires at
 *        term end. The entitlement typically stays in this state if the
 *        entitlement/plan allows use of the underlying resource until the end
 *        of the current billing cycle. Once the billing cycle completes, the
 *        resource will transition to EntitlementState.ENTITLEMENT_CANCELLED
 *        state. The resource cannot be modified during this state. (Value:
 *        "ENTITLEMENT_PENDING_CANCELLATION")
 *    @arg @c kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementPendingPlanChange
 *        Indicates that the entitlement is currently active, but there is a
 *        pending plan change that is requested by the customer. The entitlement
 *        typically stays in this state, if the entitlement/plan requires the
 *        completion of the current billing cycle before the plan can be
 *        changed. Once the billing cycle completes, the resource will
 *        transition to EntitlementState.ENTITLEMENT_ACTIVE, with its plan
 *        changed. (Value: "ENTITLEMENT_PENDING_PLAN_CHANGE")
 *    @arg @c kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementPendingPlanChangeApproval
 *        Indicates that the entitlement is currently active, but there is a
 *        plan change request pending provider approval. If the provider
 *        approves the plan change, then the entitlement will transition either
 *        to EntitlementState.ENTITLEMENT_ACTIVE or
 *        EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE depending on whether
 *        current plan requires that the billing cycle completes. If the
 *        provider rejects the plan change, then the pending plan change request
 *        is removed and the entitlement stays in
 *        EntitlementState.ENTITLEMENT_ACTIVE state with the old plan. (Value:
 *        "ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL")
 *    @arg @c kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementStateUnspecified
 *        Default state of the entitlement. It's only set to this value when the
 *        entitlement is first created and has not been initialized. (Value:
 *        "ENTITLEMENT_STATE_UNSPECIFIED")
 *    @arg @c kGTLRCloudCommercePartnerProcurementService_Entitlement_State_EntitlementSuspended
 *        Indicates that the entitlement is suspended either by Google or
 *        provider request. This can be triggered for various external reasons
 *        (e.g. expiration of credit card on the billing account, violation of
 *        terms-of-service of the provider etc.). As such, any remediating
 *        action needs to be taken externally, before the entitlement can be
 *        activated. This is not yet supported. (Value: "ENTITLEMENT_SUSPENDED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. End time for the subscription corresponding to this
 *  entitlement.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *subscriptionEndTime;

/** Output only. The last update timestamp. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

/**
 *  Output only. The consumerId to use when reporting usage through the Service
 *  Control API. See the consumerId field at [Reporting
 *  Metrics](https://cloud.google.com/service-control/reporting-metrics) for
 *  more details. This field is present only if the product has usage-based
 *  billing configured.
 */
@property(nonatomic, copy, nullable) NSString *usageReportingId;

@end


/**
 *  Output only. The custom properties that were collected from the user to
 *  create this entitlement.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
GTLR_DEPRECATED
@interface GTLRCloudCommercePartnerProcurementService_Entitlement_InputProperties : GTLRObject
@end


/**
 *  Response message for [PartnerProcurementService.ListAccounts[].
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "accounts" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudCommercePartnerProcurementService_ListAccountsResponse : GTLRCollectionObject

/**
 *  The list of accounts in this response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudCommercePartnerProcurementService_Account *> *accounts;

/** The token for fetching the next page. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for PartnerProcurementService.ListEntitlements.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "entitlements" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudCommercePartnerProcurementService_ListEntitlementsResponse : GTLRCollectionObject

/**
 *  The list of entitlements in this response.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudCommercePartnerProcurementService_Entitlement *> *entitlements;

/** The token for fetching the next page. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Request message for PartnerProcurementService.RejectAccount.
 */
@interface GTLRCloudCommercePartnerProcurementService_RejectAccountRequest : GTLRObject

/**
 *  The name of the approval being rejected. If absent and there is only one
 *  approval possible, that approval will be rejected. If absent and there are
 *  many approvals possible, the request will fail with a 400 Bad Request.
 *  Optional.
 */
@property(nonatomic, copy, nullable) NSString *approvalName;

/**
 *  Free form text string explaining the rejection reason. Max allowed length:
 *  256 bytes. Longer strings will be truncated.
 */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  Request message for PartnerProcurementService.RejectEntitlementPlanChange.
 */
@interface GTLRCloudCommercePartnerProcurementService_RejectEntitlementPlanChangeRequest : GTLRObject

/** Required. Name of the pending plan that is being rejected. */
@property(nonatomic, copy, nullable) NSString *pendingPlanName;

/**
 *  Free form text string explaining the rejection reason. Max allowed length:
 *  256 bytes. Longer strings will be truncated.
 */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  Request message for PartnerProcurementService.RejectEntitlement.
 */
@interface GTLRCloudCommercePartnerProcurementService_RejectEntitlementRequest : GTLRObject

/**
 *  Free form text string explaining the rejection reason. Max allowed length:
 *  256 bytes. Longer strings will be truncated.
 */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  Request message for PartnerProcurementService.ResetAccount.
 */
@interface GTLRCloudCommercePartnerProcurementService_ResetAccountRequest : GTLRObject
@end


/**
 *  Request message for ParterProcurementService.SuspendEntitlement. This is not
 *  yet supported.
 */
@interface GTLRCloudCommercePartnerProcurementService_SuspendEntitlementRequest : GTLRObject

/**
 *  A free-form reason string, explaining the reason for suspension request.
 */
@property(nonatomic, copy, nullable) NSString *reason;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
