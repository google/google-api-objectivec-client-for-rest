// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   GKE Hub API (gkehub/v2)
// Documentation:
//   https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster

#import <GoogleAPIClientForREST/GTLRGKEHubQuery.h>

@implementation GTLRGKEHubQuery

@dynamic fields;

@end

@implementation GTLRGKEHubQuery_ProjectsLocationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRGKEHubQuery_ProjectsLocationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRGKEHub_Location class];
  query.loggingName = @"gkehub.projects.locations.get";
  return query;
}

@end

@implementation GTLRGKEHubQuery_ProjectsLocationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}/locations";
  GTLRGKEHubQuery_ProjectsLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRGKEHub_ListLocationsResponse class];
  query.loggingName = @"gkehub.projects.locations.list";
  return query;
}

@end

@implementation GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesCreate

@dynamic featureId, parent, requestId;

+ (instancetype)queryWithObject:(GTLRGKEHub_MembershipFeature *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/features";
  GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRGKEHub_Operation class];
  query.loggingName = @"gkehub.projects.locations.memberships.features.create";
  return query;
}

@end

@implementation GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesDelete

@dynamic name, requestId;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRGKEHub_Operation class];
  query.loggingName = @"gkehub.projects.locations.memberships.features.delete";
  return query;
}

@end

@implementation GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRGKEHub_MembershipFeature class];
  query.loggingName = @"gkehub.projects.locations.memberships.features.get";
  return query;
}

@end

@implementation GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v2/{+parent}/features";
  GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRGKEHub_ListMembershipFeaturesResponse class];
  query.loggingName = @"gkehub.projects.locations.memberships.features.list";
  return query;
}

@end

@implementation GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesPatch

@dynamic allowMissing, name, requestId, updateMask;

+ (instancetype)queryWithObject:(GTLRGKEHub_MembershipFeature *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRGKEHub_Operation class];
  query.loggingName = @"gkehub.projects.locations.memberships.features.patch";
  return query;
}

@end

@implementation GTLRGKEHubQuery_ProjectsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRGKEHub_CancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}:cancel";
  GTLRGKEHubQuery_ProjectsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRGKEHub_Empty class];
  query.loggingName = @"gkehub.projects.locations.operations.cancel";
  return query;
}

@end

@implementation GTLRGKEHubQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}";
  GTLRGKEHubQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRGKEHub_Operation class];
  query.loggingName = @"gkehub.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRGKEHubQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v2/{+name}/operations";
  GTLRGKEHubQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRGKEHub_ListOperationsResponse class];
  query.loggingName = @"gkehub.projects.locations.operations.list";
  return query;
}

@end
