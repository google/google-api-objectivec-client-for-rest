// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   GKE Hub API (gkehub/v2)
// Documentation:
//   https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRGKEHubObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

/**
 *  Parent class for other GKE Hub query classes.
 */
@interface GTLRGKEHubQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Gets information about a location.
 *
 *  Method: gkehub.projects.locations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsGet : GTLRGKEHubQuery

/** Resource name for the location. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEHub_Location.
 *
 *  Gets information about a location.
 *
 *  @param name Resource name for the location.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists information about the supported locations for this service.
 *
 *  Method: gkehub.projects.locations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsList : GTLRGKEHubQuery

/**
 *  A filter to narrow down results to a preferred subset. The filtering
 *  language accepts strings like `"displayName=tokyo"`, and is documented in
 *  more detail in [AIP-160](https://google.aip.dev/160).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The resource that owns the locations collection, if applicable. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of results to return. If not set, the service selects a
 *  default.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token received from the `next_page_token` field in the response. Send
 *  that page token to receive the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGKEHub_ListLocationsResponse.
 *
 *  Lists information about the supported locations for this service.
 *
 *  @param name The resource that owns the locations collection, if applicable.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates membershipFeature under a given parent.
 *
 *  Method: gkehub.projects.locations.memberships.features.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesCreate : GTLRGKEHubQuery

/** Required. The ID of the membership_feature to create. */
@property(nonatomic, copy, nullable) NSString *featureId;

/**
 *  Required. The name of parent where the MembershipFeature will be created.
 *  Specified in the format `projects/ * /locations/ * /memberships/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Idempotent request UUID. */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRGKEHub_Operation.
 *
 *  Creates membershipFeature under a given parent.
 *
 *  @param object The @c GTLRGKEHub_MembershipFeature to include in the query.
 *  @param parent Required. The name of parent where the MembershipFeature will
 *    be created. Specified in the format `projects/ * /locations/ *
 *    /memberships/ *`.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesCreate
 */
+ (instancetype)queryWithObject:(GTLRGKEHub_MembershipFeature *)object
                         parent:(NSString *)parent;

@end

/**
 *  Removes a membershipFeature.
 *
 *  Method: gkehub.projects.locations.memberships.features.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesDelete : GTLRGKEHubQuery

/**
 *  Required. The name of the membershipFeature to be deleted. Specified in the
 *  format `projects/ * /locations/ * /memberships/ * /features/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Idempotent request UUID. */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Fetches a @c GTLRGKEHub_Operation.
 *
 *  Removes a membershipFeature.
 *
 *  @param name Required. The name of the membershipFeature to be deleted.
 *    Specified in the format `projects/ * /locations/ * /memberships/ *
 *    /features/ *`.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  ========= MembershipFeature Services ========= Gets details of a
 *  membershipFeature.
 *
 *  Method: gkehub.projects.locations.memberships.features.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesGet : GTLRGKEHubQuery

/**
 *  Required. The MembershipFeature resource name in the format `projects/ *
 *  /locations/ * /memberships/ * /features/ *`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEHub_MembershipFeature.
 *
 *  ========= MembershipFeature Services ========= Gets details of a
 *  membershipFeature.
 *
 *  @param name Required. The MembershipFeature resource name in the format
 *    `projects/ * /locations/ * /memberships/ * /features/ *`.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists MembershipFeatures in a given project and location.
 *
 *  Method: gkehub.projects.locations.memberships.features.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesList : GTLRGKEHubQuery

/**
 *  Lists MembershipFeatures that match the filter expression, following the
 *  syntax outlined in https://google.aip.dev/160. Examples: - Feature with the
 *  name "helloworld" in project "foo-proj" and membership "member-bar": name =
 *  "projects/foo-proj/locations/global/memberships/member-bar/features/helloworld"
 *  - Features that have a label called `foo`: labels.foo:* - Features that have
 *  a label called `foo` whose value is `bar`: labels.foo = bar
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  One or more fields to compare and use to sort the output. See
 *  https://google.aip.dev/132#ordering.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  When requesting a 'page' of resources, `page_size` specifies number of
 *  resources to return. If unspecified or set to 0, all resources will be
 *  returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Token returned by previous call to `ListFeatures` which specifies the
 *  position in the list from where to continue listing the resources.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent where the MembershipFeature will be listed. In the
 *  format: `projects/ * /locations/ * /memberships/ *`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRGKEHub_ListMembershipFeaturesResponse.
 *
 *  Lists MembershipFeatures in a given project and location.
 *
 *  @param parent Required. The parent where the MembershipFeature will be
 *    listed. In the format: `projects/ * /locations/ * /memberships/ *`.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing MembershipFeature.
 *
 *  Method: gkehub.projects.locations.memberships.features.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesPatch : GTLRGKEHubQuery

/**
 *  Optional. If set to true, and the MembershipFeature is not found, a new
 *  MembershipFeature will be created. In this situation, `update_mask` is
 *  ignored.
 */
@property(nonatomic, assign) BOOL allowMissing;

/**
 *  Output only. The resource name of the membershipFeature, in the format:
 *  `projects/{project}/locations/{location}/memberships/{membership}/features/{feature}`.
 *  Note that `membershipFeatures` is shortened to `features` in the resource
 *  name. (see http://go/aip/122#collection-identifiers)
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Idempotent request UUID. */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Required. Mask of fields to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRGKEHub_Operation.
 *
 *  Updates an existing MembershipFeature.
 *
 *  @param object The @c GTLRGKEHub_MembershipFeature to include in the query.
 *  @param name Output only. The resource name of the membershipFeature, in the
 *    format:
 *    `projects/{project}/locations/{location}/memberships/{membership}/features/{feature}`.
 *    Note that `membershipFeatures` is shortened to `features` in the resource
 *    name. (see http://go/aip/122#collection-identifiers)
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsMembershipsFeaturesPatch
 */
+ (instancetype)queryWithObject:(GTLRGKEHub_MembershipFeature *)object
                           name:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: gkehub.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsOperationsCancel : GTLRGKEHubQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEHub_Empty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param object The @c GTLRGKEHub_CancelOperationRequest to include in the
 *    query.
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithObject:(GTLRGKEHub_CancelOperationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: gkehub.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsOperationsGet : GTLRGKEHubQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRGKEHub_Operation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  Method: gkehub.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeGKEHubCloudPlatform
 */
@interface GTLRGKEHubQuery_ProjectsLocationsOperationsList : GTLRGKEHubQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRGKEHub_ListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRGKEHubQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
