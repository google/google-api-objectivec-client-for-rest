// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Application Integration API (integrations/v1alpha)
// Documentation:
//   https://cloud.google.com/application-integration

#import <GoogleAPIClientForREST/GTLRIntegrationsQuery.h>

// ----------------------------------------------------------------------------
// Constants

// fileFormat
NSString * const kGTLRIntegrationsFileFormatFileFormatUnspecified = @"FILE_FORMAT_UNSPECIFIED";
NSString * const kGTLRIntegrationsFileFormatJson               = @"JSON";
NSString * const kGTLRIntegrationsFileFormatYaml               = @"YAML";

// product
NSString * const kGTLRIntegrationsProductApigee             = @"APIGEE";
NSString * const kGTLRIntegrationsProductIp                 = @"IP";
NSString * const kGTLRIntegrationsProductSecurity           = @"SECURITY";
NSString * const kGTLRIntegrationsProductUnspecifiedProduct = @"UNSPECIFIED_PRODUCT";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRIntegrationsQuery

@dynamic fields;

@end

@implementation GTLRIntegrationsQuery_CallbackGenerateToken

@dynamic code, gcpProjectId, product, redirectUri, state;

+ (instancetype)query {
  NSString *pathURITemplate = @"v1alpha/callback:generateToken";
  GTLRIntegrationsQuery_CallbackGenerateToken *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaGenerateTokenResponse class];
  query.loggingName = @"integrations.callback.generateToken";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ConnectorPlatformRegionsEnumerate

+ (instancetype)query {
  NSString *pathURITemplate = @"v1alpha/connectorPlatformRegions:enumerate";
  GTLRIntegrationsQuery_ConnectorPlatformRegionsEnumerate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaEnumerateConnectorPlatformRegionsResponse class];
  query.loggingName = @"integrations.connectorPlatformRegions.enumerate";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsAppsScriptProjectsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/appsScriptProjects";
  GTLRIntegrationsQuery_ProjectsLocationsAppsScriptProjectsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectResponse class];
  query.loggingName = @"integrations.projects.locations.appsScriptProjects.create";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsAppsScriptProjectsLink

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/appsScriptProjects:link";
  GTLRIntegrationsQuery_ProjectsLocationsAppsScriptProjectsLink *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectResponse class];
  query.loggingName = @"integrations.projects.locations.appsScriptProjects.link";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsCreate

@dynamic clientCertificateEncryptedPrivateKey, clientCertificatePassphrase,
         clientCertificateSslCertificate, parent;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"clientCertificateEncryptedPrivateKey" : @"clientCertificate.encryptedPrivateKey",
    @"clientCertificatePassphrase" : @"clientCertificate.passphrase",
    @"clientCertificateSslCertificate" : @"clientCertificate.sslCertificate"
  };
  return map;
}

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/authConfigs";
  GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig class];
  query.loggingName = @"integrations.projects.locations.authConfigs.create";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleProtobufEmpty class];
  query.loggingName = @"integrations.projects.locations.authConfigs.delete";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig class];
  query.loggingName = @"integrations.projects.locations.authConfigs.get";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/authConfigs";
  GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListAuthConfigsResponse class];
  query.loggingName = @"integrations.projects.locations.authConfigs.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsPatch

@dynamic clientCertificateEncryptedPrivateKey, clientCertificatePassphrase,
         clientCertificateSslCertificate, name, updateMask;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"clientCertificateEncryptedPrivateKey" : @"clientCertificate.encryptedPrivateKey",
    @"clientCertificatePassphrase" : @"clientCertificate.passphrase",
    @"clientCertificateSslCertificate" : @"clientCertificate.sslCertificate"
  };
  return map;
}

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig class];
  query.loggingName = @"integrations.projects.locations.authConfigs.patch";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsCertificatesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsCertificatesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaCertificate class];
  query.loggingName = @"integrations.projects.locations.certificates.get";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsConnectionsGetConnectionSchemaMetadata

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsConnectionsGetConnectionSchemaMetadata *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaConnectionSchemaMetadata class];
  query.loggingName = @"integrations.projects.locations.connections.getConnectionSchemaMetadata";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsConnectionsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/connections";
  GTLRIntegrationsQuery_ProjectsLocationsConnectionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListConnectionsResponse class];
  query.loggingName = @"integrations.projects.locations.connections.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsConnectionsRuntimeActionSchemasList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/runtimeActionSchemas";
  GTLRIntegrationsQuery_ProjectsLocationsConnectionsRuntimeActionSchemasList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListRuntimeActionSchemasResponse class];
  query.loggingName = @"integrations.projects.locations.connections.runtimeActionSchemas.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsConnectionsRuntimeEntitySchemasList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/runtimeEntitySchemas";
  GTLRIntegrationsQuery_ProjectsLocationsConnectionsRuntimeEntitySchemasList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListRuntimeEntitySchemasResponse class];
  query.loggingName = @"integrations.projects.locations.connections.runtimeEntitySchemas.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsIntegrationsExecute

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:execute";
  GTLRIntegrationsQuery_ProjectsLocationsIntegrationsExecute *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse class];
  query.loggingName = @"integrations.projects.locations.integrations.execute";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsIntegrationsExecutionsList

@dynamic filter, filterParamsCustomFilter, filterParamsEndTime,
         filterParamsEventStatuses, filterParamsExecutionId,
         filterParamsParameterKey, filterParamsParameterPairKey,
         filterParamsParameterPairValue, filterParamsParameterType,
         filterParamsParameterValue, filterParamsStartTime,
         filterParamsTaskStatuses, filterParamsWorkflowName, orderBy, pageSize,
         pageToken, parent, readMask, refreshAcl, truncateParams;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"filterParamsCustomFilter" : @"filterParams.customFilter",
    @"filterParamsEndTime" : @"filterParams.endTime",
    @"filterParamsEventStatuses" : @"filterParams.eventStatuses",
    @"filterParamsExecutionId" : @"filterParams.executionId",
    @"filterParamsParameterKey" : @"filterParams.parameterKey",
    @"filterParamsParameterPairKey" : @"filterParams.parameterPairKey",
    @"filterParamsParameterPairValue" : @"filterParams.parameterPairValue",
    @"filterParamsParameterType" : @"filterParams.parameterType",
    @"filterParamsParameterValue" : @"filterParams.parameterValue",
    @"filterParamsStartTime" : @"filterParams.startTime",
    @"filterParamsTaskStatuses" : @"filterParams.taskStatuses",
    @"filterParamsWorkflowName" : @"filterParams.workflowName"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"filterParams.eventStatuses" : [NSString class],
    @"filterParams.taskStatuses" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/executions";
  GTLRIntegrationsQuery_ProjectsLocationsIntegrationsExecutionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListExecutionsResponse class];
  query.loggingName = @"integrations.projects.locations.integrations.executions.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsIntegrationsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/integrations";
  GTLRIntegrationsQuery_ProjectsLocationsIntegrationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListIntegrationsResponse class];
  query.loggingName = @"integrations.projects.locations.integrations.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsIntegrationsMonitorexecutionstats

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}:monitorexecutionstats";
  GTLRIntegrationsQuery_ProjectsLocationsIntegrationsMonitorexecutionstats *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaMonitorExecutionStatsResponse class];
  query.loggingName = @"integrations.projects.locations.integrations.monitorexecutionstats";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsIntegrationsSchedule

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:schedule";
  GTLRIntegrationsQuery_ProjectsLocationsIntegrationsSchedule *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaScheduleIntegrationsResponse class];
  query.loggingName = @"integrations.projects.locations.integrations.schedule";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsArchive

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:archive";
  GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsArchive *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionResponse class];
  query.loggingName = @"integrations.projects.locations.integrations.versions.archive";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsCreate

@dynamic newIntegration, parent;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/versions";
  GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion class];
  query.loggingName = @"integrations.projects.locations.integrations.versions.create";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsDeactivate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:deactivate";
  GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsDeactivate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionResponse class];
  query.loggingName = @"integrations.projects.locations.integrations.versions.deactivate";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion class];
  query.loggingName = @"integrations.projects.locations.integrations.versions.get";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsList

@dynamic fieldMask, filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/versions";
  GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListIntegrationVersionsResponse class];
  query.loggingName = @"integrations.projects.locations.integrations.versions.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion class];
  query.loggingName = @"integrations.projects.locations.integrations.versions.patch";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsPublish

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:publish";
  GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsPublish *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaPublishIntegrationVersionResponse class];
  query.loggingName = @"integrations.projects.locations.integrations.versions.publish";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsTakeoverEditLock

@dynamic integrationVersion;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest *)object
             integrationVersion:(NSString *)integrationVersion {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"integrationVersion" ];
  NSString *pathURITemplate = @"v1alpha/{+integrationVersion}:takeoverEditLock";
  GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsTakeoverEditLock *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.integrationVersion = integrationVersion;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaTakeoverEditLockResponse class];
  query.loggingName = @"integrations.projects.locations.integrations.versions.takeoverEditLock";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsValidate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:validate";
  GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsValidate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaValidateIntegrationVersionResponse class];
  query.loggingName = @"integrations.projects.locations.integrations.versions.validate";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsListTaskEntities

@dynamic parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}:listTaskEntities";
  GTLRIntegrationsQuery_ProjectsLocationsListTaskEntities *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListTaskEntitiesResponse class];
  query.loggingName = @"integrations.projects.locations.listTaskEntities";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsCreate

@dynamic clientCertificateEncryptedPrivateKey, clientCertificatePassphrase,
         clientCertificateSslCertificate, parent;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"clientCertificateEncryptedPrivateKey" : @"clientCertificate.encryptedPrivateKey",
    @"clientCertificatePassphrase" : @"clientCertificate.passphrase",
    @"clientCertificateSslCertificate" : @"clientCertificate.sslCertificate"
  };
  return map;
}

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/authConfigs";
  GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig class];
  query.loggingName = @"integrations.projects.locations.products.authConfigs.create";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleProtobufEmpty class];
  query.loggingName = @"integrations.projects.locations.products.authConfigs.delete";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig class];
  query.loggingName = @"integrations.projects.locations.products.authConfigs.get";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/authConfigs";
  GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListAuthConfigsResponse class];
  query.loggingName = @"integrations.projects.locations.products.authConfigs.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsPatch

@dynamic clientCertificateEncryptedPrivateKey, clientCertificatePassphrase,
         clientCertificateSslCertificate, name, updateMask;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"clientCertificateEncryptedPrivateKey" : @"clientCertificate.encryptedPrivateKey",
    @"clientCertificatePassphrase" : @"clientCertificate.passphrase",
    @"clientCertificateSslCertificate" : @"clientCertificate.sslCertificate"
  };
  return map;
}

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig class];
  query.loggingName = @"integrations.projects.locations.products.authConfigs.patch";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaCertificate *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/certificates";
  GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaCertificate class];
  query.loggingName = @"integrations.projects.locations.products.certificates.create";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleProtobufEmpty class];
  query.loggingName = @"integrations.projects.locations.products.certificates.delete";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaCertificate class];
  query.loggingName = @"integrations.projects.locations.products.certificates.get";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/certificates";
  GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListCertificatesResponse class];
  query.loggingName = @"integrations.projects.locations.products.certificates.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaCertificate *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaCertificate class];
  query.loggingName = @"integrations.projects.locations.products.certificates.patch";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsCreateBundle

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaCreateBundleRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}:createBundle";
  GTLRIntegrationsQuery_ProjectsLocationsProductsCreateBundle *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaCreateBundleResponse class];
  query.loggingName = @"integrations.projects.locations.products.createBundle";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsArchiveBundle

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaArchiveBundleRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:archiveBundle";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsArchiveBundle *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaArchiveBundleResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.archiveBundle";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecute

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:execute";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecute *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.execute";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaCancelExecutionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:cancel";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaCancelExecutionResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.executions.cancel";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaExecution class];
  query.loggingName = @"integrations.projects.locations.products.integrations.executions.get";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsList

@dynamic filter, filterParamsCustomFilter, filterParamsEndTime,
         filterParamsEventStatuses, filterParamsExecutionId,
         filterParamsParameterKey, filterParamsParameterPairKey,
         filterParamsParameterPairValue, filterParamsParameterType,
         filterParamsParameterValue, filterParamsStartTime,
         filterParamsTaskStatuses, filterParamsWorkflowName, orderBy, pageSize,
         pageToken, parent, readMask, refreshAcl, truncateParams;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"filterParamsCustomFilter" : @"filterParams.customFilter",
    @"filterParamsEndTime" : @"filterParams.endTime",
    @"filterParamsEventStatuses" : @"filterParams.eventStatuses",
    @"filterParamsExecutionId" : @"filterParams.executionId",
    @"filterParamsParameterKey" : @"filterParams.parameterKey",
    @"filterParamsParameterPairKey" : @"filterParams.parameterPairKey",
    @"filterParamsParameterPairValue" : @"filterParams.parameterPairValue",
    @"filterParamsParameterType" : @"filterParams.parameterType",
    @"filterParamsParameterValue" : @"filterParams.parameterValue",
    @"filterParamsStartTime" : @"filterParams.startTime",
    @"filterParamsTaskStatuses" : @"filterParams.taskStatuses",
    @"filterParamsWorkflowName" : @"filterParams.workflowName"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"filterParams.eventStatuses" : [NSString class],
    @"filterParams.taskStatuses" : [NSString class]
  };
  return map;
}

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/executions";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListExecutionsResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.executions.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsnapshotsList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/executionsnapshots";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsnapshotsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListExecutionSnapshotsResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.executionsnapshots.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsSuspensionsLift

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaLiftSuspensionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:lift";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsSuspensionsLift *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaLiftSuspensionResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.executions.suspensions.lift";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsSuspensionsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/suspensions";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsSuspensionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListSuspensionsResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.executions.suspensions.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsSuspensionsResolve

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaResolveSuspensionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:resolve";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsSuspensionsResolve *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaResolveSuspensionResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.executions.suspensions.resolve";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/integrations";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListIntegrationsResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsMonitorexecutionstats

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}:monitorexecutionstats";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsMonitorexecutionstats *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaMonitorExecutionStatsResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.monitorexecutionstats";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsSchedule

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:schedule";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsSchedule *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaScheduleIntegrationsResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.schedule";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsArchive

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:archive";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsArchive *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.versions.archive";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsCreate

@dynamic newIntegration, parent;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/versions";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion class];
  query.loggingName = @"integrations.projects.locations.products.integrations.versions.create";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsDeactivate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:deactivate";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsDeactivate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.versions.deactivate";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsDownload

@dynamic fileFormat, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:download";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsDownload *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaDownloadIntegrationVersionResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.versions.download";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion class];
  query.loggingName = @"integrations.projects.locations.products.integrations.versions.get";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsGetBundle

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:getBundle";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsGetBundle *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaGetBundleResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.versions.getBundle";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsList

@dynamic fieldMask, filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/versions";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListIntegrationVersionsResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.versions.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion class];
  query.loggingName = @"integrations.projects.locations.products.integrations.versions.patch";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsPublish

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:publish";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsPublish *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaPublishIntegrationVersionResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.versions.publish";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsTakeoverEditLock

@dynamic integrationVersion;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest *)object
             integrationVersion:(NSString *)integrationVersion {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"integrationVersion" ];
  NSString *pathURITemplate = @"v1alpha/{+integrationVersion}:takeoverEditLock";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsTakeoverEditLock *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.integrationVersion = integrationVersion;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaTakeoverEditLockResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.versions.takeoverEditLock";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsUpdateBundle

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaUpdateBundleRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:updateBundle";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsUpdateBundle *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaUpdateBundleResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.versions.updateBundle";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsUpload

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/versions:upload";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsUpload *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaUploadIntegrationVersionResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.versions.upload";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsValidate

@dynamic name;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}:validate";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsValidate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaValidateIntegrationVersionResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrations.versions.validate";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationtemplatesVersionsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/versions";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationtemplatesVersionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion class];
  query.loggingName = @"integrations.projects.locations.products.integrationtemplates.versions.create";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationtemplatesVersionsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationtemplatesVersionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion class];
  query.loggingName = @"integrations.projects.locations.products.integrationtemplates.versions.get";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationtemplatesVersionsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/versions";
  GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationtemplatesVersionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListIntegrationTemplateVersionsResponse class];
  query.loggingName = @"integrations.projects.locations.products.integrationtemplates.versions.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsListTaskEntities

@dynamic parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}:listTaskEntities";
  GTLRIntegrationsQuery_ProjectsLocationsProductsListTaskEntities *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListTaskEntitiesResponse class];
  query.loggingName = @"integrations.projects.locations.products.listTaskEntities";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/sfdcInstances";
  GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance class];
  query.loggingName = @"integrations.projects.locations.products.sfdcInstances.create";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleProtobufEmpty class];
  query.loggingName = @"integrations.projects.locations.products.sfdcInstances.delete";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance class];
  query.loggingName = @"integrations.projects.locations.products.sfdcInstances.get";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/sfdcInstances";
  GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListSfdcInstancesResponse class];
  query.loggingName = @"integrations.projects.locations.products.sfdcInstances.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance class];
  query.loggingName = @"integrations.projects.locations.products.sfdcInstances.patch";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/sfdcChannels";
  GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel class];
  query.loggingName = @"integrations.projects.locations.products.sfdcInstances.sfdcChannels.create";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleProtobufEmpty class];
  query.loggingName = @"integrations.projects.locations.products.sfdcInstances.sfdcChannels.delete";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel class];
  query.loggingName = @"integrations.projects.locations.products.sfdcInstances.sfdcChannels.get";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/sfdcChannels";
  GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListSfdcChannelsResponse class];
  query.loggingName = @"integrations.projects.locations.products.sfdcInstances.sfdcChannels.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel class];
  query.loggingName = @"integrations.projects.locations.products.sfdcInstances.sfdcChannels.patch";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/sfdcInstances";
  GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance class];
  query.loggingName = @"integrations.projects.locations.sfdcInstances.create";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleProtobufEmpty class];
  query.loggingName = @"integrations.projects.locations.sfdcInstances.delete";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance class];
  query.loggingName = @"integrations.projects.locations.sfdcInstances.get";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/sfdcInstances";
  GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListSfdcInstancesResponse class];
  query.loggingName = @"integrations.projects.locations.sfdcInstances.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance class];
  query.loggingName = @"integrations.projects.locations.sfdcInstances.patch";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/sfdcChannels";
  GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel class];
  query.loggingName = @"integrations.projects.locations.sfdcInstances.sfdcChannels.create";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleProtobufEmpty class];
  query.loggingName = @"integrations.projects.locations.sfdcInstances.sfdcChannels.delete";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel class];
  query.loggingName = @"integrations.projects.locations.sfdcInstances.sfdcChannels.get";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsList

@dynamic filter, pageSize, pageToken, parent, readMask;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1alpha/{+parent}/sfdcChannels";
  GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaListSfdcChannelsResponse class];
  query.loggingName = @"integrations.projects.locations.sfdcInstances.sfdcChannels.list";
  return query;
}

@end

@implementation GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1alpha/{+name}";
  GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel class];
  query.loggingName = @"integrations.projects.locations.sfdcInstances.sfdcChannels.patch";
  return query;
}

@end
