// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Application Integration API (integrations/v1alpha)
// Documentation:
//   https://cloud.google.com/application-integration

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRIntegrationsObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// fileFormat

/**
 *  Unspecified file format
 *
 *  Value: "FILE_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRIntegrationsFileFormatFileFormatUnspecified;
/**
 *  JSON File Format
 *
 *  Value: "JSON"
 */
FOUNDATION_EXTERN NSString * const kGTLRIntegrationsFileFormatJson;
/**
 *  YAML File Format
 *
 *  Value: "YAML"
 */
FOUNDATION_EXTERN NSString * const kGTLRIntegrationsFileFormatYaml;

// ----------------------------------------------------------------------------
// product

/** Value: "APIGEE" */
FOUNDATION_EXTERN NSString * const kGTLRIntegrationsProductApigee;
/** Value: "IP" */
FOUNDATION_EXTERN NSString * const kGTLRIntegrationsProductIp;
/** Value: "SECURITY" */
FOUNDATION_EXTERN NSString * const kGTLRIntegrationsProductSecurity;
/** Value: "UNSPECIFIED_PRODUCT" */
FOUNDATION_EXTERN NSString * const kGTLRIntegrationsProductUnspecifiedProduct;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Integrations query classes.
 */
@interface GTLRIntegrationsQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Receives the auth code and auth config id to combine that with the client id
 *  and secret to retrieve access tokens from the token endpoint. Returns either
 *  a success or error message when it's done.
 *
 *  Method: integrations.callback.generateToken
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_CallbackGenerateToken : GTLRIntegrationsQuery

/** The auth code for the given request */
@property(nonatomic, copy, nullable) NSString *code;

/** The gcp project id of the request */
@property(nonatomic, copy, nullable) NSString *gcpProjectId;

/**
 *  Which product sends the request
 *
 *  Likely values:
 *    @arg @c kGTLRIntegrationsProductUnspecifiedProduct Value
 *        "UNSPECIFIED_PRODUCT"
 *    @arg @c kGTLRIntegrationsProductIp Value "IP"
 *    @arg @c kGTLRIntegrationsProductApigee Value "APIGEE"
 *    @arg @c kGTLRIntegrationsProductSecurity Value "SECURITY"
 */
@property(nonatomic, copy, nullable) NSString *product;

/** Redirect uri of the auth code request */
@property(nonatomic, copy, nullable) NSString *redirectUri;

/** The auth config id for the given request */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaGenerateTokenResponse.
 *
 *  Receives the auth code and auth config id to combine that with the client id
 *  and secret to retrieve access tokens from the token endpoint. Returns either
 *  a success or error message when it's done.
 *
 *  @return GTLRIntegrationsQuery_CallbackGenerateToken
 */
+ (instancetype)query;

@end

/**
 *  Enumerates the regions for which Connector Platform is provisioned.
 *
 *  Method: integrations.connectorPlatformRegions.enumerate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ConnectorPlatformRegionsEnumerate : GTLRIntegrationsQuery

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaEnumerateConnectorPlatformRegionsResponse.
 *
 *  Enumerates the regions for which Connector Platform is provisioned.
 *
 *  @return GTLRIntegrationsQuery_ConnectorPlatformRegionsEnumerate
 */
+ (instancetype)query;

@end

/**
 *  Creates an Apps Script project.
 *
 *  Method: integrations.projects.locations.appsScriptProjects.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsAppsScriptProjectsCreate : GTLRIntegrationsQuery

/** Required. The project that the executed integration belongs to. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectResponse.
 *
 *  Creates an Apps Script project.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectRequest
 *    to include in the query.
 *  @param parent Required. The project that the executed integration belongs
 *    to.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsAppsScriptProjectsCreate
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaCreateAppsScriptProjectRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Links a existing Apps Script project.
 *
 *  Method: integrations.projects.locations.appsScriptProjects.link
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsAppsScriptProjectsLink : GTLRIntegrationsQuery

/** Required. The project that the executed integration belongs to. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectResponse.
 *
 *  Links a existing Apps Script project.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectRequest
 *    to include in the query.
 *  @param parent Required. The project that the executed integration belongs
 *    to.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsAppsScriptProjectsLink
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaLinkAppsScriptProjectRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates an auth config record. Fetch corresponding credentials for specific
 *  auth types, e.g. access token for OAuth 2.0, JWT token for JWT. Encrypt the
 *  auth config with Cloud KMS and store the encrypted credentials in Spanner.
 *  Returns the encrypted auth config.
 *
 *  Method: integrations.projects.locations.authConfigs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsCreate : GTLRIntegrationsQuery

/**
 *  The ssl certificate encoded in PEM format. This string must include the
 *  begin header and end footer lines. For example, -----BEGIN CERTIFICATE-----
 *  MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
 *  BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
 *  MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
 *  MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
 *  vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
 *  JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
 *  xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
 *  AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
 *  Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
 *  Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
 *  JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
 *  5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
 *  wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
 */
@property(nonatomic, copy, nullable) NSString *clientCertificateEncryptedPrivateKey;

/**
 *  'passphrase' should be left unset if private key is not encrypted. Note that
 *  'passphrase' is not the password for web server, but an extra layer of
 *  security to protected private key.
 */
@property(nonatomic, copy, nullable) NSString *clientCertificatePassphrase;

/**
 *  The ssl certificate encoded in PEM format. This string must include the
 *  begin header and end footer lines. For example, -----BEGIN CERTIFICATE-----
 *  MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
 *  BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
 *  MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
 *  MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
 *  vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
 *  JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
 *  xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
 *  AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
 *  Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
 *  Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
 *  JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
 *  5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
 *  wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
 */
@property(nonatomic, copy, nullable) NSString *clientCertificateSslCertificate;

/** Required. "projects/{project}/locations/{location}" format. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig.
 *
 *  Creates an auth config record. Fetch corresponding credentials for specific
 *  auth types, e.g. access token for OAuth 2.0, JWT token for JWT. Encrypt the
 *  auth config with Cloud KMS and store the encrypted credentials in Spanner.
 *  Returns the encrypted auth config.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig to include in
 *    the query.
 *  @param parent Required. "projects/{project}/locations/{location}" format.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsCreate
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an auth config.
 *
 *  Method: integrations.projects.locations.authConfigs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsDelete : GTLRIntegrationsQuery

/** Required. The name that is associated with the AuthConfig. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleProtobufEmpty.
 *
 *  Deletes an auth config.
 *
 *  @param name Required. The name that is associated with the AuthConfig.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a complete auth config. If the auth config doesn't exist,
 *  Code.NOT_FOUND exception will be thrown. Returns the decrypted auth config.
 *
 *  Method: integrations.projects.locations.authConfigs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsGet : GTLRIntegrationsQuery

/** Required. The name that is associated with the AuthConfig. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig.
 *
 *  Gets a complete auth config. If the auth config doesn't exist,
 *  Code.NOT_FOUND exception will be thrown. Returns the decrypted auth config.
 *
 *  @param name Required. The name that is associated with the AuthConfig.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all auth configs that match the filter. Restrict to auth configs
 *  belong to the current client only.
 *
 *  Method: integrations.projects.locations.authConfigs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsList : GTLRIntegrationsQuery

/**
 *  Filtering as supported in
 *  https://developers.google.com/authorized-buyers/apis/guides/v2/list-filters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The size of entries in the response. If unspecified, defaults to 100. */
@property(nonatomic, assign) NSInteger pageSize;

/** The token returned in the previous response. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The client, which owns this collection of AuthConfigs. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The mask which specifies fields that need to be returned in the AuthConfig's
 *  response.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListAuthConfigsResponse.
 *
 *  Lists all auth configs that match the filter. Restrict to auth configs
 *  belong to the current client only.
 *
 *  @param parent Required. The client, which owns this collection of
 *    AuthConfigs.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an auth config. If credential is updated, fetch the encrypted auth
 *  config from Spanner, decrypt with Cloud KMS key, update the credential
 *  fields, re-encrypt with Cloud KMS key and update the Spanner record. For
 *  other fields, directly update the Spanner record. Returns the encrypted auth
 *  config.
 *
 *  Method: integrations.projects.locations.authConfigs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsPatch : GTLRIntegrationsQuery

/**
 *  The ssl certificate encoded in PEM format. This string must include the
 *  begin header and end footer lines. For example, -----BEGIN CERTIFICATE-----
 *  MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
 *  BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
 *  MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
 *  MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
 *  vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
 *  JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
 *  xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
 *  AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
 *  Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
 *  Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
 *  JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
 *  5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
 *  wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
 */
@property(nonatomic, copy, nullable) NSString *clientCertificateEncryptedPrivateKey;

/**
 *  'passphrase' should be left unset if private key is not encrypted. Note that
 *  'passphrase' is not the password for web server, but an extra layer of
 *  security to protected private key.
 */
@property(nonatomic, copy, nullable) NSString *clientCertificatePassphrase;

/**
 *  The ssl certificate encoded in PEM format. This string must include the
 *  begin header and end footer lines. For example, -----BEGIN CERTIFICATE-----
 *  MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
 *  BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
 *  MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
 *  MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
 *  vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
 *  JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
 *  xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
 *  AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
 *  Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
 *  Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
 *  JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
 *  5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
 *  wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
 */
@property(nonatomic, copy, nullable) NSString *clientCertificateSslCertificate;

/**
 *  Resource name of the SFDC instance
 *  projects/{project}/locations/{location}/authConfigs/{authConfig}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask specifying the fields in the above AuthConfig that have been
 *  modified and need to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig.
 *
 *  Updates an auth config. If credential is updated, fetch the encrypted auth
 *  config from Spanner, decrypt with Cloud KMS key, update the credential
 *  fields, re-encrypt with Cloud KMS key and update the Spanner record. For
 *  other fields, directly update the Spanner record. Returns the encrypted auth
 *  config.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig to include in
 *    the query.
 *  @param name Resource name of the SFDC instance
 *    projects/{project}/locations/{location}/authConfigs/{authConfig}.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsAuthConfigsPatch
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig *)object
                           name:(NSString *)name;

@end

/**
 *  Get a certificates in the specified project.
 *
 *  Method: integrations.projects.locations.certificates.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsCertificatesGet : GTLRIntegrationsQuery

/**
 *  Required. The certificate to retrieve. Format:
 *  projects/{project}/locations/{location}/certificates/{certificate}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaCertificate.
 *
 *  Get a certificates in the specified project.
 *
 *  @param name Required. The certificate to retrieve. Format:
 *    projects/{project}/locations/{location}/certificates/{certificate}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsCertificatesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the available entities and actions associated with a Connection.
 *
 *  Method: integrations.projects.locations.connections.getConnectionSchemaMetadata
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsConnectionsGetConnectionSchemaMetadata : GTLRIntegrationsQuery

/**
 *  Required. ConnectionSchemaMetadata name. Format:
 *  projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaConnectionSchemaMetadata.
 *
 *  Lists the available entities and actions associated with a Connection.
 *
 *  @param name Required. ConnectionSchemaMetadata name. Format:
 *    projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsConnectionsGetConnectionSchemaMetadata
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists Connections in a given project and location.
 *
 *  Method: integrations.projects.locations.connections.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsConnectionsList : GTLRIntegrationsQuery

/** Filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Order by parameters. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** Page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** Page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Parent resource of the Connection, of the form: `projects/ *
 *  /locations/ *`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListConnectionsResponse.
 *
 *  Lists Connections in a given project and location.
 *
 *  @param parent Required. Parent resource of the Connection, of the form:
 *    `projects/ * /locations/ *`
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsConnectionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the JSON schemas for the inputs and outputs of actions, filtered by
 *  action name.
 *
 *  Method: integrations.projects.locations.connections.runtimeActionSchemas.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsConnectionsRuntimeActionSchemasList : GTLRIntegrationsQuery

/**
 *  Filter. Only the action field with literal equality operator is supported.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** Page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Parent resource of RuntimeActionSchema. Format:
 *  projects/{project}/locations/{location}/connections/{connection}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListRuntimeActionSchemasResponse.
 *
 *  Lists the JSON schemas for the inputs and outputs of actions, filtered by
 *  action name.
 *
 *  @param parent Required. Parent resource of RuntimeActionSchema. Format:
 *    projects/{project}/locations/{location}/connections/{connection}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsConnectionsRuntimeActionSchemasList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the JSON schemas for the properties of runtime entities, filtered by
 *  entity name.
 *
 *  Method: integrations.projects.locations.connections.runtimeEntitySchemas.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsConnectionsRuntimeEntitySchemasList : GTLRIntegrationsQuery

/**
 *  Filter. Only the entity field with literal equality operator is supported.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** Page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Parent resource of RuntimeEntitySchema. Format:
 *  projects/{project}/locations/{location}/connections/{connection}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListRuntimeEntitySchemasResponse.
 *
 *  Lists the JSON schemas for the properties of runtime entities, filtered by
 *  entity name.
 *
 *  @param parent Required. Parent resource of RuntimeEntitySchema. Format:
 *    projects/{project}/locations/{location}/connections/{connection}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsConnectionsRuntimeEntitySchemasList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Executes integrations synchronously by passing the trigger id in the request
 *  body. The request is not returned until the requested executions are either
 *  fulfilled or experienced an error. If the integration name is not specified
 *  (passing `-`), all of the associated integration under the given trigger_id
 *  will be executed. Otherwise only the specified integration for the given
 *  `trigger_id` is executed. This is helpful for execution the integration from
 *  UI.
 *
 *  Method: integrations.projects.locations.integrations.execute
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsIntegrationsExecute : GTLRIntegrationsQuery

/** Required. The integration resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse.
 *
 *  Executes integrations synchronously by passing the trigger id in the request
 *  body. The request is not returned until the requested executions are either
 *  fulfilled or experienced an error. If the integration name is not specified
 *  (passing `-`), all of the associated integration under the given trigger_id
 *  will be executed. Otherwise only the specified integration for the given
 *  `trigger_id` is executed. This is helpful for execution the integration from
 *  UI.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest
 *    to include in the query.
 *  @param name Required. The integration resource name.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsIntegrationsExecute
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Lists the status of the integration executions.
 *
 *  Method: integrations.projects.locations.integrations.executions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsIntegrationsExecutionsList : GTLRIntegrationsQuery

/**
 *  Optional. Standard filter field, we support filtering on all fields in
 *  EventExecutionParamIndexes table. All fields support for EQUALS, in
 *  additional: CreateTimestamp support for LESS_THAN, GREATER_THAN
 *  ParameterKey, ParameterValue, ParameterType support for HAS For example:
 *  "parameter_value" HAS \\"parameter1\\" Also supports operators like AND, OR,
 *  NOT For example, trigger_id=\\"id1\\" AND event_execution_state=\\"FAILED\\"
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional user-provided custom filter. */
@property(nonatomic, copy, nullable) NSString *filterParamsCustomFilter;

/** End timestamp. */
@property(nonatomic, assign) long long filterParamsEndTime;

/** List of possible event statuses. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *filterParamsEventStatuses;

/** Execution id. */
@property(nonatomic, copy, nullable) NSString *filterParamsExecutionId;

/** Param key. DEPRECATED. User parameter_pair_key instead. */
@property(nonatomic, copy, nullable) NSString *filterParamsParameterKey;

/** Param key in the key value pair filter. */
@property(nonatomic, copy, nullable) NSString *filterParamsParameterPairKey;

/** Param value in the key value pair filter. */
@property(nonatomic, copy, nullable) NSString *filterParamsParameterPairValue;

/** Param type. */
@property(nonatomic, copy, nullable) NSString *filterParamsParameterType;

/** Param value. DEPRECATED. User parameter_pair_value instead. */
@property(nonatomic, copy, nullable) NSString *filterParamsParameterValue;

/** Start timestamp. */
@property(nonatomic, assign) long long filterParamsStartTime;

/** List of possible task statuses. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *filterParamsTaskStatuses;

/** Workflow name. */
@property(nonatomic, copy, nullable) NSString *filterParamsWorkflowName;

/**
 *  Optional. The results would be returned in order you specified here.
 *  Currently supporting "last_modified_time" and "create_time".
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** Optional. The size of entries in the response. */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. The token returned in the previous response. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource name of the integration execution. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. View mask for the response data. If set, only the field specified
 *  will be returned as part of the result. If not set, all fields in event
 *  execution info will be filled and returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Optional. If true, the service will use the most recent acl information to
 *  list event execution infos and renew the acl cache. Note that fetching the
 *  most recent acl is synchronous, so it will increase RPC call latency.
 */
@property(nonatomic, assign) BOOL refreshAcl;

/**
 *  Optional. If true, the service will truncate the params to only keep the
 *  first 1000 characters of string params and empty the executions in order to
 *  make response smaller. Only works for UI and when the params fields are not
 *  filtered out.
 */
@property(nonatomic, assign) BOOL truncateParams;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListExecutionsResponse.
 *
 *  Lists the status of the integration executions.
 *
 *  @param parent Required. The parent resource name of the integration
 *    execution.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsIntegrationsExecutionsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Returns the list of all integrations in the specified project.
 *
 *  Method: integrations.projects.locations.integrations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsIntegrationsList : GTLRIntegrationsQuery

/**
 *  Filter on fields of IntegrationVersion. Fields can be compared with literal
 *  values by use of ":" (containment), "=" (equality), ">" (greater), "<" (less
 *  than), >=" (greater than or equal to), "<=" (less than or equal to), and
 *  "!=" (inequality) operators. Negation, conjunction, and disjunction are
 *  written using NOT, AND, and OR keywords. For example,
 *  organization_id=\\"1\\" AND state=ACTIVE AND description:"test". Filtering
 *  cannot be performed on repeated fields like `task_config`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The results would be returned in order you specified here. Supported sort
 *  keys are: Descending sort order by "last_modified_time", "created_time",
 *  "snapshot_number". Ascending sort order by the integration name.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The page size for the resquest. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token for the resquest. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Project and location from which the integrations should be listed.
 *  Format: projects/{project}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListIntegrationsResponse.
 *
 *  Returns the list of all integrations in the specified project.
 *
 *  @param parent Required. Project and location from which the integrations
 *    should be listed. Format: projects/{project}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsIntegrationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Get execution stats
 *
 *  Method: integrations.projects.locations.integrations.monitorexecutionstats
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsIntegrationsMonitorexecutionstats : GTLRIntegrationsQuery

/** Required. The parent resource name: {parent=projects/ * /locations/ *}. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaMonitorExecutionStatsResponse.
 *
 *  Get execution stats
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequest
 *    to include in the query.
 *  @param parent Required. The parent resource name: {parent=projects/ *
 *    /locations/ *}.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsIntegrationsMonitorexecutionstats
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Schedules an integration for execution by passing the trigger id and the
 *  scheduled time in the request body.
 *
 *  Method: integrations.projects.locations.integrations.schedule
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsIntegrationsSchedule : GTLRIntegrationsQuery

/** The integration resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaScheduleIntegrationsResponse.
 *
 *  Schedules an integration for execution by passing the trigger id and the
 *  scheduled time in the request body.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest
 *    to include in the query.
 *  @param name The integration resource name.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsIntegrationsSchedule
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Soft-deletes the integration. Changes the status of the integration to
 *  ARCHIVED. If the integration being ARCHIVED is tagged as "HEAD", the tag is
 *  removed from this snapshot and set to the previous non-ARCHIVED snapshot.
 *  The PUBLISH_REQUESTED, DUE_FOR_DELETION tags are removed too. This RPC
 *  throws an exception if the version being archived is DRAFT, and if the
 *  `locked_by` user is not the same as the user performing the Archive. Audit
 *  fields updated include last_modified_timestamp, last_modified_by. Any
 *  existing lock is released when Archiving a integration. Currently, there is
 *  no unarchive mechanism.
 *
 *  Method: integrations.projects.locations.integrations.versions.archive
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsArchive : GTLRIntegrationsQuery

/**
 *  Required. The version to archive. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionResponse.
 *
 *  Soft-deletes the integration. Changes the status of the integration to
 *  ARCHIVED. If the integration being ARCHIVED is tagged as "HEAD", the tag is
 *  removed from this snapshot and set to the previous non-ARCHIVED snapshot.
 *  The PUBLISH_REQUESTED, DUE_FOR_DELETION tags are removed too. This RPC
 *  throws an exception if the version being archived is DRAFT, and if the
 *  `locked_by` user is not the same as the user performing the Archive. Audit
 *  fields updated include last_modified_timestamp, last_modified_by. Any
 *  existing lock is released when Archiving a integration. Currently, there is
 *  no unarchive mechanism.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest
 *    to include in the query.
 *  @param name Required. The version to archive. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsArchive
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Create a integration with a draft version in the specified project.
 *
 *  Method: integrations.projects.locations.integrations.versions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsCreate : GTLRIntegrationsQuery

/**
 *  Set this flag to true, if draft version is to be created for a brand new
 *  integration. False, if the request is for an existing integration. For
 *  backward compatibility reasons, even if this flag is set to `false` and no
 *  existing integration is found, a new draft integration will still be
 *  created.
 */
@property(nonatomic, assign) BOOL newIntegration;

/**
 *  Required. The parent resource where this version will be created. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion.
 *
 *  Create a integration with a draft version in the specified project.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion to
 *    include in the query.
 *  @param parent Required. The parent resource where this version will be
 *    created. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsCreate
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion *)object
                         parent:(NSString *)parent;

@end

/**
 *  Sets the status of the ACTIVE integration to SNAPSHOT with a new tag
 *  "PREVIOUSLY_PUBLISHED" after validating it. The "HEAD" and
 *  "PUBLISH_REQUESTED" tags do not change. This RPC throws an exception if the
 *  version being snapshot is not ACTIVE. Audit fields added include action,
 *  action_by, action_timestamp.
 *
 *  Method: integrations.projects.locations.integrations.versions.deactivate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsDeactivate : GTLRIntegrationsQuery

/**
 *  Required. The version to deactivate. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionResponse.
 *
 *  Sets the status of the ACTIVE integration to SNAPSHOT with a new tag
 *  "PREVIOUSLY_PUBLISHED" after validating it. The "HEAD" and
 *  "PUBLISH_REQUESTED" tags do not change. This RPC throws an exception if the
 *  version being snapshot is not ACTIVE. Audit fields added include action,
 *  action_by, action_timestamp.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest
 *    to include in the query.
 *  @param name Required. The version to deactivate. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsDeactivate
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Get a integration in the specified project.
 *
 *  Method: integrations.projects.locations.integrations.versions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsGet : GTLRIntegrationsQuery

/**
 *  Required. The version to retrieve. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion.
 *
 *  Get a integration in the specified project.
 *
 *  @param name Required. The version to retrieve. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the list of all integration versions in the specified project.
 *
 *  Method: integrations.projects.locations.integrations.versions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsList : GTLRIntegrationsQuery

/**
 *  The field mask which specifies the particular data to be returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *fieldMask;

/**
 *  Filter on fields of IntegrationVersion. Fields can be compared with literal
 *  values by use of ":" (containment), "=" (equality), ">" (greater), "<" (less
 *  than), >=" (greater than or equal to), "<=" (less than or equal to), and
 *  "!=" (inequality) operators. Negation, conjunction, and disjunction are
 *  written using NOT, AND, and OR keywords. For example,
 *  organization_id=\\"1\\" AND state=ACTIVE AND description:"test". Filtering
 *  cannot be performed on repeated fields like `task_config`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The results would be returned in order you specified here. Currently
 *  supported sort keys are: Descending sort order for "last_modified_time",
 *  "created_time", "snapshot_number" Ascending sort order for "name".
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of versions to return. The service may return fewer than
 *  this value. If unspecified, at most 50 versions will be returned. The
 *  maximum value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListIntegrationVersions` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListIntegrationVersions` must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource where this version will be created. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}
 *  Specifically, when parent equals: 1. projects//locations//integrations/,
 *  Meaning: "List versions (with filter) for a particular integration". 2.
 *  projects//locations//integrations/- Meaning: "List versions (with filter)
 *  for a client within a particular region". 3.
 *  projects//locations/-/integrations/- Meaning: "List versions (with filter)
 *  for a client".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListIntegrationVersionsResponse.
 *
 *  Returns the list of all integration versions in the specified project.
 *
 *  @param parent Required. The parent resource where this version will be
 *    created. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}
 *    Specifically, when parent equals: 1. projects//locations//integrations/,
 *    Meaning: "List versions (with filter) for a particular integration". 2.
 *    projects//locations//integrations/- Meaning: "List versions (with filter)
 *    for a client within a particular region". 3.
 *    projects//locations/-/integrations/- Meaning: "List versions (with filter)
 *    for a client".
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a integration with a draft version in the specified project.
 *
 *  Method: integrations.projects.locations.integrations.versions.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsPatch : GTLRIntegrationsQuery

/** Output only. Auto-generated primary key. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask specifying the fields in the above integration that have been
 *  modified and need to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion.
 *
 *  Update a integration with a draft version in the specified project.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion to
 *    include in the query.
 *  @param name Output only. Auto-generated primary key.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsPatch
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion *)object
                           name:(NSString *)name;

@end

/**
 *  This RPC throws an exception if the integration is in ARCHIVED or ACTIVE
 *  state. This RPC throws an exception if the version being published is DRAFT,
 *  and if the `locked_by` user is not the same as the user performing the
 *  Publish. Audit fields updated include last_published_timestamp,
 *  last_published_by, last_modified_timestamp, last_modified_by. Any existing
 *  lock is on this integration is released.
 *
 *  Method: integrations.projects.locations.integrations.versions.publish
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsPublish : GTLRIntegrationsQuery

/**
 *  Required. The version to publish. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaPublishIntegrationVersionResponse.
 *
 *  This RPC throws an exception if the integration is in ARCHIVED or ACTIVE
 *  state. This RPC throws an exception if the version being published is DRAFT,
 *  and if the `locked_by` user is not the same as the user performing the
 *  Publish. Audit fields updated include last_published_timestamp,
 *  last_published_by, last_modified_timestamp, last_modified_by. Any existing
 *  lock is on this integration is released.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest
 *    to include in the query.
 *  @param name Required. The version to publish. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsPublish
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Clears the `locked_by` and `locked_at_timestamp`in the DRAFT version of this
 *  integration. It then performs the same action as the
 *  CreateDraftIntegrationVersion (i.e., copies the DRAFT version of the
 *  integration as a SNAPSHOT and then creates a new DRAFT version with the
 *  `locked_by` set to the `user_taking_over` and the `locked_at_timestamp` set
 *  to the current timestamp). Both the `locked_by` and `user_taking_over` are
 *  notified via email about the takeover. This RPC throws an exception if the
 *  integration is not in DRAFT status or if the `locked_by` and
 *  `locked_at_timestamp` fields are not set.The TakeoverEdit lock is treated
 *  the same as an edit of the integration, and hence shares ACLs with edit.
 *  Audit fields updated include last_modified_timestamp, last_modified_by.
 *
 *  Method: integrations.projects.locations.integrations.versions.takeoverEditLock
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsTakeoverEditLock : GTLRIntegrationsQuery

/**
 *  Required. The version to take over edit lock. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *integrationVersion;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaTakeoverEditLockResponse.
 *
 *  Clears the `locked_by` and `locked_at_timestamp`in the DRAFT version of this
 *  integration. It then performs the same action as the
 *  CreateDraftIntegrationVersion (i.e., copies the DRAFT version of the
 *  integration as a SNAPSHOT and then creates a new DRAFT version with the
 *  `locked_by` set to the `user_taking_over` and the `locked_at_timestamp` set
 *  to the current timestamp). Both the `locked_by` and `user_taking_over` are
 *  notified via email about the takeover. This RPC throws an exception if the
 *  integration is not in DRAFT status or if the `locked_by` and
 *  `locked_at_timestamp` fields are not set.The TakeoverEdit lock is treated
 *  the same as an edit of the integration, and hence shares ACLs with edit.
 *  Audit fields updated include last_modified_timestamp, last_modified_by.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest to
 *    include in the query.
 *  @param integrationVersion Required. The version to take over edit lock.
 *    Format:
 *    projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsTakeoverEditLock
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest *)object
             integrationVersion:(NSString *)integrationVersion;

@end

/**
 *  Validates the given integration. If the id doesn't exist, a
 *  NotFoundException is thrown. If validation fails a CanonicalCodeException is
 *  thrown. If there was no failure an empty response is returned.
 *
 *  Method: integrations.projects.locations.integrations.versions.validate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsValidate : GTLRIntegrationsQuery

/**
 *  Required. The version to validate. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaValidateIntegrationVersionResponse.
 *
 *  Validates the given integration. If the id doesn't exist, a
 *  NotFoundException is thrown. If validation fails a CanonicalCodeException is
 *  thrown. If there was no failure an empty response is returned.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest
 *    to include in the query.
 *  @param name Required. The version to validate. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsIntegrationsVersionsValidate
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  This is a UI only method and will be moved away. Returns a list of common
 *  tasks.
 *
 *  Method: integrations.projects.locations.listTaskEntities
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsListTaskEntities : GTLRIntegrationsQuery

/**
 *  Required. The location resource of the request. This is not going to be used
 *  but preserve the field for future.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListTaskEntitiesResponse.
 *
 *  This is a UI only method and will be moved away. Returns a list of common
 *  tasks.
 *
 *  @param parent Required. The location resource of the request. This is not
 *    going to be used but preserve the field for future.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsListTaskEntities
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates an auth config record. Fetch corresponding credentials for specific
 *  auth types, e.g. access token for OAuth 2.0, JWT token for JWT. Encrypt the
 *  auth config with Cloud KMS and store the encrypted credentials in Spanner.
 *  Returns the encrypted auth config.
 *
 *  Method: integrations.projects.locations.products.authConfigs.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsCreate : GTLRIntegrationsQuery

/**
 *  The ssl certificate encoded in PEM format. This string must include the
 *  begin header and end footer lines. For example, -----BEGIN CERTIFICATE-----
 *  MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
 *  BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
 *  MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
 *  MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
 *  vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
 *  JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
 *  xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
 *  AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
 *  Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
 *  Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
 *  JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
 *  5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
 *  wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
 */
@property(nonatomic, copy, nullable) NSString *clientCertificateEncryptedPrivateKey;

/**
 *  'passphrase' should be left unset if private key is not encrypted. Note that
 *  'passphrase' is not the password for web server, but an extra layer of
 *  security to protected private key.
 */
@property(nonatomic, copy, nullable) NSString *clientCertificatePassphrase;

/**
 *  The ssl certificate encoded in PEM format. This string must include the
 *  begin header and end footer lines. For example, -----BEGIN CERTIFICATE-----
 *  MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
 *  BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
 *  MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
 *  MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
 *  vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
 *  JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
 *  xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
 *  AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
 *  Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
 *  Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
 *  JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
 *  5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
 *  wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
 */
@property(nonatomic, copy, nullable) NSString *clientCertificateSslCertificate;

/** Required. "projects/{project}/locations/{location}" format. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig.
 *
 *  Creates an auth config record. Fetch corresponding credentials for specific
 *  auth types, e.g. access token for OAuth 2.0, JWT token for JWT. Encrypt the
 *  auth config with Cloud KMS and store the encrypted credentials in Spanner.
 *  Returns the encrypted auth config.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig to include in
 *    the query.
 *  @param parent Required. "projects/{project}/locations/{location}" format.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsCreate
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an auth config.
 *
 *  Method: integrations.projects.locations.products.authConfigs.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsDelete : GTLRIntegrationsQuery

/** Required. The name that is associated with the AuthConfig. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleProtobufEmpty.
 *
 *  Deletes an auth config.
 *
 *  @param name Required. The name that is associated with the AuthConfig.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a complete auth config. If the auth config doesn't exist,
 *  Code.NOT_FOUND exception will be thrown. Returns the decrypted auth config.
 *
 *  Method: integrations.projects.locations.products.authConfigs.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsGet : GTLRIntegrationsQuery

/** Required. The name that is associated with the AuthConfig. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig.
 *
 *  Gets a complete auth config. If the auth config doesn't exist,
 *  Code.NOT_FOUND exception will be thrown. Returns the decrypted auth config.
 *
 *  @param name Required. The name that is associated with the AuthConfig.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all auth configs that match the filter. Restrict to auth configs
 *  belong to the current client only.
 *
 *  Method: integrations.projects.locations.products.authConfigs.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsList : GTLRIntegrationsQuery

/**
 *  Filtering as supported in
 *  https://developers.google.com/authorized-buyers/apis/guides/v2/list-filters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The size of entries in the response. If unspecified, defaults to 100. */
@property(nonatomic, assign) NSInteger pageSize;

/** The token returned in the previous response. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The client, which owns this collection of AuthConfigs. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The mask which specifies fields that need to be returned in the AuthConfig's
 *  response.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListAuthConfigsResponse.
 *
 *  Lists all auth configs that match the filter. Restrict to auth configs
 *  belong to the current client only.
 *
 *  @param parent Required. The client, which owns this collection of
 *    AuthConfigs.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an auth config. If credential is updated, fetch the encrypted auth
 *  config from Spanner, decrypt with Cloud KMS key, update the credential
 *  fields, re-encrypt with Cloud KMS key and update the Spanner record. For
 *  other fields, directly update the Spanner record. Returns the encrypted auth
 *  config.
 *
 *  Method: integrations.projects.locations.products.authConfigs.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsPatch : GTLRIntegrationsQuery

/**
 *  The ssl certificate encoded in PEM format. This string must include the
 *  begin header and end footer lines. For example, -----BEGIN CERTIFICATE-----
 *  MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
 *  BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
 *  MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
 *  MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
 *  vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
 *  JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
 *  xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
 *  AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
 *  Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
 *  Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
 *  JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
 *  5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
 *  wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
 */
@property(nonatomic, copy, nullable) NSString *clientCertificateEncryptedPrivateKey;

/**
 *  'passphrase' should be left unset if private key is not encrypted. Note that
 *  'passphrase' is not the password for web server, but an extra layer of
 *  security to protected private key.
 */
@property(nonatomic, copy, nullable) NSString *clientCertificatePassphrase;

/**
 *  The ssl certificate encoded in PEM format. This string must include the
 *  begin header and end footer lines. For example, -----BEGIN CERTIFICATE-----
 *  MIICTTCCAbagAwIBAgIJAPT0tSKNxan/MA0GCSqGSIb3DQEBCwUAMCoxFzAVBgNV
 *  BAoTDkdvb2dsZSBURVNUSU5HMQ8wDQYDVQQDEwZ0ZXN0Q0EwHhcNMTUwMTAxMDAw
 *  MDAwWhcNMjUwMTAxMDAwMDAwWjAuMRcwFQYDVQQKEw5Hb29nbGUgVEVTVElORzET
 *  MBEGA1UEAwwKam9lQGJhbmFuYTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEA
 *  vDYFgMgxi5W488d9J7UpCInl0NXmZQpJDEHE4hvkaRlH7pnC71H0DLt0/3zATRP1
 *  JzY2+eqBmbGl4/sgZKYv8UrLnNyQNUTsNx1iZAfPUflf5FwgVsai8BM0pUciq1NB
 *  xD429VFcrGZNucvFLh72RuRFIKH8WUpiK/iZNFkWhZ0CAwEAAaN3MHUwDgYDVR0P
 *  AQH/BAQDAgWgMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAMBgNVHRMB
 *  Af8EAjAAMBkGA1UdDgQSBBCVgnFBCWgL/iwCqnGrhTPQMBsGA1UdIwQUMBKAEKey
 *  Um2o4k2WiEVA0ldQvNYwDQYJKoZIhvcNAQELBQADgYEAYK986R4E3L1v+Q6esBtW
 *  JrUwA9UmJRSQr0N5w3o9XzarU37/bkjOP0Fw0k/A6Vv1n3vlciYfBFaBIam1qRHr
 *  5dMsYf4CZS6w50r7hyzqyrwDoyNxkLnd2PdcHT/sym1QmflsjEs7pejtnohO6N2H
 *  wQW6M0H7Zt8claGRla4fKkg= -----END CERTIFICATE-----
 */
@property(nonatomic, copy, nullable) NSString *clientCertificateSslCertificate;

/**
 *  Resource name of the SFDC instance
 *  projects/{project}/locations/{location}/authConfigs/{authConfig}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask specifying the fields in the above AuthConfig that have been
 *  modified and need to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig.
 *
 *  Updates an auth config. If credential is updated, fetch the encrypted auth
 *  config from Spanner, decrypt with Cloud KMS key, update the credential
 *  fields, re-encrypt with Cloud KMS key and update the Spanner record. For
 *  other fields, directly update the Spanner record. Returns the encrypted auth
 *  config.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig to include in
 *    the query.
 *  @param name Resource name of the SFDC instance
 *    projects/{project}/locations/{location}/authConfigs/{authConfig}.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsAuthConfigsPatch
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaAuthConfig *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new certificate. The certificate will be registered to the trawler
 *  service and will be encrypted using cloud KMS and stored in Spanner Returns
 *  the certificate.
 *
 *  Method: integrations.projects.locations.products.certificates.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesCreate : GTLRIntegrationsQuery

/** Required. "projects/{project}/locations/{location}" format. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaCertificate.
 *
 *  Creates a new certificate. The certificate will be registered to the trawler
 *  service and will be encrypted using cloud KMS and stored in Spanner Returns
 *  the certificate.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaCertificate to include in
 *    the query.
 *  @param parent Required. "projects/{project}/locations/{location}" format.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesCreate
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaCertificate *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete a certificate
 *
 *  Method: integrations.projects.locations.products.certificates.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesDelete : GTLRIntegrationsQuery

/** Required. The name that is associated with the Certificate. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleProtobufEmpty.
 *
 *  Delete a certificate
 *
 *  @param name Required. The name that is associated with the Certificate.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get a certificates in the specified project.
 *
 *  Method: integrations.projects.locations.products.certificates.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesGet : GTLRIntegrationsQuery

/**
 *  Required. The certificate to retrieve. Format:
 *  projects/{project}/locations/{location}/certificates/{certificate}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaCertificate.
 *
 *  Get a certificates in the specified project.
 *
 *  @param name Required. The certificate to retrieve. Format:
 *    projects/{project}/locations/{location}/certificates/{certificate}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List all the certificates that match the filter. Restrict to certificate of
 *  current client only.
 *
 *  Method: integrations.projects.locations.products.certificates.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesList : GTLRIntegrationsQuery

/**
 *  Filtering as supported in
 *  https://developers.google.com/authorized-buyers/apis/guides/v2/list-filters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The size of entries in the response. If unspecified, defaults to 100. */
@property(nonatomic, assign) NSInteger pageSize;

/** The token returned in the previous response. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The client, which owns this collection of Certificates. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The mask which specifies fields that need to be returned in the
 *  Certificate's response.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListCertificatesResponse.
 *
 *  List all the certificates that match the filter. Restrict to certificate of
 *  current client only.
 *
 *  @param parent Required. The client, which owns this collection of
 *    Certificates.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the certificate by id. If new certificate file is updated, it will
 *  register with the trawler service, re-encrypt with cloud KMS and update the
 *  Spanner record. Other fields will directly update the Spanner record.
 *  Returns the Certificate.
 *
 *  Method: integrations.projects.locations.products.certificates.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesPatch : GTLRIntegrationsQuery

/** Output only. Auto generated primary key */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask specifying the fields in the above Certificate that have been
 *  modified and need to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaCertificate.
 *
 *  Updates the certificate by id. If new certificate file is updated, it will
 *  register with the trawler service, re-encrypt with cloud KMS and update the
 *  Spanner record. Other fields will directly update the Spanner record.
 *  Returns the Certificate.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaCertificate to include in
 *    the query.
 *  @param name Output only. Auto generated primary key
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsCertificatesPatch
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaCertificate *)object
                           name:(NSString *)name;

@end

/**
 *  PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE
 *  SERVICE. Create a bundle.
 *
 *  Method: integrations.projects.locations.products.createBundle
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsCreateBundle : GTLRIntegrationsQuery

/** Required. The location resource of the request. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaCreateBundleResponse.
 *
 *  PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE
 *  SERVICE. Create a bundle.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaCreateBundleRequest to
 *    include in the query.
 *  @param parent Required. The location resource of the request.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsCreateBundle
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaCreateBundleRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE
 *  SERVICE. Soft-deletes the bundle.
 *
 *  Method: integrations.projects.locations.products.integrations.archiveBundle
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsArchiveBundle : GTLRIntegrationsQuery

/**
 *  Required. The bundle to archive. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaArchiveBundleResponse.
 *
 *  PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE
 *  SERVICE. Soft-deletes the bundle.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaArchiveBundleRequest to
 *    include in the query.
 *  @param name Required. The bundle to archive. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsArchiveBundle
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaArchiveBundleRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Executes integrations synchronously by passing the trigger id in the request
 *  body. The request is not returned until the requested executions are either
 *  fulfilled or experienced an error. If the integration name is not specified
 *  (passing `-`), all of the associated integration under the given trigger_id
 *  will be executed. Otherwise only the specified integration for the given
 *  `trigger_id` is executed. This is helpful for execution the integration from
 *  UI.
 *
 *  Method: integrations.projects.locations.products.integrations.execute
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecute : GTLRIntegrationsQuery

/** Required. The integration resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaExecuteIntegrationsResponse.
 *
 *  Executes integrations synchronously by passing the trigger id in the request
 *  body. The request is not returned until the requested executions are either
 *  fulfilled or experienced an error. If the integration name is not specified
 *  (passing `-`), all of the associated integration under the given trigger_id
 *  will be executed. Otherwise only the specified integration for the given
 *  `trigger_id` is executed. This is helpful for execution the integration from
 *  UI.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest
 *    to include in the query.
 *  @param name Required. The integration resource name.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecute
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaExecuteIntegrationsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Cancellation of an execution
 *
 *  Method: integrations.projects.locations.products.integrations.executions.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsCancel : GTLRIntegrationsQuery

/**
 *  Required. The execution resource name. Format:
 *  projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integration_id}/executions/{execution_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaCancelExecutionResponse.
 *
 *  Cancellation of an execution
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaCancelExecutionRequest to
 *    include in the query.
 *  @param name Required. The execution resource name. Format:
 *    projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integration_id}/executions/{execution_id}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsCancel
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaCancelExecutionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Get an execution in the specified project.
 *
 *  Method: integrations.projects.locations.products.integrations.executions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsGet : GTLRIntegrationsQuery

/**
 *  Required. The execution resource name. Format:
 *  projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integration_id}/executions/{execution_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaExecution.
 *
 *  Get an execution in the specified project.
 *
 *  @param name Required. The execution resource name. Format:
 *    projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integration_id}/executions/{execution_id}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the status of the integration executions.
 *
 *  Method: integrations.projects.locations.products.integrations.executions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsList : GTLRIntegrationsQuery

/**
 *  Optional. Standard filter field, we support filtering on all fields in
 *  EventExecutionParamIndexes table. All fields support for EQUALS, in
 *  additional: CreateTimestamp support for LESS_THAN, GREATER_THAN
 *  ParameterKey, ParameterValue, ParameterType support for HAS For example:
 *  "parameter_value" HAS \\"parameter1\\" Also supports operators like AND, OR,
 *  NOT For example, trigger_id=\\"id1\\" AND event_execution_state=\\"FAILED\\"
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Optional user-provided custom filter. */
@property(nonatomic, copy, nullable) NSString *filterParamsCustomFilter;

/** End timestamp. */
@property(nonatomic, assign) long long filterParamsEndTime;

/** List of possible event statuses. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *filterParamsEventStatuses;

/** Execution id. */
@property(nonatomic, copy, nullable) NSString *filterParamsExecutionId;

/** Param key. DEPRECATED. User parameter_pair_key instead. */
@property(nonatomic, copy, nullable) NSString *filterParamsParameterKey;

/** Param key in the key value pair filter. */
@property(nonatomic, copy, nullable) NSString *filterParamsParameterPairKey;

/** Param value in the key value pair filter. */
@property(nonatomic, copy, nullable) NSString *filterParamsParameterPairValue;

/** Param type. */
@property(nonatomic, copy, nullable) NSString *filterParamsParameterType;

/** Param value. DEPRECATED. User parameter_pair_value instead. */
@property(nonatomic, copy, nullable) NSString *filterParamsParameterValue;

/** Start timestamp. */
@property(nonatomic, assign) long long filterParamsStartTime;

/** List of possible task statuses. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *filterParamsTaskStatuses;

/** Workflow name. */
@property(nonatomic, copy, nullable) NSString *filterParamsWorkflowName;

/**
 *  Optional. The results would be returned in order you specified here.
 *  Currently supporting "last_modified_time" and "create_time".
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** Optional. The size of entries in the response. */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. The token returned in the previous response. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource name of the integration execution. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. View mask for the response data. If set, only the field specified
 *  will be returned as part of the result. If not set, all fields in event
 *  execution info will be filled and returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Optional. If true, the service will use the most recent acl information to
 *  list event execution infos and renew the acl cache. Note that fetching the
 *  most recent acl is synchronous, so it will increase RPC call latency.
 */
@property(nonatomic, assign) BOOL refreshAcl;

/**
 *  Optional. If true, the service will truncate the params to only keep the
 *  first 1000 characters of string params and empty the executions in order to
 *  make response smaller. Only works for UI and when the params fields are not
 *  filtered out.
 */
@property(nonatomic, assign) BOOL truncateParams;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListExecutionsResponse.
 *
 *  Lists the status of the integration executions.
 *
 *  @param parent Required. The parent resource name of the integration
 *    execution.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the snapshots of a given integration executions. This RPC is not being
 *  used.
 *
 *  Method: integrations.projects.locations.products.integrations.executionsnapshots.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsnapshotsList : GTLRIntegrationsQuery

/**
 *  Currently supports filter by `execution_info_id` or `execution_snapshot_id`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Number of entries to be returned in a page. */
@property(nonatomic, assign) NSInteger pageSize;

/** The token used to retrieve the next page results. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource name of the integration execution. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  View mask for the response data. If set, only the field specified will be
 *  returned as part of the result. If not set, all fields in event execution
 *  snapshot will be filled and returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListExecutionSnapshotsResponse.
 *
 *  Lists the snapshots of a given integration executions. This RPC is not being
 *  used.
 *
 *  @param parent Required. The parent resource name of the integration
 *    execution.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsnapshotsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  * Lifts suspension for advanced suspension task. Fetch corresponding
 *  suspension with provided suspension Id, resolve suspension, and set up
 *  suspension result for the Suspension Task.
 *
 *  Method: integrations.projects.locations.products.integrations.executions.suspensions.lift
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsSuspensionsLift : GTLRIntegrationsQuery

/**
 *  Required. The resource that the suspension belongs to.
 *  "projects/{project}/locations/{location}/products/{product}/integrations/{integration}/executions/{execution}/suspensions/{suspenion}"
 *  format.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaLiftSuspensionResponse.
 *
 *  * Lifts suspension for advanced suspension task. Fetch corresponding
 *  suspension with provided suspension Id, resolve suspension, and set up
 *  suspension result for the Suspension Task.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaLiftSuspensionRequest to
 *    include in the query.
 *  @param name Required. The resource that the suspension belongs to.
 *    "projects/{project}/locations/{location}/products/{product}/integrations/{integration}/executions/{execution}/suspensions/{suspenion}"
 *    format.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsSuspensionsLift
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaLiftSuspensionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  * Lists suspensions associated with a specific execution. Only those with
 *  permissions to resolve the relevant suspensions will be able to view them.
 *
 *  Method: integrations.projects.locations.products.integrations.executions.suspensions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsSuspensionsList : GTLRIntegrationsQuery

/** Standard filter field. */
@property(nonatomic, copy, nullable) NSString *filter;

/** Field name to order by. */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** Maximum number of entries in the response. */
@property(nonatomic, assign) NSInteger pageSize;

/** Token to retrieve a specific page. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required.
 *  projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integration_name}/executions/{execution_name}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListSuspensionsResponse.
 *
 *  * Lists suspensions associated with a specific execution. Only those with
 *  permissions to resolve the relevant suspensions will be able to view them.
 *
 *  @param parent Required.
 *    projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integration_name}/executions/{execution_name}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsSuspensionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  * Resolves (lifts/rejects) any number of suspensions. If the integration is
 *  already running, only the status of the suspension is updated. Otherwise,
 *  the suspended integration will begin execution again.
 *
 *  Method: integrations.projects.locations.products.integrations.executions.suspensions.resolve
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsSuspensionsResolve : GTLRIntegrationsQuery

/**
 *  Required.
 *  projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integration_name}/executions/{execution_name}/suspensions/{suspension_id}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaResolveSuspensionResponse.
 *
 *  * Resolves (lifts/rejects) any number of suspensions. If the integration is
 *  already running, only the status of the suspension is updated. Otherwise,
 *  the suspended integration will begin execution again.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaResolveSuspensionRequest to
 *    include in the query.
 *  @param name Required.
 *    projects/{gcp_project_id}/locations/{location}/products/{product}/integrations/{integration_name}/executions/{execution_name}/suspensions/{suspension_id}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsExecutionsSuspensionsResolve
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaResolveSuspensionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Returns the list of all integrations in the specified project.
 *
 *  Method: integrations.projects.locations.products.integrations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsList : GTLRIntegrationsQuery

/**
 *  Filter on fields of IntegrationVersion. Fields can be compared with literal
 *  values by use of ":" (containment), "=" (equality), ">" (greater), "<" (less
 *  than), >=" (greater than or equal to), "<=" (less than or equal to), and
 *  "!=" (inequality) operators. Negation, conjunction, and disjunction are
 *  written using NOT, AND, and OR keywords. For example,
 *  organization_id=\\"1\\" AND state=ACTIVE AND description:"test". Filtering
 *  cannot be performed on repeated fields like `task_config`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The results would be returned in order you specified here. Supported sort
 *  keys are: Descending sort order by "last_modified_time", "created_time",
 *  "snapshot_number". Ascending sort order by the integration name.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/** The page size for the resquest. */
@property(nonatomic, assign) NSInteger pageSize;

/** The page token for the resquest. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Project and location from which the integrations should be listed.
 *  Format: projects/{project}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListIntegrationsResponse.
 *
 *  Returns the list of all integrations in the specified project.
 *
 *  @param parent Required. Project and location from which the integrations
 *    should be listed. Format: projects/{project}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Get execution stats
 *
 *  Method: integrations.projects.locations.products.integrations.monitorexecutionstats
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsMonitorexecutionstats : GTLRIntegrationsQuery

/** Required. The parent resource name: {parent=projects/ * /locations/ *}. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaMonitorExecutionStatsResponse.
 *
 *  Get execution stats
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequest
 *    to include in the query.
 *  @param parent Required. The parent resource name: {parent=projects/ *
 *    /locations/ *}.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsMonitorexecutionstats
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaMonitorExecutionStatsRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Schedules an integration for execution by passing the trigger id and the
 *  scheduled time in the request body.
 *
 *  Method: integrations.projects.locations.products.integrations.schedule
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsSchedule : GTLRIntegrationsQuery

/** The integration resource name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaScheduleIntegrationsResponse.
 *
 *  Schedules an integration for execution by passing the trigger id and the
 *  scheduled time in the request body.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest
 *    to include in the query.
 *  @param name The integration resource name.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsSchedule
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaScheduleIntegrationsRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Soft-deletes the integration. Changes the status of the integration to
 *  ARCHIVED. If the integration being ARCHIVED is tagged as "HEAD", the tag is
 *  removed from this snapshot and set to the previous non-ARCHIVED snapshot.
 *  The PUBLISH_REQUESTED, DUE_FOR_DELETION tags are removed too. This RPC
 *  throws an exception if the version being archived is DRAFT, and if the
 *  `locked_by` user is not the same as the user performing the Archive. Audit
 *  fields updated include last_modified_timestamp, last_modified_by. Any
 *  existing lock is released when Archiving a integration. Currently, there is
 *  no unarchive mechanism.
 *
 *  Method: integrations.projects.locations.products.integrations.versions.archive
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsArchive : GTLRIntegrationsQuery

/**
 *  Required. The version to archive. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionResponse.
 *
 *  Soft-deletes the integration. Changes the status of the integration to
 *  ARCHIVED. If the integration being ARCHIVED is tagged as "HEAD", the tag is
 *  removed from this snapshot and set to the previous non-ARCHIVED snapshot.
 *  The PUBLISH_REQUESTED, DUE_FOR_DELETION tags are removed too. This RPC
 *  throws an exception if the version being archived is DRAFT, and if the
 *  `locked_by` user is not the same as the user performing the Archive. Audit
 *  fields updated include last_modified_timestamp, last_modified_by. Any
 *  existing lock is released when Archiving a integration. Currently, there is
 *  no unarchive mechanism.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest
 *    to include in the query.
 *  @param name Required. The version to archive. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsArchive
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaArchiveIntegrationVersionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Create a integration with a draft version in the specified project.
 *
 *  Method: integrations.projects.locations.products.integrations.versions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsCreate : GTLRIntegrationsQuery

/**
 *  Set this flag to true, if draft version is to be created for a brand new
 *  integration. False, if the request is for an existing integration. For
 *  backward compatibility reasons, even if this flag is set to `false` and no
 *  existing integration is found, a new draft integration will still be
 *  created.
 */
@property(nonatomic, assign) BOOL newIntegration;

/**
 *  Required. The parent resource where this version will be created. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion.
 *
 *  Create a integration with a draft version in the specified project.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion to
 *    include in the query.
 *  @param parent Required. The parent resource where this version will be
 *    created. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsCreate
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion *)object
                         parent:(NSString *)parent;

@end

/**
 *  Sets the status of the ACTIVE integration to SNAPSHOT with a new tag
 *  "PREVIOUSLY_PUBLISHED" after validating it. The "HEAD" and
 *  "PUBLISH_REQUESTED" tags do not change. This RPC throws an exception if the
 *  version being snapshot is not ACTIVE. Audit fields added include action,
 *  action_by, action_timestamp.
 *
 *  Method: integrations.projects.locations.products.integrations.versions.deactivate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsDeactivate : GTLRIntegrationsQuery

/**
 *  Required. The version to deactivate. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionResponse.
 *
 *  Sets the status of the ACTIVE integration to SNAPSHOT with a new tag
 *  "PREVIOUSLY_PUBLISHED" after validating it. The "HEAD" and
 *  "PUBLISH_REQUESTED" tags do not change. This RPC throws an exception if the
 *  version being snapshot is not ACTIVE. Audit fields added include action,
 *  action_by, action_timestamp.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest
 *    to include in the query.
 *  @param name Required. The version to deactivate. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsDeactivate
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaDeactivateIntegrationVersionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Downloads an integration. Retrieves the `IntegrationVersion` for a given
 *  `integration_id` and returns the response as a string.
 *
 *  Method: integrations.projects.locations.products.integrations.versions.download
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsDownload : GTLRIntegrationsQuery

/**
 *  File format for download request.
 *
 *  Likely values:
 *    @arg @c kGTLRIntegrationsFileFormatFileFormatUnspecified Unspecified file
 *        format (Value: "FILE_FORMAT_UNSPECIFIED")
 *    @arg @c kGTLRIntegrationsFileFormatJson JSON File Format (Value: "JSON")
 *    @arg @c kGTLRIntegrationsFileFormatYaml YAML File Format (Value: "YAML")
 */
@property(nonatomic, copy, nullable) NSString *fileFormat;

/**
 *  Required. The version to download. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaDownloadIntegrationVersionResponse.
 *
 *  Downloads an integration. Retrieves the `IntegrationVersion` for a given
 *  `integration_id` and returns the response as a string.
 *
 *  @param name Required. The version to download. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsDownload
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get a integration in the specified project.
 *
 *  Method: integrations.projects.locations.products.integrations.versions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsGet : GTLRIntegrationsQuery

/**
 *  Required. The version to retrieve. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion.
 *
 *  Get a integration in the specified project.
 *
 *  @param name Required. The version to retrieve. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE
 *  SERVICE. RPC to get details of the Bundle
 *
 *  Method: integrations.projects.locations.products.integrations.versions.getBundle
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsGetBundle : GTLRIntegrationsQuery

/** Required. The bundle name. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaGetBundleResponse.
 *
 *  PROTECT WITH A VISIBILITY LABEL. THIS METHOD WILL BE MOVED TO A SEPARATE
 *  SERVICE. RPC to get details of the Bundle
 *
 *  @param name Required. The bundle name.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsGetBundle
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the list of all integration versions in the specified project.
 *
 *  Method: integrations.projects.locations.products.integrations.versions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsList : GTLRIntegrationsQuery

/**
 *  The field mask which specifies the particular data to be returned.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *fieldMask;

/**
 *  Filter on fields of IntegrationVersion. Fields can be compared with literal
 *  values by use of ":" (containment), "=" (equality), ">" (greater), "<" (less
 *  than), >=" (greater than or equal to), "<=" (less than or equal to), and
 *  "!=" (inequality) operators. Negation, conjunction, and disjunction are
 *  written using NOT, AND, and OR keywords. For example,
 *  organization_id=\\"1\\" AND state=ACTIVE AND description:"test". Filtering
 *  cannot be performed on repeated fields like `task_config`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The results would be returned in order you specified here. Currently
 *  supported sort keys are: Descending sort order for "last_modified_time",
 *  "created_time", "snapshot_number" Ascending sort order for "name".
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  The maximum number of versions to return. The service may return fewer than
 *  this value. If unspecified, at most 50 versions will be returned. The
 *  maximum value is 1000; values above 1000 will be coerced to 1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListIntegrationVersions` call.
 *  Provide this to retrieve the subsequent page. When paginating, all other
 *  parameters provided to `ListIntegrationVersions` must match the call that
 *  provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource where this version will be created. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}
 *  Specifically, when parent equals: 1. projects//locations//integrations/,
 *  Meaning: "List versions (with filter) for a particular integration". 2.
 *  projects//locations//integrations/- Meaning: "List versions (with filter)
 *  for a client within a particular region". 3.
 *  projects//locations/-/integrations/- Meaning: "List versions (with filter)
 *  for a client".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListIntegrationVersionsResponse.
 *
 *  Returns the list of all integration versions in the specified project.
 *
 *  @param parent Required. The parent resource where this version will be
 *    created. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}
 *    Specifically, when parent equals: 1. projects//locations//integrations/,
 *    Meaning: "List versions (with filter) for a particular integration". 2.
 *    projects//locations//integrations/- Meaning: "List versions (with filter)
 *    for a client within a particular region". 3.
 *    projects//locations/-/integrations/- Meaning: "List versions (with filter)
 *    for a client".
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update a integration with a draft version in the specified project.
 *
 *  Method: integrations.projects.locations.products.integrations.versions.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsPatch : GTLRIntegrationsQuery

/** Output only. Auto-generated primary key. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask specifying the fields in the above integration that have been
 *  modified and need to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion.
 *
 *  Update a integration with a draft version in the specified project.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion to
 *    include in the query.
 *  @param name Output only. Auto-generated primary key.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsPatch
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationVersion *)object
                           name:(NSString *)name;

@end

/**
 *  This RPC throws an exception if the integration is in ARCHIVED or ACTIVE
 *  state. This RPC throws an exception if the version being published is DRAFT,
 *  and if the `locked_by` user is not the same as the user performing the
 *  Publish. Audit fields updated include last_published_timestamp,
 *  last_published_by, last_modified_timestamp, last_modified_by. Any existing
 *  lock is on this integration is released.
 *
 *  Method: integrations.projects.locations.products.integrations.versions.publish
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsPublish : GTLRIntegrationsQuery

/**
 *  Required. The version to publish. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaPublishIntegrationVersionResponse.
 *
 *  This RPC throws an exception if the integration is in ARCHIVED or ACTIVE
 *  state. This RPC throws an exception if the version being published is DRAFT,
 *  and if the `locked_by` user is not the same as the user performing the
 *  Publish. Audit fields updated include last_published_timestamp,
 *  last_published_by, last_modified_timestamp, last_modified_by. Any existing
 *  lock is on this integration is released.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest
 *    to include in the query.
 *  @param name Required. The version to publish. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsPublish
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaPublishIntegrationVersionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Clears the `locked_by` and `locked_at_timestamp`in the DRAFT version of this
 *  integration. It then performs the same action as the
 *  CreateDraftIntegrationVersion (i.e., copies the DRAFT version of the
 *  integration as a SNAPSHOT and then creates a new DRAFT version with the
 *  `locked_by` set to the `user_taking_over` and the `locked_at_timestamp` set
 *  to the current timestamp). Both the `locked_by` and `user_taking_over` are
 *  notified via email about the takeover. This RPC throws an exception if the
 *  integration is not in DRAFT status or if the `locked_by` and
 *  `locked_at_timestamp` fields are not set.The TakeoverEdit lock is treated
 *  the same as an edit of the integration, and hence shares ACLs with edit.
 *  Audit fields updated include last_modified_timestamp, last_modified_by.
 *
 *  Method: integrations.projects.locations.products.integrations.versions.takeoverEditLock
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsTakeoverEditLock : GTLRIntegrationsQuery

/**
 *  Required. The version to take over edit lock. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *integrationVersion;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaTakeoverEditLockResponse.
 *
 *  Clears the `locked_by` and `locked_at_timestamp`in the DRAFT version of this
 *  integration. It then performs the same action as the
 *  CreateDraftIntegrationVersion (i.e., copies the DRAFT version of the
 *  integration as a SNAPSHOT and then creates a new DRAFT version with the
 *  `locked_by` set to the `user_taking_over` and the `locked_at_timestamp` set
 *  to the current timestamp). Both the `locked_by` and `user_taking_over` are
 *  notified via email about the takeover. This RPC throws an exception if the
 *  integration is not in DRAFT status or if the `locked_by` and
 *  `locked_at_timestamp` fields are not set.The TakeoverEdit lock is treated
 *  the same as an edit of the integration, and hence shares ACLs with edit.
 *  Audit fields updated include last_modified_timestamp, last_modified_by.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest to
 *    include in the query.
 *  @param integrationVersion Required. The version to take over edit lock.
 *    Format:
 *    projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsTakeoverEditLock
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaTakeoverEditLockRequest *)object
             integrationVersion:(NSString *)integrationVersion;

@end

/**
 *  THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. RPC to update the Bundle
 *
 *  Method: integrations.projects.locations.products.integrations.versions.updateBundle
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsUpdateBundle : GTLRIntegrationsQuery

/** Required. Bundle name */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaUpdateBundleResponse.
 *
 *  THIS METHOD WILL BE MOVED TO A SEPARATE SERVICE. RPC to update the Bundle
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaUpdateBundleRequest to
 *    include in the query.
 *  @param name Required. Bundle name
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsUpdateBundle
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaUpdateBundleRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Uploads an integration. The content can be a previously downloaded
 *  integration. Performs the same function as CreateDraftIntegrationVersion,
 *  but accepts input in a string format, which holds the complete
 *  representation of the IntegrationVersion content.
 *
 *  Method: integrations.projects.locations.products.integrations.versions.upload
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsUpload : GTLRIntegrationsQuery

/**
 *  Required. The version to upload. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaUploadIntegrationVersionResponse.
 *
 *  Uploads an integration. The content can be a previously downloaded
 *  integration. Performs the same function as CreateDraftIntegrationVersion,
 *  but accepts input in a string format, which holds the complete
 *  representation of the IntegrationVersion content.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest
 *    to include in the query.
 *  @param parent Required. The version to upload. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsUpload
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaUploadIntegrationVersionRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Validates the given integration. If the id doesn't exist, a
 *  NotFoundException is thrown. If validation fails a CanonicalCodeException is
 *  thrown. If there was no failure an empty response is returned.
 *
 *  Method: integrations.projects.locations.products.integrations.versions.validate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsValidate : GTLRIntegrationsQuery

/**
 *  Required. The version to validate. Format:
 *  projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaValidateIntegrationVersionResponse.
 *
 *  Validates the given integration. If the id doesn't exist, a
 *  NotFoundException is thrown. If validation fails a CanonicalCodeException is
 *  thrown. If there was no failure an empty response is returned.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest
 *    to include in the query.
 *  @param name Required. The version to validate. Format:
 *    projects/{project}/locations/{location}/integrations/{integration}/versions/{version}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationsVersionsValidate
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaValidateIntegrationVersionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an IntegrationTemplateVersion.
 *
 *  Method: integrations.projects.locations.products.integrationtemplates.versions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationtemplatesVersionsCreate : GTLRIntegrationsQuery

/**
 *  Required. The parent resource where this TemplateVersion will be created.
 *  Format:
 *  projects/{project}/location/{location}/product/{product}/integrationtemplates/{integrationtemplate}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion.
 *
 *  Creates an IntegrationTemplateVersion.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion
 *    to include in the query.
 *  @param parent Required. The parent resource where this TemplateVersion will
 *    be created. Format:
 *    projects/{project}/location/{location}/product/{product}/integrationtemplates/{integrationtemplate}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationtemplatesVersionsCreate
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion *)object
                         parent:(NSString *)parent;

@end

/**
 *  Returns an IntegrationTemplateVersion in the specified project.
 *
 *  Method: integrations.projects.locations.products.integrationtemplates.versions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationtemplatesVersionsGet : GTLRIntegrationsQuery

/**
 *  Required. The TemplateVersion to retrieve. Format:
 *  projects/{project}/locations/{location}/products/{product}/integrationtemplates/{integrationtemplate}/versions/{version}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaIntegrationTemplateVersion.
 *
 *  Returns an IntegrationTemplateVersion in the specified project.
 *
 *  @param name Required. The TemplateVersion to retrieve. Format:
 *    projects/{project}/locations/{location}/products/{product}/integrationtemplates/{integrationtemplate}/versions/{version}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationtemplatesVersionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the list of all IntegrationTemplateVersions in the specified
 *  project.
 *
 *  Method: integrations.projects.locations.products.integrationtemplates.versions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationtemplatesVersionsList : GTLRIntegrationsQuery

/** Filter syntax: defined in the EBNF grammar. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The maximum number of IntegrationTemplateVersions to return. The service may
 *  return fewer than this value. If unspecified, at most 50 versions will be
 *  returned. The maximum value is 1000; values above 1000 will be coerced to
 *  1000.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListIntegrationTemplateVersions`
 *  call. Provide this to retrieve the subsequent page. When paginating, all
 *  other parameters provided to `ListIntegrationTemplateVersions` must match
 *  the call that provided the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Format:
 *  projects/{project}/location/{location}/product/{product}/integrationtemplates/{integrationtemplate}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListIntegrationTemplateVersionsResponse.
 *
 *  Returns the list of all IntegrationTemplateVersions in the specified
 *  project.
 *
 *  @param parent Required. Format:
 *    projects/{project}/location/{location}/product/{product}/integrationtemplates/{integrationtemplate}
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsIntegrationtemplatesVersionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  This is a UI only method and will be moved away. Returns a list of common
 *  tasks.
 *
 *  Method: integrations.projects.locations.products.listTaskEntities
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsListTaskEntities : GTLRIntegrationsQuery

/**
 *  Required. The location resource of the request. This is not going to be used
 *  but preserve the field for future.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListTaskEntitiesResponse.
 *
 *  This is a UI only method and will be moved away. Returns a list of common
 *  tasks.
 *
 *  @param parent Required. The location resource of the request. This is not
 *    going to be used but preserve the field for future.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsListTaskEntities
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates an sfdc instance record. Store the sfdc instance in Spanner. Returns
 *  the sfdc instance.
 *
 *  Method: integrations.projects.locations.products.sfdcInstances.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesCreate : GTLRIntegrationsQuery

/** Required. "projects/{project}/locations/{location}" format. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance.
 *
 *  Creates an sfdc instance record. Store the sfdc instance in Spanner. Returns
 *  the sfdc instance.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance to include in
 *    the query.
 *  @param parent Required. "projects/{project}/locations/{location}" format.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesCreate
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an sfdc instance.
 *
 *  Method: integrations.projects.locations.products.sfdcInstances.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesDelete : GTLRIntegrationsQuery

/** Required. The name that is associated with the SfdcInstance. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleProtobufEmpty.
 *
 *  Deletes an sfdc instance.
 *
 *  @param name Required. The name that is associated with the SfdcInstance.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an sfdc instance. If the instance doesn't exist, Code.NOT_FOUND
 *  exception will be thrown.
 *
 *  Method: integrations.projects.locations.products.sfdcInstances.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesGet : GTLRIntegrationsQuery

/** Required. The name that is associated with the SfdcInstance. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance.
 *
 *  Gets an sfdc instance. If the instance doesn't exist, Code.NOT_FOUND
 *  exception will be thrown.
 *
 *  @param name Required. The name that is associated with the SfdcInstance.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all sfdc instances that match the filter. Restrict to sfdc instances
 *  belonging to the current client only.
 *
 *  Method: integrations.projects.locations.products.sfdcInstances.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesList : GTLRIntegrationsQuery

/**
 *  Filtering as supported in
 *  https://developers.google.com/authorized-buyers/apis/guides/v2/list-filters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The size of entries in the response. If unspecified, defaults to 100. */
@property(nonatomic, assign) NSInteger pageSize;

/** The token returned in the previous response. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The client, which owns this collection of SfdcInstances. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The mask which specifies fields that need to be returned in the
 *  SfdcInstance's response.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListSfdcInstancesResponse.
 *
 *  Lists all sfdc instances that match the filter. Restrict to sfdc instances
 *  belonging to the current client only.
 *
 *  @param parent Required. The client, which owns this collection of
 *    SfdcInstances.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an sfdc instance. Updates the sfdc instance in spanner. Returns the
 *  sfdc instance.
 *
 *  Method: integrations.projects.locations.products.sfdcInstances.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesPatch : GTLRIntegrationsQuery

/**
 *  Resource name of the SFDC instance
 *  projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask specifying the fields in the above SfdcInstance that have been
 *  modified and need to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance.
 *
 *  Updates an sfdc instance. Updates the sfdc instance in spanner. Returns the
 *  sfdc instance.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance to include in
 *    the query.
 *  @param name Resource name of the SFDC instance
 *    projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesPatch
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an sfdc channel record. Store the sfdc channel in Spanner. Returns
 *  the sfdc channel.
 *
 *  Method: integrations.projects.locations.products.sfdcInstances.sfdcChannels.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsCreate : GTLRIntegrationsQuery

/** Required. "projects/{project}/locations/{location}" format. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel.
 *
 *  Creates an sfdc channel record. Store the sfdc channel in Spanner. Returns
 *  the sfdc channel.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel to include in
 *    the query.
 *  @param parent Required. "projects/{project}/locations/{location}" format.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsCreate
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an sfdc channel.
 *
 *  Method: integrations.projects.locations.products.sfdcInstances.sfdcChannels.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsDelete : GTLRIntegrationsQuery

/** Required. The name that is associated with the SfdcChannel. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleProtobufEmpty.
 *
 *  Deletes an sfdc channel.
 *
 *  @param name Required. The name that is associated with the SfdcChannel.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an sfdc channel. If the channel doesn't exist, Code.NOT_FOUND exception
 *  will be thrown.
 *
 *  Method: integrations.projects.locations.products.sfdcInstances.sfdcChannels.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsGet : GTLRIntegrationsQuery

/** Required. The name that is associated with the SfdcChannel. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel.
 *
 *  Gets an sfdc channel. If the channel doesn't exist, Code.NOT_FOUND exception
 *  will be thrown.
 *
 *  @param name Required. The name that is associated with the SfdcChannel.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all sfdc channels that match the filter. Restrict to sfdc channels
 *  belonging to the current client only.
 *
 *  Method: integrations.projects.locations.products.sfdcInstances.sfdcChannels.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsList : GTLRIntegrationsQuery

/**
 *  Filtering as supported in
 *  https://developers.google.com/authorized-buyers/apis/guides/v2/list-filters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The size of entries in the response. If unspecified, defaults to 100. */
@property(nonatomic, assign) NSInteger pageSize;

/** The token returned in the previous response. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The client, which owns this collection of SfdcChannels. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The mask which specifies fields that need to be returned in the
 *  SfdcChannel's response.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListSfdcChannelsResponse.
 *
 *  Lists all sfdc channels that match the filter. Restrict to sfdc channels
 *  belonging to the current client only.
 *
 *  @param parent Required. The client, which owns this collection of
 *    SfdcChannels.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an sfdc channel. Updates the sfdc channel in spanner. Returns the
 *  sfdc channel.
 *
 *  Method: integrations.projects.locations.products.sfdcInstances.sfdcChannels.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsPatch : GTLRIntegrationsQuery

/**
 *  Resource name of the SFDC channel
 *  projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask specifying the fields in the above SfdcChannel that have been
 *  modified and need to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel.
 *
 *  Updates an sfdc channel. Updates the sfdc channel in spanner. Returns the
 *  sfdc channel.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel to include in
 *    the query.
 *  @param name Resource name of the SFDC channel
 *    projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsProductsSfdcInstancesSfdcChannelsPatch
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an sfdc instance record. Store the sfdc instance in Spanner. Returns
 *  the sfdc instance.
 *
 *  Method: integrations.projects.locations.sfdcInstances.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesCreate : GTLRIntegrationsQuery

/** Required. "projects/{project}/locations/{location}" format. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance.
 *
 *  Creates an sfdc instance record. Store the sfdc instance in Spanner. Returns
 *  the sfdc instance.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance to include in
 *    the query.
 *  @param parent Required. "projects/{project}/locations/{location}" format.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesCreate
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an sfdc instance.
 *
 *  Method: integrations.projects.locations.sfdcInstances.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesDelete : GTLRIntegrationsQuery

/** Required. The name that is associated with the SfdcInstance. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleProtobufEmpty.
 *
 *  Deletes an sfdc instance.
 *
 *  @param name Required. The name that is associated with the SfdcInstance.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an sfdc instance. If the instance doesn't exist, Code.NOT_FOUND
 *  exception will be thrown.
 *
 *  Method: integrations.projects.locations.sfdcInstances.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesGet : GTLRIntegrationsQuery

/** Required. The name that is associated with the SfdcInstance. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance.
 *
 *  Gets an sfdc instance. If the instance doesn't exist, Code.NOT_FOUND
 *  exception will be thrown.
 *
 *  @param name Required. The name that is associated with the SfdcInstance.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all sfdc instances that match the filter. Restrict to sfdc instances
 *  belonging to the current client only.
 *
 *  Method: integrations.projects.locations.sfdcInstances.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesList : GTLRIntegrationsQuery

/**
 *  Filtering as supported in
 *  https://developers.google.com/authorized-buyers/apis/guides/v2/list-filters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The size of entries in the response. If unspecified, defaults to 100. */
@property(nonatomic, assign) NSInteger pageSize;

/** The token returned in the previous response. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The client, which owns this collection of SfdcInstances. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The mask which specifies fields that need to be returned in the
 *  SfdcInstance's response.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListSfdcInstancesResponse.
 *
 *  Lists all sfdc instances that match the filter. Restrict to sfdc instances
 *  belonging to the current client only.
 *
 *  @param parent Required. The client, which owns this collection of
 *    SfdcInstances.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an sfdc instance. Updates the sfdc instance in spanner. Returns the
 *  sfdc instance.
 *
 *  Method: integrations.projects.locations.sfdcInstances.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesPatch : GTLRIntegrationsQuery

/**
 *  Resource name of the SFDC instance
 *  projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask specifying the fields in the above SfdcInstance that have been
 *  modified and need to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance.
 *
 *  Updates an sfdc instance. Updates the sfdc instance in spanner. Returns the
 *  sfdc instance.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance to include in
 *    the query.
 *  @param name Resource name of the SFDC instance
 *    projects/{project}/locations/{location}/sfdcInstances/{sfdcInstance}.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesPatch
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcInstance *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an sfdc channel record. Store the sfdc channel in Spanner. Returns
 *  the sfdc channel.
 *
 *  Method: integrations.projects.locations.sfdcInstances.sfdcChannels.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsCreate : GTLRIntegrationsQuery

/** Required. "projects/{project}/locations/{location}" format. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel.
 *
 *  Creates an sfdc channel record. Store the sfdc channel in Spanner. Returns
 *  the sfdc channel.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel to include in
 *    the query.
 *  @param parent Required. "projects/{project}/locations/{location}" format.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsCreate
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an sfdc channel.
 *
 *  Method: integrations.projects.locations.sfdcInstances.sfdcChannels.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsDelete : GTLRIntegrationsQuery

/** Required. The name that is associated with the SfdcChannel. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleProtobufEmpty.
 *
 *  Deletes an sfdc channel.
 *
 *  @param name Required. The name that is associated with the SfdcChannel.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an sfdc channel. If the channel doesn't exist, Code.NOT_FOUND exception
 *  will be thrown.
 *
 *  Method: integrations.projects.locations.sfdcInstances.sfdcChannels.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsGet : GTLRIntegrationsQuery

/** Required. The name that is associated with the SfdcChannel. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel.
 *
 *  Gets an sfdc channel. If the channel doesn't exist, Code.NOT_FOUND exception
 *  will be thrown.
 *
 *  @param name Required. The name that is associated with the SfdcChannel.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all sfdc channels that match the filter. Restrict to sfdc channels
 *  belonging to the current client only.
 *
 *  Method: integrations.projects.locations.sfdcInstances.sfdcChannels.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsList : GTLRIntegrationsQuery

/**
 *  Filtering as supported in
 *  https://developers.google.com/authorized-buyers/apis/guides/v2/list-filters.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** The size of entries in the response. If unspecified, defaults to 100. */
@property(nonatomic, assign) NSInteger pageSize;

/** The token returned in the previous response. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The client, which owns this collection of SfdcChannels. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The mask which specifies fields that need to be returned in the
 *  SfdcChannel's response.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c
 *  GTLRIntegrations_GoogleCloudIntegrationsV1alphaListSfdcChannelsResponse.
 *
 *  Lists all sfdc channels that match the filter. Restrict to sfdc channels
 *  belonging to the current client only.
 *
 *  @param parent Required. The client, which owns this collection of
 *    SfdcChannels.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an sfdc channel. Updates the sfdc channel in spanner. Returns the
 *  sfdc channel.
 *
 *  Method: integrations.projects.locations.sfdcInstances.sfdcChannels.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeIntegrationsCloudPlatform
 */
@interface GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsPatch : GTLRIntegrationsQuery

/**
 *  Resource name of the SFDC channel
 *  projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Field mask specifying the fields in the above SfdcChannel that have been
 *  modified and need to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel.
 *
 *  Updates an sfdc channel. Updates the sfdc channel in spanner. Returns the
 *  sfdc channel.
 *
 *  @param object The @c
 *    GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel to include in
 *    the query.
 *  @param name Resource name of the SFDC channel
 *    projects/{project}/locations/{location}/sfdcInstances/{sfdc_instance}/sfdcChannels/{sfdc_channel}.
 *
 *  @return GTLRIntegrationsQuery_ProjectsLocationsSfdcInstancesSfdcChannelsPatch
 */
+ (instancetype)queryWithObject:(GTLRIntegrations_GoogleCloudIntegrationsV1alphaSfdcChannel *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
