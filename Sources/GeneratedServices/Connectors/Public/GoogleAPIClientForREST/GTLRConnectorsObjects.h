// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Connectors API (connectors/v2)
// Description:
//   Enables users to create and manage connections to Google Cloud services and
//   third-party business applications using the Connectors interface.
// Documentation:
//   https://cloud.google.com/apigee/docs/api-platform/connectors/about-connectors

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRConnectors_Action;
@class GTLRConnectors_Entity;
@class GTLRConnectors_Entity_Fields;
@class GTLRConnectors_EntityType;
@class GTLRConnectors_ExecuteActionRequest_Parameters;
@class GTLRConnectors_ExecuteActionResponse_Results_Item;
@class GTLRConnectors_ExecuteSqlQueryResponse_Results_Item;
@class GTLRConnectors_Field;
@class GTLRConnectors_Field_AdditionalDetails;
@class GTLRConnectors_InputParameter;
@class GTLRConnectors_Query;
@class GTLRConnectors_Reference;
@class GTLRConnectors_ResultMetadata;
@class GTLRConnectors_UpdateEntitiesWithConditionsResponse_Response;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRConnectors_Field.dataType

/**
 *  Array type.
 *
 *  Value: "ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Array;
/**
 *  Big int type.
 *
 *  Value: "BIGINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Bigint;
/**
 *  Binary type.
 *
 *  Value: "BINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Binary;
/**
 *  Bit type.
 *
 *  Value: "BIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Bit;
/**
 *  Blob type.
 *
 *  Value: "BLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Blob;
/**
 *  Boolean type.
 *
 *  Value: "BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Boolean;
/**
 *  Char type.
 *
 *  Value: "CHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Char;
/**
 *  Clob type.
 *
 *  Value: "CLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Clob;
/**
 *  Datalink type.
 *
 *  Value: "DATALINK"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Datalink;
/**
 *  Datatype unspecified.
 *
 *  Value: "DATA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeUnspecified;
/**
 *  Date type.
 *
 *  Value: "DATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Date;
/**
 *  Deprecated Datetime type.
 *
 *  Value: "DATETIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Datetime;
/**
 *  Decimal type.
 *
 *  Value: "DECIMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Decimal;
/**
 *  Distinct type keyword.
 *
 *  Value: "DISTINCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Distinct;
/**
 *  Double type.
 *
 *  Value: "DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Double;
/**
 *  Float type.
 *
 *  Value: "FLOAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Float;
/**
 *  Deprecated Int type, use INTEGER type instead.
 *
 *  Value: "INT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Int;
/**
 *  Integer type.
 *
 *  Value: "INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Integer;
/**
 *  Java object type.
 *
 *  Value: "JAVA_OBJECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_JavaObject;
/**
 *  Deprecated Long type, use BIGINT type instead.
 *
 *  Value: "LONG"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Long;
/**
 *  Long Nvarchar type.
 *
 *  Value: "LONGNVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Longnvarchar;
/**
 *  Long Varbinary type.
 *
 *  Value: "LONGVARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Longvarbinary;
/**
 *  Long varchar type.
 *
 *  Value: "LONGVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Longvarchar;
/**
 *  Nchar type.
 *
 *  Value: "NCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Nchar;
/**
 *  Nclob type.
 *
 *  Value: "NCLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Nclob;
/**
 *  Null type.
 *
 *  Value: "NULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Null;
/**
 *  Numeric type.
 *
 *  Value: "NUMERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Numeric;
/**
 *  Nvarchar type.
 *
 *  Value: "NVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Nvarchar;
/**
 *  Other type.
 *
 *  Value: "OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Other;
/**
 *  Real type.
 *
 *  Value: "REAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Real;
/**
 *  Ref type.
 *
 *  Value: "REF"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Ref;
/**
 *  Ref_cursor type.
 *
 *  Value: "REF_CURSOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_RefCursor;
/**
 *  Row ID type.
 *
 *  Value: "ROWID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Rowid;
/**
 *  Small int type.
 *
 *  Value: "SMALLINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Smallint;
/**
 *  SQLXML type.
 *
 *  Value: "SQLXML"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Sqlxml;
/**
 *  Deprecated string type, use VARCHAR type instead.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_String;
/**
 *  Struct type.
 *
 *  Value: "STRUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Struct;
/**
 *  Time type.
 *
 *  Value: "TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Time;
/**
 *  Timestamp type.
 *
 *  Value: "TIMESTAMP"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Timestamp;
/**
 *  Timestamp with timezone type.
 *
 *  Value: "TIMESTAMP_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_TimestampWithTimezone;
/**
 *  Time with timezone type.
 *
 *  Value: "TIME_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_TimeWithTimezone;
/**
 *  Tiny int type.
 *
 *  Value: "TINYINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Tinyint;
/**
 *  Deprecated UUID type, use VARCHAR instead.
 *
 *  Value: "UUID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Uuid;
/**
 *  Varbinary type.
 *
 *  Value: "VARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Varbinary;
/**
 *  Varchar type.
 *
 *  Value: "VARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Varchar;

// ----------------------------------------------------------------------------
// GTLRConnectors_InputParameter.dataType

/**
 *  Array type.
 *
 *  Value: "ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Array;
/**
 *  Big int type.
 *
 *  Value: "BIGINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Bigint;
/**
 *  Binary type.
 *
 *  Value: "BINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Binary;
/**
 *  Bit type.
 *
 *  Value: "BIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Bit;
/**
 *  Blob type.
 *
 *  Value: "BLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Blob;
/**
 *  Boolean type.
 *
 *  Value: "BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Boolean;
/**
 *  Char type.
 *
 *  Value: "CHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Char;
/**
 *  Clob type.
 *
 *  Value: "CLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Clob;
/**
 *  Datalink type.
 *
 *  Value: "DATALINK"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Datalink;
/**
 *  Datatype unspecified.
 *
 *  Value: "DATA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeUnspecified;
/**
 *  Date type.
 *
 *  Value: "DATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Date;
/**
 *  Deprecated Datetime type.
 *
 *  Value: "DATETIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Datetime;
/**
 *  Decimal type.
 *
 *  Value: "DECIMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Decimal;
/**
 *  Distinct type keyword.
 *
 *  Value: "DISTINCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Distinct;
/**
 *  Double type.
 *
 *  Value: "DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Double;
/**
 *  Float type.
 *
 *  Value: "FLOAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Float;
/**
 *  Deprecated Int type, use INTEGER type instead.
 *
 *  Value: "INT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Int;
/**
 *  Integer type.
 *
 *  Value: "INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Integer;
/**
 *  Java object type.
 *
 *  Value: "JAVA_OBJECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_JavaObject;
/**
 *  Deprecated Long type, use BIGINT type instead.
 *
 *  Value: "LONG"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Long;
/**
 *  Long Nvarchar type.
 *
 *  Value: "LONGNVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Longnvarchar;
/**
 *  Long Varbinary type.
 *
 *  Value: "LONGVARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Longvarbinary;
/**
 *  Long varchar type.
 *
 *  Value: "LONGVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Longvarchar;
/**
 *  Nchar type.
 *
 *  Value: "NCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Nchar;
/**
 *  Nclob type.
 *
 *  Value: "NCLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Nclob;
/**
 *  Null type.
 *
 *  Value: "NULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Null;
/**
 *  Numeric type.
 *
 *  Value: "NUMERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Numeric;
/**
 *  Nvarchar type.
 *
 *  Value: "NVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Nvarchar;
/**
 *  Other type.
 *
 *  Value: "OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Other;
/**
 *  Real type.
 *
 *  Value: "REAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Real;
/**
 *  Ref type.
 *
 *  Value: "REF"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Ref;
/**
 *  Ref_cursor type.
 *
 *  Value: "REF_CURSOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_RefCursor;
/**
 *  Row ID type.
 *
 *  Value: "ROWID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Rowid;
/**
 *  Small int type.
 *
 *  Value: "SMALLINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Smallint;
/**
 *  SQLXML type.
 *
 *  Value: "SQLXML"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Sqlxml;
/**
 *  Deprecated string type, use VARCHAR type instead.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_String;
/**
 *  Struct type.
 *
 *  Value: "STRUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Struct;
/**
 *  Time type.
 *
 *  Value: "TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Time;
/**
 *  Timestamp type.
 *
 *  Value: "TIMESTAMP"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Timestamp;
/**
 *  Timestamp with timezone type.
 *
 *  Value: "TIMESTAMP_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_TimestampWithTimezone;
/**
 *  Time with timezone type.
 *
 *  Value: "TIME_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_TimeWithTimezone;
/**
 *  Tiny int type.
 *
 *  Value: "TINYINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Tinyint;
/**
 *  Deprecated UUID type, use VARCHAR instead.
 *
 *  Value: "UUID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Uuid;
/**
 *  Varbinary type.
 *
 *  Value: "VARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Varbinary;
/**
 *  Varchar type.
 *
 *  Value: "VARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Varchar;

// ----------------------------------------------------------------------------
// GTLRConnectors_ResultMetadata.dataType

/**
 *  Array type.
 *
 *  Value: "ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Array;
/**
 *  Big int type.
 *
 *  Value: "BIGINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Bigint;
/**
 *  Binary type.
 *
 *  Value: "BINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Binary;
/**
 *  Bit type.
 *
 *  Value: "BIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Bit;
/**
 *  Blob type.
 *
 *  Value: "BLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Blob;
/**
 *  Boolean type.
 *
 *  Value: "BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Boolean;
/**
 *  Char type.
 *
 *  Value: "CHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Char;
/**
 *  Clob type.
 *
 *  Value: "CLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Clob;
/**
 *  Datalink type.
 *
 *  Value: "DATALINK"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Datalink;
/**
 *  Datatype unspecified.
 *
 *  Value: "DATA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeUnspecified;
/**
 *  Date type.
 *
 *  Value: "DATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Date;
/**
 *  Deprecated Datetime type.
 *
 *  Value: "DATETIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Datetime;
/**
 *  Decimal type.
 *
 *  Value: "DECIMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Decimal;
/**
 *  Distinct type keyword.
 *
 *  Value: "DISTINCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Distinct;
/**
 *  Double type.
 *
 *  Value: "DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Double;
/**
 *  Float type.
 *
 *  Value: "FLOAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Float;
/**
 *  Deprecated Int type, use INTEGER type instead.
 *
 *  Value: "INT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Int;
/**
 *  Integer type.
 *
 *  Value: "INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Integer;
/**
 *  Java object type.
 *
 *  Value: "JAVA_OBJECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_JavaObject;
/**
 *  Deprecated Long type, use BIGINT type instead.
 *
 *  Value: "LONG"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Long;
/**
 *  Long Nvarchar type.
 *
 *  Value: "LONGNVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Longnvarchar;
/**
 *  Long Varbinary type.
 *
 *  Value: "LONGVARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Longvarbinary;
/**
 *  Long varchar type.
 *
 *  Value: "LONGVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Longvarchar;
/**
 *  Nchar type.
 *
 *  Value: "NCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Nchar;
/**
 *  Nclob type.
 *
 *  Value: "NCLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Nclob;
/**
 *  Null type.
 *
 *  Value: "NULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Null;
/**
 *  Numeric type.
 *
 *  Value: "NUMERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Numeric;
/**
 *  Nvarchar type.
 *
 *  Value: "NVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Nvarchar;
/**
 *  Other type.
 *
 *  Value: "OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Other;
/**
 *  Real type.
 *
 *  Value: "REAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Real;
/**
 *  Ref type.
 *
 *  Value: "REF"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Ref;
/**
 *  Ref_cursor type.
 *
 *  Value: "REF_CURSOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_RefCursor;
/**
 *  Row ID type.
 *
 *  Value: "ROWID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Rowid;
/**
 *  Small int type.
 *
 *  Value: "SMALLINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Smallint;
/**
 *  SQLXML type.
 *
 *  Value: "SQLXML"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Sqlxml;
/**
 *  Deprecated string type, use VARCHAR type instead.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_String;
/**
 *  Struct type.
 *
 *  Value: "STRUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Struct;
/**
 *  Time type.
 *
 *  Value: "TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Time;
/**
 *  Timestamp type.
 *
 *  Value: "TIMESTAMP"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Timestamp;
/**
 *  Timestamp with timezone type.
 *
 *  Value: "TIMESTAMP_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_TimestampWithTimezone;
/**
 *  Time with timezone type.
 *
 *  Value: "TIME_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_TimeWithTimezone;
/**
 *  Tiny int type.
 *
 *  Value: "TINYINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Tinyint;
/**
 *  Deprecated UUID type, use VARCHAR instead.
 *
 *  Value: "UUID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Uuid;
/**
 *  Varbinary type.
 *
 *  Value: "VARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Varbinary;
/**
 *  Varchar type.
 *
 *  Value: "VARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Varchar;

/**
 *  Action message contains metadata information about a single action present
 *  in the external system.
 */
@interface GTLRConnectors_Action : GTLRObject

/** List containing input parameter metadata. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_InputParameter *> *inputParameters;

/** Name of the action. */
@property(nonatomic, copy, nullable) NSString *name;

/** List containing the metadata of result fields. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_ResultMetadata *> *resultMetadata;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRConnectors_Empty : GTLRObject
@end


/**
 *  'Entity row'/ 'Entity' refers to a single row of an entity type.
 */
@interface GTLRConnectors_Entity : GTLRObject

/**
 *  Fields of the entity. The key is name of the field and the value contains
 *  the applicable `google.protobuf.Value` entry for this field.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Entity_Fields *fields;

/**
 *  Output only. Resource name of the Entity. Format:
 *  projects/{project}/locations/{location}/connections/{connection}/entityTypes/{type}/entities/{id}
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Fields of the entity. The key is name of the field and the value contains
 *  the applicable `google.protobuf.Value` entry for this field.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_Entity_Fields : GTLRObject
@end


/**
 *  EntityType message contains metadata information about a single entity type
 *  present in the external system.
 */
@interface GTLRConnectors_EntityType : GTLRObject

/**
 *  List containing metadata information about each field of the entity type.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_Field *> *fields;

/** The name of the entity type. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Request message for ActionService.ExecuteAction
 */
@interface GTLRConnectors_ExecuteActionRequest : GTLRObject

/**
 *  Parameters for executing the action. The parameters can be key/value pairs
 *  or nested structs.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_ExecuteActionRequest_Parameters *parameters;

@end


/**
 *  Parameters for executing the action. The parameters can be key/value pairs
 *  or nested structs.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_ExecuteActionRequest_Parameters : GTLRObject
@end


/**
 *  Response message for ActionService.ExecuteAction
 */
@interface GTLRConnectors_ExecuteActionResponse : GTLRObject

/**
 *  In the case of successful invocation of the specified action, the results
 *  Struct contains values based on the response of the action invoked. 1. If
 *  the action execution produces any entities as a result, they are returned as
 *  an array of Structs with the 'key' being the field name and the 'value'
 *  being the value of that field in each result row. { 'results': [{'key':
 *  'value'}, ...] }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_ExecuteActionResponse_Results_Item *> *results;

@end


/**
 *  GTLRConnectors_ExecuteActionResponse_Results_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_ExecuteActionResponse_Results_Item : GTLRObject
@end


/**
 *  An execute sql query request containing the query and the connection to
 *  execute it on.
 */
@interface GTLRConnectors_ExecuteSqlQueryRequest : GTLRObject

/**
 *  Required. SQL statement passed by clients like Integration Platform, the
 *  query is passed as-is to the driver used for interfacing with external
 *  systems.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Query *query;

@end


/**
 *  A response returned by the connection after executing the sql query.
 */
@interface GTLRConnectors_ExecuteSqlQueryResponse : GTLRObject

/**
 *  In the case of successful execution of the query the response contains
 *  results returned by the external system. For example, the result rows of the
 *  query are contained in the 'results' Struct list - "results": [ { "field1":
 *  "val1", "field2": "val2",.. },.. ] Each Struct row can contain fields any
 *  type of like nested Structs or lists.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_ExecuteSqlQueryResponse_Results_Item *> *results;

@end


/**
 *  GTLRConnectors_ExecuteSqlQueryResponse_Results_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_ExecuteSqlQueryResponse_Results_Item : GTLRObject
@end


/**
 *  Message contains EntityType's Field metadata.
 */
@interface GTLRConnectors_Field : GTLRObject

/**
 *  The following map contains fields that are not explicitly mentioned
 *  above,this give connectors the flexibility to add new metadata fields.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Field_AdditionalDetails *additionalDetails;

/**
 *  The data type of the Field.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_Field_DataType_Array Array type. (Value: "ARRAY")
 *    @arg @c kGTLRConnectors_Field_DataType_Bigint Big int type. (Value:
 *        "BIGINT")
 *    @arg @c kGTLRConnectors_Field_DataType_Binary Binary type. (Value:
 *        "BINARY")
 *    @arg @c kGTLRConnectors_Field_DataType_Bit Bit type. (Value: "BIT")
 *    @arg @c kGTLRConnectors_Field_DataType_Blob Blob type. (Value: "BLOB")
 *    @arg @c kGTLRConnectors_Field_DataType_Boolean Boolean type. (Value:
 *        "BOOLEAN")
 *    @arg @c kGTLRConnectors_Field_DataType_Char Char type. (Value: "CHAR")
 *    @arg @c kGTLRConnectors_Field_DataType_Clob Clob type. (Value: "CLOB")
 *    @arg @c kGTLRConnectors_Field_DataType_Datalink Datalink type. (Value:
 *        "DATALINK")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeUnspecified Datatype
 *        unspecified. (Value: "DATA_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_Field_DataType_Date Date type. (Value: "DATE")
 *    @arg @c kGTLRConnectors_Field_DataType_Datetime Deprecated Datetime type.
 *        (Value: "DATETIME")
 *    @arg @c kGTLRConnectors_Field_DataType_Decimal Decimal type. (Value:
 *        "DECIMAL")
 *    @arg @c kGTLRConnectors_Field_DataType_Distinct Distinct type keyword.
 *        (Value: "DISTINCT")
 *    @arg @c kGTLRConnectors_Field_DataType_Double Double type. (Value:
 *        "DOUBLE")
 *    @arg @c kGTLRConnectors_Field_DataType_Float Float type. (Value: "FLOAT")
 *    @arg @c kGTLRConnectors_Field_DataType_Int Deprecated Int type, use
 *        INTEGER type instead. (Value: "INT")
 *    @arg @c kGTLRConnectors_Field_DataType_Integer Integer type. (Value:
 *        "INTEGER")
 *    @arg @c kGTLRConnectors_Field_DataType_JavaObject Java object type.
 *        (Value: "JAVA_OBJECT")
 *    @arg @c kGTLRConnectors_Field_DataType_Long Deprecated Long type, use
 *        BIGINT type instead. (Value: "LONG")
 *    @arg @c kGTLRConnectors_Field_DataType_Longnvarchar Long Nvarchar type.
 *        (Value: "LONGNVARCHAR")
 *    @arg @c kGTLRConnectors_Field_DataType_Longvarbinary Long Varbinary type.
 *        (Value: "LONGVARBINARY")
 *    @arg @c kGTLRConnectors_Field_DataType_Longvarchar Long varchar type.
 *        (Value: "LONGVARCHAR")
 *    @arg @c kGTLRConnectors_Field_DataType_Nchar Nchar type. (Value: "NCHAR")
 *    @arg @c kGTLRConnectors_Field_DataType_Nclob Nclob type. (Value: "NCLOB")
 *    @arg @c kGTLRConnectors_Field_DataType_Null Null type. (Value: "NULL")
 *    @arg @c kGTLRConnectors_Field_DataType_Numeric Numeric type. (Value:
 *        "NUMERIC")
 *    @arg @c kGTLRConnectors_Field_DataType_Nvarchar Nvarchar type. (Value:
 *        "NVARCHAR")
 *    @arg @c kGTLRConnectors_Field_DataType_Other Other type. (Value: "OTHER")
 *    @arg @c kGTLRConnectors_Field_DataType_Real Real type. (Value: "REAL")
 *    @arg @c kGTLRConnectors_Field_DataType_Ref Ref type. (Value: "REF")
 *    @arg @c kGTLRConnectors_Field_DataType_RefCursor Ref_cursor type. (Value:
 *        "REF_CURSOR")
 *    @arg @c kGTLRConnectors_Field_DataType_Rowid Row ID type. (Value: "ROWID")
 *    @arg @c kGTLRConnectors_Field_DataType_Smallint Small int type. (Value:
 *        "SMALLINT")
 *    @arg @c kGTLRConnectors_Field_DataType_Sqlxml SQLXML type. (Value:
 *        "SQLXML")
 *    @arg @c kGTLRConnectors_Field_DataType_String Deprecated string type, use
 *        VARCHAR type instead. (Value: "STRING")
 *    @arg @c kGTLRConnectors_Field_DataType_Struct Struct type. (Value:
 *        "STRUCT")
 *    @arg @c kGTLRConnectors_Field_DataType_Time Time type. (Value: "TIME")
 *    @arg @c kGTLRConnectors_Field_DataType_Timestamp Timestamp type. (Value:
 *        "TIMESTAMP")
 *    @arg @c kGTLRConnectors_Field_DataType_TimestampWithTimezone Timestamp
 *        with timezone type. (Value: "TIMESTAMP_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_Field_DataType_TimeWithTimezone Time with timezone
 *        type. (Value: "TIME_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_Field_DataType_Tinyint Tiny int type. (Value:
 *        "TINYINT")
 *    @arg @c kGTLRConnectors_Field_DataType_Uuid Deprecated UUID type, use
 *        VARCHAR instead. (Value: "UUID")
 *    @arg @c kGTLRConnectors_Field_DataType_Varbinary Varbinary type. (Value:
 *        "VARBINARY")
 *    @arg @c kGTLRConnectors_Field_DataType_Varchar Varchar type. (Value:
 *        "VARCHAR")
 */
@property(nonatomic, copy, nullable) NSString *dataType;

/**
 *  The following field specifies the default value of the Field provided by the
 *  external system if a value is not provided.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id defaultValue;

/**
 *  A brief description of the Field.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The following boolean field specifies if the current Field acts as a primary
 *  key or id if the parent is of type entity.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *key;

/** Name of the Field. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Specifies whether a null value is allowed.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nullable;

/**
 *  Reference captures the association between two different entity types. Value
 *  links to the reference of another entity type.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Reference *reference;

@end


/**
 *  The following map contains fields that are not explicitly mentioned
 *  above,this give connectors the flexibility to add new metadata fields.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_Field_AdditionalDetails : GTLRObject
@end


/**
 *  Input Parameter message contains metadata about the parameters required for
 *  executing an Action.
 */
@interface GTLRConnectors_InputParameter : GTLRObject

/**
 *  The data type of the Parameter
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Array Array type. (Value:
 *        "ARRAY")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Bigint Big int type.
 *        (Value: "BIGINT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Binary Binary type.
 *        (Value: "BINARY")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Bit Bit type. (Value:
 *        "BIT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Blob Blob type. (Value:
 *        "BLOB")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Boolean Boolean type.
 *        (Value: "BOOLEAN")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Char Char type. (Value:
 *        "CHAR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Clob Clob type. (Value:
 *        "CLOB")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Datalink Datalink type.
 *        (Value: "DATALINK")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeUnspecified
 *        Datatype unspecified. (Value: "DATA_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Date Date type. (Value:
 *        "DATE")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Datetime Deprecated
 *        Datetime type. (Value: "DATETIME")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Decimal Decimal type.
 *        (Value: "DECIMAL")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Distinct Distinct type
 *        keyword. (Value: "DISTINCT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Double Double type.
 *        (Value: "DOUBLE")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Float Float type. (Value:
 *        "FLOAT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Int Deprecated Int type,
 *        use INTEGER type instead. (Value: "INT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Integer Integer type.
 *        (Value: "INTEGER")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_JavaObject Java object
 *        type. (Value: "JAVA_OBJECT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Long Deprecated Long type,
 *        use BIGINT type instead. (Value: "LONG")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Longnvarchar Long Nvarchar
 *        type. (Value: "LONGNVARCHAR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Longvarbinary Long
 *        Varbinary type. (Value: "LONGVARBINARY")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Longvarchar Long varchar
 *        type. (Value: "LONGVARCHAR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Nchar Nchar type. (Value:
 *        "NCHAR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Nclob Nclob type. (Value:
 *        "NCLOB")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Null Null type. (Value:
 *        "NULL")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Numeric Numeric type.
 *        (Value: "NUMERIC")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Nvarchar Nvarchar type.
 *        (Value: "NVARCHAR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Other Other type. (Value:
 *        "OTHER")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Real Real type. (Value:
 *        "REAL")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Ref Ref type. (Value:
 *        "REF")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_RefCursor Ref_cursor type.
 *        (Value: "REF_CURSOR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Rowid Row ID type. (Value:
 *        "ROWID")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Smallint Small int type.
 *        (Value: "SMALLINT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Sqlxml SQLXML type.
 *        (Value: "SQLXML")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_String Deprecated string
 *        type, use VARCHAR type instead. (Value: "STRING")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Struct Struct type.
 *        (Value: "STRUCT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Time Time type. (Value:
 *        "TIME")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Timestamp Timestamp type.
 *        (Value: "TIMESTAMP")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_TimestampWithTimezone
 *        Timestamp with timezone type. (Value: "TIMESTAMP_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_TimeWithTimezone Time with
 *        timezone type. (Value: "TIME_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Tinyint Tiny int type.
 *        (Value: "TINYINT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Uuid Deprecated UUID type,
 *        use VARCHAR instead. (Value: "UUID")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Varbinary Varbinary type.
 *        (Value: "VARBINARY")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Varchar Varchar type.
 *        (Value: "VARCHAR")
 */
@property(nonatomic, copy, nullable) NSString *dataType;

/**
 *  The following field specifies the default value of the Parameter provided by
 *  the external system if a value is not provided.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id defaultValue;

/**
 *  A brief description of the Parameter.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Name of the Parameter. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Specifies whether a null value is allowed.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nullable;

@end


/**
 *  Response message for ActionService.ListActions
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "actions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRConnectors_ListActionsResponse : GTLRCollectionObject

/**
 *  List of action metadata.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_Action *> *actions;

/** Next page token if more actions available. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of actions which contain unsupported Datatypes. Check datatype.proto
 *  for more information.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unsupportedActionNames;

@end


/**
 *  Response message for EntityService.ListEntities
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "entities" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRConnectors_ListEntitiesResponse : GTLRCollectionObject

/**
 *  List containing entity rows.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_Entity *> *entities;

/** Next page token if more records are available. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for EntityService.ListEntityTypes
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "types" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRConnectors_ListEntityTypesResponse : GTLRCollectionObject

/** Next page token if more entity types available. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of metadata related to all entity types.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_EntityType *> *types;

/**
 *  List of entity type names which contain unsupported Datatypes. Check
 *  datatype.proto for more information.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unsupportedTypeNames;

@end


/**
 *  A wrapper around the SQL query statement. This is needed so that the JSON
 *  representation of ExecuteSqlQueryRequest has the following format:
 *  `{"query":"select *"}`.
 */
@interface GTLRConnectors_Query : GTLRObject

/** Required. Sql query to execute. */
@property(nonatomic, copy, nullable) NSString *query;

@end


/**
 *  GTLRConnectors_Reference
 */
@interface GTLRConnectors_Reference : GTLRObject

/** Name of the reference field. */
@property(nonatomic, copy, nullable) NSString *name;

/** Name of reference entity type. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Result Metadata message contains metadata about the result returned after
 *  executing an Action.
 */
@interface GTLRConnectors_ResultMetadata : GTLRObject

/**
 *  The data type of the metadata field
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Array Array type. (Value:
 *        "ARRAY")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Bigint Big int type.
 *        (Value: "BIGINT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Binary Binary type.
 *        (Value: "BINARY")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Bit Bit type. (Value:
 *        "BIT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Blob Blob type. (Value:
 *        "BLOB")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Boolean Boolean type.
 *        (Value: "BOOLEAN")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Char Char type. (Value:
 *        "CHAR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Clob Clob type. (Value:
 *        "CLOB")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Datalink Datalink type.
 *        (Value: "DATALINK")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeUnspecified
 *        Datatype unspecified. (Value: "DATA_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Date Date type. (Value:
 *        "DATE")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Datetime Deprecated
 *        Datetime type. (Value: "DATETIME")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Decimal Decimal type.
 *        (Value: "DECIMAL")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Distinct Distinct type
 *        keyword. (Value: "DISTINCT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Double Double type.
 *        (Value: "DOUBLE")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Float Float type. (Value:
 *        "FLOAT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Int Deprecated Int type,
 *        use INTEGER type instead. (Value: "INT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Integer Integer type.
 *        (Value: "INTEGER")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_JavaObject Java object
 *        type. (Value: "JAVA_OBJECT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Long Deprecated Long type,
 *        use BIGINT type instead. (Value: "LONG")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Longnvarchar Long Nvarchar
 *        type. (Value: "LONGNVARCHAR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Longvarbinary Long
 *        Varbinary type. (Value: "LONGVARBINARY")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Longvarchar Long varchar
 *        type. (Value: "LONGVARCHAR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Nchar Nchar type. (Value:
 *        "NCHAR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Nclob Nclob type. (Value:
 *        "NCLOB")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Null Null type. (Value:
 *        "NULL")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Numeric Numeric type.
 *        (Value: "NUMERIC")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Nvarchar Nvarchar type.
 *        (Value: "NVARCHAR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Other Other type. (Value:
 *        "OTHER")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Real Real type. (Value:
 *        "REAL")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Ref Ref type. (Value:
 *        "REF")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_RefCursor Ref_cursor type.
 *        (Value: "REF_CURSOR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Rowid Row ID type. (Value:
 *        "ROWID")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Smallint Small int type.
 *        (Value: "SMALLINT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Sqlxml SQLXML type.
 *        (Value: "SQLXML")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_String Deprecated string
 *        type, use VARCHAR type instead. (Value: "STRING")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Struct Struct type.
 *        (Value: "STRUCT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Time Time type. (Value:
 *        "TIME")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Timestamp Timestamp type.
 *        (Value: "TIMESTAMP")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_TimestampWithTimezone
 *        Timestamp with timezone type. (Value: "TIMESTAMP_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_TimeWithTimezone Time with
 *        timezone type. (Value: "TIME_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Tinyint Tiny int type.
 *        (Value: "TINYINT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Uuid Deprecated UUID type,
 *        use VARCHAR instead. (Value: "UUID")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Varbinary Varbinary type.
 *        (Value: "VARBINARY")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Varchar Varchar type.
 *        (Value: "VARCHAR")
 */
@property(nonatomic, copy, nullable) NSString *dataType;

/**
 *  A brief description of the metadata field.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Name of the metadata field. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Response message for EntityService.UpdateEntitiesWithConditions
 */
@interface GTLRConnectors_UpdateEntitiesWithConditionsResponse : GTLRObject

/** Response returned by the external system. */
@property(nonatomic, strong, nullable) GTLRConnectors_UpdateEntitiesWithConditionsResponse_Response *response;

@end


/**
 *  Response returned by the external system.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_UpdateEntitiesWithConditionsResponse_Response : GTLRObject
@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
