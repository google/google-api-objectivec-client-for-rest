// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Connectors API (connectors/v2)
// Description:
//   Enables users to create and manage connections to Google Cloud services and
//   third-party business applications using the Connectors interface.
// Documentation:
//   https://cloud.google.com/apigee/docs/api-platform/connectors/about-connectors

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRConnectors_AccessCredentials;
@class GTLRConnectors_Action;
@class GTLRConnectors_DailyCycle;
@class GTLRConnectors_Date;
@class GTLRConnectors_DenyMaintenancePeriod;
@class GTLRConnectors_Entity;
@class GTLRConnectors_Entity_Fields;
@class GTLRConnectors_EntityType;
@class GTLRConnectors_ExecuteActionRequest_Parameters;
@class GTLRConnectors_ExecuteActionResponse_Results_Item;
@class GTLRConnectors_ExecuteSqlQueryResponse_Results_Item;
@class GTLRConnectors_Field;
@class GTLRConnectors_Field_AdditionalDetails;
@class GTLRConnectors_InputParameter;
@class GTLRConnectors_InputParameter_AdditionalDetails;
@class GTLRConnectors_Instance_Labels;
@class GTLRConnectors_Instance_MaintenancePolicyNames;
@class GTLRConnectors_Instance_MaintenanceSchedules;
@class GTLRConnectors_Instance_NotificationParameters;
@class GTLRConnectors_Instance_ProducerMetadata;
@class GTLRConnectors_Instance_SoftwareVersions;
@class GTLRConnectors_JsonSchema;
@class GTLRConnectors_JsonSchema_AdditionalDetails;
@class GTLRConnectors_JsonSchema_Properties;
@class GTLRConnectors_MaintenancePolicy;
@class GTLRConnectors_MaintenancePolicy_Labels;
@class GTLRConnectors_MaintenanceSchedule;
@class GTLRConnectors_MaintenanceSettings;
@class GTLRConnectors_MaintenanceSettings_MaintenancePolicies;
@class GTLRConnectors_MaintenanceWindow;
@class GTLRConnectors_NodeSloMetadata;
@class GTLRConnectors_NotificationParameter;
@class GTLRConnectors_PerSliSloEligibility;
@class GTLRConnectors_PerSliSloEligibility_Eligibilities;
@class GTLRConnectors_ProvisionedResource;
@class GTLRConnectors_Query;
@class GTLRConnectors_QueryParameter;
@class GTLRConnectors_Reference;
@class GTLRConnectors_ResultMetadata;
@class GTLRConnectors_Schedule;
@class GTLRConnectors_SloEligibility;
@class GTLRConnectors_SloMetadata;
@class GTLRConnectors_TimeOfDay;
@class GTLRConnectors_UpdateEntitiesWithConditionsResponse_Response;
@class GTLRConnectors_UpdatePolicy;
@class GTLRConnectors_WeeklyCycle;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRConnectors_CheckStatusResponse.state

/**
 *  The connector is active and ready to process runtime requests. This can also
 *  mean that from the connector's perspective, the connector is not in an error
 *  state and should be able to process runtime requests successfully.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_CheckStatusResponse_State_Active;
/**
 *  This is a more specific error state that the developers can opt to use when
 *  the connector is facing auth-related errors caused by auth configuration not
 *  present, invalid auth credentials, etc.
 *
 *  Value: "AUTH_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_CheckStatusResponse_State_AuthError;
/**
 *  The connector is in an error state and cannot process runtime requests. An
 *  example reason would be that the connection container has some network
 *  issues that prevent outbound requests from being sent.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_CheckStatusResponse_State_Error;
/**
 *  State unspecified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_CheckStatusResponse_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRConnectors_Field.dataType

/**
 *  Array type.
 *
 *  Value: "ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Array;
/**
 *  Big int type.
 *
 *  Value: "BIGINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Bigint;
/**
 *  Binary type.
 *
 *  Value: "BINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Binary;
/**
 *  Bit type.
 *
 *  Value: "BIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Bit;
/**
 *  Blob type.
 *
 *  Value: "BLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Blob;
/**
 *  Boolean type.
 *
 *  Value: "BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Boolean;
/**
 *  Char type.
 *
 *  Value: "CHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Char;
/**
 *  Clob type.
 *
 *  Value: "CLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Clob;
/**
 *  Datalink type.
 *
 *  Value: "DATALINK"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Datalink;
/**
 *  Datatype unspecified.
 *
 *  Value: "DATA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_DataTypeUnspecified;
/**
 *  Date type.
 *
 *  Value: "DATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Date;
/**
 *  Deprecated Datetime type.
 *
 *  Value: "DATETIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Datetime GTLR_DEPRECATED;
/**
 *  Decimal type.
 *
 *  Value: "DECIMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Decimal;
/**
 *  Distinct type keyword.
 *
 *  Value: "DISTINCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Distinct;
/**
 *  Double type.
 *
 *  Value: "DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Double;
/**
 *  Float type.
 *
 *  Value: "FLOAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Float;
/**
 *  Deprecated Int type, use INTEGER type instead.
 *
 *  Value: "INT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Int GTLR_DEPRECATED;
/**
 *  Integer type.
 *
 *  Value: "INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Integer;
/**
 *  Java object type.
 *
 *  Value: "JAVA_OBJECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_JavaObject;
/**
 *  Deprecated Long type, use BIGINT type instead.
 *
 *  Value: "LONG"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Long GTLR_DEPRECATED;
/**
 *  Long Nvarchar type.
 *
 *  Value: "LONGNVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Longnvarchar;
/**
 *  Long Varbinary type.
 *
 *  Value: "LONGVARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Longvarbinary;
/**
 *  Long varchar type.
 *
 *  Value: "LONGVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Longvarchar;
/**
 *  Nchar type.
 *
 *  Value: "NCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Nchar;
/**
 *  Nclob type.
 *
 *  Value: "NCLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Nclob;
/**
 *  Null type.
 *
 *  Value: "NULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Null;
/**
 *  Numeric type.
 *
 *  Value: "NUMERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Numeric;
/**
 *  Nvarchar type.
 *
 *  Value: "NVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Nvarchar;
/**
 *  Other type.
 *
 *  Value: "OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Other;
/**
 *  Real type.
 *
 *  Value: "REAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Real;
/**
 *  Ref type.
 *
 *  Value: "REF"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Ref;
/**
 *  Ref_cursor type.
 *
 *  Value: "REF_CURSOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_RefCursor;
/**
 *  Row ID type.
 *
 *  Value: "ROWID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Rowid;
/**
 *  Small int type.
 *
 *  Value: "SMALLINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Smallint;
/**
 *  SQLXML type.
 *
 *  Value: "SQLXML"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Sqlxml;
/**
 *  Deprecated string type, use VARCHAR type instead.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_String GTLR_DEPRECATED;
/**
 *  Struct type.
 *
 *  Value: "STRUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Struct;
/**
 *  Time type.
 *
 *  Value: "TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Time;
/**
 *  Timestamp type.
 *
 *  Value: "TIMESTAMP"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Timestamp;
/**
 *  Timestamp with timezone type.
 *
 *  Value: "TIMESTAMP_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_TimestampWithTimezone;
/**
 *  Time with timezone type.
 *
 *  Value: "TIME_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_TimeWithTimezone;
/**
 *  Tiny int type.
 *
 *  Value: "TINYINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Tinyint;
/**
 *  Deprecated UUID type, use VARCHAR instead.
 *
 *  Value: "UUID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Uuid GTLR_DEPRECATED;
/**
 *  Varbinary type.
 *
 *  Value: "VARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Varbinary;
/**
 *  Varchar type.
 *
 *  Value: "VARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Field_DataType_Varchar;

// ----------------------------------------------------------------------------
// GTLRConnectors_InputParameter.dataType

/**
 *  Array type.
 *
 *  Value: "ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Array;
/**
 *  Big int type.
 *
 *  Value: "BIGINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Bigint;
/**
 *  Binary type.
 *
 *  Value: "BINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Binary;
/**
 *  Bit type.
 *
 *  Value: "BIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Bit;
/**
 *  Blob type.
 *
 *  Value: "BLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Blob;
/**
 *  Boolean type.
 *
 *  Value: "BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Boolean;
/**
 *  Char type.
 *
 *  Value: "CHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Char;
/**
 *  Clob type.
 *
 *  Value: "CLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Clob;
/**
 *  Datalink type.
 *
 *  Value: "DATALINK"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Datalink;
/**
 *  Datatype unspecified.
 *
 *  Value: "DATA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_DataTypeUnspecified;
/**
 *  Date type.
 *
 *  Value: "DATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Date;
/**
 *  Deprecated Datetime type.
 *
 *  Value: "DATETIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Datetime GTLR_DEPRECATED;
/**
 *  Decimal type.
 *
 *  Value: "DECIMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Decimal;
/**
 *  Distinct type keyword.
 *
 *  Value: "DISTINCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Distinct;
/**
 *  Double type.
 *
 *  Value: "DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Double;
/**
 *  Float type.
 *
 *  Value: "FLOAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Float;
/**
 *  Deprecated Int type, use INTEGER type instead.
 *
 *  Value: "INT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Int GTLR_DEPRECATED;
/**
 *  Integer type.
 *
 *  Value: "INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Integer;
/**
 *  Java object type.
 *
 *  Value: "JAVA_OBJECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_JavaObject;
/**
 *  Deprecated Long type, use BIGINT type instead.
 *
 *  Value: "LONG"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Long GTLR_DEPRECATED;
/**
 *  Long Nvarchar type.
 *
 *  Value: "LONGNVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Longnvarchar;
/**
 *  Long Varbinary type.
 *
 *  Value: "LONGVARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Longvarbinary;
/**
 *  Long varchar type.
 *
 *  Value: "LONGVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Longvarchar;
/**
 *  Nchar type.
 *
 *  Value: "NCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Nchar;
/**
 *  Nclob type.
 *
 *  Value: "NCLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Nclob;
/**
 *  Null type.
 *
 *  Value: "NULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Null;
/**
 *  Numeric type.
 *
 *  Value: "NUMERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Numeric;
/**
 *  Nvarchar type.
 *
 *  Value: "NVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Nvarchar;
/**
 *  Other type.
 *
 *  Value: "OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Other;
/**
 *  Real type.
 *
 *  Value: "REAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Real;
/**
 *  Ref type.
 *
 *  Value: "REF"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Ref;
/**
 *  Ref_cursor type.
 *
 *  Value: "REF_CURSOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_RefCursor;
/**
 *  Row ID type.
 *
 *  Value: "ROWID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Rowid;
/**
 *  Small int type.
 *
 *  Value: "SMALLINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Smallint;
/**
 *  SQLXML type.
 *
 *  Value: "SQLXML"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Sqlxml;
/**
 *  Deprecated string type, use VARCHAR type instead.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_String GTLR_DEPRECATED;
/**
 *  Struct type.
 *
 *  Value: "STRUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Struct;
/**
 *  Time type.
 *
 *  Value: "TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Time;
/**
 *  Timestamp type.
 *
 *  Value: "TIMESTAMP"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Timestamp;
/**
 *  Timestamp with timezone type.
 *
 *  Value: "TIMESTAMP_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_TimestampWithTimezone;
/**
 *  Time with timezone type.
 *
 *  Value: "TIME_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_TimeWithTimezone;
/**
 *  Tiny int type.
 *
 *  Value: "TINYINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Tinyint;
/**
 *  Deprecated UUID type, use VARCHAR instead.
 *
 *  Value: "UUID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Uuid GTLR_DEPRECATED;
/**
 *  Varbinary type.
 *
 *  Value: "VARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Varbinary;
/**
 *  Varchar type.
 *
 *  Value: "VARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_InputParameter_DataType_Varchar;

// ----------------------------------------------------------------------------
// GTLRConnectors_Instance.state

/**
 *  Instance is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Instance_State_Creating;
/**
 *  Instance is being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Instance_State_Deleting;
/**
 *  Instance encountered an error and is in indeterministic state.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Instance_State_Error;
/**
 *  Instance has been created and is ready to use.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Instance_State_Ready;
/**
 *  Instance is unheathy and under repair.
 *
 *  Value: "REPAIRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Instance_State_Repairing;
/**
 *  Unspecified state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Instance_State_StateUnspecified;
/**
 *  Instance is being updated.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Instance_State_Updating;

// ----------------------------------------------------------------------------
// GTLRConnectors_JsonSchema.jdbcType

/**
 *  Array type.
 *
 *  Value: "ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Array;
/**
 *  Big int type.
 *
 *  Value: "BIGINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Bigint;
/**
 *  Binary type.
 *
 *  Value: "BINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Binary;
/**
 *  Bit type.
 *
 *  Value: "BIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Bit;
/**
 *  Blob type.
 *
 *  Value: "BLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Blob;
/**
 *  Boolean type.
 *
 *  Value: "BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Boolean;
/**
 *  Char type.
 *
 *  Value: "CHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Char;
/**
 *  Clob type.
 *
 *  Value: "CLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Clob;
/**
 *  Datalink type.
 *
 *  Value: "DATALINK"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Datalink;
/**
 *  Datatype unspecified.
 *
 *  Value: "DATA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_DataTypeUnspecified;
/**
 *  Date type.
 *
 *  Value: "DATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Date;
/**
 *  Deprecated Datetime type.
 *
 *  Value: "DATETIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Datetime GTLR_DEPRECATED;
/**
 *  Decimal type.
 *
 *  Value: "DECIMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Decimal;
/**
 *  Distinct type keyword.
 *
 *  Value: "DISTINCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Distinct;
/**
 *  Double type.
 *
 *  Value: "DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Double;
/**
 *  Float type.
 *
 *  Value: "FLOAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Float;
/**
 *  Deprecated Int type, use INTEGER type instead.
 *
 *  Value: "INT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Int GTLR_DEPRECATED;
/**
 *  Integer type.
 *
 *  Value: "INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Integer;
/**
 *  Java object type.
 *
 *  Value: "JAVA_OBJECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_JavaObject;
/**
 *  Deprecated Long type, use BIGINT type instead.
 *
 *  Value: "LONG"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Long GTLR_DEPRECATED;
/**
 *  Long Nvarchar type.
 *
 *  Value: "LONGNVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Longnvarchar;
/**
 *  Long Varbinary type.
 *
 *  Value: "LONGVARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Longvarbinary;
/**
 *  Long varchar type.
 *
 *  Value: "LONGVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Longvarchar;
/**
 *  Nchar type.
 *
 *  Value: "NCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Nchar;
/**
 *  Nclob type.
 *
 *  Value: "NCLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Nclob;
/**
 *  Null type.
 *
 *  Value: "NULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Null;
/**
 *  Numeric type.
 *
 *  Value: "NUMERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Numeric;
/**
 *  Nvarchar type.
 *
 *  Value: "NVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Nvarchar;
/**
 *  Other type.
 *
 *  Value: "OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Other;
/**
 *  Real type.
 *
 *  Value: "REAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Real;
/**
 *  Ref type.
 *
 *  Value: "REF"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Ref;
/**
 *  Ref_cursor type.
 *
 *  Value: "REF_CURSOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_RefCursor;
/**
 *  Row ID type.
 *
 *  Value: "ROWID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Rowid;
/**
 *  Small int type.
 *
 *  Value: "SMALLINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Smallint;
/**
 *  SQLXML type.
 *
 *  Value: "SQLXML"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Sqlxml;
/**
 *  Deprecated string type, use VARCHAR type instead.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_String GTLR_DEPRECATED;
/**
 *  Struct type.
 *
 *  Value: "STRUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Struct;
/**
 *  Time type.
 *
 *  Value: "TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Time;
/**
 *  Timestamp type.
 *
 *  Value: "TIMESTAMP"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Timestamp;
/**
 *  Timestamp with timezone type.
 *
 *  Value: "TIMESTAMP_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_TimestampWithTimezone;
/**
 *  Time with timezone type.
 *
 *  Value: "TIME_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_TimeWithTimezone;
/**
 *  Tiny int type.
 *
 *  Value: "TINYINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Tinyint;
/**
 *  Deprecated UUID type, use VARCHAR instead.
 *
 *  Value: "UUID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Uuid GTLR_DEPRECATED;
/**
 *  Varbinary type.
 *
 *  Value: "VARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Varbinary;
/**
 *  Varchar type.
 *
 *  Value: "VARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_JsonSchema_JdbcType_Varchar;

// ----------------------------------------------------------------------------
// GTLRConnectors_MaintenancePolicy.state

/**
 *  Resource is being deleted. It can no longer be attached to instances.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_MaintenancePolicy_State_Deleting;
/**
 *  Resource is ready to be used.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_MaintenancePolicy_State_Ready;
/**
 *  Unspecified state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_MaintenancePolicy_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRConnectors_QueryParameter.dataType

/**
 *  Array type.
 *
 *  Value: "ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Array;
/**
 *  Big int type.
 *
 *  Value: "BIGINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Bigint;
/**
 *  Binary type.
 *
 *  Value: "BINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Binary;
/**
 *  Bit type.
 *
 *  Value: "BIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Bit;
/**
 *  Blob type.
 *
 *  Value: "BLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Blob;
/**
 *  Boolean type.
 *
 *  Value: "BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Boolean;
/**
 *  Char type.
 *
 *  Value: "CHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Char;
/**
 *  Clob type.
 *
 *  Value: "CLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Clob;
/**
 *  Datalink type.
 *
 *  Value: "DATALINK"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Datalink;
/**
 *  Datatype unspecified.
 *
 *  Value: "DATA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_DataTypeUnspecified;
/**
 *  Date type.
 *
 *  Value: "DATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Date;
/**
 *  Deprecated Datetime type.
 *
 *  Value: "DATETIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Datetime GTLR_DEPRECATED;
/**
 *  Decimal type.
 *
 *  Value: "DECIMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Decimal;
/**
 *  Distinct type keyword.
 *
 *  Value: "DISTINCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Distinct;
/**
 *  Double type.
 *
 *  Value: "DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Double;
/**
 *  Float type.
 *
 *  Value: "FLOAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Float;
/**
 *  Deprecated Int type, use INTEGER type instead.
 *
 *  Value: "INT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Int GTLR_DEPRECATED;
/**
 *  Integer type.
 *
 *  Value: "INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Integer;
/**
 *  Java object type.
 *
 *  Value: "JAVA_OBJECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_JavaObject;
/**
 *  Deprecated Long type, use BIGINT type instead.
 *
 *  Value: "LONG"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Long GTLR_DEPRECATED;
/**
 *  Long Nvarchar type.
 *
 *  Value: "LONGNVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Longnvarchar;
/**
 *  Long Varbinary type.
 *
 *  Value: "LONGVARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Longvarbinary;
/**
 *  Long varchar type.
 *
 *  Value: "LONGVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Longvarchar;
/**
 *  Nchar type.
 *
 *  Value: "NCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Nchar;
/**
 *  Nclob type.
 *
 *  Value: "NCLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Nclob;
/**
 *  Null type.
 *
 *  Value: "NULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Null;
/**
 *  Numeric type.
 *
 *  Value: "NUMERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Numeric;
/**
 *  Nvarchar type.
 *
 *  Value: "NVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Nvarchar;
/**
 *  Other type.
 *
 *  Value: "OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Other;
/**
 *  Real type.
 *
 *  Value: "REAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Real;
/**
 *  Ref type.
 *
 *  Value: "REF"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Ref;
/**
 *  Ref_cursor type.
 *
 *  Value: "REF_CURSOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_RefCursor;
/**
 *  Row ID type.
 *
 *  Value: "ROWID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Rowid;
/**
 *  Small int type.
 *
 *  Value: "SMALLINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Smallint;
/**
 *  SQLXML type.
 *
 *  Value: "SQLXML"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Sqlxml;
/**
 *  Deprecated string type, use VARCHAR type instead.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_String GTLR_DEPRECATED;
/**
 *  Struct type.
 *
 *  Value: "STRUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Struct;
/**
 *  Time type.
 *
 *  Value: "TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Time;
/**
 *  Timestamp type.
 *
 *  Value: "TIMESTAMP"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Timestamp;
/**
 *  Timestamp with timezone type.
 *
 *  Value: "TIMESTAMP_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_TimestampWithTimezone;
/**
 *  Time with timezone type.
 *
 *  Value: "TIME_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_TimeWithTimezone;
/**
 *  Tiny int type.
 *
 *  Value: "TINYINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Tinyint;
/**
 *  Deprecated UUID type, use VARCHAR instead.
 *
 *  Value: "UUID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Uuid GTLR_DEPRECATED;
/**
 *  Varbinary type.
 *
 *  Value: "VARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Varbinary;
/**
 *  Varchar type.
 *
 *  Value: "VARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_QueryParameter_DataType_Varchar;

// ----------------------------------------------------------------------------
// GTLRConnectors_ResultMetadata.dataType

/**
 *  Array type.
 *
 *  Value: "ARRAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Array;
/**
 *  Big int type.
 *
 *  Value: "BIGINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Bigint;
/**
 *  Binary type.
 *
 *  Value: "BINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Binary;
/**
 *  Bit type.
 *
 *  Value: "BIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Bit;
/**
 *  Blob type.
 *
 *  Value: "BLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Blob;
/**
 *  Boolean type.
 *
 *  Value: "BOOLEAN"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Boolean;
/**
 *  Char type.
 *
 *  Value: "CHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Char;
/**
 *  Clob type.
 *
 *  Value: "CLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Clob;
/**
 *  Datalink type.
 *
 *  Value: "DATALINK"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Datalink;
/**
 *  Datatype unspecified.
 *
 *  Value: "DATA_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_DataTypeUnspecified;
/**
 *  Date type.
 *
 *  Value: "DATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Date;
/**
 *  Deprecated Datetime type.
 *
 *  Value: "DATETIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Datetime GTLR_DEPRECATED;
/**
 *  Decimal type.
 *
 *  Value: "DECIMAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Decimal;
/**
 *  Distinct type keyword.
 *
 *  Value: "DISTINCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Distinct;
/**
 *  Double type.
 *
 *  Value: "DOUBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Double;
/**
 *  Float type.
 *
 *  Value: "FLOAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Float;
/**
 *  Deprecated Int type, use INTEGER type instead.
 *
 *  Value: "INT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Int GTLR_DEPRECATED;
/**
 *  Integer type.
 *
 *  Value: "INTEGER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Integer;
/**
 *  Java object type.
 *
 *  Value: "JAVA_OBJECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_JavaObject;
/**
 *  Deprecated Long type, use BIGINT type instead.
 *
 *  Value: "LONG"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Long GTLR_DEPRECATED;
/**
 *  Long Nvarchar type.
 *
 *  Value: "LONGNVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Longnvarchar;
/**
 *  Long Varbinary type.
 *
 *  Value: "LONGVARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Longvarbinary;
/**
 *  Long varchar type.
 *
 *  Value: "LONGVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Longvarchar;
/**
 *  Nchar type.
 *
 *  Value: "NCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Nchar;
/**
 *  Nclob type.
 *
 *  Value: "NCLOB"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Nclob;
/**
 *  Null type.
 *
 *  Value: "NULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Null;
/**
 *  Numeric type.
 *
 *  Value: "NUMERIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Numeric;
/**
 *  Nvarchar type.
 *
 *  Value: "NVARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Nvarchar;
/**
 *  Other type.
 *
 *  Value: "OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Other;
/**
 *  Real type.
 *
 *  Value: "REAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Real;
/**
 *  Ref type.
 *
 *  Value: "REF"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Ref;
/**
 *  Ref_cursor type.
 *
 *  Value: "REF_CURSOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_RefCursor;
/**
 *  Row ID type.
 *
 *  Value: "ROWID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Rowid;
/**
 *  Small int type.
 *
 *  Value: "SMALLINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Smallint;
/**
 *  SQLXML type.
 *
 *  Value: "SQLXML"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Sqlxml;
/**
 *  Deprecated string type, use VARCHAR type instead.
 *
 *  Value: "STRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_String GTLR_DEPRECATED;
/**
 *  Struct type.
 *
 *  Value: "STRUCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Struct;
/**
 *  Time type.
 *
 *  Value: "TIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Time;
/**
 *  Timestamp type.
 *
 *  Value: "TIMESTAMP"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Timestamp;
/**
 *  Timestamp with timezone type.
 *
 *  Value: "TIMESTAMP_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_TimestampWithTimezone;
/**
 *  Time with timezone type.
 *
 *  Value: "TIME_WITH_TIMEZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_TimeWithTimezone;
/**
 *  Tiny int type.
 *
 *  Value: "TINYINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Tinyint;
/**
 *  Deprecated UUID type, use VARCHAR instead.
 *
 *  Value: "UUID"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Uuid GTLR_DEPRECATED;
/**
 *  Varbinary type.
 *
 *  Value: "VARBINARY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Varbinary;
/**
 *  Varchar type.
 *
 *  Value: "VARCHAR"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_ResultMetadata_DataType_Varchar;

// ----------------------------------------------------------------------------
// GTLRConnectors_Schedule.day

/**
 *  The day of the week is unspecified.
 *
 *  Value: "DAY_OF_WEEK_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Schedule_Day_DayOfWeekUnspecified;
/**
 *  Friday
 *
 *  Value: "FRIDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Schedule_Day_Friday;
/**
 *  Monday
 *
 *  Value: "MONDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Schedule_Day_Monday;
/**
 *  Saturday
 *
 *  Value: "SATURDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Schedule_Day_Saturday;
/**
 *  Sunday
 *
 *  Value: "SUNDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Schedule_Day_Sunday;
/**
 *  Thursday
 *
 *  Value: "THURSDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Schedule_Day_Thursday;
/**
 *  Tuesday
 *
 *  Value: "TUESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Schedule_Day_Tuesday;
/**
 *  Wednesday
 *
 *  Value: "WEDNESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_Schedule_Day_Wednesday;

// ----------------------------------------------------------------------------
// GTLRConnectors_UpdatePolicy.channel

/**
 *  Early channel within a customer project.
 *
 *  Value: "EARLIER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_UpdatePolicy_Channel_Earlier;
/**
 *  Later channel within a customer project.
 *
 *  Value: "LATER"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_UpdatePolicy_Channel_Later;
/**
 *  Unspecified channel.
 *
 *  Value: "UPDATE_CHANNEL_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_UpdatePolicy_Channel_UpdateChannelUnspecified;
/**
 *  ! ! The follow channels can ONLY be used if you adopt the new MW system! ! !
 *  NOTE: all WEEK channels are assumed to be under a weekly window. ! There is
 *  currently no dedicated channel definitions for Daily windows. ! If you use
 *  Daily window, the system will assume a 1d (24Hours) advanced ! notification
 *  period b/w EARLY and LATER. ! We may consider support more flexible daily
 *  channel specifications in ! the future. WEEK1 == EARLIER with minimum 7d
 *  advanced notification. {7d, 14d} The system will treat them equally and will
 *  use WEEK1 whenever it can. New customers are encouraged to use this channel
 *  annotation.
 *
 *  Value: "WEEK1"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_UpdatePolicy_Channel_Week1;
/**
 *  WEEK2 == LATER with minimum 14d advanced notification {14d, 21d}.
 *
 *  Value: "WEEK2"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_UpdatePolicy_Channel_Week2;
/**
 *  WEEK5 == 40d support. minimum 35d advanced notification {35d, 42d}.
 *
 *  Value: "WEEK5"
 */
FOUNDATION_EXTERN NSString * const kGTLRConnectors_UpdatePolicy_Channel_Week5;

/**
 *  AccessCredentials includes the OAuth access token, and the other fields
 *  returned along with it.
 */
@interface GTLRConnectors_AccessCredentials : GTLRObject

/** OAuth access token. */
@property(nonatomic, copy, nullable) NSString *accessToken;

/** Duration till the access token expires. */
@property(nonatomic, strong, nullable) GTLRDuration *expiresIn;

/** OAuth refresh token. */
@property(nonatomic, copy, nullable) NSString *refreshToken;

@end


/**
 *  Action message contains metadata information about a single action present
 *  in the external system.
 */
@interface GTLRConnectors_Action : GTLRObject

/**
 *  Brief Description of action
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Display Name of action to be shown on client side */
@property(nonatomic, copy, nullable) NSString *displayName;

/** JsonSchema representation of this actions's input schema */
@property(nonatomic, strong, nullable) GTLRConnectors_JsonSchema *inputJsonSchema;

/** List containing input parameter metadata. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_InputParameter *> *inputParameters;

/** Name of the action. */
@property(nonatomic, copy, nullable) NSString *name;

/** JsonSchema representation of this actions's result schema */
@property(nonatomic, strong, nullable) GTLRConnectors_JsonSchema *resultJsonSchema;

/** List containing the metadata of result fields. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_ResultMetadata *> *resultMetadata;

@end


/**
 *  Response containing status of the connector for readiness prober.
 */
@interface GTLRConnectors_CheckReadinessResponse : GTLRObject

@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  The status of the connector.
 */
@interface GTLRConnectors_CheckStatusResponse : GTLRObject

/**
 *  When the connector is not in ACTIVE state, the description must be populated
 *  to specify the reason why it's not in ACTIVE state.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  State of the connector.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_CheckStatusResponse_State_Active The connector is
 *        active and ready to process runtime requests. This can also mean that
 *        from the connector's perspective, the connector is not in an error
 *        state and should be able to process runtime requests successfully.
 *        (Value: "ACTIVE")
 *    @arg @c kGTLRConnectors_CheckStatusResponse_State_AuthError This is a more
 *        specific error state that the developers can opt to use when the
 *        connector is facing auth-related errors caused by auth configuration
 *        not present, invalid auth credentials, etc. (Value: "AUTH_ERROR")
 *    @arg @c kGTLRConnectors_CheckStatusResponse_State_Error The connector is
 *        in an error state and cannot process runtime requests. An example
 *        reason would be that the connection container has some network issues
 *        that prevent outbound requests from being sent. (Value: "ERROR")
 *    @arg @c kGTLRConnectors_CheckStatusResponse_State_StateUnspecified State
 *        unspecified. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Time window specified for daily operations.
 */
@interface GTLRConnectors_DailyCycle : GTLRObject

/** Output only. Duration of the time window, set by service producer. */
@property(nonatomic, strong, nullable) GTLRDuration *duration;

/** Time within the day to start the operations. */
@property(nonatomic, strong, nullable) GTLRConnectors_TimeOfDay *startTime;

@end


/**
 *  Represents a whole or partial calendar date, such as a birthday. The time of
 *  day and time zone are either specified elsewhere or are insignificant. The
 *  date is relative to the Gregorian Calendar. This can represent one of the
 *  following: * A full date, with non-zero year, month, and day values. * A
 *  month and day, with a zero year (for example, an anniversary). * A year on
 *  its own, with a zero month and a zero day. * A year and month, with a zero
 *  day (for example, a credit card expiration date). Related types: *
 *  google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
 */
@interface GTLRConnectors_Date : GTLRObject

/**
 *  Day of a month. Must be from 1 to 31 and valid for the year and month, or 0
 *  to specify a year by itself or a year and month where the day isn't
 *  significant.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *day;

/**
 *  Month of a year. Must be from 1 to 12, or 0 to specify a year without a
 *  month and day.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *month;

/**
 *  Year of the date. Must be from 1 to 9999, or 0 to specify a date without a
 *  year.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *year;

@end


/**
 *  DenyMaintenancePeriod definition. Maintenance is forbidden within the deny
 *  period. The start_date must be less than the end_date.
 */
@interface GTLRConnectors_DenyMaintenancePeriod : GTLRObject

/**
 *  Deny period end date. This can be: * A full date, with non-zero year, month
 *  and day values. * A month and day value, with a zero year. Allows recurring
 *  deny periods each year. Date matching this period will have to be before the
 *  end.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Date *endDate;

/**
 *  Deny period start date. This can be: * A full date, with non-zero year,
 *  month and day values. * A month and day value, with a zero year. Allows
 *  recurring deny periods each year. Date matching this period will have to be
 *  the same or after the start.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Date *startDate;

/**
 *  Time in UTC when the Blackout period starts on start_date and ends on
 *  end_date. This can be: * Full time. * All zeros for 00:00:00 UTC
 */
@property(nonatomic, strong, nullable) GTLRConnectors_TimeOfDay *time;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRConnectors_Empty : GTLRObject
@end


/**
 *  'Entity row'/ 'Entity' refers to a single row of an entity type.
 */
@interface GTLRConnectors_Entity : GTLRObject

/**
 *  Fields of the entity. The key is name of the field and the value contains
 *  the applicable `google.protobuf.Value` entry for this field.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Entity_Fields *fields;

/**
 *  Output only. Resource name of the Entity. Format:
 *  projects/{project}/locations/{location}/connections/{connection}/entityTypes/{type}/entities/{id}
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Fields of the entity. The key is name of the field and the value contains
 *  the applicable `google.protobuf.Value` entry for this field.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_Entity_Fields : GTLRObject
@end


/**
 *  EntityType message contains metadata information about a single entity type
 *  present in the external system.
 */
@interface GTLRConnectors_EntityType : GTLRObject

/**
 *  List containing metadata information about each field of the entity type.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_Field *> *fields;

/** JsonSchema representation of this entity's schema */
@property(nonatomic, strong, nullable) GTLRConnectors_JsonSchema *jsonSchema;

/** The name of the entity type. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  ExchangeAuthCodeRequest currently includes no fields.
 */
@interface GTLRConnectors_ExchangeAuthCodeRequest : GTLRObject
@end


/**
 *  ExchangeAuthCodeResponse includes the returned access token and its
 *  associated credentials.
 */
@interface GTLRConnectors_ExchangeAuthCodeResponse : GTLRObject

@property(nonatomic, strong, nullable) GTLRConnectors_AccessCredentials *accessCredentials;

@end


/**
 *  Request message for ActionService.ExecuteAction
 */
@interface GTLRConnectors_ExecuteActionRequest : GTLRObject

/**
 *  Parameters for executing the action. The parameters can be key/value pairs
 *  or nested structs.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_ExecuteActionRequest_Parameters *parameters;

@end


/**
 *  Parameters for executing the action. The parameters can be key/value pairs
 *  or nested structs.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_ExecuteActionRequest_Parameters : GTLRObject
@end


/**
 *  Response message for ActionService.ExecuteAction
 */
@interface GTLRConnectors_ExecuteActionResponse : GTLRObject

/**
 *  In the case of successful invocation of the specified action, the results
 *  Struct contains values based on the response of the action invoked. 1. If
 *  the action execution produces any entities as a result, they are returned as
 *  an array of Structs with the 'key' being the field name and the 'value'
 *  being the value of that field in each result row. { 'results': [{'key':
 *  'value'}, ...] }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_ExecuteActionResponse_Results_Item *> *results;

@end


/**
 *  GTLRConnectors_ExecuteActionResponse_Results_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_ExecuteActionResponse_Results_Item : GTLRObject
@end


/**
 *  An execute sql query request containing the query and the connection to
 *  execute it on.
 */
@interface GTLRConnectors_ExecuteSqlQueryRequest : GTLRObject

/**
 *  Required. SQL statement passed by clients like Integration Platform, the
 *  query is passed as-is to the driver used for interfacing with external
 *  systems.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Query *query;

@end


/**
 *  A response returned by the connection after executing the sql query.
 */
@interface GTLRConnectors_ExecuteSqlQueryResponse : GTLRObject

/**
 *  In the case of successful execution of the query the response contains
 *  results returned by the external system. For example, the result rows of the
 *  query are contained in the 'results' Struct list - "results": [ { "field1":
 *  "val1", "field2": "val2",.. },.. ] Each Struct row can contain fields any
 *  type of like nested Structs or lists.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_ExecuteSqlQueryResponse_Results_Item *> *results;

@end


/**
 *  GTLRConnectors_ExecuteSqlQueryResponse_Results_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_ExecuteSqlQueryResponse_Results_Item : GTLRObject
@end


/**
 *  Message contains EntityType's Field metadata.
 */
@interface GTLRConnectors_Field : GTLRObject

/**
 *  The following map contains fields that are not explicitly mentioned
 *  above,this give connectors the flexibility to add new metadata fields.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Field_AdditionalDetails *additionalDetails;

/**
 *  The data type of the Field.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_Field_DataType_Array Array type. (Value: "ARRAY")
 *    @arg @c kGTLRConnectors_Field_DataType_Bigint Big int type. (Value:
 *        "BIGINT")
 *    @arg @c kGTLRConnectors_Field_DataType_Binary Binary type. (Value:
 *        "BINARY")
 *    @arg @c kGTLRConnectors_Field_DataType_Bit Bit type. (Value: "BIT")
 *    @arg @c kGTLRConnectors_Field_DataType_Blob Blob type. (Value: "BLOB")
 *    @arg @c kGTLRConnectors_Field_DataType_Boolean Boolean type. (Value:
 *        "BOOLEAN")
 *    @arg @c kGTLRConnectors_Field_DataType_Char Char type. (Value: "CHAR")
 *    @arg @c kGTLRConnectors_Field_DataType_Clob Clob type. (Value: "CLOB")
 *    @arg @c kGTLRConnectors_Field_DataType_Datalink Datalink type. (Value:
 *        "DATALINK")
 *    @arg @c kGTLRConnectors_Field_DataType_DataTypeUnspecified Datatype
 *        unspecified. (Value: "DATA_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_Field_DataType_Date Date type. (Value: "DATE")
 *    @arg @c kGTLRConnectors_Field_DataType_Datetime Deprecated Datetime type.
 *        (Value: "DATETIME")
 *    @arg @c kGTLRConnectors_Field_DataType_Decimal Decimal type. (Value:
 *        "DECIMAL")
 *    @arg @c kGTLRConnectors_Field_DataType_Distinct Distinct type keyword.
 *        (Value: "DISTINCT")
 *    @arg @c kGTLRConnectors_Field_DataType_Double Double type. (Value:
 *        "DOUBLE")
 *    @arg @c kGTLRConnectors_Field_DataType_Float Float type. (Value: "FLOAT")
 *    @arg @c kGTLRConnectors_Field_DataType_Int Deprecated Int type, use
 *        INTEGER type instead. (Value: "INT")
 *    @arg @c kGTLRConnectors_Field_DataType_Integer Integer type. (Value:
 *        "INTEGER")
 *    @arg @c kGTLRConnectors_Field_DataType_JavaObject Java object type.
 *        (Value: "JAVA_OBJECT")
 *    @arg @c kGTLRConnectors_Field_DataType_Long Deprecated Long type, use
 *        BIGINT type instead. (Value: "LONG")
 *    @arg @c kGTLRConnectors_Field_DataType_Longnvarchar Long Nvarchar type.
 *        (Value: "LONGNVARCHAR")
 *    @arg @c kGTLRConnectors_Field_DataType_Longvarbinary Long Varbinary type.
 *        (Value: "LONGVARBINARY")
 *    @arg @c kGTLRConnectors_Field_DataType_Longvarchar Long varchar type.
 *        (Value: "LONGVARCHAR")
 *    @arg @c kGTLRConnectors_Field_DataType_Nchar Nchar type. (Value: "NCHAR")
 *    @arg @c kGTLRConnectors_Field_DataType_Nclob Nclob type. (Value: "NCLOB")
 *    @arg @c kGTLRConnectors_Field_DataType_Null Null type. (Value: "NULL")
 *    @arg @c kGTLRConnectors_Field_DataType_Numeric Numeric type. (Value:
 *        "NUMERIC")
 *    @arg @c kGTLRConnectors_Field_DataType_Nvarchar Nvarchar type. (Value:
 *        "NVARCHAR")
 *    @arg @c kGTLRConnectors_Field_DataType_Other Other type. (Value: "OTHER")
 *    @arg @c kGTLRConnectors_Field_DataType_Real Real type. (Value: "REAL")
 *    @arg @c kGTLRConnectors_Field_DataType_Ref Ref type. (Value: "REF")
 *    @arg @c kGTLRConnectors_Field_DataType_RefCursor Ref_cursor type. (Value:
 *        "REF_CURSOR")
 *    @arg @c kGTLRConnectors_Field_DataType_Rowid Row ID type. (Value: "ROWID")
 *    @arg @c kGTLRConnectors_Field_DataType_Smallint Small int type. (Value:
 *        "SMALLINT")
 *    @arg @c kGTLRConnectors_Field_DataType_Sqlxml SQLXML type. (Value:
 *        "SQLXML")
 *    @arg @c kGTLRConnectors_Field_DataType_String Deprecated string type, use
 *        VARCHAR type instead. (Value: "STRING")
 *    @arg @c kGTLRConnectors_Field_DataType_Struct Struct type. (Value:
 *        "STRUCT")
 *    @arg @c kGTLRConnectors_Field_DataType_Time Time type. (Value: "TIME")
 *    @arg @c kGTLRConnectors_Field_DataType_Timestamp Timestamp type. (Value:
 *        "TIMESTAMP")
 *    @arg @c kGTLRConnectors_Field_DataType_TimestampWithTimezone Timestamp
 *        with timezone type. (Value: "TIMESTAMP_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_Field_DataType_TimeWithTimezone Time with timezone
 *        type. (Value: "TIME_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_Field_DataType_Tinyint Tiny int type. (Value:
 *        "TINYINT")
 *    @arg @c kGTLRConnectors_Field_DataType_Uuid Deprecated UUID type, use
 *        VARCHAR instead. (Value: "UUID")
 *    @arg @c kGTLRConnectors_Field_DataType_Varbinary Varbinary type. (Value:
 *        "VARBINARY")
 *    @arg @c kGTLRConnectors_Field_DataType_Varchar Varchar type. (Value:
 *        "VARCHAR")
 */
@property(nonatomic, copy, nullable) NSString *dataType;

/**
 *  The following field specifies the default value of the Field provided by the
 *  external system if a value is not provided.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id defaultValue;

/**
 *  A brief description of the Field.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** JsonSchema of the field, applicable only if field is of type `STRUCT` */
@property(nonatomic, strong, nullable) GTLRConnectors_JsonSchema *jsonSchema;

/**
 *  The following boolean field specifies if the current Field acts as a primary
 *  key or id if the parent is of type entity.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *key;

/** Name of the Field. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Specifies whether a null value is allowed.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nullable;

/**
 *  Reference captures the association between two different entity types. Value
 *  links to the reference of another entity type.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Reference *reference;

@end


/**
 *  The following map contains fields that are not explicitly mentioned
 *  above,this give connectors the flexibility to add new metadata fields.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_Field_AdditionalDetails : GTLRObject
@end


/**
 *  Input Parameter message contains metadata about the parameters required for
 *  executing an Action.
 */
@interface GTLRConnectors_InputParameter : GTLRObject

/**
 *  The following map contains fields that are not explicitly mentioned
 *  above,this give connectors the flexibility to add new metadata fields.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_InputParameter_AdditionalDetails *additionalDetails;

/**
 *  The data type of the Parameter
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Array Array type. (Value:
 *        "ARRAY")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Bigint Big int type.
 *        (Value: "BIGINT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Binary Binary type.
 *        (Value: "BINARY")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Bit Bit type. (Value:
 *        "BIT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Blob Blob type. (Value:
 *        "BLOB")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Boolean Boolean type.
 *        (Value: "BOOLEAN")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Char Char type. (Value:
 *        "CHAR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Clob Clob type. (Value:
 *        "CLOB")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Datalink Datalink type.
 *        (Value: "DATALINK")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_DataTypeUnspecified
 *        Datatype unspecified. (Value: "DATA_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Date Date type. (Value:
 *        "DATE")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Datetime Deprecated
 *        Datetime type. (Value: "DATETIME")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Decimal Decimal type.
 *        (Value: "DECIMAL")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Distinct Distinct type
 *        keyword. (Value: "DISTINCT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Double Double type.
 *        (Value: "DOUBLE")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Float Float type. (Value:
 *        "FLOAT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Int Deprecated Int type,
 *        use INTEGER type instead. (Value: "INT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Integer Integer type.
 *        (Value: "INTEGER")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_JavaObject Java object
 *        type. (Value: "JAVA_OBJECT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Long Deprecated Long type,
 *        use BIGINT type instead. (Value: "LONG")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Longnvarchar Long Nvarchar
 *        type. (Value: "LONGNVARCHAR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Longvarbinary Long
 *        Varbinary type. (Value: "LONGVARBINARY")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Longvarchar Long varchar
 *        type. (Value: "LONGVARCHAR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Nchar Nchar type. (Value:
 *        "NCHAR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Nclob Nclob type. (Value:
 *        "NCLOB")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Null Null type. (Value:
 *        "NULL")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Numeric Numeric type.
 *        (Value: "NUMERIC")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Nvarchar Nvarchar type.
 *        (Value: "NVARCHAR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Other Other type. (Value:
 *        "OTHER")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Real Real type. (Value:
 *        "REAL")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Ref Ref type. (Value:
 *        "REF")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_RefCursor Ref_cursor type.
 *        (Value: "REF_CURSOR")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Rowid Row ID type. (Value:
 *        "ROWID")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Smallint Small int type.
 *        (Value: "SMALLINT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Sqlxml SQLXML type.
 *        (Value: "SQLXML")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_String Deprecated string
 *        type, use VARCHAR type instead. (Value: "STRING")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Struct Struct type.
 *        (Value: "STRUCT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Time Time type. (Value:
 *        "TIME")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Timestamp Timestamp type.
 *        (Value: "TIMESTAMP")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_TimestampWithTimezone
 *        Timestamp with timezone type. (Value: "TIMESTAMP_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_TimeWithTimezone Time with
 *        timezone type. (Value: "TIME_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Tinyint Tiny int type.
 *        (Value: "TINYINT")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Uuid Deprecated UUID type,
 *        use VARCHAR instead. (Value: "UUID")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Varbinary Varbinary type.
 *        (Value: "VARBINARY")
 *    @arg @c kGTLRConnectors_InputParameter_DataType_Varchar Varchar type.
 *        (Value: "VARCHAR")
 */
@property(nonatomic, copy, nullable) NSString *dataType;

/**
 *  The following field specifies the default value of the Parameter provided by
 *  the external system if a value is not provided.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id defaultValue;

/**
 *  A brief description of the Parameter.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  JsonSchema of the parameter, applicable only if parameter is of type
 *  `STRUCT`
 */
@property(nonatomic, strong, nullable) GTLRConnectors_JsonSchema *jsonSchema;

/** Name of the Parameter. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Specifies whether a null value is allowed.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nullable;

@end


/**
 *  The following map contains fields that are not explicitly mentioned
 *  above,this give connectors the flexibility to add new metadata fields.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_InputParameter_AdditionalDetails : GTLRObject
@end


/**
 *  Instance represents the interface for SLM services to actuate the state of
 *  control plane resources. Example Instance in JSON, where
 *  consumer-project-number=123456, producer-project-id=cloud-sql: ```json
 *  Instance: { "name":
 *  "projects/123456/locations/us-east1/instances/prod-instance", "create_time":
 *  { "seconds": 1526406431, }, "labels": { "env": "prod", "foo": "bar" },
 *  "state": READY, "software_versions": { "software_update":
 *  "cloud-sql-09-28-2018", }, "maintenance_policy_names": { "UpdatePolicy":
 *  "projects/123456/locations/us-east1/maintenancePolicies/prod-update-policy",
 *  } "tenant_project_id": "cloud-sql-test-tenant", "producer_metadata": {
 *  "cloud-sql-tier": "basic", "cloud-sql-instance-size": "1G", },
 *  "provisioned_resources": [ { "resource-type": "compute-instance",
 *  "resource-url":
 *  "https://www.googleapis.com/compute/v1/projects/cloud-sql/zones/us-east1-b/instances/vm-1",
 *  } ], "maintenance_schedules": { "csa_rollout": { "start_time": { "seconds":
 *  1526406431, }, "end_time": { "seconds": 1535406431, }, }, "ncsa_rollout": {
 *  "start_time": { "seconds": 1526406431, }, "end_time": { "seconds":
 *  1535406431, }, } }, "consumer_defined_name": "my-sql-instance1", } ```
 *  LINT.IfChange
 */
@interface GTLRConnectors_Instance : GTLRObject

/**
 *  consumer_defined_name is the name of the instance set by the service
 *  consumers. Generally this is different from the `name` field which
 *  reperesents the system-assigned id of the instance which the service
 *  consumers do not recognize. This is a required field for tenants onboarding
 *  to Maintenance Window notifications
 *  (go/slm-rollout-maintenance-policies#prerequisites).
 */
@property(nonatomic, copy, nullable) NSString *consumerDefinedName;

/** Output only. Timestamp when the resource was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. The instance_type of this instance of format:
 *  projects/{project_number}/locations/{location_id}/instanceTypes/{instance_type_id}.
 *  Instance Type represents a high-level tier or SKU of the service that this
 *  instance belong to. When enabled(eg: Maintenance Rollout), Rollout uses
 *  'instance_type' along with 'software_versions' to determine whether instance
 *  needs an update or not.
 */
@property(nonatomic, copy, nullable) NSString *instanceType;

/**
 *  Optional. Resource labels to represent user provided metadata. Each label is
 *  a key-value pair, where both the key and the value are arbitrary strings
 *  provided by the user.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Instance_Labels *labels;

/**
 *  Optional. The MaintenancePolicies that have been attached to the instance.
 *  The key must be of the type name of the oneof policy name defined in
 *  MaintenancePolicy, and the referenced policy must define the same policy
 *  type. For details, please refer to go/mr-user-guide. Should not be set if
 *  maintenance_settings.maintenance_policies is set.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Instance_MaintenancePolicyNames *maintenancePolicyNames;

/**
 *  The MaintenanceSchedule contains the scheduling information of published
 *  maintenance schedule with same key as software_versions.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Instance_MaintenanceSchedules *maintenanceSchedules;

/** Optional. The MaintenanceSettings associated with instance. */
@property(nonatomic, strong, nullable) GTLRConnectors_MaintenanceSettings *maintenanceSettings;

/**
 *  Unique name of the resource. It uses the form:
 *  `projects/{project_number}/locations/{location_id}/instances/{instance_id}`
 *  Note: This name is passed, stored and logged across the rollout system. So
 *  use of consumer project_id or any other consumer PII in the name is strongly
 *  discouraged for wipeout (go/wipeout) compliance. See
 *  go/elysium/project_ids#storage-guidance for more details.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. notification_parameter are information that service producers may
 *  like to include that is not relevant to Rollout. This parameter will only be
 *  passed to Gamma and Cloud Logging for notification/logging purpose.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Instance_NotificationParameters *notificationParameters;

/**
 *  Output only. Custom string attributes used primarily to expose
 *  producer-specific information in monitoring dashboards. See
 *  go/get-instance-metadata.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Instance_ProducerMetadata *producerMetadata;

/**
 *  Output only. The list of data plane resources provisioned for this instance,
 *  e.g. compute VMs. See go/get-instance-metadata.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_ProvisionedResource *> *provisionedResources;

/**
 *  Link to the SLM instance template. Only populated when updating SLM
 *  instances via SSA's Actuation service adaptor. Service producers with custom
 *  control plane (e.g. Cloud SQL) doesn't need to populate this field. Instead
 *  they should use software_versions.
 */
@property(nonatomic, copy, nullable) NSString *slmInstanceTemplate;

/**
 *  Output only. SLO metadata for instance classification in the Standardized
 *  dataplane SLO platform. See go/cloud-ssa-standard-slo for feature
 *  description.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_SloMetadata *sloMetadata;

/**
 *  Software versions that are used to deploy this instance. This can be mutated
 *  by rollout services.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_Instance_SoftwareVersions *softwareVersions;

/**
 *  Output only. Current lifecycle state of the resource (e.g. if it's being
 *  created or ready to use).
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_Instance_State_Creating Instance is being created.
 *        (Value: "CREATING")
 *    @arg @c kGTLRConnectors_Instance_State_Deleting Instance is being deleted.
 *        (Value: "DELETING")
 *    @arg @c kGTLRConnectors_Instance_State_Error Instance encountered an error
 *        and is in indeterministic state. (Value: "ERROR")
 *    @arg @c kGTLRConnectors_Instance_State_Ready Instance has been created and
 *        is ready to use. (Value: "READY")
 *    @arg @c kGTLRConnectors_Instance_State_Repairing Instance is unheathy and
 *        under repair. (Value: "REPAIRING")
 *    @arg @c kGTLRConnectors_Instance_State_StateUnspecified Unspecified state.
 *        (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_Instance_State_Updating Instance is being updated.
 *        (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. ID of the associated GCP tenant project. See
 *  go/get-instance-metadata.
 */
@property(nonatomic, copy, nullable) NSString *tenantProjectId;

/** Output only. Timestamp when the resource was last modified. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Resource labels to represent user provided metadata. Each label is
 *  a key-value pair, where both the key and the value are arbitrary strings
 *  provided by the user.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRConnectors_Instance_Labels : GTLRObject
@end


/**
 *  Optional. The MaintenancePolicies that have been attached to the instance.
 *  The key must be of the type name of the oneof policy name defined in
 *  MaintenancePolicy, and the referenced policy must define the same policy
 *  type. For details, please refer to go/mr-user-guide. Should not be set if
 *  maintenance_settings.maintenance_policies is set.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRConnectors_Instance_MaintenancePolicyNames : GTLRObject
@end


/**
 *  The MaintenanceSchedule contains the scheduling information of published
 *  maintenance schedule with same key as software_versions.
 *
 *  @note This class is documented as having more properties of
 *        GTLRConnectors_MaintenanceSchedule. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_Instance_MaintenanceSchedules : GTLRObject
@end


/**
 *  Optional. notification_parameter are information that service producers may
 *  like to include that is not relevant to Rollout. This parameter will only be
 *  passed to Gamma and Cloud Logging for notification/logging purpose.
 *
 *  @note This class is documented as having more properties of
 *        GTLRConnectors_NotificationParameter. Use @c -additionalJSONKeys and
 *        @c -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_Instance_NotificationParameters : GTLRObject
@end


/**
 *  Output only. Custom string attributes used primarily to expose
 *  producer-specific information in monitoring dashboards. See
 *  go/get-instance-metadata.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRConnectors_Instance_ProducerMetadata : GTLRObject
@end


/**
 *  Software versions that are used to deploy this instance. This can be mutated
 *  by rollout services.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRConnectors_Instance_SoftwareVersions : GTLRObject
@end


/**
 *  JsonSchema representation of schema metadata
 */
@interface GTLRConnectors_JsonSchema : GTLRObject

/**
 *  Additional details apart from standard json schema fields, this gives
 *  flexibility to store metadata about the schema
 */
@property(nonatomic, strong, nullable) GTLRConnectors_JsonSchema_AdditionalDetails *additionalDetails;

/**
 *  The default value of the field or object described by this schema.
 *
 *  Remapped to 'defaultProperty' to avoid language reserved word 'default'.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id defaultProperty;

/**
 *  A description of this schema.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Possible values for an enumeration. This works in conjunction with `type` to
 *  represent types with a fixed set of legal values
 *
 *  Remapped to 'enumProperty' to avoid language reserved word 'enum'.
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) NSArray *enumProperty;

/**
 *  Format of the value as per
 *  https://json-schema.org/understanding-json-schema/reference/string.html#format
 */
@property(nonatomic, copy, nullable) NSString *format;

/**
 *  Schema that applies to array values, applicable only if this is of type
 *  `array`.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_JsonSchema *items;

/**
 *  JDBC datatype of the field.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Array Array type. (Value:
 *        "ARRAY")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Bigint Big int type. (Value:
 *        "BIGINT")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Binary Binary type. (Value:
 *        "BINARY")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Bit Bit type. (Value: "BIT")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Blob Blob type. (Value:
 *        "BLOB")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Boolean Boolean type. (Value:
 *        "BOOLEAN")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Char Char type. (Value:
 *        "CHAR")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Clob Clob type. (Value:
 *        "CLOB")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Datalink Datalink type.
 *        (Value: "DATALINK")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_DataTypeUnspecified Datatype
 *        unspecified. (Value: "DATA_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Date Date type. (Value:
 *        "DATE")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Datetime Deprecated Datetime
 *        type. (Value: "DATETIME")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Decimal Decimal type. (Value:
 *        "DECIMAL")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Distinct Distinct type
 *        keyword. (Value: "DISTINCT")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Double Double type. (Value:
 *        "DOUBLE")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Float Float type. (Value:
 *        "FLOAT")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Int Deprecated Int type, use
 *        INTEGER type instead. (Value: "INT")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Integer Integer type. (Value:
 *        "INTEGER")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_JavaObject Java object type.
 *        (Value: "JAVA_OBJECT")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Long Deprecated Long type, use
 *        BIGINT type instead. (Value: "LONG")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Longnvarchar Long Nvarchar
 *        type. (Value: "LONGNVARCHAR")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Longvarbinary Long Varbinary
 *        type. (Value: "LONGVARBINARY")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Longvarchar Long varchar type.
 *        (Value: "LONGVARCHAR")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Nchar Nchar type. (Value:
 *        "NCHAR")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Nclob Nclob type. (Value:
 *        "NCLOB")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Null Null type. (Value:
 *        "NULL")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Numeric Numeric type. (Value:
 *        "NUMERIC")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Nvarchar Nvarchar type.
 *        (Value: "NVARCHAR")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Other Other type. (Value:
 *        "OTHER")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Real Real type. (Value:
 *        "REAL")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Ref Ref type. (Value: "REF")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_RefCursor Ref_cursor type.
 *        (Value: "REF_CURSOR")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Rowid Row ID type. (Value:
 *        "ROWID")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Smallint Small int type.
 *        (Value: "SMALLINT")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Sqlxml SQLXML type. (Value:
 *        "SQLXML")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_String Deprecated string type,
 *        use VARCHAR type instead. (Value: "STRING")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Struct Struct type. (Value:
 *        "STRUCT")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Time Time type. (Value:
 *        "TIME")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Timestamp Timestamp type.
 *        (Value: "TIMESTAMP")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_TimestampWithTimezone
 *        Timestamp with timezone type. (Value: "TIMESTAMP_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_TimeWithTimezone Time with
 *        timezone type. (Value: "TIME_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Tinyint Tiny int type. (Value:
 *        "TINYINT")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Uuid Deprecated UUID type, use
 *        VARCHAR instead. (Value: "UUID")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Varbinary Varbinary type.
 *        (Value: "VARBINARY")
 *    @arg @c kGTLRConnectors_JsonSchema_JdbcType_Varchar Varchar type. (Value:
 *        "VARCHAR")
 */
@property(nonatomic, copy, nullable) NSString *jdbcType;

/**
 *  The child schemas, applicable only if this is of type `object`. The key is
 *  the name of the property and the value is the json schema that describes
 *  that property
 */
@property(nonatomic, strong, nullable) GTLRConnectors_JsonSchema_Properties *properties;

/** Whether this property is required. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *required;

/** JSON Schema Validation: A Vocabulary for Structural Validation of JSON */
@property(nonatomic, strong, nullable) NSArray<NSString *> *type;

@end


/**
 *  Additional details apart from standard json schema fields, this gives
 *  flexibility to store metadata about the schema
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_JsonSchema_AdditionalDetails : GTLRObject
@end


/**
 *  The child schemas, applicable only if this is of type `object`. The key is
 *  the name of the property and the value is the json schema that describes
 *  that property
 *
 *  @note This class is documented as having more properties of
 *        GTLRConnectors_JsonSchema. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_JsonSchema_Properties : GTLRObject
@end


/**
 *  Response message for ActionService.ListActions
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "actions" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRConnectors_ListActionsResponse : GTLRCollectionObject

/**
 *  List of action metadata.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_Action *> *actions;

/** Next page token if more actions available. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of actions which contain unsupported Datatypes. Check datatype.proto
 *  for more information.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unsupportedActionNames;

@end


/**
 *  Response message for EntityService.ListEntities
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "entities" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRConnectors_ListEntitiesResponse : GTLRCollectionObject

/**
 *  List containing entity rows.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_Entity *> *entities;

/** Next page token if more records are available. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for EntityService.ListEntityTypes
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "types" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRConnectors_ListEntityTypesResponse : GTLRCollectionObject

/** Next page token if more entity types available. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  List of metadata related to all entity types.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_EntityType *> *types;

/**
 *  List of entity type names which contain unsupported Datatypes. Check
 *  datatype.proto for more information.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unsupportedTypeNames;

@end


/**
 *  LINT.IfChange Defines policies to service maintenance events.
 */
@interface GTLRConnectors_MaintenancePolicy : GTLRObject

/** Output only. The time when the resource was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Optional. Description of what this policy is for. Create/Update methods
 *  return INVALID_ARGUMENT if the length is greater than 512.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Optional. Resource labels to represent user provided metadata. Each label is
 *  a key-value pair, where both the key and the value are arbitrary strings
 *  provided by the user.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_MaintenancePolicy_Labels *labels;

/**
 *  Required. MaintenancePolicy name using the form:
 *  `projects/{project_id}/locations/{location_id}/maintenancePolicies/{maintenance_policy_id}`
 *  where {project_id} refers to a GCP consumer project ID, {location_id} refers
 *  to a GCP region/zone, {maintenance_policy_id} must be 1-63 characters long
 *  and match the regular expression `[a-z0-9]([-a-z0-9]*[a-z0-9])?`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. The state of the policy.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_MaintenancePolicy_State_Deleting Resource is being
 *        deleted. It can no longer be attached to instances. (Value:
 *        "DELETING")
 *    @arg @c kGTLRConnectors_MaintenancePolicy_State_Ready Resource is ready to
 *        be used. (Value: "READY")
 *    @arg @c kGTLRConnectors_MaintenancePolicy_State_StateUnspecified
 *        Unspecified state. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Maintenance policy applicable to instance update. */
@property(nonatomic, strong, nullable) GTLRConnectors_UpdatePolicy *updatePolicy;

/** Output only. The time when the resource was updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Resource labels to represent user provided metadata. Each label is
 *  a key-value pair, where both the key and the value are arbitrary strings
 *  provided by the user.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRConnectors_MaintenancePolicy_Labels : GTLRObject
@end


/**
 *  Maintenance schedule which is exposed to customer and potentially end user,
 *  indicating published upcoming future maintenance schedule
 */
@interface GTLRConnectors_MaintenanceSchedule : GTLRObject

/**
 *  This field is deprecated, and will be always set to true since reschedule
 *  can happen multiple times now. This field should not be removed until all
 *  service producers remove this for their customers.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *canReschedule GTLR_DEPRECATED;

/** The scheduled end time for the maintenance. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  The rollout management policy this maintenance schedule is associated with.
 *  When doing reschedule update request, the reschedule should be against this
 *  given policy.
 */
@property(nonatomic, copy, nullable) NSString *rolloutManagementPolicy;

/**
 *  schedule_deadline_time is the time deadline any schedule start time cannot
 *  go beyond, including reschedule. It's normally the initial schedule start
 *  time plus maintenance window length (1 day or 1 week). Maintenance cannot be
 *  scheduled to start beyond this deadline.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *scheduleDeadlineTime;

/** The scheduled start time for the maintenance. */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

@end


/**
 *  Maintenance settings associated with instance. Allows service producers and
 *  end users to assign settings that controls maintenance on this instance.
 */
@interface GTLRConnectors_MaintenanceSettings : GTLRObject

/**
 *  Optional. Exclude instance from maintenance. When true, rollout service will
 *  not attempt maintenance on the instance. Rollout service will include the
 *  instance in reported rollout progress as not attempted.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exclude;

/**
 *  Optional. If the update call is triggered from rollback, set the value as
 *  true.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isRollback;

/**
 *  Optional. The MaintenancePolicies that have been attached to the instance.
 *  The key must be of the type name of the oneof policy name defined in
 *  MaintenancePolicy, and the embedded policy must define the same policy type.
 *  For details, please refer to go/mr-user-guide. Should not be set if
 *  maintenance_policy_names is set. If only the name is needed, then only
 *  populate MaintenancePolicy.name.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_MaintenanceSettings_MaintenancePolicies *maintenancePolicies;

@end


/**
 *  Optional. The MaintenancePolicies that have been attached to the instance.
 *  The key must be of the type name of the oneof policy name defined in
 *  MaintenancePolicy, and the embedded policy must define the same policy type.
 *  For details, please refer to go/mr-user-guide. Should not be set if
 *  maintenance_policy_names is set. If only the name is needed, then only
 *  populate MaintenancePolicy.name.
 *
 *  @note This class is documented as having more properties of
 *        GTLRConnectors_MaintenancePolicy. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_MaintenanceSettings_MaintenancePolicies : GTLRObject
@end


/**
 *  MaintenanceWindow definition.
 */
@interface GTLRConnectors_MaintenanceWindow : GTLRObject

/** Daily cycle. */
@property(nonatomic, strong, nullable) GTLRConnectors_DailyCycle *dailyCycle;

/** Weekly cycle. */
@property(nonatomic, strong, nullable) GTLRConnectors_WeeklyCycle *weeklyCycle;

@end


/**
 *  Node information for custom per-node SLO implementations. SSA does not
 *  support per-node SLO, but producers can populate per-node information in
 *  SloMetadata for custom precomputations. SSA Eligibility Exporter will emit
 *  per-node metric based on this information.
 */
@interface GTLRConnectors_NodeSloMetadata : GTLRObject

/** The location of the node, if different from instance location. */
@property(nonatomic, copy, nullable) NSString *location;

/** The id of the node. This should be equal to SaasInstanceNode.node_id. */
@property(nonatomic, copy, nullable) NSString *nodeId;

/**
 *  If present, this will override eligibility for the node coming from instance
 *  or exclusions for specified SLIs.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_PerSliSloEligibility *perSliEligibility;

@end


/**
 *  Contains notification related data.
 */
@interface GTLRConnectors_NotificationParameter : GTLRObject

/** Optional. Array of string values. e.g. instance's replica information. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end


/**
 *  PerSliSloEligibility is a mapping from an SLI name to eligibility.
 */
@interface GTLRConnectors_PerSliSloEligibility : GTLRObject

/**
 *  An entry in the eligibilities map specifies an eligibility for a particular
 *  SLI for the given instance. The SLI key in the name must be a valid SLI name
 *  specified in the Eligibility Exporter binary flags otherwise an error will
 *  be emitted by Eligibility Exporter and the oncaller will be alerted. If an
 *  SLI has been defined in the binary flags but the eligibilities map does not
 *  contain it, the corresponding SLI time series will not be emitted by the
 *  Eligibility Exporter. This ensures a smooth rollout and compatibility
 *  between the data produced by different versions of the Eligibility
 *  Exporters. If eligibilities map contains a key for an SLI which has not been
 *  declared in the binary flags, there will be an error message emitted in the
 *  Eligibility Exporter log and the metric for the SLI in question will not be
 *  emitted.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_PerSliSloEligibility_Eligibilities *eligibilities;

@end


/**
 *  An entry in the eligibilities map specifies an eligibility for a particular
 *  SLI for the given instance. The SLI key in the name must be a valid SLI name
 *  specified in the Eligibility Exporter binary flags otherwise an error will
 *  be emitted by Eligibility Exporter and the oncaller will be alerted. If an
 *  SLI has been defined in the binary flags but the eligibilities map does not
 *  contain it, the corresponding SLI time series will not be emitted by the
 *  Eligibility Exporter. This ensures a smooth rollout and compatibility
 *  between the data produced by different versions of the Eligibility
 *  Exporters. If eligibilities map contains a key for an SLI which has not been
 *  declared in the binary flags, there will be an error message emitted in the
 *  Eligibility Exporter log and the metric for the SLI in question will not be
 *  emitted.
 *
 *  @note This class is documented as having more properties of
 *        GTLRConnectors_SloEligibility. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_PerSliSloEligibility_Eligibilities : GTLRObject
@end


/**
 *  Describes provisioned dataplane resources.
 */
@interface GTLRConnectors_ProvisionedResource : GTLRObject

/**
 *  Type of the resource. This can be either a GCP resource or a custom one
 *  (e.g. another cloud provider's VM). For GCP compute resources use singular
 *  form of the names listed in GCP compute API documentation
 *  (https://cloud.google.com/compute/docs/reference/rest/v1/), prefixed with
 *  'compute-', for example: 'compute-instance', 'compute-disk',
 *  'compute-autoscaler'.
 */
@property(nonatomic, copy, nullable) NSString *resourceType;

/**
 *  URL identifying the resource, e.g.
 *  "https://www.googleapis.com/compute/v1/projects/...)".
 */
@property(nonatomic, copy, nullable) NSString *resourceUrl;

@end


/**
 *  A wrapper around the SQL query statement. This is needed so that the JSON
 *  representation of ExecuteSqlQueryRequest has the following format:
 *  `{"query":"select *"}`.
 */
@interface GTLRConnectors_Query : GTLRObject

/**
 *  Sets the limit for the maximum number of rows returned after the query
 *  execution.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxRows;

/** Required. Sql query to execute. */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  In the struct, the value corresponds to the value of query parameter and
 *  date type corresponds to the date type of the query parameter.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_QueryParameter *> *queryParameters;

/**
 *  Sets the number of seconds the driver will wait for a query to execute.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timeout;

@end


/**
 *  Query parameter definition
 */
@interface GTLRConnectors_QueryParameter : GTLRObject

/**
 *  dataType
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Array Array type. (Value:
 *        "ARRAY")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Bigint Big int type.
 *        (Value: "BIGINT")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Binary Binary type.
 *        (Value: "BINARY")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Bit Bit type. (Value:
 *        "BIT")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Blob Blob type. (Value:
 *        "BLOB")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Boolean Boolean type.
 *        (Value: "BOOLEAN")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Char Char type. (Value:
 *        "CHAR")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Clob Clob type. (Value:
 *        "CLOB")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Datalink Datalink type.
 *        (Value: "DATALINK")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_DataTypeUnspecified
 *        Datatype unspecified. (Value: "DATA_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Date Date type. (Value:
 *        "DATE")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Datetime Deprecated
 *        Datetime type. (Value: "DATETIME")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Decimal Decimal type.
 *        (Value: "DECIMAL")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Distinct Distinct type
 *        keyword. (Value: "DISTINCT")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Double Double type.
 *        (Value: "DOUBLE")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Float Float type. (Value:
 *        "FLOAT")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Int Deprecated Int type,
 *        use INTEGER type instead. (Value: "INT")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Integer Integer type.
 *        (Value: "INTEGER")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_JavaObject Java object
 *        type. (Value: "JAVA_OBJECT")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Long Deprecated Long type,
 *        use BIGINT type instead. (Value: "LONG")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Longnvarchar Long Nvarchar
 *        type. (Value: "LONGNVARCHAR")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Longvarbinary Long
 *        Varbinary type. (Value: "LONGVARBINARY")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Longvarchar Long varchar
 *        type. (Value: "LONGVARCHAR")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Nchar Nchar type. (Value:
 *        "NCHAR")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Nclob Nclob type. (Value:
 *        "NCLOB")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Null Null type. (Value:
 *        "NULL")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Numeric Numeric type.
 *        (Value: "NUMERIC")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Nvarchar Nvarchar type.
 *        (Value: "NVARCHAR")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Other Other type. (Value:
 *        "OTHER")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Real Real type. (Value:
 *        "REAL")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Ref Ref type. (Value:
 *        "REF")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_RefCursor Ref_cursor type.
 *        (Value: "REF_CURSOR")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Rowid Row ID type. (Value:
 *        "ROWID")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Smallint Small int type.
 *        (Value: "SMALLINT")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Sqlxml SQLXML type.
 *        (Value: "SQLXML")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_String Deprecated string
 *        type, use VARCHAR type instead. (Value: "STRING")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Struct Struct type.
 *        (Value: "STRUCT")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Time Time type. (Value:
 *        "TIME")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Timestamp Timestamp type.
 *        (Value: "TIMESTAMP")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_TimestampWithTimezone
 *        Timestamp with timezone type. (Value: "TIMESTAMP_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_TimeWithTimezone Time with
 *        timezone type. (Value: "TIME_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Tinyint Tiny int type.
 *        (Value: "TINYINT")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Uuid Deprecated UUID type,
 *        use VARCHAR instead. (Value: "UUID")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Varbinary Varbinary type.
 *        (Value: "VARBINARY")
 *    @arg @c kGTLRConnectors_QueryParameter_DataType_Varchar Varchar type.
 *        (Value: "VARCHAR")
 */
@property(nonatomic, copy, nullable) NSString *dataType;

/**
 *  value
 *
 *  Can be any valid JSON type.
 */
@property(nonatomic, strong, nullable) id value;

@end


/**
 *  GTLRConnectors_Reference
 */
@interface GTLRConnectors_Reference : GTLRObject

/** Name of the reference field. */
@property(nonatomic, copy, nullable) NSString *name;

/** Name of reference entity type. */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  RefreshAccessTokenRequest currently includes no fields.
 */
@interface GTLRConnectors_RefreshAccessTokenRequest : GTLRObject
@end


/**
 *  RefreshAccessTokenResponse includes the returned access token and its
 *  associated credentials.
 */
@interface GTLRConnectors_RefreshAccessTokenResponse : GTLRObject

@property(nonatomic, strong, nullable) GTLRConnectors_AccessCredentials *accessCredentials;

@end


/**
 *  Result Metadata message contains metadata about the result returned after
 *  executing an Action.
 */
@interface GTLRConnectors_ResultMetadata : GTLRObject

/**
 *  The data type of the metadata field
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Array Array type. (Value:
 *        "ARRAY")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Bigint Big int type.
 *        (Value: "BIGINT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Binary Binary type.
 *        (Value: "BINARY")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Bit Bit type. (Value:
 *        "BIT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Blob Blob type. (Value:
 *        "BLOB")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Boolean Boolean type.
 *        (Value: "BOOLEAN")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Char Char type. (Value:
 *        "CHAR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Clob Clob type. (Value:
 *        "CLOB")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Datalink Datalink type.
 *        (Value: "DATALINK")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_DataTypeUnspecified
 *        Datatype unspecified. (Value: "DATA_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Date Date type. (Value:
 *        "DATE")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Datetime Deprecated
 *        Datetime type. (Value: "DATETIME")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Decimal Decimal type.
 *        (Value: "DECIMAL")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Distinct Distinct type
 *        keyword. (Value: "DISTINCT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Double Double type.
 *        (Value: "DOUBLE")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Float Float type. (Value:
 *        "FLOAT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Int Deprecated Int type,
 *        use INTEGER type instead. (Value: "INT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Integer Integer type.
 *        (Value: "INTEGER")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_JavaObject Java object
 *        type. (Value: "JAVA_OBJECT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Long Deprecated Long type,
 *        use BIGINT type instead. (Value: "LONG")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Longnvarchar Long Nvarchar
 *        type. (Value: "LONGNVARCHAR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Longvarbinary Long
 *        Varbinary type. (Value: "LONGVARBINARY")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Longvarchar Long varchar
 *        type. (Value: "LONGVARCHAR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Nchar Nchar type. (Value:
 *        "NCHAR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Nclob Nclob type. (Value:
 *        "NCLOB")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Null Null type. (Value:
 *        "NULL")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Numeric Numeric type.
 *        (Value: "NUMERIC")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Nvarchar Nvarchar type.
 *        (Value: "NVARCHAR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Other Other type. (Value:
 *        "OTHER")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Real Real type. (Value:
 *        "REAL")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Ref Ref type. (Value:
 *        "REF")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_RefCursor Ref_cursor type.
 *        (Value: "REF_CURSOR")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Rowid Row ID type. (Value:
 *        "ROWID")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Smallint Small int type.
 *        (Value: "SMALLINT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Sqlxml SQLXML type.
 *        (Value: "SQLXML")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_String Deprecated string
 *        type, use VARCHAR type instead. (Value: "STRING")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Struct Struct type.
 *        (Value: "STRUCT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Time Time type. (Value:
 *        "TIME")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Timestamp Timestamp type.
 *        (Value: "TIMESTAMP")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_TimestampWithTimezone
 *        Timestamp with timezone type. (Value: "TIMESTAMP_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_TimeWithTimezone Time with
 *        timezone type. (Value: "TIME_WITH_TIMEZONE")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Tinyint Tiny int type.
 *        (Value: "TINYINT")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Uuid Deprecated UUID type,
 *        use VARCHAR instead. (Value: "UUID")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Varbinary Varbinary type.
 *        (Value: "VARBINARY")
 *    @arg @c kGTLRConnectors_ResultMetadata_DataType_Varchar Varchar type.
 *        (Value: "VARCHAR")
 */
@property(nonatomic, copy, nullable) NSString *dataType;

/**
 *  A brief description of the metadata field.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  JsonSchema of the result, applicable only if parameter is of type `STRUCT`
 */
@property(nonatomic, strong, nullable) GTLRConnectors_JsonSchema *jsonSchema;

/** Name of the metadata field. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Configure the schedule.
 */
@interface GTLRConnectors_Schedule : GTLRObject

/**
 *  Allows to define schedule that runs specified day of the week.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_Schedule_Day_DayOfWeekUnspecified The day of the
 *        week is unspecified. (Value: "DAY_OF_WEEK_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_Schedule_Day_Friday Friday (Value: "FRIDAY")
 *    @arg @c kGTLRConnectors_Schedule_Day_Monday Monday (Value: "MONDAY")
 *    @arg @c kGTLRConnectors_Schedule_Day_Saturday Saturday (Value: "SATURDAY")
 *    @arg @c kGTLRConnectors_Schedule_Day_Sunday Sunday (Value: "SUNDAY")
 *    @arg @c kGTLRConnectors_Schedule_Day_Thursday Thursday (Value: "THURSDAY")
 *    @arg @c kGTLRConnectors_Schedule_Day_Tuesday Tuesday (Value: "TUESDAY")
 *    @arg @c kGTLRConnectors_Schedule_Day_Wednesday Wednesday (Value:
 *        "WEDNESDAY")
 */
@property(nonatomic, copy, nullable) NSString *day;

/** Output only. Duration of the time window, set by service producer. */
@property(nonatomic, strong, nullable) GTLRDuration *duration;

/** Time within the window to start the operations. */
@property(nonatomic, strong, nullable) GTLRConnectors_TimeOfDay *startTime;

@end


/**
 *  SloEligibility is a tuple containing eligibility value: true if an instance
 *  is eligible for SLO calculation or false if it should be excluded from all
 *  SLO-related calculations along with a user-defined reason.
 */
@interface GTLRConnectors_SloEligibility : GTLRObject

/**
 *  Whether an instance is eligible or ineligible.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *eligible;

/**
 *  User-defined reason for the current value of instance eligibility. Usually,
 *  this can be directly mapped to the internal state. An empty reason is
 *  allowed.
 */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  SloMetadata contains resources required for proper SLO classification of the
 *  instance.
 */
@interface GTLRConnectors_SloMetadata : GTLRObject

/**
 *  Optional. List of nodes. Some producers need to use per-node metadata to
 *  calculate SLO. This field allows such producers to publish per-node SLO meta
 *  data, which will be consumed by SSA Eligibility Exporter and published in
 *  the form of per node metric to Monarch.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_NodeSloMetadata *> *nodes;

/**
 *  Optional. Multiple per-instance SLI eligibilities which apply for individual
 *  SLIs.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_PerSliSloEligibility *perSliEligibility;

/**
 *  Name of the SLO tier the Instance belongs to. This name will be expected to
 *  match the tiers specified in the service SLO configuration. Field is
 *  mandatory and must not be empty.
 */
@property(nonatomic, copy, nullable) NSString *tier;

@end


/**
 *  Represents a time of day. The date and time zone are either not significant
 *  or are specified elsewhere. An API may choose to allow leap seconds. Related
 *  types are google.type.Date and `google.protobuf.Timestamp`.
 */
@interface GTLRConnectors_TimeOfDay : GTLRObject

/**
 *  Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to
 *  allow the value "24:00:00" for scenarios like business closing time.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hours;

/**
 *  Minutes of hour of day. Must be from 0 to 59.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minutes;

/**
 *  Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  Seconds of minutes of the time. Must normally be from 0 to 59. An API may
 *  allow the value 60 if it allows leap-seconds.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *seconds;

@end


/**
 *  Response message for EntityService.UpdateEntitiesWithConditions
 */
@interface GTLRConnectors_UpdateEntitiesWithConditionsResponse : GTLRObject

/** Response returned by the external system. */
@property(nonatomic, strong, nullable) GTLRConnectors_UpdateEntitiesWithConditionsResponse_Response *response;

@end


/**
 *  Response returned by the external system.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRConnectors_UpdateEntitiesWithConditionsResponse_Response : GTLRObject
@end


/**
 *  Maintenance policy applicable to instance updates.
 */
@interface GTLRConnectors_UpdatePolicy : GTLRObject

/**
 *  Optional. Relative scheduling channel applied to resource.
 *
 *  Likely values:
 *    @arg @c kGTLRConnectors_UpdatePolicy_Channel_Earlier Early channel within
 *        a customer project. (Value: "EARLIER")
 *    @arg @c kGTLRConnectors_UpdatePolicy_Channel_Later Later channel within a
 *        customer project. (Value: "LATER")
 *    @arg @c kGTLRConnectors_UpdatePolicy_Channel_UpdateChannelUnspecified
 *        Unspecified channel. (Value: "UPDATE_CHANNEL_UNSPECIFIED")
 *    @arg @c kGTLRConnectors_UpdatePolicy_Channel_Week1 ! ! The follow channels
 *        can ONLY be used if you adopt the new MW system! ! ! NOTE: all WEEK
 *        channels are assumed to be under a weekly window. ! There is currently
 *        no dedicated channel definitions for Daily windows. ! If you use Daily
 *        window, the system will assume a 1d (24Hours) advanced ! notification
 *        period b/w EARLY and LATER. ! We may consider support more flexible
 *        daily channel specifications in ! the future. WEEK1 == EARLIER with
 *        minimum 7d advanced notification. {7d, 14d} The system will treat them
 *        equally and will use WEEK1 whenever it can. New customers are
 *        encouraged to use this channel annotation. (Value: "WEEK1")
 *    @arg @c kGTLRConnectors_UpdatePolicy_Channel_Week2 WEEK2 == LATER with
 *        minimum 14d advanced notification {14d, 21d}. (Value: "WEEK2")
 *    @arg @c kGTLRConnectors_UpdatePolicy_Channel_Week5 WEEK5 == 40d support.
 *        minimum 35d advanced notification {35d, 42d}. (Value: "WEEK5")
 */
@property(nonatomic, copy, nullable) NSString *channel;

/**
 *  Deny Maintenance Period that is applied to resource to indicate when
 *  maintenance is forbidden. The protocol supports zero-to-many such periods,
 *  but the current SLM Rollout implementation only supports zero-to-one.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_DenyMaintenancePeriod *> *denyMaintenancePeriods;

/**
 *  Optional. Maintenance window that is applied to resources covered by this
 *  policy.
 */
@property(nonatomic, strong, nullable) GTLRConnectors_MaintenanceWindow *window;

@end


/**
 *  Time window specified for weekly operations.
 */
@interface GTLRConnectors_WeeklyCycle : GTLRObject

/** User can specify multiple windows in a week. Minimum of 1 window. */
@property(nonatomic, strong, nullable) NSArray<GTLRConnectors_Schedule *> *schedule;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
