// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Identity-Aware Proxy API (iap/v1)
// Description:
//   Controls access to cloud applications running on Google Cloud Platform.
// Documentation:
//   https://cloud.google.com/iap

#import <GoogleAPIClientForREST/GTLRCloudIAPQuery.h>

@implementation GTLRCloudIAPQuery

@dynamic fields;

@end

@implementation GTLRCloudIAPQuery_ProjectsBrandsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudIAP_Brand *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/brands";
  GTLRCloudIAPQuery_ProjectsBrandsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudIAP_Brand class];
  query.loggingName = @"iap.projects.brands.create";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_ProjectsBrandsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudIAPQuery_ProjectsBrandsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudIAP_Brand class];
  query.loggingName = @"iap.projects.brands.get";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_ProjectsBrandsIdentityAwareProxyClientsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRCloudIAP_IdentityAwareProxyClient *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/identityAwareProxyClients";
  GTLRCloudIAPQuery_ProjectsBrandsIdentityAwareProxyClientsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudIAP_IdentityAwareProxyClient class];
  query.loggingName = @"iap.projects.brands.identityAwareProxyClients.create";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_ProjectsBrandsIdentityAwareProxyClientsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudIAPQuery_ProjectsBrandsIdentityAwareProxyClientsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudIAP_Empty class];
  query.loggingName = @"iap.projects.brands.identityAwareProxyClients.delete";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_ProjectsBrandsIdentityAwareProxyClientsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudIAPQuery_ProjectsBrandsIdentityAwareProxyClientsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudIAP_IdentityAwareProxyClient class];
  query.loggingName = @"iap.projects.brands.identityAwareProxyClients.get";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_ProjectsBrandsIdentityAwareProxyClientsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/identityAwareProxyClients";
  GTLRCloudIAPQuery_ProjectsBrandsIdentityAwareProxyClientsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudIAP_ListIdentityAwareProxyClientsResponse class];
  query.loggingName = @"iap.projects.brands.identityAwareProxyClients.list";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_ProjectsBrandsIdentityAwareProxyClientsResetSecret

@dynamic name;

+ (instancetype)queryWithObject:(GTLRCloudIAP_ResetIdentityAwareProxyClientSecretRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:resetSecret";
  GTLRCloudIAPQuery_ProjectsBrandsIdentityAwareProxyClientsResetSecret *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudIAP_IdentityAwareProxyClient class];
  query.loggingName = @"iap.projects.brands.identityAwareProxyClients.resetSecret";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_ProjectsBrandsList

@dynamic parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/brands";
  GTLRCloudIAPQuery_ProjectsBrandsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudIAP_ListBrandsResponse class];
  query.loggingName = @"iap.projects.brands.list";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_ProjectsIapTunnelLocationsDestGroupsCreate

@dynamic parent, tunnelDestGroupId;

+ (instancetype)queryWithObject:(GTLRCloudIAP_TunnelDestGroup *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/destGroups";
  GTLRCloudIAPQuery_ProjectsIapTunnelLocationsDestGroupsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudIAP_TunnelDestGroup class];
  query.loggingName = @"iap.projects.iap_tunnel.locations.destGroups.create";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_ProjectsIapTunnelLocationsDestGroupsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudIAPQuery_ProjectsIapTunnelLocationsDestGroupsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudIAP_Empty class];
  query.loggingName = @"iap.projects.iap_tunnel.locations.destGroups.delete";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_ProjectsIapTunnelLocationsDestGroupsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudIAPQuery_ProjectsIapTunnelLocationsDestGroupsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudIAP_TunnelDestGroup class];
  query.loggingName = @"iap.projects.iap_tunnel.locations.destGroups.get";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_ProjectsIapTunnelLocationsDestGroupsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/destGroups";
  GTLRCloudIAPQuery_ProjectsIapTunnelLocationsDestGroupsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRCloudIAP_ListTunnelDestGroupsResponse class];
  query.loggingName = @"iap.projects.iap_tunnel.locations.destGroups.list";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_ProjectsIapTunnelLocationsDestGroupsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudIAP_TunnelDestGroup *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRCloudIAPQuery_ProjectsIapTunnelLocationsDestGroupsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudIAP_TunnelDestGroup class];
  query.loggingName = @"iap.projects.iap_tunnel.locations.destGroups.patch";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_V1GetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudIAP_GetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRCloudIAPQuery_V1GetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudIAP_Policy class];
  query.loggingName = @"iap.getIamPolicy";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_V1GetIapSettings

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:iapSettings";
  GTLRCloudIAPQuery_V1GetIapSettings *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRCloudIAP_IapSettings class];
  query.loggingName = @"iap.getIapSettings";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_V1SetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudIAP_SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRCloudIAPQuery_V1SetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudIAP_Policy class];
  query.loggingName = @"iap.setIamPolicy";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_V1TestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRCloudIAP_TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRCloudIAPQuery_V1TestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRCloudIAP_TestIamPermissionsResponse class];
  query.loggingName = @"iap.testIamPermissions";
  return query;
}

@end

@implementation GTLRCloudIAPQuery_V1UpdateIapSettings

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRCloudIAP_IapSettings *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:iapSettings";
  GTLRCloudIAPQuery_V1UpdateIapSettings *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRCloudIAP_IapSettings class];
  query.loggingName = @"iap.updateIapSettings";
  return query;
}

@end
