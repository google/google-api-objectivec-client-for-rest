// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Workstations API (workstations/v1beta)
// Documentation:
//   https://cloud.google.com/workstations

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudWorkstations_AuditConfig;
@class GTLRCloudWorkstations_AuditLogConfig;
@class GTLRCloudWorkstations_Binding;
@class GTLRCloudWorkstations_Container;
@class GTLRCloudWorkstations_Container_Env;
@class GTLRCloudWorkstations_Expr;
@class GTLRCloudWorkstations_GceConfidentialInstanceConfig;
@class GTLRCloudWorkstations_GceInstance;
@class GTLRCloudWorkstations_GceRegionalPersistentDisk;
@class GTLRCloudWorkstations_GceShieldedInstanceConfig;
@class GTLRCloudWorkstations_Host;
@class GTLRCloudWorkstations_Operation;
@class GTLRCloudWorkstations_Operation_Metadata;
@class GTLRCloudWorkstations_Operation_Response;
@class GTLRCloudWorkstations_PersistentDirectory;
@class GTLRCloudWorkstations_Policy;
@class GTLRCloudWorkstations_PrivateClusterConfig;
@class GTLRCloudWorkstations_Status;
@class GTLRCloudWorkstations_Status_Details_Item;
@class GTLRCloudWorkstations_Workstation;
@class GTLRCloudWorkstations_Workstation_Annotations;
@class GTLRCloudWorkstations_Workstation_Labels;
@class GTLRCloudWorkstations_WorkstationCluster;
@class GTLRCloudWorkstations_WorkstationCluster_Annotations;
@class GTLRCloudWorkstations_WorkstationCluster_Labels;
@class GTLRCloudWorkstations_WorkstationConfig;
@class GTLRCloudWorkstations_WorkstationConfig_Annotations;
@class GTLRCloudWorkstations_WorkstationConfig_Labels;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRCloudWorkstations_AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_AuditLogConfig_LogType_LogTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudWorkstations_GceRegionalPersistentDisk.reclaimPolicy

/**
 *  The persistent disk will be deleted with the workstation.
 *
 *  Value: "DELETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_GceRegionalPersistentDisk_ReclaimPolicy_Delete;
/**
 *  Do not use.
 *
 *  Value: "RECLAIM_POLICY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_GceRegionalPersistentDisk_ReclaimPolicy_ReclaimPolicyUnspecified;
/**
 *  The persistent disk will be remain after the workstation is deleted, and the
 *  administrator must manually delete the disk.
 *
 *  Value: "RETAIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_GceRegionalPersistentDisk_ReclaimPolicy_Retain;

// ----------------------------------------------------------------------------
// GTLRCloudWorkstations_Workstation.state

/**
 *  The workstation is ready to accept requests from users.
 *
 *  Value: "STATE_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_Workstation_State_StateRunning;
/**
 *  The workstation is not yet ready to accept requests from users but will be
 *  soon.
 *
 *  Value: "STATE_STARTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_Workstation_State_StateStarting;
/**
 *  The workstation is stopped and will not be able to receive requests until it
 *  is started.
 *
 *  Value: "STATE_STOPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_Workstation_State_StateStopped;
/**
 *  The workstation is being stopped.
 *
 *  Value: "STATE_STOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_Workstation_State_StateStopping;
/**
 *  Do not use.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_Workstation_State_StateUnspecified;

/**
 *  Specifies the audit configuration for a service. The configuration
 *  determines which permission types are logged, and what identities, if any,
 *  are exempted from logging. An AuditConfig must have one or more
 *  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
 *  specific service, the union of the two AuditConfigs is used for that
 *  service: the log_types specified in each AuditConfig are enabled, and the
 *  exempted_members in each AuditLogConfig are exempted. Example Policy with
 *  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
 *  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
 *  "DATA_WRITE", "exempted_members": [ "user:aliya\@example.com" ] } ] } ] }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts `jose\@example.com` from DATA_READ logging, and
 *  `aliya\@example.com` from DATA_WRITE logging.
 */
@interface GTLRCloudWorkstations_AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging. For example,
 *  `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions. Example: {
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
 *  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose\@example.com from
 *  DATA_READ logging.
 */
@interface GTLRCloudWorkstations_AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission. Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudWorkstations_AuditLogConfig_LogType_AdminRead Admin
 *        reads. Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRCloudWorkstations_AuditLogConfig_LogType_DataRead Data reads.
 *        Example: CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRCloudWorkstations_AuditLogConfig_LogType_DataWrite Data
 *        writes. Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRCloudWorkstations_AuditLogConfig_LogType_LogTypeUnspecified
 *        Default case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRCloudWorkstations_Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Expr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`:
 *  An email address (plus unique identifier) representing a user that has been
 *  recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. * `domain:{domain}`: The G Suite domain (primary) that
 *  represents all the users of that domain. For example, `google.com` or
 *  `example.com`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  The request message for Operations.CancelOperation.
 */
@interface GTLRCloudWorkstations_CancelOperationRequest : GTLRObject
@end


/**
 *  A Docker container.
 */
@interface GTLRCloudWorkstations_Container : GTLRObject

/** Arguments passed to the entrypoint. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *args;

/** If set, overrides the default ENTRYPOINT specified by the image. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *command;

/** Environment variables passed to the container. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Container_Env *env;

/**
 *  Docker image defining the container. This image must be accessible by the
 *  config's service account.
 */
@property(nonatomic, copy, nullable) NSString *image;

/**
 *  If set, overrides the USER specified in the image with the given uid.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *runAsUser;

/** If set, overrides the default DIR specified by the image. */
@property(nonatomic, copy, nullable) NSString *workingDir;

@end


/**
 *  Environment variables passed to the container.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_Container_Env : GTLRObject
@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRCloudWorkstations_Empty : GTLRObject
@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRCloudWorkstations_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  A set of Compute Engine Confidential VM instance options.
 */
@interface GTLRCloudWorkstations_GceConfidentialInstanceConfig : GTLRObject

/**
 *  Whether the instance has confidential compute enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableConfidentialCompute;

@end


/**
 *  A runtime using a Compute Engine instance.
 */
@interface GTLRCloudWorkstations_GceInstance : GTLRObject

/**
 *  Size of the boot disk in GB.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bootDiskSizeGb;

/** A set of Compute Engine Confidential VM instance options. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_GceConfidentialInstanceConfig *confidentialInstanceConfig;

/**
 *  Whether instances have no public IP address.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disablePublicIpAddresses;

/** The name of a Compute Engine machine type. */
@property(nonatomic, copy, nullable) NSString *machineType;

/**
 *  Number of instances to pool for faster workstation starup.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *poolSize;

/**
 *  Email address of the service account that will be used on VM instances used
 *  to support this config. This service account must have permission to pull
 *  the specified container image. If not set, VMs will run without a service
 *  account, in which case the image must be publicly accessible.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/** A set of Compute Engine Shielded instance options. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_GceShieldedInstanceConfig *shieldedInstanceConfig;

/**
 *  Network tags to add to the Compute Engine machines backing the Workstations.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tags;

@end


/**
 *  A PersistentDirectory backed by a Compute Engine regional persistent disk.
 */
@interface GTLRCloudWorkstations_GceRegionalPersistentDisk : GTLRObject

/** Type of the disk to use. */
@property(nonatomic, copy, nullable) NSString *diskType;

/**
 *  Type of file system that the disk should be formatted with. The workstation
 *  image must support this file system type. Must be empty if source_snapshot
 *  is set.
 */
@property(nonatomic, copy, nullable) NSString *fsType;

/**
 *  What should happen to the disk after the workstation is deleted. Defaults to
 *  DELETE.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudWorkstations_GceRegionalPersistentDisk_ReclaimPolicy_Delete
 *        The persistent disk will be deleted with the workstation. (Value:
 *        "DELETE")
 *    @arg @c kGTLRCloudWorkstations_GceRegionalPersistentDisk_ReclaimPolicy_ReclaimPolicyUnspecified
 *        Do not use. (Value: "RECLAIM_POLICY_UNSPECIFIED")
 *    @arg @c kGTLRCloudWorkstations_GceRegionalPersistentDisk_ReclaimPolicy_Retain
 *        The persistent disk will be remain after the workstation is deleted,
 *        and the administrator must manually delete the disk. (Value: "RETAIN")
 */
@property(nonatomic, copy, nullable) NSString *reclaimPolicy;

/**
 *  Size of the disk in GB. Must be empty if source_snapshot is set.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeGb;

@end


/**
 *  A set of Compute Engine Shielded instance options.
 */
@interface GTLRCloudWorkstations_GceShieldedInstanceConfig : GTLRObject

/**
 *  Whether the instance has integrity monitoring enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableIntegrityMonitoring;

/**
 *  Whether the instance has Secure Boot enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableSecureBoot;

/**
 *  Whether the instance has the vTPM enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableVtpm;

@end


/**
 *  Request message for GenerateAccessToken.
 */
@interface GTLRCloudWorkstations_GenerateAccessTokenRequest : GTLRObject

/**
 *  Desired expiration time of the access token. This value must be at most 24
 *  hours in the future. If a value is not specified, the token's expiration
 *  time will be set to a default value of 1 hour in the future.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *expireTime;

/**
 *  Desired lifetime duration of the access token. This value must be at most 24
 *  hours. If a value is not specified, the token's lifetime will be set to a
 *  default value of 1 hour.
 */
@property(nonatomic, strong, nullable) GTLRDuration *ttl;

@end


/**
 *  Response message for GenerateAccessToken.
 */
@interface GTLRCloudWorkstations_GenerateAccessTokenResponse : GTLRObject

/**
 *  The generated bearer access token. To use this token, include it in an
 *  Authorization header of an HTTP request sent to the associated workstation's
 *  hostname, e.g. "Authorization: Bearer ".
 */
@property(nonatomic, copy, nullable) NSString *accessToken;

/** Time at which the generated token will expire. */
@property(nonatomic, strong, nullable) GTLRDateTime *expireTime;

@end


/**
 *  Runtime host for a workstation.
 */
@interface GTLRCloudWorkstations_Host : GTLRObject

/** Specifies a Compute Engine instance as the host. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_GceInstance *gceInstance;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudWorkstations_ListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Operation *> *operations;

@end


/**
 *  Response message for ListUsableWorkstationConfigs.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workstationConfigs" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRCloudWorkstations_ListUsableWorkstationConfigsResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  The requested configs.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_WorkstationConfig *> *workstationConfigs;

@end


/**
 *  Response message for ListUsableWorkstations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workstations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudWorkstations_ListUsableWorkstationsResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  The requested workstations.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Workstation *> *workstations;

@end


/**
 *  Response message for ListWorkstationClusters.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workstationClusters" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRCloudWorkstations_ListWorkstationClustersResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  The requested clusters.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_WorkstationCluster *> *workstationClusters;

@end


/**
 *  Response message for ListWorkstationConfigs.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workstationConfigs" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRCloudWorkstations_ListWorkstationConfigsResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  The requested configs.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_WorkstationConfig *> *workstationConfigs;

@end


/**
 *  Response message for ListWorkstations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workstations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudWorkstations_ListWorkstationsResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  The requested workstations.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Workstation *> *workstations;

@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRCloudWorkstations_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudWorkstations_Operation_Metadata : GTLRObject
@end


/**
 *  The normal response of the operation in case of success. If the original
 *  method returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudWorkstations_Operation_Response : GTLRObject
@end


/**
 *  Represents the metadata of the long-running operation.
 */
@interface GTLRCloudWorkstations_OperationMetadata : GTLRObject

/** Output only. API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/**
 *  Output only. Identifies whether the user has requested cancellation of the
 *  operation. Operations that have been cancelled successfully have
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *cancelRequested;

/** Output only. The time the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. The time the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/** Output only. Human-readable status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusDetail;

/**
 *  Output only. Server-defined resource path for the target of the operation.
 */
@property(nonatomic, copy, nullable) NSString *target;

/** Output only. Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  A directory to persist across workstation sessions.
 */
@interface GTLRCloudWorkstations_PersistentDirectory : GTLRObject

/** A PersistentDirectory backed by a Compute Engine persistent disk. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_GceRegionalPersistentDisk *gcePd;

/** Location of this directory in the running workstation. */
@property(nonatomic, copy, nullable) NSString *mountPath;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
 *  user:mike\@example.com - group:admins\@example.com - domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRCloudWorkstations_Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  Configuration options for private clusters.
 */
@interface GTLRCloudWorkstations_PrivateClusterConfig : GTLRObject

/**
 *  Output only. Hostname for the workstation cluster. This field will be
 *  populated only when private endpoint is enabled. To access workstations in
 *  the cluster, create a new DNS zone mapping this domain name to an internal
 *  IP address and a forwarding rule mapping that address to the service
 *  attachment.
 */
@property(nonatomic, copy, nullable) NSString *clusterHostname;

/**
 *  Immutable. Whether Workstations endpoint is private.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enablePrivateEndpoint;

/**
 *  Output only. Service attachment URI for the workstation cluster. The service
 *  attachemnt is created when private endpoint is enabled. To access
 *  workstations in the cluster, configure access to the managed service using
 *  (Private Service
 *  Connect)[https://cloud.google.com/vpc/docs/configure-private-service-connect-services].
 */
@property(nonatomic, copy, nullable) NSString *serviceAttachmentUri;

@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRCloudWorkstations_SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Google Cloud services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Policy *policy;

/**
 *  OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
 *  the fields in the mask will be modified. If no mask is provided, the
 *  following default mask is used: `paths: "bindings, etag"`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Request message for StartWorkstation.
 */
@interface GTLRCloudWorkstations_StartWorkstationRequest : GTLRObject

/**
 *  If set, the request will be rejected if the latest version of the
 *  workstation on the server does not have this etag.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  If set, validate the request and preview the review, but do not actually
 *  apply it.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRCloudWorkstations_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCloudWorkstations_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudWorkstations_Status_Details_Item : GTLRObject
@end


/**
 *  Request message for StopWorkstation.
 */
@interface GTLRCloudWorkstations_StopWorkstationRequest : GTLRObject

/**
 *  If set, the request will be rejected if the latest version of the
 *  workstation on the server does not have this etag.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  If set, validate the request and preview the review, but do not actually
 *  apply it.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRCloudWorkstations_TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRCloudWorkstations_TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  A single instance of a developer workstation with its own persistent
 *  storage.
 */
@interface GTLRCloudWorkstations_Workstation : GTLRObject

/** Client-specified annotations. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Workstation_Annotations *annotations;

/** Output only. Time when this resource was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. Time when this resource was soft-deleted. */
@property(nonatomic, strong, nullable) GTLRDateTime *deleteTime;

/** Human-readable name for this resource. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Checksum computed by the server. May be sent on update and delete requests
 *  to ensure that the client has an up-to-date value before proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Output only. Host to which clients can send HTTPS traffic that will be
 *  received by the workstation. Authorized traffic will be received to the
 *  workstation as HTTP on port 80. To send traffic to a different port, clients
 *  may prefix the host with the destination port in the format "{port}-{host}".
 */
@property(nonatomic, copy, nullable) NSString *host;

/**
 *  Client-specified labels that are applied to the resource and that are also
 *  propagated to the underlying Compute Engine resources.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Workstation_Labels *labels;

/** Full name of this resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Indicates whether this resource is currently being updated to
 *  match its intended state.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Output only. Current state of the workstation.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudWorkstations_Workstation_State_StateRunning The
 *        workstation is ready to accept requests from users. (Value:
 *        "STATE_RUNNING")
 *    @arg @c kGTLRCloudWorkstations_Workstation_State_StateStarting The
 *        workstation is not yet ready to accept requests from users but will be
 *        soon. (Value: "STATE_STARTING")
 *    @arg @c kGTLRCloudWorkstations_Workstation_State_StateStopped The
 *        workstation is stopped and will not be able to receive requests until
 *        it is started. (Value: "STATE_STOPPED")
 *    @arg @c kGTLRCloudWorkstations_Workstation_State_StateStopping The
 *        workstation is being stopped. (Value: "STATE_STOPPING")
 *    @arg @c kGTLRCloudWorkstations_Workstation_State_StateUnspecified Do not
 *        use. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. A system-assigned unique identified for this resource. */
@property(nonatomic, copy, nullable) NSString *uid;

/** Output only. Time when this resource was most recently updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Client-specified annotations.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_Workstation_Annotations : GTLRObject
@end


/**
 *  Client-specified labels that are applied to the resource and that are also
 *  propagated to the underlying Compute Engine resources.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_Workstation_Labels : GTLRObject
@end


/**
 *  A grouping of workstation configurations and the associated workstations in
 *  that region.
 */
@interface GTLRCloudWorkstations_WorkstationCluster : GTLRObject

/** Client-specified annotations. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_WorkstationCluster_Annotations *annotations;

/** Output only. Status conditions describing the current resource state. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Status *> *conditions;

/** Output only. Time when this resource was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. Whether this resource is in degraded mode, in which case it may
 *  require user action to restore full functionality. Details can be found in
 *  the `conditions` field.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *degraded;

/** Output only. Time when this resource was soft-deleted. */
@property(nonatomic, strong, nullable) GTLRDateTime *deleteTime;

/** Human-readable name for this resource. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Checksum computed by the server. May be sent on update and delete requests
 *  to ensure that the client has an up-to-date value before proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Client-specified labels that are applied to the resource and that are also
 *  propagated to the underlying Compute Engine resources.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_WorkstationCluster_Labels *labels;

/** Full name of this resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Immutable. Name of the Compute Engine network in which instances associated
 *  with this cluster will be created.
 */
@property(nonatomic, copy, nullable) NSString *network;

/** Configuration for private cluster. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_PrivateClusterConfig *privateClusterConfig;

/**
 *  Output only. Indicates whether this resource is currently being updated to
 *  match its intended state.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Immutable. Name of the Compute Engine subnetwork in which instances
 *  associated with this cluster will be created. Must be part of the subnetwork
 *  specified for this cluster.
 */
@property(nonatomic, copy, nullable) NSString *subnetwork;

/** Output only. A system-assigned unique identified for this resource. */
@property(nonatomic, copy, nullable) NSString *uid;

/** Output only. Time when this resource was most recently updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Client-specified annotations.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_WorkstationCluster_Annotations : GTLRObject
@end


/**
 *  Client-specified labels that are applied to the resource and that are also
 *  propagated to the underlying Compute Engine resources.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_WorkstationCluster_Labels : GTLRObject
@end


/**
 *  A set of configuration options describing how a workstation will be run.
 *  Workstation configurations are intended to be shared across multiple
 *  workstations.
 */
@interface GTLRCloudWorkstations_WorkstationConfig : GTLRObject

/** Client-specified annotations. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_WorkstationConfig_Annotations *annotations;

/** Output only. Status conditions describing the current resource state. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Status *> *conditions;

/**
 *  Container that will be run for each workstation using this configuration
 *  when that workstation is started.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Container *container;

/** Output only. Time when this resource was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. Whether this resource is in degraded mode, in which case it may
 *  require user action to restore full functionality. Details can be found in
 *  the `conditions` field.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *degraded;

/** Output only. Time when this resource was soft-deleted. */
@property(nonatomic, strong, nullable) GTLRDateTime *deleteTime;

/** Human-readable name for this resource. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Checksum computed by the server. May be sent on update and delete requests
 *  to ensure that the client has an up-to-date value before proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** Runtime host for the workstation. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Host *host;

/**
 *  How long to wait before automatically stopping an instance that hasn't
 *  received any user traffic. A value of 0 indicates that this instance should
 *  never time out due to idleness. Defaults to 20 minutes.
 */
@property(nonatomic, strong, nullable) GTLRDuration *idleTimeout;

/**
 *  Client-specified labels that are applied to the resource and that are also
 *  propagated to the underlying Compute Engine resources.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_WorkstationConfig_Labels *labels;

/** Full name of this resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** Directories to persist across workstation sessions. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_PersistentDirectory *> *persistentDirectories;

/**
 *  Output only. Indicates whether this resource is currently being updated to
 *  match its intended state.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  How long to wait before automatically stopping a workstation after it
 *  started. A value of 0 indicates that workstations using this config should
 *  never time out. Must be greater than 0 and less than 24 hours if
 *  encryption_key is set. Defaults to 12 hours.
 */
@property(nonatomic, strong, nullable) GTLRDuration *runningTimeout;

/** Output only. A system-assigned unique identified for this resource. */
@property(nonatomic, copy, nullable) NSString *uid;

/** Output only. Time when this resource was most recently updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Client-specified annotations.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_WorkstationConfig_Annotations : GTLRObject
@end


/**
 *  Client-specified labels that are applied to the resource and that are also
 *  propagated to the underlying Compute Engine resources.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_WorkstationConfig_Labels : GTLRObject
@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
