// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Cloud Workstations API (workstations/v1)
// Description:
//   Allows administrators to create managed developer environments in the
//   cloud.
// Documentation:
//   https://cloud.google.com/workstations

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCloudWorkstations_Accelerator;
@class GTLRCloudWorkstations_AuditConfig;
@class GTLRCloudWorkstations_AuditLogConfig;
@class GTLRCloudWorkstations_Binding;
@class GTLRCloudWorkstations_Container;
@class GTLRCloudWorkstations_Container_Env;
@class GTLRCloudWorkstations_CustomerEncryptionKey;
@class GTLRCloudWorkstations_DomainConfig;
@class GTLRCloudWorkstations_EphemeralDirectory;
@class GTLRCloudWorkstations_Expr;
@class GTLRCloudWorkstations_GceConfidentialInstanceConfig;
@class GTLRCloudWorkstations_GceInstance;
@class GTLRCloudWorkstations_GceInstance_VmTags;
@class GTLRCloudWorkstations_GcePersistentDisk;
@class GTLRCloudWorkstations_GceRegionalPersistentDisk;
@class GTLRCloudWorkstations_GceShieldedInstanceConfig;
@class GTLRCloudWorkstations_Host;
@class GTLRCloudWorkstations_Location;
@class GTLRCloudWorkstations_Location_Labels;
@class GTLRCloudWorkstations_Location_Metadata;
@class GTLRCloudWorkstations_Operation;
@class GTLRCloudWorkstations_Operation_Metadata;
@class GTLRCloudWorkstations_Operation_Response;
@class GTLRCloudWorkstations_PersistentDirectory;
@class GTLRCloudWorkstations_Policy;
@class GTLRCloudWorkstations_PortRange;
@class GTLRCloudWorkstations_PrivateClusterConfig;
@class GTLRCloudWorkstations_ReadinessCheck;
@class GTLRCloudWorkstations_Status;
@class GTLRCloudWorkstations_Status_Details_Item;
@class GTLRCloudWorkstations_Workstation;
@class GTLRCloudWorkstations_Workstation_Annotations;
@class GTLRCloudWorkstations_Workstation_Env;
@class GTLRCloudWorkstations_Workstation_Labels;
@class GTLRCloudWorkstations_WorkstationCluster;
@class GTLRCloudWorkstations_WorkstationCluster_Annotations;
@class GTLRCloudWorkstations_WorkstationCluster_Labels;
@class GTLRCloudWorkstations_WorkstationConfig;
@class GTLRCloudWorkstations_WorkstationConfig_Annotations;
@class GTLRCloudWorkstations_WorkstationConfig_Labels;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRCloudWorkstations_AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_AuditLogConfig_LogType_LogTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCloudWorkstations_GceRegionalPersistentDisk.reclaimPolicy

/**
 *  Delete the persistent disk when deleting the workstation.
 *
 *  Value: "DELETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_GceRegionalPersistentDisk_ReclaimPolicy_Delete;
/**
 *  Do not use.
 *
 *  Value: "RECLAIM_POLICY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_GceRegionalPersistentDisk_ReclaimPolicy_ReclaimPolicyUnspecified;
/**
 *  Keep the persistent disk when deleting the workstation. An administrator
 *  must manually delete the disk.
 *
 *  Value: "RETAIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_GceRegionalPersistentDisk_ReclaimPolicy_Retain;

// ----------------------------------------------------------------------------
// GTLRCloudWorkstations_Workstation.state

/**
 *  The workstation is ready to accept requests from users.
 *
 *  Value: "STATE_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_Workstation_State_StateRunning;
/**
 *  The workstation is not yet ready to accept requests from users but will be
 *  soon.
 *
 *  Value: "STATE_STARTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_Workstation_State_StateStarting;
/**
 *  The workstation is stopped and will not be able to receive requests until it
 *  is started.
 *
 *  Value: "STATE_STOPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_Workstation_State_StateStopped;
/**
 *  The workstation is being stopped.
 *
 *  Value: "STATE_STOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_Workstation_State_StateStopping;
/**
 *  Do not use.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCloudWorkstations_Workstation_State_StateUnspecified;

/**
 *  An accelerator card attached to the instance.
 */
@interface GTLRCloudWorkstations_Accelerator : GTLRObject

/**
 *  Optional. Number of accelerator cards exposed to the instance.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/**
 *  Optional. Type of accelerator resource to attach to the instance, for
 *  example, `"nvidia-tesla-p100"`.
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Specifies the audit configuration for a service. The configuration
 *  determines which permission types are logged, and what identities, if any,
 *  are exempted from logging. An AuditConfig must have one or more
 *  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
 *  specific service, the union of the two AuditConfigs is used for that
 *  service: the log_types specified in each AuditConfig are enabled, and the
 *  exempted_members in each AuditLogConfig are exempted. Example Policy with
 *  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
 *  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
 *  "DATA_WRITE", "exempted_members": [ "user:aliya\@example.com" ] } ] } ] }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts `jose\@example.com` from DATA_READ logging, and
 *  `aliya\@example.com` from DATA_WRITE logging.
 */
@interface GTLRCloudWorkstations_AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_AuditLogConfig *> *auditLogConfigs;

/**
 *  Specifies a service that will be enabled for audit logging. For example,
 *  `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions. Example: {
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
 *  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose\@example.com from
 *  DATA_READ logging.
 */
@interface GTLRCloudWorkstations_AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission. Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudWorkstations_AuditLogConfig_LogType_AdminRead Admin
 *        reads. Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRCloudWorkstations_AuditLogConfig_LogType_DataRead Data reads.
 *        Example: CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRCloudWorkstations_AuditLogConfig_LogType_DataWrite Data
 *        writes. Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRCloudWorkstations_AuditLogConfig_LogType_LogTypeUnspecified
 *        Default case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRCloudWorkstations_Binding : GTLRObject

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Expr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `domain:{domain}`: The G Suite domain
 *  (primary) that represents all the users of that domain. For example,
 *  `google.com` or `example.com`. *
 *  `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
 *  A single identity in a workforce identity pool. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`:
 *  All workforce identities in a group. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
 *  All workforce identities with a specific attribute value. *
 *  `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/
 *  *`: All identities in a workforce identity pool. *
 *  `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`:
 *  A single identity in a workload identity pool. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`:
 *  A workload identity pool group. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`:
 *  All identities in a workload identity pool with a certain attribute. *
 *  `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/
 *  *`: All identities in a workload identity pool. *
 *  `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
 *  identifier) representing a user that has been recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. *
 *  `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`:
 *  Deleted single identity in a workforce identity pool. For example,
 *  `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM
 *  roles and permissions, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/roles-overview). For a list
 *  of the available pre-defined roles, see
 *  [here](https://cloud.google.com/iam/docs/understanding-roles).
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  The request message for Operations.CancelOperation.
 */
@interface GTLRCloudWorkstations_CancelOperationRequest : GTLRObject
@end


/**
 *  A Docker container.
 */
@interface GTLRCloudWorkstations_Container : GTLRObject

/** Optional. Arguments passed to the entrypoint. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *args;

/**
 *  Optional. If set, overrides the default ENTRYPOINT specified by the image.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *command;

/** Optional. Environment variables passed to the container's entrypoint. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Container_Env *env;

/**
 *  Optional. A Docker container image that defines a custom environment. Cloud
 *  Workstations provides a number of [preconfigured
 *  images](https://cloud.google.com/workstations/docs/preconfigured-base-images),
 *  but you can create your own [custom container
 *  images](https://cloud.google.com/workstations/docs/custom-container-images).
 *  If using a private image, the `host.gceInstance.serviceAccount` field must
 *  be specified in the workstation configuration. If using a custom container
 *  image, the service account must have [Artifact Registry
 *  Reader](https://cloud.google.com/artifact-registry/docs/access-control#roles)
 *  permission to pull the specified image. Otherwise, the image must be
 *  publicly accessible.
 */
@property(nonatomic, copy, nullable) NSString *image;

/**
 *  Optional. If set, overrides the USER specified in the image with the given
 *  uid.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *runAsUser;

/** Optional. If set, overrides the default DIR specified by the image. */
@property(nonatomic, copy, nullable) NSString *workingDir;

@end


/**
 *  Optional. Environment variables passed to the container's entrypoint.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_Container_Env : GTLRObject
@end


/**
 *  A customer-managed encryption key (CMEK) for the Compute Engine resources of
 *  the associated workstation configuration. Specify the name of your Cloud KMS
 *  encryption key and the default service account. We recommend that you use a
 *  separate service account and follow [Cloud KMS best
 *  practices](https://cloud.google.com/kms/docs/separation-of-duties).
 */
@interface GTLRCloudWorkstations_CustomerEncryptionKey : GTLRObject

/**
 *  Immutable. The name of the Google Cloud KMS encryption key. For example,
 *  `"projects/PROJECT_ID/locations/REGION/keyRings/KEY_RING/cryptoKeys/KEY_NAME"`.
 *  The key must be in the same region as the workstation configuration.
 */
@property(nonatomic, copy, nullable) NSString *kmsKey;

/**
 *  Immutable. The service account to use with the specified KMS key. We
 *  recommend that you use a separate service account and follow KMS best
 *  practices. For more information, see [Separation of
 *  duties](https://cloud.google.com/kms/docs/separation-of-duties) and `gcloud
 *  kms keys add-iam-policy-binding`
 *  [`--member`](https://cloud.google.com/sdk/gcloud/reference/kms/keys/add-iam-policy-binding#--member).
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyServiceAccount;

@end


/**
 *  Configuration options for a custom domain.
 */
@interface GTLRCloudWorkstations_DomainConfig : GTLRObject

/** Immutable. Domain used by Workstations for HTTP ingress. */
@property(nonatomic, copy, nullable) NSString *domain;

@end


/**
 *  An ephemeral directory which won't persist across workstation sessions. It
 *  is freshly created on every workstation start operation.
 */
@interface GTLRCloudWorkstations_EphemeralDirectory : GTLRObject

/** An EphemeralDirectory backed by a Compute Engine persistent disk. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_GcePersistentDisk *gcePd;

/** Required. Location of this directory in the running workstation. */
@property(nonatomic, copy, nullable) NSString *mountPath;

@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRCloudWorkstations_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  A set of Compute Engine Confidential VM instance options.
 */
@interface GTLRCloudWorkstations_GceConfidentialInstanceConfig : GTLRObject

/**
 *  Optional. Whether the instance has confidential compute enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableConfidentialCompute;

@end


/**
 *  A runtime using a Compute Engine instance.
 */
@interface GTLRCloudWorkstations_GceInstance : GTLRObject

/**
 *  Optional. A list of the type and count of accelerator cards attached to the
 *  instance.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Accelerator *> *accelerators;

/**
 *  Optional. The size of the boot disk for the VM in gigabytes (GB). The
 *  minimum boot disk size is `30` GB. Defaults to `50` GB.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bootDiskSizeGb;

/** Optional. A set of Compute Engine Confidential VM instance options. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_GceConfidentialInstanceConfig *confidentialInstanceConfig;

/**
 *  Optional. When set to true, disables public IP addresses for VMs. If you
 *  disable public IP addresses, you must set up Private Google Access or Cloud
 *  NAT on your network. If you use Private Google Access and you use
 *  `private.googleapis.com` or `restricted.googleapis.com` for Container
 *  Registry and Artifact Registry, make sure that you set up DNS records for
 *  domains `*.gcr.io` and `*.pkg.dev`. Defaults to false (VMs have public IP
 *  addresses).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disablePublicIpAddresses;

/**
 *  Optional. Whether to disable SSH access to the VM.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableSsh;

/**
 *  Optional. Whether to enable nested virtualization on Cloud Workstations VMs
 *  created using this workstation configuration. Defaults to false. Nested
 *  virtualization lets you run virtual machine (VM) instances inside your
 *  workstation. Before enabling nested virtualization, consider the following
 *  important considerations. Cloud Workstations instances are subject to the
 *  [same restrictions as Compute Engine
 *  instances](https://cloud.google.com/compute/docs/instances/nested-virtualization/overview#restrictions):
 *  * **Organization policy**: projects, folders, or organizations may be
 *  restricted from creating nested VMs if the **Disable VM nested
 *  virtualization** constraint is enforced in the organization policy. For more
 *  information, see the Compute Engine section, [Checking whether nested
 *  virtualization is
 *  allowed](https://cloud.google.com/compute/docs/instances/nested-virtualization/managing-constraint#checking_whether_nested_virtualization_is_allowed).
 *  * **Performance**: nested VMs might experience a 10% or greater decrease in
 *  performance for workloads that are CPU-bound and possibly greater than a 10%
 *  decrease for workloads that are input/output bound. * **Machine Type**:
 *  nested virtualization can only be enabled on workstation configurations that
 *  specify a machine_type in the N1 or N2 machine series.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableNestedVirtualization;

/**
 *  Optional. The type of machine to use for VM instances—for example,
 *  `"e2-standard-4"`. For more information about machine types that Cloud
 *  Workstations supports, see the list of [available machine
 *  types](https://cloud.google.com/workstations/docs/available-machine-types).
 */
@property(nonatomic, copy, nullable) NSString *machineType;

/**
 *  Output only. Number of instances currently available in the pool for faster
 *  workstation startup.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pooledInstances;

/**
 *  Optional. The number of VMs that the system should keep idle so that new
 *  workstations can be started quickly for new users. Defaults to `0` in the
 *  API.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *poolSize;

/**
 *  Optional. The email address of the service account for Cloud Workstations
 *  VMs created with this configuration. When specified, be sure that the
 *  service account has `logging.logEntries.create` and
 *  `monitoring.timeSeries.create` permissions on the project so it can write
 *  logs out to Cloud Logging. If using a custom container image, the service
 *  account must have [Artifact Registry
 *  Reader](https://cloud.google.com/artifact-registry/docs/access-control#roles)
 *  permission to pull the specified image. If you as the administrator want to
 *  be able to `ssh` into the underlying VM, you need to set this value to a
 *  service account for which you have the `iam.serviceAccounts.actAs`
 *  permission. Conversely, if you don't want anyone to be able to `ssh` into
 *  the underlying VM, use a service account where no one has that permission.
 *  If not set, VMs run with a service account provided by the Cloud
 *  Workstations service, and the image must be publicly accessible.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/**
 *  Optional. Scopes to grant to the service_account. When specified, users of
 *  workstations under this configuration must have `iam.serviceAccounts.actAs`
 *  on the service account.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *serviceAccountScopes;

/** Optional. A set of Compute Engine Shielded instance options. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_GceShieldedInstanceConfig *shieldedInstanceConfig;

/**
 *  Optional. Network tags to add to the Compute Engine VMs backing the
 *  workstations. This option applies [network
 *  tags](https://cloud.google.com/vpc/docs/add-remove-network-tags) to VMs
 *  created with this configuration. These network tags enable the creation of
 *  [firewall
 *  rules](https://cloud.google.com/workstations/docs/configure-firewall-rules).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tags;

/**
 *  Optional. Resource manager tags to be bound to this instance. Tag keys and
 *  values have the same definition as [resource manager
 *  tags](https://cloud.google.com/resource-manager/docs/tags/tags-overview).
 *  Keys must be in the format `tagKeys/{tag_key_id}`, and values are in the
 *  format `tagValues/456`.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_GceInstance_VmTags *vmTags;

@end


/**
 *  Optional. Resource manager tags to be bound to this instance. Tag keys and
 *  values have the same definition as [resource manager
 *  tags](https://cloud.google.com/resource-manager/docs/tags/tags-overview).
 *  Keys must be in the format `tagKeys/{tag_key_id}`, and values are in the
 *  format `tagValues/456`.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_GceInstance_VmTags : GTLRObject
@end


/**
 *  An EphemeralDirectory is backed by a Compute Engine persistent disk.
 */
@interface GTLRCloudWorkstations_GcePersistentDisk : GTLRObject

/** Optional. Type of the disk to use. Defaults to `"pd-standard"`. */
@property(nonatomic, copy, nullable) NSString *diskType;

/**
 *  Optional. Whether the disk is read only. If true, the disk may be shared by
 *  multiple VMs and source_snapshot must be set.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *readOnly;

/**
 *  Optional. Name of the disk image to use as the source for the disk. Must be
 *  empty if source_snapshot is set. Updating source_image will update content
 *  in the ephemeral directory after the workstation is restarted. This field is
 *  mutable.
 */
@property(nonatomic, copy, nullable) NSString *sourceImage;

/**
 *  Optional. Name of the snapshot to use as the source for the disk. Must be
 *  empty if source_image is set. Must be empty if read_only is false. Updating
 *  source_snapshot will update content in the ephemeral directory after the
 *  workstation is restarted. This field is mutable.
 */
@property(nonatomic, copy, nullable) NSString *sourceSnapshot;

@end


/**
 *  A Persistent Directory backed by a Compute Engine regional persistent disk.
 *  The persistent_directories field is repeated, but it may contain only one
 *  entry. It creates a [persistent
 *  disk](https://cloud.google.com/compute/docs/disks/persistent-disks) that
 *  mounts to the workstation VM at `/home` when the session starts and detaches
 *  when the session ends. If this field is empty, workstations created with
 *  this configuration do not have a persistent home directory.
 */
@interface GTLRCloudWorkstations_GceRegionalPersistentDisk : GTLRObject

/**
 *  Optional. The [type of the persistent
 *  disk](https://cloud.google.com/compute/docs/disks#disk-types) for the home
 *  directory. Defaults to `"pd-standard"`.
 */
@property(nonatomic, copy, nullable) NSString *diskType;

/**
 *  Optional. Type of file system that the disk should be formatted with. The
 *  workstation image must support this file system type. Must be empty if
 *  source_snapshot is set. Defaults to `"ext4"`.
 */
@property(nonatomic, copy, nullable) NSString *fsType;

/**
 *  Optional. Whether the persistent disk should be deleted when the workstation
 *  is deleted. Valid values are `DELETE` and `RETAIN`. Defaults to `DELETE`.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudWorkstations_GceRegionalPersistentDisk_ReclaimPolicy_Delete
 *        Delete the persistent disk when deleting the workstation. (Value:
 *        "DELETE")
 *    @arg @c kGTLRCloudWorkstations_GceRegionalPersistentDisk_ReclaimPolicy_ReclaimPolicyUnspecified
 *        Do not use. (Value: "RECLAIM_POLICY_UNSPECIFIED")
 *    @arg @c kGTLRCloudWorkstations_GceRegionalPersistentDisk_ReclaimPolicy_Retain
 *        Keep the persistent disk when deleting the workstation. An
 *        administrator must manually delete the disk. (Value: "RETAIN")
 */
@property(nonatomic, copy, nullable) NSString *reclaimPolicy;

/**
 *  Optional. The GB capacity of a persistent home directory for each
 *  workstation created with this configuration. Must be empty if
 *  source_snapshot is set. Valid values are `10`, `50`, `100`, `200`, `500`, or
 *  `1000`. Defaults to `200`. If less than `200` GB, the disk_type must be
 *  `"pd-balanced"` or `"pd-ssd"`.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeGb;

/**
 *  Optional. Name of the snapshot to use as the source for the disk. If set,
 *  size_gb and fs_type must be empty.
 */
@property(nonatomic, copy, nullable) NSString *sourceSnapshot;

@end


/**
 *  A set of Compute Engine Shielded instance options.
 */
@interface GTLRCloudWorkstations_GceShieldedInstanceConfig : GTLRObject

/**
 *  Optional. Whether the instance has integrity monitoring enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableIntegrityMonitoring;

/**
 *  Optional. Whether the instance has Secure Boot enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableSecureBoot;

/**
 *  Optional. Whether the instance has the vTPM enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableVtpm;

@end


/**
 *  Request message for GenerateAccessToken.
 */
@interface GTLRCloudWorkstations_GenerateAccessTokenRequest : GTLRObject

/**
 *  Desired expiration time of the access token. This value must be at most 24
 *  hours in the future. If a value is not specified, the token's expiration
 *  time will be set to a default value of 1 hour in the future.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *expireTime;

/**
 *  Optional. Port for which the access token should be generated. If specified,
 *  the generated access token grants access only to the specified port of the
 *  workstation. If specified, values must be within the range [1 - 65535]. If
 *  not specified, the generated access token grants access to all ports of the
 *  workstation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

/**
 *  Desired lifetime duration of the access token. This value must be at most 24
 *  hours. If a value is not specified, the token's lifetime will be set to a
 *  default value of 1 hour.
 */
@property(nonatomic, strong, nullable) GTLRDuration *ttl;

@end


/**
 *  Response message for GenerateAccessToken.
 */
@interface GTLRCloudWorkstations_GenerateAccessTokenResponse : GTLRObject

/**
 *  The generated bearer access token. To use this token, include it in an
 *  Authorization header of an HTTP request sent to the associated workstation's
 *  hostname—for example, `Authorization: Bearer `.
 */
@property(nonatomic, copy, nullable) NSString *accessToken;

/** Time at which the generated token will expire. */
@property(nonatomic, strong, nullable) GTLRDateTime *expireTime;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRCloudWorkstations_GoogleProtobufEmpty : GTLRObject
@end


/**
 *  Runtime host for a workstation.
 */
@interface GTLRCloudWorkstations_Host : GTLRObject

/** Specifies a Compute Engine instance as the host. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_GceInstance *gceInstance;

@end


/**
 *  The response message for Locations.ListLocations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "locations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudWorkstations_ListLocationsResponse : GTLRCollectionObject

/**
 *  A list of locations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Location *> *locations;

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  The response message for Operations.ListOperations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "operations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudWorkstations_ListOperationsResponse : GTLRCollectionObject

/** The standard List next-page token. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  A list of operations that matches the specified filter in the request.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Operation *> *operations;

@end


/**
 *  Response message for ListUsableWorkstationConfigs.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workstationConfigs" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRCloudWorkstations_ListUsableWorkstationConfigsResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  The requested configs.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_WorkstationConfig *> *workstationConfigs;

@end


/**
 *  Response message for ListUsableWorkstations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workstations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudWorkstations_ListUsableWorkstationsResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  The requested workstations.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Workstation *> *workstations;

@end


/**
 *  Response message for ListWorkstationClusters.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workstationClusters" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRCloudWorkstations_ListWorkstationClustersResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  The requested workstation clusters.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_WorkstationCluster *> *workstationClusters;

@end


/**
 *  Response message for ListWorkstationConfigs.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workstationConfigs" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRCloudWorkstations_ListWorkstationConfigsResponse : GTLRCollectionObject

/**
 *  Token to retrieve the next page of results, or empty if there are no more
 *  results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  The requested configs.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_WorkstationConfig *> *workstationConfigs;

@end


/**
 *  Response message for ListWorkstations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "workstations" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCloudWorkstations_ListWorkstationsResponse : GTLRCollectionObject

/**
 *  Optional. Token to retrieve the next page of results, or empty if there are
 *  no more results in the list.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** Optional. Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachable;

/**
 *  The requested workstations.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Workstation *> *workstations;

@end


/**
 *  A resource that represents a Google Cloud location.
 */
@interface GTLRCloudWorkstations_Location : GTLRObject

/**
 *  The friendly name for this location, typically a nearby city name. For
 *  example, "Tokyo".
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Location_Labels *labels;

/** The canonical id for this location. For example: `"us-east1"`. */
@property(nonatomic, copy, nullable) NSString *locationId;

/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Location_Metadata *metadata;

/**
 *  Resource name for the location, which may vary between implementations. For
 *  example: `"projects/example-project/locations/us-east1"`
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Cross-service attributes for the location. For example
 *  {"cloud.googleapis.com/region": "us-east1"}
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_Location_Labels : GTLRObject
@end


/**
 *  Service-specific metadata. For example the available capacity at the given
 *  location.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudWorkstations_Location_Metadata : GTLRObject
@end


/**
 *  This resource represents a long-running operation that is the result of a
 *  network API call.
 */
@interface GTLRCloudWorkstations_Operation : GTLRObject

/**
 *  If the value is `false`, it means the operation is still in progress. If
 *  `true`, the operation is completed, and either `error` or `response` is
 *  available.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *done;

/** The error result of the operation in case of failure or cancellation. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Status *error;

/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Operation_Metadata *metadata;

/**
 *  The server-assigned name, which is only unique within the same service that
 *  originally returns it. If you use the default HTTP mapping, the `name`
 *  should be a resource name ending with `operations/{unique_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Operation_Response *response;

@end


/**
 *  Service-specific metadata associated with the operation. It typically
 *  contains progress information and common metadata such as create time. Some
 *  services might not provide such metadata. Any method that returns a
 *  long-running operation should document the metadata type, if any.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudWorkstations_Operation_Metadata : GTLRObject
@end


/**
 *  The normal, successful response of the operation. If the original method
 *  returns no data on success, such as `Delete`, the response is
 *  `google.protobuf.Empty`. If the original method is standard
 *  `Get`/`Create`/`Update`, the response should be the resource. For other
 *  methods, the response should have the type `XxxResponse`, where `Xxx` is the
 *  original method name. For example, if the original method name is
 *  `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudWorkstations_Operation_Response : GTLRObject
@end


/**
 *  Metadata for long-running operations.
 */
@interface GTLRCloudWorkstations_OperationMetadata : GTLRObject

/** Output only. API version used to start the operation. */
@property(nonatomic, copy, nullable) NSString *apiVersion;

/** Output only. Time that the operation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. Time that the operation finished running. */
@property(nonatomic, strong, nullable) GTLRDateTime *endTime;

/**
 *  Output only. Identifies whether the user has requested cancellation of the
 *  operation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedCancellation;

/** Output only. Human-readable status of the operation, if any. */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  Output only. Server-defined resource path for the target of the operation.
 */
@property(nonatomic, copy, nullable) NSString *target;

/** Output only. Name of the verb executed by the operation. */
@property(nonatomic, copy, nullable) NSString *verb;

@end


/**
 *  A directory to persist across workstation sessions.
 */
@interface GTLRCloudWorkstations_PersistentDirectory : GTLRObject

/** A PersistentDirectory backed by a Compute Engine persistent disk. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_GceRegionalPersistentDisk *gcePd;

/** Optional. Location of this directory in the running workstation. */
@property(nonatomic, copy, nullable) NSString *mountPath;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** ``` { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } ``` **YAML example:** ``` bindings: -
 *  members: - user:mike\@example.com - group:admins\@example.com -
 *  domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 ``` For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRCloudWorkstations_Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  A PortRange defines a range of ports. Both first and last are inclusive. To
 *  specify a single port, both first and last should be the same.
 */
@interface GTLRCloudWorkstations_PortRange : GTLRObject

/**
 *  Required. Starting port number for the current range of ports. Valid ports
 *  are 22, 80, and ports within the range 1024-65535.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *first;

/**
 *  Required. Ending port number for the current range of ports. Valid ports are
 *  22, 80, and ports within the range 1024-65535.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *last;

@end


/**
 *  Configuration options for private workstation clusters.
 */
@interface GTLRCloudWorkstations_PrivateClusterConfig : GTLRObject

/**
 *  Optional. Additional projects that are allowed to attach to the workstation
 *  cluster's service attachment. By default, the workstation cluster's project
 *  and the VPC host project (if different) are allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowedProjects;

/**
 *  Output only. Hostname for the workstation cluster. This field will be
 *  populated only when private endpoint is enabled. To access workstations in
 *  the workstation cluster, create a new DNS zone mapping this domain name to
 *  an internal IP address and a forwarding rule mapping that address to the
 *  service attachment.
 */
@property(nonatomic, copy, nullable) NSString *clusterHostname;

/**
 *  Immutable. Whether Workstations endpoint is private.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enablePrivateEndpoint;

/**
 *  Output only. Service attachment URI for the workstation cluster. The service
 *  attachemnt is created when private endpoint is enabled. To access
 *  workstations in the workstation cluster, configure access to the managed
 *  service using [Private Service
 *  Connect](https://cloud.google.com/vpc/docs/configure-private-service-connect-services).
 */
@property(nonatomic, copy, nullable) NSString *serviceAttachmentUri;

@end


/**
 *  A readiness check to be performed on a workstation.
 */
@interface GTLRCloudWorkstations_ReadinessCheck : GTLRObject

/** Optional. Path to which the request should be sent. */
@property(nonatomic, copy, nullable) NSString *path;

/**
 *  Optional. Port to which the request should be sent.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

@end


/**
 *  Request message for `SetIamPolicy` method.
 */
@interface GTLRCloudWorkstations_SetIamPolicyRequest : GTLRObject

/**
 *  REQUIRED: The complete policy to be applied to the `resource`. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is a valid policy
 *  but certain Google Cloud services (such as Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Policy *policy;

/**
 *  OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
 *  the fields in the mask will be modified. If no mask is provided, the
 *  following default mask is used: `paths: "bindings, etag"`
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Request message for StartWorkstation.
 */
@interface GTLRCloudWorkstations_StartWorkstationRequest : GTLRObject

/**
 *  Optional. If set, the request will be rejected if the latest version of the
 *  workstation on the server does not have this ETag.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. If set, validate the request and preview the review, but do not
 *  actually apply it.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  The `Status` type defines a logical error model that is suitable for
 *  different programming environments, including REST APIs and RPC APIs. It is
 *  used by [gRPC](https://github.com/grpc). Each `Status` message contains
 *  three pieces of data: error code, error message, and error details. You can
 *  find out more about this error model and how to work with it in the [API
 *  Design Guide](https://cloud.google.com/apis/design/errors).
 */
@interface GTLRCloudWorkstations_Status : GTLRObject

/**
 *  The status code, which should be an enum value of google.rpc.Code.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  A list of messages that carry the error details. There is a common set of
 *  message types for APIs to use.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Status_Details_Item *> *details;

/**
 *  A developer-facing error message, which should be in English. Any
 *  user-facing error message should be localized and sent in the
 *  google.rpc.Status.details field, or localized by the client.
 */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCloudWorkstations_Status_Details_Item
 *
 *  @note This class is documented as having more properties of any valid JSON
 *        type. Use @c -additionalJSONKeys and @c -additionalPropertyForName: to
 *        get the list of properties and then fetch them; or @c
 *        -additionalProperties to fetch them all at once.
 */
@interface GTLRCloudWorkstations_Status_Details_Item : GTLRObject
@end


/**
 *  Request message for StopWorkstation.
 */
@interface GTLRCloudWorkstations_StopWorkstationRequest : GTLRObject

/**
 *  Optional. If set, the request will be rejected if the latest version of the
 *  workstation on the server does not have this ETag.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. If set, validate the request and preview the review, but do not
 *  actually apply it.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateOnly;

@end


/**
 *  Request message for `TestIamPermissions` method.
 */
@interface GTLRCloudWorkstations_TestIamPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the `resource`. Permissions with
 *  wildcards (such as `*` or `storage.*`) are not allowed. For more information
 *  see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  Response message for `TestIamPermissions` method.
 */
@interface GTLRCloudWorkstations_TestIamPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  A single instance of a developer workstation with its own persistent
 *  storage.
 */
@interface GTLRCloudWorkstations_Workstation : GTLRObject

/** Optional. Client-specified annotations. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Workstation_Annotations *annotations;

/** Output only. Time when this workstation was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. Time when this workstation was soft-deleted. */
@property(nonatomic, strong, nullable) GTLRDateTime *deleteTime;

/** Optional. Human-readable name for this workstation. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. Environment variables passed to the workstation container's
 *  entrypoint.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Workstation_Env *env;

/**
 *  Optional. Checksum computed by the server. May be sent on update and delete
 *  requests to make sure that the client has an up-to-date value before
 *  proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Output only. Host to which clients can send HTTPS traffic that will be
 *  received by the workstation. Authorized traffic will be received to the
 *  workstation as HTTP on port 80. To send traffic to a different port, clients
 *  may prefix the host with the destination port in the format `{port}-{host}`.
 */
@property(nonatomic, copy, nullable) NSString *host;

/**
 *  Output only. The name of the Google Cloud KMS encryption key used to encrypt
 *  this workstation. The KMS key can only be configured in the
 *  WorkstationConfig. The expected format is `projects/ * /locations/ *
 *  /keyRings/ * /cryptoKeys/ *`.
 */
@property(nonatomic, copy, nullable) NSString *kmsKey;

/**
 *  Optional.
 *  [Labels](https://cloud.google.com/workstations/docs/label-resources) that
 *  are applied to the workstation and that are also propagated to the
 *  underlying Compute Engine resources.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Workstation_Labels *labels;

/** Identifier. Full name of this workstation. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. Indicates whether this workstation is currently being updated
 *  to match its intended state.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Output only. Time when this workstation was most recently successfully
 *  started, regardless of the workstation's initial state.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *startTime;

/**
 *  Output only. Current state of the workstation.
 *
 *  Likely values:
 *    @arg @c kGTLRCloudWorkstations_Workstation_State_StateRunning The
 *        workstation is ready to accept requests from users. (Value:
 *        "STATE_RUNNING")
 *    @arg @c kGTLRCloudWorkstations_Workstation_State_StateStarting The
 *        workstation is not yet ready to accept requests from users but will be
 *        soon. (Value: "STATE_STARTING")
 *    @arg @c kGTLRCloudWorkstations_Workstation_State_StateStopped The
 *        workstation is stopped and will not be able to receive requests until
 *        it is started. (Value: "STATE_STOPPED")
 *    @arg @c kGTLRCloudWorkstations_Workstation_State_StateStopping The
 *        workstation is being stopped. (Value: "STATE_STOPPING")
 *    @arg @c kGTLRCloudWorkstations_Workstation_State_StateUnspecified Do not
 *        use. (Value: "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** Output only. A system-assigned unique identifier for this workstation. */
@property(nonatomic, copy, nullable) NSString *uid;

/** Output only. Time when this workstation was most recently updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Client-specified annotations.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_Workstation_Annotations : GTLRObject
@end


/**
 *  Optional. Environment variables passed to the workstation container's
 *  entrypoint.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_Workstation_Env : GTLRObject
@end


/**
 *  Optional.
 *  [Labels](https://cloud.google.com/workstations/docs/label-resources) that
 *  are applied to the workstation and that are also propagated to the
 *  underlying Compute Engine resources.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_Workstation_Labels : GTLRObject
@end


/**
 *  A workstation cluster resource in the Cloud Workstations API. Defines a
 *  group of workstations in a particular region and the VPC network they're
 *  attached to.
 */
@interface GTLRCloudWorkstations_WorkstationCluster : GTLRObject

/** Optional. Client-specified annotations. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_WorkstationCluster_Annotations *annotations;

/**
 *  Output only. Status conditions describing the workstation cluster's current
 *  state.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Status *> *conditions;

/**
 *  Output only. The private IP address of the control plane for this
 *  workstation cluster. Workstation VMs need access to this IP address to work
 *  with the service, so make sure that your firewall rules allow egress from
 *  the workstation VMs to this address.
 */
@property(nonatomic, copy, nullable) NSString *controlPlaneIp;

/** Output only. Time when this workstation cluster was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. Whether this workstation cluster is in degraded mode, in which
 *  case it may require user action to restore full functionality. Details can
 *  be found in conditions.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *degraded;

/** Output only. Time when this workstation cluster was soft-deleted. */
@property(nonatomic, strong, nullable) GTLRDateTime *deleteTime;

/** Optional. Human-readable name for this workstation cluster. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Optional. Configuration options for a custom domain. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_DomainConfig *domainConfig;

/**
 *  Optional. Checksum computed by the server. May be sent on update and delete
 *  requests to make sure that the client has an up-to-date value before
 *  proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional.
 *  [Labels](https://cloud.google.com/workstations/docs/label-resources) that
 *  are applied to the workstation cluster and that are also propagated to the
 *  underlying Compute Engine resources.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_WorkstationCluster_Labels *labels;

/** Identifier. Full name of this workstation cluster. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Immutable. Name of the Compute Engine network in which instances associated
 *  with this workstation cluster will be created.
 */
@property(nonatomic, copy, nullable) NSString *network;

/** Optional. Configuration for private workstation cluster. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_PrivateClusterConfig *privateClusterConfig;

/**
 *  Output only. Indicates whether this workstation cluster is currently being
 *  updated to match its intended state.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Immutable. Name of the Compute Engine subnetwork in which instances
 *  associated with this workstation cluster will be created. Must be part of
 *  the subnetwork specified for this workstation cluster.
 */
@property(nonatomic, copy, nullable) NSString *subnetwork;

/**
 *  Output only. A system-assigned unique identifier for this workstation
 *  cluster.
 */
@property(nonatomic, copy, nullable) NSString *uid;

/**
 *  Output only. Time when this workstation cluster was most recently updated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Client-specified annotations.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_WorkstationCluster_Annotations : GTLRObject
@end


/**
 *  Optional.
 *  [Labels](https://cloud.google.com/workstations/docs/label-resources) that
 *  are applied to the workstation cluster and that are also propagated to the
 *  underlying Compute Engine resources.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_WorkstationCluster_Labels : GTLRObject
@end


/**
 *  A workstation configuration resource in the Cloud Workstations API.
 *  Workstation configurations act as templates for workstations. The
 *  workstation configuration defines details such as the workstation virtual
 *  machine (VM) instance type, persistent storage, container image defining
 *  environment, which IDE or Code Editor to use, and more. Administrators and
 *  platform teams can also use [Identity and Access Management
 *  (IAM)](https://cloud.google.com/iam/docs/overview) rules to grant access to
 *  teams or to individual developers.
 */
@interface GTLRCloudWorkstations_WorkstationConfig : GTLRObject

/**
 *  Optional. A list of PortRanges specifying single ports or ranges of ports
 *  that are externally accessible in the workstation. Allowed ports must be one
 *  of 22, 80, or within range 1024-65535. If not specified defaults to ports
 *  22, 80, and ports 1024-65535.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_PortRange *> *allowedPorts;

/** Optional. Client-specified annotations. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_WorkstationConfig_Annotations *annotations;

/** Output only. Status conditions describing the current resource state. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_Status *> *conditions;

/**
 *  Optional. Container that runs upon startup for each workstation using this
 *  workstation configuration.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Container *container;

/** Output only. Time when this workstation configuration was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. Whether this resource is degraded, in which case it may require
 *  user action to restore full functionality. See also the conditions field.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *degraded;

/** Output only. Time when this workstation configuration was soft-deleted. */
@property(nonatomic, strong, nullable) GTLRDateTime *deleteTime;

/**
 *  Optional. Disables support for plain TCP connections in the workstation. By
 *  default the service supports TCP connections through a websocket relay.
 *  Setting this option to true disables that relay, which prevents the usage of
 *  services that require plain TCP connections, such as SSH. When enabled, all
 *  communication must occur over HTTPS or WSS.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableTcpConnections;

/** Optional. Human-readable name for this workstation configuration. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Optional. Whether to enable Linux `auditd` logging on the workstation. When
 *  enabled, a service_account must also be specified that has
 *  `roles/logging.logWriter` and `roles/monitoring.metricWriter` on the
 *  project. Operating system audit logging is distinct from [Cloud Audit
 *  Logs](https://cloud.google.com/workstations/docs/audit-logging) and
 *  [Container output
 *  logging](https://cloud.google.com/workstations/docs/container-output-logging#overview).
 *  Operating system audit logs are available in the [Cloud
 *  Logging](https://cloud.google.com/logging/docs) console by querying:
 *  resource.type="gce_instance" log_name:"/logs/linux-auditd"
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableAuditAgent;

/**
 *  Immutable. Encrypts resources of this workstation configuration using a
 *  customer-managed encryption key (CMEK). If specified, the boot disk of the
 *  Compute Engine instance and the persistent disk are encrypted using this
 *  encryption key. If this field is not set, the disks are encrypted using a
 *  generated key. Customer-managed encryption keys do not protect disk
 *  metadata. If the customer-managed encryption key is rotated, when the
 *  workstation instance is stopped, the system attempts to recreate the
 *  persistent disk with the new version of the key. Be sure to keep older
 *  versions of the key until the persistent disk is recreated. Otherwise, data
 *  on the persistent disk might be lost. If the encryption key is revoked, the
 *  workstation session automatically stops within 7 hours. Immutable after the
 *  workstation configuration is created.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_CustomerEncryptionKey *encryptionKey;

/**
 *  Optional. Ephemeral directories which won't persist across workstation
 *  sessions.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_EphemeralDirectory *> *ephemeralDirectories;

/**
 *  Optional. Checksum computed by the server. May be sent on update and delete
 *  requests to make sure that the client has an up-to-date value before
 *  proceeding.
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  Optional. Grant creator of a workstation `roles/workstations.policyAdmin`
 *  role along with `roles/workstations.user` role on the workstation created by
 *  them. This allows workstation users to share access to either their entire
 *  workstation, or individual ports. Defaults to false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *grantWorkstationAdminRoleOnCreate;

/** Optional. Runtime host for the workstation. */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_Host *host;

/**
 *  Optional. Number of seconds to wait before automatically stopping a
 *  workstation after it last received user traffic. A value of `"0s"` indicates
 *  that Cloud Workstations VMs created with this configuration should never
 *  time out due to idleness. Provide
 *  [duration](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#duration)
 *  terminated by `s` for seconds—for example, `"7200s"` (2 hours). The default
 *  is `"1200s"` (20 minutes).
 */
@property(nonatomic, strong, nullable) GTLRDuration *idleTimeout;

/**
 *  Optional.
 *  [Labels](https://cloud.google.com/workstations/docs/label-resources) that
 *  are applied to the workstation configuration and that are also propagated to
 *  the underlying Compute Engine resources.
 */
@property(nonatomic, strong, nullable) GTLRCloudWorkstations_WorkstationConfig_Labels *labels;

/**
 *  Optional. Maximum number of workstations under this configuration a user can
 *  have `workstations.workstation.use` permission on. Only enforced on
 *  CreateWorkstation API calls on the user issuing the API request. Can be
 *  overridden by: - granting a user
 *  workstations.workstationConfigs.exemptMaxUsableWorkstationLimit permission,
 *  or - having a user with that permission create a workstation and granting
 *  another user `workstations.workstation.use` permission on that workstation.
 *  If not specified, defaults to `0`, which indicates unlimited.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxUsableWorkstations;

/** Identifier. Full name of this workstation configuration. */
@property(nonatomic, copy, nullable) NSString *name;

/** Optional. Directories to persist across workstation sessions. */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_PersistentDirectory *> *persistentDirectories;

/**
 *  Optional. Readiness checks to perform when starting a workstation using this
 *  workstation configuration. Mark a workstation as running only after all
 *  specified readiness checks return 200 status codes.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCloudWorkstations_ReadinessCheck *> *readinessChecks;

/**
 *  Output only. Indicates whether this workstation configuration is currently
 *  being updated to match its intended state.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *reconciling;

/**
 *  Optional. Immutable. Specifies the zones used to replicate the VM and disk
 *  resources within the region. If set, exactly two zones within the
 *  workstation cluster's region must be specified—for example,
 *  `['us-central1-a', 'us-central1-f']`. If this field is empty, two default
 *  zones within the region are used. Immutable after the workstation
 *  configuration is created.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *replicaZones;

/**
 *  Optional. Number of seconds that a workstation can run until it is
 *  automatically shut down. We recommend that workstations be shut down daily
 *  to reduce costs and so that security updates can be applied upon restart.
 *  The idle_timeout and running_timeout fields are independent of each other.
 *  Note that the running_timeout field shuts down VMs after the specified time,
 *  regardless of whether or not the VMs are idle. Provide duration terminated
 *  by `s` for seconds—for example, `"54000s"` (15 hours). Defaults to
 *  `"43200s"` (12 hours). A value of `"0s"` indicates that workstations using
 *  this configuration should never time out. If encryption_key is set, it must
 *  be greater than `"0s"` and less than `"86400s"` (24 hours). Warning: A value
 *  of `"0s"` indicates that Cloud Workstations VMs created with this
 *  configuration have no maximum running time. This is strongly discouraged
 *  because you incur costs and will not pick up security updates.
 */
@property(nonatomic, strong, nullable) GTLRDuration *runningTimeout;

/**
 *  Output only. A system-assigned unique identifier for this workstation
 *  configuration.
 */
@property(nonatomic, copy, nullable) NSString *uid;

/**
 *  Output only. Time when this workstation configuration was most recently
 *  updated.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Optional. Client-specified annotations.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_WorkstationConfig_Annotations : GTLRObject
@end


/**
 *  Optional.
 *  [Labels](https://cloud.google.com/workstations/docs/label-resources) that
 *  are applied to the workstation configuration and that are also propagated to
 *  the underlying Compute Engine resources.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCloudWorkstations_WorkstationConfig_Labels : GTLRObject
@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
