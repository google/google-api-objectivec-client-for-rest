// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Play Game Services (games/v1)
// Description:
//   The Google Play games service allows developers to enhance games with
//   social leaderboards, achievements, game state, sign-in with Google, and
//   more.
// Documentation:
//   https://developers.google.com/games/

#import <GoogleAPIClientForREST/GTLRGamesObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRGames_AchievementDefinition.achievementType
NSString * const kGTLRGames_AchievementDefinition_AchievementType_AchievementTypeUnspecified = @"ACHIEVEMENT_TYPE_UNSPECIFIED";
NSString * const kGTLRGames_AchievementDefinition_AchievementType_Incremental = @"INCREMENTAL";
NSString * const kGTLRGames_AchievementDefinition_AchievementType_Standard = @"STANDARD";

// GTLRGames_AchievementDefinition.initialState
NSString * const kGTLRGames_AchievementDefinition_InitialState_Hidden = @"HIDDEN";
NSString * const kGTLRGames_AchievementDefinition_InitialState_InitialAchievementStateUnspecified = @"INITIAL_ACHIEVEMENT_STATE_UNSPECIFIED";
NSString * const kGTLRGames_AchievementDefinition_InitialState_Revealed = @"REVEALED";
NSString * const kGTLRGames_AchievementDefinition_InitialState_Unlocked = @"UNLOCKED";

// GTLRGames_AchievementRevealResponse.currentState
NSString * const kGTLRGames_AchievementRevealResponse_CurrentState_RevealAchievementStateUnspecified = @"REVEAL_ACHIEVEMENT_STATE_UNSPECIFIED";
NSString * const kGTLRGames_AchievementRevealResponse_CurrentState_Revealed = @"REVEALED";
NSString * const kGTLRGames_AchievementRevealResponse_CurrentState_Unlocked = @"UNLOCKED";

// GTLRGames_AchievementUpdateRequest.updateType
NSString * const kGTLRGames_AchievementUpdateRequest_UpdateType_AchievementUpdateTypeUnspecified = @"ACHIEVEMENT_UPDATE_TYPE_UNSPECIFIED";
NSString * const kGTLRGames_AchievementUpdateRequest_UpdateType_Increment = @"INCREMENT";
NSString * const kGTLRGames_AchievementUpdateRequest_UpdateType_Reveal = @"REVEAL";
NSString * const kGTLRGames_AchievementUpdateRequest_UpdateType_SetStepsAtLeast = @"SET_STEPS_AT_LEAST";
NSString * const kGTLRGames_AchievementUpdateRequest_UpdateType_Unlock = @"UNLOCK";

// GTLRGames_AchievementUpdateResponse.currentState
NSString * const kGTLRGames_AchievementUpdateResponse_CurrentState_Hidden = @"HIDDEN";
NSString * const kGTLRGames_AchievementUpdateResponse_CurrentState_Revealed = @"REVEALED";
NSString * const kGTLRGames_AchievementUpdateResponse_CurrentState_Unlocked = @"UNLOCKED";
NSString * const kGTLRGames_AchievementUpdateResponse_CurrentState_UpdatedAchievementStateUnspecified = @"UPDATED_ACHIEVEMENT_STATE_UNSPECIFIED";

// GTLRGames_Application.enabledFeatures
NSString * const kGTLRGames_Application_EnabledFeatures_ApplicationFeatureUnspecified = @"APPLICATION_FEATURE_UNSPECIFIED";
NSString * const kGTLRGames_Application_EnabledFeatures_Snapshots = @"SNAPSHOTS";

// GTLRGames_EventBatchRecordFailure.failureCause
NSString * const kGTLRGames_EventBatchRecordFailure_FailureCause_AlreadyUpdated = @"ALREADY_UPDATED";
NSString * const kGTLRGames_EventBatchRecordFailure_FailureCause_EventFailureCauseUnspecified = @"EVENT_FAILURE_CAUSE_UNSPECIFIED";
NSString * const kGTLRGames_EventBatchRecordFailure_FailureCause_RecordRateHigh = @"RECORD_RATE_HIGH";
NSString * const kGTLRGames_EventBatchRecordFailure_FailureCause_TimePeriodExpired = @"TIME_PERIOD_EXPIRED";
NSString * const kGTLRGames_EventBatchRecordFailure_FailureCause_TimePeriodLong = @"TIME_PERIOD_LONG";
NSString * const kGTLRGames_EventBatchRecordFailure_FailureCause_TimePeriodShort = @"TIME_PERIOD_SHORT";
NSString * const kGTLRGames_EventBatchRecordFailure_FailureCause_TooLarge = @"TOO_LARGE";

// GTLRGames_EventDefinition.visibility
NSString * const kGTLRGames_EventDefinition_Visibility_EventVisibilityUnspecified = @"EVENT_VISIBILITY_UNSPECIFIED";
NSString * const kGTLRGames_EventDefinition_Visibility_Hidden  = @"HIDDEN";
NSString * const kGTLRGames_EventDefinition_Visibility_Revealed = @"REVEALED";

// GTLRGames_EventRecordFailure.failureCause
NSString * const kGTLRGames_EventRecordFailure_FailureCause_EventUpdateFailureCauseUnspecified = @"EVENT_UPDATE_FAILURE_CAUSE_UNSPECIFIED";
NSString * const kGTLRGames_EventRecordFailure_FailureCause_InvalidUpdateValue = @"INVALID_UPDATE_VALUE";
NSString * const kGTLRGames_EventRecordFailure_FailureCause_NotFound = @"NOT_FOUND";

// GTLRGames_Instance.platformType
NSString * const kGTLRGames_Instance_PlatformType_Android      = @"ANDROID";
NSString * const kGTLRGames_Instance_PlatformType_Ios          = @"IOS";
NSString * const kGTLRGames_Instance_PlatformType_PlatformTypeUnspecified = @"PLATFORM_TYPE_UNSPECIFIED";
NSString * const kGTLRGames_Instance_PlatformType_WebApp       = @"WEB_APP";

// GTLRGames_Leaderboard.order
NSString * const kGTLRGames_Leaderboard_Order_LargerIsBetter   = @"LARGER_IS_BETTER";
NSString * const kGTLRGames_Leaderboard_Order_ScoreOrderUnspecified = @"SCORE_ORDER_UNSPECIFIED";
NSString * const kGTLRGames_Leaderboard_Order_SmallerIsBetter  = @"SMALLER_IS_BETTER";

// GTLRGames_LeaderboardEntry.timeSpan
NSString * const kGTLRGames_LeaderboardEntry_TimeSpan_AllTime  = @"ALL_TIME";
NSString * const kGTLRGames_LeaderboardEntry_TimeSpan_Daily    = @"DAILY";
NSString * const kGTLRGames_LeaderboardEntry_TimeSpan_ScoreTimeSpanUnspecified = @"SCORE_TIME_SPAN_UNSPECIFIED";
NSString * const kGTLRGames_LeaderboardEntry_TimeSpan_Weekly   = @"WEEKLY";

// GTLRGames_Player.friendStatus
NSString * const kGTLRGames_Player_FriendStatus_Friend         = @"FRIEND";
NSString * const kGTLRGames_Player_FriendStatus_FriendStatusUnspecified = @"FRIEND_STATUS_UNSPECIFIED";
NSString * const kGTLRGames_Player_FriendStatus_NoRelationship = @"NO_RELATIONSHIP";

// GTLRGames_PlayerAchievement.achievementState
NSString * const kGTLRGames_PlayerAchievement_AchievementState_Hidden = @"HIDDEN";
NSString * const kGTLRGames_PlayerAchievement_AchievementState_Revealed = @"REVEALED";
NSString * const kGTLRGames_PlayerAchievement_AchievementState_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRGames_PlayerAchievement_AchievementState_Unlocked = @"UNLOCKED";

// GTLRGames_PlayerLeaderboardScore.timeSpan
NSString * const kGTLRGames_PlayerLeaderboardScore_TimeSpan_AllTime = @"ALL_TIME";
NSString * const kGTLRGames_PlayerLeaderboardScore_TimeSpan_Daily = @"DAILY";
NSString * const kGTLRGames_PlayerLeaderboardScore_TimeSpan_ScoreTimeSpanUnspecified = @"SCORE_TIME_SPAN_UNSPECIFIED";
NSString * const kGTLRGames_PlayerLeaderboardScore_TimeSpan_Weekly = @"WEEKLY";

// GTLRGames_PlayerScore.timeSpan
NSString * const kGTLRGames_PlayerScore_TimeSpan_AllTime       = @"ALL_TIME";
NSString * const kGTLRGames_PlayerScore_TimeSpan_Daily         = @"DAILY";
NSString * const kGTLRGames_PlayerScore_TimeSpan_ScoreTimeSpanUnspecified = @"SCORE_TIME_SPAN_UNSPECIFIED";
NSString * const kGTLRGames_PlayerScore_TimeSpan_Weekly        = @"WEEKLY";

// GTLRGames_PlayerScoreResponse.beatenScoreTimeSpans
NSString * const kGTLRGames_PlayerScoreResponse_BeatenScoreTimeSpans_AllTime = @"ALL_TIME";
NSString * const kGTLRGames_PlayerScoreResponse_BeatenScoreTimeSpans_Daily = @"DAILY";
NSString * const kGTLRGames_PlayerScoreResponse_BeatenScoreTimeSpans_ScoreTimeSpanUnspecified = @"SCORE_TIME_SPAN_UNSPECIFIED";
NSString * const kGTLRGames_PlayerScoreResponse_BeatenScoreTimeSpans_Weekly = @"WEEKLY";

// GTLRGames_ProfileSettings.friendsListVisibility
NSString * const kGTLRGames_ProfileSettings_FriendsListVisibility_FriendsListVisibilityUnspecified = @"FRIENDS_LIST_VISIBILITY_UNSPECIFIED";
NSString * const kGTLRGames_ProfileSettings_FriendsListVisibility_RequestRequired = @"REQUEST_REQUIRED";
NSString * const kGTLRGames_ProfileSettings_FriendsListVisibility_Unavailable = @"UNAVAILABLE";
NSString * const kGTLRGames_ProfileSettings_FriendsListVisibility_Visible = @"VISIBLE";

// GTLRGames_RevisionCheckResponse.revisionStatus
NSString * const kGTLRGames_RevisionCheckResponse_RevisionStatus_Deprecated = @"DEPRECATED";
NSString * const kGTLRGames_RevisionCheckResponse_RevisionStatus_Invalid = @"INVALID";
NSString * const kGTLRGames_RevisionCheckResponse_RevisionStatus_Ok = @"OK";
NSString * const kGTLRGames_RevisionCheckResponse_RevisionStatus_RevisionStatusUnspecified = @"REVISION_STATUS_UNSPECIFIED";

// GTLRGames_Snapshot.type
NSString * const kGTLRGames_Snapshot_Type_SaveGame             = @"SAVE_GAME";
NSString * const kGTLRGames_Snapshot_Type_SnapshotTypeUnspecified = @"SNAPSHOT_TYPE_UNSPECIFIED";

// ----------------------------------------------------------------------------
//
//   GTLRGames_AchievementDefinition
//

@implementation GTLRGames_AchievementDefinition
@dynamic achievementType, descriptionProperty, experiencePoints,
         formattedTotalSteps, identifier, initialState,
         isRevealedIconUrlDefault, isUnlockedIconUrlDefault, kind, name,
         revealedIconUrl, totalSteps, unlockedIconUrl;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_AchievementDefinitionsListResponse
//

@implementation GTLRGames_AchievementDefinitionsListResponse
@dynamic items, kind, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRGames_AchievementDefinition class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_AchievementIncrement
//

@implementation GTLRGames_AchievementIncrement
@dynamic kind, requestId, steps;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_AchievementIncrementResponse
//

@implementation GTLRGames_AchievementIncrementResponse
@dynamic currentSteps, kind, newlyUnlocked;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_AchievementRevealResponse
//

@implementation GTLRGames_AchievementRevealResponse
@dynamic currentState, kind;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_AchievementSetStepsAtLeast
//

@implementation GTLRGames_AchievementSetStepsAtLeast
@dynamic kind, steps;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_AchievementSetStepsAtLeastResponse
//

@implementation GTLRGames_AchievementSetStepsAtLeastResponse
@dynamic currentSteps, kind, newlyUnlocked;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_AchievementUnlockResponse
//

@implementation GTLRGames_AchievementUnlockResponse
@dynamic kind, newlyUnlocked;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_AchievementUpdateMultipleRequest
//

@implementation GTLRGames_AchievementUpdateMultipleRequest
@dynamic kind, updates;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"updates" : [GTLRGames_AchievementUpdateRequest class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_AchievementUpdateMultipleResponse
//

@implementation GTLRGames_AchievementUpdateMultipleResponse
@dynamic kind, updatedAchievements;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"updatedAchievements" : [GTLRGames_AchievementUpdateResponse class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_AchievementUpdateRequest
//

@implementation GTLRGames_AchievementUpdateRequest
@dynamic achievementId, incrementPayload, kind, setStepsAtLeastPayload,
         updateType;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_AchievementUpdateResponse
//

@implementation GTLRGames_AchievementUpdateResponse
@dynamic achievementId, currentState, currentSteps, kind, newlyUnlocked,
         updateOccurred;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_Application
//

@implementation GTLRGames_Application
@dynamic achievementCount, assets, author, category, descriptionProperty,
         enabledFeatures, identifier, instances, kind, lastUpdatedTimestamp,
         leaderboardCount, name, themeColor;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"achievementCount" : @"achievement_count",
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"leaderboardCount" : @"leaderboard_count"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"assets" : [GTLRGames_ImageAsset class],
    @"enabledFeatures" : [NSString class],
    @"instances" : [GTLRGames_Instance class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_ApplicationCategory
//

@implementation GTLRGames_ApplicationCategory
@dynamic kind, primary, secondary;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_ApplicationVerifyResponse
//

@implementation GTLRGames_ApplicationVerifyResponse
@dynamic alternatePlayerId, kind, playerId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"alternatePlayerId" : @"alternate_player_id",
    @"playerId" : @"player_id"
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_Category
//

@implementation GTLRGames_Category
@dynamic category, experiencePoints, kind;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_CategoryListResponse
//

@implementation GTLRGames_CategoryListResponse
@dynamic items, kind, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRGames_Category class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_EndPoint
//

@implementation GTLRGames_EndPoint
@dynamic url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_EventBatchRecordFailure
//

@implementation GTLRGames_EventBatchRecordFailure
@dynamic failureCause, kind, range;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_EventChild
//

@implementation GTLRGames_EventChild
@dynamic childId, kind;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_EventDefinition
//

@implementation GTLRGames_EventDefinition
@dynamic childEvents, descriptionProperty, displayName, identifier, imageUrl,
         isDefaultImageUrl, kind, visibility;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"childEvents" : [GTLRGames_EventChild class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_EventDefinitionListResponse
//

@implementation GTLRGames_EventDefinitionListResponse
@dynamic items, kind, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRGames_EventDefinition class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_EventPeriodRange
//

@implementation GTLRGames_EventPeriodRange
@dynamic kind, periodEndMillis, periodStartMillis;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_EventPeriodUpdate
//

@implementation GTLRGames_EventPeriodUpdate
@dynamic kind, timePeriod, updates;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"updates" : [GTLRGames_EventUpdateRequest class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_EventRecordFailure
//

@implementation GTLRGames_EventRecordFailure
@dynamic eventId, failureCause, kind;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_EventRecordRequest
//

@implementation GTLRGames_EventRecordRequest
@dynamic currentTimeMillis, kind, requestId, timePeriods;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"timePeriods" : [GTLRGames_EventPeriodUpdate class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_EventUpdateRequest
//

@implementation GTLRGames_EventUpdateRequest
@dynamic definitionId, kind, updateCount;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_EventUpdateResponse
//

@implementation GTLRGames_EventUpdateResponse
@dynamic batchFailures, eventFailures, kind, playerEvents;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"batchFailures" : [GTLRGames_EventBatchRecordFailure class],
    @"eventFailures" : [GTLRGames_EventRecordFailure class],
    @"playerEvents" : [GTLRGames_PlayerEvent class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_ImageAsset
//

@implementation GTLRGames_ImageAsset
@dynamic height, kind, name, url, width;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_Instance
//

@implementation GTLRGames_Instance
@dynamic acquisitionUri, androidInstance, iosInstance, kind, name, platformType,
         realtimePlay, turnBasedPlay, webInstance;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_InstanceAndroidDetails
//

@implementation GTLRGames_InstanceAndroidDetails
@dynamic enablePiracyCheck, kind, packageName, preferred;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_InstanceIosDetails
//

@implementation GTLRGames_InstanceIosDetails
@dynamic bundleIdentifier, itunesAppId, kind, preferredForIpad,
         preferredForIphone, supportIpad, supportIphone;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_InstanceWebDetails
//

@implementation GTLRGames_InstanceWebDetails
@dynamic kind, launchUrl, preferred;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_Leaderboard
//

@implementation GTLRGames_Leaderboard
@dynamic iconUrl, identifier, isIconUrlDefault, kind, name, order;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_LeaderboardEntry
//

@implementation GTLRGames_LeaderboardEntry
@dynamic formattedScore, formattedScoreRank, kind, player, scoreRank, scoreTag,
         scoreValue, timeSpan, writeTimestampMillis;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_LeaderboardListResponse
//

@implementation GTLRGames_LeaderboardListResponse
@dynamic items, kind, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRGames_Leaderboard class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_LeaderboardScoreRank
//

@implementation GTLRGames_LeaderboardScoreRank
@dynamic formattedNumScores, formattedRank, kind, numScores, rank;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_LeaderboardScores
//

@implementation GTLRGames_LeaderboardScores
@dynamic items, kind, nextPageToken, numScores, playerScore, prevPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRGames_LeaderboardEntry class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_MetagameConfig
//

@implementation GTLRGames_MetagameConfig
@dynamic currentVersion, kind, playerLevels;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"playerLevels" : [GTLRGames_PlayerLevel class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_Player
//

@implementation GTLRGames_Player
@dynamic avatarImageUrl, bannerUrlLandscape, bannerUrlPortrait, displayName,
         experienceInfo, friendStatus, gamePlayerId, kind, name,
         originalPlayerId, playerId, profileSettings, title;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_Player_Name
//

@implementation GTLRGames_Player_Name
@dynamic familyName, givenName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_PlayerAchievement
//

@implementation GTLRGames_PlayerAchievement
@dynamic achievementState, currentSteps, experiencePoints,
         formattedCurrentStepsString, identifier, kind, lastUpdatedTimestamp;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_PlayerAchievementListResponse
//

@implementation GTLRGames_PlayerAchievementListResponse
@dynamic items, kind, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRGames_PlayerAchievement class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_PlayerEvent
//

@implementation GTLRGames_PlayerEvent
@dynamic definitionId, formattedNumEvents, kind, numEvents, playerId;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_PlayerEventListResponse
//

@implementation GTLRGames_PlayerEventListResponse
@dynamic items, kind, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRGames_PlayerEvent class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_PlayerExperienceInfo
//

@implementation GTLRGames_PlayerExperienceInfo
@dynamic currentExperiencePoints, currentLevel, kind,
         lastLevelUpTimestampMillis, nextLevel;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_PlayerLeaderboardScore
//

@implementation GTLRGames_PlayerLeaderboardScore
@dynamic friendsRank, kind, leaderboardId, publicRank, scoreString, scoreTag,
         scoreValue, socialRank, timeSpan, writeTimestamp;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"leaderboardId" : @"leaderboard_id" };
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_PlayerLeaderboardScoreListResponse
//

@implementation GTLRGames_PlayerLeaderboardScoreListResponse
@dynamic items, kind, nextPageToken, player;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRGames_PlayerLeaderboardScore class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_PlayerLevel
//

@implementation GTLRGames_PlayerLevel
@dynamic kind, level, maxExperiencePoints, minExperiencePoints;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_PlayerListResponse
//

@implementation GTLRGames_PlayerListResponse
@dynamic items, kind, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRGames_Player class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_PlayerScore
//

@implementation GTLRGames_PlayerScore
@dynamic formattedScore, kind, score, scoreTag, timeSpan;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_PlayerScoreListResponse
//

@implementation GTLRGames_PlayerScoreListResponse
@dynamic kind, submittedScores;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"submittedScores" : [GTLRGames_PlayerScoreResponse class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_PlayerScoreResponse
//

@implementation GTLRGames_PlayerScoreResponse
@dynamic beatenScoreTimeSpans, formattedScore, kind, leaderboardId, scoreTag,
         unbeatenScores;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"beatenScoreTimeSpans" : [NSString class],
    @"unbeatenScores" : [GTLRGames_PlayerScore class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_PlayerScoreSubmissionList
//

@implementation GTLRGames_PlayerScoreSubmissionList
@dynamic kind, scores;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"scores" : [GTLRGames_ScoreSubmission class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_ProfileSettings
//

@implementation GTLRGames_ProfileSettings
@dynamic friendsListVisibility, kind, profileVisible;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_RevisionCheckResponse
//

@implementation GTLRGames_RevisionCheckResponse
@dynamic apiVersion, kind, revisionStatus;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_ScopedPlayerIds
//

@implementation GTLRGames_ScopedPlayerIds
@dynamic developerPlayerKey, gamePlayerId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_ScoreSubmission
//

@implementation GTLRGames_ScoreSubmission
@dynamic kind, leaderboardId, score, scoreTag, signature;

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_Snapshot
//

@implementation GTLRGames_Snapshot
@dynamic coverImage, descriptionProperty, driveId, durationMillis, identifier,
         kind, lastModifiedMillis, progressValue, title, type, uniqueName;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_SnapshotImage
//

@implementation GTLRGames_SnapshotImage
@dynamic height, kind, mimeType, url, width;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"mimeType" : @"mime_type" };
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_SnapshotListResponse
//

@implementation GTLRGames_SnapshotListResponse
@dynamic items, kind, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRGames_Snapshot class]
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRGames_StatsResponse
//

@implementation GTLRGames_StatsResponse
@dynamic avgSessionLengthMinutes, churnProbability, daysSinceLastPlayed,
         highSpenderProbability, kind, numPurchases, numSessions,
         numSessionsPercentile, spendPercentile, spendProbability,
         totalSpendNext28Days;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"avgSessionLengthMinutes" : @"avg_session_length_minutes",
    @"churnProbability" : @"churn_probability",
    @"daysSinceLastPlayed" : @"days_since_last_played",
    @"highSpenderProbability" : @"high_spender_probability",
    @"numPurchases" : @"num_purchases",
    @"numSessions" : @"num_sessions",
    @"numSessionsPercentile" : @"num_sessions_percentile",
    @"spendPercentile" : @"spend_percentile",
    @"spendProbability" : @"spend_probability",
    @"totalSpendNext28Days" : @"total_spend_next_28_days"
  };
  return map;
}

+ (BOOL)isKindValidForClassRegistry {
  // This class has a "kind" property that doesn't appear to be usable to
  // determine what type of object was encoded in the JSON.
  return NO;
}

@end
