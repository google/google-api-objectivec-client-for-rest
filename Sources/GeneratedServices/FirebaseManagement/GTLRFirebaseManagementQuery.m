// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Firebase Management API (firebase/v1beta1)
// Description:
//   The Firebase Management API enables programmatic setup and management of
//   Firebase projects, including a project's Firebase resources and Firebase
//   apps.
// Documentation:
//   https://firebase.google.com

#import <GoogleAPIClientForREST/GTLRFirebaseManagementQuery.h>

@implementation GTLRFirebaseManagementQuery

@dynamic fields;

@end

@implementation GTLRFirebaseManagementQuery_AvailableProjectsList

@dynamic pageSize, pageToken;

+ (instancetype)query {
  NSString *pathURITemplate = @"v1beta1/availableProjects";
  GTLRFirebaseManagementQuery_AvailableProjectsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRFirebaseManagement_ListAvailableProjectsResponse class];
  query.loggingName = @"firebase.availableProjects.list";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_OperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRFirebaseManagementQuery_OperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_Operation class];
  query.loggingName = @"firebase.operations.get";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsAddFirebase

@dynamic project;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_AddFirebaseRequest *)object
                        project:(NSString *)project {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"project" ];
  NSString *pathURITemplate = @"v1beta1/{+project}:addFirebase";
  GTLRFirebaseManagementQuery_ProjectsAddFirebase *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.project = project;
  query.expectedObjectClass = [GTLRFirebaseManagement_Operation class];
  query.loggingName = @"firebase.projects.addFirebase";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsAddGoogleAnalytics

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_AddGoogleAnalyticsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}:addGoogleAnalytics";
  GTLRFirebaseManagementQuery_ProjectsAddGoogleAnalytics *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseManagement_Operation class];
  query.loggingName = @"firebase.projects.addGoogleAnalytics";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsAndroidAppsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_AndroidApp *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/androidApps";
  GTLRFirebaseManagementQuery_ProjectsAndroidAppsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseManagement_Operation class];
  query.loggingName = @"firebase.projects.androidApps.create";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsAndroidAppsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRFirebaseManagementQuery_ProjectsAndroidAppsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_AndroidApp class];
  query.loggingName = @"firebase.projects.androidApps.get";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsAndroidAppsGetConfig

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRFirebaseManagementQuery_ProjectsAndroidAppsGetConfig *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_AndroidAppConfig class];
  query.loggingName = @"firebase.projects.androidApps.getConfig";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsAndroidAppsList

@dynamic pageSize, pageToken, parent, showDeleted;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/androidApps";
  GTLRFirebaseManagementQuery_ProjectsAndroidAppsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseManagement_ListAndroidAppsResponse class];
  query.loggingName = @"firebase.projects.androidApps.list";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsAndroidAppsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_AndroidApp *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRFirebaseManagementQuery_ProjectsAndroidAppsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_AndroidApp class];
  query.loggingName = @"firebase.projects.androidApps.patch";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsAndroidAppsRemove

@dynamic name;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_RemoveAndroidAppRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}:remove";
  GTLRFirebaseManagementQuery_ProjectsAndroidAppsRemove *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_Operation class];
  query.loggingName = @"firebase.projects.androidApps.remove";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsAndroidAppsShaCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_ShaCertificate *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/sha";
  GTLRFirebaseManagementQuery_ProjectsAndroidAppsShaCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseManagement_ShaCertificate class];
  query.loggingName = @"firebase.projects.androidApps.sha.create";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsAndroidAppsShaDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRFirebaseManagementQuery_ProjectsAndroidAppsShaDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_Empty class];
  query.loggingName = @"firebase.projects.androidApps.sha.delete";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsAndroidAppsShaList

@dynamic parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/sha";
  GTLRFirebaseManagementQuery_ProjectsAndroidAppsShaList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseManagement_ListShaCertificatesResponse class];
  query.loggingName = @"firebase.projects.androidApps.sha.list";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsAndroidAppsUndelete

@dynamic name;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_UndeleteAndroidAppRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}:undelete";
  GTLRFirebaseManagementQuery_ProjectsAndroidAppsUndelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_Operation class];
  query.loggingName = @"firebase.projects.androidApps.undelete";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsAvailableLocationsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/availableLocations";
  GTLRFirebaseManagementQuery_ProjectsAvailableLocationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseManagement_ListAvailableLocationsResponse class];
  query.loggingName = @"firebase.projects.availableLocations.list";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsDefaultLocationFinalize

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_FinalizeDefaultLocationRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/defaultLocation:finalize";
  GTLRFirebaseManagementQuery_ProjectsDefaultLocationFinalize *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseManagement_Operation class];
  query.loggingName = @"firebase.projects.defaultLocation.finalize";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRFirebaseManagementQuery_ProjectsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_FirebaseProject class];
  query.loggingName = @"firebase.projects.get";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsGetAdminSdkConfig

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRFirebaseManagementQuery_ProjectsGetAdminSdkConfig *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_AdminSdkConfig class];
  query.loggingName = @"firebase.projects.getAdminSdkConfig";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsGetAnalyticsDetails

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRFirebaseManagementQuery_ProjectsGetAnalyticsDetails *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_AnalyticsDetails class];
  query.loggingName = @"firebase.projects.getAnalyticsDetails";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsIosAppsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_IosApp *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/iosApps";
  GTLRFirebaseManagementQuery_ProjectsIosAppsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseManagement_Operation class];
  query.loggingName = @"firebase.projects.iosApps.create";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsIosAppsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRFirebaseManagementQuery_ProjectsIosAppsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_IosApp class];
  query.loggingName = @"firebase.projects.iosApps.get";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsIosAppsGetConfig

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRFirebaseManagementQuery_ProjectsIosAppsGetConfig *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_IosAppConfig class];
  query.loggingName = @"firebase.projects.iosApps.getConfig";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsIosAppsList

@dynamic pageSize, pageToken, parent, showDeleted;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/iosApps";
  GTLRFirebaseManagementQuery_ProjectsIosAppsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseManagement_ListIosAppsResponse class];
  query.loggingName = @"firebase.projects.iosApps.list";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsIosAppsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_IosApp *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRFirebaseManagementQuery_ProjectsIosAppsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_IosApp class];
  query.loggingName = @"firebase.projects.iosApps.patch";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsIosAppsRemove

@dynamic name;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_RemoveIosAppRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}:remove";
  GTLRFirebaseManagementQuery_ProjectsIosAppsRemove *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_Operation class];
  query.loggingName = @"firebase.projects.iosApps.remove";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsIosAppsUndelete

@dynamic name;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_UndeleteIosAppRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}:undelete";
  GTLRFirebaseManagementQuery_ProjectsIosAppsUndelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_Operation class];
  query.loggingName = @"firebase.projects.iosApps.undelete";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsList

@dynamic pageSize, pageToken, showDeleted;

+ (instancetype)query {
  NSString *pathURITemplate = @"v1beta1/projects";
  GTLRFirebaseManagementQuery_ProjectsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:nil];
  query.expectedObjectClass = [GTLRFirebaseManagement_ListFirebaseProjectsResponse class];
  query.loggingName = @"firebase.projects.list";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_FirebaseProject *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRFirebaseManagementQuery_ProjectsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_FirebaseProject class];
  query.loggingName = @"firebase.projects.patch";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsRemoveAnalytics

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_RemoveAnalyticsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}:removeAnalytics";
  GTLRFirebaseManagementQuery_ProjectsRemoveAnalytics *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseManagement_Empty class];
  query.loggingName = @"firebase.projects.removeAnalytics";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsSearchApps

@dynamic filter, pageSize, pageToken, parent, showDeleted;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}:searchApps";
  GTLRFirebaseManagementQuery_ProjectsSearchApps *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseManagement_SearchFirebaseAppsResponse class];
  query.loggingName = @"firebase.projects.searchApps";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsWebAppsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_WebApp *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/webApps";
  GTLRFirebaseManagementQuery_ProjectsWebAppsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseManagement_Operation class];
  query.loggingName = @"firebase.projects.webApps.create";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsWebAppsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRFirebaseManagementQuery_ProjectsWebAppsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_WebApp class];
  query.loggingName = @"firebase.projects.webApps.get";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsWebAppsGetConfig

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRFirebaseManagementQuery_ProjectsWebAppsGetConfig *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_WebAppConfig class];
  query.loggingName = @"firebase.projects.webApps.getConfig";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsWebAppsList

@dynamic pageSize, pageToken, parent, showDeleted;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1beta1/{+parent}/webApps";
  GTLRFirebaseManagementQuery_ProjectsWebAppsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseManagement_ListWebAppsResponse class];
  query.loggingName = @"firebase.projects.webApps.list";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsWebAppsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_WebApp *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}";
  GTLRFirebaseManagementQuery_ProjectsWebAppsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_WebApp class];
  query.loggingName = @"firebase.projects.webApps.patch";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsWebAppsRemove

@dynamic name;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_RemoveWebAppRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}:remove";
  GTLRFirebaseManagementQuery_ProjectsWebAppsRemove *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_Operation class];
  query.loggingName = @"firebase.projects.webApps.remove";
  return query;
}

@end

@implementation GTLRFirebaseManagementQuery_ProjectsWebAppsUndelete

@dynamic name;

+ (instancetype)queryWithObject:(GTLRFirebaseManagement_UndeleteWebAppRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1beta1/{+name}:undelete";
  GTLRFirebaseManagementQuery_ProjectsWebAppsUndelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseManagement_Operation class];
  query.loggingName = @"firebase.projects.webApps.undelete";
  return query;
}

@end
