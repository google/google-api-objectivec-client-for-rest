// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Contact Center AI Insights API (contactcenterinsights/v1)
// Documentation:
//   https://cloud.google.com/contact-center/insights/docs

#import <GoogleAPIClientForREST/GTLRContactcenterinsightsQuery.h>

// ----------------------------------------------------------------------------
// Constants

// view
NSString * const kGTLRContactcenterinsightsViewBasic           = @"BASIC";
NSString * const kGTLRContactcenterinsightsViewConversationViewUnspecified = @"CONVERSATION_VIEW_UNSPECIFIED";
NSString * const kGTLRContactcenterinsightsViewFull            = @"FULL";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRContactcenterinsightsQuery

@dynamic fields;

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAnalysisRulesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AnalysisRule *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/analysisRules";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAnalysisRulesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AnalysisRule class];
  query.loggingName = @"contactcenterinsights.projects.locations.analysisRules.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAnalysisRulesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAnalysisRulesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.analysisRules.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAnalysisRulesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAnalysisRulesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AnalysisRule class];
  query.loggingName = @"contactcenterinsights.projects.locations.analysisRules.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAnalysisRulesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/analysisRules";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAnalysisRulesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListAnalysisRulesResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.analysisRules.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAnalysisRulesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AnalysisRule *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAnalysisRulesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AnalysisRule class];
  query.loggingName = @"contactcenterinsights.projects.locations.analysisRules.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAssessmentRulesCreate

@dynamic assessmentRuleId, parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AssessmentRule *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assessmentRules";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAssessmentRulesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AssessmentRule class];
  query.loggingName = @"contactcenterinsights.projects.locations.assessmentRules.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAssessmentRulesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAssessmentRulesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.assessmentRules.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAssessmentRulesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAssessmentRulesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AssessmentRule class];
  query.loggingName = @"contactcenterinsights.projects.locations.assessmentRules.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAssessmentRulesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assessmentRules";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAssessmentRulesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListAssessmentRulesResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.assessmentRules.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAssessmentRulesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AssessmentRule *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAssessmentRulesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AssessmentRule class];
  query.loggingName = @"contactcenterinsights.projects.locations.assessmentRules.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAnalysesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Analysis *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/analyses";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAnalysesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.analyses.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAnalysesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAnalysesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.analyses.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAnalysesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAnalysesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Analysis class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.analyses.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAnalysesList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/analyses";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAnalysesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListAnalysesResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.analyses.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsAppeal

@dynamic name;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AppealAssessmentRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:appeal";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsAppeal *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Assessment class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.appeal";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Assessment *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assessments";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Assessment class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsFinalize

@dynamic name;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FinalizeAssessmentRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:finalize";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsFinalize *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Assessment class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.finalize";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Assessment class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assessments";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListAssessmentsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsNotesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Note *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notes";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsNotesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Note class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.notes.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsNotesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsNotesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.notes.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsNotesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notes";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsNotesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListNotesResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.notes.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsNotesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Note *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsNotesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Note class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.notes.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsPublish

@dynamic name;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1PublishAssessmentRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:publish";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsAssessmentsPublish *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Assessment class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.assessments.publish";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsBulkAnalyze

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations:bulkAnalyze";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsBulkAnalyze *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.bulkAnalyze";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsCalculateStats

@dynamic filter, location;

+ (instancetype)queryWithLocation:(NSString *)location {
  NSArray *pathParams = @[ @"location" ];
  NSString *pathURITemplate = @"v1/{+location}/conversations:calculateStats";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsCalculateStats *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.location = location;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1CalculateStatsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.calculateStats";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsFeedbackLabelsCreate

@dynamic feedbackLabelId, parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FeedbackLabel *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/feedbackLabels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsFeedbackLabelsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FeedbackLabel class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.feedbackLabels.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsFeedbackLabelsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsFeedbackLabelsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.feedbackLabels.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsFeedbackLabelsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsFeedbackLabelsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FeedbackLabel class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.feedbackLabels.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsFeedbackLabelsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/feedbackLabels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsFeedbackLabelsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.feedbackLabels.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsFeedbackLabelsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FeedbackLabel *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsFeedbackLabelsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FeedbackLabel class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.feedbackLabels.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Conversation class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsList

@dynamic filter, orderBy, pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsConversationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListConversationsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.conversations.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsCreate

@dynamic authorizedViewId, parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AuthorizedView *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/authorizedViews";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AuthorizedView class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AuthorizedView class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsGetIamPolicy

@dynamic optionsRequestedPolicyVersion, resource;

+ (NSDictionary<NSString *, NSString *> *)parameterNameMap {
  return @{ @"optionsRequestedPolicyVersion" : @"options.requestedPolicyVersion" };
}

+ (instancetype)queryWithResource:(NSString *)resource {
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:getIamPolicy";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsGetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.resource = resource;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleIamV1Policy class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.getIamPolicy";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/authorizedViews";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListAuthorizedViewsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.operations.cancel";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.operations.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.operations.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AuthorizedView *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AuthorizedView class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsQueryMetrics

@dynamic location;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QueryMetricsRequest *)object
                       location:(NSString *)location {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"location" ];
  NSString *pathURITemplate = @"v1/{+location}:queryMetrics";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsQueryMetrics *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.location = location;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.queryMetrics";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsQueryPerformanceOverview

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:queryPerformanceOverview";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsQueryPerformanceOverview *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.queryPerformanceOverview";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsSearch

@dynamic orderBy, pageSize, pageToken, parent, query;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/authorizedViews:search";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsSearch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1SearchAuthorizedViewsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.search";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsSetIamPolicy

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:setIamPolicy";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsSetIamPolicy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleIamV1Policy class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.setIamPolicy";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsTestIamPermissions

@dynamic resource;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"resource" ];
  NSString *pathURITemplate = @"v1/{+resource}:testIamPermissions";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsAuthorizedViewsTestIamPermissions *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.resource = resource;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleIamV1TestIamPermissionsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.authorizedViews.testIamPermissions";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsCreate

@dynamic authorizedViewSetId, parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AuthorizedViewSet *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/authorizedViewSets";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AuthorizedViewSet class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AuthorizedViewSet class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/authorizedViewSets";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListAuthorizedViewSetsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AuthorizedViewSet *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsAuthorizedViewSetsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AuthorizedViewSet class];
  query.loggingName = @"contactcenterinsights.projects.locations.authorizedViewSets.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsBulkDeleteFeedbackLabels

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:bulkDeleteFeedbackLabels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsBulkDeleteFeedbackLabels *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.bulkDeleteFeedbackLabels";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsBulkDownloadFeedbackLabels

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:bulkDownloadFeedbackLabels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsBulkDownloadFeedbackLabels *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.bulkDownloadFeedbackLabels";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsBulkUploadFeedbackLabels

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:bulkUploadFeedbackLabels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsBulkUploadFeedbackLabels *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.bulkUploadFeedbackLabels";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Analysis *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/analyses";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.analyses.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.analyses.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Analysis class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.analyses.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/analyses";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListAnalysesResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.analyses.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsAppeal

@dynamic name;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1AppealAssessmentRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:appeal";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsAppeal *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Assessment class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.assessments.appeal";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Assessment *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assessments";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Assessment class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.assessments.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.assessments.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsFinalize

@dynamic name;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FinalizeAssessmentRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:finalize";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsFinalize *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Assessment class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.assessments.finalize";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Assessment class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.assessments.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/assessments";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListAssessmentsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.assessments.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsNotesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Note *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notes";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsNotesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Note class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.assessments.notes.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsNotesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsNotesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.assessments.notes.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsNotesList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/notes";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsNotesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListNotesResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.assessments.notes.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsNotesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Note *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsNotesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Note class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.assessments.notes.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsPublish

@dynamic name;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1PublishAssessmentRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:publish";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAssessmentsPublish *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Assessment class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.assessments.publish";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsBulkAnalyze

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations:bulkAnalyze";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsBulkAnalyze *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.bulkAnalyze";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsBulkDelete

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations:bulkDelete";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsBulkDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.bulkDelete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsCalculateStats

@dynamic filter, location;

+ (instancetype)queryWithLocation:(NSString *)location {
  NSArray *pathParams = @[ @"location" ];
  NSString *pathURITemplate = @"v1/{+location}/conversations:calculateStats";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsCalculateStats *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.location = location;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1CalculateStatsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.calculateStats";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsCreate

@dynamic conversationId, parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Conversation *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Conversation class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsFeedbackLabelsCreate

@dynamic feedbackLabelId, parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FeedbackLabel *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/feedbackLabels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsFeedbackLabelsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FeedbackLabel class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.feedbackLabels.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsFeedbackLabelsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsFeedbackLabelsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.feedbackLabels.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsFeedbackLabelsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsFeedbackLabelsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FeedbackLabel class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.feedbackLabels.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsFeedbackLabelsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/feedbackLabels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsFeedbackLabelsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.feedbackLabels.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsFeedbackLabelsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FeedbackLabel *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsFeedbackLabelsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FeedbackLabel class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.feedbackLabels.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Conversation class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsIngest

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1IngestConversationsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations:ingest";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsIngest *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.ingest";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsList

@dynamic filter, orderBy, pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListConversationsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsPatch

@dynamic allowMissing, name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Conversation *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Conversation class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsUpload

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1UploadConversationRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations:upload";
  GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsUpload *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.conversations.upload";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsBulkDeleteFeedbackLabels

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1BulkDeleteFeedbackLabelsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:bulkDeleteFeedbackLabels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsBulkDeleteFeedbackLabels *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.bulkDeleteFeedbackLabels";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsBulkDownloadFeedbackLabels

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1BulkDownloadFeedbackLabelsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:bulkDownloadFeedbackLabels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsBulkDownloadFeedbackLabels *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.bulkDownloadFeedbackLabels";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsBulkUploadFeedbackLabels

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1BulkUploadFeedbackLabelsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:bulkUploadFeedbackLabels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsBulkUploadFeedbackLabels *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.bulkUploadFeedbackLabels";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsAnalysesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Analysis *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/analyses";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsAnalysesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.analyses.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsAnalysesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsAnalysesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.analyses.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsAnalysesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsAnalysesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Analysis class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.analyses.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsAnalysesList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/analyses";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsAnalysesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListAnalysesResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.analyses.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsBulkAnalyze

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1BulkAnalyzeConversationsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations:bulkAnalyze";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsBulkAnalyze *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.bulkAnalyze";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsBulkDelete

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1BulkDeleteConversationsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations:bulkDelete";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsBulkDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.bulkDelete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsCalculateStats

@dynamic location;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1CalculateStatsRequest *)object
                       location:(NSString *)location {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"location" ];
  NSString *pathURITemplate = @"v1/{+location}/conversations:calculateStats";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsCalculateStats *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.location = location;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1CalculateStatsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.calculateStats";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsFeedbackLabelsCreate

@dynamic feedbackLabelId, parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FeedbackLabel *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/feedbackLabels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsFeedbackLabelsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FeedbackLabel class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.feedbackLabels.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsFeedbackLabelsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsFeedbackLabelsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.feedbackLabels.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsFeedbackLabelsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsFeedbackLabelsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FeedbackLabel class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.feedbackLabels.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsFeedbackLabelsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/feedbackLabels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsFeedbackLabelsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListFeedbackLabelsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.feedbackLabels.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsFeedbackLabelsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FeedbackLabel *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsFeedbackLabelsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1FeedbackLabel class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.feedbackLabels.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsGet

@dynamic name, view;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Conversation class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsIngest

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1IngestConversationsRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations:ingest";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsIngest *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.ingest";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsList

@dynamic filter, orderBy, pageSize, pageToken, parent, view;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/conversations";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsConversationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListConversationsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.conversations.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsInsightsdataExport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/insightsdata:export";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsInsightsdataExport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.insightsdata.export";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsListAllFeedbackLabels

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:listAllFeedbackLabels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsDatasetsListAllFeedbackLabels *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListAllFeedbackLabelsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.datasets.listAllFeedbackLabels";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsEncryptionSpecInitialize

@dynamic name;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1InitializeEncryptionSpecRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:initialize";
  GTLRContactcenterinsightsQuery_ProjectsLocationsEncryptionSpecInitialize *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.encryptionSpec.initialize";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsGetEncryptionSpec

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsGetEncryptionSpec *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1EncryptionSpec class];
  query.loggingName = @"contactcenterinsights.projects.locations.getEncryptionSpec";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsGetSettings

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsGetSettings *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Settings class];
  query.loggingName = @"contactcenterinsights.projects.locations.getSettings";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsInsightsdataExport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/insightsdata:export";
  GTLRContactcenterinsightsQuery_ProjectsLocationsInsightsdataExport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.insightsdata.export";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsCalculateIssueModelStats

@dynamic issueModel;

+ (instancetype)queryWithIssueModel:(NSString *)issueModel {
  NSArray *pathParams = @[ @"issueModel" ];
  NSString *pathURITemplate = @"v1/{+issueModel}:calculateIssueModelStats";
  GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsCalculateIssueModelStats *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.issueModel = issueModel;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1IssueModel *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/issueModels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.issueModels.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.issueModels.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsDeploy

@dynamic name;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1DeployIssueModelRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:deploy";
  GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsDeploy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.issueModels.deploy";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsExport

@dynamic name;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ExportIssueModelRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:export";
  GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsExport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.issueModels.export";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1IssueModel class];
  query.loggingName = @"contactcenterinsights.projects.locations.issueModels.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsImport

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ImportIssueModelRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/issueModels:import";
  GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsImport *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.issueModels.import";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Issue *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/issues";
  GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.issueModels.issues.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.issueModels.issues.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Issue class];
  query.loggingName = @"contactcenterinsights.projects.locations.issueModels.issues.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesList

@dynamic parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/issues";
  GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListIssuesResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.issueModels.issues.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Issue *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Issue class];
  query.loggingName = @"contactcenterinsights.projects.locations.issueModels.issues.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsList

@dynamic parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/issueModels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListIssueModelsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.issueModels.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1IssueModel *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1IssueModel class];
  query.loggingName = @"contactcenterinsights.projects.locations.issueModels.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsUndeploy

@dynamic name;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:undeploy";
  GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsUndeploy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.issueModels.undeploy";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsListAllFeedbackLabels

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:listAllFeedbackLabels";
  GTLRContactcenterinsightsQuery_ProjectsLocationsListAllFeedbackLabels *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListAllFeedbackLabelsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.listAllFeedbackLabels";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsOperationsCancel

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRContactcenterinsightsQuery_ProjectsLocationsOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.operations.cancel";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.operations.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRContactcenterinsightsQuery_ProjectsLocationsOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.operations.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1PhraseMatcher *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/phraseMatchers";
  GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1PhraseMatcher class];
  query.loggingName = @"contactcenterinsights.projects.locations.phraseMatchers.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.phraseMatchers.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1PhraseMatcher class];
  query.loggingName = @"contactcenterinsights.projects.locations.phraseMatchers.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/phraseMatchers";
  GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.phraseMatchers.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1PhraseMatcher *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1PhraseMatcher class];
  query.loggingName = @"contactcenterinsights.projects.locations.phraseMatchers.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaQuestionTagsCreate

@dynamic parent, qaQuestionTagId;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaQuestionTag *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/qaQuestionTags";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaQuestionTagsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaQuestionTag class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaQuestionTags.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaQuestionTagsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaQuestionTagsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaQuestionTags.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaQuestionTagsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaQuestionTagsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaQuestionTag class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaQuestionTags.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaQuestionTagsList

@dynamic filter, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/qaQuestionTags";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaQuestionTagsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListQaQuestionTagsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaQuestionTags.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaQuestionTagsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaQuestionTag *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaQuestionTagsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaQuestionTags.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsCreate

@dynamic parent, qaScorecardId;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaScorecard *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/qaScorecards";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaScorecard class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaScorecard class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/qaScorecards";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListQaScorecardsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaScorecard *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaScorecard class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsCreate

@dynamic parent, qaScorecardRevisionId;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaScorecardRevision *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/revisions";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaScorecardRevision class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.revisions.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsDelete

@dynamic force, name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.revisions.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsDeploy

@dynamic name;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1DeployQaScorecardRevisionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:deploy";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsDeploy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaScorecardRevision class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.revisions.deploy";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaScorecardRevision class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.revisions.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/revisions";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListQaScorecardRevisionsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.revisions.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsQaQuestionsCreate

@dynamic parent, qaQuestionId;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaQuestion *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/qaQuestions";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsQaQuestionsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaQuestion class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.revisions.qaQuestions.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsQaQuestionsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsQaQuestionsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.revisions.qaQuestions.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsQaQuestionsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsQaQuestionsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaQuestion class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.revisions.qaQuestions.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsQaQuestionsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/qaQuestions";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsQaQuestionsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListQaQuestionsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.revisions.qaQuestions.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsQaQuestionsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaQuestion *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsQaQuestionsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaQuestion class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.revisions.qaQuestions.patch";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsTuneQaScorecardRevision

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1TuneQaScorecardRevisionRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:tuneQaScorecardRevision";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsTuneQaScorecardRevision *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.revisions.tuneQaScorecardRevision";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsUndeploy

@dynamic name;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1UndeployQaScorecardRevisionRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:undeploy";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQaScorecardsRevisionsUndeploy *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QaScorecardRevision class];
  query.loggingName = @"contactcenterinsights.projects.locations.qaScorecards.revisions.undeploy";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQueryMetrics

@dynamic location;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QueryMetricsRequest *)object
                       location:(NSString *)location {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"location" ];
  NSString *pathURITemplate = @"v1/{+location}:queryMetrics";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQueryMetrics *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.location = location;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.queryMetrics";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsQueryPerformanceOverview

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1QueryPerformanceOverviewRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}:queryPerformanceOverview";
  GTLRContactcenterinsightsQuery_ProjectsLocationsQueryPerformanceOverview *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleLongrunningOperation class];
  query.loggingName = @"contactcenterinsights.projects.locations.queryPerformanceOverview";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsUpdateSettings

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Settings *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsUpdateSettings *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Settings class];
  query.loggingName = @"contactcenterinsights.projects.locations.updateSettings";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsViewsCreate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1View *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/views";
  GTLRContactcenterinsightsQuery_ProjectsLocationsViewsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1View class];
  query.loggingName = @"contactcenterinsights.projects.locations.views.create";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsViewsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsViewsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleProtobufEmpty class];
  query.loggingName = @"contactcenterinsights.projects.locations.views.delete";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsViewsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsViewsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1View class];
  query.loggingName = @"contactcenterinsights.projects.locations.views.get";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsViewsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/views";
  GTLRContactcenterinsightsQuery_ProjectsLocationsViewsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListViewsResponse class];
  query.loggingName = @"contactcenterinsights.projects.locations.views.list";
  return query;
}

@end

@implementation GTLRContactcenterinsightsQuery_ProjectsLocationsViewsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1View *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRContactcenterinsightsQuery_ProjectsLocationsViewsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1View class];
  query.loggingName = @"contactcenterinsights.projects.locations.views.patch";
  return query;
}

@end
