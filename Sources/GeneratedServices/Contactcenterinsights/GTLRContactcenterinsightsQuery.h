// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Contact Center AI Insights API (contactcenterinsights/v1)
// Documentation:
//   https://cloud.google.com/contact-center/insights/docs

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRContactcenterinsightsObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// view

/**
 *  Populates all fields in the conversation except the transcript.
 *
 *  Value: "BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRContactcenterinsightsViewBasic;
/**
 *  The conversation view is not specified. * Defaults to `FULL` in
 *  `GetConversationRequest`. * Defaults to `BASIC` in
 *  `ListConversationsRequest`.
 *
 *  Value: "CONVERSATION_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRContactcenterinsightsViewConversationViewUnspecified;
/**
 *  Populates all fields in the conversation.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRContactcenterinsightsViewFull;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Contactcenterinsights query classes.
 */
@interface GTLRContactcenterinsightsQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates an analysis. The long running operation is done when the analysis
 *  has completed.
 *
 *  Method: contactcenterinsights.projects.locations.conversations.analyses.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesCreate : GTLRContactcenterinsightsQuery

/** Required. The parent resource of the analysis. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRContactcenterinsights_GoogleLongrunningOperation.
 *
 *  Creates an analysis. The long running operation is done when the analysis
 *  has completed.
 *
 *  @param object The @c
 *    GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Analysis to
 *    include in the query.
 *  @param parent Required. The parent resource of the analysis.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesCreate
 */
+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Analysis *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an analysis.
 *
 *  Method: contactcenterinsights.projects.locations.conversations.analyses.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesDelete : GTLRContactcenterinsightsQuery

/** Required. The name of the analysis to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRContactcenterinsights_GoogleProtobufEmpty.
 *
 *  Deletes an analysis.
 *
 *  @param name Required. The name of the analysis to delete.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an analysis.
 *
 *  Method: contactcenterinsights.projects.locations.conversations.analyses.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesGet : GTLRContactcenterinsightsQuery

/** Required. The name of the analysis to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Analysis.
 *
 *  Gets an analysis.
 *
 *  @param name Required. The name of the analysis to get.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists analyses.
 *
 *  Method: contactcenterinsights.projects.locations.conversations.analyses.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesList : GTLRContactcenterinsightsQuery

/**
 *  A filter to reduce results to a specific subset. Useful for querying
 *  conversations with specific properties.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The maximum number of analyses to return in the response. If this value is
 *  zero, the service will select a default size. A call might return fewer
 *  objects than requested. A non-empty `next_page_token` in the response
 *  indicates that more data is available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListAnalysesResponse`; indicates that this
 *  is a continuation of a prior `ListAnalyses` call and the system should
 *  return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource of the analyses. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListAnalysesResponse.
 *
 *  Lists analyses.
 *
 *  @param parent Required. The parent resource of the analyses.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsAnalysesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets conversation statistics.
 *
 *  Method: contactcenterinsights.projects.locations.conversations.calculateStats
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsCalculateStats : GTLRContactcenterinsightsQuery

/**
 *  A filter to reduce results to a specific subset. This field is useful for
 *  getting statistics about conversations with specific properties.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Required. The location of the conversations. */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1CalculateStatsResponse.
 *
 *  Gets conversation statistics.
 *
 *  @param location Required. The location of the conversations.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsCalculateStats
 */
+ (instancetype)queryWithLocation:(NSString *)location;

@end

/**
 *  Creates a conversation.
 *
 *  Method: contactcenterinsights.projects.locations.conversations.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsCreate : GTLRContactcenterinsightsQuery

/**
 *  A unique ID for the new conversation. This ID will become the final
 *  component of the conversation's resource name. If no ID is specified, a
 *  server-generated ID will be used. This value should be 4-64 characters and
 *  must match the regular expression `^[a-z0-9-]{4,64}$`. Valid characters are
 *  `a-z-`
 */
@property(nonatomic, copy, nullable) NSString *conversationId;

/** Required. The parent resource of the conversation. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Conversation.
 *
 *  Creates a conversation.
 *
 *  @param object The @c
 *    GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Conversation
 *    to include in the query.
 *  @param parent Required. The parent resource of the conversation.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsCreate
 */
+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Conversation *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a conversation.
 *
 *  Method: contactcenterinsights.projects.locations.conversations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsDelete : GTLRContactcenterinsightsQuery

/**
 *  If set to true, all of this conversation's analyses will also be deleted.
 *  Otherwise, the request will only succeed if the conversation has no
 *  analyses.
 */
@property(nonatomic, assign) BOOL force;

/** Required. The name of the conversation to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRContactcenterinsights_GoogleProtobufEmpty.
 *
 *  Deletes a conversation.
 *
 *  @param name Required. The name of the conversation to delete.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a conversation.
 *
 *  Method: contactcenterinsights.projects.locations.conversations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsGet : GTLRContactcenterinsightsQuery

/** Required. The name of the conversation to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The level of details of the conversation. Default is `FULL`.
 *
 *  Likely values:
 *    @arg @c kGTLRContactcenterinsightsViewConversationViewUnspecified The
 *        conversation view is not specified. * Defaults to `FULL` in
 *        `GetConversationRequest`. * Defaults to `BASIC` in
 *        `ListConversationsRequest`. (Value: "CONVERSATION_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRContactcenterinsightsViewFull Populates all fields in the
 *        conversation. (Value: "FULL")
 *    @arg @c kGTLRContactcenterinsightsViewBasic Populates all fields in the
 *        conversation except the transcript. (Value: "BASIC")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Conversation.
 *
 *  Gets a conversation.
 *
 *  @param name Required. The name of the conversation to get.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists conversations.
 *
 *  Method: contactcenterinsights.projects.locations.conversations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsList : GTLRContactcenterinsightsQuery

/**
 *  A filter to reduce results to a specific subset. Useful for querying
 *  conversations with specific properties.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The maximum number of conversations to return in the response. A valid page
 *  size ranges from 0 to 1,000 inclusive. If the page size is zero or
 *  unspecified, a default page size of 100 will be chosen. Note that a call
 *  might return fewer results than the requested page size.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListConversationsResponse`. This value
 *  indicates that this is a continuation of a prior `ListConversations` call
 *  and that the system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource of the conversation. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  The level of details of the conversation. Default is `BASIC`.
 *
 *  Likely values:
 *    @arg @c kGTLRContactcenterinsightsViewConversationViewUnspecified The
 *        conversation view is not specified. * Defaults to `FULL` in
 *        `GetConversationRequest`. * Defaults to `BASIC` in
 *        `ListConversationsRequest`. (Value: "CONVERSATION_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRContactcenterinsightsViewFull Populates all fields in the
 *        conversation. (Value: "FULL")
 *    @arg @c kGTLRContactcenterinsightsViewBasic Populates all fields in the
 *        conversation except the transcript. (Value: "BASIC")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListConversationsResponse.
 *
 *  Lists conversations.
 *
 *  @param parent Required. The parent resource of the conversation.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a conversation.
 *
 *  Method: contactcenterinsights.projects.locations.conversations.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsPatch : GTLRContactcenterinsightsQuery

/**
 *  Immutable. The resource name of the conversation. Format:
 *  projects/{project}/locations/{location}/conversations/{conversation}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Conversation.
 *
 *  Updates a conversation.
 *
 *  @param object The @c
 *    GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Conversation
 *    to include in the query.
 *  @param name Immutable. The resource name of the conversation. Format:
 *    projects/{project}/locations/{location}/conversations/{conversation}
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsConversationsPatch
 */
+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Conversation *)object
                           name:(NSString *)name;

@end

/**
 *  Gets project-level settings.
 *
 *  Method: contactcenterinsights.projects.locations.getSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsGetSettings : GTLRContactcenterinsightsQuery

/** Required. The name of the settings resource to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Settings.
 *
 *  Gets project-level settings.
 *
 *  @param name Required. The name of the settings resource to get.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsGetSettings
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Export insights data to a destination defined in the request body.
 *
 *  Method: contactcenterinsights.projects.locations.insightsdata.export
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsInsightsdataExport : GTLRContactcenterinsightsQuery

/** Required. The parent resource to export data from. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRContactcenterinsights_GoogleLongrunningOperation.
 *
 *  Export insights data to a destination defined in the request body.
 *
 *  @param object The @c
 *    GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest
 *    to include in the query.
 *  @param parent Required. The parent resource to export data from.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsInsightsdataExport
 */
+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ExportInsightsDataRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets an issue model's statistics.
 *
 *  Method: contactcenterinsights.projects.locations.issueModels.calculateIssueModelStats
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsCalculateIssueModelStats : GTLRContactcenterinsightsQuery

/** Required. The resource name of the issue model to query against. */
@property(nonatomic, copy, nullable) NSString *issueModel;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1CalculateIssueModelStatsResponse.
 *
 *  Gets an issue model's statistics.
 *
 *  @param issueModel Required. The resource name of the issue model to query
 *    against.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsCalculateIssueModelStats
 */
+ (instancetype)queryWithIssueModel:(NSString *)issueModel;

@end

/**
 *  Creates an issue model.
 *
 *  Method: contactcenterinsights.projects.locations.issueModels.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsCreate : GTLRContactcenterinsightsQuery

/** Required. The parent resource of the issue model. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRContactcenterinsights_GoogleLongrunningOperation.
 *
 *  Creates an issue model.
 *
 *  @param object The @c
 *    GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1IssueModel to
 *    include in the query.
 *  @param parent Required. The parent resource of the issue model.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsCreate
 */
+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1IssueModel *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an issue model.
 *
 *  Method: contactcenterinsights.projects.locations.issueModels.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsDelete : GTLRContactcenterinsightsQuery

/** Required. The name of the issue model to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRContactcenterinsights_GoogleLongrunningOperation.
 *
 *  Deletes an issue model.
 *
 *  @param name Required. The name of the issue model to delete.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deploys an issue model. Returns an error if a model is already deployed. An
 *  issue model can only be used in analysis after it has been deployed.
 *
 *  Method: contactcenterinsights.projects.locations.issueModels.deploy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsDeploy : GTLRContactcenterinsightsQuery

/** Required. The issue model to deploy. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRContactcenterinsights_GoogleLongrunningOperation.
 *
 *  Deploys an issue model. Returns an error if a model is already deployed. An
 *  issue model can only be used in analysis after it has been deployed.
 *
 *  @param object The @c
 *    GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1DeployIssueModelRequest
 *    to include in the query.
 *  @param name Required. The issue model to deploy.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsDeploy
 */
+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1DeployIssueModelRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets an issue model.
 *
 *  Method: contactcenterinsights.projects.locations.issueModels.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsGet : GTLRContactcenterinsightsQuery

/** Required. The name of the issue model to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1IssueModel.
 *
 *  Gets an issue model.
 *
 *  @param name Required. The name of the issue model to get.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an issue.
 *
 *  Method: contactcenterinsights.projects.locations.issueModels.issues.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesGet : GTLRContactcenterinsightsQuery

/** Required. The name of the issue to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Issue.
 *
 *  Gets an issue.
 *
 *  @param name Required. The name of the issue to get.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists issues.
 *
 *  Method: contactcenterinsights.projects.locations.issueModels.issues.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesList : GTLRContactcenterinsightsQuery

/** Required. The parent resource of the issue. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListIssuesResponse.
 *
 *  Lists issues.
 *
 *  @param parent Required. The parent resource of the issue.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an issue.
 *
 *  Method: contactcenterinsights.projects.locations.issueModels.issues.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesPatch : GTLRContactcenterinsightsQuery

/**
 *  Immutable. The resource name of the issue. Format:
 *  projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Issue.
 *
 *  Updates an issue.
 *
 *  @param object The @c
 *    GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Issue to
 *    include in the query.
 *  @param name Immutable. The resource name of the issue. Format:
 *    projects/{project}/locations/{location}/issueModels/{issue_model}/issues/{issue}
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsIssuesPatch
 */
+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Issue *)object
                           name:(NSString *)name;

@end

/**
 *  Lists issue models.
 *
 *  Method: contactcenterinsights.projects.locations.issueModels.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsList : GTLRContactcenterinsightsQuery

/** Required. The parent resource of the issue model. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListIssueModelsResponse.
 *
 *  Lists issue models.
 *
 *  @param parent Required. The parent resource of the issue model.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an issue model.
 *
 *  Method: contactcenterinsights.projects.locations.issueModels.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsPatch : GTLRContactcenterinsightsQuery

/**
 *  Immutable. The resource name of the issue model. Format:
 *  projects/{project}/locations/{location}/issueModels/{issue_model}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1IssueModel.
 *
 *  Updates an issue model.
 *
 *  @param object The @c
 *    GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1IssueModel to
 *    include in the query.
 *  @param name Immutable. The resource name of the issue model. Format:
 *    projects/{project}/locations/{location}/issueModels/{issue_model}
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsPatch
 */
+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1IssueModel *)object
                           name:(NSString *)name;

@end

/**
 *  Undeploys an issue model. An issue model can not be used in analysis after
 *  it has been undeployed.
 *
 *  Method: contactcenterinsights.projects.locations.issueModels.undeploy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsUndeploy : GTLRContactcenterinsightsQuery

/** Required. The issue model to undeploy. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRContactcenterinsights_GoogleLongrunningOperation.
 *
 *  Undeploys an issue model. An issue model can not be used in analysis after
 *  it has been undeployed.
 *
 *  @param object The @c
 *    GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest
 *    to include in the query.
 *  @param name Required. The issue model to undeploy.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsIssueModelsUndeploy
 */
+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1UndeployIssueModelRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  Method: contactcenterinsights.projects.locations.operations.cancel
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsOperationsCancel : GTLRContactcenterinsightsQuery

/** The name of the operation resource to be cancelled. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRContactcenterinsights_GoogleProtobufEmpty.
 *
 *  Starts asynchronous cancellation on a long-running operation. The server
 *  makes a best effort to cancel the operation, but success is not guaranteed.
 *  If the server doesn't support this method, it returns
 *  `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or
 *  other methods to check whether the cancellation succeeded or whether the
 *  operation completed despite cancellation. On successful cancellation, the
 *  operation is not deleted; instead, it becomes an operation with an
 *  Operation.error value with a google.rpc.Status.code of 1, corresponding to
 *  `Code.CANCELLED`.
 *
 *  @param name The name of the operation resource to be cancelled.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsOperationsCancel
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: contactcenterinsights.projects.locations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsOperationsGet : GTLRContactcenterinsightsQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRContactcenterinsights_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: contactcenterinsights.projects.locations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsOperationsList : GTLRContactcenterinsightsQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a phrase matcher.
 *
 *  Method: contactcenterinsights.projects.locations.phraseMatchers.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersCreate : GTLRContactcenterinsightsQuery

/**
 *  Required. The parent resource of the phrase matcher. Required. The location
 *  to create a phrase matcher for. Format: `projects//locations/` or
 *  `projects//locations/`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1PhraseMatcher.
 *
 *  Creates a phrase matcher.
 *
 *  @param object The @c
 *    GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1PhraseMatcher
 *    to include in the query.
 *  @param parent Required. The parent resource of the phrase matcher. Required.
 *    The location to create a phrase matcher for. Format:
 *    `projects//locations/` or `projects//locations/`
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersCreate
 */
+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1PhraseMatcher *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a phrase matcher.
 *
 *  Method: contactcenterinsights.projects.locations.phraseMatchers.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersDelete : GTLRContactcenterinsightsQuery

/** Required. The name of the phrase matcher to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRContactcenterinsights_GoogleProtobufEmpty.
 *
 *  Deletes a phrase matcher.
 *
 *  @param name Required. The name of the phrase matcher to delete.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a phrase matcher.
 *
 *  Method: contactcenterinsights.projects.locations.phraseMatchers.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersGet : GTLRContactcenterinsightsQuery

/** Required. The name of the phrase matcher to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1PhraseMatcher.
 *
 *  Gets a phrase matcher.
 *
 *  @param name Required. The name of the phrase matcher to get.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists phrase matchers.
 *
 *  Method: contactcenterinsights.projects.locations.phraseMatchers.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersList : GTLRContactcenterinsightsQuery

/**
 *  A filter to reduce results to a specific subset. Useful for querying phrase
 *  matchers with specific properties.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The maximum number of phrase matchers to return in the response. If this
 *  value is zero, the service will select a default size. A call might return
 *  fewer objects than requested. A non-empty `next_page_token` in the response
 *  indicates that more data is available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListPhraseMatchersResponse`. This value
 *  indicates that this is a continuation of a prior `ListPhraseMatchers` call
 *  and that the system should return the next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource of the phrase matcher. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListPhraseMatchersResponse.
 *
 *  Lists phrase matchers.
 *
 *  @param parent Required. The parent resource of the phrase matcher.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a phrase matcher.
 *
 *  Method: contactcenterinsights.projects.locations.phraseMatchers.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersPatch : GTLRContactcenterinsightsQuery

/**
 *  The resource name of the phrase matcher. Format:
 *  projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1PhraseMatcher.
 *
 *  Updates a phrase matcher.
 *
 *  @param object The @c
 *    GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1PhraseMatcher
 *    to include in the query.
 *  @param name The resource name of the phrase matcher. Format:
 *    projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsPhraseMatchersPatch
 */
+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1PhraseMatcher *)object
                           name:(NSString *)name;

@end

/**
 *  Updates project-level settings.
 *
 *  Method: contactcenterinsights.projects.locations.updateSettings
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsUpdateSettings : GTLRContactcenterinsightsQuery

/**
 *  Immutable. The resource name of the settings resource. Format:
 *  projects/{project}/locations/{location}/settings
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Settings.
 *
 *  Updates project-level settings.
 *
 *  @param object The @c
 *    GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Settings to
 *    include in the query.
 *  @param name Immutable. The resource name of the settings resource. Format:
 *    projects/{project}/locations/{location}/settings
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsUpdateSettings
 */
+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1Settings *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a view.
 *
 *  Method: contactcenterinsights.projects.locations.views.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsViewsCreate : GTLRContactcenterinsightsQuery

/**
 *  Required. The parent resource of the view. Required. The location to create
 *  a view for. Format: `projects//locations/` or `projects//locations/`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1View.
 *
 *  Creates a view.
 *
 *  @param object The @c
 *    GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1View to
 *    include in the query.
 *  @param parent Required. The parent resource of the view. Required. The
 *    location to create a view for. Format: `projects//locations/` or
 *    `projects//locations/`
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsViewsCreate
 */
+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1View *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a view.
 *
 *  Method: contactcenterinsights.projects.locations.views.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsViewsDelete : GTLRContactcenterinsightsQuery

/** Required. The name of the view to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRContactcenterinsights_GoogleProtobufEmpty.
 *
 *  Deletes a view.
 *
 *  @param name Required. The name of the view to delete.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsViewsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a view.
 *
 *  Method: contactcenterinsights.projects.locations.views.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsViewsGet : GTLRContactcenterinsightsQuery

/** Required. The name of the view to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1View.
 *
 *  Gets a view.
 *
 *  @param name Required. The name of the view to get.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsViewsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists views.
 *
 *  Method: contactcenterinsights.projects.locations.views.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsViewsList : GTLRContactcenterinsightsQuery

/**
 *  The maximum number of views to return in the response. If this value is
 *  zero, the service will select a default size. A call may return fewer
 *  objects than requested. A non-empty `next_page_token` in the response
 *  indicates that more data is available.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  The value returned by the last `ListViewsResponse`; indicates that this is a
 *  continuation of a prior `ListViews` call and the system should return the
 *  next page of data.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The parent resource of the views. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1ListViewsResponse.
 *
 *  Lists views.
 *
 *  @param parent Required. The parent resource of the views.
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsViewsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a view.
 *
 *  Method: contactcenterinsights.projects.locations.views.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeContactcenterinsightsCloudPlatform
 */
@interface GTLRContactcenterinsightsQuery_ProjectsLocationsViewsPatch : GTLRContactcenterinsightsQuery

/**
 *  Immutable. The resource name of the view. Format:
 *  projects/{project}/locations/{location}/views/{view}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of fields to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c
 *  GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1View.
 *
 *  Updates a view.
 *
 *  @param object The @c
 *    GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1View to
 *    include in the query.
 *  @param name Immutable. The resource name of the view. Format:
 *    projects/{project}/locations/{location}/views/{view}
 *
 *  @return GTLRContactcenterinsightsQuery_ProjectsLocationsViewsPatch
 */
+ (instancetype)queryWithObject:(GTLRContactcenterinsights_GoogleCloudContactcenterinsightsV1View *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
