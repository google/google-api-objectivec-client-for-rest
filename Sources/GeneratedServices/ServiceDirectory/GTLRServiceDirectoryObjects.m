// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Service Directory API (servicedirectory/v1)
// Description:
//   Service Directory is a platform for discovering, publishing, and connecting
//   services.
// Documentation:
//   https://cloud.google.com/service-directory

#import <GoogleAPIClientForREST/GTLRServiceDirectoryObjects.h>

// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_Binding
//

@implementation GTLRServiceDirectory_Binding
@dynamic condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_Empty
//

@implementation GTLRServiceDirectory_Empty
@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_Endpoint
//

@implementation GTLRServiceDirectory_Endpoint
@dynamic address, annotations, name, network, port, uid;
@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_Endpoint_Annotations
//

@implementation GTLRServiceDirectory_Endpoint_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_Expr
//

@implementation GTLRServiceDirectory_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_GetIamPolicyRequest
//

@implementation GTLRServiceDirectory_GetIamPolicyRequest
@dynamic options;
@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_GetPolicyOptions
//

@implementation GTLRServiceDirectory_GetPolicyOptions
@dynamic requestedPolicyVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_ListEndpointsResponse
//

@implementation GTLRServiceDirectory_ListEndpointsResponse
@dynamic endpoints, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"endpoints" : [GTLRServiceDirectory_Endpoint class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"endpoints";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_ListLocationsResponse
//

@implementation GTLRServiceDirectory_ListLocationsResponse
@dynamic locations, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"locations" : [GTLRServiceDirectory_Location class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"locations";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_ListNamespacesResponse
//

@implementation GTLRServiceDirectory_ListNamespacesResponse
@dynamic namespaces, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"namespaces" : [GTLRServiceDirectory_Namespace class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"namespaces";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_ListServicesResponse
//

@implementation GTLRServiceDirectory_ListServicesResponse
@dynamic nextPageToken, services;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"services" : [GTLRServiceDirectory_Service class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"services";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_Location
//

@implementation GTLRServiceDirectory_Location
@dynamic displayName, labels, locationId, metadata, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_Location_Labels
//

@implementation GTLRServiceDirectory_Location_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_Location_Metadata
//

@implementation GTLRServiceDirectory_Location_Metadata

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_Namespace
//

@implementation GTLRServiceDirectory_Namespace
@dynamic labels, name, uid;
@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_Namespace_Labels
//

@implementation GTLRServiceDirectory_Namespace_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_Policy
//

@implementation GTLRServiceDirectory_Policy
@dynamic bindings, ETag, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bindings" : [GTLRServiceDirectory_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_ResolveServiceRequest
//

@implementation GTLRServiceDirectory_ResolveServiceRequest
@dynamic endpointFilter, maxEndpoints;
@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_ResolveServiceResponse
//

@implementation GTLRServiceDirectory_ResolveServiceResponse
@dynamic service;
@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_Service
//

@implementation GTLRServiceDirectory_Service
@dynamic annotations, endpoints, name, uid;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"endpoints" : [GTLRServiceDirectory_Endpoint class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_Service_Annotations
//

@implementation GTLRServiceDirectory_Service_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_SetIamPolicyRequest
//

@implementation GTLRServiceDirectory_SetIamPolicyRequest
@dynamic policy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_TestIamPermissionsRequest
//

@implementation GTLRServiceDirectory_TestIamPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRServiceDirectory_TestIamPermissionsResponse
//

@implementation GTLRServiceDirectory_TestIamPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end
