// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Firebase App Distribution API (firebaseappdistribution/v1)
// Documentation:
//   https://firebase.google.com/products/app-distribution

#import <GoogleAPIClientForREST/GTLRFirebaseAppDistributionQuery.h>

@implementation GTLRFirebaseAppDistributionQuery

@dynamic fields;

@end

@implementation GTLRFirebaseAppDistributionQuery_MediaUpload

@dynamic app;

+ (instancetype)queryWithObject:(GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1UploadReleaseRequest *)object
                            app:(NSString *)app
               uploadParameters:(GTLRUploadParameters *)uploadParameters {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"app" ];
  NSString *pathURITemplate = @"v1/{+app}/releases:upload";
  GTLRFirebaseAppDistributionQuery_MediaUpload *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.app = app;
  query.uploadParameters = uploadParameters;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleLongrunningOperation class];
  query.loggingName = @"firebaseappdistribution.media.upload";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsAppsGetAabInfo

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRFirebaseAppDistributionQuery_ProjectsAppsGetAabInfo *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1AabInfo class];
  query.loggingName = @"firebaseappdistribution.projects.apps.getAabInfo";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesBatchDelete

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1BatchDeleteReleasesRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/releases:batchDelete";
  GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesBatchDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleProtobufEmpty class];
  query.loggingName = @"firebaseappdistribution.projects.apps.releases.batchDelete";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesDistribute

@dynamic name;

+ (instancetype)queryWithObject:(GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1DistributeReleaseRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:distribute";
  GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesDistribute *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1DistributeReleaseResponse class];
  query.loggingName = @"firebaseappdistribution.projects.apps.releases.distribute";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesFeedbackReportsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesFeedbackReportsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleProtobufEmpty class];
  query.loggingName = @"firebaseappdistribution.projects.apps.releases.feedbackReports.delete";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesFeedbackReportsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesFeedbackReportsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1FeedbackReport class];
  query.loggingName = @"firebaseappdistribution.projects.apps.releases.feedbackReports.get";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesFeedbackReportsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/feedbackReports";
  GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesFeedbackReportsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1ListFeedbackReportsResponse class];
  query.loggingName = @"firebaseappdistribution.projects.apps.releases.feedbackReports.list";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1Release class];
  query.loggingName = @"firebaseappdistribution.projects.apps.releases.get";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesList

@dynamic filter, orderBy, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/releases";
  GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1ListReleasesResponse class];
  query.loggingName = @"firebaseappdistribution.projects.apps.releases.list";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesOperationsCancel

@dynamic name;

+ (instancetype)queryWithObject:(GTLRFirebaseAppDistribution_GoogleLongrunningCancelOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:cancel";
  GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesOperationsCancel *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleProtobufEmpty class];
  query.loggingName = @"firebaseappdistribution.projects.apps.releases.operations.cancel";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesOperationsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesOperationsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleProtobufEmpty class];
  query.loggingName = @"firebaseappdistribution.projects.apps.releases.operations.delete";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesOperationsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesOperationsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleLongrunningOperation class];
  query.loggingName = @"firebaseappdistribution.projects.apps.releases.operations.get";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesOperationsList

@dynamic filter, name, pageSize, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}/operations";
  GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesOperationsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleLongrunningListOperationsResponse class];
  query.loggingName = @"firebaseappdistribution.projects.apps.releases.operations.list";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesOperationsWait

@dynamic name;

+ (instancetype)queryWithObject:(GTLRFirebaseAppDistribution_GoogleLongrunningWaitOperationRequest *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:wait";
  GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesOperationsWait *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleLongrunningOperation class];
  query.loggingName = @"firebaseappdistribution.projects.apps.releases.operations.wait";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1Release *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRFirebaseAppDistributionQuery_ProjectsAppsReleasesPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1Release class];
  query.loggingName = @"firebaseappdistribution.projects.apps.releases.patch";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsGroupsBatchJoin

@dynamic group;

+ (instancetype)queryWithObject:(GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1BatchJoinGroupRequest *)object
                          group:(NSString *)group {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"group" ];
  NSString *pathURITemplate = @"v1/{+group}:batchJoin";
  GTLRFirebaseAppDistributionQuery_ProjectsGroupsBatchJoin *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.group = group;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleProtobufEmpty class];
  query.loggingName = @"firebaseappdistribution.projects.groups.batchJoin";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsGroupsBatchLeave

@dynamic group;

+ (instancetype)queryWithObject:(GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1BatchLeaveGroupRequest *)object
                          group:(NSString *)group {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"group" ];
  NSString *pathURITemplate = @"v1/{+group}:batchLeave";
  GTLRFirebaseAppDistributionQuery_ProjectsGroupsBatchLeave *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.group = group;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleProtobufEmpty class];
  query.loggingName = @"firebaseappdistribution.projects.groups.batchLeave";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsGroupsCreate

@dynamic groupId, parent;

+ (instancetype)queryWithObject:(GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1Group *)object
                         parent:(NSString *)parent {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/groups";
  GTLRFirebaseAppDistributionQuery_ProjectsGroupsCreate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1Group class];
  query.loggingName = @"firebaseappdistribution.projects.groups.create";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsGroupsDelete

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRFirebaseAppDistributionQuery_ProjectsGroupsDelete *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"DELETE"
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleProtobufEmpty class];
  query.loggingName = @"firebaseappdistribution.projects.groups.delete";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsGroupsGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRFirebaseAppDistributionQuery_ProjectsGroupsGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1Group class];
  query.loggingName = @"firebaseappdistribution.projects.groups.get";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsGroupsList

@dynamic pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/groups";
  GTLRFirebaseAppDistributionQuery_ProjectsGroupsList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1ListGroupsResponse class];
  query.loggingName = @"firebaseappdistribution.projects.groups.list";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsGroupsPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1Group *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRFirebaseAppDistributionQuery_ProjectsGroupsPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1Group class];
  query.loggingName = @"firebaseappdistribution.projects.groups.patch";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsTestersBatchAdd

@dynamic project;

+ (instancetype)queryWithObject:(GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1BatchAddTestersRequest *)object
                        project:(NSString *)project {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"project" ];
  NSString *pathURITemplate = @"v1/{+project}/testers:batchAdd";
  GTLRFirebaseAppDistributionQuery_ProjectsTestersBatchAdd *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.project = project;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1BatchAddTestersResponse class];
  query.loggingName = @"firebaseappdistribution.projects.testers.batchAdd";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsTestersBatchRemove

@dynamic project;

+ (instancetype)queryWithObject:(GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1BatchRemoveTestersRequest *)object
                        project:(NSString *)project {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"project" ];
  NSString *pathURITemplate = @"v1/{+project}/testers:batchRemove";
  GTLRFirebaseAppDistributionQuery_ProjectsTestersBatchRemove *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.project = project;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1BatchRemoveTestersResponse class];
  query.loggingName = @"firebaseappdistribution.projects.testers.batchRemove";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsTestersList

@dynamic filter, pageSize, pageToken, parent;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/testers";
  GTLRFirebaseAppDistributionQuery_ProjectsTestersList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1ListTestersResponse class];
  query.loggingName = @"firebaseappdistribution.projects.testers.list";
  return query;
}

@end

@implementation GTLRFirebaseAppDistributionQuery_ProjectsTestersPatch

@dynamic name, updateMask;

+ (instancetype)queryWithObject:(GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1Tester *)object
                           name:(NSString *)name {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRFirebaseAppDistributionQuery_ProjectsTestersPatch *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"PATCH"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.name = name;
  query.expectedObjectClass = [GTLRFirebaseAppDistribution_GoogleFirebaseAppdistroV1Tester class];
  query.loggingName = @"firebaseappdistribution.projects.testers.patch";
  return query;
}

@end
