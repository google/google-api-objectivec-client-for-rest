// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Apigee API (apigee/v1)
// Description:
//   Use the Apigee API to programmatically develop and manage APIs with a set
//   of RESTful operations. Develop and secure API proxies, deploy and undeploy
//   API proxy revisions, monitor APIs, configure environments, manage users,
//   and more. Note: This product is available as a free trial for a time period
//   of 60 days.
// Documentation:
//   https://cloud.google.com/apigee-api-management/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRApigeeObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// retention

/**
 *  Default data retention setting of seven days will be applied.
 *
 *  Value: "DELETION_RETENTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRApigeeRetentionDeletionRetentionUnspecified;
/**
 *  Organization data will be retained for the minimum period of 24 hours.
 *
 *  Value: "MINIMUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRApigeeRetentionMinimum;

// ----------------------------------------------------------------------------
// state

/**
 *  Rate plan is in draft mode and only visible to API providers.
 *
 *  Value: "DRAFT"
 */
FOUNDATION_EXTERN NSString * const kGTLRApigeeStateDraft;
/**
 *  Rate plan is published and will become visible to developers for the
 *  configured duration (between `startTime` and `endTime`).
 *
 *  Value: "PUBLISHED"
 */
FOUNDATION_EXTERN NSString * const kGTLRApigeeStatePublished;
/**
 *  State of the rate plan is not specified.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRApigeeStateStateUnspecified;

// ----------------------------------------------------------------------------
// view

/**
 *  Include all ingress config data necessary for the runtime to configure
 *  ingress, but no more. Routing rules will include only basepath and
 *  destination environment. This the default value.
 *
 *  Value: "BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRApigeeViewBasic;
/**
 *  Include all ingress config data, including internal debug info for each
 *  routing rule such as the proxy claiming a particular basepath and when the
 *  routing rule first appeared in the env group.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRApigeeViewFull;
/**
 *  The default/unset value. The API will default to the BASIC view.
 *
 *  Value: "INGRESS_CONFIG_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRApigeeViewIngressConfigViewUnspecified;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other Apigee query classes.
 */
@interface GTLRApigeeQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Lists hybrid services and its trusted issuers service account ids. This api
 *  is authenticated and unauthorized(allow all the users) and used by runtime
 *  authn-authz service to query control plane's issuer service account ids.
 *
 *  Method: apigee.hybrid.issuers.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_HybridIssuersList : GTLRApigeeQuery

/** Required. Must be of the form `hybrid/issuers`. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListHybridIssuersResponse.
 *
 *  Lists hybrid services and its trusted issuers service account ids. This api
 *  is authenticated and unauthorized(allow all the users) and used by runtime
 *  authn-authz service to query control plane's issuer service account ids.
 *
 *  @param name Required. Must be of the form `hybrid/issuers`.
 *
 *  @return GTLRApigeeQuery_HybridIssuersList
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Create a Datastore for an org
 *
 *  Method: apigee.organizations.analytics.datastores.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsAnalyticsDatastoresCreate : GTLRApigeeQuery

/**
 *  Required. The parent organization name. Must be of the form
 *  `organizations/{org}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Datastore.
 *
 *  Create a Datastore for an org
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Datastore to include in
 *    the query.
 *  @param parent Required. The parent organization name. Must be of the form
 *    `organizations/{org}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsAnalyticsDatastoresCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Datastore *)object
                         parent:(NSString *)parent;

@end

/**
 *  Delete a Datastore from an org.
 *
 *  Method: apigee.organizations.analytics.datastores.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsAnalyticsDatastoresDelete : GTLRApigeeQuery

/**
 *  Required. Resource name of the Datastore to be deleted. Must be of the form
 *  `organizations/{org}/analytics/datastores/{datastoreId}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleProtobufEmpty.
 *
 *  Delete a Datastore from an org.
 *
 *  @param name Required. Resource name of the Datastore to be deleted. Must be
 *    of the form `organizations/{org}/analytics/datastores/{datastoreId}`
 *
 *  @return GTLRApigeeQuery_OrganizationsAnalyticsDatastoresDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get a Datastore
 *
 *  Method: apigee.organizations.analytics.datastores.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsAnalyticsDatastoresGet : GTLRApigeeQuery

/**
 *  Required. Resource name of the Datastore to be get. Must be of the form
 *  `organizations/{org}/analytics/datastores/{datastoreId}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Datastore.
 *
 *  Get a Datastore
 *
 *  @param name Required. Resource name of the Datastore to be get. Must be of
 *    the form `organizations/{org}/analytics/datastores/{datastoreId}`
 *
 *  @return GTLRApigeeQuery_OrganizationsAnalyticsDatastoresGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  List Datastores
 *
 *  Method: apigee.organizations.analytics.datastores.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsAnalyticsDatastoresList : GTLRApigeeQuery

/**
 *  Required. The parent organization name. Must be of the form
 *  `organizations/{org}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. TargetType is used to fetch all Datastores that match the type
 */
@property(nonatomic, copy, nullable) NSString *targetType;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListDatastoresResponse.
 *
 *  List Datastores
 *
 *  @param parent Required. The parent organization name. Must be of the form
 *    `organizations/{org}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsAnalyticsDatastoresList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Test if Datastore configuration is correct. This includes checking if
 *  credentials provided by customer have required permissions in target
 *  destination storage
 *
 *  Method: apigee.organizations.analytics.datastores.test
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsAnalyticsDatastoresTest : GTLRApigeeQuery

/**
 *  Required. The parent organization name Must be of the form
 *  `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1TestDatastoreResponse.
 *
 *  Test if Datastore configuration is correct. This includes checking if
 *  credentials provided by customer have required permissions in target
 *  destination storage
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Datastore to include in
 *    the query.
 *  @param parent Required. The parent organization name Must be of the form
 *    `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsAnalyticsDatastoresTest
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Datastore *)object
                         parent:(NSString *)parent;

@end

/**
 *  Update a Datastore
 *
 *  Method: apigee.organizations.analytics.datastores.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsAnalyticsDatastoresUpdate : GTLRApigeeQuery

/**
 *  Required. The resource name of datastore to be updated. Must be of the form
 *  `organizations/{org}/analytics/datastores/{datastoreId}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Datastore.
 *
 *  Update a Datastore
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Datastore to include in
 *    the query.
 *  @param name Required. The resource name of datastore to be updated. Must be
 *    of the form `organizations/{org}/analytics/datastores/{datastoreId}`
 *
 *  @return GTLRApigeeQuery_OrganizationsAnalyticsDatastoresUpdate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Datastore *)object
                           name:(NSString *)name;

@end

/**
 *  Updates or creates API product attributes. This API **replaces** the current
 *  list of attributes with the attributes specified in the request body. In
 *  this way, you can update existing attributes, add new attributes, or delete
 *  existing attributes by omitting them from the request body. **Note**: OAuth
 *  access tokens and Key Management Service (KMS) entities (apps, developers,
 *  and API products) are cached for 180 seconds (current default). Any custom
 *  attributes associated with entities also get cached for at least 180 seconds
 *  after entity is accessed during runtime. In this case, the `ExpiresIn`
 *  element on the OAuthV2 policy won't be able to expire an access token in
 *  less than 180 seconds.
 *
 *  Method: apigee.organizations.apiproducts.attributes
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApiproductsAttributes : GTLRApigeeQuery

/**
 *  Required. Name of the API product. Use the following structure in your
 *  request: `organizations/{org}/apiproducts/{apiproduct}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Attributes.
 *
 *  Updates or creates API product attributes. This API **replaces** the current
 *  list of attributes with the attributes specified in the request body. In
 *  this way, you can update existing attributes, add new attributes, or delete
 *  existing attributes by omitting them from the request body. **Note**: OAuth
 *  access tokens and Key Management Service (KMS) entities (apps, developers,
 *  and API products) are cached for 180 seconds (current default). Any custom
 *  attributes associated with entities also get cached for at least 180 seconds
 *  after entity is accessed during runtime. In this case, the `ExpiresIn`
 *  element on the OAuthV2 policy won't be able to expire an access token in
 *  less than 180 seconds.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Attributes to include in
 *    the query.
 *  @param name Required. Name of the API product. Use the following structure
 *    in your request: `organizations/{org}/apiproducts/{apiproduct}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApiproductsAttributes
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Attributes *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes an API product attribute.
 *
 *  Method: apigee.organizations.apiproducts.attributes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApiproductsAttributesDelete : GTLRApigeeQuery

/**
 *  Required. Name of the API product attribute. Use the following structure in
 *  your request:
 *  `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Attribute.
 *
 *  Deletes an API product attribute.
 *
 *  @param name Required. Name of the API product attribute. Use the following
 *    structure in your request:
 *    `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApiproductsAttributesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the value of an API product attribute.
 *
 *  Method: apigee.organizations.apiproducts.attributes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApiproductsAttributesGet : GTLRApigeeQuery

/**
 *  Required. Name of the API product attribute. Use the following structure in
 *  your request:
 *  `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Attribute.
 *
 *  Gets the value of an API product attribute.
 *
 *  @param name Required. Name of the API product attribute. Use the following
 *    structure in your request:
 *    `organizations/{org}/apiproducts/{apiproduct}/attributes/{attribute}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApiproductsAttributesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all API product attributes.
 *
 *  Method: apigee.organizations.apiproducts.attributes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApiproductsAttributesList : GTLRApigeeQuery

/**
 *  Required. Name of the API product. Use the following structure in your
 *  request: `organizations/{org}/apiproducts/{apiproduct}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Attributes.
 *
 *  Lists all API product attributes.
 *
 *  @param parent Required. Name of the API product. Use the following structure
 *    in your request: `organizations/{org}/apiproducts/{apiproduct}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApiproductsAttributesList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the value of an API product attribute. **Note**: OAuth access tokens
 *  and Key Management Service (KMS) entities (apps, developers, and API
 *  products) are cached for 180 seconds (current default). Any custom
 *  attributes associated with entities also get cached for at least 180 seconds
 *  after entity is accessed during runtime. In this case, the `ExpiresIn`
 *  element on the OAuthV2 policy won't be able to expire an access token in
 *  less than 180 seconds.
 *
 *  Method: apigee.organizations.apiproducts.attributes.updateApiProductAttribute
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApiproductsAttributesUpdateApiProductAttribute : GTLRApigeeQuery

/**
 *  Required. Name of the API product. Use the following structure in your
 *  request: `organizations/{org}/apiproducts/{apiproduct}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Attribute.
 *
 *  Updates the value of an API product attribute. **Note**: OAuth access tokens
 *  and Key Management Service (KMS) entities (apps, developers, and API
 *  products) are cached for 180 seconds (current default). Any custom
 *  attributes associated with entities also get cached for at least 180 seconds
 *  after entity is accessed during runtime. In this case, the `ExpiresIn`
 *  element on the OAuthV2 policy won't be able to expire an access token in
 *  less than 180 seconds.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Attribute to include in
 *    the query.
 *  @param name Required. Name of the API product. Use the following structure
 *    in your request: `organizations/{org}/apiproducts/{apiproduct}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApiproductsAttributesUpdateApiProductAttribute
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Attribute *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an API product in an organization. You create API products after you
 *  have proxied backend services using API proxies. An API product is a
 *  collection of API resources combined with quota settings and metadata that
 *  you can use to deliver customized and productized API bundles to your
 *  developer community. This metadata can include: - Scope - Environments - API
 *  proxies - Extensible profile API products enable you repackage APIs on the
 *  fly, without having to do any additional coding or configuration. Apigee
 *  recommends that you start with a simple API product including only required
 *  elements. You then provision credentials to apps to enable them to start
 *  testing your APIs. After you have authentication and authorization working
 *  against a simple API product, you can iterate to create finer-grained API
 *  products, defining different sets of API resources for each API product.
 *  **WARNING:** - If you don't specify an API proxy in the request body, *any*
 *  app associated with the product can make calls to *any* API in your entire
 *  organization. - If you don't specify an environment in the request body, the
 *  product allows access to all environments. For more information, see What is
 *  an API product?
 *
 *  Method: apigee.organizations.apiproducts.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApiproductsCreate : GTLRApigeeQuery

/**
 *  Required. Name of the organization in which the API product will be created.
 *  Use the following structure in your request: `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ApiProduct.
 *
 *  Creates an API product in an organization. You create API products after you
 *  have proxied backend services using API proxies. An API product is a
 *  collection of API resources combined with quota settings and metadata that
 *  you can use to deliver customized and productized API bundles to your
 *  developer community. This metadata can include: - Scope - Environments - API
 *  proxies - Extensible profile API products enable you repackage APIs on the
 *  fly, without having to do any additional coding or configuration. Apigee
 *  recommends that you start with a simple API product including only required
 *  elements. You then provision credentials to apps to enable them to start
 *  testing your APIs. After you have authentication and authorization working
 *  against a simple API product, you can iterate to create finer-grained API
 *  products, defining different sets of API resources for each API product.
 *  **WARNING:** - If you don't specify an API proxy in the request body, *any*
 *  app associated with the product can make calls to *any* API in your entire
 *  organization. - If you don't specify an environment in the request body, the
 *  product allows access to all environments. For more information, see What is
 *  an API product?
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1ApiProduct to include in
 *    the query.
 *  @param parent Required. Name of the organization in which the API product
 *    will be created. Use the following structure in your request:
 *    `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApiproductsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1ApiProduct *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an API product from an organization. Deleting an API product causes
 *  app requests to the resource URIs defined in the API product to fail. Ensure
 *  that you create a new API product to serve existing apps, unless your
 *  intention is to disable access to the resources defined in the API product.
 *  The API product name required in the request URL is the internal name of the
 *  product, not the display name. While they may be the same, it depends on
 *  whether the API product was created via the UI or the API. View the list of
 *  API products to verify the internal name.
 *
 *  Method: apigee.organizations.apiproducts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApiproductsDelete : GTLRApigeeQuery

/**
 *  Required. Name of the API product. Use the following structure in your
 *  request: `organizations/{org}/apiproducts/{apiproduct}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ApiProduct.
 *
 *  Deletes an API product from an organization. Deleting an API product causes
 *  app requests to the resource URIs defined in the API product to fail. Ensure
 *  that you create a new API product to serve existing apps, unless your
 *  intention is to disable access to the resources defined in the API product.
 *  The API product name required in the request URL is the internal name of the
 *  product, not the display name. While they may be the same, it depends on
 *  whether the API product was created via the UI or the API. View the list of
 *  API products to verify the internal name.
 *
 *  @param name Required. Name of the API product. Use the following structure
 *    in your request: `organizations/{org}/apiproducts/{apiproduct}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApiproductsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets configuration details for an API product. The API product name required
 *  in the request URL is the internal name of the product, not the display
 *  name. While they may be the same, it depends on whether the API product was
 *  created via the UI or the API. View the list of API products to verify the
 *  internal name.
 *
 *  Method: apigee.organizations.apiproducts.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApiproductsGet : GTLRApigeeQuery

/**
 *  Required. Name of the API product. Use the following structure in your
 *  request: `organizations/{org}/apiproducts/{apiproduct}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ApiProduct.
 *
 *  Gets configuration details for an API product. The API product name required
 *  in the request URL is the internal name of the product, not the display
 *  name. While they may be the same, it depends on whether the API product was
 *  created via the UI or the API. View the list of API products to verify the
 *  internal name.
 *
 *  @param name Required. Name of the API product. Use the following structure
 *    in your request: `organizations/{org}/apiproducts/{apiproduct}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApiproductsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all API product names for an organization. Filter the list by passing
 *  an `attributename` and `attibutevalue`. The maximum number of API products
 *  returned is 1000. You can paginate the list of API products returned using
 *  the `startKey` and `count` query parameters.
 *
 *  Method: apigee.organizations.apiproducts.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApiproductsList : GTLRApigeeQuery

/** Name of the attribute used to filter the search. */
@property(nonatomic, copy, nullable) NSString *attributename;

/** Value of the attribute used to filter the search. */
@property(nonatomic, copy, nullable) NSString *attributevalue;

/**
 *  Enter the number of API products you want returned in the API call. The
 *  limit is 1000.
 */
@property(nonatomic, assign) long long count;

/**
 *  Flag that specifies whether to expand the results. Set to `true` to get
 *  expanded details about each API.
 */
@property(nonatomic, assign) BOOL expand;

/**
 *  Required. Name of the organization. Use the following structure in your
 *  request: `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Gets a list of API products starting with a specific API product in the
 *  list. For example, if you're returning 50 API products at a time (using the
 *  `count` query parameter), you can view products 50-99 by entering the name
 *  of the 50th API product in the first API (without using `startKey`). Product
 *  name is case sensitive.
 */
@property(nonatomic, copy, nullable) NSString *startKey;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListApiProductsResponse.
 *
 *  Lists all API product names for an organization. Filter the list by passing
 *  an `attributename` and `attibutevalue`. The maximum number of API products
 *  returned is 1000. You can paginate the list of API products returned using
 *  the `startKey` and `count` query parameters.
 *
 *  @param parent Required. Name of the organization. Use the following
 *    structure in your request: `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApiproductsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Create a rate plan that is associated with an API product in an
 *  organization. Using rate plans, API product owners can monetize their API
 *  products by configuring one or more of the following: - Billing frequency -
 *  Initial setup fees for using an API product - Payment funding model
 *  (postpaid only) - Fixed recurring or consumption-based charges for using an
 *  API product - Revenue sharing with developer partners An API product can
 *  have multiple rate plans associated with it but *only one* rate plan can be
 *  active at any point of time. **Note: From the developer's perspective, they
 *  purchase API products not rate plans.
 *
 *  Method: apigee.organizations.apiproducts.rateplans.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApiproductsRateplansCreate : GTLRApigeeQuery

/**
 *  Required. Name of the API product that is associated with the rate plan. Use
 *  the following structure in your request:
 *  `organizations/{org}/apiproducts/{apiproduct}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1RatePlan.
 *
 *  Create a rate plan that is associated with an API product in an
 *  organization. Using rate plans, API product owners can monetize their API
 *  products by configuring one or more of the following: - Billing frequency -
 *  Initial setup fees for using an API product - Payment funding model
 *  (postpaid only) - Fixed recurring or consumption-based charges for using an
 *  API product - Revenue sharing with developer partners An API product can
 *  have multiple rate plans associated with it but *only one* rate plan can be
 *  active at any point of time. **Note: From the developer's perspective, they
 *  purchase API products not rate plans.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1RatePlan to include in
 *    the query.
 *  @param parent Required. Name of the API product that is associated with the
 *    rate plan. Use the following structure in your request:
 *    `organizations/{org}/apiproducts/{apiproduct}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApiproductsRateplansCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1RatePlan *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a rate plan.
 *
 *  Method: apigee.organizations.apiproducts.rateplans.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApiproductsRateplansDelete : GTLRApigeeQuery

/**
 *  Required. ID of the rate plan. Use the following structure in your request:
 *  `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1RatePlan.
 *
 *  Deletes a rate plan.
 *
 *  @param name Required. ID of the rate plan. Use the following structure in
 *    your request:
 *    `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApiproductsRateplansDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the details of a rate plan.
 *
 *  Method: apigee.organizations.apiproducts.rateplans.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApiproductsRateplansGet : GTLRApigeeQuery

/**
 *  Required. Name of the rate plan. Use the following structure in your
 *  request: `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1RatePlan.
 *
 *  Gets the details of a rate plan.
 *
 *  @param name Required. Name of the rate plan. Use the following structure in
 *    your request:
 *    `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApiproductsRateplansGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all the rate plans for an API product.
 *
 *  Method: apigee.organizations.apiproducts.rateplans.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApiproductsRateplansList : GTLRApigeeQuery

/**
 *  Number of rate plans to return in the API call. Use with the `startKey`
 *  parameter to provide more targeted filtering. The maximum limit is 1000.
 *  Defaults to 100.
 */
@property(nonatomic, assign) NSInteger count;

/**
 *  Flag that specifies whether to expand the results. Set to `true` to get
 *  expanded details about each API. Defaults to `false`.
 */
@property(nonatomic, assign) BOOL expand;

/**
 *  Name of the attribute used for sorting. Valid values include: * `name`: Name
 *  of the rate plan. * `state`: State of the rate plan (`DRAFT`, `PUBLISHED`).
 *  * `startTime`: Time when the rate plan becomes active. * `endTime`: Time
 *  when the rate plan expires. **Note**: Not supported by Apigee at this time.
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Required. Name of the API product. Use the following structure in your
 *  request: `organizations/{org}/apiproducts/{apiproduct}` Use
 *  `organizations/{org}/apiproducts/-` to return rate plans for all API
 *  products within the organization.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Name of the rate plan from which to start displaying the list of rate plans.
 *  If omitted, the list starts from the first item. For example, to view the
 *  rate plans from 51-150, set the value of `startKey` to the name of the 51st
 *  rate plan and set the value of `count` to 100.
 */
@property(nonatomic, copy, nullable) NSString *startKey;

/**
 *  State of the rate plans (`DRAFT`, `PUBLISHED`) that you want to display.
 *
 *  Likely values:
 *    @arg @c kGTLRApigeeStateStateUnspecified State of the rate plan is not
 *        specified. (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRApigeeStateDraft Rate plan is in draft mode and only visible
 *        to API providers. (Value: "DRAFT")
 *    @arg @c kGTLRApigeeStatePublished Rate plan is published and will become
 *        visible to developers for the configured duration (between `startTime`
 *        and `endTime`). (Value: "PUBLISHED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListRatePlansResponse.
 *
 *  Lists all the rate plans for an API product.
 *
 *  @param parent Required. Name of the API product. Use the following structure
 *    in your request: `organizations/{org}/apiproducts/{apiproduct}` Use
 *    `organizations/{org}/apiproducts/-` to return rate plans for all API
 *    products within the organization.
 *
 *  @return GTLRApigeeQuery_OrganizationsApiproductsRateplansList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing rate plan.
 *
 *  Method: apigee.organizations.apiproducts.rateplans.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApiproductsRateplansUpdate : GTLRApigeeQuery

/**
 *  Required. Name of the rate plan. Use the following structure in your
 *  request: `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1RatePlan.
 *
 *  Updates an existing rate plan.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1RatePlan to include in
 *    the query.
 *  @param name Required. Name of the rate plan. Use the following structure in
 *    your request:
 *    `organizations/{org}/apiproducts/{apiproduct}/rateplans/{rateplan}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApiproductsRateplansUpdate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1RatePlan *)object
                           name:(NSString *)name;

@end

/**
 *  Updates an existing API product. You must include all required values,
 *  whether or not you are updating them, as well as any optional values that
 *  you are updating. The API product name required in the request URL is the
 *  internal name of the product, not the display name. While they may be the
 *  same, it depends on whether the API product was created via UI or API. View
 *  the list of API products to identify their internal names.
 *
 *  Method: apigee.organizations.apiproducts.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApiproductsUpdate : GTLRApigeeQuery

/**
 *  Required. Name of the API product. Use the following structure in your
 *  request: `organizations/{org}/apiproducts/{apiproduct}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ApiProduct.
 *
 *  Updates an existing API product. You must include all required values,
 *  whether or not you are updating them, as well as any optional values that
 *  you are updating. The API product name required in the request URL is the
 *  internal name of the product, not the display name. While they may be the
 *  same, it depends on whether the API product was created via UI or API. View
 *  the list of API products to identify their internal names.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1ApiProduct to include in
 *    the query.
 *  @param name Required. Name of the API product. Use the following structure
 *    in your request: `organizations/{org}/apiproducts/{apiproduct}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApiproductsUpdate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1ApiProduct *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an API proxy. The API proxy created will not be accessible at
 *  runtime until it is deployed to an environment. Create a new API proxy by
 *  setting the `name` query parameter to the name of the API proxy. Import an
 *  API proxy configuration bundle stored in zip format on your local machine to
 *  your organization by doing the following: * Set the `name` query parameter
 *  to the name of the API proxy. * Set the `action` query parameter to
 *  `import`. * Set the `Content-Type` header to `multipart/form-data`. * Pass
 *  as a file the name of API proxy configuration bundle stored in zip format on
 *  your local machine using the `file` form field. **Note**: To validate the
 *  API proxy configuration bundle only without importing it, set the `action`
 *  query parameter to `validate`. When importing an API proxy configuration
 *  bundle, if the API proxy does not exist, it will be created. If the API
 *  proxy exists, then a new revision is created. Invalid API proxy
 *  configurations are rejected, and a list of validation errors is returned to
 *  the client.
 *
 *  Method: apigee.organizations.apis.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisCreate : GTLRApigeeQuery

/**
 *  Action to perform when importing an API proxy configuration bundle. Set this
 *  parameter to one of the following values: * `import` to import the API proxy
 *  configuration bundle. * `validate` to validate the API proxy configuration
 *  bundle without importing it.
 */
@property(nonatomic, copy, nullable) NSString *action;

/** Name of the API proxy. Restrict the characters used to: A-Za-z0-9._- */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Name of the organization in the following format:
 *  `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Ignored. All uploads are validated regardless of the value of this field.
 *  Maintained for compatibility with Apigee Edge API.
 */
@property(nonatomic, assign) BOOL validate;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ApiProxyRevision.
 *
 *  Creates an API proxy. The API proxy created will not be accessible at
 *  runtime until it is deployed to an environment. Create a new API proxy by
 *  setting the `name` query parameter to the name of the API proxy. Import an
 *  API proxy configuration bundle stored in zip format on your local machine to
 *  your organization by doing the following: * Set the `name` query parameter
 *  to the name of the API proxy. * Set the `action` query parameter to
 *  `import`. * Set the `Content-Type` header to `multipart/form-data`. * Pass
 *  as a file the name of API proxy configuration bundle stored in zip format on
 *  your local machine using the `file` form field. **Note**: To validate the
 *  API proxy configuration bundle only without importing it, set the `action`
 *  query parameter to `validate`. When importing an API proxy configuration
 *  bundle, if the API proxy does not exist, it will be created. If the API
 *  proxy exists, then a new revision is created. Invalid API proxy
 *  configurations are rejected, and a list of validation errors is returned to
 *  the client.
 *
 *  @param object The @c GTLRApigee_GoogleApiHttpBody to include in the query.
 *  @param parent Required. Name of the organization in the following format:
 *    `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApisCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleApiHttpBody *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an API proxy and all associated endpoints, policies, resources, and
 *  revisions. The API proxy must be undeployed before you can delete it.
 *
 *  Method: apigee.organizations.apis.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisDelete : GTLRApigeeQuery

/**
 *  Required. Name of the API proxy in the following format:
 *  `organizations/{org}/apis/{api}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ApiProxy.
 *
 *  Deletes an API proxy and all associated endpoints, policies, resources, and
 *  revisions. The API proxy must be undeployed before you can delete it.
 *
 *  @param name Required. Name of the API proxy in the following format:
 *    `organizations/{org}/apis/{api}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApisDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all deployments of an API proxy.
 *
 *  Method: apigee.organizations.apis.deployments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisDeploymentsList : GTLRApigeeQuery

/**
 *  Required. Name of the API proxy for which to return deployment information
 *  in the following format: `organizations/{org}/apis/{api}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListDeploymentsResponse.
 *
 *  Lists all deployments of an API proxy.
 *
 *  @param parent Required. Name of the API proxy for which to return deployment
 *    information in the following format: `organizations/{org}/apis/{api}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApisDeploymentsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets an API proxy including a list of existing revisions.
 *
 *  Method: apigee.organizations.apis.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisGet : GTLRApigeeQuery

/**
 *  Required. Name of the API proxy in the following format:
 *  `organizations/{org}/apis/{api}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ApiProxy.
 *
 *  Gets an API proxy including a list of existing revisions.
 *
 *  @param name Required. Name of the API proxy in the following format:
 *    `organizations/{org}/apis/{api}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApisGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a key value map in an API proxy.
 *
 *  Method: apigee.organizations.apis.keyvaluemaps.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisKeyvaluemapsCreate : GTLRApigeeQuery

/**
 *  Required. Name of the environment in which to create the key value map. Use
 *  the following structure in your request: `organizations/{org}/apis/{api}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1KeyValueMap.
 *
 *  Creates a key value map in an API proxy.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1KeyValueMap to include in
 *    the query.
 *  @param parent Required. Name of the environment in which to create the key
 *    value map. Use the following structure in your request:
 *    `organizations/{org}/apis/{api}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApisKeyvaluemapsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1KeyValueMap *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a key value map from an API proxy.
 *
 *  Method: apigee.organizations.apis.keyvaluemaps.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisKeyvaluemapsDelete : GTLRApigeeQuery

/**
 *  Required. Name of the key value map. Use the following structure in your
 *  request: `organizations/{org}/apis/{api}/keyvaluemaps/{keyvaluemap}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1KeyValueMap.
 *
 *  Deletes a key value map from an API proxy.
 *
 *  @param name Required. Name of the key value map. Use the following structure
 *    in your request:
 *    `organizations/{org}/apis/{api}/keyvaluemaps/{keyvaluemap}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApisKeyvaluemapsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates key value entries in a key value map scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  Method: apigee.organizations.apis.keyvaluemaps.entries.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisKeyvaluemapsEntriesCreate : GTLRApigeeQuery

/**
 *  Required. Scope as indicated by the URI in which to create the key value map
 *  entry. Use **one** of the following structures in your request: *
 *  `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
 *  `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
 *  * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1KeyValueEntry.
 *
 *  Creates key value entries in a key value map scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1KeyValueEntry to include
 *    in the query.
 *  @param parent Required. Scope as indicated by the URI in which to create the
 *    key value map entry. Use **one** of the following structures in your
 *    request: *
 *    `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
 *    `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
 *    * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsApisKeyvaluemapsEntriesCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1KeyValueEntry *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a key value entry from a key value map scoped to an organization,
 *  environment, or API proxy. **Notes:** * After you delete the key value
 *  entry, the policy consuming the entry will continue to function with its
 *  cached values for a few minutes. This is expected behavior. * Supported for
 *  Apigee hybrid 1.8.x and higher.
 *
 *  Method: apigee.organizations.apis.keyvaluemaps.entries.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisKeyvaluemapsEntriesDelete : GTLRApigeeQuery

/**
 *  Required. Scope as indicated by the URI in which to delete the key value map
 *  entry. Use **one** of the following structures in your request: *
 *  `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *  *
 *  `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}`
 *  * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1KeyValueEntry.
 *
 *  Deletes a key value entry from a key value map scoped to an organization,
 *  environment, or API proxy. **Notes:** * After you delete the key value
 *  entry, the policy consuming the entry will continue to function with its
 *  cached values for a few minutes. This is expected behavior. * Supported for
 *  Apigee hybrid 1.8.x and higher.
 *
 *  @param name Required. Scope as indicated by the URI in which to delete the
 *    key value map entry. Use **one** of the following structures in your
 *    request: *
 *    `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *    *
 *    `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}`
 *    *
 *    `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsApisKeyvaluemapsEntriesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get the key value entry value for a key value map scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  Method: apigee.organizations.apis.keyvaluemaps.entries.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisKeyvaluemapsEntriesGet : GTLRApigeeQuery

/**
 *  Required. Scope as indicated by the URI in which to fetch the key value map
 *  entry/value. Use **one** of the following structures in your request: *
 *  `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *  *
 *  `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}`
 *  * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1KeyValueEntry.
 *
 *  Get the key value entry value for a key value map scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  @param name Required. Scope as indicated by the URI in which to fetch the
 *    key value map entry/value. Use **one** of the following structures in your
 *    request: *
 *    `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *    *
 *    `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}`
 *    *
 *    `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsApisKeyvaluemapsEntriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists key value entries for key values maps scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  Method: apigee.organizations.apis.keyvaluemaps.entries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisKeyvaluemapsEntriesList : GTLRApigeeQuery

/**
 *  Optional. Maximum number of key value entries to return. If unspecified, at
 *  most 100 entries will be returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token. If provides, must be a valid key value entry returned
 *  from a previous call that can be used to retrieve the next page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Scope as indicated by the URI in which to list key value maps. Use
 *  **one** of the following structures in your request: *
 *  `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
 *  `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
 *  * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListKeyValueEntriesResponse.
 *
 *  Lists key value entries for key values maps scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  @param parent Required. Scope as indicated by the URI in which to list key
 *    value maps. Use **one** of the following structures in your request: *
 *    `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
 *    `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
 *    * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsApisKeyvaluemapsEntriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the names of all API proxies in an organization. The names returned
 *  correspond to the names defined in the configuration files for each API
 *  proxy.
 *
 *  Method: apigee.organizations.apis.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisList : GTLRApigeeQuery

/**
 *  Flag that specifies whether to include API proxy metadata in the response.
 */
@property(nonatomic, assign) BOOL includeMetaData;

/**
 *  Flag that specifies whether to include a list of revisions in the response.
 */
@property(nonatomic, assign) BOOL includeRevisions;

/**
 *  Required. Name of the organization in the following format:
 *  `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListApiProxiesResponse.
 *
 *  Lists the names of all API proxies in an organization. The names returned
 *  correspond to the names defined in the configuration files for each API
 *  proxy.
 *
 *  @param parent Required. Name of the organization in the following format:
 *    `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApisList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing API proxy.
 *
 *  Method: apigee.organizations.apis.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisPatch : GTLRApigeeQuery

/**
 *  Required. API proxy to update in the following format:
 *  `organizations/{org}/apis/{api}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ApiProxy.
 *
 *  Updates an existing API proxy.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1ApiProxy to include in
 *    the query.
 *  @param name Required. API proxy to update in the following format:
 *    `organizations/{org}/apis/{api}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApisPatch
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1ApiProxy *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes an API proxy revision and all policies, resources, endpoints, and
 *  revisions associated with it. The API proxy revision must be undeployed
 *  before you can delete it.
 *
 *  Method: apigee.organizations.apis.revisions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisRevisionsDelete : GTLRApigeeQuery

/**
 *  Required. API proxy revision in the following format:
 *  `organizations/{org}/apis/{api}/revisions/{rev}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ApiProxyRevision.
 *
 *  Deletes an API proxy revision and all policies, resources, endpoints, and
 *  revisions associated with it. The API proxy revision must be undeployed
 *  before you can delete it.
 *
 *  @param name Required. API proxy revision in the following format:
 *    `organizations/{org}/apis/{api}/revisions/{rev}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApisRevisionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all deployments of an API proxy revision.
 *
 *  Method: apigee.organizations.apis.revisions.deployments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisRevisionsDeploymentsList : GTLRApigeeQuery

/**
 *  Required. Name of the API proxy revision for which to return deployment
 *  information in the following format:
 *  `organizations/{org}/apis/{api}/revisions/{rev}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListDeploymentsResponse.
 *
 *  Lists all deployments of an API proxy revision.
 *
 *  @param parent Required. Name of the API proxy revision for which to return
 *    deployment information in the following format:
 *    `organizations/{org}/apis/{api}/revisions/{rev}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsApisRevisionsDeploymentsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets an API proxy revision. To download the API proxy configuration bundle
 *  for the specified revision as a zip file, set the `format` query parameter
 *  to `bundle`. If you are using curl, specify `-o filename.zip` to save the
 *  output to a file; otherwise, it displays to `stdout`. Then, develop the API
 *  proxy configuration locally and upload the updated API proxy configuration
 *  revision, as described in [updateApiProxyRevision](updateApiProxyRevision).
 *
 *  Method: apigee.organizations.apis.revisions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisRevisionsGet : GTLRApigeeQuery

/**
 *  Format used when downloading the API proxy configuration revision. Set to
 *  `bundle` to download the API proxy configuration revision as a zip file.
 */
@property(nonatomic, copy, nullable) NSString *format;

/**
 *  Required. API proxy revision in the following format:
 *  `organizations/{org}/apis/{api}/revisions/{rev}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleApiHttpBody.
 *
 *  Gets an API proxy revision. To download the API proxy configuration bundle
 *  for the specified revision as a zip file, set the `format` query parameter
 *  to `bundle`. If you are using curl, specify `-o filename.zip` to save the
 *  output to a file; otherwise, it displays to `stdout`. Then, develop the API
 *  proxy configuration locally and upload the updated API proxy configuration
 *  revision, as described in [updateApiProxyRevision](updateApiProxyRevision).
 *
 *  @param name Required. API proxy revision in the following format:
 *    `organizations/{org}/apis/{api}/revisions/{rev}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApisRevisionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates an existing API proxy revision by uploading the API proxy
 *  configuration bundle as a zip file from your local machine. You can update
 *  only API proxy revisions that have never been deployed. After deployment, an
 *  API proxy revision becomes immutable, even if it is undeployed. Set the
 *  `Content-Type` header to either `multipart/form-data` or
 *  `application/octet-stream`.
 *
 *  Method: apigee.organizations.apis.revisions.updateApiProxyRevision
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsApisRevisionsUpdateApiProxyRevision : GTLRApigeeQuery

/**
 *  Required. API proxy revision to update in the following format:
 *  `organizations/{org}/apis/{api}/revisions/{rev}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Ignored. All uploads are validated regardless of the value of this field.
 *  Maintained for compatibility with Apigee Edge API.
 */
@property(nonatomic, assign) BOOL validate;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ApiProxyRevision.
 *
 *  Updates an existing API proxy revision by uploading the API proxy
 *  configuration bundle as a zip file from your local machine. You can update
 *  only API proxy revisions that have never been deployed. After deployment, an
 *  API proxy revision becomes immutable, even if it is undeployed. Set the
 *  `Content-Type` header to either `multipart/form-data` or
 *  `application/octet-stream`.
 *
 *  @param object The @c GTLRApigee_GoogleApiHttpBody to include in the query.
 *  @param name Required. API proxy revision to update in the following format:
 *    `organizations/{org}/apis/{api}/revisions/{rev}`
 *
 *  @return GTLRApigeeQuery_OrganizationsApisRevisionsUpdateApiProxyRevision
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleApiHttpBody *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the app profile for the specified app ID.
 *
 *  Method: apigee.organizations.apps.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsAppsGet : GTLRApigeeQuery

/**
 *  Required. App ID in the following format: `organizations/{org}/apps/{app}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1App.
 *
 *  Gets the app profile for the specified app ID.
 *
 *  @param name Required. App ID in the following format:
 *    `organizations/{org}/apps/{app}`
 *
 *  @return GTLRApigeeQuery_OrganizationsAppsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists IDs of apps within an organization that have the specified app status
 *  (approved or revoked) or are of the specified app type (developer or
 *  company).
 *
 *  Method: apigee.organizations.apps.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsAppsList : GTLRApigeeQuery

/** API product. */
@property(nonatomic, copy, nullable) NSString *apiProduct;

/**
 *  Optional. Filter by the type of the app. Valid values are `company` or
 *  `developer`. Defaults to `developer`.
 */
@property(nonatomic, copy, nullable) NSString *apptype;

/**
 *  Optional. Flag that specifies whether to return an expanded list of apps for
 *  the organization. Defaults to `false`.
 */
@property(nonatomic, assign) BOOL expand;

/** Optional. Comma-separated list of app IDs on which to filter. */
@property(nonatomic, copy, nullable) NSString *ids;

/**
 *  Optional. Flag that specifies whether to include credentials in the
 *  response.
 */
@property(nonatomic, assign) BOOL includeCred;

/**
 *  Optional. Key status of the app. Valid values include `approved` or
 *  `revoked`. Defaults to `approved`.
 */
@property(nonatomic, copy, nullable) NSString *keyStatus;

/**
 *  Required. Resource path of the parent in the following format:
 *  `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Optional. Maximum number of app IDs to return. Defaults to 10000. */
@property(nonatomic, assign) long long rows;

/** Returns the list of apps starting from the specified app ID. */
@property(nonatomic, copy, nullable) NSString *startKey;

/**
 *  Optional. Filter by the status of the app. Valid values are `approved` or
 *  `revoked`. Defaults to `approved`.
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListAppsResponse.
 *
 *  Lists IDs of apps within an organization that have the specified app status
 *  (approved or revoked) or are of the specified app type (developer or
 *  company).
 *
 *  @param parent Required. Resource path of the parent in the following format:
 *    `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsAppsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates an Apigee organization. See [Create an Apigee
 *  organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
 *
 *  Method: apigee.organizations.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsCreate : GTLRApigeeQuery

/**
 *  Required. Name of the GCP project in which to associate the Apigee
 *  organization. Pass the information as a query parameter using the following
 *  structure in your request: `projects/`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Creates an Apigee organization. See [Create an Apigee
 *  organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Organization to include
 *    in the query.
 *
 *  @return GTLRApigeeQuery_OrganizationsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Organization *)object;

@end

/**
 *  Creates a new data collector.
 *
 *  Method: apigee.organizations.datacollectors.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDatacollectorsCreate : GTLRApigeeQuery

/**
 *  ID of the data collector. Overrides any ID in the data collector resource.
 *  Must be a string beginning with `dc_` that contains only letters, numbers,
 *  and underscores.
 */
@property(nonatomic, copy, nullable) NSString *dataCollectorId;

/**
 *  Required. Name of the organization in which to create the data collector in
 *  the following format: `organizations/{org}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DataCollector.
 *
 *  Creates a new data collector.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1DataCollector to include
 *    in the query.
 *  @param parent Required. Name of the organization in which to create the data
 *    collector in the following format: `organizations/{org}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsDatacollectorsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1DataCollector *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a data collector.
 *
 *  Method: apigee.organizations.datacollectors.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDatacollectorsDelete : GTLRApigeeQuery

/**
 *  Required. Name of the data collector in the following format:
 *  `organizations/{org}/datacollectors/{data_collector_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleProtobufEmpty.
 *
 *  Deletes a data collector.
 *
 *  @param name Required. Name of the data collector in the following format:
 *    `organizations/{org}/datacollectors/{data_collector_id}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsDatacollectorsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a data collector.
 *
 *  Method: apigee.organizations.datacollectors.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDatacollectorsGet : GTLRApigeeQuery

/**
 *  Required. Name of the data collector in the following format:
 *  `organizations/{org}/datacollectors/{data_collector_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DataCollector.
 *
 *  Gets a data collector.
 *
 *  @param name Required. Name of the data collector in the following format:
 *    `organizations/{org}/datacollectors/{data_collector_id}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsDatacollectorsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all data collectors.
 *
 *  Method: apigee.organizations.datacollectors.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDatacollectorsList : GTLRApigeeQuery

/**
 *  Maximum number of data collectors to return. The page size defaults to 25.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Page token, returned from a previous ListDataCollectors call, that you can
 *  use to retrieve the next page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Name of the organization for which to list data collectors in the
 *  following format: `organizations/{org}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListDataCollectorsResponse.
 *
 *  Lists all data collectors.
 *
 *  @param parent Required. Name of the organization for which to list data
 *    collectors in the following format: `organizations/{org}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsDatacollectorsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a data collector.
 *
 *  Method: apigee.organizations.datacollectors.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDatacollectorsPatch : GTLRApigeeQuery

/**
 *  Required. Name of the data collector in the following format:
 *  `organizations/{org}/datacollectors/{data_collector_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  List of fields to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DataCollector.
 *
 *  Updates a data collector.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1DataCollector to include
 *    in the query.
 *  @param name Required. Name of the data collector in the following format:
 *    `organizations/{org}/datacollectors/{data_collector_id}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsDatacollectorsPatch
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1DataCollector *)object
                           name:(NSString *)name;

@end

/**
 *  Delete an Apigee organization. For organizations with BillingType
 *  EVALUATION, an immediate deletion is performed. For paid organizations, a
 *  soft-deletion is performed. The organization can be restored within the
 *  soft-deletion period which can be controlled using the retention field in
 *  the request.
 *
 *  Method: apigee.organizations.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDelete : GTLRApigeeQuery

/**
 *  Required. Name of the organization. Use the following structure in your
 *  request: `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Optional. This setting is applicable only for organizations that are
 *  soft-deleted (i.e., BillingType is not EVALUATION). It controls how long
 *  Organization data will be retained after the initial delete operation
 *  completes. During this period, the Organization may be restored to its last
 *  known state. After this period, the Organization will no longer be able to
 *  be restored.
 *
 *  Likely values:
 *    @arg @c kGTLRApigeeRetentionDeletionRetentionUnspecified Default data
 *        retention setting of seven days will be applied. (Value:
 *        "DELETION_RETENTION_UNSPECIFIED")
 *    @arg @c kGTLRApigeeRetentionMinimum Organization data will be retained for
 *        the minimum period of 24 hours. (Value: "MINIMUM")
 */
@property(nonatomic, copy, nullable) NSString *retention;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Delete an Apigee organization. For organizations with BillingType
 *  EVALUATION, an immediate deletion is performed. For paid organizations, a
 *  soft-deletion is performed. The organization can be restored within the
 *  soft-deletion period which can be controlled using the retention field in
 *  the request.
 *
 *  @param name Required. Name of the organization. Use the following structure
 *    in your request: `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all deployments of API proxies or shared flows.
 *
 *  Method: apigee.organizations.deployments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDeploymentsList : GTLRApigeeQuery

/**
 *  Required. Name of the organization for which to return deployment
 *  information in the following format: `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Flag that specifies whether to return shared flow or API proxy
 *  deployments. Set to `true` to return shared flow deployments; set to `false`
 *  to return API proxy deployments. Defaults to `false`.
 */
@property(nonatomic, assign) BOOL sharedFlows;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListDeploymentsResponse.
 *
 *  Lists all deployments of API proxies or shared flows.
 *
 *  @param parent Required. Name of the organization for which to return
 *    deployment information in the following format: `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDeploymentsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates attributes for a developer app. This API replaces the current
 *  attributes with those specified in the request.
 *
 *  Method: apigee.organizations.developers.apps.attributes
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsAttributes : GTLRApigeeQuery

/**
 *  Required. Name of the developer app. Use the following structure in your
 *  request: `organizations/{org}/developers/{developer_email}/apps/{app}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Attributes.
 *
 *  Updates attributes for a developer app. This API replaces the current
 *  attributes with those specified in the request.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Attributes to include in
 *    the query.
 *  @param name Required. Name of the developer app. Use the following structure
 *    in your request:
 *    `organizations/{org}/developers/{developer_email}/apps/{app}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsAttributes
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Attributes *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a developer app attribute.
 *
 *  Method: apigee.organizations.developers.apps.attributes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsAttributesDelete : GTLRApigeeQuery

/**
 *  Required. Name of the developer app attribute. Use the following structure
 *  in your request:
 *  `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Attribute.
 *
 *  Deletes a developer app attribute.
 *
 *  @param name Required. Name of the developer app attribute. Use the following
 *    structure in your request:
 *    `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsAttributesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a developer app attribute.
 *
 *  Method: apigee.organizations.developers.apps.attributes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsAttributesGet : GTLRApigeeQuery

/**
 *  Required. Name of the developer app attribute. Use the following structure
 *  in your request:
 *  `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Attribute.
 *
 *  Returns a developer app attribute.
 *
 *  @param name Required. Name of the developer app attribute. Use the following
 *    structure in your request:
 *    `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsAttributesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a list of all developer app attributes.
 *
 *  Method: apigee.organizations.developers.apps.attributes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsAttributesList : GTLRApigeeQuery

/**
 *  Required. Name of the developer app. Use the following structure in your
 *  request: `organizations/{org}/developers/{developer_email}/apps/{app}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Attributes.
 *
 *  Returns a list of all developer app attributes.
 *
 *  @param parent Required. Name of the developer app. Use the following
 *    structure in your request:
 *    `organizations/{org}/developers/{developer_email}/apps/{app}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsAttributesList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a developer app attribute. **Note**: OAuth access tokens and Key
 *  Management Service (KMS) entities (apps, developers, and API products) are
 *  cached for 180 seconds (current default). Any custom attributes associated
 *  with these entities are cached for at least 180 seconds after the entity is
 *  accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy
 *  won't be able to expire an access token in less than 180 seconds.
 *
 *  Method: apigee.organizations.developers.apps.attributes.updateDeveloperAppAttribute
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsAttributesUpdateDeveloperAppAttribute : GTLRApigeeQuery

/**
 *  Required. Name of the developer app attribute. Use the following structure
 *  in your request:
 *  `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Attribute.
 *
 *  Updates a developer app attribute. **Note**: OAuth access tokens and Key
 *  Management Service (KMS) entities (apps, developers, and API products) are
 *  cached for 180 seconds (current default). Any custom attributes associated
 *  with these entities are cached for at least 180 seconds after the entity is
 *  accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy
 *  won't be able to expire an access token in less than 180 seconds.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Attribute to include in
 *    the query.
 *  @param name Required. Name of the developer app attribute. Use the following
 *    structure in your request:
 *    `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsAttributesUpdateDeveloperAppAttribute
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Attribute *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an app associated with a developer. This API associates the
 *  developer app with the specified API product and auto-generates an API key
 *  for the app to use in calls to API proxies inside that API product. The
 *  `name` is the unique ID of the app that you can use in API calls. The
 *  `DisplayName` (set as an attribute) appears in the UI. If you don't set the
 *  `DisplayName` attribute, the `name` appears in the UI.
 *
 *  Method: apigee.organizations.developers.apps.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsCreate : GTLRApigeeQuery

/**
 *  Required. Name of the developer. Use the following structure in your
 *  request: `organizations/{org}/developers/{developer_email}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperApp.
 *
 *  Creates an app associated with a developer. This API associates the
 *  developer app with the specified API product and auto-generates an API key
 *  for the app to use in calls to API proxies inside that API product. The
 *  `name` is the unique ID of the app that you can use in API calls. The
 *  `DisplayName` (set as an attribute) appears in the UI. If you don't set the
 *  `DisplayName` attribute, the `name` appears in the UI.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1DeveloperApp to include
 *    in the query.
 *  @param parent Required. Name of the developer. Use the following structure
 *    in your request: `organizations/{org}/developers/{developer_email}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1DeveloperApp *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a developer app. **Note**: The delete operation is asynchronous. The
 *  developer app is deleted immediately, but its associated resources, such as
 *  app keys or access tokens, may take anywhere from a few seconds to a few
 *  minutes to be deleted.
 *
 *  Method: apigee.organizations.developers.apps.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsDelete : GTLRApigeeQuery

/**
 *  Required. Name of the developer app. Use the following structure in your
 *  request: `organizations/{org}/developers/{developer_email}/apps/{app}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperApp.
 *
 *  Deletes a developer app. **Note**: The delete operation is asynchronous. The
 *  developer app is deleted immediately, but its associated resources, such as
 *  app keys or access tokens, may take anywhere from a few seconds to a few
 *  minutes to be deleted.
 *
 *  @param name Required. Name of the developer app. Use the following structure
 *    in your request:
 *    `organizations/{org}/developers/{developer_email}/apps/{app}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Manages access to a developer app by enabling you to: * Approve or revoke a
 *  developer app * Generate a new consumer key and secret for a developer app
 *  To approve or revoke a developer app, set the `action` query parameter to
 *  `approve` or `revoke`, respectively, and the `Content-Type` header to
 *  `application/octet-stream`. If a developer app is revoked, none of its API
 *  keys are valid for API calls even though the keys are still approved. If
 *  successful, the API call returns the following HTTP status code: `204 No
 *  Content` To generate a new consumer key and secret for a developer app, pass
 *  the new key/secret details. Rather than replace an existing key, this API
 *  generates a new key. In this case, multiple key pairs may be associated with
 *  a single developer app. Each key pair has an independent status (`approve`
 *  or `revoke`) and expiration time. Any approved, non-expired key can be used
 *  in an API call. For example, if you're using API key rotation, you can
 *  generate new keys with expiration times that overlap keys that are going to
 *  expire. You might also generate a new consumer key/secret if the security of
 *  the original key/secret is compromised. The `keyExpiresIn` property defines
 *  the expiration time for the API key in milliseconds. If you don't set this
 *  property or set it to `-1`, the API key never expires. **Notes**: * When
 *  generating a new key/secret, this API replaces the existing attributes,
 *  notes, and callback URLs with those specified in the request. Include or
 *  exclude any existing information that you want to retain or delete,
 *  respectively. * To migrate existing consumer keys and secrets to hybrid from
 *  another system, see the CreateDeveloperAppKey API.
 *
 *  Method: apigee.organizations.developers.apps.generateKeyPairOrUpdateDeveloperAppStatus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsGenerateKeyPairOrUpdateDeveloperAppStatus : GTLRApigeeQuery

/** Action. Valid values are `approve` or `revoke`. */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  Required. Name of the developer app. Use the following structure in your
 *  request: `organizations/{org}/developers/{developer_email}/apps/{app}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperApp.
 *
 *  Manages access to a developer app by enabling you to: * Approve or revoke a
 *  developer app * Generate a new consumer key and secret for a developer app
 *  To approve or revoke a developer app, set the `action` query parameter to
 *  `approve` or `revoke`, respectively, and the `Content-Type` header to
 *  `application/octet-stream`. If a developer app is revoked, none of its API
 *  keys are valid for API calls even though the keys are still approved. If
 *  successful, the API call returns the following HTTP status code: `204 No
 *  Content` To generate a new consumer key and secret for a developer app, pass
 *  the new key/secret details. Rather than replace an existing key, this API
 *  generates a new key. In this case, multiple key pairs may be associated with
 *  a single developer app. Each key pair has an independent status (`approve`
 *  or `revoke`) and expiration time. Any approved, non-expired key can be used
 *  in an API call. For example, if you're using API key rotation, you can
 *  generate new keys with expiration times that overlap keys that are going to
 *  expire. You might also generate a new consumer key/secret if the security of
 *  the original key/secret is compromised. The `keyExpiresIn` property defines
 *  the expiration time for the API key in milliseconds. If you don't set this
 *  property or set it to `-1`, the API key never expires. **Notes**: * When
 *  generating a new key/secret, this API replaces the existing attributes,
 *  notes, and callback URLs with those specified in the request. Include or
 *  exclude any existing information that you want to retain or delete,
 *  respectively. * To migrate existing consumer keys and secrets to hybrid from
 *  another system, see the CreateDeveloperAppKey API.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1DeveloperApp to include
 *    in the query.
 *  @param name Required. Name of the developer app. Use the following structure
 *    in your request:
 *    `organizations/{org}/developers/{developer_email}/apps/{app}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsGenerateKeyPairOrUpdateDeveloperAppStatus
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1DeveloperApp *)object
                           name:(NSString *)name;

@end

/**
 *  Returns the details for a developer app.
 *
 *  Method: apigee.organizations.developers.apps.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsGet : GTLRApigeeQuery

/**
 *  **Note**: Must be used in conjunction with the `query` parameter. Set to
 *  `apiresources` to return the number of API resources that have been approved
 *  for access by a developer app in the specified Apigee organization.
 */
@property(nonatomic, copy, nullable) NSString *entity;

/**
 *  Required. Name of the developer app. Use the following structure in your
 *  request: `organizations/{org}/developers/{developer_email}/apps/{app}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  **Note**: Must be used in conjunction with the `entity` parameter. Set to
 *  `count` to return the number of API resources that have been approved for
 *  access by a developer app in the specified Apigee organization.
 */
@property(nonatomic, copy, nullable) NSString *query;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperApp.
 *
 *  Returns the details for a developer app.
 *
 *  @param name Required. Name of the developer app. Use the following structure
 *    in your request:
 *    `organizations/{org}/developers/{developer_email}/apps/{app}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Removes an API product from an app's consumer key. After the API product is
 *  removed, the app cannot access the API resources defined in that API
 *  product. **Note**: The consumer key is not removed, only its association
 *  with the API product.
 *
 *  Method: apigee.organizations.developers.apps.keys.apiproducts.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsKeysApiproductsDelete : GTLRApigeeQuery

/**
 *  Name of the API product in the developer app key in the following format:
 *  `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperAppKey.
 *
 *  Removes an API product from an app's consumer key. After the API product is
 *  removed, the app cannot access the API resources defined in that API
 *  product. **Note**: The consumer key is not removed, only its association
 *  with the API product.
 *
 *  @param name Name of the API product in the developer app key in the
 *    following format:
 *    `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsKeysApiproductsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Approves or revokes the consumer key for an API product. After a consumer
 *  key is approved, the app can use it to access APIs. A consumer key that is
 *  revoked or pending cannot be used to access an API. Any access tokens
 *  associated with a revoked consumer key will remain active. However, Apigee
 *  checks the status of the consumer key and if set to `revoked` will not allow
 *  access to the API.
 *
 *  Method: apigee.organizations.developers.apps.keys.apiproducts.updateDeveloperAppKeyApiProduct
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsKeysApiproductsUpdateDeveloperAppKeyApiProduct : GTLRApigeeQuery

/**
 *  Approve or revoke the consumer key by setting this value to `approve` or
 *  `revoke`, respectively.
 */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  Name of the API product in the developer app key in the following format:
 *  `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleProtobufEmpty.
 *
 *  Approves or revokes the consumer key for an API product. After a consumer
 *  key is approved, the app can use it to access APIs. A consumer key that is
 *  revoked or pending cannot be used to access an API. Any access tokens
 *  associated with a revoked consumer key will remain active. However, Apigee
 *  checks the status of the consumer key and if set to `revoked` will not allow
 *  access to the API.
 *
 *  @param name Name of the API product in the developer app key in the
 *    following format:
 *    `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsKeysApiproductsUpdateDeveloperAppKeyApiProduct
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a custom consumer key and secret for a developer app. This is
 *  particularly useful if you want to migrate existing consumer keys and
 *  secrets to Apigee from another system. Consumer keys and secrets can contain
 *  letters, numbers, underscores, and hyphens. No other special characters are
 *  allowed. To avoid service disruptions, a consumer key and secret should not
 *  exceed 2 KBs each. **Note**: When creating the consumer key and secret, an
 *  association to API products will not be made. Therefore, you should not
 *  specify the associated API products in your request. Instead, use the
 *  UpdateDeveloperAppKey API to make the association after the consumer key and
 *  secret are created. If a consumer key and secret already exist, you can keep
 *  them or delete them using the DeleteDeveloperAppKey API.
 *
 *  Method: apigee.organizations.developers.apps.keys.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsKeysCreate : GTLRApigeeQuery

/**
 *  Parent of the developer app key. Use the following structure in your
 *  request: `organizations/{org}/developers/{developer_email}/apps`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperAppKey.
 *
 *  Creates a custom consumer key and secret for a developer app. This is
 *  particularly useful if you want to migrate existing consumer keys and
 *  secrets to Apigee from another system. Consumer keys and secrets can contain
 *  letters, numbers, underscores, and hyphens. No other special characters are
 *  allowed. To avoid service disruptions, a consumer key and secret should not
 *  exceed 2 KBs each. **Note**: When creating the consumer key and secret, an
 *  association to API products will not be made. Therefore, you should not
 *  specify the associated API products in your request. Instead, use the
 *  UpdateDeveloperAppKey API to make the association after the consumer key and
 *  secret are created. If a consumer key and secret already exist, you can keep
 *  them or delete them using the DeleteDeveloperAppKey API.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1DeveloperAppKey to
 *    include in the query.
 *  @param parent Parent of the developer app key. Use the following structure
 *    in your request: `organizations/{org}/developers/{developer_email}/apps`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsKeysCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1DeveloperAppKey *)object
                         parent:(NSString *)parent;

@end

/**
 *  Creates a custom consumer key and secret for a developer app. This is
 *  particularly useful if you want to migrate existing consumer keys and
 *  secrets to Apigee from another system. Consumer keys and secrets can contain
 *  letters, numbers, underscores, and hyphens. No other special characters are
 *  allowed. To avoid service disruptions, a consumer key and secret should not
 *  exceed 2 KBs each. **Note**: When creating the consumer key and secret, an
 *  association to API products will not be made. Therefore, you should not
 *  specify the associated API products in your request. Instead, use the
 *  UpdateDeveloperAppKey API to make the association after the consumer key and
 *  secret are created. If a consumer key and secret already exist, you can keep
 *  them or delete them using the DeleteDeveloperAppKey API.
 *
 *  Method: apigee.organizations.developers.apps.keys.create.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsKeysCreateCreate : GTLRApigeeQuery

/**
 *  Parent of the developer app key. Use the following structure in your
 *  request: `organizations/{org}/developers/{developer_email}/apps`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperAppKey.
 *
 *  Creates a custom consumer key and secret for a developer app. This is
 *  particularly useful if you want to migrate existing consumer keys and
 *  secrets to Apigee from another system. Consumer keys and secrets can contain
 *  letters, numbers, underscores, and hyphens. No other special characters are
 *  allowed. To avoid service disruptions, a consumer key and secret should not
 *  exceed 2 KBs each. **Note**: When creating the consumer key and secret, an
 *  association to API products will not be made. Therefore, you should not
 *  specify the associated API products in your request. Instead, use the
 *  UpdateDeveloperAppKey API to make the association after the consumer key and
 *  secret are created. If a consumer key and secret already exist, you can keep
 *  them or delete them using the DeleteDeveloperAppKey API.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1DeveloperAppKey to
 *    include in the query.
 *  @param parent Parent of the developer app key. Use the following structure
 *    in your request: `organizations/{org}/developers/{developer_email}/apps`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsKeysCreateCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1DeveloperAppKey *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an app's consumer key and removes all API products associated with
 *  the app. After the consumer key is deleted, it cannot be used to access any
 *  APIs. **Note**: After you delete a consumer key, you may want to: 1. Create
 *  a new consumer key and secret for the developer app using the
 *  CreateDeveloperAppKey API, and subsequently add an API product to the key
 *  using the UpdateDeveloperAppKey API. 2. Delete the developer app, if it is
 *  no longer required.
 *
 *  Method: apigee.organizations.developers.apps.keys.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsKeysDelete : GTLRApigeeQuery

/**
 *  Name of the developer app key. Use the following structure in your request:
 *  `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperAppKey.
 *
 *  Deletes an app's consumer key and removes all API products associated with
 *  the app. After the consumer key is deleted, it cannot be used to access any
 *  APIs. **Note**: After you delete a consumer key, you may want to: 1. Create
 *  a new consumer key and secret for the developer app using the
 *  CreateDeveloperAppKey API, and subsequently add an API product to the key
 *  using the UpdateDeveloperAppKey API. 2. Delete the developer app, if it is
 *  no longer required.
 *
 *  @param name Name of the developer app key. Use the following structure in
 *    your request:
 *    `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsKeysDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets details for a consumer key for a developer app, including the key and
 *  secret value, associated API products, and other information.
 *
 *  Method: apigee.organizations.developers.apps.keys.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsKeysGet : GTLRApigeeQuery

/**
 *  Name of the developer app key. Use the following structure in your request:
 *  `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperAppKey.
 *
 *  Gets details for a consumer key for a developer app, including the key and
 *  secret value, associated API products, and other information.
 *
 *  @param name Name of the developer app key. Use the following structure in
 *    your request:
 *    `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsKeysGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the scope of an app. This API replaces the existing scopes with
 *  those specified in the request. Include or exclude any existing scopes that
 *  you want to retain or delete, respectively. The specified scopes must
 *  already be defined for the API products associated with the app. This API
 *  sets the `scopes` element under the `apiProducts` element in the attributes
 *  of the app.
 *
 *  Method: apigee.organizations.developers.apps.keys.replaceDeveloperAppKey
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsKeysReplaceDeveloperAppKey : GTLRApigeeQuery

/**
 *  Name of the developer app key. Use the following structure in your request:
 *  `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperAppKey.
 *
 *  Updates the scope of an app. This API replaces the existing scopes with
 *  those specified in the request. Include or exclude any existing scopes that
 *  you want to retain or delete, respectively. The specified scopes must
 *  already be defined for the API products associated with the app. This API
 *  sets the `scopes` element under the `apiProducts` element in the attributes
 *  of the app.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1DeveloperAppKey to
 *    include in the query.
 *  @param name Name of the developer app key. Use the following structure in
 *    your request:
 *    `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsKeysReplaceDeveloperAppKey
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1DeveloperAppKey *)object
                           name:(NSString *)name;

@end

/**
 *  Adds an API product to a developer app key, enabling the app that holds the
 *  key to access the API resources bundled in the API product. In addition, you
 *  can add attributes to a developer app key. This API replaces the existing
 *  attributes with those specified in the request. Include or exclude any
 *  existing attributes that you want to retain or delete, respectively. You can
 *  use the same key to access all API products associated with the app.
 *
 *  Method: apigee.organizations.developers.apps.keys.updateDeveloperAppKey
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsKeysUpdateDeveloperAppKey : GTLRApigeeQuery

/**
 *  Approve or revoke the consumer key by setting this value to `approve` or
 *  `revoke`, respectively. The `Content-Type` header must be set to
 *  `application/octet-stream`.
 */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  Name of the developer app key. Use the following structure in your request:
 *  `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperAppKey.
 *
 *  Adds an API product to a developer app key, enabling the app that holds the
 *  key to access the API resources bundled in the API product. In addition, you
 *  can add attributes to a developer app key. This API replaces the existing
 *  attributes with those specified in the request. Include or exclude any
 *  existing attributes that you want to retain or delete, respectively. You can
 *  use the same key to access all API products associated with the app.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1DeveloperAppKey to
 *    include in the query.
 *  @param name Name of the developer app key. Use the following structure in
 *    your request:
 *    `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsKeysUpdateDeveloperAppKey
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1DeveloperAppKey *)object
                           name:(NSString *)name;

@end

/**
 *  Lists all apps created by a developer in an Apigee organization. Optionally,
 *  you can request an expanded view of the developer apps. A maximum of 100
 *  developer apps are returned per API call. You can paginate the list of
 *  deveoper apps returned using the `startKey` and `count` query parameters.
 *
 *  Method: apigee.organizations.developers.apps.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsList : GTLRApigeeQuery

/**
 *  Number of developer apps to return in the API call. Use with the `startKey`
 *  parameter to provide more targeted filtering. The limit is 1000.
 */
@property(nonatomic, assign) long long count;

/**
 *  Optional. Specifies whether to expand the results. Set to `true` to expand
 *  the results. This query parameter is not valid if you use the `count` or
 *  `startKey` query parameters.
 */
@property(nonatomic, assign) BOOL expand;

/**
 *  Required. Name of the developer. Use the following structure in your
 *  request: `organizations/{org}/developers/{developer_email}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Specifies whether to expand the results in shallow mode. Set to
 *  `true` to expand the results in shallow mode.
 */
@property(nonatomic, assign) BOOL shallowExpand;

/**
 *  **Note**: Must be used in conjunction with the `count` parameter. Name of
 *  the developer app from which to start displaying the list of developer apps.
 *  For example, if you're returning 50 developer apps at a time (using the
 *  `count` query parameter), you can view developer apps 50-99 by entering the
 *  name of the 50th developer app. The developer app name is case sensitive.
 */
@property(nonatomic, copy, nullable) NSString *startKey;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListDeveloperAppsResponse.
 *
 *  Lists all apps created by a developer in an Apigee organization. Optionally,
 *  you can request an expanded view of the developer apps. A maximum of 100
 *  developer apps are returned per API call. You can paginate the list of
 *  deveoper apps returned using the `startKey` and `count` query parameters.
 *
 *  @param parent Required. Name of the developer. Use the following structure
 *    in your request: `organizations/{org}/developers/{developer_email}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates the details for a developer app. In addition, you can add an API
 *  product to a developer app and automatically generate an API key for the app
 *  to use when calling APIs in the API product. If you want to use an existing
 *  API key for the API product, add the API product to the API key using the
 *  UpdateDeveloperAppKey API. Using this API, you cannot update the following:
 *  * App name as it is the primary key used to identify the app and cannot be
 *  changed. * Scopes associated with the app. Instead, use the
 *  ReplaceDeveloperAppKey API. This API replaces the existing attributes with
 *  those specified in the request. Include or exclude any existing attributes
 *  that you want to retain or delete, respectively.
 *
 *  Method: apigee.organizations.developers.apps.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAppsUpdate : GTLRApigeeQuery

/**
 *  Required. Name of the developer app. Use the following structure in your
 *  request: `organizations/{org}/developers/{developer_email}/apps/{app}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperApp.
 *
 *  Updates the details for a developer app. In addition, you can add an API
 *  product to a developer app and automatically generate an API key for the app
 *  to use when calling APIs in the API product. If you want to use an existing
 *  API key for the API product, add the API product to the API key using the
 *  UpdateDeveloperAppKey API. Using this API, you cannot update the following:
 *  * App name as it is the primary key used to identify the app and cannot be
 *  changed. * Scopes associated with the app. Instead, use the
 *  ReplaceDeveloperAppKey API. This API replaces the existing attributes with
 *  those specified in the request. Include or exclude any existing attributes
 *  that you want to retain or delete, respectively.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1DeveloperApp to include
 *    in the query.
 *  @param name Required. Name of the developer app. Use the following structure
 *    in your request:
 *    `organizations/{org}/developers/{developer_email}/apps/{app}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAppsUpdate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1DeveloperApp *)object
                           name:(NSString *)name;

@end

/**
 *  Updates developer attributes. This API replaces the existing attributes with
 *  those specified in the request. Add new attributes, and include or exclude
 *  any existing attributes that you want to retain or remove, respectively. The
 *  custom attribute limit is 18. **Note**: OAuth access tokens and Key
 *  Management Service (KMS) entities (apps, developers, and API products) are
 *  cached for 180 seconds (default). Any custom attributes associated with
 *  these entities are cached for at least 180 seconds after the entity is
 *  accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy
 *  won't be able to expire an access token in less than 180 seconds.
 *
 *  Method: apigee.organizations.developers.attributes
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAttributes : GTLRApigeeQuery

/**
 *  Required. Email address of the developer for which attributes are being
 *  updated. Use the following structure in your request:
 *  `organizations/{org}/developers/{developer_email}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Attributes.
 *
 *  Updates developer attributes. This API replaces the existing attributes with
 *  those specified in the request. Add new attributes, and include or exclude
 *  any existing attributes that you want to retain or remove, respectively. The
 *  custom attribute limit is 18. **Note**: OAuth access tokens and Key
 *  Management Service (KMS) entities (apps, developers, and API products) are
 *  cached for 180 seconds (default). Any custom attributes associated with
 *  these entities are cached for at least 180 seconds after the entity is
 *  accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy
 *  won't be able to expire an access token in less than 180 seconds.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Attributes to include in
 *    the query.
 *  @param parent Required. Email address of the developer for which attributes
 *    are being updated. Use the following structure in your request:
 *    `organizations/{org}/developers/{developer_email}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAttributes
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Attributes *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a developer attribute.
 *
 *  Method: apigee.organizations.developers.attributes.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAttributesDelete : GTLRApigeeQuery

/**
 *  Required. Name of the developer attribute. Use the following structure in
 *  your request:
 *  `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Attribute.
 *
 *  Deletes a developer attribute.
 *
 *  @param name Required. Name of the developer attribute. Use the following
 *    structure in your request:
 *    `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAttributesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the value of the specified developer attribute.
 *
 *  Method: apigee.organizations.developers.attributes.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAttributesGet : GTLRApigeeQuery

/**
 *  Required. Name of the developer attribute. Use the following structure in
 *  your request:
 *  `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Attribute.
 *
 *  Returns the value of the specified developer attribute.
 *
 *  @param name Required. Name of the developer attribute. Use the following
 *    structure in your request:
 *    `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAttributesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns a list of all developer attributes.
 *
 *  Method: apigee.organizations.developers.attributes.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAttributesList : GTLRApigeeQuery

/**
 *  Required. Email address of the developer for which attributes are being
 *  listed. Use the following structure in your request:
 *  `organizations/{org}/developers/{developer_email}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Attributes.
 *
 *  Returns a list of all developer attributes.
 *
 *  @param parent Required. Email address of the developer for which attributes
 *    are being listed. Use the following structure in your request:
 *    `organizations/{org}/developers/{developer_email}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAttributesList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a developer attribute. **Note**: OAuth access tokens and Key
 *  Management Service (KMS) entities (apps, developers, and API products) are
 *  cached for 180 seconds (default). Any custom attributes associated with
 *  these entities are cached for at least 180 seconds after the entity is
 *  accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy
 *  won't be able to expire an access token in less than 180 seconds.
 *
 *  Method: apigee.organizations.developers.attributes.updateDeveloperAttribute
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersAttributesUpdateDeveloperAttribute : GTLRApigeeQuery

/**
 *  Required. Name of the developer attribute. Use the following structure in
 *  your request:
 *  `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Attribute.
 *
 *  Updates a developer attribute. **Note**: OAuth access tokens and Key
 *  Management Service (KMS) entities (apps, developers, and API products) are
 *  cached for 180 seconds (default). Any custom attributes associated with
 *  these entities are cached for at least 180 seconds after the entity is
 *  accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy
 *  won't be able to expire an access token in less than 180 seconds.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Attribute to include in
 *    the query.
 *  @param name Required. Name of the developer attribute. Use the following
 *    structure in your request:
 *    `organizations/{org}/developers/{developer_email}/attributes/{attribute}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersAttributesUpdateDeveloperAttribute
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Attribute *)object
                           name:(NSString *)name;

@end

/**
 *  Adjust the prepaid balance for the developer. This API will be used in
 *  scenarios where the developer has been under-charged or over-charged.
 *
 *  Method: apigee.organizations.developers.balance.adjust
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersBalanceAdjust : GTLRApigeeQuery

/**
 *  Required. Account balance for the developer. Use the following structure in
 *  your request: `organizations/{org}/developers/{developer}/balance`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperBalance.
 *
 *  Adjust the prepaid balance for the developer. This API will be used in
 *  scenarios where the developer has been under-charged or over-charged.
 *
 *  @param object The @c
 *    GTLRApigee_GoogleCloudApigeeV1AdjustDeveloperBalanceRequest to include in
 *    the query.
 *  @param name Required. Account balance for the developer. Use the following
 *    structure in your request:
 *    `organizations/{org}/developers/{developer}/balance`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersBalanceAdjust
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1AdjustDeveloperBalanceRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Credits the account balance for the developer.
 *
 *  Method: apigee.organizations.developers.balance.credit
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersBalanceCredit : GTLRApigeeQuery

/**
 *  Required. Account balance for the developer. Use the following structure in
 *  your request: `organizations/{org}/developers/{developer}/balance`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperBalance.
 *
 *  Credits the account balance for the developer.
 *
 *  @param object The @c
 *    GTLRApigee_GoogleCloudApigeeV1CreditDeveloperBalanceRequest to include in
 *    the query.
 *  @param name Required. Account balance for the developer. Use the following
 *    structure in your request:
 *    `organizations/{org}/developers/{developer}/balance`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersBalanceCredit
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1CreditDeveloperBalanceRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a developer. Once created, the developer can register an app and
 *  obtain an API key. At creation time, a developer is set as `active`. To
 *  change the developer status, use the SetDeveloperStatus API.
 *
 *  Method: apigee.organizations.developers.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersCreate : GTLRApigeeQuery

/**
 *  Required. Name of the Apigee organization in which the developer is created.
 *  Use the following structure in your request: `organizations/{org}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Developer.
 *
 *  Creates a developer. Once created, the developer can register an app and
 *  obtain an API key. At creation time, a developer is set as `active`. To
 *  change the developer status, use the SetDeveloperStatus API.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Developer to include in
 *    the query.
 *  @param parent Required. Name of the Apigee organization in which the
 *    developer is created. Use the following structure in your request:
 *    `organizations/{org}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Developer *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a developer. All apps and API keys associated with the developer are
 *  also removed. **Warning**: This API will permanently delete the developer
 *  and related artifacts. To avoid permanently deleting developers and their
 *  artifacts, set the developer status to `inactive` using the
 *  SetDeveloperStatus API. **Note**: The delete operation is asynchronous. The
 *  developer app is deleted immediately, but its associated resources, such as
 *  apps and API keys, may take anywhere from a few seconds to a few minutes to
 *  be deleted.
 *
 *  Method: apigee.organizations.developers.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersDelete : GTLRApigeeQuery

/**
 *  Required. Email address of the developer. Use the following structure in
 *  your request: `organizations/{org}/developers/{developer_email}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Developer.
 *
 *  Deletes a developer. All apps and API keys associated with the developer are
 *  also removed. **Warning**: This API will permanently delete the developer
 *  and related artifacts. To avoid permanently deleting developers and their
 *  artifacts, set the developer status to `inactive` using the
 *  SetDeveloperStatus API. **Note**: The delete operation is asynchronous. The
 *  developer app is deleted immediately, but its associated resources, such as
 *  apps and API keys, may take anywhere from a few seconds to a few minutes to
 *  be deleted.
 *
 *  @param name Required. Email address of the developer. Use the following
 *    structure in your request:
 *    `organizations/{org}/developers/{developer_email}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the developer details, including the developer's name, email
 *  address, apps, and other information. **Note**: The response includes only
 *  the first 100 developer apps.
 *
 *  Method: apigee.organizations.developers.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersGet : GTLRApigeeQuery

/** Status of the developer. Valid values are `active` or `inactive`. */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  Required. Email address of the developer. Use the following structure in
 *  your request: `organizations/{org}/developers/{developer_email}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Developer.
 *
 *  Returns the developer details, including the developer's name, email
 *  address, apps, and other information. **Note**: The response includes only
 *  the first 100 developer apps.
 *
 *  @param name Required. Email address of the developer. Use the following
 *    structure in your request:
 *    `organizations/{org}/developers/{developer_email}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the account balance for the developer.
 *
 *  Method: apigee.organizations.developers.getBalance
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersGetBalance : GTLRApigeeQuery

/**
 *  Required. Account balance for the developer. Use the following structure in
 *  your request: `organizations/{org}/developers/{developer}/balance`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperBalance.
 *
 *  Gets the account balance for the developer.
 *
 *  @param name Required. Account balance for the developer. Use the following
 *    structure in your request:
 *    `organizations/{org}/developers/{developer}/balance`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersGetBalance
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the monetization configuration for the developer.
 *
 *  Method: apigee.organizations.developers.getMonetizationConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersGetMonetizationConfig : GTLRApigeeQuery

/**
 *  Required. Monetization configuration for the developer. Use the following
 *  structure in your request:
 *  `organizations/{org}/developers/{developer}/monetizationConfig`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperMonetizationConfig.
 *
 *  Gets the monetization configuration for the developer.
 *
 *  @param name Required. Monetization configuration for the developer. Use the
 *    following structure in your request:
 *    `organizations/{org}/developers/{developer}/monetizationConfig`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersGetMonetizationConfig
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all developers in an organization by email address. By default, the
 *  response does not include company developers. Set the `includeCompany` query
 *  parameter to `true` to include company developers. **Note**: A maximum of
 *  1000 developers are returned in the response. You paginate the list of
 *  developers returned using the `startKey` and `count` query parameters.
 *
 *  Method: apigee.organizations.developers.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersList : GTLRApigeeQuery

/**
 *  Optional. List only Developers that are associated with the app. Note that
 *  start_key, count are not applicable for this filter criteria.
 */
@property(nonatomic, copy, nullable) NSString *app;

/**
 *  Optional. Number of developers to return in the API call. Use with the
 *  `startKey` parameter to provide more targeted filtering. The limit is 1000.
 */
@property(nonatomic, assign) long long count;

/**
 *  Specifies whether to expand the results. Set to `true` to expand the
 *  results. This query parameter is not valid if you use the `count` or
 *  `startKey` query parameters.
 */
@property(nonatomic, assign) BOOL expand;

/** Optional. List of IDs to include, separated by commas. */
@property(nonatomic, copy, nullable) NSString *ids;

/** Flag that specifies whether to include company details in the response. */
@property(nonatomic, assign) BOOL includeCompany;

/**
 *  Required. Name of the Apigee organization. Use the following structure in
 *  your request: `organizations/{org}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  **Note**: Must be used in conjunction with the `count` parameter. Email
 *  address of the developer from which to start displaying the list of
 *  developers. For example, if the an unfiltered list returns: ```
 *  westley\@example.com fezzik\@example.com buttercup\@example.com ``` and your
 *  `startKey` is `fezzik\@example.com`, the list returned will be ```
 *  fezzik\@example.com buttercup\@example.com ```
 */
@property(nonatomic, copy, nullable) NSString *startKey;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListOfDevelopersResponse.
 *
 *  Lists all developers in an organization by email address. By default, the
 *  response does not include company developers. Set the `includeCompany` query
 *  parameter to `true` to include company developers. **Note**: A maximum of
 *  1000 developers are returned in the response. You paginate the list of
 *  developers returned using the `startKey` and `count` query parameters.
 *
 *  @param parent Required. Name of the Apigee organization. Use the following
 *    structure in your request: `organizations/{org}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Sets the status of a developer. A developer is `active` by default. If you
 *  set a developer's status to `inactive`, the API keys assigned to the
 *  developer apps are no longer valid even though the API keys are set to
 *  `approved`. Inactive developers can still sign in to the developer portal
 *  and create apps; however, any new API keys generated during app creation
 *  won't work. To set the status of a developer, set the `action` query
 *  parameter to `active` or `inactive`, and the `Content-Type` header to
 *  `application/octet-stream`. If successful, the API call returns the
 *  following HTTP status code: `204 No Content`
 *
 *  Method: apigee.organizations.developers.setDeveloperStatus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersSetDeveloperStatus : GTLRApigeeQuery

/** Status of the developer. Valid values are `active` and `inactive`. */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  Required. Name of the developer. Use the following structure in your
 *  request: `organizations/{org}/developers/{developer_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleProtobufEmpty.
 *
 *  Sets the status of a developer. A developer is `active` by default. If you
 *  set a developer's status to `inactive`, the API keys assigned to the
 *  developer apps are no longer valid even though the API keys are set to
 *  `approved`. Inactive developers can still sign in to the developer portal
 *  and create apps; however, any new API keys generated during app creation
 *  won't work. To set the status of a developer, set the `action` query
 *  parameter to `active` or `inactive`, and the `Content-Type` header to
 *  `application/octet-stream`. If successful, the API call returns the
 *  following HTTP status code: `204 No Content`
 *
 *  @param name Required. Name of the developer. Use the following structure in
 *    your request: `organizations/{org}/developers/{developer_id}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersSetDeveloperStatus
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a subscription to an API product.
 *
 *  Method: apigee.organizations.developers.subscriptions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersSubscriptionsCreate : GTLRApigeeQuery

/**
 *  Required. Email address of the developer that is purchasing a subscription
 *  to the API product. Use the following structure in your request:
 *  `organizations/{org}/developers/{developer_email}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperSubscription.
 *
 *  Creates a subscription to an API product.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1DeveloperSubscription to
 *    include in the query.
 *  @param parent Required. Email address of the developer that is purchasing a
 *    subscription to the API product. Use the following structure in your
 *    request: `organizations/{org}/developers/{developer_email}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersSubscriptionsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1DeveloperSubscription *)object
                         parent:(NSString *)parent;

@end

/**
 *  Expires an API product subscription immediately.
 *
 *  Method: apigee.organizations.developers.subscriptions.expire
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersSubscriptionsExpire : GTLRApigeeQuery

/**
 *  Required. Name of the API product subscription. Use the following structure
 *  in your request:
 *  `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperSubscription.
 *
 *  Expires an API product subscription immediately.
 *
 *  @param object The @c
 *    GTLRApigee_GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest to
 *    include in the query.
 *  @param name Required. Name of the API product subscription. Use the
 *    following structure in your request:
 *    `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersSubscriptionsExpire
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1ExpireDeveloperSubscriptionRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets details for an API product subscription.
 *
 *  Method: apigee.organizations.developers.subscriptions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersSubscriptionsGet : GTLRApigeeQuery

/**
 *  Required. Name of the API product subscription. Use the following structure
 *  in your request:
 *  `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperSubscription.
 *
 *  Gets details for an API product subscription.
 *
 *  @param name Required. Name of the API product subscription. Use the
 *    following structure in your request:
 *    `organizations/{org}/developers/{developer_email}/subscriptions/{subscription}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersSubscriptionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all API product subscriptions for a developer.
 *
 *  Method: apigee.organizations.developers.subscriptions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersSubscriptionsList : GTLRApigeeQuery

/**
 *  Number of API product subscriptions to return in the API call. Use with
 *  `startKey` to provide more targeted filtering. Defaults to 100. The maximum
 *  limit is 1000.
 */
@property(nonatomic, assign) NSInteger count;

/**
 *  Required. Email address of the developer. Use the following structure in
 *  your request: `organizations/{org}/developers/{developer_email}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Name of the API product subscription from which to start displaying the list
 *  of subscriptions. If omitted, the list starts from the first item. For
 *  example, to view the API product subscriptions from 51-150, set the value of
 *  `startKey` to the name of the 51st subscription and set the value of `count`
 *  to 100.
 */
@property(nonatomic, copy, nullable) NSString *startKey;

/**
 *  Fetches a @c
 *  GTLRApigee_GoogleCloudApigeeV1ListDeveloperSubscriptionsResponse.
 *
 *  Lists all API product subscriptions for a developer.
 *
 *  @param parent Required. Email address of the developer. Use the following
 *    structure in your request:
 *    `organizations/{org}/developers/{developer_email}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersSubscriptionsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a developer. This API replaces the existing developer details with
 *  those specified in the request. Include or exclude any existing details that
 *  you want to retain or delete, respectively. The custom attribute limit is
 *  18. **Note**: OAuth access tokens and Key Management Service (KMS) entities
 *  (apps, developers, and API products) are cached for 180 seconds (current
 *  default). Any custom attributes associated with these entities are cached
 *  for at least 180 seconds after the entity is accessed at runtime. Therefore,
 *  an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an
 *  access token in less than 180 seconds.
 *
 *  Method: apigee.organizations.developers.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersUpdate : GTLRApigeeQuery

/**
 *  Required. Email address of the developer. Use the following structure in
 *  your request: `organizations/{org}/developers/{developer_email}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Developer.
 *
 *  Updates a developer. This API replaces the existing developer details with
 *  those specified in the request. Include or exclude any existing details that
 *  you want to retain or delete, respectively. The custom attribute limit is
 *  18. **Note**: OAuth access tokens and Key Management Service (KMS) entities
 *  (apps, developers, and API products) are cached for 180 seconds (current
 *  default). Any custom attributes associated with these entities are cached
 *  for at least 180 seconds after the entity is accessed at runtime. Therefore,
 *  an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an
 *  access token in less than 180 seconds.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Developer to include in
 *    the query.
 *  @param name Required. Email address of the developer. Use the following
 *    structure in your request:
 *    `organizations/{org}/developers/{developer_email}`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersUpdate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Developer *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the monetization configuration for the developer.
 *
 *  Method: apigee.organizations.developers.updateMonetizationConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsDevelopersUpdateMonetizationConfig : GTLRApigeeQuery

/**
 *  Required. Monetization configuration for the developer. Use the following
 *  structure in your request:
 *  `organizations/{org}/developers/{developer}/monetizationConfig`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeveloperMonetizationConfig.
 *
 *  Updates the monetization configuration for the developer.
 *
 *  @param object The @c
 *    GTLRApigee_GoogleCloudApigeeV1DeveloperMonetizationConfig to include in
 *    the query.
 *  @param name Required. Monetization configuration for the developer. Use the
 *    following structure in your request:
 *    `organizations/{org}/developers/{developer}/monetizationConfig`
 *
 *  @return GTLRApigeeQuery_OrganizationsDevelopersUpdateMonetizationConfig
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1DeveloperMonetizationConfig *)object
                           name:(NSString *)name;

@end

/**
 *  Creates an endpoint attachment. **Note:** Not supported for Apigee hybrid.
 *
 *  Method: apigee.organizations.endpointAttachments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEndpointAttachmentsCreate : GTLRApigeeQuery

/**
 *  ID to use for the endpoint attachment. ID must start with a lowercase letter
 *  followed by up to 31 lowercase letters, numbers, or hyphens, and cannot end
 *  with a hyphen. The minimum length is 2.
 */
@property(nonatomic, copy, nullable) NSString *endpointAttachmentId;

/** Required. Organization the endpoint attachment will be created in. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Creates an endpoint attachment. **Note:** Not supported for Apigee hybrid.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1EndpointAttachment to
 *    include in the query.
 *  @param parent Required. Organization the endpoint attachment will be created
 *    in.
 *
 *  @return GTLRApigeeQuery_OrganizationsEndpointAttachmentsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1EndpointAttachment *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an endpoint attachment.
 *
 *  Method: apigee.organizations.endpointAttachments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEndpointAttachmentsDelete : GTLRApigeeQuery

/**
 *  Required. Name of the endpoint attachment. Use the following structure in
 *  your request:
 *  `organizations/{org}/endpointAttachments/{endpoint_attachment}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Deletes an endpoint attachment.
 *
 *  @param name Required. Name of the endpoint attachment. Use the following
 *    structure in your request:
 *    `organizations/{org}/endpointAttachments/{endpoint_attachment}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEndpointAttachmentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the endpoint attachment.
 *
 *  Method: apigee.organizations.endpointAttachments.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEndpointAttachmentsGet : GTLRApigeeQuery

/**
 *  Required. Name of the endpoint attachment. Use the following structure in
 *  your request:
 *  `organizations/{org}/endpointAttachments/{endpoint_attachment}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1EndpointAttachment.
 *
 *  Gets the endpoint attachment.
 *
 *  @param name Required. Name of the endpoint attachment. Use the following
 *    structure in your request:
 *    `organizations/{org}/endpointAttachments/{endpoint_attachment}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEndpointAttachmentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the endpoint attachments in an organization.
 *
 *  Method: apigee.organizations.endpointAttachments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEndpointAttachmentsList : GTLRApigeeQuery

/**
 *  Optional. Maximum number of endpoint attachments to return. If unspecified,
 *  at most 25 attachments will be returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token, returned from a previous `ListEndpointAttachments`
 *  call, that you can use to retrieve the next page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Name of the organization for which to list endpoint attachments.
 *  Use the following structure in your request: `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListEndpointAttachmentsResponse.
 *
 *  Lists the endpoint attachments in an organization.
 *
 *  @param parent Required. Name of the organization for which to list endpoint
 *    attachments. Use the following structure in your request:
 *    `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEndpointAttachmentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a new attachment of an environment to an environment group.
 *
 *  Method: apigee.organizations.envgroups.attachments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvgroupsAttachmentsCreate : GTLRApigeeQuery

/**
 *  Required. EnvironmentGroup under which to create the attachment in the
 *  following format: `organizations/{org}/envgroups/{envgroup}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Creates a new attachment of an environment to an environment group.
 *
 *  @param object The @c
 *    GTLRApigee_GoogleCloudApigeeV1EnvironmentGroupAttachment to include in the
 *    query.
 *  @param parent Required. EnvironmentGroup under which to create the
 *    attachment in the following format:
 *    `organizations/{org}/envgroups/{envgroup}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvgroupsAttachmentsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1EnvironmentGroupAttachment *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an environment group attachment.
 *
 *  Method: apigee.organizations.envgroups.attachments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvgroupsAttachmentsDelete : GTLRApigeeQuery

/**
 *  Required. Name of the environment group attachment to delete in the
 *  following format:
 *  `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Deletes an environment group attachment.
 *
 *  @param name Required. Name of the environment group attachment to delete in
 *    the following format:
 *    `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvgroupsAttachmentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an environment group attachment.
 *
 *  Method: apigee.organizations.envgroups.attachments.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvgroupsAttachmentsGet : GTLRApigeeQuery

/**
 *  Required. Name of the environment group attachment in the following format:
 *  `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1EnvironmentGroupAttachment.
 *
 *  Gets an environment group attachment.
 *
 *  @param name Required. Name of the environment group attachment in the
 *    following format:
 *    `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvgroupsAttachmentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all attachments of an environment group.
 *
 *  Method: apigee.organizations.envgroups.attachments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvgroupsAttachmentsList : GTLRApigeeQuery

/**
 *  Maximum number of environment group attachments to return. The page size
 *  defaults to 25.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Page token, returned by a previous ListEnvironmentGroupAttachments call,
 *  that you can use to retrieve the next page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Name of the environment group in the following format:
 *  `organizations/{org}/envgroups/{envgroup}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRApigee_GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse.
 *
 *  Lists all attachments of an environment group.
 *
 *  @param parent Required. Name of the environment group in the following
 *    format: `organizations/{org}/envgroups/{envgroup}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvgroupsAttachmentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a new environment group.
 *
 *  Method: apigee.organizations.envgroups.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvgroupsCreate : GTLRApigeeQuery

/**
 *  ID of the environment group. Overrides any ID in the environment_group
 *  resource.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Name of the organization in which to create the environment group
 *  in the following format: `organizations/{org}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Creates a new environment group.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1EnvironmentGroup to
 *    include in the query.
 *  @param parent Required. Name of the organization in which to create the
 *    environment group in the following format: `organizations/{org}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvgroupsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1EnvironmentGroup *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an environment group.
 *
 *  Method: apigee.organizations.envgroups.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvgroupsDelete : GTLRApigeeQuery

/**
 *  Required. Name of the environment group in the following format:
 *  `organizations/{org}/envgroups/{envgroup}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Deletes an environment group.
 *
 *  @param name Required. Name of the environment group in the following format:
 *    `organizations/{org}/envgroups/{envgroup}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvgroupsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an environment group.
 *
 *  Method: apigee.organizations.envgroups.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvgroupsGet : GTLRApigeeQuery

/**
 *  Required. Name of the environment group in the following format:
 *  `organizations/{org}/envgroups/{envgroup}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1EnvironmentGroup.
 *
 *  Gets an environment group.
 *
 *  @param name Required. Name of the environment group in the following format:
 *    `organizations/{org}/envgroups/{envgroup}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvgroupsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all environment groups.
 *
 *  Method: apigee.organizations.envgroups.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvgroupsList : GTLRApigeeQuery

/**
 *  Maximum number of environment groups to return. The page size defaults to
 *  25.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Page token, returned from a previous ListEnvironmentGroups call, that you
 *  can use to retrieve the next page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Name of the organization for which to list environment groups in
 *  the following format: `organizations/{org}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListEnvironmentGroupsResponse.
 *
 *  Lists all environment groups.
 *
 *  @param parent Required. Name of the organization for which to list
 *    environment groups in the following format: `organizations/{org}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvgroupsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an environment group.
 *
 *  Method: apigee.organizations.envgroups.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvgroupsPatch : GTLRApigeeQuery

/**
 *  Required. Name of the environment group to update in the format:
 *  `organizations/{org}/envgroups/{envgroup}.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  List of fields to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Updates an environment group.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1EnvironmentGroup to
 *    include in the query.
 *  @param name Required. Name of the environment group to update in the format:
 *    `organizations/{org}/envgroups/{envgroup}.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvgroupsPatch
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1EnvironmentGroup *)object
                           name:(NSString *)name;

@end

/**
 *  Gets a list of metrics and dimensions that can be used to create analytics
 *  queries and reports. Each schema element contains the name of the field, its
 *  associated type, and a flag indicating whether it is a standard or custom
 *  field.
 *
 *  Method: apigee.organizations.environments.analytics.admin.getSchemav2
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsAnalyticsAdminGetSchemav2 : GTLRApigeeQuery

/**
 *  Flag that specifies whether the schema is be read from the database or
 *  cache. Set to `true` to read the schema from the database. Defaults to
 *  cache.
 */
@property(nonatomic, assign) BOOL disableCache;

/**
 *  Required. Path to the schema. Use the following structure in your request:
 *  `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Name of the dataset for which you want to retrieve the schema. For
 *  example: `fact` or `agg_cus1`
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Schema.
 *
 *  Gets a list of metrics and dimensions that can be used to create analytics
 *  queries and reports. Each schema element contains the name of the field, its
 *  associated type, and a flag indicating whether it is a standard or custom
 *  field.
 *
 *  @param name Required. Path to the schema. Use the following structure in
 *    your request:
 *    `organizations/{org}/environments/{env}/analytics/admin/schemav2`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsAnalyticsAdminGetSchemav2
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Submit a data export job to be processed in the background. If the request
 *  is successful, the API returns a 201 status, a URI that can be used to
 *  retrieve the status of the export job, and the `state` value of "enqueued".
 *
 *  Method: apigee.organizations.environments.analytics.exports.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsAnalyticsExportsCreate : GTLRApigeeQuery

/**
 *  Required. Names of the parent organization and environment. Must be of the
 *  form `organizations/{org}/environments/{env}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Export.
 *
 *  Submit a data export job to be processed in the background. If the request
 *  is successful, the API returns a 201 status, a URI that can be used to
 *  retrieve the status of the export job, and the `state` value of "enqueued".
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1ExportRequest to include
 *    in the query.
 *  @param parent Required. Names of the parent organization and environment.
 *    Must be of the form `organizations/{org}/environments/{env}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsAnalyticsExportsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1ExportRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets the details and status of an analytics export job. If the export job is
 *  still in progress, its `state` is set to "running". After the export job has
 *  completed successfully, its `state` is set to "completed". If the export job
 *  fails, its `state` is set to `failed`.
 *
 *  Method: apigee.organizations.environments.analytics.exports.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsAnalyticsExportsGet : GTLRApigeeQuery

/** Required. Resource name of the export to get. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Export.
 *
 *  Gets the details and status of an analytics export job. If the export job is
 *  still in progress, its `state` is set to "running". After the export job has
 *  completed successfully, its `state` is set to "completed". If the export job
 *  fails, its `state` is set to `failed`.
 *
 *  @param name Required. Resource name of the export to get.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsAnalyticsExportsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the details and status of all analytics export jobs belonging to the
 *  parent organization and environment.
 *
 *  Method: apigee.organizations.environments.analytics.exports.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsAnalyticsExportsList : GTLRApigeeQuery

/**
 *  Required. Names of the parent organization and environment. Must be of the
 *  form `organizations/{org}/environments/{env}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListExportsResponse.
 *
 *  Lists the details and status of all analytics export jobs belonging to the
 *  parent organization and environment.
 *
 *  @param parent Required. Names of the parent organization and environment.
 *    Must be of the form `organizations/{org}/environments/{env}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsAnalyticsExportsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists all deployments of an API proxy in an environment.
 *
 *  Method: apigee.organizations.environments.apis.deployments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsApisDeploymentsList : GTLRApigeeQuery

/**
 *  Required. Name representing an API proxy in an environment in the following
 *  format: `organizations/{org}/environments/{env}/apis/{api}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListDeploymentsResponse.
 *
 *  Lists all deployments of an API proxy in an environment.
 *
 *  @param parent Required. Name representing an API proxy in an environment in
 *    the following format: `organizations/{org}/environments/{env}/apis/{api}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsApisDeploymentsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a debug session for a deployed API Proxy revision.
 *
 *  Method: apigee.organizations.environments.apis.revisions.debugsessions.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDebugsessionsCreate : GTLRApigeeQuery

/**
 *  Required. The resource name of the API Proxy revision deployment for which
 *  to create the DebugSession. Must be of the form
 *  `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. The time in seconds after which this DebugSession should end. A
 *  timeout specified in DebugSession will overwrite this value.
 */
@property(nonatomic, assign) long long timeout;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DebugSession.
 *
 *  Creates a debug session for a deployed API Proxy revision.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1DebugSession to include
 *    in the query.
 *  @param parent Required. The resource name of the API Proxy revision
 *    deployment for which to create the DebugSession. Must be of the form
 *    `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDebugsessionsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1DebugSession *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets the debug data from a transaction.
 *
 *  Method: apigee.organizations.environments.apis.revisions.debugsessions.data.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDebugsessionsDataGet : GTLRApigeeQuery

/**
 *  Required. The name of the debug session transaction. Must be of the form:
 *  `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/data/{transaction}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DebugSessionTransaction.
 *
 *  Gets the debug data from a transaction.
 *
 *  @param name Required. The name of the debug session transaction. Must be of
 *    the form:
 *    `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/data/{transaction}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDebugsessionsDataGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes the data from a debug session. This does not cancel the debug
 *  session or prevent further data from being collected if the session is still
 *  active in runtime pods.
 *
 *  Method: apigee.organizations.environments.apis.revisions.debugsessions.deleteData
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDebugsessionsDeleteData : GTLRApigeeQuery

/**
 *  Required. The name of the debug session to delete. Must be of the form:
 *  `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleProtobufEmpty.
 *
 *  Deletes the data from a debug session. This does not cancel the debug
 *  session or prevent further data from being collected if the session is still
 *  active in runtime pods.
 *
 *  @param name Required. The name of the debug session to delete. Must be of
 *    the form:
 *    `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDebugsessionsDeleteData
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieves a debug session.
 *
 *  Method: apigee.organizations.environments.apis.revisions.debugsessions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDebugsessionsGet : GTLRApigeeQuery

/**
 *  Required. The name of the debug session to retrieve. Must be of the form:
 *  `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DebugSession.
 *
 *  Retrieves a debug session.
 *
 *  @param name Required. The name of the debug session to retrieve. Must be of
 *    the form:
 *    `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDebugsessionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists debug sessions that are currently active in the given API Proxy
 *  revision.
 *
 *  Method: apigee.organizations.environments.apis.revisions.debugsessions.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDebugsessionsList : GTLRApigeeQuery

/**
 *  Maximum number of debug sessions to return. The page size defaults to 25.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Page token, returned from a previous ListDebugSessions call, that you can
 *  use to retrieve the next page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the API Proxy revision deployment for which to list
 *  debug sessions. Must be of the form:
 *  `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListDebugSessionsResponse.
 *
 *  Lists debug sessions that are currently active in the given API Proxy
 *  revision.
 *
 *  @param parent Required. The name of the API Proxy revision deployment for
 *    which to list debug sessions. Must be of the form:
 *    `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDebugsessionsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deploys a revision of an API proxy. If another revision of the same API
 *  proxy revision is currently deployed, set the `override` parameter to `true`
 *  to have this revision replace the currently deployed revision. You cannot
 *  invoke an API proxy until it has been deployed to an environment. After you
 *  deploy an API proxy revision, you cannot edit it. To edit the API proxy, you
 *  must create and deploy a new revision. For a request path
 *  `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`,
 *  two permissions are required: * `apigee.deployments.create` on the resource
 *  `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on
 *  the resource `organizations/{org}/apis/{api}/revisions/{rev}`
 *
 *  Method: apigee.organizations.environments.apis.revisions.deploy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDeploy : GTLRApigeeQuery

/**
 *  Required. Name of the API proxy revision deployment in the following format:
 *  `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Flag that specifies whether the new deployment replaces other deployed
 *  revisions of the API proxy in the environment. Set `override` to `true` to
 *  replace other deployed revisions. By default, `override` is `false` and the
 *  deployment is rejected if other revisions of the API proxy are deployed in
 *  the environment.
 */
@property(nonatomic, assign) BOOL override;

/**
 *  Flag that specifies whether to enable sequenced rollout. If set to `true`,
 *  the routing rules for this deployment and the environment changes to add the
 *  deployment will be rolled out in a safe order. This reduces the risk of
 *  downtime that could be caused by changing the environment group's routing
 *  before the new destination for the affected traffic is ready to receive it.
 *  This should only be necessary if the new deployment will be capturing
 *  traffic from another environment under a shared environment group or if
 *  traffic will be rerouted to a different environment due to a base path
 *  removal. The [GenerateDeployChangeReport API](GenerateDeployChangeReport)
 *  may be used to examine routing changes before issuing the deployment
 *  request, and its response will indicate if a sequenced rollout is
 *  recommended for the deployment.
 */
@property(nonatomic, assign) BOOL sequencedRollout;

/**
 *  Google Cloud IAM service account. The service account represents the
 *  identity of the deployed proxy, and determines what permissions it has. The
 *  format must be `{ACCOUNT_ID}\@{PROJECT}.iam.gserviceaccount.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Deployment.
 *
 *  Deploys a revision of an API proxy. If another revision of the same API
 *  proxy revision is currently deployed, set the `override` parameter to `true`
 *  to have this revision replace the currently deployed revision. You cannot
 *  invoke an API proxy until it has been deployed to an environment. After you
 *  deploy an API proxy revision, you cannot edit it. To edit the API proxy, you
 *  must create and deploy a new revision. For a request path
 *  `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`,
 *  two permissions are required: * `apigee.deployments.create` on the resource
 *  `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on
 *  the resource `organizations/{org}/apis/{api}/revisions/{rev}`
 *
 *  @param name Required. Name of the API proxy revision deployment in the
 *    following format:
 *    `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDeploy
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Generates a report for a dry run analysis of a DeployApiProxy request
 *  without committing the deployment. In addition to the standard validations
 *  performed when adding deployments, additional analysis will be done to
 *  detect possible traffic routing changes that would result from this
 *  deployment being created. Any potential routing conflicts or unsafe changes
 *  will be reported in the response. This routing analysis is not performed for
 *  a non-dry-run DeployApiProxy request. For a request path
 *  `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateDeployChangeReport`,
 *  two permissions are required: * `apigee.deployments.create` on the resource
 *  `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on
 *  the resource `organizations/{org}/apis/{api}/revisions/{rev}`
 *
 *  Method: apigee.organizations.environments.apis.revisions.deployments.generateDeployChangeReport
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDeploymentsGenerateDeployChangeReport : GTLRApigeeQuery

/**
 *  Name of the API proxy revision deployment in the following format:
 *  `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Flag that specifies whether to force the deployment of the new revision over
 *  the currently deployed revision by overriding conflict checks.
 */
@property(nonatomic, assign) BOOL override;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeploymentChangeReport.
 *
 *  Generates a report for a dry run analysis of a DeployApiProxy request
 *  without committing the deployment. In addition to the standard validations
 *  performed when adding deployments, additional analysis will be done to
 *  detect possible traffic routing changes that would result from this
 *  deployment being created. Any potential routing conflicts or unsafe changes
 *  will be reported in the response. This routing analysis is not performed for
 *  a non-dry-run DeployApiProxy request. For a request path
 *  `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateDeployChangeReport`,
 *  two permissions are required: * `apigee.deployments.create` on the resource
 *  `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on
 *  the resource `organizations/{org}/apis/{api}/revisions/{rev}`
 *
 *  @param name Name of the API proxy revision deployment in the following
 *    format:
 *    `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDeploymentsGenerateDeployChangeReport
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Generates a report for a dry run analysis of an UndeployApiProxy request
 *  without committing the undeploy. In addition to the standard validations
 *  performed when removing deployments, additional analysis will be done to
 *  detect possible traffic routing changes that would result from this
 *  deployment being removed. Any potential routing conflicts or unsafe changes
 *  will be reported in the response. This routing analysis is not performed for
 *  a non-dry-run UndeployApiProxy request. For a request path
 *  `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateUndeployChangeReport`,
 *  two permissions are required: * `apigee.deployments.delete` on the resource
 *  `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy`
 *  on the resource `organizations/{org}/apis/{api}/revisions/{rev}`
 *
 *  Method: apigee.organizations.environments.apis.revisions.deployments.generateUndeployChangeReport
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDeploymentsGenerateUndeployChangeReport : GTLRApigeeQuery

/**
 *  Name of the API proxy revision deployment in the following format:
 *  `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeploymentChangeReport.
 *
 *  Generates a report for a dry run analysis of an UndeployApiProxy request
 *  without committing the undeploy. In addition to the standard validations
 *  performed when removing deployments, additional analysis will be done to
 *  detect possible traffic routing changes that would result from this
 *  deployment being removed. Any potential routing conflicts or unsafe changes
 *  will be reported in the response. This routing analysis is not performed for
 *  a non-dry-run UndeployApiProxy request. For a request path
 *  `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateUndeployChangeReport`,
 *  two permissions are required: * `apigee.deployments.delete` on the resource
 *  `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy`
 *  on the resource `organizations/{org}/apis/{api}/revisions/{rev}`
 *
 *  @param name Name of the API proxy revision deployment in the following
 *    format:
 *    `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsDeploymentsGenerateUndeployChangeReport
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the deployment of an API proxy revision and actual state reported by
 *  runtime pods.
 *
 *  Method: apigee.organizations.environments.apis.revisions.getDeployments
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsGetDeployments : GTLRApigeeQuery

/**
 *  Required. Name representing an API proxy revision in an environment in the
 *  following format:
 *  `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Deployment.
 *
 *  Gets the deployment of an API proxy revision and actual state reported by
 *  runtime pods.
 *
 *  @param name Required. Name representing an API proxy revision in an
 *    environment in the following format:
 *    `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsGetDeployments
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Undeploys an API proxy revision from an environment. For a request path
 *  `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`,
 *  two permissions are required: * `apigee.deployments.delete` on the resource
 *  `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy`
 *  on the resource `organizations/{org}/apis/{api}/revisions/{rev}`
 *
 *  Method: apigee.organizations.environments.apis.revisions.undeploy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsUndeploy : GTLRApigeeQuery

/**
 *  Required. Name of the API proxy revision deployment in the following format:
 *  `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Flag that specifies whether to enable sequenced rollout. If set to `true`,
 *  the environment group routing rules corresponding to this deployment will be
 *  removed before removing the deployment from the runtime. This is likely to
 *  be a rare use case; it is only needed when the intended effect of
 *  undeploying this proxy is to cause the traffic it currently handles to be
 *  rerouted to some other existing proxy in the environment group. The
 *  [GenerateUndeployChangeReport API](GenerateUndeployChangeReport) may be used
 *  to examine routing changes before issuing the undeployment request, and its
 *  response will indicate if a sequenced rollout is recommended for the
 *  undeployment.
 */
@property(nonatomic, assign) BOOL sequencedRollout;

/**
 *  Fetches a @c GTLRApigee_GoogleProtobufEmpty.
 *
 *  Undeploys an API proxy revision from an environment. For a request path
 *  `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`,
 *  two permissions are required: * `apigee.deployments.delete` on the resource
 *  `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy`
 *  on the resource `organizations/{org}/apis/{api}/revisions/{rev}`
 *
 *  @param name Required. Name of the API proxy revision deployment in the
 *    following format:
 *    `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsApisRevisionsUndeploy
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new ArchiveDeployment.
 *
 *  Method: apigee.organizations.environments.archiveDeployments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsArchiveDeploymentsCreate : GTLRApigeeQuery

/** Required. The Environment this Archive Deployment will be created in. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Creates a new ArchiveDeployment.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1ArchiveDeployment to
 *    include in the query.
 *  @param parent Required. The Environment this Archive Deployment will be
 *    created in.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsArchiveDeploymentsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1ArchiveDeployment *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an archive deployment.
 *
 *  Method: apigee.organizations.environments.archiveDeployments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsArchiveDeploymentsDelete : GTLRApigeeQuery

/**
 *  Required. Name of the Archive Deployment in the following format:
 *  `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleProtobufEmpty.
 *
 *  Deletes an archive deployment.
 *
 *  @param name Required. Name of the Archive Deployment in the following
 *    format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsArchiveDeploymentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Generates a signed URL for downloading the original zip file used to create
 *  an Archive Deployment. The URL is only valid for a limited period and should
 *  be used within minutes after generation. Each call returns a new upload URL.
 *
 *  Method: apigee.organizations.environments.archiveDeployments.generateDownloadUrl
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsArchiveDeploymentsGenerateDownloadUrl : GTLRApigeeQuery

/** Required. The name of the Archive Deployment you want to download. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1GenerateDownloadUrlResponse.
 *
 *  Generates a signed URL for downloading the original zip file used to create
 *  an Archive Deployment. The URL is only valid for a limited period and should
 *  be used within minutes after generation. Each call returns a new upload URL.
 *
 *  @param object The @c
 *    GTLRApigee_GoogleCloudApigeeV1GenerateDownloadUrlRequest to include in the
 *    query.
 *  @param name Required. The name of the Archive Deployment you want to
 *    download.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsArchiveDeploymentsGenerateDownloadUrl
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1GenerateDownloadUrlRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Generates a signed URL for uploading an Archive zip file to Google Cloud
 *  Storage. Once the upload is complete, the signed URL should be passed to
 *  CreateArchiveDeployment. When uploading to the generated signed URL, please
 *  follow these restrictions: * Source file type should be a zip file. * Source
 *  file size should not exceed 1GB limit. * No credentials should be attached -
 *  the signed URLs provide access to the target bucket using internal service
 *  identity; if credentials were attached, the identity from the credentials
 *  would be used, but that identity does not have permissions to upload files
 *  to the URL. When making a HTTP PUT request, these two headers need to be
 *  specified: * `content-type: application/zip` * `x-goog-content-length-range:
 *  0,1073741824` And this header SHOULD NOT be specified: * `Authorization:
 *  Bearer YOUR_TOKEN`
 *
 *  Method: apigee.organizations.environments.archiveDeployments.generateUploadUrl
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsArchiveDeploymentsGenerateUploadUrl : GTLRApigeeQuery

/** Required. The organization and environment to upload to. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1GenerateUploadUrlResponse.
 *
 *  Generates a signed URL for uploading an Archive zip file to Google Cloud
 *  Storage. Once the upload is complete, the signed URL should be passed to
 *  CreateArchiveDeployment. When uploading to the generated signed URL, please
 *  follow these restrictions: * Source file type should be a zip file. * Source
 *  file size should not exceed 1GB limit. * No credentials should be attached -
 *  the signed URLs provide access to the target bucket using internal service
 *  identity; if credentials were attached, the identity from the credentials
 *  would be used, but that identity does not have permissions to upload files
 *  to the URL. When making a HTTP PUT request, these two headers need to be
 *  specified: * `content-type: application/zip` * `x-goog-content-length-range:
 *  0,1073741824` And this header SHOULD NOT be specified: * `Authorization:
 *  Bearer YOUR_TOKEN`
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1GenerateUploadUrlRequest
 *    to include in the query.
 *  @param parent Required. The organization and environment to upload to.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsArchiveDeploymentsGenerateUploadUrl
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1GenerateUploadUrlRequest *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets the specified ArchiveDeployment.
 *
 *  Method: apigee.organizations.environments.archiveDeployments.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsArchiveDeploymentsGet : GTLRApigeeQuery

/**
 *  Required. Name of the Archive Deployment in the following format:
 *  `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ArchiveDeployment.
 *
 *  Gets the specified ArchiveDeployment.
 *
 *  @param name Required. Name of the Archive Deployment in the following
 *    format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsArchiveDeploymentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the ArchiveDeployments in the specified Environment.
 *
 *  Method: apigee.organizations.environments.archiveDeployments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsArchiveDeploymentsList : GTLRApigeeQuery

/**
 *  Optional. An optional query used to return a subset of Archive Deployments
 *  using the semantics defined in https://google.aip.dev/160.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Maximum number of Archive Deployments to return. If unspecified,
 *  at most 25 deployments will be returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token, returned from a previous ListArchiveDeployments call,
 *  that you can use to retrieve the next page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Name of the Environment for which to list Archive Deployments in
 *  the format: `organizations/{org}/environments/{env}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListArchiveDeploymentsResponse.
 *
 *  Lists the ArchiveDeployments in the specified Environment.
 *
 *  @param parent Required. Name of the Environment for which to list Archive
 *    Deployments in the format: `organizations/{org}/environments/{env}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsArchiveDeploymentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an existing ArchiveDeployment. Labels can modified but most of the
 *  other fields are not modifiable.
 *
 *  Method: apigee.organizations.environments.archiveDeployments.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsArchiveDeploymentsPatch : GTLRApigeeQuery

/**
 *  Name of the Archive Deployment in the following format:
 *  `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The list of fields to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ArchiveDeployment.
 *
 *  Updates an existing ArchiveDeployment. Labels can modified but most of the
 *  other fields are not modifiable.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1ArchiveDeployment to
 *    include in the query.
 *  @param name Name of the Archive Deployment in the following format:
 *    `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsArchiveDeploymentsPatch
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1ArchiveDeployment *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a cache.
 *
 *  Method: apigee.organizations.environments.caches.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsCachesDelete : GTLRApigeeQuery

/**
 *  Required. Cache resource name of the form:
 *  `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleProtobufEmpty.
 *
 *  Deletes a cache.
 *
 *  @param name Required. Cache resource name of the form:
 *    `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsCachesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates an environment in an organization.
 *
 *  Method: apigee.organizations.environments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsCreate : GTLRApigeeQuery

/**
 *  Optional. Name of the environment. Alternatively, the name may be specified
 *  in the request body in the name field.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Name of the organization in which the environment will be created.
 *  Use the following structure in your request: `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Creates an environment in an organization.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Environment to include in
 *    the query.
 *  @param parent Required. Name of the organization in which the environment
 *    will be created. Use the following structure in your request:
 *    `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Environment *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an environment from an organization. **Warning: You must delete all
 *  key value maps and key value entries before you delete an environment.**
 *  Otherwise, if you re-create the environment the key value map entry
 *  operations will encounter encryption/decryption discrepancies.
 *
 *  Method: apigee.organizations.environments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsDelete : GTLRApigeeQuery

/**
 *  Required. Name of the environment. Use the following structure in your
 *  request: `organizations/{org}/environments/{env}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Deletes an environment from an organization. **Warning: You must delete all
 *  key value maps and key value entries before you delete an environment.**
 *  Otherwise, if you re-create the environment the key value map entry
 *  operations will encounter encryption/decryption discrepancies.
 *
 *  @param name Required. Name of the environment. Use the following structure
 *    in your request: `organizations/{org}/environments/{env}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all deployments of API proxies or shared flows in an environment.
 *
 *  Method: apigee.organizations.environments.deployments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsDeploymentsList : GTLRApigeeQuery

/**
 *  Required. Name of the environment for which to return deployment information
 *  in the following format: `organizations/{org}/environments/{env}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. Flag that specifies whether to return shared flow or API proxy
 *  deployments. Set to `true` to return shared flow deployments; set to `false`
 *  to return API proxy deployments. Defaults to `false`.
 */
@property(nonatomic, assign) BOOL sharedFlows;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListDeploymentsResponse.
 *
 *  Lists all deployments of API proxies or shared flows in an environment.
 *
 *  @param parent Required. Name of the environment for which to return
 *    deployment information in the following format:
 *    `organizations/{org}/environments/{env}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsDeploymentsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Attaches a shared flow to a flow hook.
 *
 *  Method: apigee.organizations.environments.flowhooks.attachSharedFlowToFlowHook
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsFlowhooksAttachSharedFlowToFlowHook : GTLRApigeeQuery

/**
 *  Required. Name of the flow hook to which the shared flow should be attached
 *  in the following format:
 *  `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1FlowHook.
 *
 *  Attaches a shared flow to a flow hook.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1FlowHook to include in
 *    the query.
 *  @param name Required. Name of the flow hook to which the shared flow should
 *    be attached in the following format:
 *    `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsFlowhooksAttachSharedFlowToFlowHook
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1FlowHook *)object
                           name:(NSString *)name;

@end

/**
 *  Detaches a shared flow from a flow hook.
 *
 *  Method: apigee.organizations.environments.flowhooks.detachSharedFlowFromFlowHook
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsFlowhooksDetachSharedFlowFromFlowHook : GTLRApigeeQuery

/**
 *  Required. Name of the flow hook to detach in the following format:
 *  `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1FlowHook.
 *
 *  Detaches a shared flow from a flow hook.
 *
 *  @param name Required. Name of the flow hook to detach in the following
 *    format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsFlowhooksDetachSharedFlowFromFlowHook
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the name of the shared flow attached to the specified flow hook. If
 *  there's no shared flow attached to the flow hook, the API does not return an
 *  error; it simply does not return a name in the response.
 *
 *  Method: apigee.organizations.environments.flowhooks.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsFlowhooksGet : GTLRApigeeQuery

/**
 *  Required. Name of the flow hook in the following format:
 *  `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1FlowHook.
 *
 *  Returns the name of the shared flow attached to the specified flow hook. If
 *  there's no shared flow attached to the flow hook, the API does not return an
 *  error; it simply does not return a name in the response.
 *
 *  @param name Required. Name of the flow hook in the following format:
 *    `organizations/{org}/environments/{env}/flowhooks/{flowhook}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsFlowhooksGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets environment details.
 *
 *  Method: apigee.organizations.environments.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsGet : GTLRApigeeQuery

/**
 *  Required. Name of the environment. Use the following structure in your
 *  request: `organizations/{org}/environments/{env}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Environment.
 *
 *  Gets environment details.
 *
 *  @param name Required. Name of the environment. Use the following structure
 *    in your request: `organizations/{org}/environments/{env}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the debug mask singleton resource for an environment.
 *
 *  Method: apigee.organizations.environments.getDebugmask
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsGetDebugmask : GTLRApigeeQuery

/**
 *  Required. Name of the debug mask. Use the following structure in your
 *  request: `organizations/{org}/environments/{env}/debugmask`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DebugMask.
 *
 *  Gets the debug mask singleton resource for an environment.
 *
 *  @param name Required. Name of the debug mask. Use the following structure in
 *    your request: `organizations/{org}/environments/{env}/debugmask`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsGetDebugmask
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the deployed configuration for an environment.
 *
 *  Method: apigee.organizations.environments.getDeployedConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsGetDeployedConfig : GTLRApigeeQuery

/**
 *  Required. Name of the environment deployed configuration resource. Use the
 *  following structure in your request:
 *  `organizations/{org}/environments/{env}/deployedConfig`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1EnvironmentConfig.
 *
 *  Gets the deployed configuration for an environment.
 *
 *  @param name Required. Name of the environment deployed configuration
 *    resource. Use the following structure in your request:
 *    `organizations/{org}/environments/{env}/deployedConfig`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsGetDeployedConfig
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the IAM policy on an environment. For more information, see [Manage
 *  users, roles, and permissions using the
 *  API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles).
 *  You must have the `apigee.environments.getIamPolicy` permission to call this
 *  API.
 *
 *  Method: apigee.organizations.environments.getIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsGetIamPolicy : GTLRApigeeQuery

/**
 *  Optional. The maximum policy version that will be used to format the policy.
 *  Valid values are 0, 1, and 3. Requests specifying an invalid value will be
 *  rejected. Requests for policies with any conditional role bindings must
 *  specify version 3. Policies with no conditional role bindings may specify
 *  any valid value or leave the field unset. The policy in the response might
 *  use the policy version that you specified, or it might use a lower policy
 *  version. For example, if you specify version 3, but the policy has no
 *  conditional role bindings, the response uses version 1. To learn which
 *  resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, assign) NSInteger optionsRequestedPolicyVersion;

/**
 *  REQUIRED: The resource for which the policy is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigee_GoogleIamV1Policy.
 *
 *  Gets the IAM policy on an environment. For more information, see [Manage
 *  users, roles, and permissions using the
 *  API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles).
 *  You must have the `apigee.environments.getIamPolicy` permission to call this
 *  API.
 *
 *  @param resource REQUIRED: The resource for which the policy is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsGetIamPolicy
 */
+ (instancetype)queryWithResource:(NSString *)resource;

@end

/**
 *  Get distributed trace configuration in an environment.
 *
 *  Method: apigee.organizations.environments.getTraceConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsGetTraceConfig : GTLRApigeeQuery

/**
 *  Required. Name of the trace configuration. Use the following structure in
 *  your request: "organizations/ * /environments/ * /traceConfig".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1TraceConfig.
 *
 *  Get distributed trace configuration in an environment.
 *
 *  @param name Required. Name of the trace configuration. Use the following
 *    structure in your request: "organizations/ * /environments/ *
 *    /traceConfig".
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsGetTraceConfig
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates an alias from a key/certificate pair. The structure of the request
 *  is controlled by the `format` query parameter: - `keycertfile` - Separate
 *  PEM-encoded key and certificate files are uploaded. Set `Content-Type:
 *  multipart/form-data` and include the `keyFile`, `certFile`, and `password`
 *  (if keys are encrypted) fields in the request body. If uploading to a
 *  truststore, omit `keyFile`. - `pkcs12` - A PKCS12 file is uploaded. Set
 *  `Content-Type: multipart/form-data`, provide the file in the `file` field,
 *  and include the `password` field if the file is encrypted in the request
 *  body. - `selfsignedcert` - A new private key and certificate are generated.
 *  Set `Content-Type: application/json` and include CertificateGenerationSpec
 *  in the request body.
 *
 *  Method: apigee.organizations.environments.keystores.aliases.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresAliasesCreate : GTLRApigeeQuery

/**
 *  DEPRECATED: For improved security, specify the password in the request body
 *  instead of using the query parameter. To specify the password in the request
 *  body, set `Content-type: multipart/form-data` part with name `password`.
 *  Password for the private key file, if required.
 */
@property(nonatomic, copy, nullable) NSString *xPassword;

/**
 *  Alias for the key/certificate pair. Values must match the regular expression
 *  `[\\w\\s-.]{1,255}`. This must be provided for all formats except
 *  `selfsignedcert`; self-signed certs may specify the alias in either this
 *  parameter or the JSON body.
 */
@property(nonatomic, copy, nullable) NSString *alias;

/**
 *  Required. Format of the data. Valid values include: `selfsignedcert`,
 *  `keycertfile`, or `pkcs12`
 */
@property(nonatomic, copy, nullable) NSString *format;

/**
 *  Flag that specifies whether to ignore expiry validation. If set to `true`,
 *  no expiry validation will be performed.
 */
@property(nonatomic, assign) BOOL ignoreExpiryValidation;

/**
 *  Flag that specifies whether to ignore newline validation. If set to `true`,
 *  no error is thrown when the file contains a certificate chain with no
 *  newline between each certificate. Defaults to `false`.
 */
@property(nonatomic, assign) BOOL ignoreNewlineValidation;

/**
 *  Required. Name of the keystore. Use the following format in your request:
 *  `organizations/{org}/environments/{env}/keystores/{keystore}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Alias.
 *
 *  Creates an alias from a key/certificate pair. The structure of the request
 *  is controlled by the `format` query parameter: - `keycertfile` - Separate
 *  PEM-encoded key and certificate files are uploaded. Set `Content-Type:
 *  multipart/form-data` and include the `keyFile`, `certFile`, and `password`
 *  (if keys are encrypted) fields in the request body. If uploading to a
 *  truststore, omit `keyFile`. - `pkcs12` - A PKCS12 file is uploaded. Set
 *  `Content-Type: multipart/form-data`, provide the file in the `file` field,
 *  and include the `password` field if the file is encrypted in the request
 *  body. - `selfsignedcert` - A new private key and certificate are generated.
 *  Set `Content-Type: application/json` and include CertificateGenerationSpec
 *  in the request body.
 *
 *  @param object The @c GTLRApigee_GoogleApiHttpBody to include in the query.
 *  @param parent Required. Name of the keystore. Use the following format in
 *    your request:
 *    `organizations/{org}/environments/{env}/keystores/{keystore}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresAliasesCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleApiHttpBody *)object
                         parent:(NSString *)parent;

@end

/**
 *  Generates a PKCS #10 Certificate Signing Request for the private key in an
 *  alias.
 *
 *  Method: apigee.organizations.environments.keystores.aliases.csr
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresAliasesCsr : GTLRApigeeQuery

/**
 *  Required. Name of the alias. Use the following format in your request:
 *  `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleApiHttpBody.
 *
 *  Generates a PKCS #10 Certificate Signing Request for the private key in an
 *  alias.
 *
 *  @param name Required. Name of the alias. Use the following format in your
 *    request:
 *    `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresAliasesCsr
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Deletes an alias.
 *
 *  Method: apigee.organizations.environments.keystores.aliases.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresAliasesDelete : GTLRApigeeQuery

/**
 *  Required. Name of the alias. Use the following format in your request:
 *  `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Alias.
 *
 *  Deletes an alias.
 *
 *  @param name Required. Name of the alias. Use the following format in your
 *    request:
 *    `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresAliasesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an alias.
 *
 *  Method: apigee.organizations.environments.keystores.aliases.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresAliasesGet : GTLRApigeeQuery

/**
 *  Required. Name of the alias. Use the following format in your request:
 *  `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Alias.
 *
 *  Gets an alias.
 *
 *  @param name Required. Name of the alias. Use the following format in your
 *    request:
 *    `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresAliasesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the certificate from an alias in PEM-encoded form.
 *
 *  Method: apigee.organizations.environments.keystores.aliases.getCertificate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresAliasesGetCertificate : GTLRApigeeQuery

/**
 *  Required. Name of the alias. Use the following format in your request:
 *  `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleApiHttpBody.
 *
 *  Gets the certificate from an alias in PEM-encoded form.
 *
 *  @param name Required. Name of the alias. Use the following format in your
 *    request:
 *    `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresAliasesGetCertificate
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the certificate in an alias.
 *
 *  Method: apigee.organizations.environments.keystores.aliases.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresAliasesUpdate : GTLRApigeeQuery

/**
 *  Required. Flag that specifies whether to ignore expiry validation. If set to
 *  `true`, no expiry validation will be performed.
 */
@property(nonatomic, assign) BOOL ignoreExpiryValidation;

/**
 *  Flag that specifies whether to ignore newline validation. If set to `true`,
 *  no error is thrown when the file contains a certificate chain with no
 *  newline between each certificate. Defaults to `false`.
 */
@property(nonatomic, assign) BOOL ignoreNewlineValidation;

/**
 *  Required. Name of the alias. Use the following format in your request:
 *  `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Alias.
 *
 *  Updates the certificate in an alias.
 *
 *  @param object The @c GTLRApigee_GoogleApiHttpBody to include in the query.
 *  @param name Required. Name of the alias. Use the following format in your
 *    request:
 *    `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresAliasesUpdate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleApiHttpBody *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a keystore or truststore. - Keystore: Contains certificates and
 *  their associated keys. - Truststore: Contains trusted certificates used to
 *  validate a server's certificate. These certificates are typically
 *  self-signed certificates or certificates that are not signed by a trusted
 *  CA.
 *
 *  Method: apigee.organizations.environments.keystores.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresCreate : GTLRApigeeQuery

/** Optional. Name of the keystore. Overrides the value in Keystore. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Name of the environment in which to create the keystore. Use the
 *  following format in your request: `organizations/{org}/environments/{env}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Keystore.
 *
 *  Creates a keystore or truststore. - Keystore: Contains certificates and
 *  their associated keys. - Truststore: Contains trusted certificates used to
 *  validate a server's certificate. These certificates are typically
 *  self-signed certificates or certificates that are not signed by a trusted
 *  CA.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Keystore to include in
 *    the query.
 *  @param parent Required. Name of the environment in which to create the
 *    keystore. Use the following format in your request:
 *    `organizations/{org}/environments/{env}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Keystore *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a keystore or truststore.
 *
 *  Method: apigee.organizations.environments.keystores.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresDelete : GTLRApigeeQuery

/**
 *  Required. Name of the keystore. Use the following format in your request:
 *  `organizations/{org}/environments/{env}/keystores/{keystore}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Keystore.
 *
 *  Deletes a keystore or truststore.
 *
 *  @param name Required. Name of the keystore. Use the following format in your
 *    request: `organizations/{org}/environments/{env}/keystores/{keystore}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a keystore or truststore.
 *
 *  Method: apigee.organizations.environments.keystores.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresGet : GTLRApigeeQuery

/**
 *  Required. Name of the keystore. Use the following format in your request:
 *  `organizations/{org}/environments/{env}/keystores/{keystore}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Keystore.
 *
 *  Gets a keystore or truststore.
 *
 *  @param name Required. Name of the keystore. Use the following format in your
 *    request: `organizations/{org}/environments/{env}/keystores/{keystore}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsKeystoresGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a key value map in an environment.
 *
 *  Method: apigee.organizations.environments.keyvaluemaps.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsKeyvaluemapsCreate : GTLRApigeeQuery

/**
 *  Required. Name of the environment in which to create the key value map. Use
 *  the following structure in your request:
 *  `organizations/{org}/environments/{env}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1KeyValueMap.
 *
 *  Creates a key value map in an environment.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1KeyValueMap to include in
 *    the query.
 *  @param parent Required. Name of the environment in which to create the key
 *    value map. Use the following structure in your request:
 *    `organizations/{org}/environments/{env}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsKeyvaluemapsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1KeyValueMap *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a key value map from an environment.
 *
 *  Method: apigee.organizations.environments.keyvaluemaps.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsKeyvaluemapsDelete : GTLRApigeeQuery

/**
 *  Required. Name of the key value map. Use the following structure in your
 *  request: `organizations/{org}/environments/{env}/keyvaluemaps/{keyvaluemap}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1KeyValueMap.
 *
 *  Deletes a key value map from an environment.
 *
 *  @param name Required. Name of the key value map. Use the following structure
 *    in your request:
 *    `organizations/{org}/environments/{env}/keyvaluemaps/{keyvaluemap}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsKeyvaluemapsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates key value entries in a key value map scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  Method: apigee.organizations.environments.keyvaluemaps.entries.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsKeyvaluemapsEntriesCreate : GTLRApigeeQuery

/**
 *  Required. Scope as indicated by the URI in which to create the key value map
 *  entry. Use **one** of the following structures in your request: *
 *  `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
 *  `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
 *  * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1KeyValueEntry.
 *
 *  Creates key value entries in a key value map scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1KeyValueEntry to include
 *    in the query.
 *  @param parent Required. Scope as indicated by the URI in which to create the
 *    key value map entry. Use **one** of the following structures in your
 *    request: *
 *    `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
 *    `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
 *    * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsKeyvaluemapsEntriesCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1KeyValueEntry *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a key value entry from a key value map scoped to an organization,
 *  environment, or API proxy. **Notes:** * After you delete the key value
 *  entry, the policy consuming the entry will continue to function with its
 *  cached values for a few minutes. This is expected behavior. * Supported for
 *  Apigee hybrid 1.8.x and higher.
 *
 *  Method: apigee.organizations.environments.keyvaluemaps.entries.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsKeyvaluemapsEntriesDelete : GTLRApigeeQuery

/**
 *  Required. Scope as indicated by the URI in which to delete the key value map
 *  entry. Use **one** of the following structures in your request: *
 *  `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *  *
 *  `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}`
 *  * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1KeyValueEntry.
 *
 *  Deletes a key value entry from a key value map scoped to an organization,
 *  environment, or API proxy. **Notes:** * After you delete the key value
 *  entry, the policy consuming the entry will continue to function with its
 *  cached values for a few minutes. This is expected behavior. * Supported for
 *  Apigee hybrid 1.8.x and higher.
 *
 *  @param name Required. Scope as indicated by the URI in which to delete the
 *    key value map entry. Use **one** of the following structures in your
 *    request: *
 *    `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *    *
 *    `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}`
 *    *
 *    `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsKeyvaluemapsEntriesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get the key value entry value for a key value map scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  Method: apigee.organizations.environments.keyvaluemaps.entries.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsKeyvaluemapsEntriesGet : GTLRApigeeQuery

/**
 *  Required. Scope as indicated by the URI in which to fetch the key value map
 *  entry/value. Use **one** of the following structures in your request: *
 *  `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *  *
 *  `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}`
 *  * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1KeyValueEntry.
 *
 *  Get the key value entry value for a key value map scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  @param name Required. Scope as indicated by the URI in which to fetch the
 *    key value map entry/value. Use **one** of the following structures in your
 *    request: *
 *    `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *    *
 *    `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}`
 *    *
 *    `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsKeyvaluemapsEntriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists key value entries for key values maps scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  Method: apigee.organizations.environments.keyvaluemaps.entries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsKeyvaluemapsEntriesList : GTLRApigeeQuery

/**
 *  Optional. Maximum number of key value entries to return. If unspecified, at
 *  most 100 entries will be returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token. If provides, must be a valid key value entry returned
 *  from a previous call that can be used to retrieve the next page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Scope as indicated by the URI in which to list key value maps. Use
 *  **one** of the following structures in your request: *
 *  `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
 *  `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
 *  * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListKeyValueEntriesResponse.
 *
 *  Lists key value entries for key values maps scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  @param parent Required. Scope as indicated by the URI in which to list key
 *    value maps. Use **one** of the following structures in your request: *
 *    `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
 *    `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
 *    * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsKeyvaluemapsEntriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates properties for an Apigee environment with patch semantics using a
 *  field mask. **Note:** Not supported for Apigee hybrid.
 *
 *  Method: apigee.organizations.environments.modifyEnvironment
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsModifyEnvironment : GTLRApigeeQuery

/**
 *  Required. Name of the environment. Use the following structure in your
 *  request: `organizations/{org}/environments/{environment}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  List of fields to be updated. Fields that can be updated: node_config.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Updates properties for an Apigee environment with patch semantics using a
 *  field mask. **Note:** Not supported for Apigee hybrid.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Environment to include in
 *    the query.
 *  @param name Required. Name of the environment. Use the following structure
 *    in your request: `organizations/{org}/environments/{environment}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsModifyEnvironment
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Environment *)object
                           name:(NSString *)name;

@end

/**
 *  Similar to GetStats except that the response is less verbose.
 *
 *  Method: apigee.organizations.environments.optimizedStats.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsOptimizedStatsGet : GTLRApigeeQuery

/** No longer used by Apigee. Supported for backwards compatibility. */
@property(nonatomic, copy, nullable) NSString *accuracy;

/**
 *  Table name used to query custom aggregate tables. If this parameter is
 *  skipped, then Apigee will try to retrieve the data from fact tables which
 *  will be expensive.
 */
@property(nonatomic, copy, nullable) NSString *aggTable;

/** Filter that enables you to drill-down on specific dimension values. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Maximum number of result items to return. The default and maximum value that
 *  can be returned is 14400.
 */
@property(nonatomic, copy, nullable) NSString *limit;

/**
 *  Required. Resource name for which the interactive query will be executed.
 *  Use the following format in your request:
 *  `organizations/{org}/environments/{env}/optimizedStats/{dimensions}`
 *  Dimensions let you view metrics in meaningful groupings, such as `apiproxy`,
 *  `target_host`. The value of `dimensions` should be a comma-separated list as
 *  shown below:
 *  `organizations/{org}/environments/{env}/optimizedStats/apiproxy,request_verb`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Offset value. Use `offset` with `limit` to enable pagination of results. For
 *  example, to display results 11-20, set limit to `10` and offset to `10`.
 */
@property(nonatomic, copy, nullable) NSString *offset;

/** No longer used by Apigee. Supported for backwards compatibility. */
@property(nonatomic, assign) BOOL realtime;

/**
 *  Required. Comma-separated list of metrics. For example:
 *  `sum(message_count),sum(error_count)`
 */
@property(nonatomic, copy, nullable) NSString *select;

/** Routes the query to API Monitoring for the last hour. */
@property(nonatomic, assign) BOOL sonar;

/**
 *  Flag that specifies whether the sort order should be ascending or
 *  descending. Valid values include `DESC` and `ASC`.
 */
@property(nonatomic, copy, nullable) NSString *sort;

/** Comma-separated list of columns to sort the final result. */
@property(nonatomic, copy, nullable) NSString *sortby;

/**
 *  Required. Time interval for the interactive query. Time range is specified
 *  in GMT as `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`
 */
@property(nonatomic, copy, nullable) NSString *timeRange;

/**
 *  Granularity of metrics returned. Valid values include: `second`, `minute`,
 *  `hour`, `day`, `week`, or `month`.
 */
@property(nonatomic, copy, nullable) NSString *timeUnit;

/**
 *  Top number of results to return. For example, to return the top 5 results,
 *  set `topk=5`.
 */
@property(nonatomic, copy, nullable) NSString *topk;

/**
 *  Flag that specifies whether to list timestamps in ascending (`true`) or
 *  descending (`false`) order. Apigee recommends setting this value to `true`
 *  if you are using `sortby` with `sort=DESC`.
 */
@property(nonatomic, assign) BOOL tsAscending;

/** Timezone offset value. */
@property(nonatomic, copy, nullable) NSString *tzo;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1OptimizedStats.
 *
 *  Similar to GetStats except that the response is less verbose.
 *
 *  @param name Required. Resource name for which the interactive query will be
 *    executed. Use the following format in your request:
 *    `organizations/{org}/environments/{env}/optimizedStats/{dimensions}`
 *    Dimensions let you view metrics in meaningful groupings, such as
 *    `apiproxy`, `target_host`. The value of `dimensions` should be a
 *    comma-separated list as shown below:
 *    `organizations/{org}/environments/{env}/optimizedStats/apiproxy,request_verb`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsOptimizedStatsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Submit a query to be processed in the background. If the submission of the
 *  query succeeds, the API returns a 201 status and an ID that refer to the
 *  query. In addition to the HTTP status 201, the `state` of "enqueued" means
 *  that the request succeeded.
 *
 *  Method: apigee.organizations.environments.queries.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsQueriesCreate : GTLRApigeeQuery

/**
 *  Required. The parent resource name. Must be of the form
 *  `organizations/{org}/environments/{env}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1AsyncQuery.
 *
 *  Submit a query to be processed in the background. If the submission of the
 *  query succeeds, the API returns a 201 status and an ID that refer to the
 *  query. In addition to the HTTP status 201, the `state` of "enqueued" means
 *  that the request succeeded.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Query to include in the
 *    query.
 *  @param parent Required. The parent resource name. Must be of the form
 *    `organizations/{org}/environments/{env}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsQueriesCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Query *)object
                         parent:(NSString *)parent;

@end

/**
 *  Get query status If the query is still in progress, the `state` is set to
 *  "running" After the query has completed successfully, `state` is set to
 *  "completed"
 *
 *  Method: apigee.organizations.environments.queries.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsQueriesGet : GTLRApigeeQuery

/**
 *  Required. Name of the asynchronous query to get. Must be of the form
 *  `organizations/{org}/environments/{env}/queries/{queryId}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1AsyncQuery.
 *
 *  Get query status If the query is still in progress, the `state` is set to
 *  "running" After the query has completed successfully, `state` is set to
 *  "completed"
 *
 *  @param name Required. Name of the asynchronous query to get. Must be of the
 *    form `organizations/{org}/environments/{env}/queries/{queryId}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsQueriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  After the query is completed, use this API to retrieve the results. If the
 *  request succeeds, and there is a non-zero result set, the result is
 *  downloaded to the client as a zipped JSON file. The name of the downloaded
 *  file will be: OfflineQueryResult-.zip Example:
 *  `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
 *
 *  Method: apigee.organizations.environments.queries.getResult
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsQueriesGetResult : GTLRApigeeQuery

/**
 *  Required. Name of the asynchronous query result to get. Must be of the form
 *  `organizations/{org}/environments/{env}/queries/{queryId}/result`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleApiHttpBody.
 *
 *  After the query is completed, use this API to retrieve the results. If the
 *  request succeeds, and there is a non-zero result set, the result is
 *  downloaded to the client as a zipped JSON file. The name of the downloaded
 *  file will be: OfflineQueryResult-.zip Example:
 *  `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
 *
 *  @param name Required. Name of the asynchronous query result to get. Must be
 *    of the form
 *    `organizations/{org}/environments/{env}/queries/{queryId}/result`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsQueriesGetResult
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  After the query is completed, use this API to retrieve the results. If the
 *  request succeeds, and there is a non-zero result set, the result is sent to
 *  the client as a list of urls to JSON files.
 *
 *  Method: apigee.organizations.environments.queries.getResulturl
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsQueriesGetResulturl : GTLRApigeeQuery

/**
 *  Required. Name of the asynchronous query result to get. Must be of the form
 *  `organizations/{org}/environments/{env}/queries/{queryId}/resulturl`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1GetAsyncQueryResultUrlResponse.
 *
 *  After the query is completed, use this API to retrieve the results. If the
 *  request succeeds, and there is a non-zero result set, the result is sent to
 *  the client as a list of urls to JSON files.
 *
 *  @param name Required. Name of the asynchronous query result to get. Must be
 *    of the form
 *    `organizations/{org}/environments/{env}/queries/{queryId}/resulturl`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsQueriesGetResulturl
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Return a list of Asynchronous Queries
 *
 *  Method: apigee.organizations.environments.queries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsQueriesList : GTLRApigeeQuery

/** Filter response list by dataset. Example: `api`, `mint` */
@property(nonatomic, copy, nullable) NSString *dataset;

/**
 *  Filter response list by returning asynchronous queries that created after
 *  this date time. Time must be in ISO date-time format like
 *  '2011-12-03T10:15:30Z'.
 */
@property(nonatomic, copy, nullable) NSString *from;

/**
 *  Flag to include asynchronous queries that don't have a report denifition.
 */
@property(nonatomic, copy, nullable) NSString *inclQueriesWithoutReport;

/**
 *  Required. The parent resource name. Must be of the form
 *  `organizations/{org}/environments/{env}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Filter response list by asynchronous query status. */
@property(nonatomic, copy, nullable) NSString *status;

/** Filter response list by user who submitted queries. */
@property(nonatomic, copy, nullable) NSString *submittedBy;

/**
 *  Filter response list by returning asynchronous queries that created before
 *  this date time. Time must be in ISO date-time format like
 *  '2011-12-03T10:16:30Z'.
 */
@property(nonatomic, copy, nullable) NSString *to;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListAsyncQueriesResponse.
 *
 *  Return a list of Asynchronous Queries
 *
 *  @param parent Required. The parent resource name. Must be of the form
 *    `organizations/{org}/environments/{env}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsQueriesList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a Reference in the specified environment.
 *
 *  Method: apigee.organizations.environments.references.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsReferencesCreate : GTLRApigeeQuery

/**
 *  Required. The parent environment name under which the Reference will be
 *  created. Must be of the form `organizations/{org}/environments/{env}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Reference.
 *
 *  Creates a Reference in the specified environment.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Reference to include in
 *    the query.
 *  @param parent Required. The parent environment name under which the
 *    Reference will be created. Must be of the form
 *    `organizations/{org}/environments/{env}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsReferencesCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Reference *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a Reference from an environment. Returns the deleted Reference
 *  resource.
 *
 *  Method: apigee.organizations.environments.references.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsReferencesDelete : GTLRApigeeQuery

/**
 *  Required. The name of the Reference to delete. Must be of the form
 *  `organizations/{org}/environments/{env}/references/{ref}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Reference.
 *
 *  Deletes a Reference from an environment. Returns the deleted Reference
 *  resource.
 *
 *  @param name Required. The name of the Reference to delete. Must be of the
 *    form `organizations/{org}/environments/{env}/references/{ref}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsReferencesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a Reference resource.
 *
 *  Method: apigee.organizations.environments.references.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsReferencesGet : GTLRApigeeQuery

/**
 *  Required. The name of the Reference to get. Must be of the form
 *  `organizations/{org}/environments/{env}/references/{ref}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Reference.
 *
 *  Gets a Reference resource.
 *
 *  @param name Required. The name of the Reference to get. Must be of the form
 *    `organizations/{org}/environments/{env}/references/{ref}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsReferencesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates an existing Reference. Note that this operation has PUT semantics;
 *  it will replace the entirety of the existing Reference with the resource in
 *  the request body.
 *
 *  Method: apigee.organizations.environments.references.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsReferencesUpdate : GTLRApigeeQuery

/**
 *  Required. The name of the Reference to update. Must be of the form
 *  `organizations/{org}/environments/{env}/references/{ref}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Reference.
 *
 *  Updates an existing Reference. Note that this operation has PUT semantics;
 *  it will replace the entirety of the existing Reference with the resource in
 *  the request body.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Reference to include in
 *    the query.
 *  @param name Required. The name of the Reference to update. Must be of the
 *    form `organizations/{org}/environments/{env}/references/{ref}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsReferencesUpdate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Reference *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a resource file. Specify the `Content-Type` as
 *  `application/octet-stream` or `multipart/form-data`. For more information
 *  about resource files, see [Resource
 *  files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
 *
 *  Method: apigee.organizations.environments.resourcefiles.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsResourcefilesCreate : GTLRApigeeQuery

/**
 *  Required. Name of the resource file. Must match the regular expression:
 *  [a-zA-Z0-9:/\\\\!\@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Name of the environment in which to create the resource file in
 *  the following format: `organizations/{org}/environments/{env}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Required. Resource file type. {{ resource_file_type }} */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ResourceFile.
 *
 *  Creates a resource file. Specify the `Content-Type` as
 *  `application/octet-stream` or `multipart/form-data`. For more information
 *  about resource files, see [Resource
 *  files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
 *
 *  @param object The @c GTLRApigee_GoogleApiHttpBody to include in the query.
 *  @param parent Required. Name of the environment in which to create the
 *    resource file in the following format:
 *    `organizations/{org}/environments/{env}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsResourcefilesCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleApiHttpBody *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a resource file. For more information about resource files, see
 *  [Resource
 *  files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
 *
 *  Method: apigee.organizations.environments.resourcefiles.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsResourcefilesDelete : GTLRApigeeQuery

/**
 *  Required. ID of the resource file to delete. Must match the regular
 *  expression: [a-zA-Z0-9:/\\\\!\@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Name of the environment in the following format:
 *  `organizations/{org}/environments/{env}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Required. Resource file type. {{ resource_file_type }} */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ResourceFile.
 *
 *  Deletes a resource file. For more information about resource files, see
 *  [Resource
 *  files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
 *
 *  @param parent Required. Name of the environment in the following format:
 *    `organizations/{org}/environments/{env}`.
 *  @param type Required. Resource file type. {{ resource_file_type }}
 *  @param name Required. ID of the resource file to delete. Must match the
 *    regular expression: [a-zA-Z0-9:/\\\\!\@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsResourcefilesDelete
 */
+ (instancetype)queryWithParent:(NSString *)parent
                           type:(NSString *)type
                           name:(NSString *)name;

@end

/**
 *  Gets the contents of a resource file. For more information about resource
 *  files, see [Resource
 *  files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
 *
 *  Method: apigee.organizations.environments.resourcefiles.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsResourcefilesGet : GTLRApigeeQuery

/**
 *  Required. ID of the resource file. Must match the regular expression:
 *  [a-zA-Z0-9:/\\\\!\@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Name of the environment in the following format:
 *  `organizations/{org}/environments/{env}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Required. Resource file type. {{ resource_file_type }} */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Fetches a @c GTLRApigee_GoogleApiHttpBody.
 *
 *  Gets the contents of a resource file. For more information about resource
 *  files, see [Resource
 *  files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
 *
 *  @param parent Required. Name of the environment in the following format:
 *    `organizations/{org}/environments/{env}`.
 *  @param type Required. Resource file type. {{ resource_file_type }}
 *  @param name Required. ID of the resource file. Must match the regular
 *    expression: [a-zA-Z0-9:/\\\\!\@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsResourcefilesGet
 */
+ (instancetype)queryWithParent:(NSString *)parent
                           type:(NSString *)type
                           name:(NSString *)name;

@end

/**
 *  Lists all resource files, optionally filtering by type. For more information
 *  about resource files, see [Resource
 *  files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
 *
 *  Method: apigee.organizations.environments.resourcefiles.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsResourcefilesList : GTLRApigeeQuery

/**
 *  Required. Name of the environment in which to list resource files in the
 *  following format: `organizations/{org}/environments/{env}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Optional. Type of resource files to list. {{ resource_file_type }} */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListEnvironmentResourcesResponse.
 *
 *  Lists all resource files, optionally filtering by type. For more information
 *  about resource files, see [Resource
 *  files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
 *
 *  @param parent Required. Name of the environment in which to list resource
 *    files in the following format: `organizations/{org}/environments/{env}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsResourcefilesList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists all resource files, optionally filtering by type. For more information
 *  about resource files, see [Resource
 *  files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
 *
 *  Method: apigee.organizations.environments.resourcefiles.listEnvironmentResources
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsResourcefilesListEnvironmentResources : GTLRApigeeQuery

/**
 *  Required. Name of the environment in which to list resource files in the
 *  following format: `organizations/{org}/environments/{env}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Optional. Type of resource files to list. {{ resource_file_type }} */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListEnvironmentResourcesResponse.
 *
 *  Lists all resource files, optionally filtering by type. For more information
 *  about resource files, see [Resource
 *  files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
 *
 *  @param parent Required. Name of the environment in which to list resource
 *    files in the following format: `organizations/{org}/environments/{env}`.
 *  @param type Optional. Type of resource files to list. {{ resource_file_type
 *    }}
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsResourcefilesListEnvironmentResources
 */
+ (instancetype)queryWithParent:(NSString *)parent
                           type:(NSString *)type;

@end

/**
 *  Updates a resource file. Specify the `Content-Type` as
 *  `application/octet-stream` or `multipart/form-data`. For more information
 *  about resource files, see [Resource
 *  files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
 *
 *  Method: apigee.organizations.environments.resourcefiles.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsResourcefilesUpdate : GTLRApigeeQuery

/**
 *  Required. ID of the resource file to update. Must match the regular
 *  expression: [a-zA-Z0-9:/\\\\!\@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Name of the environment in the following format:
 *  `organizations/{org}/environments/{env}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Required. Resource file type. {{ resource_file_type }} */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ResourceFile.
 *
 *  Updates a resource file. Specify the `Content-Type` as
 *  `application/octet-stream` or `multipart/form-data`. For more information
 *  about resource files, see [Resource
 *  files](https://cloud.google.com/apigee/docs/api-platform/develop/resource-files).
 *
 *  @param object The @c GTLRApigee_GoogleApiHttpBody to include in the query.
 *  @param parent Required. Name of the environment in the following format:
 *    `organizations/{org}/environments/{env}`.
 *  @param type Required. Resource file type. {{ resource_file_type }}
 *  @param name Required. ID of the resource file to update. Must match the
 *    regular expression: [a-zA-Z0-9:/\\\\!\@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsResourcefilesUpdate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleApiHttpBody *)object
                         parent:(NSString *)parent
                           type:(NSString *)type
                           name:(NSString *)name;

@end

/**
 *  Submit a report request to be processed in the background. If the submission
 *  succeeds, the API returns a 200 status and an ID that refer to the report
 *  request. In addition to the HTTP status 200, the `state` of "enqueued" means
 *  that the request succeeded.
 *
 *  Method: apigee.organizations.environments.securityReports.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsSecurityReportsCreate : GTLRApigeeQuery

/**
 *  Required. The parent resource name. Must be of the form
 *  `organizations/{org}/environments/{env}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1SecurityReport.
 *
 *  Submit a report request to be processed in the background. If the submission
 *  succeeds, the API returns a 200 status and an ID that refer to the report
 *  request. In addition to the HTTP status 200, the `state` of "enqueued" means
 *  that the request succeeded.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1SecurityReportQuery to
 *    include in the query.
 *  @param parent Required. The parent resource name. Must be of the form
 *    `organizations/{org}/environments/{env}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsSecurityReportsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1SecurityReportQuery *)object
                         parent:(NSString *)parent;

@end

/**
 *  Get security report status If the query is still in progress, the `state` is
 *  set to "running" After the query has completed successfully, `state` is set
 *  to "completed"
 *
 *  Method: apigee.organizations.environments.securityReports.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsSecurityReportsGet : GTLRApigeeQuery

/**
 *  Required. Name of the security report to get. Must be of the form
 *  `organizations/{org}/environments/{env}/securityReports/{reportId}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1SecurityReport.
 *
 *  Get security report status If the query is still in progress, the `state` is
 *  set to "running" After the query has completed successfully, `state` is set
 *  to "completed"
 *
 *  @param name Required. Name of the security report to get. Must be of the
 *    form `organizations/{org}/environments/{env}/securityReports/{reportId}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsSecurityReportsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  After the query is completed, use this API to retrieve the results as file.
 *  If the request succeeds, and there is a non-zero result set, the result is
 *  downloaded to the client as a zipped JSON file. The name of the downloaded
 *  file will be: OfflineQueryResult-.zip Example:
 *  `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
 *
 *  Method: apigee.organizations.environments.securityReports.getResult
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsSecurityReportsGetResult : GTLRApigeeQuery

/**
 *  Required. Name of the security report result to get. Must be of the form
 *  `organizations/{org}/environments/{env}/securityReports/{reportId}/result`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleApiHttpBody.
 *
 *  After the query is completed, use this API to retrieve the results as file.
 *  If the request succeeds, and there is a non-zero result set, the result is
 *  downloaded to the client as a zipped JSON file. The name of the downloaded
 *  file will be: OfflineQueryResult-.zip Example:
 *  `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
 *
 *  @param name Required. Name of the security report result to get. Must be of
 *    the form
 *    `organizations/{org}/environments/{env}/securityReports/{reportId}/result`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsSecurityReportsGetResult
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  After the query is completed, use this API to view the query result when
 *  result size is small.
 *
 *  Method: apigee.organizations.environments.securityReports.getResultView
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsSecurityReportsGetResultView : GTLRApigeeQuery

/**
 *  Required. Name of the security report result view to get. Must be of the
 *  form
 *  `organizations/{org}/environments/{env}/securityReports/{reportId}/resultView`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1SecurityReportResultView.
 *
 *  After the query is completed, use this API to view the query result when
 *  result size is small.
 *
 *  @param name Required. Name of the security report result view to get. Must
 *    be of the form
 *    `organizations/{org}/environments/{env}/securityReports/{reportId}/resultView`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsSecurityReportsGetResultView
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Return a list of Security Reports
 *
 *  Method: apigee.organizations.environments.securityReports.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsSecurityReportsList : GTLRApigeeQuery

/** Filter response list by dataset. Example: `api`, `mint` */
@property(nonatomic, copy, nullable) NSString *dataset;

/**
 *  Filter response list by returning security reports that created after this
 *  date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
 */
@property(nonatomic, copy, nullable) NSString *from;

/** The maximum number of security report to return in the list response. */
@property(nonatomic, assign) NSInteger pageSize;

/** Token returned from the previous list response to fetch the next page. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource name. Must be of the form
 *  `organizations/{org}/environments/{env}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Filter response list by security reports status. */
@property(nonatomic, copy, nullable) NSString *status;

/** Filter response list by user who submitted queries. */
@property(nonatomic, copy, nullable) NSString *submittedBy;

/**
 *  Filter response list by returning security reports that created before this
 *  date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
 */
@property(nonatomic, copy, nullable) NSString *to;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListSecurityReportsResponse.
 *
 *  Return a list of Security Reports
 *
 *  @param parent Required. The parent resource name. Must be of the form
 *    `organizations/{org}/environments/{env}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsSecurityReportsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Retrieve security statistics as tabular rows.
 *
 *  Method: apigee.organizations.environments.securityStats.queryTabularStats
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsSecurityStatsQueryTabularStats : GTLRApigeeQuery

/** Required. Should be of the form organizations//environments/. */
@property(nonatomic, copy, nullable) NSString *orgenv;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1QueryTabularStatsResponse.
 *
 *  Retrieve security statistics as tabular rows.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1QueryTabularStatsRequest
 *    to include in the query.
 *  @param orgenv Required. Should be of the form organizations//environments/.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsSecurityStatsQueryTabularStats
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1QueryTabularStatsRequest *)object
                         orgenv:(NSString *)orgenv;

@end

/**
 *  Retrieve security statistics as a collection of time series.
 *
 *  Method: apigee.organizations.environments.securityStats.queryTimeSeriesStats
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsSecurityStatsQueryTimeSeriesStats : GTLRApigeeQuery

/** Required. Should be of the form organizations//environments/. */
@property(nonatomic, copy, nullable) NSString *orgenv;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1QueryTimeSeriesStatsResponse.
 *
 *  Retrieve security statistics as a collection of time series.
 *
 *  @param object The @c
 *    GTLRApigee_GoogleCloudApigeeV1QueryTimeSeriesStatsRequest to include in
 *    the query.
 *  @param orgenv Required. Should be of the form organizations//environments/.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsSecurityStatsQueryTimeSeriesStats
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1QueryTimeSeriesStatsRequest *)object
                         orgenv:(NSString *)orgenv;

@end

/**
 *  Sets the IAM policy on an environment, if the policy already exists it will
 *  be replaced. For more information, see [Manage users, roles, and permissions
 *  using the
 *  API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles).
 *  You must have the `apigee.environments.setIamPolicy` permission to call this
 *  API.
 *
 *  Method: apigee.organizations.environments.setIamPolicy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsSetIamPolicy : GTLRApigeeQuery

/**
 *  REQUIRED: The resource for which the policy is being specified. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigee_GoogleIamV1Policy.
 *
 *  Sets the IAM policy on an environment, if the policy already exists it will
 *  be replaced. For more information, see [Manage users, roles, and permissions
 *  using the
 *  API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles).
 *  You must have the `apigee.environments.setIamPolicy` permission to call this
 *  API.
 *
 *  @param object The @c GTLRApigee_GoogleIamV1SetIamPolicyRequest to include in
 *    the query.
 *  @param resource REQUIRED: The resource for which the policy is being
 *    specified. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsSetIamPolicy
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleIamV1SetIamPolicyRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Lists all deployments of a shared flow in an environment.
 *
 *  Method: apigee.organizations.environments.sharedflows.deployments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsSharedflowsDeploymentsList : GTLRApigeeQuery

/**
 *  Required. Name representing a shared flow in an environment in the following
 *  format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListDeploymentsResponse.
 *
 *  Lists all deployments of a shared flow in an environment.
 *
 *  @param parent Required. Name representing a shared flow in an environment in
 *    the following format:
 *    `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsSharedflowsDeploymentsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deploys a revision of a shared flow. If another revision of the same shared
 *  flow is currently deployed, set the `override` parameter to `true` to have
 *  this revision replace the currently deployed revision. You cannot use a
 *  shared flow until it has been deployed to an environment. For a request path
 *  `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`,
 *  two permissions are required: * `apigee.deployments.create` on the resource
 *  `organizations/{org}/environments/{env}` *
 *  `apigee.sharedflowrevisions.deploy` on the resource
 *  `organizations/{org}/sharedflows/{sf}/revisions/{rev}`
 *
 *  Method: apigee.organizations.environments.sharedflows.revisions.deploy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsSharedflowsRevisionsDeploy : GTLRApigeeQuery

/**
 *  Required. Name of the shared flow revision to deploy in the following
 *  format:
 *  `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Flag that specifies whether the new deployment replaces other deployed
 *  revisions of the shared flow in the environment. Set `override` to `true` to
 *  replace other deployed revisions. By default, `override` is `false` and the
 *  deployment is rejected if other revisions of the shared flow are deployed in
 *  the environment.
 */
@property(nonatomic, assign) BOOL override;

/**
 *  Google Cloud IAM service account. The service account represents the
 *  identity of the deployed proxy, and determines what permissions it has. The
 *  format must be `{ACCOUNT_ID}\@{PROJECT}.iam.gserviceaccount.com`.
 */
@property(nonatomic, copy, nullable) NSString *serviceAccount;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Deployment.
 *
 *  Deploys a revision of a shared flow. If another revision of the same shared
 *  flow is currently deployed, set the `override` parameter to `true` to have
 *  this revision replace the currently deployed revision. You cannot use a
 *  shared flow until it has been deployed to an environment. For a request path
 *  `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`,
 *  two permissions are required: * `apigee.deployments.create` on the resource
 *  `organizations/{org}/environments/{env}` *
 *  `apigee.sharedflowrevisions.deploy` on the resource
 *  `organizations/{org}/sharedflows/{sf}/revisions/{rev}`
 *
 *  @param name Required. Name of the shared flow revision to deploy in the
 *    following format:
 *    `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsSharedflowsRevisionsDeploy
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the deployment of a shared flow revision and actual state reported by
 *  runtime pods.
 *
 *  Method: apigee.organizations.environments.sharedflows.revisions.getDeployments
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsSharedflowsRevisionsGetDeployments : GTLRApigeeQuery

/**
 *  Required. Name representing a shared flow in an environment in the following
 *  format:
 *  `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Deployment.
 *
 *  Gets the deployment of a shared flow revision and actual state reported by
 *  runtime pods.
 *
 *  @param name Required. Name representing a shared flow in an environment in
 *    the following format:
 *    `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsSharedflowsRevisionsGetDeployments
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Undeploys a shared flow revision from an environment. For a request path
 *  `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`,
 *  two permissions are required: * `apigee.deployments.delete` on the resource
 *  `organizations/{org}/environments/{env}` *
 *  `apigee.sharedflowrevisions.undeploy` on the resource
 *  `organizations/{org}/sharedflows/{sf}/revisions/{rev}`
 *
 *  Method: apigee.organizations.environments.sharedflows.revisions.undeploy
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsSharedflowsRevisionsUndeploy : GTLRApigeeQuery

/**
 *  Required. Name of the shared flow revision to undeploy in the following
 *  format:
 *  `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleProtobufEmpty.
 *
 *  Undeploys a shared flow revision from an environment. For a request path
 *  `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`,
 *  two permissions are required: * `apigee.deployments.delete` on the resource
 *  `organizations/{org}/environments/{env}` *
 *  `apigee.sharedflowrevisions.undeploy` on the resource
 *  `organizations/{org}/sharedflows/{sf}/revisions/{rev}`
 *
 *  @param name Required. Name of the shared flow revision to undeploy in the
 *    following format:
 *    `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsSharedflowsRevisionsUndeploy
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve metrics grouped by dimensions. The types of metrics you can
 *  retrieve include traffic, message counts, API call latency, response size,
 *  and cache hits and counts. Dimensions let you view metrics in meaningful
 *  groups. You can optionally pass dimensions as path parameters to the `stats`
 *  API. If dimensions are not specified, the metrics are computed on the entire
 *  set of data for the given time range.
 *
 *  Method: apigee.organizations.environments.stats.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsStatsGet : GTLRApigeeQuery

/** No longer used by Apigee. Supported for backwards compatibility. */
@property(nonatomic, copy, nullable) NSString *accuracy;

/**
 *  Table name used to query custom aggregate tables. If this parameter is
 *  skipped, then Apigee will try to retrieve the data from fact tables which
 *  will be expensive.
 */
@property(nonatomic, copy, nullable) NSString *aggTable;

/** Filter that enables you to drill down on specific dimension values. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Maximum number of result items to return. The default and maximum value that
 *  can be returned is 14400.
 */
@property(nonatomic, copy, nullable) NSString *limit;

/**
 *  Required. Resource name for which the interactive query will be executed.
 *  Use the following format in your request:
 *  `organizations/{org}/environments/{env}/stats/{dimensions}` Dimensions let
 *  you view metrics in meaningful groupings, such as `apiproxy` or
 *  `target_host`. The value of dimensions should be a comma-separated list, as
 *  shown below:
 *  `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Offset value. Use `offset` with `limit` to enable pagination of results. For
 *  example, to display results 11-20, set limit to `10` and offset to `10`.
 */
@property(nonatomic, copy, nullable) NSString *offset;

/** No longer used by Apigee. Supported for backwards compatibility. */
@property(nonatomic, assign) BOOL realtime;

/**
 *  Comma-separated list of metrics. For example:
 *  `sum(message_count),sum(error_count)`
 */
@property(nonatomic, copy, nullable) NSString *select;

/** Routes the query to API Monitoring for the last hour. */
@property(nonatomic, assign) BOOL sonar;

/**
 *  Flag that specifies whether the sort order should be ascending or
 *  descending. Valid values include: `DESC` and `ASC`.
 */
@property(nonatomic, copy, nullable) NSString *sort;

/** Comma-separated list of columns to sort the final result. */
@property(nonatomic, copy, nullable) NSString *sortby;

/**
 *  Time interval for the interactive query. Time range is specified in GMT as
 *  `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`
 */
@property(nonatomic, copy, nullable) NSString *timeRange;

/**
 *  Granularity of metrics returned. Valid values include: `second`, `minute`,
 *  `hour`, `day`, `week`, or` month`.
 */
@property(nonatomic, copy, nullable) NSString *timeUnit;

/**
 *  Top number of results to return. For example, to return the top 5 results,
 *  set `topk=5`.
 */
@property(nonatomic, copy, nullable) NSString *topk;

/**
 *  Flag that specifies whether to list timestamps in ascending (`true`) or
 *  descending (`false`) order. Apigee recommends that you set this value to
 *  `true` if you are using `sortby` with `sort=DESC`.
 */
@property(nonatomic, assign) BOOL tsAscending;

/** Timezone offset value. */
@property(nonatomic, copy, nullable) NSString *tzo;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Stats.
 *
 *  Retrieve metrics grouped by dimensions. The types of metrics you can
 *  retrieve include traffic, message counts, API call latency, response size,
 *  and cache hits and counts. Dimensions let you view metrics in meaningful
 *  groups. You can optionally pass dimensions as path parameters to the `stats`
 *  API. If dimensions are not specified, the metrics are computed on the entire
 *  set of data for the given time range.
 *
 *  @param name Required. Resource name for which the interactive query will be
 *    executed. Use the following format in your request:
 *    `organizations/{org}/environments/{env}/stats/{dimensions}` Dimensions let
 *    you view metrics in meaningful groupings, such as `apiproxy` or
 *    `target_host`. The value of dimensions should be a comma-separated list,
 *    as shown below:
 *    `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsStatsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a subscription for the environment's Pub/Sub topic. The server will
 *  assign a random name for this subscription. The "name" and "push_config"
 *  must *not* be specified.
 *
 *  Method: apigee.organizations.environments.subscribe
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsSubscribe : GTLRApigeeQuery

/**
 *  Required. Name of the environment. Use the following structure in your
 *  request: `organizations/{org}/environments/{env}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Subscription.
 *
 *  Creates a subscription for the environment's Pub/Sub topic. The server will
 *  assign a random name for this subscription. The "name" and "push_config"
 *  must *not* be specified.
 *
 *  @param parent Required. Name of the environment. Use the following structure
 *    in your request: `organizations/{org}/environments/{env}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsSubscribe
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a TargetServer in the specified environment.
 *
 *  Method: apigee.organizations.environments.targetservers.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsTargetserversCreate : GTLRApigeeQuery

/**
 *  Optional. The ID to give the TargetServer. This will overwrite the value in
 *  TargetServer.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The parent environment name under which the TargetServer will be
 *  created. Must be of the form `organizations/{org}/environments/{env}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1TargetServer.
 *
 *  Creates a TargetServer in the specified environment.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1TargetServer to include
 *    in the query.
 *  @param parent Required. The parent environment name under which the
 *    TargetServer will be created. Must be of the form
 *    `organizations/{org}/environments/{env}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsTargetserversCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1TargetServer *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a TargetServer from an environment. Returns the deleted TargetServer
 *  resource.
 *
 *  Method: apigee.organizations.environments.targetservers.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsTargetserversDelete : GTLRApigeeQuery

/**
 *  Required. The name of the TargetServer to delete. Must be of the form
 *  `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1TargetServer.
 *
 *  Deletes a TargetServer from an environment. Returns the deleted TargetServer
 *  resource.
 *
 *  @param name Required. The name of the TargetServer to delete. Must be of the
 *    form
 *    `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsTargetserversDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a TargetServer resource.
 *
 *  Method: apigee.organizations.environments.targetservers.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsTargetserversGet : GTLRApigeeQuery

/**
 *  Required. The name of the TargetServer to get. Must be of the form
 *  `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1TargetServer.
 *
 *  Gets a TargetServer resource.
 *
 *  @param name Required. The name of the TargetServer to get. Must be of the
 *    form
 *    `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsTargetserversGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates an existing TargetServer. Note that this operation has PUT
 *  semantics; it will replace the entirety of the existing TargetServer with
 *  the resource in the request body.
 *
 *  Method: apigee.organizations.environments.targetservers.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsTargetserversUpdate : GTLRApigeeQuery

/**
 *  Required. The name of the TargetServer to replace. Must be of the form
 *  `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1TargetServer.
 *
 *  Updates an existing TargetServer. Note that this operation has PUT
 *  semantics; it will replace the entirety of the existing TargetServer with
 *  the resource in the request body.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1TargetServer to include
 *    in the query.
 *  @param name Required. The name of the TargetServer to replace. Must be of
 *    the form
 *    `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsTargetserversUpdate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1TargetServer *)object
                           name:(NSString *)name;

@end

/**
 *  Tests the permissions of a user on an environment, and returns a subset of
 *  permissions that the user has on the environment. If the environment does
 *  not exist, an empty permission set is returned (a NOT_FOUND error is not
 *  returned).
 *
 *  Method: apigee.organizations.environments.testIamPermissions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsTestIamPermissions : GTLRApigeeQuery

/**
 *  REQUIRED: The resource for which the policy detail is being requested. See
 *  [Resource names](https://cloud.google.com/apis/design/resource_names) for
 *  the appropriate value for this field.
 */
@property(nonatomic, copy, nullable) NSString *resource;

/**
 *  Fetches a @c GTLRApigee_GoogleIamV1TestIamPermissionsResponse.
 *
 *  Tests the permissions of a user on an environment, and returns a subset of
 *  permissions that the user has on the environment. If the environment does
 *  not exist, an empty permission set is returned (a NOT_FOUND error is not
 *  returned).
 *
 *  @param object The @c GTLRApigee_GoogleIamV1TestIamPermissionsRequest to
 *    include in the query.
 *  @param resource REQUIRED: The resource for which the policy detail is being
 *    requested. See [Resource
 *    names](https://cloud.google.com/apis/design/resource_names) for the
 *    appropriate value for this field.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsTestIamPermissions
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleIamV1TestIamPermissionsRequest *)object
                       resource:(NSString *)resource;

@end

/**
 *  Creates a trace configuration override. The response contains a
 *  system-generated UUID, that can be used to view, update, or delete the
 *  configuration override. Use the List API to view the existing trace
 *  configuration overrides.
 *
 *  Method: apigee.organizations.environments.traceConfig.overrides.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsTraceConfigOverridesCreate : GTLRApigeeQuery

/**
 *  Required. Parent resource of the trace configuration override. Use the
 *  following structure in your request. "organizations/ * /environments/ *
 *  /traceConfig".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1TraceConfigOverride.
 *
 *  Creates a trace configuration override. The response contains a
 *  system-generated UUID, that can be used to view, update, or delete the
 *  configuration override. Use the List API to view the existing trace
 *  configuration overrides.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1TraceConfigOverride to
 *    include in the query.
 *  @param parent Required. Parent resource of the trace configuration override.
 *    Use the following structure in your request. "organizations/ *
 *    /environments/ * /traceConfig".
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsTraceConfigOverridesCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1TraceConfigOverride *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a distributed trace configuration override.
 *
 *  Method: apigee.organizations.environments.traceConfig.overrides.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsTraceConfigOverridesDelete : GTLRApigeeQuery

/**
 *  Required. Name of the trace configuration override. Use the following
 *  structure in your request: "organizations/ * /environments/ *
 *  /traceConfig/overrides/ *".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleProtobufEmpty.
 *
 *  Deletes a distributed trace configuration override.
 *
 *  @param name Required. Name of the trace configuration override. Use the
 *    following structure in your request: "organizations/ * /environments/ *
 *    /traceConfig/overrides/ *".
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsTraceConfigOverridesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a trace configuration override.
 *
 *  Method: apigee.organizations.environments.traceConfig.overrides.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsTraceConfigOverridesGet : GTLRApigeeQuery

/**
 *  Required. Name of the trace configuration override. Use the following
 *  structure in your request: "organizations/ * /environments/ *
 *  /traceConfig/overrides/ *".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1TraceConfigOverride.
 *
 *  Gets a trace configuration override.
 *
 *  @param name Required. Name of the trace configuration override. Use the
 *    following structure in your request: "organizations/ * /environments/ *
 *    /traceConfig/overrides/ *".
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsTraceConfigOverridesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all of the distributed trace configuration overrides in an
 *  environment.
 *
 *  Method: apigee.organizations.environments.traceConfig.overrides.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsTraceConfigOverridesList : GTLRApigeeQuery

/**
 *  Maximum number of trace configuration overrides to return. If not specified,
 *  the maximum number returned is 25. The maximum number cannot exceed 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, returned from a previous `ListTraceConfigOverrides` call.
 *  Token value that can be used to retrieve the subsequent page. When
 *  paginating, all other parameters provided to `ListTraceConfigOverrides` must
 *  match those specified in the call to obtain the page token.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Parent resource of the trace configuration override. Use the
 *  following structure in your request: "organizations/ * /environments/ *
 *  /traceConfig".
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListTraceConfigOverridesResponse.
 *
 *  Lists all of the distributed trace configuration overrides in an
 *  environment.
 *
 *  @param parent Required. Parent resource of the trace configuration override.
 *    Use the following structure in your request: "organizations/ *
 *    /environments/ * /traceConfig".
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsTraceConfigOverridesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a distributed trace configuration override. Note that the repeated
 *  fields have replace semantics when included in the field mask and that they
 *  will be overwritten by the value of the fields in the request body.
 *
 *  Method: apigee.organizations.environments.traceConfig.overrides.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsTraceConfigOverridesPatch : GTLRApigeeQuery

/**
 *  Required. Name of the trace configuration override. Use the following
 *  structure in your request: "organizations/ * /environments/ *
 *  /traceConfig/overrides/ *".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  List of fields to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1TraceConfigOverride.
 *
 *  Updates a distributed trace configuration override. Note that the repeated
 *  fields have replace semantics when included in the field mask and that they
 *  will be overwritten by the value of the fields in the request body.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1TraceConfigOverride to
 *    include in the query.
 *  @param name Required. Name of the trace configuration override. Use the
 *    following structure in your request: "organizations/ * /environments/ *
 *    /traceConfig/overrides/ *".
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsTraceConfigOverridesPatch
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1TraceConfigOverride *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a subscription for the environment's Pub/Sub topic.
 *
 *  Method: apigee.organizations.environments.unsubscribe
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsUnsubscribe : GTLRApigeeQuery

/**
 *  Required. Name of the environment. Use the following structure in your
 *  request: `organizations/{org}/environments/{env}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleProtobufEmpty.
 *
 *  Deletes a subscription for the environment's Pub/Sub topic.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Subscription to include
 *    in the query.
 *  @param parent Required. Name of the environment. Use the following structure
 *    in your request: `organizations/{org}/environments/{env}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsUnsubscribe
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Subscription *)object
                         parent:(NSString *)parent;

@end

/**
 *  Updates an existing environment. When updating properties, you must pass all
 *  existing properties to the API, even if they are not being changed. If you
 *  omit properties from the payload, the properties are removed. To get the
 *  current list of properties for the environment, use the [Get Environment
 *  API](get). **Note**: Both `PUT` and `POST` methods are supported for
 *  updating an existing environment.
 *
 *  Method: apigee.organizations.environments.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsUpdate : GTLRApigeeQuery

/**
 *  Required. Name of the environment. Use the following structure in your
 *  request: `organizations/{org}/environments/{env}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Environment.
 *
 *  Updates an existing environment. When updating properties, you must pass all
 *  existing properties to the API, even if they are not being changed. If you
 *  omit properties from the payload, the properties are removed. To get the
 *  current list of properties for the environment, use the [Get Environment
 *  API](get). **Note**: Both `PUT` and `POST` methods are supported for
 *  updating an existing environment.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Environment to include in
 *    the query.
 *  @param name Required. Name of the environment. Use the following structure
 *    in your request: `organizations/{org}/environments/{env}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsUpdate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Environment *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the debug mask singleton resource for an environment.
 *
 *  Method: apigee.organizations.environments.updateDebugmask
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsUpdateDebugmask : GTLRApigeeQuery

/** Name of the debug mask. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Boolean flag that specifies whether to replace existing values in the debug
 *  mask when doing an update. Set to true to replace existing values. The
 *  default behavior is to append the values (false).
 */
@property(nonatomic, assign) BOOL replaceRepeatedFields;

/**
 *  Field debug mask to support partial updates.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DebugMask.
 *
 *  Updates the debug mask singleton resource for an environment.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1DebugMask to include in
 *    the query.
 *  @param name Name of the debug mask.
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsUpdateDebugmask
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1DebugMask *)object
                           name:(NSString *)name;

@end

/**
 *  Updates an existing environment. When updating properties, you must pass all
 *  existing properties to the API, even if they are not being changed. If you
 *  omit properties from the payload, the properties are removed. To get the
 *  current list of properties for the environment, use the [Get Environment
 *  API](get). **Note**: Both `PUT` and `POST` methods are supported for
 *  updating an existing environment.
 *
 *  Method: apigee.organizations.environments.updateEnvironment
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsUpdateEnvironment : GTLRApigeeQuery

/**
 *  Required. Name of the environment. Use the following structure in your
 *  request: `organizations/{org}/environments/{env}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Environment.
 *
 *  Updates an existing environment. When updating properties, you must pass all
 *  existing properties to the API, even if they are not being changed. If you
 *  omit properties from the payload, the properties are removed. To get the
 *  current list of properties for the environment, use the [Get Environment
 *  API](get). **Note**: Both `PUT` and `POST` methods are supported for
 *  updating an existing environment.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Environment to include in
 *    the query.
 *  @param name Required. Name of the environment. Use the following structure
 *    in your request: `organizations/{org}/environments/{env}`
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsUpdateEnvironment
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Environment *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the trace configurations in an environment. Note that the repeated
 *  fields have replace semantics when included in the field mask and that they
 *  will be overwritten by the value of the fields in the request body.
 *
 *  Method: apigee.organizations.environments.updateTraceConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsEnvironmentsUpdateTraceConfig : GTLRApigeeQuery

/**
 *  Required. Name of the trace configuration. Use the following structure in
 *  your request: "organizations/ * /environments/ * /traceConfig".
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  List of fields to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1TraceConfig.
 *
 *  Updates the trace configurations in an environment. Note that the repeated
 *  fields have replace semantics when included in the field mask and that they
 *  will be overwritten by the value of the fields in the request body.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1TraceConfig to include in
 *    the query.
 *  @param name Required. Name of the trace configuration. Use the following
 *    structure in your request: "organizations/ * /environments/ *
 *    /traceConfig".
 *
 *  @return GTLRApigeeQuery_OrganizationsEnvironmentsUpdateTraceConfig
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1TraceConfig *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the profile for an Apigee organization. See [Understanding
 *  organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).
 *
 *  Method: apigee.organizations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsGet : GTLRApigeeQuery

/**
 *  Required. Apigee organization name in the following format:
 *  `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Organization.
 *
 *  Gets the profile for an Apigee organization. See [Understanding
 *  organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).
 *
 *  @param name Required. Apigee organization name in the following format:
 *    `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the deployed ingress configuration for an organization.
 *
 *  Method: apigee.organizations.getDeployedIngressConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsGetDeployedIngressConfig : GTLRApigeeQuery

/**
 *  Required. Name of the deployed configuration for the organization in the
 *  following format: 'organizations/{org}/deployedIngressConfig'.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  When set to FULL, additional details about the specific deployments
 *  receiving traffic will be included in the IngressConfig response's
 *  RoutingRules.
 *
 *  Likely values:
 *    @arg @c kGTLRApigeeViewIngressConfigViewUnspecified The default/unset
 *        value. The API will default to the BASIC view. (Value:
 *        "INGRESS_CONFIG_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRApigeeViewBasic Include all ingress config data necessary for
 *        the runtime to configure ingress, but no more. Routing rules will
 *        include only basepath and destination environment. This the default
 *        value. (Value: "BASIC")
 *    @arg @c kGTLRApigeeViewFull Include all ingress config data, including
 *        internal debug info for each routing rule such as the proxy claiming a
 *        particular basepath and when the routing rule first appeared in the
 *        env group. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1IngressConfig.
 *
 *  Gets the deployed ingress configuration for an organization.
 *
 *  @param name Required. Name of the deployed configuration for the
 *    organization in the following format:
 *    'organizations/{org}/deployedIngressConfig'.
 *
 *  @return GTLRApigeeQuery_OrganizationsGetDeployedIngressConfig
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the project ID and region for an Apigee organization.
 *
 *  Method: apigee.organizations.getProjectMapping
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsGetProjectMapping : GTLRApigeeQuery

/**
 *  Required. Apigee organization name in the following format:
 *  `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1OrganizationProjectMapping.
 *
 *  Gets the project ID and region for an Apigee organization.
 *
 *  @param name Required. Apigee organization name in the following format:
 *    `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsGetProjectMapping
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get runtime config for an organization.
 *
 *  Method: apigee.organizations.getRuntimeConfig
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsGetRuntimeConfig : GTLRApigeeQuery

/**
 *  Required. Name of the runtime config for the organization in the following
 *  format: 'organizations/{org}/runtimeConfig'.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1RuntimeConfig.
 *
 *  Get runtime config for an organization.
 *
 *  @param name Required. Name of the runtime config for the organization in the
 *    following format: 'organizations/{org}/runtimeConfig'.
 *
 *  @return GTLRApigeeQuery_OrganizationsGetRuntimeConfig
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the service accounts with the permissions required to allow the
 *  Synchronizer to download environment data from the control plane. An ETag is
 *  returned in the response to `getSyncAuthorization`. Pass that ETag when
 *  calling [setSyncAuthorization](setSyncAuthorization) to ensure that you are
 *  updating the correct version. If you don't pass the ETag in the call to
 *  `setSyncAuthorization`, then the existing authorization is overwritten
 *  indiscriminately. For more information, see [Configure the
 *  Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access).
 *  **Note**: Available to Apigee hybrid only.
 *
 *  Method: apigee.organizations.getSyncAuthorization
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsGetSyncAuthorization : GTLRApigeeQuery

/**
 *  Required. Name of the Apigee organization. Use the following structure in
 *  your request: `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1SyncAuthorization.
 *
 *  Lists the service accounts with the permissions required to allow the
 *  Synchronizer to download environment data from the control plane. An ETag is
 *  returned in the response to `getSyncAuthorization`. Pass that ETag when
 *  calling [setSyncAuthorization](setSyncAuthorization) to ensure that you are
 *  updating the correct version. If you don't pass the ETag in the call to
 *  `setSyncAuthorization`, then the existing authorization is overwritten
 *  indiscriminately. For more information, see [Configure the
 *  Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access).
 *  **Note**: Available to Apigee hybrid only.
 *
 *  @param object The @c
 *    GTLRApigee_GoogleCloudApigeeV1GetSyncAuthorizationRequest to include in
 *    the query.
 *  @param name Required. Name of the Apigee organization. Use the following
 *    structure in your request: `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsGetSyncAuthorization
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1GetSyncAuthorizationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Submit a query at host level to be processed in the background. If the
 *  submission of the query succeeds, the API returns a 201 status and an ID
 *  that refer to the query. In addition to the HTTP status 201, the `state` of
 *  "enqueued" means that the request succeeded.
 *
 *  Method: apigee.organizations.hostQueries.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsHostQueriesCreate : GTLRApigeeQuery

/**
 *  Required. The parent resource name. Must be of the form
 *  `organizations/{org}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1AsyncQuery.
 *
 *  Submit a query at host level to be processed in the background. If the
 *  submission of the query succeeds, the API returns a 201 status and an ID
 *  that refer to the query. In addition to the HTTP status 201, the `state` of
 *  "enqueued" means that the request succeeded.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Query to include in the
 *    query.
 *  @param parent Required. The parent resource name. Must be of the form
 *    `organizations/{org}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsHostQueriesCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Query *)object
                         parent:(NSString *)parent;

@end

/**
 *  Get status of a query submitted at host level. If the query is still in
 *  progress, the `state` is set to "running" After the query has completed
 *  successfully, `state` is set to "completed"
 *
 *  Method: apigee.organizations.hostQueries.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsHostQueriesGet : GTLRApigeeQuery

/**
 *  Required. Name of the asynchronous query to get. Must be of the form
 *  `organizations/{org}/queries/{queryId}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1AsyncQuery.
 *
 *  Get status of a query submitted at host level. If the query is still in
 *  progress, the `state` is set to "running" After the query has completed
 *  successfully, `state` is set to "completed"
 *
 *  @param name Required. Name of the asynchronous query to get. Must be of the
 *    form `organizations/{org}/queries/{queryId}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsHostQueriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  After the query is completed, use this API to retrieve the results. If the
 *  request succeeds, and there is a non-zero result set, the result is
 *  downloaded to the client as a zipped JSON file. The name of the downloaded
 *  file will be: OfflineQueryResult-.zip Example:
 *  `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
 *
 *  Method: apigee.organizations.hostQueries.getResult
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsHostQueriesGetResult : GTLRApigeeQuery

/**
 *  Required. Name of the asynchronous query result to get. Must be of the form
 *  `organizations/{org}/queries/{queryId}/result`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleApiHttpBody.
 *
 *  After the query is completed, use this API to retrieve the results. If the
 *  request succeeds, and there is a non-zero result set, the result is
 *  downloaded to the client as a zipped JSON file. The name of the downloaded
 *  file will be: OfflineQueryResult-.zip Example:
 *  `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
 *
 *  @param name Required. Name of the asynchronous query result to get. Must be
 *    of the form `organizations/{org}/queries/{queryId}/result`.
 *
 *  @return GTLRApigeeQuery_OrganizationsHostQueriesGetResult
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  GTLRApigeeQuery_OrganizationsHostQueriesGetResultView
 *
 *  Method: apigee.organizations.hostQueries.getResultView
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsHostQueriesGetResultView : GTLRApigeeQuery

/**
 *  Required. Name of the asynchronous query result view to get. Must be of the
 *  form `organizations/{org}/queries/{queryId}/resultView`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1AsyncQueryResultView.
 *
 *  @param name Required. Name of the asynchronous query result view to get.
 *    Must be of the form `organizations/{org}/queries/{queryId}/resultView`.
 *
 *  @return GTLRApigeeQuery_OrganizationsHostQueriesGetResultView
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Return a list of Asynchronous Queries at host level.
 *
 *  Method: apigee.organizations.hostQueries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsHostQueriesList : GTLRApigeeQuery

/** Filter response list by dataset. Example: `api`, `mint` */
@property(nonatomic, copy, nullable) NSString *dataset;

/** Required. Filter response list by hostname. */
@property(nonatomic, copy, nullable) NSString *envgroupHostname;

/**
 *  Filter response list by returning asynchronous queries that created after
 *  this date time. Time must be in ISO date-time format like
 *  '2011-12-03T10:15:30Z'.
 */
@property(nonatomic, copy, nullable) NSString *from;

/**
 *  Flag to include asynchronous queries that don't have a report denifition.
 */
@property(nonatomic, copy, nullable) NSString *inclQueriesWithoutReport;

/**
 *  Required. The parent resource name. Must be of the form
 *  `organizations/{org}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Filter response list by asynchronous query status. */
@property(nonatomic, copy, nullable) NSString *status;

/** Filter response list by user who submitted queries. */
@property(nonatomic, copy, nullable) NSString *submittedBy;

/**
 *  Filter response list by returning asynchronous queries that created before
 *  this date time. Time must be in ISO date-time format like
 *  '2011-12-03T10:16:30Z'.
 */
@property(nonatomic, copy, nullable) NSString *to;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListAsyncQueriesResponse.
 *
 *  Return a list of Asynchronous Queries at host level.
 *
 *  @param parent Required. The parent resource name. Must be of the form
 *    `organizations/{org}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsHostQueriesList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Submit a query at host level to be processed in the background. If the
 *  submission of the query succeeds, the API returns a 201 status and an ID
 *  that refer to the query. In addition to the HTTP status 201, the `state` of
 *  "enqueued" means that the request succeeded.
 *
 *  Method: apigee.organizations.hostSecurityReports.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsHostSecurityReportsCreate : GTLRApigeeQuery

/**
 *  Required. The parent resource name. Must be of the form
 *  `organizations/{org}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1SecurityReport.
 *
 *  Submit a query at host level to be processed in the background. If the
 *  submission of the query succeeds, the API returns a 201 status and an ID
 *  that refer to the query. In addition to the HTTP status 201, the `state` of
 *  "enqueued" means that the request succeeded.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1SecurityReportQuery to
 *    include in the query.
 *  @param parent Required. The parent resource name. Must be of the form
 *    `organizations/{org}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsHostSecurityReportsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1SecurityReportQuery *)object
                         parent:(NSString *)parent;

@end

/**
 *  Get status of a query submitted at host level. If the query is still in
 *  progress, the `state` is set to "running" After the query has completed
 *  successfully, `state` is set to "completed"
 *
 *  Method: apigee.organizations.hostSecurityReports.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsHostSecurityReportsGet : GTLRApigeeQuery

/**
 *  Required. Name of the security report to get. Must be of the form
 *  `organizations/{org}/securityReports/{reportId}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1SecurityReport.
 *
 *  Get status of a query submitted at host level. If the query is still in
 *  progress, the `state` is set to "running" After the query has completed
 *  successfully, `state` is set to "completed"
 *
 *  @param name Required. Name of the security report to get. Must be of the
 *    form `organizations/{org}/securityReports/{reportId}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsHostSecurityReportsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  After the query is completed, use this API to retrieve the results. If the
 *  request succeeds, and there is a non-zero result set, the result is
 *  downloaded to the client as a zipped JSON file. The name of the downloaded
 *  file will be: OfflineQueryResult-.zip Example:
 *  `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
 *
 *  Method: apigee.organizations.hostSecurityReports.getResult
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsHostSecurityReportsGetResult : GTLRApigeeQuery

/**
 *  Required. Name of the security report result to get. Must be of the form
 *  `organizations/{org}/securityReports/{reportId}/result`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleApiHttpBody.
 *
 *  After the query is completed, use this API to retrieve the results. If the
 *  request succeeds, and there is a non-zero result set, the result is
 *  downloaded to the client as a zipped JSON file. The name of the downloaded
 *  file will be: OfflineQueryResult-.zip Example:
 *  `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`
 *
 *  @param name Required. Name of the security report result to get. Must be of
 *    the form `organizations/{org}/securityReports/{reportId}/result`.
 *
 *  @return GTLRApigeeQuery_OrganizationsHostSecurityReportsGetResult
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  After the query is completed, use this API to view the query result when
 *  result size is small.
 *
 *  Method: apigee.organizations.hostSecurityReports.getResultView
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsHostSecurityReportsGetResultView : GTLRApigeeQuery

/**
 *  Required. Name of the security report result view to get. Must be of the
 *  form `organizations/{org}/securityReports/{reportId}/resultView`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1SecurityReportResultView.
 *
 *  After the query is completed, use this API to view the query result when
 *  result size is small.
 *
 *  @param name Required. Name of the security report result view to get. Must
 *    be of the form
 *    `organizations/{org}/securityReports/{reportId}/resultView`.
 *
 *  @return GTLRApigeeQuery_OrganizationsHostSecurityReportsGetResultView
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Return a list of Security Reports at host level.
 *
 *  Method: apigee.organizations.hostSecurityReports.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsHostSecurityReportsList : GTLRApigeeQuery

/** Filter response list by dataset. Example: `api`, `mint` */
@property(nonatomic, copy, nullable) NSString *dataset;

/** Required. Filter response list by hostname. */
@property(nonatomic, copy, nullable) NSString *envgroupHostname;

/**
 *  Filter response list by returning security reports that created after this
 *  date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.
 */
@property(nonatomic, copy, nullable) NSString *from;

/** The maximum number of security report to return in the list response. */
@property(nonatomic, assign) NSInteger pageSize;

/** Token returned from the previous list response to fetch the next page. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The parent resource name. Must be of the form
 *  `organizations/{org}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** Filter response list by security report status. */
@property(nonatomic, copy, nullable) NSString *status;

/** Filter response list by user who submitted queries. */
@property(nonatomic, copy, nullable) NSString *submittedBy;

/**
 *  Filter response list by returning security reports that created before this
 *  date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.
 */
@property(nonatomic, copy, nullable) NSString *to;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListSecurityReportsResponse.
 *
 *  Return a list of Security Reports at host level.
 *
 *  @param parent Required. The parent resource name. Must be of the form
 *    `organizations/{org}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsHostSecurityReportsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Retrieve metrics grouped by dimensions in host level. The types of metrics
 *  you can retrieve include traffic, message counts, API call latency, response
 *  size, and cache hits and counts. Dimensions let you view metrics in
 *  meaningful groups. You can optionally pass dimensions as path parameters to
 *  the `stats` API. If dimensions are not specified, the metrics are computed
 *  on the entire set of data for the given time range.
 *
 *  Method: apigee.organizations.hostStats.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsHostStatsGet : GTLRApigeeQuery

/** No longer used by Apigee. Supported for backwards compatibility. */
@property(nonatomic, copy, nullable) NSString *accuracy;

/** Required. Hostname for which the interactive query will be executed. */
@property(nonatomic, copy, nullable) NSString *envgroupHostname;

/** Flag that enables drill-down on specific dimension values. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Maximum number of result items to return. The default and maximum value that
 *  can be returned is 14400.
 */
@property(nonatomic, copy, nullable) NSString *limit;

/**
 *  Required. Resource name for which the interactive query will be executed.
 *  Use the following format in your request:
 *  `organizations/{org}/hostStats/{dimensions}` Dimensions let you view metrics
 *  in meaningful groupings, such as `apiproxy`, `target_host`. The value of
 *  dimensions should be a comma-separated list as shown below
 *  `organizations/{org}/hostStats/apiproxy,request_verb`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Offset value. Use `offset` with `limit` to enable pagination of results. For
 *  example, to display results 11-20, set limit to `10` and offset to `10`.
 */
@property(nonatomic, copy, nullable) NSString *offset;

/** No longer used by Apigee. Supported for backwards compatibility. */
@property(nonatomic, assign) BOOL realtime;

/**
 *  Comma-separated list of metrics. For example:
 *  `sum(message_count),sum(error_count)`
 */
@property(nonatomic, copy, nullable) NSString *select;

/**
 *  Flag that specifies if the sort order should be ascending or descending.
 *  Valid values are `DESC` and `ASC`.
 */
@property(nonatomic, copy, nullable) NSString *sort;

/** Comma-separated list of columns to sort the final result. */
@property(nonatomic, copy, nullable) NSString *sortby;

/**
 *  Time interval for the interactive query. Time range is specified in GMT as
 *  `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`
 */
@property(nonatomic, copy, nullable) NSString *timeRange;

/**
 *  Granularity of metrics returned. Valid values include: `second`, `minute`,
 *  `hour`, `day`, `week`, or `month`.
 */
@property(nonatomic, copy, nullable) NSString *timeUnit;

/**
 *  Top number of results to return. For example, to return the top 5 results,
 *  set `topk=5`.
 */
@property(nonatomic, copy, nullable) NSString *topk;

/**
 *  Flag that specifies whether to list timestamps in ascending (`true`) or
 *  descending (`false`) order. Apigee recommends that you set this value to
 *  `true` if you are using `sortby` with `sort=DESC`.
 */
@property(nonatomic, assign) BOOL tsAscending;

/** Timezone offset value. */
@property(nonatomic, copy, nullable) NSString *tzo;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Stats.
 *
 *  Retrieve metrics grouped by dimensions in host level. The types of metrics
 *  you can retrieve include traffic, message counts, API call latency, response
 *  size, and cache hits and counts. Dimensions let you view metrics in
 *  meaningful groups. You can optionally pass dimensions as path parameters to
 *  the `stats` API. If dimensions are not specified, the metrics are computed
 *  on the entire set of data for the given time range.
 *
 *  @param name Required. Resource name for which the interactive query will be
 *    executed. Use the following format in your request:
 *    `organizations/{org}/hostStats/{dimensions}` Dimensions let you view
 *    metrics in meaningful groupings, such as `apiproxy`, `target_host`. The
 *    value of dimensions should be a comma-separated list as shown below
 *    `organizations/{org}/hostStats/apiproxy,request_verb`
 *
 *  @return GTLRApigeeQuery_OrganizationsHostStatsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a new attachment of an environment to an instance. **Note:** Not
 *  supported for Apigee hybrid.
 *
 *  Method: apigee.organizations.instances.attachments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesAttachmentsCreate : GTLRApigeeQuery

/**
 *  Required. Name of the instance. Use the following structure in your request:
 *  `organizations/{org}/instances/{instance}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Creates a new attachment of an environment to an instance. **Note:** Not
 *  supported for Apigee hybrid.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1InstanceAttachment to
 *    include in the query.
 *  @param parent Required. Name of the instance. Use the following structure in
 *    your request: `organizations/{org}/instances/{instance}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesAttachmentsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1InstanceAttachment *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an attachment. **Note:** Not supported for Apigee hybrid.
 *
 *  Method: apigee.organizations.instances.attachments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesAttachmentsDelete : GTLRApigeeQuery

/**
 *  Required. Name of the attachment. Use the following structure in your
 *  request:
 *  `organizations/{org}/instances/{instance}/attachments/{attachment}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Deletes an attachment. **Note:** Not supported for Apigee hybrid.
 *
 *  @param name Required. Name of the attachment. Use the following structure in
 *    your request:
 *    `organizations/{org}/instances/{instance}/attachments/{attachment}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesAttachmentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets an attachment. **Note:** Not supported for Apigee hybrid.
 *
 *  Method: apigee.organizations.instances.attachments.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesAttachmentsGet : GTLRApigeeQuery

/**
 *  Required. Name of the attachment. Use the following structure in your
 *  request: `organizations/{org}/instances/{instance}/attachments/{attachment}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1InstanceAttachment.
 *
 *  Gets an attachment. **Note:** Not supported for Apigee hybrid.
 *
 *  @param name Required. Name of the attachment. Use the following structure in
 *    your request:
 *    `organizations/{org}/instances/{instance}/attachments/{attachment}`
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesAttachmentsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all attachments to an instance. **Note:** Not supported for Apigee
 *  hybrid.
 *
 *  Method: apigee.organizations.instances.attachments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesAttachmentsList : GTLRApigeeQuery

/** Maximum number of instance attachments to return. Defaults to 25. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Page token, returned by a previous ListInstanceAttachments call, that you
 *  can use to retrieve the next page of content.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Name of the organization. Use the following structure in your
 *  request: `organizations/{org}/instances/{instance}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListInstanceAttachmentsResponse.
 *
 *  Lists all attachments to an instance. **Note:** Not supported for Apigee
 *  hybrid.
 *
 *  @param parent Required. Name of the organization. Use the following
 *    structure in your request: `organizations/{org}/instances/{instance}`
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesAttachmentsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Creates a new canary evaluation for an organization.
 *
 *  Method: apigee.organizations.instances.canaryevaluations.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesCanaryevaluationsCreate : GTLRApigeeQuery

/**
 *  Required. Name of the organization. Use the following structure in your
 *  request: `organizations/{org}/instances/{instance}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Creates a new canary evaluation for an organization.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1CanaryEvaluation to
 *    include in the query.
 *  @param parent Required. Name of the organization. Use the following
 *    structure in your request: `organizations/{org}/instances/{instance}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesCanaryevaluationsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1CanaryEvaluation *)object
                         parent:(NSString *)parent;

@end

/**
 *  Gets a CanaryEvaluation for an organization.
 *
 *  Method: apigee.organizations.instances.canaryevaluations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesCanaryevaluationsGet : GTLRApigeeQuery

/**
 *  Required. Name of the CanaryEvaluation. Use the following structure in your
 *  request: `organizations/{org}/instances/ * /canaryevaluations/{evaluation}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1CanaryEvaluation.
 *
 *  Gets a CanaryEvaluation for an organization.
 *
 *  @param name Required. Name of the CanaryEvaluation. Use the following
 *    structure in your request: `organizations/{org}/instances/ *
 *    /canaryevaluations/{evaluation}`
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesCanaryevaluationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates an Apigee runtime instance. The instance is accessible from the
 *  authorized network configured on the organization. **Note:** Not supported
 *  for Apigee hybrid.
 *
 *  Method: apigee.organizations.instances.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesCreate : GTLRApigeeQuery

/**
 *  Required. Name of the organization. Use the following structure in your
 *  request: `organizations/{org}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Creates an Apigee runtime instance. The instance is accessible from the
 *  authorized network configured on the organization. **Note:** Not supported
 *  for Apigee hybrid.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Instance to include in
 *    the query.
 *  @param parent Required. Name of the organization. Use the following
 *    structure in your request: `organizations/{org}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Instance *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an Apigee runtime instance. The instance stops serving requests and
 *  the runtime data is deleted. **Note:** Not supported for Apigee hybrid.
 *
 *  Method: apigee.organizations.instances.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesDelete : GTLRApigeeQuery

/**
 *  Required. Name of the instance. Use the following structure in your request:
 *  `organizations/{org}/instances/{instance}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Deletes an Apigee runtime instance. The instance stops serving requests and
 *  the runtime data is deleted. **Note:** Not supported for Apigee hybrid.
 *
 *  @param name Required. Name of the instance. Use the following structure in
 *    your request: `organizations/{org}/instances/{instance}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the details for an Apigee runtime instance. **Note:** Not supported for
 *  Apigee hybrid.
 *
 *  Method: apigee.organizations.instances.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesGet : GTLRApigeeQuery

/**
 *  Required. Name of the instance. Use the following structure in your request:
 *  `organizations/{org}/instances/{instance}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Instance.
 *
 *  Gets the details for an Apigee runtime instance. **Note:** Not supported for
 *  Apigee hybrid.
 *
 *  @param name Required. Name of the instance. Use the following structure in
 *    your request: `organizations/{org}/instances/{instance}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all Apigee runtime instances for the organization. **Note:** Not
 *  supported for Apigee hybrid.
 *
 *  Method: apigee.organizations.instances.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesList : GTLRApigeeQuery

/** Maximum number of instances to return. Defaults to 25. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Page token, returned from a previous ListInstances call, that you can use to
 *  retrieve the next page of content.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Name of the organization. Use the following structure in your
 *  request: `organizations/{org}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListInstancesResponse.
 *
 *  Lists all Apigee runtime instances for the organization. **Note:** Not
 *  supported for Apigee hybrid.
 *
 *  @param parent Required. Name of the organization. Use the following
 *    structure in your request: `organizations/{org}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Activates the NAT address. The Apigee instance can now use this for Internet
 *  egress traffic. **Note:** Not supported for Apigee hybrid.
 *
 *  Method: apigee.organizations.instances.natAddresses.activate
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesNatAddressesActivate : GTLRApigeeQuery

/**
 *  Required. Name of the nat address. Use the following structure in your
 *  request:
 *  `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Activates the NAT address. The Apigee instance can now use this for Internet
 *  egress traffic. **Note:** Not supported for Apigee hybrid.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1ActivateNatAddressRequest
 *    to include in the query.
 *  @param name Required. Name of the nat address. Use the following structure
 *    in your request:
 *    `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesNatAddressesActivate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1ActivateNatAddressRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a NAT address. The address is created in the RESERVED state and a
 *  static external IP address will be provisioned. At this time, the instance
 *  will not use this IP address for Internet egress traffic. The address can be
 *  activated for use once any required firewall IP whitelisting has been
 *  completed. **Note:** Not supported for Apigee hybrid.
 *
 *  Method: apigee.organizations.instances.natAddresses.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesNatAddressesCreate : GTLRApigeeQuery

/**
 *  Required. Name of the instance. Use the following structure in your request:
 *  `organizations/{org}/instances/{instance}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Creates a NAT address. The address is created in the RESERVED state and a
 *  static external IP address will be provisioned. At this time, the instance
 *  will not use this IP address for Internet egress traffic. The address can be
 *  activated for use once any required firewall IP whitelisting has been
 *  completed. **Note:** Not supported for Apigee hybrid.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1NatAddress to include in
 *    the query.
 *  @param parent Required. Name of the instance. Use the following structure in
 *    your request: `organizations/{org}/instances/{instance}`
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesNatAddressesCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1NatAddress *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes the NAT address. Connections that are actively using the address are
 *  drained before it is removed. **Note:** Not supported for Apigee hybrid.
 *
 *  Method: apigee.organizations.instances.natAddresses.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesNatAddressesDelete : GTLRApigeeQuery

/**
 *  Required. Name of the nat address. Use the following structure in your
 *  request:
 *  `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Deletes the NAT address. Connections that are actively using the address are
 *  drained before it is removed. **Note:** Not supported for Apigee hybrid.
 *
 *  @param name Required. Name of the nat address. Use the following structure
 *    in your request:
 *    `organizations/{org}/instances/{instances}/natAddresses/{nataddress}``
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesNatAddressesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the details of a NAT address. **Note:** Not supported for Apigee
 *  hybrid.
 *
 *  Method: apigee.organizations.instances.natAddresses.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesNatAddressesGet : GTLRApigeeQuery

/**
 *  Required. Name of the nat address. Use the following structure in your
 *  request:
 *  `organizations/{org}/instances/{instances}/natAddresses/{nataddress}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1NatAddress.
 *
 *  Gets the details of a NAT address. **Note:** Not supported for Apigee
 *  hybrid.
 *
 *  @param name Required. Name of the nat address. Use the following structure
 *    in your request:
 *    `organizations/{org}/instances/{instances}/natAddresses/{nataddress}`
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesNatAddressesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the NAT addresses for an Apigee instance. **Note:** Not supported for
 *  Apigee hybrid.
 *
 *  Method: apigee.organizations.instances.natAddresses.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesNatAddressesList : GTLRApigeeQuery

/** Maximum number of natAddresses to return. Defaults to 25. */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Page token, returned from a previous ListNatAddresses call, that you can use
 *  to retrieve the next page of content.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Name of the instance. Use the following structure in your request:
 *  `organizations/{org}/instances/{instance}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListNatAddressesResponse.
 *
 *  Lists the NAT addresses for an Apigee instance. **Note:** Not supported for
 *  Apigee hybrid.
 *
 *  @param parent Required. Name of the instance. Use the following structure in
 *    your request: `organizations/{org}/instances/{instance}`
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesNatAddressesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates an Apigee runtime instance. You can update the fields described in
 *  NodeConfig. No other fields will be updated. **Note:** Not supported for
 *  Apigee hybrid.
 *
 *  Method: apigee.organizations.instances.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesPatch : GTLRApigeeQuery

/**
 *  Required. Name of the instance. Use the following structure in your request:
 *  `organizations/{org}/instances/{instance}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  List of fields to be updated.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Updates an Apigee runtime instance. You can update the fields described in
 *  NodeConfig. No other fields will be updated. **Note:** Not supported for
 *  Apigee hybrid.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Instance to include in
 *    the query.
 *  @param name Required. Name of the instance. Use the following structure in
 *    your request: `organizations/{org}/instances/{instance}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesPatch
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Instance *)object
                           name:(NSString *)name;

@end

/**
 *  Reports the latest status for a runtime instance.
 *
 *  Method: apigee.organizations.instances.reportStatus
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsInstancesReportStatus : GTLRApigeeQuery

/**
 *  The name of the instance reporting this status. For SaaS the request will be
 *  rejected if no instance exists under this name. Format is
 *  organizations/{org}/instances/{instance}
 */
@property(nonatomic, copy, nullable) NSString *instance;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ReportInstanceStatusResponse.
 *
 *  Reports the latest status for a runtime instance.
 *
 *  @param object The @c
 *    GTLRApigee_GoogleCloudApigeeV1ReportInstanceStatusRequest to include in
 *    the query.
 *  @param instance The name of the instance reporting this status. For SaaS the
 *    request will be rejected if no instance exists under this name. Format is
 *    organizations/{org}/instances/{instance}
 *
 *  @return GTLRApigeeQuery_OrganizationsInstancesReportStatus
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1ReportInstanceStatusRequest *)object
                       instance:(NSString *)instance;

@end

/**
 *  Creates a key value map in an organization.
 *
 *  Method: apigee.organizations.keyvaluemaps.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsKeyvaluemapsCreate : GTLRApigeeQuery

/**
 *  Required. Name of the organization in which to create the key value map
 *  file. Use the following structure in your request: `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1KeyValueMap.
 *
 *  Creates a key value map in an organization.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1KeyValueMap to include in
 *    the query.
 *  @param parent Required. Name of the organization in which to create the key
 *    value map file. Use the following structure in your request:
 *    `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsKeyvaluemapsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1KeyValueMap *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a key value map from an organization.
 *
 *  Method: apigee.organizations.keyvaluemaps.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsKeyvaluemapsDelete : GTLRApigeeQuery

/**
 *  Required. Name of the key value map. Use the following structure in your
 *  request: `organizations/{org}/keyvaluemaps/{keyvaluemap}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1KeyValueMap.
 *
 *  Deletes a key value map from an organization.
 *
 *  @param name Required. Name of the key value map. Use the following structure
 *    in your request: `organizations/{org}/keyvaluemaps/{keyvaluemap}`
 *
 *  @return GTLRApigeeQuery_OrganizationsKeyvaluemapsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates key value entries in a key value map scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  Method: apigee.organizations.keyvaluemaps.entries.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsKeyvaluemapsEntriesCreate : GTLRApigeeQuery

/**
 *  Required. Scope as indicated by the URI in which to create the key value map
 *  entry. Use **one** of the following structures in your request: *
 *  `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
 *  `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
 *  * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1KeyValueEntry.
 *
 *  Creates key value entries in a key value map scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1KeyValueEntry to include
 *    in the query.
 *  @param parent Required. Scope as indicated by the URI in which to create the
 *    key value map entry. Use **one** of the following structures in your
 *    request: *
 *    `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
 *    `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
 *    * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsKeyvaluemapsEntriesCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1KeyValueEntry *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a key value entry from a key value map scoped to an organization,
 *  environment, or API proxy. **Notes:** * After you delete the key value
 *  entry, the policy consuming the entry will continue to function with its
 *  cached values for a few minutes. This is expected behavior. * Supported for
 *  Apigee hybrid 1.8.x and higher.
 *
 *  Method: apigee.organizations.keyvaluemaps.entries.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsKeyvaluemapsEntriesDelete : GTLRApigeeQuery

/**
 *  Required. Scope as indicated by the URI in which to delete the key value map
 *  entry. Use **one** of the following structures in your request: *
 *  `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *  *
 *  `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}`
 *  * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1KeyValueEntry.
 *
 *  Deletes a key value entry from a key value map scoped to an organization,
 *  environment, or API proxy. **Notes:** * After you delete the key value
 *  entry, the policy consuming the entry will continue to function with its
 *  cached values for a few minutes. This is expected behavior. * Supported for
 *  Apigee hybrid 1.8.x and higher.
 *
 *  @param name Required. Scope as indicated by the URI in which to delete the
 *    key value map entry. Use **one** of the following structures in your
 *    request: *
 *    `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *    *
 *    `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}`
 *    *
 *    `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsKeyvaluemapsEntriesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Get the key value entry value for a key value map scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  Method: apigee.organizations.keyvaluemaps.entries.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsKeyvaluemapsEntriesGet : GTLRApigeeQuery

/**
 *  Required. Scope as indicated by the URI in which to fetch the key value map
 *  entry/value. Use **one** of the following structures in your request: *
 *  `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *  *
 *  `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}`
 *  * `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1KeyValueEntry.
 *
 *  Get the key value entry value for a key value map scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  @param name Required. Scope as indicated by the URI in which to fetch the
 *    key value map entry/value. Use **one** of the following structures in your
 *    request: *
 *    `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *    *
 *    `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}/entries/{entry}`
 *    *
 *    `organizations/{organization}/keyvaluemaps/{keyvaluemap}/entries/{entry}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsKeyvaluemapsEntriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists key value entries for key values maps scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  Method: apigee.organizations.keyvaluemaps.entries.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsKeyvaluemapsEntriesList : GTLRApigeeQuery

/**
 *  Optional. Maximum number of key value entries to return. If unspecified, at
 *  most 100 entries will be returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. Page token. If provides, must be a valid key value entry returned
 *  from a previous call that can be used to retrieve the next page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. Scope as indicated by the URI in which to list key value maps. Use
 *  **one** of the following structures in your request: *
 *  `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
 *  `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
 *  * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListKeyValueEntriesResponse.
 *
 *  Lists key value entries for key values maps scoped to an organization,
 *  environment, or API proxy. **Note**: Supported for Apigee hybrid 1.8.x and
 *  higher.
 *
 *  @param parent Required. Scope as indicated by the URI in which to list key
 *    value maps. Use **one** of the following structures in your request: *
 *    `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`. *
 *    `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`
 *    * `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsKeyvaluemapsEntriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Lists the Apigee organizations and associated GCP projects that you have
 *  permission to access. See [Understanding
 *  organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).
 *
 *  Method: apigee.organizations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsList : GTLRApigeeQuery

/** Required. Use the following structure in your request: `organizations` */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListOrganizationsResponse.
 *
 *  Lists the Apigee organizations and associated GCP projects that you have
 *  permission to access. See [Understanding
 *  organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).
 *
 *  @param parent Required. Use the following structure in your request:
 *    `organizations`
 *
 *  @return GTLRApigeeQuery_OrganizationsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  Method: apigee.organizations.operations.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsOperationsGet : GTLRApigeeQuery

/** The name of the operation resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Gets the latest state of a long-running operation. Clients can use this
 *  method to poll the operation result at intervals as recommended by the API
 *  service.
 *
 *  @param name The name of the operation resource.
 *
 *  @return GTLRApigeeQuery_OrganizationsOperationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  Method: apigee.organizations.operations.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsOperationsList : GTLRApigeeQuery

/** The standard list filter. */
@property(nonatomic, copy, nullable) NSString *filter;

/** The name of the operation's parent resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** The standard list page size. */
@property(nonatomic, assign) NSInteger pageSize;

/** The standard list page token. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningListOperationsResponse.
 *
 *  Lists operations that match the specified filter in the request. If the
 *  server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the
 *  `name` binding allows API services to override the binding to use different
 *  resource name schemes, such as `users/ * /operations`. To override the
 *  binding, API services can add a binding such as `"/v1/{name=users/
 *  *}/operations"` to their service configuration. For backwards compatibility,
 *  the default name includes the operations collection id, however overriding
 *  users must ensure the name binding is the parent resource, without the
 *  operations collection id.
 *
 *  @param name The name of the operation's parent resource.
 *
 *  @return GTLRApigeeQuery_OrganizationsOperationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Similar to GetHostStats except that the response is less verbose.
 *
 *  Method: apigee.organizations.optimizedHostStats.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsOptimizedHostStatsGet : GTLRApigeeQuery

/** No longer used by Apigee. Supported for backwards compatibility. */
@property(nonatomic, copy, nullable) NSString *accuracy;

/** Required. Hostname for which the interactive query will be executed. */
@property(nonatomic, copy, nullable) NSString *envgroupHostname;

/** Filter that enables you to drill-down on specific dimension values. */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Maximum number of result items to return. The default and maximum value that
 *  can be returned is 14400.
 */
@property(nonatomic, copy, nullable) NSString *limit;

/**
 *  Required. Resource name for which the interactive query will be executed.
 *  Use the following format in your request:
 *  `organizations/{organization_id}/optimizedHostStats/{dimensions}` Dimensions
 *  let you view metrics in meaningful groupings, such as `apiproxy`,
 *  `target_host`. The value of dimensions should be a comma-separated list as
 *  shown below: `organizations/{org}/optimizedHostStats/apiproxy,request_verb`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Offset value. Use `offset` with `limit` to enable pagination of results. For
 *  example, to display results 11-20, set limit to `10` and offset to `10`.
 */
@property(nonatomic, copy, nullable) NSString *offset;

/** No longer used by Apigee. Supported for backwards compatibility. */
@property(nonatomic, assign) BOOL realtime;

/**
 *  Required. Comma-separated list of metrics. For example:
 *  `sum(message_count),sum(error_count)`
 */
@property(nonatomic, copy, nullable) NSString *select;

/**
 *  Flag that specifies whether the sort order should be ascending or
 *  descending. Valid values include `DESC` and `ASC`.
 */
@property(nonatomic, copy, nullable) NSString *sort;

/** Comma-separated list of columns used to sort the final result. */
@property(nonatomic, copy, nullable) NSString *sortby;

/**
 *  Required. Time interval for the interactive query. Time range is specified
 *  in GMT as `start~end`. For example: `04/15/2017 00:00~05/15/2017 23:59`.
 */
@property(nonatomic, copy, nullable) NSString *timeRange;

/**
 *  Granularity of metrics returned. Valid values include: `second`, `minute`,
 *  `hour`, `day`, `week`, or `month`.
 */
@property(nonatomic, copy, nullable) NSString *timeUnit;

/**
 *  Top number of results to return. For example, to return the top 5 results,
 *  set `topk=5`.
 */
@property(nonatomic, copy, nullable) NSString *topk;

/**
 *  Flag that specifies whether to list timestamps in ascending (`true`) or
 *  descending (`false`) order. Apigee recommends that you set this value to
 *  `true` if you are using `sortby` with `sort=DESC`.
 */
@property(nonatomic, assign) BOOL tsAscending;

/** Timezone offset value. */
@property(nonatomic, copy, nullable) NSString *tzo;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1OptimizedStats.
 *
 *  Similar to GetHostStats except that the response is less verbose.
 *
 *  @param name Required. Resource name for which the interactive query will be
 *    executed. Use the following format in your request:
 *    `organizations/{organization_id}/optimizedHostStats/{dimensions}`
 *    Dimensions let you view metrics in meaningful groupings, such as
 *    `apiproxy`, `target_host`. The value of dimensions should be a
 *    comma-separated list as shown below:
 *    `organizations/{org}/optimizedHostStats/apiproxy,request_verb`
 *
 *  @return GTLRApigeeQuery_OrganizationsOptimizedHostStatsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Creates a Custom Report for an Organization. A Custom Report provides Apigee
 *  Customers to create custom dashboards in addition to the standard dashboards
 *  which are provided. The Custom Report in its simplest form contains
 *  specifications about metrics, dimensions and filters. It is important to
 *  note that the custom report by itself does not provide an executable entity.
 *  The Edge UI converts the custom report definition into an analytics query
 *  and displays the result in a chart.
 *
 *  Method: apigee.organizations.reports.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsReportsCreate : GTLRApigeeQuery

/**
 *  Required. The parent organization name under which the Custom Report will be
 *  created. Must be of the form: `organizations/{organization_id}/reports`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1CustomReport.
 *
 *  Creates a Custom Report for an Organization. A Custom Report provides Apigee
 *  Customers to create custom dashboards in addition to the standard dashboards
 *  which are provided. The Custom Report in its simplest form contains
 *  specifications about metrics, dimensions and filters. It is important to
 *  note that the custom report by itself does not provide an executable entity.
 *  The Edge UI converts the custom report definition into an analytics query
 *  and displays the result in a chart.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1CustomReport to include
 *    in the query.
 *  @param parent Required. The parent organization name under which the Custom
 *    Report will be created. Must be of the form:
 *    `organizations/{organization_id}/reports`
 *
 *  @return GTLRApigeeQuery_OrganizationsReportsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1CustomReport *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes an existing custom report definition
 *
 *  Method: apigee.organizations.reports.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsReportsDelete : GTLRApigeeQuery

/**
 *  Required. Custom Report name of the form:
 *  `organizations/{organization_id}/reports/{report_name}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1DeleteCustomReportResponse.
 *
 *  Deletes an existing custom report definition
 *
 *  @param name Required. Custom Report name of the form:
 *    `organizations/{organization_id}/reports/{report_name}`
 *
 *  @return GTLRApigeeQuery_OrganizationsReportsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Retrieve a custom report definition.
 *
 *  Method: apigee.organizations.reports.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsReportsGet : GTLRApigeeQuery

/**
 *  Required. Custom Report name of the form:
 *  `organizations/{organization_id}/reports/{report_name}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1CustomReport.
 *
 *  Retrieve a custom report definition.
 *
 *  @param name Required. Custom Report name of the form:
 *    `organizations/{organization_id}/reports/{report_name}`
 *
 *  @return GTLRApigeeQuery_OrganizationsReportsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Return a list of Custom Reports
 *
 *  Method: apigee.organizations.reports.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsReportsList : GTLRApigeeQuery

/** Set to 'true' to get expanded details about each custom report. */
@property(nonatomic, assign) BOOL expand;

/**
 *  Required. The parent organization name under which the API product will be
 *  listed `organizations/{organization_id}/reports`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListCustomReportsResponse.
 *
 *  Return a list of Custom Reports
 *
 *  @param parent Required. The parent organization name under which the API
 *    product will be listed `organizations/{organization_id}/reports`
 *
 *  @return GTLRApigeeQuery_OrganizationsReportsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Update an existing custom report definition
 *
 *  Method: apigee.organizations.reports.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsReportsUpdate : GTLRApigeeQuery

/**
 *  Required. Custom Report name of the form:
 *  `organizations/{organization_id}/reports/{report_name}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1CustomReport.
 *
 *  Update an existing custom report definition
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1CustomReport to include
 *    in the query.
 *  @param name Required. Custom Report name of the form:
 *    `organizations/{organization_id}/reports/{report_name}`
 *
 *  @return GTLRApigeeQuery_OrganizationsReportsUpdate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1CustomReport *)object
                           name:(NSString *)name;

@end

/**
 *  ComputeEnvironmentScores calculates scores for requested time range for the
 *  specified security profile and environment.
 *
 *  Method: apigee.organizations.securityProfiles.environments.computeEnvironmentScores
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSecurityProfilesEnvironmentsComputeEnvironmentScores : GTLRApigeeQuery

/**
 *  Required. Name of organization and environment and profile id for which
 *  score needs to be computed. Format:
 *  organizations/{org}/securityProfiles/{profile}/environments/{env}
 */
@property(nonatomic, copy, nullable) NSString *profileEnvironment;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ComputeEnvironmentScoresResponse.
 *
 *  ComputeEnvironmentScores calculates scores for requested time range for the
 *  specified security profile and environment.
 *
 *  @param object The @c
 *    GTLRApigee_GoogleCloudApigeeV1ComputeEnvironmentScoresRequest to include
 *    in the query.
 *  @param profileEnvironment Required. Name of organization and environment and
 *    profile id for which score needs to be computed. Format:
 *    organizations/{org}/securityProfiles/{profile}/environments/{env}
 *
 *  @return GTLRApigeeQuery_OrganizationsSecurityProfilesEnvironmentsComputeEnvironmentScores
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1ComputeEnvironmentScoresRequest *)object
             profileEnvironment:(NSString *)profileEnvironment;

@end

/**
 *  CreateSecurityProfileEnvironmentAssociation creates profile environment
 *  association i.e. attaches environment to security profile.
 *
 *  Method: apigee.organizations.securityProfiles.environments.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSecurityProfilesEnvironmentsCreate : GTLRApigeeQuery

/**
 *  Required. Name of organization and security profile ID. Format:
 *  organizations/{org}/securityProfiles/{profile}
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c
 *  GTLRApigee_GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation.
 *
 *  CreateSecurityProfileEnvironmentAssociation creates profile environment
 *  association i.e. attaches environment to security profile.
 *
 *  @param object The @c
 *    GTLRApigee_GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation to
 *    include in the query.
 *  @param parent Required. Name of organization and security profile ID.
 *    Format: organizations/{org}/securityProfiles/{profile}
 *
 *  @return GTLRApigeeQuery_OrganizationsSecurityProfilesEnvironmentsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1SecurityProfileEnvironmentAssociation *)object
                         parent:(NSString *)parent;

@end

/**
 *  DeleteSecurityProfileEnvironmentAssociation removes profile environment
 *  association i.e. detaches environment from security profile.
 *
 *  Method: apigee.organizations.securityProfiles.environments.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSecurityProfilesEnvironmentsDelete : GTLRApigeeQuery

/**
 *  Required. The name of the environment attachment to delete. Format:
 *  organizations/{org}/securityProfiles/{profile}/environments/{env}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleProtobufEmpty.
 *
 *  DeleteSecurityProfileEnvironmentAssociation removes profile environment
 *  association i.e. detaches environment from security profile.
 *
 *  @param name Required. The name of the environment attachment to delete.
 *    Format: organizations/{org}/securityProfiles/{profile}/environments/{env}
 *
 *  @return GTLRApigeeQuery_OrganizationsSecurityProfilesEnvironmentsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  GetSecurityProfile gets the specified security profile. Returns NOT_FOUND if
 *  security profile is not present for the specified organization.
 *
 *  Method: apigee.organizations.securityProfiles.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSecurityProfilesGet : GTLRApigeeQuery

/**
 *  Required. Security profile in the following format:
 *  `organizations/{org}/securityProfiles/{profile}'. Profile may optionally
 *  contain revision ID. If revision ID is not provided, the response will
 *  contain latest revision by default. Example:
 *  organizations/testOrg/securityProfiles/testProfile\@5
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1SecurityProfile.
 *
 *  GetSecurityProfile gets the specified security profile. Returns NOT_FOUND if
 *  security profile is not present for the specified organization.
 *
 *  @param name Required. Security profile in the following format:
 *    `organizations/{org}/securityProfiles/{profile}'. Profile may optionally
 *    contain revision ID. If revision ID is not provided, the response will
 *    contain latest revision by default. Example:
 *    organizations/testOrg/securityProfiles/testProfile\@5
 *
 *  @return GTLRApigeeQuery_OrganizationsSecurityProfilesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  ListSecurityProfiles lists all the security profiles associated with the org
 *  including attached and unattached profiles.
 *
 *  Method: apigee.organizations.securityProfiles.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSecurityProfilesList : GTLRApigeeQuery

/**
 *  The maximum number of profiles to return. The service may return fewer than
 *  this value. If unspecified, at most 50 profiles will be returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListSecurityProfiles` call. Provide
 *  this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. For a specific organization, list of all the security profiles.
 *  Format: `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListSecurityProfilesResponse.
 *
 *  ListSecurityProfiles lists all the security profiles associated with the org
 *  including attached and unattached profiles.
 *
 *  @param parent Required. For a specific organization, list of all the
 *    security profiles. Format: `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSecurityProfilesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  ListSecurityProfileRevisions lists all the revisions of the security
 *  profile.
 *
 *  Method: apigee.organizations.securityProfiles.listRevisions
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSecurityProfilesListRevisions : GTLRApigeeQuery

/**
 *  Required. For a specific profile, list all the revisions. Format:
 *  `organizations/{org}/securityProfiles/{profile}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The maximum number of profile revisions to return. The service may return
 *  fewer than this value. If unspecified, at most 50 revisions will be
 *  returned.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  A page token, received from a previous `ListSecurityProfileRevisions` call.
 *  Provide this to retrieve the subsequent page.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Fetches a @c
 *  GTLRApigee_GoogleCloudApigeeV1ListSecurityProfileRevisionsResponse.
 *
 *  ListSecurityProfileRevisions lists all the revisions of the security
 *  profile.
 *
 *  @param name Required. For a specific profile, list all the revisions.
 *    Format: `organizations/{org}/securityProfiles/{profile}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSecurityProfilesListRevisions
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Configures the add-ons for the Apigee organization. The existing add-on
 *  configuration will be fully replaced.
 *
 *  Method: apigee.organizations.setAddons
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSetAddons : GTLRApigeeQuery

/**
 *  Required. Name of the organization. Use the following structure in your
 *  request: `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *org;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Configures the add-ons for the Apigee organization. The existing add-on
 *  configuration will be fully replaced.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1SetAddonsRequest to
 *    include in the query.
 *  @param org Required. Name of the organization. Use the following structure
 *    in your request: `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSetAddons
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1SetAddonsRequest *)object
                            org:(NSString *)org;

@end

/**
 *  Sets the permissions required to allow the Synchronizer to download
 *  environment data from the control plane. You must call this API to enable
 *  proper functioning of hybrid. Pass the ETag when calling
 *  `setSyncAuthorization` to ensure that you are updating the correct version.
 *  To get an ETag, call [getSyncAuthorization](getSyncAuthorization). If you
 *  don't pass the ETag in the call to `setSyncAuthorization`, then the existing
 *  authorization is overwritten indiscriminately. For more information, see
 *  [Configure the
 *  Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access).
 *  **Note**: Available to Apigee hybrid only.
 *
 *  Method: apigee.organizations.setSyncAuthorization
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSetSyncAuthorization : GTLRApigeeQuery

/**
 *  Required. Name of the Apigee organization. Use the following structure in
 *  your request: `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1SyncAuthorization.
 *
 *  Sets the permissions required to allow the Synchronizer to download
 *  environment data from the control plane. You must call this API to enable
 *  proper functioning of hybrid. Pass the ETag when calling
 *  `setSyncAuthorization` to ensure that you are updating the correct version.
 *  To get an ETag, call [getSyncAuthorization](getSyncAuthorization). If you
 *  don't pass the ETag in the call to `setSyncAuthorization`, then the existing
 *  authorization is overwritten indiscriminately. For more information, see
 *  [Configure the
 *  Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access).
 *  **Note**: Available to Apigee hybrid only.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1SyncAuthorization to
 *    include in the query.
 *  @param name Required. Name of the Apigee organization. Use the following
 *    structure in your request: `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSetSyncAuthorization
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1SyncAuthorization *)object
                           name:(NSString *)name;

@end

/**
 *  Uploads a ZIP-formatted shared flow configuration bundle to an organization.
 *  If the shared flow already exists, this creates a new revision of it. If the
 *  shared flow does not exist, this creates it. Once imported, the shared flow
 *  revision must be deployed before it can be accessed at runtime. The size
 *  limit of a shared flow bundle is 15 MB.
 *
 *  Method: apigee.organizations.sharedflows.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSharedflowsCreate : GTLRApigeeQuery

/** Required. Must be set to either `import` or `validate`. */
@property(nonatomic, copy, nullable) NSString *action;

/** Required. The name to give the shared flow */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The name of the parent organization under which to create the
 *  shared flow. Must be of the form: `organizations/{organization_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1SharedFlowRevision.
 *
 *  Uploads a ZIP-formatted shared flow configuration bundle to an organization.
 *  If the shared flow already exists, this creates a new revision of it. If the
 *  shared flow does not exist, this creates it. Once imported, the shared flow
 *  revision must be deployed before it can be accessed at runtime. The size
 *  limit of a shared flow bundle is 15 MB.
 *
 *  @param object The @c GTLRApigee_GoogleApiHttpBody to include in the query.
 *  @param parent Required. The name of the parent organization under which to
 *    create the shared flow. Must be of the form:
 *    `organizations/{organization_id}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSharedflowsCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleApiHttpBody *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a shared flow and all it's revisions. The shared flow must be
 *  undeployed before you can delete it.
 *
 *  Method: apigee.organizations.sharedflows.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSharedflowsDelete : GTLRApigeeQuery

/**
 *  Required. shared flow name of the form:
 *  `organizations/{organization_id}/sharedflows/{shared_flow_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1SharedFlow.
 *
 *  Deletes a shared flow and all it's revisions. The shared flow must be
 *  undeployed before you can delete it.
 *
 *  @param name Required. shared flow name of the form:
 *    `organizations/{organization_id}/sharedflows/{shared_flow_id}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSharedflowsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all deployments of a shared flow.
 *
 *  Method: apigee.organizations.sharedflows.deployments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSharedflowsDeploymentsList : GTLRApigeeQuery

/**
 *  Required. Name of the shared flow for which to return deployment information
 *  in the following format: `organizations/{org}/sharedflows/{sharedflow}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListDeploymentsResponse.
 *
 *  Lists all deployments of a shared flow.
 *
 *  @param parent Required. Name of the shared flow for which to return
 *    deployment information in the following format:
 *    `organizations/{org}/sharedflows/{sharedflow}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSharedflowsDeploymentsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a shared flow by name, including a list of its revisions.
 *
 *  Method: apigee.organizations.sharedflows.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSharedflowsGet : GTLRApigeeQuery

/**
 *  Required. The name of the shared flow to get. Must be of the form:
 *  `organizations/{organization_id}/sharedflows/{shared_flow_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1SharedFlow.
 *
 *  Gets a shared flow by name, including a list of its revisions.
 *
 *  @param name Required. The name of the shared flow to get. Must be of the
 *    form: `organizations/{organization_id}/sharedflows/{shared_flow_id}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSharedflowsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all shared flows in the organization.
 *
 *  Method: apigee.organizations.sharedflows.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSharedflowsList : GTLRApigeeQuery

/** Indicates whether to include shared flow metadata in the response. */
@property(nonatomic, assign) BOOL includeMetaData;

/** Indicates whether to include a list of revisions in the response. */
@property(nonatomic, assign) BOOL includeRevisions;

/**
 *  Required. The name of the parent organization under which to get shared
 *  flows. Must be of the form: `organizations/{organization_id}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListSharedFlowsResponse.
 *
 *  Lists all shared flows in the organization.
 *
 *  @param parent Required. The name of the parent organization under which to
 *    get shared flows. Must be of the form: `organizations/{organization_id}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSharedflowsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Deletes a shared flow and all associated policies, resources, and revisions.
 *  You must undeploy the shared flow before deleting it.
 *
 *  Method: apigee.organizations.sharedflows.revisions.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSharedflowsRevisionsDelete : GTLRApigeeQuery

/**
 *  Required. The name of the shared flow revision to delete. Must be of the
 *  form:
 *  `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1SharedFlowRevision.
 *
 *  Deletes a shared flow and all associated policies, resources, and revisions.
 *  You must undeploy the shared flow before deleting it.
 *
 *  @param name Required. The name of the shared flow revision to delete. Must
 *    be of the form:
 *    `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSharedflowsRevisionsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists all deployments of a shared flow revision.
 *
 *  Method: apigee.organizations.sharedflows.revisions.deployments.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSharedflowsRevisionsDeploymentsList : GTLRApigeeQuery

/**
 *  Required. Name of the API proxy revision for which to return deployment
 *  information in the following format:
 *  `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListDeploymentsResponse.
 *
 *  Lists all deployments of a shared flow revision.
 *
 *  @param parent Required. Name of the API proxy revision for which to return
 *    deployment information in the following format:
 *    `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.
 *
 *  @return GTLRApigeeQuery_OrganizationsSharedflowsRevisionsDeploymentsList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Gets a revision of a shared flow. To download the shared flow configuration
 *  bundle for the specified revision as a zip file, set the `format` query
 *  parameter to `bundle`. If you are using curl, specify `-o filename.zip` to
 *  save the output to a file; otherwise, it displays to `stdout`. Then, develop
 *  the shared flow configuration locally and upload the updated sharedFlow
 *  configuration revision, as described in
 *  [updateSharedFlowRevision](updateSharedFlowRevision).
 *
 *  Method: apigee.organizations.sharedflows.revisions.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSharedflowsRevisionsGet : GTLRApigeeQuery

/**
 *  Specify `bundle` to export the contents of the shared flow bundle.
 *  Otherwise, the bundle metadata is returned.
 */
@property(nonatomic, copy, nullable) NSString *format;

/**
 *  Required. The name of the shared flow revision to get. Must be of the form:
 *  `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleApiHttpBody.
 *
 *  Gets a revision of a shared flow. To download the shared flow configuration
 *  bundle for the specified revision as a zip file, set the `format` query
 *  parameter to `bundle`. If you are using curl, specify `-o filename.zip` to
 *  save the output to a file; otherwise, it displays to `stdout`. Then, develop
 *  the shared flow configuration locally and upload the updated sharedFlow
 *  configuration revision, as described in
 *  [updateSharedFlowRevision](updateSharedFlowRevision).
 *
 *  @param name Required. The name of the shared flow revision to get. Must be
 *    of the form:
 *    `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSharedflowsRevisionsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates a shared flow revision. This operation is only allowed on revisions
 *  which have never been deployed. After deployment a revision becomes
 *  immutable, even if it becomes undeployed. The payload is a ZIP-formatted
 *  shared flow. Content type must be either multipart/form-data or
 *  application/octet-stream.
 *
 *  Method: apigee.organizations.sharedflows.revisions.updateSharedFlowRevision
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSharedflowsRevisionsUpdateSharedFlowRevision : GTLRApigeeQuery

/**
 *  Required. The name of the shared flow revision to update. Must be of the
 *  form:
 *  `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Ignored. All uploads are validated regardless of the value of this field. It
 *  is kept for compatibility with existing APIs. Must be `true` or `false` if
 *  provided.
 */
@property(nonatomic, assign) BOOL validate;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1SharedFlowRevision.
 *
 *  Updates a shared flow revision. This operation is only allowed on revisions
 *  which have never been deployed. After deployment a revision becomes
 *  immutable, even if it becomes undeployed. The payload is a ZIP-formatted
 *  shared flow. Content type must be either multipart/form-data or
 *  application/octet-stream.
 *
 *  @param object The @c GTLRApigee_GoogleApiHttpBody to include in the query.
 *  @param name Required. The name of the shared flow revision to update. Must
 *    be of the form:
 *    `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSharedflowsRevisionsUpdateSharedFlowRevision
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleApiHttpBody *)object
                           name:(NSString *)name;

@end

/**
 *  Creates a new category on the portal.
 *
 *  Method: apigee.organizations.sites.apicategories.create
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSitesApicategoriesCreate : GTLRApigeeQuery

/**
 *  Required. Name of the portal. Use the following structure in your request:
 *  `organizations/{org}/sites/{site}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ApiCategory.
 *
 *  Creates a new category on the portal.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1ApiCategoryData to
 *    include in the query.
 *  @param parent Required. Name of the portal. Use the following structure in
 *    your request: `organizations/{org}/sites/{site}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSitesApicategoriesCreate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1ApiCategoryData *)object
                         parent:(NSString *)parent;

@end

/**
 *  Deletes a category from the portal.
 *
 *  Method: apigee.organizations.sites.apicategories.delete
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSitesApicategoriesDelete : GTLRApigeeQuery

/**
 *  Required. Name of the category. Use the following structure in your request:
 *  `organizations/{org}/sites/{site}/apicategories/{apicategory}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ApiResponseWrapper.
 *
 *  Deletes a category from the portal.
 *
 *  @param name Required. Name of the category. Use the following structure in
 *    your request:
 *    `organizations/{org}/sites/{site}/apicategories/{apicategory}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSitesApicategoriesDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets a category on the portal.
 *
 *  Method: apigee.organizations.sites.apicategories.get
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSitesApicategoriesGet : GTLRApigeeQuery

/**
 *  Required. Name of the category. Use the following structure in your request:
 *  `organizations/{org}/sites/{site}/apicategories/{apicategory}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ApiCategory.
 *
 *  Gets a category on the portal.
 *
 *  @param name Required. Name of the category. Use the following structure in
 *    your request:
 *    `organizations/{org}/sites/{site}/apicategories/{apicategory}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSitesApicategoriesGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Lists the categories on the portal.
 *
 *  Method: apigee.organizations.sites.apicategories.list
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSitesApicategoriesList : GTLRApigeeQuery

/**
 *  Required. Name of the portal. Use the following structure in your request:
 *  `organizations/{org}/sites/{site}`
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ListApiCategoriesResponse.
 *
 *  Lists the categories on the portal.
 *
 *  @param parent Required. Name of the portal. Use the following structure in
 *    your request: `organizations/{org}/sites/{site}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSitesApicategoriesList
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Updates a category on the portal.
 *
 *  Method: apigee.organizations.sites.apicategories.patch
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsSitesApicategoriesPatch : GTLRApigeeQuery

/**
 *  Required. Name of the category. Use the following structure in your request:
 *  `organizations/{org}/sites/{site}/apicategories/{apicategory}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1ApiCategory.
 *
 *  Updates a category on the portal.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1ApiCategoryData to
 *    include in the query.
 *  @param name Required. Name of the category. Use the following structure in
 *    your request:
 *    `organizations/{org}/sites/{site}/apicategories/{apicategory}`
 *
 *  @return GTLRApigeeQuery_OrganizationsSitesApicategoriesPatch
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1ApiCategoryData *)object
                           name:(NSString *)name;

@end

/**
 *  Updates the properties for an Apigee organization. No other fields in the
 *  organization profile will be updated.
 *
 *  Method: apigee.organizations.update
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_OrganizationsUpdate : GTLRApigeeQuery

/**
 *  Required. Apigee organization name in the following format:
 *  `organizations/{org}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRApigee_GoogleCloudApigeeV1Organization.
 *
 *  Updates the properties for an Apigee organization. No other fields in the
 *  organization profile will be updated.
 *
 *  @param object The @c GTLRApigee_GoogleCloudApigeeV1Organization to include
 *    in the query.
 *  @param name Required. Apigee organization name in the following format:
 *    `organizations/{org}`
 *
 *  @return GTLRApigeeQuery_OrganizationsUpdate
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1Organization *)object
                           name:(NSString *)name;

@end

/**
 *  Provisions a new Apigee organization with a functioning runtime. This is the
 *  standard way to create trial organizations for a free Apigee trial.
 *
 *  Method: apigee.projects.provisionOrganization
 *
 *  Authorization scope(s):
 *    @c kGTLRAuthScopeApigeeCloudPlatform
 */
@interface GTLRApigeeQuery_ProjectsProvisionOrganization : GTLRApigeeQuery

/**
 *  Required. Name of the GCP project with which to associate the Apigee
 *  organization.
 */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  Fetches a @c GTLRApigee_GoogleLongrunningOperation.
 *
 *  Provisions a new Apigee organization with a functioning runtime. This is the
 *  standard way to create trial organizations for a free Apigee trial.
 *
 *  @param object The @c
 *    GTLRApigee_GoogleCloudApigeeV1ProvisionOrganizationRequest to include in
 *    the query.
 *  @param project Required. Name of the GCP project with which to associate the
 *    Apigee organization.
 *
 *  @return GTLRApigeeQuery_ProjectsProvisionOrganization
 */
+ (instancetype)queryWithObject:(GTLRApigee_GoogleCloudApigeeV1ProvisionOrganizationRequest *)object
                        project:(NSString *)project;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
