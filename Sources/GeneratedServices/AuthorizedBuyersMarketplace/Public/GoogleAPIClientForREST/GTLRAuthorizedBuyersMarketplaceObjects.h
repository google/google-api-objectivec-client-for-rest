// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Authorized Buyers Marketplace API (authorizedbuyersmarketplace/v1)
// Description:
//   The Authorized Buyers Marketplace API lets buyers programmatically discover
//   inventory; propose, retrieve and negotiate deals with publishers.
// Documentation:
//   https://developers.google.com/authorized-buyers/apis/marketplace/reference/rest/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRAuthorizedBuyersMarketplace_AdSize;
@class GTLRAuthorizedBuyersMarketplace_AuctionPackage;
@class GTLRAuthorizedBuyersMarketplace_Client;
@class GTLRAuthorizedBuyersMarketplace_ClientUser;
@class GTLRAuthorizedBuyersMarketplace_Contact;
@class GTLRAuthorizedBuyersMarketplace_CreativeRequirements;
@class GTLRAuthorizedBuyersMarketplace_CriteriaTargeting;
@class GTLRAuthorizedBuyersMarketplace_DayPart;
@class GTLRAuthorizedBuyersMarketplace_DayPartTargeting;
@class GTLRAuthorizedBuyersMarketplace_Deal;
@class GTLRAuthorizedBuyersMarketplace_DealPausingInfo;
@class GTLRAuthorizedBuyersMarketplace_DeliveryControl;
@class GTLRAuthorizedBuyersMarketplace_FinalizedDeal;
@class GTLRAuthorizedBuyersMarketplace_FirstPartyMobileApplicationTargeting;
@class GTLRAuthorizedBuyersMarketplace_FrequencyCap;
@class GTLRAuthorizedBuyersMarketplace_InventorySizeTargeting;
@class GTLRAuthorizedBuyersMarketplace_InventoryTypeTargeting;
@class GTLRAuthorizedBuyersMarketplace_MarketplaceTargeting;
@class GTLRAuthorizedBuyersMarketplace_MobileApplicationTargeting;
@class GTLRAuthorizedBuyersMarketplace_Money;
@class GTLRAuthorizedBuyersMarketplace_Note;
@class GTLRAuthorizedBuyersMarketplace_OperatingSystemTargeting;
@class GTLRAuthorizedBuyersMarketplace_PlacementTargeting;
@class GTLRAuthorizedBuyersMarketplace_PreferredDealTerms;
@class GTLRAuthorizedBuyersMarketplace_Price;
@class GTLRAuthorizedBuyersMarketplace_PrivateAuctionTerms;
@class GTLRAuthorizedBuyersMarketplace_PrivateData;
@class GTLRAuthorizedBuyersMarketplace_ProgrammaticGuaranteedTerms;
@class GTLRAuthorizedBuyersMarketplace_Proposal;
@class GTLRAuthorizedBuyersMarketplace_PublisherProfile;
@class GTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication;
@class GTLRAuthorizedBuyersMarketplace_RtbMetrics;
@class GTLRAuthorizedBuyersMarketplace_TechnologyTargeting;
@class GTLRAuthorizedBuyersMarketplace_TimeOfDay;
@class GTLRAuthorizedBuyersMarketplace_TimeZone;
@class GTLRAuthorizedBuyersMarketplace_UpdateDealRequest;
@class GTLRAuthorizedBuyersMarketplace_UriTargeting;
@class GTLRAuthorizedBuyersMarketplace_VideoTargeting;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_AdSize.type

/**
 *  Fluid size (responsive size) can be resized automatically with the change of
 *  outside environment.
 *
 *  Value: "FLUID"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_AdSize_Type_Fluid;
/**
 *  Special size to describe an interstitial ad slot.
 *
 *  Value: "INTERSTITIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_AdSize_Type_Interstitial;
/**
 *  Native (mobile) ads rendered by the publisher.
 *
 *  Value: "NATIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_AdSize_Type_Native;
/**
 *  Ad slot with size specified by height and width in pixels.
 *
 *  Value: "PIXEL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_AdSize_Type_Pixel;
/**
 *  A placeholder for an undefined size type.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_AdSize_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_Client.role

/**
 *  Users associated with this client role can view, negotiate and approve
 *  proposals and deals in the Marketplace UI and send RFP to publishers.
 *
 *  Value: "CLIENT_DEAL_APPROVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Client_Role_ClientDealApprover;
/**
 *  Users associated with this client role can view and negotiate on the
 *  proposals and deals in the Marketplace UI sent from publishers and send RFP
 *  to publishers, but cannot approve the proposals and deals by themselves. The
 *  buyer can approve the proposals and deals on behalf of the client.
 *
 *  Value: "CLIENT_DEAL_NEGOTIATOR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Client_Role_ClientDealNegotiator;
/**
 *  Users associated with this client role can only view proposals and deals in
 *  the Marketplace UI. They cannot negotiate or approve proposals and deals
 *  sent from publishers or send RFP to publishers.
 *
 *  Value: "CLIENT_DEAL_VIEWER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Client_Role_ClientDealViewer;
/**
 *  A placeholder for an undefined client role. This value should never be
 *  specified in user input for create or update method, otherwise an error will
 *  be returned.
 *
 *  Value: "CLIENT_ROLE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Client_Role_ClientRoleUnspecified;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_Client.state

/**
 *  A client that is currently active and allowed to access the Authorized
 *  Buyers UI.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Client_State_Active;
/**
 *  A client that is currently inactive and not allowed to access the Authorized
 *  Buyers UI.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Client_State_Inactive;
/**
 *  A placeholder for an undefined client state. Should not be used.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Client_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_ClientUser.state

/**
 *  A user that is currently active and allowed to access the Authorized Buyers
 *  UI.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_ClientUser_State_Active;
/**
 *  A user that is currently inactive and not allowed to access the Authorized
 *  Buyers UI.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_ClientUser_State_Inactive;
/**
 *  A user who was created but hasn't accepted the invitation yet, not allowed
 *  to access the Authorized Buyers UI.
 *
 *  Value: "INVITED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_ClientUser_State_Invited;
/**
 *  A placeholder for an undefined user state.
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_ClientUser_State_StateUnspecified;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_CreativeRequirements.creativeFormat

/**
 *  A placeholder for an unspecified creative format.
 *
 *  Value: "CREATIVE_FORMAT_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativeFormat_CreativeFormatUnspecified;
/**
 *  Banner creatives such as image or HTML5 assets.
 *
 *  Value: "DISPLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativeFormat_Display;
/**
 *  Video creatives that can be played in a video player.
 *
 *  Value: "VIDEO"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativeFormat_Video;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_CreativeRequirements.creativePreApprovalPolicy

/**
 *  A placeholder for an undefined creative pre-approval policy.
 *
 *  Value: "CREATIVE_PRE_APPROVAL_POLICY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativePreApprovalPolicy_CreativePreApprovalPolicyUnspecified;
/**
 *  The seller does not need to approve each creative before it can serve.
 *
 *  Value: "SELLER_PRE_APPROVAL_NOT_REQUIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativePreApprovalPolicy_SellerPreApprovalNotRequired;
/**
 *  The seller needs to approve each creative before it can serve.
 *
 *  Value: "SELLER_PRE_APPROVAL_REQUIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativePreApprovalPolicy_SellerPreApprovalRequired;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_CreativeRequirements.creativeSafeFrameCompatibility

/**
 *  The creatives need to be compatible with the safe frame option.
 *
 *  Value: "COMPATIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativeSafeFrameCompatibility_Compatible;
/**
 *  A placeholder for an undefined creative safe-frame compatibility.
 *
 *  Value: "CREATIVE_SAFE_FRAME_COMPATIBILITY_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativeSafeFrameCompatibility_CreativeSafeFrameCompatibilityUnspecified;
/**
 *  The creatives can be incompatible with the safe frame option.
 *
 *  Value: "INCOMPATIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativeSafeFrameCompatibility_Incompatible;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_CreativeRequirements.programmaticCreativeSource

/**
 *  The advertiser provides the creatives.
 *
 *  Value: "ADVERTISER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_ProgrammaticCreativeSource_Advertiser;
/**
 *  A placeholder for an undefined programmatic creative source.
 *
 *  Value: "PROGRAMMATIC_CREATIVE_SOURCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_ProgrammaticCreativeSource_ProgrammaticCreativeSourceUnspecified;
/**
 *  The publisher provides the creatives to be served.
 *
 *  Value: "PUBLISHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_ProgrammaticCreativeSource_Publisher;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_CreativeRequirements.skippableAdType

/**
 *  This video ad can be skipped after 5 seconds or not-skippable. This value
 *  will appear in RTB bid requests as SkippableBidRequestType::ALLOW_SKIPPABLE.
 *
 *  Value: "ANY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_SkippableAdType_Any;
/**
 *  Video ad that can be skipped after 5 seconds, and is counted as engaged view
 *  after 30 seconds. The creative is hosted on YouTube only, and viewcount of
 *  the YouTube video increments after the engaged view. This value will appear
 *  in RTB bid requests as SkippableBidRequestType::REQUIRE_SKIPPABLE.
 *
 *  Value: "INSTREAM_SELECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_SkippableAdType_InstreamSelect;
/**
 *  This video ad is not skippable. This value will appear in RTB bid requests
 *  as SkippableBidRequestType::BLOCK_SKIPPABLE.
 *
 *  Value: "NOT_SKIPPABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_SkippableAdType_NotSkippable;
/**
 *  Video ad that can be skipped after 5 seconds. This value will appear in RTB
 *  bid requests as SkippableBidRequestType::REQUIRE_SKIPPABLE.
 *
 *  Value: "SKIPPABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_SkippableAdType_Skippable;
/**
 *  A placeholder for an unspecified skippable ad type.
 *
 *  Value: "SKIPPABLE_AD_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_SkippableAdType_SkippableAdTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_DayPart.dayOfWeek

/**
 *  The day of the week is unspecified.
 *
 *  Value: "DAY_OF_WEEK_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_DayOfWeekUnspecified;
/**
 *  Friday
 *
 *  Value: "FRIDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_Friday;
/**
 *  Monday
 *
 *  Value: "MONDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_Monday;
/**
 *  Saturday
 *
 *  Value: "SATURDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_Saturday;
/**
 *  Sunday
 *
 *  Value: "SUNDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_Sunday;
/**
 *  Thursday
 *
 *  Value: "THURSDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_Thursday;
/**
 *  Tuesday
 *
 *  Value: "TUESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_Tuesday;
/**
 *  Wednesday
 *
 *  Value: "WEDNESDAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_Wednesday;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_DayPartTargeting.timeZoneType

/**
 *  The publisher's time zone
 *
 *  Value: "SELLER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DayPartTargeting_TimeZoneType_Seller;
/**
 *  Default value. This field is unused.
 *
 *  Value: "TIME_ZONE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DayPartTargeting_TimeZoneType_TimeZoneTypeUnspecified;
/**
 *  The user's time zone
 *
 *  Value: "USER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DayPartTargeting_TimeZoneType_User;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_Deal.dealType

/**
 *  Default, unspecified deal type.
 *
 *  Value: "DEAL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Deal_DealType_DealTypeUnspecified;
/**
 *  Preferred deals.
 *
 *  Value: "PREFERRED_DEAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Deal_DealType_PreferredDeal;
/**
 *  Private auction deals.
 *
 *  Value: "PRIVATE_AUCTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Deal_DealType_PrivateAuction;
/**
 *  Programmatic guaranteed deals.
 *
 *  Value: "PROGRAMMATIC_GUARANTEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Deal_DealType_ProgrammaticGuaranteed;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_DealPausingInfo.pauseRole

/**
 *  Specifies the role as buyer.
 *
 *  Value: "BUYER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DealPausingInfo_PauseRole_Buyer;
/**
 *  A placeholder for an undefined buyer/seller role.
 *
 *  Value: "BUYER_SELLER_ROLE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DealPausingInfo_PauseRole_BuyerSellerRoleUnspecified;
/**
 *  Specifies the role as seller.
 *
 *  Value: "SELLER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DealPausingInfo_PauseRole_Seller;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_DeliveryControl.companionDeliveryType

/**
 *  A placeholder for an unspecified companion delivery type.
 *
 *  Value: "COMPANION_DELIVERY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CompanionDeliveryType_CompanionDeliveryTypeUnspecified;
/**
 *  All companions in the set must be served in order for the creative set to be
 *  used. This can still serve to inventory that has more companions than can be
 *  filled.
 *
 *  Value: "DELIVERY_ALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CompanionDeliveryType_DeliveryAll;
/**
 *  At least one companion must be served in order for the creative set to be
 *  used.
 *
 *  Value: "DELIVERY_AT_LEAST_ONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CompanionDeliveryType_DeliveryAtLeastOne;
/**
 *  Companions are not required to serve a creative set. The creative set can
 *  serve an inventory that has zero or more matching companions.
 *
 *  Value: "DELIVERY_OPTIONAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CompanionDeliveryType_DeliveryOptional;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_DeliveryControl.creativeRotationType

/**
 *  Creatives are displayed roughly the same number of times over the duration
 *  of the deal.
 *
 *  Value: "CREATIVE_ROTATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CreativeRotationType_CreativeRotationTypeUnspecified;
/**
 *  Creatives are displayed roughly the same number of times over the duration
 *  of the deal.
 *
 *  Value: "ROTATION_EVEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CreativeRotationType_RotationEven;
/**
 *  Creatives are served roughly proportionally to their weights.
 *
 *  Value: "ROTATION_MANUAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CreativeRotationType_RotationManual;
/**
 *  Creatives are served roughly proportionally to their performance.
 *
 *  Value: "ROTATION_OPTIMIZED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CreativeRotationType_RotationOptimized;
/**
 *  Creatives are served exactly in sequential order, also known as
 *  Storyboarding.
 *
 *  Value: "ROTATION_SEQUENTIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CreativeRotationType_RotationSequential;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_DeliveryControl.deliveryRateType

/**
 *  Impressions are served as fast as possible.
 *
 *  Value: "AS_FAST_AS_POSSIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_DeliveryRateType_AsFastAsPossible;
/**
 *  A placeholder for an undefined delivery rate type.
 *
 *  Value: "DELIVERY_RATE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_DeliveryRateType_DeliveryRateTypeUnspecified;
/**
 *  Impressions are served uniformly over the life of the deal.
 *
 *  Value: "EVENLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_DeliveryRateType_Evenly;
/**
 *  Impressions are served front-loaded.
 *
 *  Value: "FRONT_LOADED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_DeliveryRateType_FrontLoaded;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_DeliveryControl.roadblockingType

/**
 *  All or none of the creatives from a deal will serve.
 *
 *  Value: "ALL_ROADBLOCK"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_RoadblockingType_AllRoadblock;
/**
 *  As many creatives from a deal as can fit on a page will serve. This could
 *  mean anywhere from one to all of a deal's creatives given the size
 *  constraints of ad slots on a page.
 *
 *  Value: "AS_MANY_AS_POSSIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_RoadblockingType_AsManyAsPossible;
/**
 *  A main/companion creative set roadblocking type.
 *
 *  Value: "CREATIVE_SET"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_RoadblockingType_CreativeSet;
/**
 *  Any number of creatives from a deal can serve together per ad request.
 *
 *  Value: "ONE_OR_MORE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_RoadblockingType_OneOrMore;
/**
 *  Only one creative from a deal can serve per ad request.
 *  https://support.google.com/admanager/answer/177277.
 *
 *  Value: "ONLY_ONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_RoadblockingType_OnlyOne;
/**
 *  A placeholder for an unspecified roadblocking type.
 *
 *  Value: "ROADBLOCKING_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_DeliveryControl_RoadblockingType_RoadblockingTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_FinalizedDeal.dealServingStatus

/**
 *  The deal is actively serving or ready to serve when the start date is
 *  reached.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_FinalizedDeal_DealServingStatus_Active;
/**
 *  Unspecified.
 *
 *  Value: "DEAL_SERVING_STATUS_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_FinalizedDeal_DealServingStatus_DealServingStatusUnspecified;
/**
 *  The deal serving has ended.
 *
 *  Value: "ENDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_FinalizedDeal_DealServingStatus_Ended;
/**
 *  The deal serving is paused by buyer.
 *
 *  Value: "PAUSED_BY_BUYER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_FinalizedDeal_DealServingStatus_PausedByBuyer;
/**
 *  The deal serving is paused by seller.
 *
 *  Value: "PAUSED_BY_SELLER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_FinalizedDeal_DealServingStatus_PausedBySeller;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_FrequencyCap.timeUnitType

/**
 *  Day unit.
 *
 *  Value: "DAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Day;
/**
 *  Hour unit.
 *
 *  Value: "HOUR"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Hour;
/**
 *  Lifecycle/Lifetime unit.
 *
 *  Value: "LIFETIME"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Lifetime;
/**
 *  Minute unit.
 *
 *  Value: "MINUTE"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Minute;
/**
 *  Month unit.
 *
 *  Value: "MONTH"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Month;
/**
 *  Pod unit.
 *
 *  Value: "POD"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Pod;
/**
 *  Stream unit.
 *
 *  Value: "STREAM"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Stream;
/**
 *  A placeholder for an undefined time unit type. This just indicates the
 *  variable with this value hasn't been initialized.
 *
 *  Value: "TIME_UNIT_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_TimeUnitTypeUnspecified;
/**
 *  Week unit.
 *
 *  Value: "WEEK"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Week;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_InventoryTypeTargeting.inventoryTypes

/**
 *  Desktop or mobile web browser excluding ads inside a video player
 *
 *  Value: "BROWSER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_InventoryTypeTargeting_InventoryTypes_Browser;
/**
 *  Unspecified inventory type
 *
 *  Value: "INVENTORY_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_InventoryTypeTargeting_InventoryTypes_InventoryTypeUnspecified;
/**
 *  Mobile apps other than video players and web browsers
 *
 *  Value: "MOBILE_APP"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_InventoryTypeTargeting_InventoryTypes_MobileApp;
/**
 *  Instream video and audio
 *
 *  Value: "VIDEO_PLAYER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_InventoryTypeTargeting_InventoryTypes_VideoPlayer;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_Note.creatorRole

/**
 *  Specifies the role as buyer.
 *
 *  Value: "BUYER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Note_CreatorRole_Buyer;
/**
 *  A placeholder for an undefined buyer/seller role.
 *
 *  Value: "BUYER_SELLER_ROLE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Note_CreatorRole_BuyerSellerRoleUnspecified;
/**
 *  Specifies the role as seller.
 *
 *  Value: "SELLER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Note_CreatorRole_Seller;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_Price.type

/**
 *  Cost per day.
 *
 *  Value: "CPD"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Price_Type_Cpd;
/**
 *  Cost per thousand impressions.
 *
 *  Value: "CPM"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Price_Type_Cpm;
/**
 *  A placeholder for an undefined pricing type. If the pricing type is
 *  unspecified, CPM will be used instead.
 *
 *  Value: "TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Price_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_ProgrammaticGuaranteedTerms.reservationType

/**
 *  An unspecified reservation type.
 *
 *  Value: "RESERVATION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_ProgrammaticGuaranteedTerms_ReservationType_ReservationTypeUnspecified;
/**
 *  Sponsorship deals don't have impression goal (guaranteed_looks) and they are
 *  served based on the flight dates. For CPM Sponsorship deals, impression_cap
 *  is the lifetime impression limit.
 *
 *  Value: "SPONSORSHIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_ProgrammaticGuaranteedTerms_ReservationType_Sponsorship;
/**
 *  Non-sponsorship deal.
 *
 *  Value: "STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_ProgrammaticGuaranteedTerms_ReservationType_Standard;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_Proposal.dealType

/**
 *  Default, unspecified deal type.
 *
 *  Value: "DEAL_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_DealType_DealTypeUnspecified;
/**
 *  Preferred deals.
 *
 *  Value: "PREFERRED_DEAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_DealType_PreferredDeal;
/**
 *  Private auction deals.
 *
 *  Value: "PRIVATE_AUCTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_DealType_PrivateAuction;
/**
 *  Programmatic guaranteed deals.
 *
 *  Value: "PROGRAMMATIC_GUARANTEED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_DealType_ProgrammaticGuaranteed;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_Proposal.lastUpdaterOrCommentorRole

/**
 *  Specifies the role as buyer.
 *
 *  Value: "BUYER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_LastUpdaterOrCommentorRole_Buyer;
/**
 *  A placeholder for an undefined buyer/seller role.
 *
 *  Value: "BUYER_SELLER_ROLE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_LastUpdaterOrCommentorRole_BuyerSellerRoleUnspecified;
/**
 *  Specifies the role as seller.
 *
 *  Value: "SELLER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_LastUpdaterOrCommentorRole_Seller;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_Proposal.originatorRole

/**
 *  Specifies the role as buyer.
 *
 *  Value: "BUYER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_OriginatorRole_Buyer;
/**
 *  A placeholder for an undefined buyer/seller role.
 *
 *  Value: "BUYER_SELLER_ROLE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_OriginatorRole_BuyerSellerRoleUnspecified;
/**
 *  Specifies the role as seller.
 *
 *  Value: "SELLER"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_OriginatorRole_Seller;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_Proposal.state

/**
 *  When the seller accepted the proposal and sent it to the buyer for review.
 *
 *  Value: "BUYER_ACCEPTANCE_REQUESTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_State_BuyerAcceptanceRequested;
/**
 *  When a proposal is waiting for buyer to review.
 *
 *  Value: "BUYER_REVIEW_REQUESTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_State_BuyerReviewRequested;
/**
 *  When both buyer and seller has accepted the proposal
 *
 *  Value: "FINALIZED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_State_Finalized;
/**
 *  When the proposal is waiting for the seller to review.
 *
 *  Value: "SELLER_REVIEW_REQUESTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_State_SellerReviewRequested;
/**
 *  Unspecified proposal state
 *
 *  Value: "STATE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_State_StateUnspecified;
/**
 *  When either buyer or seller has cancelled the proposal
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_Proposal_State_Terminated;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication.appStore

/**
 *  Amazon Appstore
 *
 *  Value: "AMAZON"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Amazon;
/**
 *  Amazon Fire TV
 *
 *  Value: "AMAZON_FIRE_TV"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_AmazonFireTv;
/**
 *  Apple iTunes
 *
 *  Value: "APPLE_ITUNES"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_AppleItunes;
/**
 *  A placeholder for an unknown app store.
 *
 *  Value: "APP_STORE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_AppStoreTypeUnspecified;
/**
 *  Google Play
 *
 *  Value: "GOOGLE_PLAY"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_GooglePlay;
/**
 *  OPPO App Market
 *
 *  Value: "OPPO"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Oppo;
/**
 *  PlayStation
 *
 *  Value: "PLAYSTATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Playstation;
/**
 *  Roku
 *
 *  Value: "ROKU"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Roku;
/**
 *  Samsung Galaxy Store
 *
 *  Value: "SAMSUNG"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Samsung;
/**
 *  Samsung TV
 *
 *  Value: "SAMSUNG_TV"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_SamsungTv;
/**
 *  VIVO App Store
 *
 *  Value: "VIVO"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Vivo;
/**
 *  Xbox
 *
 *  Value: "XBOX"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Xbox;
/**
 *  Xiaomi GetApps
 *
 *  Value: "XIAOMI"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Xiaomi;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_VideoTargeting.excludedPositionTypes

/**
 *  Ad is played during the video.
 *
 *  Value: "MIDROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_VideoTargeting_ExcludedPositionTypes_Midroll;
/**
 *  A placeholder for an undefined video position.
 *
 *  Value: "POSITION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_VideoTargeting_ExcludedPositionTypes_PositionTypeUnspecified;
/**
 *  Ad is played after the video.
 *
 *  Value: "POSTROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_VideoTargeting_ExcludedPositionTypes_Postroll;
/**
 *  Ad is played before the video.
 *
 *  Value: "PREROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_VideoTargeting_ExcludedPositionTypes_Preroll;

// ----------------------------------------------------------------------------
// GTLRAuthorizedBuyersMarketplace_VideoTargeting.targetedPositionTypes

/**
 *  Ad is played during the video.
 *
 *  Value: "MIDROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_VideoTargeting_TargetedPositionTypes_Midroll;
/**
 *  A placeholder for an undefined video position.
 *
 *  Value: "POSITION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_VideoTargeting_TargetedPositionTypes_PositionTypeUnspecified;
/**
 *  Ad is played after the video.
 *
 *  Value: "POSTROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_VideoTargeting_TargetedPositionTypes_Postroll;
/**
 *  Ad is played before the video.
 *
 *  Value: "PREROLL"
 */
FOUNDATION_EXTERN NSString * const kGTLRAuthorizedBuyersMarketplace_VideoTargeting_TargetedPositionTypes_Preroll;

/**
 *  Request to accept a proposal. Accepting a proposal implies acceptance of the
 *  publisher terms_and_conditions, if any.
 */
@interface GTLRAuthorizedBuyersMarketplace_AcceptProposalRequest : GTLRObject

/**
 *  The last known client revision number of the proposal.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *proposalRevision;

@end


/**
 *  Request message for activating a client.
 */
@interface GTLRAuthorizedBuyersMarketplace_ActivateClientRequest : GTLRObject
@end


/**
 *  Request message for activating a client user.
 */
@interface GTLRAuthorizedBuyersMarketplace_ActivateClientUserRequest : GTLRObject
@end


/**
 *  Request message for adding creative to be used in the bidding process for
 *  the finalized deal.
 */
@interface GTLRAuthorizedBuyersMarketplace_AddCreativeRequest : GTLRObject

/**
 *  Name of the creative to add to the finalized deal, in the format
 *  `buyers/{buyerAccountId}/creatives/{creativeId}`. See creative.name.
 */
@property(nonatomic, copy, nullable) NSString *creative;

@end


/**
 *  Request to add a note.
 */
@interface GTLRAuthorizedBuyersMarketplace_AddNoteRequest : GTLRObject

/** The note to add. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_Note *note;

@end


/**
 *  Represents size of a single ad slot, or a creative.
 */
@interface GTLRAuthorizedBuyersMarketplace_AdSize : GTLRObject

/**
 *  The height of the ad slot in pixels. This field will be present only when
 *  size type is `PIXEL`.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *height;

/**
 *  The type of the ad slot size.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_AdSize_Type_Fluid Fluid size
 *        (responsive size) can be resized automatically with the change of
 *        outside environment. (Value: "FLUID")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_AdSize_Type_Interstitial Special
 *        size to describe an interstitial ad slot. (Value: "INTERSTITIAL")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_AdSize_Type_Native Native
 *        (mobile) ads rendered by the publisher. (Value: "NATIVE")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_AdSize_Type_Pixel Ad slot with
 *        size specified by height and width in pixels. (Value: "PIXEL")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_AdSize_Type_TypeUnspecified A
 *        placeholder for an undefined size type. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  The width of the ad slot in pixels. This field will be present only when
 *  size type is `PIXEL`.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *width;

@end


/**
 *  Defines a segment of inventory that buyer wants to buy. It's created by
 *  buyer and could be shared with multiple buyers.
 */
@interface GTLRAuthorizedBuyersMarketplace_AuctionPackage : GTLRObject

/** Output only. Time the auction package was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The buyer that created this auction package. Format:
 *  `buyers/{buyerAccountId}`
 */
@property(nonatomic, copy, nullable) NSString *creator;

/**
 *  Output only. A description of the auction package.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The display_name assigned to the auction package. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Immutable. The unique identifier for the auction package. Format:
 *  `buyers/{accountId}/auctionPackages/{auctionPackageId}` The
 *  auction_package_id part of name is sent in the BidRequest to all RTB bidders
 *  and is returned as deal_id by the bidder in the BidResponse.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The list of clients of the current buyer that are subscribed to
 *  the AuctionPackage. Format:
 *  `buyers/{buyerAccountId}/clients/{clientAccountId}`
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *subscribedClients;

/**
 *  Output only. Time the auction package was last updated. This value is only
 *  increased when this auction package is updated but never when a buyer
 *  subscribed.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Request message for batch updating deals.
 */
@interface GTLRAuthorizedBuyersMarketplace_BatchUpdateDealsRequest : GTLRObject

/** Required. List of request messages to update deals. */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_UpdateDealRequest *> *requests;

@end


/**
 *  Response message for batch updating deals.
 */
@interface GTLRAuthorizedBuyersMarketplace_BatchUpdateDealsResponse : GTLRObject

/** Deals updated. */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_Deal *> *deals;

@end


/**
 *  Request to cancel an ongoing negotiation.
 */
@interface GTLRAuthorizedBuyersMarketplace_CancelNegotiationRequest : GTLRObject
@end


/**
 *  A client represents an agency, a brand, or an advertiser customer of the
 *  buyer. Based on the client's role, its client users will have varying levels
 *  of restricted access to the Marketplace and certain other sections of the
 *  Authorized Buyers UI.
 */
@interface GTLRAuthorizedBuyersMarketplace_Client : GTLRObject

/**
 *  Required. Display name shown to publishers. Must be unique for clients
 *  without partnerClientId specified. Maximum length of 255 characters is
 *  allowed.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. The resource name of the client. Format:
 *  `buyers/{accountId}/clients/{clientAccountId}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Arbitrary unique identifier provided by the buyer. This field can be used to
 *  associate a client with an identifier in the namespace of the buyer, lookup
 *  clients by that identifier and verify whether an Authorized Buyers account
 *  of the client already exists. If present, must be unique across all the
 *  clients.
 */
@property(nonatomic, copy, nullable) NSString *partnerClientId;

/**
 *  Required. The role assigned to the client. Each role implies a set of
 *  permissions granted to the client.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Client_Role_ClientDealApprover
 *        Users associated with this client role can view, negotiate and approve
 *        proposals and deals in the Marketplace UI and send RFP to publishers.
 *        (Value: "CLIENT_DEAL_APPROVER")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Client_Role_ClientDealNegotiator
 *        Users associated with this client role can view and negotiate on the
 *        proposals and deals in the Marketplace UI sent from publishers and
 *        send RFP to publishers, but cannot approve the proposals and deals by
 *        themselves. The buyer can approve the proposals and deals on behalf of
 *        the client. (Value: "CLIENT_DEAL_NEGOTIATOR")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Client_Role_ClientDealViewer
 *        Users associated with this client role can only view proposals and
 *        deals in the Marketplace UI. They cannot negotiate or approve
 *        proposals and deals sent from publishers or send RFP to publishers.
 *        (Value: "CLIENT_DEAL_VIEWER")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Client_Role_ClientRoleUnspecified
 *        A placeholder for an undefined client role. This value should never be
 *        specified in user input for create or update method, otherwise an
 *        error will be returned. (Value: "CLIENT_ROLE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *role;

/**
 *  Whether the client will be visible to sellers.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sellerVisible;

/**
 *  Output only. The state of the client.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Client_State_Active A client that
 *        is currently active and allowed to access the Authorized Buyers UI.
 *        (Value: "ACTIVE")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Client_State_Inactive A client
 *        that is currently inactive and not allowed to access the Authorized
 *        Buyers UI. (Value: "INACTIVE")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Client_State_StateUnspecified A
 *        placeholder for an undefined client state. Should not be used. (Value:
 *        "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  A user of a client who has restricted access to the Marketplace and certain
 *  other sections of the Authorized Buyers UI based on the role granted to the
 *  associated client.
 */
@interface GTLRAuthorizedBuyersMarketplace_ClientUser : GTLRObject

/**
 *  Required. The client user's email address that has to be unique across all
 *  users for the same client.
 */
@property(nonatomic, copy, nullable) NSString *email;

/**
 *  Output only. The resource name of the client user. Format:
 *  `buyers/{accountId}/clients/{clientAccountId}/users/{userId}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Output only. The state of the client user.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_ClientUser_State_Active A user
 *        that is currently active and allowed to access the Authorized Buyers
 *        UI. (Value: "ACTIVE")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_ClientUser_State_Inactive A user
 *        that is currently inactive and not allowed to access the Authorized
 *        Buyers UI. (Value: "INACTIVE")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_ClientUser_State_Invited A user
 *        who was created but hasn't accepted the invitation yet, not allowed to
 *        access the Authorized Buyers UI. (Value: "INVITED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_ClientUser_State_StateUnspecified
 *        A placeholder for an undefined user state. (Value:
 *        "STATE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Contains information on how a buyer or seller can be reached.
 */
@interface GTLRAuthorizedBuyersMarketplace_Contact : GTLRObject

/** The display_name of the contact. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** Email address for the contact. */
@property(nonatomic, copy, nullable) NSString *email;

@end


/**
 *  Message captures data about the creatives in the deal.
 */
@interface GTLRAuthorizedBuyersMarketplace_CreativeRequirements : GTLRObject

/**
 *  Output only. The format of the creative, only applicable for programmatic
 *  guaranteed and preferred deals.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativeFormat_CreativeFormatUnspecified
 *        A placeholder for an unspecified creative format. (Value:
 *        "CREATIVE_FORMAT_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativeFormat_Display
 *        Banner creatives such as image or HTML5 assets. (Value: "DISPLAY")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativeFormat_Video
 *        Video creatives that can be played in a video player. (Value: "VIDEO")
 */
@property(nonatomic, copy, nullable) NSString *creativeFormat;

/**
 *  Output only. Specifies the creative pre-approval policy.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativePreApprovalPolicy_CreativePreApprovalPolicyUnspecified
 *        A placeholder for an undefined creative pre-approval policy. (Value:
 *        "CREATIVE_PRE_APPROVAL_POLICY_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativePreApprovalPolicy_SellerPreApprovalNotRequired
 *        The seller does not need to approve each creative before it can serve.
 *        (Value: "SELLER_PRE_APPROVAL_NOT_REQUIRED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativePreApprovalPolicy_SellerPreApprovalRequired
 *        The seller needs to approve each creative before it can serve. (Value:
 *        "SELLER_PRE_APPROVAL_REQUIRED")
 */
@property(nonatomic, copy, nullable) NSString *creativePreApprovalPolicy;

/**
 *  Output only. Specifies whether the creative is safeFrame compatible.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativeSafeFrameCompatibility_Compatible
 *        The creatives need to be compatible with the safe frame option.
 *        (Value: "COMPATIBLE")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativeSafeFrameCompatibility_CreativeSafeFrameCompatibilityUnspecified
 *        A placeholder for an undefined creative safe-frame compatibility.
 *        (Value: "CREATIVE_SAFE_FRAME_COMPATIBILITY_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_CreativeSafeFrameCompatibility_Incompatible
 *        The creatives can be incompatible with the safe frame option. (Value:
 *        "INCOMPATIBLE")
 */
@property(nonatomic, copy, nullable) NSString *creativeSafeFrameCompatibility;

/**
 *  Output only. The max duration of the video creative in milliseconds. only
 *  applicable for deals with video creatives.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxAdDurationMs;

/**
 *  Output only. Specifies the creative source for programmatic deals. PUBLISHER
 *  means creative is provided by seller and ADVERTISER means creative is
 *  provided by the buyer.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_ProgrammaticCreativeSource_Advertiser
 *        The advertiser provides the creatives. (Value: "ADVERTISER")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_ProgrammaticCreativeSource_ProgrammaticCreativeSourceUnspecified
 *        A placeholder for an undefined programmatic creative source. (Value:
 *        "PROGRAMMATIC_CREATIVE_SOURCE_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_ProgrammaticCreativeSource_Publisher
 *        The publisher provides the creatives to be served. (Value:
 *        "PUBLISHER")
 */
@property(nonatomic, copy, nullable) NSString *programmaticCreativeSource;

/**
 *  Output only. Skippable video ads allow viewers to skip ads after 5 seconds.
 *  Only applicable for deals with video creatives.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_SkippableAdType_Any
 *        This video ad can be skipped after 5 seconds or not-skippable. This
 *        value will appear in RTB bid requests as
 *        SkippableBidRequestType::ALLOW_SKIPPABLE. (Value: "ANY")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_SkippableAdType_InstreamSelect
 *        Video ad that can be skipped after 5 seconds, and is counted as
 *        engaged view after 30 seconds. The creative is hosted on YouTube only,
 *        and viewcount of the YouTube video increments after the engaged view.
 *        This value will appear in RTB bid requests as
 *        SkippableBidRequestType::REQUIRE_SKIPPABLE. (Value: "INSTREAM_SELECT")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_SkippableAdType_NotSkippable
 *        This video ad is not skippable. This value will appear in RTB bid
 *        requests as SkippableBidRequestType::BLOCK_SKIPPABLE. (Value:
 *        "NOT_SKIPPABLE")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_SkippableAdType_Skippable
 *        Video ad that can be skipped after 5 seconds. This value will appear
 *        in RTB bid requests as SkippableBidRequestType::REQUIRE_SKIPPABLE.
 *        (Value: "SKIPPABLE")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_CreativeRequirements_SkippableAdType_SkippableAdTypeUnspecified
 *        A placeholder for an unspecified skippable ad type. (Value:
 *        "SKIPPABLE_AD_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *skippableAdType;

@end


/**
 *  Generic targeting used for targeting dimensions that contains a list of
 *  included and excluded numeric IDs. This cannot be filtered using list filter
 *  syntax.
 */
@interface GTLRAuthorizedBuyersMarketplace_CriteriaTargeting : GTLRObject

/**
 *  A list of numeric IDs to be excluded.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *excludedCriteriaIds;

/**
 *  A list of numeric IDs to be included.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *targetedCriteriaIds;

@end


/**
 *  Defines targeting for a period of time on a specific week day.
 */
@interface GTLRAuthorizedBuyersMarketplace_DayPart : GTLRObject

/**
 *  Day of week for the period.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_DayOfWeekUnspecified
 *        The day of the week is unspecified. (Value: "DAY_OF_WEEK_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_Friday Friday
 *        (Value: "FRIDAY")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_Monday Monday
 *        (Value: "MONDAY")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_Saturday
 *        Saturday (Value: "SATURDAY")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_Sunday Sunday
 *        (Value: "SUNDAY")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_Thursday
 *        Thursday (Value: "THURSDAY")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_Tuesday Tuesday
 *        (Value: "TUESDAY")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DayPart_DayOfWeek_Wednesday
 *        Wednesday (Value: "WEDNESDAY")
 */
@property(nonatomic, copy, nullable) NSString *dayOfWeek;

/**
 *  Hours in 24 hour time between 0 and 24, inclusive. Note: 24 is logically
 *  equivalent to 0, but is supported since in some cases there may need to be
 *  differentiation made between midnight on one day and midnight on the next
 *  day. Accepted values for minutes are [0, 15, 30, 45]. 0 is the only
 *  acceptable minute value for hour 24. Seconds and nanos are ignored.
 */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_TimeOfDay *endTime;

/**
 *  Hours in 24 hour time between 0 and 24, inclusive. Note: 24 is logically
 *  equivalent to 0, but is supported since in some cases there may need to be
 *  differentiation made between midnight on one day and midnight on the next
 *  day. Accepted values for minutes are [0, 15, 30, 45]. 0 is the only
 *  acceptable minute value for hour 24. Seconds and nanos are ignored.
 */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_TimeOfDay *startTime;

@end


/**
 *  Represents Daypart targeting.
 */
@interface GTLRAuthorizedBuyersMarketplace_DayPartTargeting : GTLRObject

/** The targeted weekdays and times */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_DayPart *> *dayParts;

/**
 *  The time zone type of the day parts
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DayPartTargeting_TimeZoneType_Seller
 *        The publisher's time zone (Value: "SELLER")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DayPartTargeting_TimeZoneType_TimeZoneTypeUnspecified
 *        Default value. This field is unused. (Value:
 *        "TIME_ZONE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DayPartTargeting_TimeZoneType_User
 *        The user's time zone (Value: "USER")
 */
@property(nonatomic, copy, nullable) NSString *timeZoneType;

@end


/**
 *  Request message for disabling a client.
 */
@interface GTLRAuthorizedBuyersMarketplace_DeactivateClientRequest : GTLRObject
@end


/**
 *  Request message for deactivating a client user.
 */
@interface GTLRAuthorizedBuyersMarketplace_DeactivateClientUserRequest : GTLRObject
@end


/**
 *  A deal represents a segment of inventory for displaying ads that contains
 *  the terms and targeting information that is used for serving as well as the
 *  deal stats and status. Note: A proposal may contain multiple deals.
 */
@interface GTLRAuthorizedBuyersMarketplace_Deal : GTLRObject

/**
 *  Output only. When the client field is populated, this field refers to the
 *  buyer who creates and manages the client buyer and gets billed on behalf of
 *  the client buyer; when the buyer field is populated, this field is the same
 *  value as buyer. Format : `buyers/{buyerAccountId}`
 */
@property(nonatomic, copy, nullable) NSString *billedBuyer;

/**
 *  Output only. Refers to a buyer in The Realtime-bidding API. Format:
 *  `buyers/{buyerAccountId}`
 */
@property(nonatomic, copy, nullable) NSString *buyer;

/**
 *  Output only. Refers to a Client. Format:
 *  `buyers/{buyerAccountId}/clients/{clientAccountid}`
 */
@property(nonatomic, copy, nullable) NSString *client;

/** Output only. The time of the deal creation. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/** Output only. Metadata about the creatives of this deal. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_CreativeRequirements *creativeRequirements;

/**
 *  Output only. Type of deal.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Deal_DealType_DealTypeUnspecified
 *        Default, unspecified deal type. (Value: "DEAL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Deal_DealType_PreferredDeal
 *        Preferred deals. (Value: "PREFERRED_DEAL")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Deal_DealType_PrivateAuction
 *        Private auction deals. (Value: "PRIVATE_AUCTION")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Deal_DealType_ProgrammaticGuaranteed
 *        Programmatic guaranteed deals. (Value: "PROGRAMMATIC_GUARANTEED")
 */
@property(nonatomic, copy, nullable) NSString *dealType;

/** Output only. Specifies the pacing set by the publisher. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_DeliveryControl *deliveryControl;

/**
 *  Output only. Free text description for the deal terms.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Output only. The name of the deal. Maximum length of 255 unicode characters
 *  is allowed. Control characters are not allowed. Buyers cannot update this
 *  field. Note: Not to be confused with name, which is a unique identifier of
 *  the deal.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Specified by buyers in request for proposal (RFP) to notify publisher the
 *  total estimated spend for the proposal. Publishers will receive this
 *  information and send back proposed deals accordingly.
 */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_Money *estimatedGrossSpend;

/**
 *  Proposed flight end time of the deal. This will generally be stored in a
 *  granularity of a second. A value is not necessary for Private Auction deals.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *flightEndTime;

/**
 *  Proposed flight start time of the deal. This will generally be stored in the
 *  granularity of one second since deal serving starts at seconds boundary. Any
 *  time specified with more granularity (for example, in milliseconds) will be
 *  truncated towards the start of time in seconds.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *flightStartTime;

/**
 *  Immutable. The unique identifier of the deal. Auto-generated by the server
 *  when a deal is created. Format:
 *  buyers/{accountId}/proposals/{proposalId}/deals/{dealId}
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The terms for preferred deals. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_PreferredDealTerms *preferredDealTerms;

/** The terms for private auction deals. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_PrivateAuctionTerms *privateAuctionTerms;

/** The terms for programmatic guaranteed deals. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_ProgrammaticGuaranteedTerms *programmaticGuaranteedTerms;

/**
 *  Output only. The revision number for the proposal and is the same value as
 *  proposal.proposal_revision. Each update to deal causes the proposal revision
 *  number to auto-increment. The buyer keeps track of the last revision number
 *  they know of and pass it in when making an update. If the head revision
 *  number on the server has since incremented, then an ABORTED error is
 *  returned during the update operation to let the buyer know that a subsequent
 *  update was made.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *proposalRevision;

/**
 *  Immutable. Reference to the seller on the deal. Format:
 *  `buyers/{buyerAccountId}/publisherProfiles/{publisherProfileId}`
 */
@property(nonatomic, copy, nullable) NSString *publisherProfile;

/**
 *  Output only. Time zone of the seller used to mark the boundaries of a day
 *  for daypart targeting and CPD billing.
 */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_TimeZone *sellerTimeZone;

/**
 *  Specifies the subset of inventory targeted by the deal. Can be updated by
 *  the buyer before the deal is finalized.
 */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_MarketplaceTargeting *targeting;

/** Output only. The time when the deal was last updated. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  Information related to deal pausing.
 */
@interface GTLRAuthorizedBuyersMarketplace_DealPausingInfo : GTLRObject

/** The reason for the pausing of the deal; empty for active deals. */
@property(nonatomic, copy, nullable) NSString *pauseReason;

/**
 *  The party that first paused the deal; unspecified for active deals.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DealPausingInfo_PauseRole_Buyer
 *        Specifies the role as buyer. (Value: "BUYER")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DealPausingInfo_PauseRole_BuyerSellerRoleUnspecified
 *        A placeholder for an undefined buyer/seller role. (Value:
 *        "BUYER_SELLER_ROLE_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DealPausingInfo_PauseRole_Seller
 *        Specifies the role as seller. (Value: "SELLER")
 */
@property(nonatomic, copy, nullable) NSString *pauseRole;

/**
 *  Whether pausing is consented between buyer and seller for the deal.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pausingConsented;

@end


/**
 *  Message contains details about how the deal will be paced.
 */
@interface GTLRAuthorizedBuyersMarketplace_DeliveryControl : GTLRObject

/**
 *  Output only. Specifies roadblocking in a main companion lineitem.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CompanionDeliveryType_CompanionDeliveryTypeUnspecified
 *        A placeholder for an unspecified companion delivery type. (Value:
 *        "COMPANION_DELIVERY_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CompanionDeliveryType_DeliveryAll
 *        All companions in the set must be served in order for the creative set
 *        to be used. This can still serve to inventory that has more companions
 *        than can be filled. (Value: "DELIVERY_ALL")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CompanionDeliveryType_DeliveryAtLeastOne
 *        At least one companion must be served in order for the creative set to
 *        be used. (Value: "DELIVERY_AT_LEAST_ONE")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CompanionDeliveryType_DeliveryOptional
 *        Companions are not required to serve a creative set. The creative set
 *        can serve an inventory that has zero or more matching companions.
 *        (Value: "DELIVERY_OPTIONAL")
 */
@property(nonatomic, copy, nullable) NSString *companionDeliveryType;

/**
 *  Output only. Specifies strategy to use for selecting a creative when
 *  multiple creatives of the same size are available.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CreativeRotationType_CreativeRotationTypeUnspecified
 *        Creatives are displayed roughly the same number of times over the
 *        duration of the deal. (Value: "CREATIVE_ROTATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CreativeRotationType_RotationEven
 *        Creatives are displayed roughly the same number of times over the
 *        duration of the deal. (Value: "ROTATION_EVEN")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CreativeRotationType_RotationManual
 *        Creatives are served roughly proportionally to their weights. (Value:
 *        "ROTATION_MANUAL")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CreativeRotationType_RotationOptimized
 *        Creatives are served roughly proportionally to their performance.
 *        (Value: "ROTATION_OPTIMIZED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_CreativeRotationType_RotationSequential
 *        Creatives are served exactly in sequential order, also known as
 *        Storyboarding. (Value: "ROTATION_SEQUENTIAL")
 */
@property(nonatomic, copy, nullable) NSString *creativeRotationType;

/**
 *  Output only. Specifies how the impression delivery will be paced.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_DeliveryRateType_AsFastAsPossible
 *        Impressions are served as fast as possible. (Value:
 *        "AS_FAST_AS_POSSIBLE")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_DeliveryRateType_DeliveryRateTypeUnspecified
 *        A placeholder for an undefined delivery rate type. (Value:
 *        "DELIVERY_RATE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_DeliveryRateType_Evenly
 *        Impressions are served uniformly over the life of the deal. (Value:
 *        "EVENLY")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_DeliveryRateType_FrontLoaded
 *        Impressions are served front-loaded. (Value: "FRONT_LOADED")
 */
@property(nonatomic, copy, nullable) NSString *deliveryRateType;

/**
 *  Output only. Specifies any frequency caps. Cannot be filtered within
 *  ListDealsRequest.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_FrequencyCap *> *frequencyCap;

/**
 *  Output only. Specifies the roadblocking type in display creatives.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_RoadblockingType_AllRoadblock
 *        All or none of the creatives from a deal will serve. (Value:
 *        "ALL_ROADBLOCK")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_RoadblockingType_AsManyAsPossible
 *        As many creatives from a deal as can fit on a page will serve. This
 *        could mean anywhere from one to all of a deal's creatives given the
 *        size constraints of ad slots on a page. (Value: "AS_MANY_AS_POSSIBLE")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_RoadblockingType_CreativeSet
 *        A main/companion creative set roadblocking type. (Value:
 *        "CREATIVE_SET")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_RoadblockingType_OneOrMore
 *        Any number of creatives from a deal can serve together per ad request.
 *        (Value: "ONE_OR_MORE")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_RoadblockingType_OnlyOne
 *        Only one creative from a deal can serve per ad request.
 *        https://support.google.com/admanager/answer/177277. (Value:
 *        "ONLY_ONE")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_DeliveryControl_RoadblockingType_RoadblockingTypeUnspecified
 *        A placeholder for an unspecified roadblocking type. (Value:
 *        "ROADBLOCKING_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *roadblockingType;

@end


/**
 *  A generic empty message that you can re-use to avoid defining duplicated
 *  empty messages in your APIs. A typical example is to use it as the request
 *  or the response type of an API method. For instance: service Foo { rpc
 *  Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
 */
@interface GTLRAuthorizedBuyersMarketplace_Empty : GTLRObject
@end


/**
 *  A finalized deal is a snapshot of the deal when both buyer and seller accept
 *  the deal. The buyer or seller can update the deal after it's been finalized
 *  and renegotiate on the deal targeting, terms and other fields, while at the
 *  same time the finalized snapshot of the deal can still be retrieved using
 *  this API. The finalized deal contains a copy of the deal as it existed when
 *  most recently finalized, as well as fields related to deal serving such as
 *  pause/resume status, RTB metrics, and more.
 */
@interface GTLRAuthorizedBuyersMarketplace_FinalizedDeal : GTLRObject

/**
 *  A copy of the Deal made upon finalization. During renegotiation, this will
 *  reflect the last finalized deal before renegotiation was initiated.
 */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_Deal *deal;

/** Information related to deal pausing for the deal. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_DealPausingInfo *dealPausingInfo;

/**
 *  Serving status of the deal.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_FinalizedDeal_DealServingStatus_Active
 *        The deal is actively serving or ready to serve when the start date is
 *        reached. (Value: "ACTIVE")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_FinalizedDeal_DealServingStatus_DealServingStatusUnspecified
 *        Unspecified. (Value: "DEAL_SERVING_STATUS_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_FinalizedDeal_DealServingStatus_Ended
 *        The deal serving has ended. (Value: "ENDED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_FinalizedDeal_DealServingStatus_PausedByBuyer
 *        The deal serving is paused by buyer. (Value: "PAUSED_BY_BUYER")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_FinalizedDeal_DealServingStatus_PausedBySeller
 *        The deal serving is paused by seller. (Value: "PAUSED_BY_SELLER")
 */
@property(nonatomic, copy, nullable) NSString *dealServingStatus;

/**
 *  The resource name of the finalized deal. Format:
 *  `buyers/{accountId}/finalizeddeals/{finalizedDealId}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Whether the Programmatic Guaranteed deal is ready for serving.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *readyToServe;

/** Real-time bidding metrics for this deal. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_RtbMetrics *rtbMetrics;

@end


/**
 *  Represents a list of targeted and excluded mobile application IDs that
 *  publishers own. Android App ID, for example, com.google.android.apps.maps,
 *  can be found in Google Play Store URL. iOS App ID (which is a number) can be
 *  found at the end of iTunes store URL. First party mobile applications is
 *  either included or excluded.
 */
@interface GTLRAuthorizedBuyersMarketplace_FirstPartyMobileApplicationTargeting : GTLRObject

/** A list of application IDs to be excluded. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *excludedAppIds;

/** A list of application IDs to be included. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *targetedAppIds;

@end


/**
 *  Message contains details about publisher-set frequency caps of the delivery.
 */
@interface GTLRAuthorizedBuyersMarketplace_FrequencyCap : GTLRObject

/**
 *  The maximum number of impressions that can be served to a user within the
 *  specified time period.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxImpressions;

/**
 *  The amount of time, in the units specified by time_unit_type. Defines the
 *  amount of time over which impressions per user are counted and capped.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timeUnitsCount;

/**
 *  The time unit. Along with num_time_units defines the amount of time over
 *  which impressions per user are counted and capped.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Day Day
 *        unit. (Value: "DAY")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Hour
 *        Hour unit. (Value: "HOUR")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Lifetime
 *        Lifecycle/Lifetime unit. (Value: "LIFETIME")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Minute
 *        Minute unit. (Value: "MINUTE")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Month
 *        Month unit. (Value: "MONTH")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Pod Pod
 *        unit. (Value: "POD")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Stream
 *        Stream unit. (Value: "STREAM")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_TimeUnitTypeUnspecified
 *        A placeholder for an undefined time unit type. This just indicates the
 *        variable with this value hasn't been initialized. (Value:
 *        "TIME_UNIT_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_FrequencyCap_TimeUnitType_Week
 *        Week unit. (Value: "WEEK")
 */
@property(nonatomic, copy, nullable) NSString *timeUnitType;

@end


/**
 *  Represents the size of an ad unit that can be targeted on a bid request.
 */
@interface GTLRAuthorizedBuyersMarketplace_InventorySizeTargeting : GTLRObject

/** A list of inventory sizes to be excluded. */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_AdSize *> *excludedInventorySizes;

/** A list of inventory sizes to be included. */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_AdSize *> *targetedInventorySizes;

@end


/**
 *  Targeting of the inventory types a bid request can originate from.
 */
@interface GTLRAuthorizedBuyersMarketplace_InventoryTypeTargeting : GTLRObject

/** The list of targeted inventory types for the bid request. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *inventoryTypes;

@end


/**
 *  Response message for listing auction packages.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "auctionPackages" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRAuthorizedBuyersMarketplace_ListAuctionPackagesResponse : GTLRCollectionObject

/**
 *  The list of auction packages.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_AuctionPackage *> *auctionPackages;

/**
 *  Continuation token for fetching the next page of results. Pass this value in
 *  the ListAuctionPackagesRequest.pageToken field in the subsequent call to the
 *  `ListAuctionPackages` method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for the list method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "clients" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAuthorizedBuyersMarketplace_ListClientsResponse : GTLRCollectionObject

/**
 *  The returned list of clients.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_Client *> *clients;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  ListClientsRequest.pageToken field in the subsequent call to the list method
 *  to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for the list method.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "clientUsers" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAuthorizedBuyersMarketplace_ListClientUsersResponse : GTLRCollectionObject

/**
 *  The returned list of client users.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_ClientUser *> *clientUsers;

/**
 *  A token to retrieve the next page of results. Pass this value in the
 *  ListClientUsersRequest.pageToken field in the subsequent call to the list
 *  method to retrieve the next page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for listing deals in a proposal.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "deals" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAuthorizedBuyersMarketplace_ListDealsResponse : GTLRCollectionObject

/**
 *  The list of deals.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_Deal *> *deals;

/** Token to fetch the next page of results. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for listing finalized deals.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "finalizedDeals" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRAuthorizedBuyersMarketplace_ListFinalizedDealsResponse : GTLRCollectionObject

/**
 *  The list of finalized deals.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_FinalizedDeal *> *finalizedDeals;

/** Token to fetch the next page of results. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  Response message for listing proposals.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "proposals" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRAuthorizedBuyersMarketplace_ListProposalsResponse : GTLRCollectionObject

/** Continuation token for fetching the next page of results. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of proposals.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_Proposal *> *proposals;

@end


/**
 *  Response message for profiles visible to the buyer.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "publisherProfiles" property. If returned as the result of a
 *        query, it should support automatic pagination (when @c
 *        shouldFetchNextPages is enabled).
 */
@interface GTLRAuthorizedBuyersMarketplace_ListPublisherProfilesResponse : GTLRCollectionObject

/** Token to fetch the next page of results. */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  The list of matching publisher profiles.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_PublisherProfile *> *publisherProfiles;

@end


/**
 *  Targeting represents different criteria that can be used to target
 *  inventory. For example, they can choose to target inventory only if the user
 *  is in the US. Multiple types of targeting are always applied as a logical
 *  AND, unless noted otherwise.
 */
@interface GTLRAuthorizedBuyersMarketplace_MarketplaceTargeting : GTLRObject

/** Daypart targeting information. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_DayPartTargeting *daypartTargeting;

/** Output only. Geo criteria IDs to be included/excluded. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_CriteriaTargeting *geoTargeting;

/** Output only. Inventory sizes to be included/excluded. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_InventorySizeTargeting *inventorySizeTargeting;

/** Output only. Inventory type targeting information. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_InventoryTypeTargeting *inventoryTypeTargeting;

/**
 *  Output only. Placement targeting information, for example, URL, mobile
 *  applications.
 */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_PlacementTargeting *placementTargeting;

/**
 *  Output only. Technology targeting information, for example, operating
 *  system, device category.
 */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_TechnologyTargeting *technologyTargeting;

/**
 *  Buyer user list targeting information. User lists can be uploaded using
 *  https://developers.google.com/authorized-buyers/rtb/bulk-uploader.
 */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_CriteriaTargeting *userListTargeting;

/** Output only. Video targeting information. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_VideoTargeting *videoTargeting;

@end


/**
 *  Mobile application targeting settings.
 */
@interface GTLRAuthorizedBuyersMarketplace_MobileApplicationTargeting : GTLRObject

/**
 *  Publisher owned apps to be targeted or excluded by the publisher to display
 *  the ads in.
 */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_FirstPartyMobileApplicationTargeting *firstPartyTargeting;

@end


/**
 *  Represents an amount of money with its currency type.
 */
@interface GTLRAuthorizedBuyersMarketplace_Money : GTLRObject

/** The three-letter currency code defined in ISO 4217. */
@property(nonatomic, copy, nullable) NSString *currencyCode;

/**
 *  Number of nano (10^-9) units of the amount. The value must be between
 *  -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos`
 *  must be positive or zero. If `units` is zero, `nanos` can be positive, zero,
 *  or negative. If `units` is negative, `nanos` must be negative or zero. For
 *  example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  The whole units of the amount. For example if `currencyCode` is `"USD"`,
 *  then 1 unit is one US dollar.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *units;

@end


/**
 *  A text note attached to the proposal to facilitate the communication between
 *  buyers and sellers.
 */
@interface GTLRAuthorizedBuyersMarketplace_Note : GTLRObject

/** Output only. When this note was created. */
@property(nonatomic, strong, nullable) GTLRDateTime *createTime;

/**
 *  Output only. The role who created the note.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Note_CreatorRole_Buyer Specifies
 *        the role as buyer. (Value: "BUYER")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Note_CreatorRole_BuyerSellerRoleUnspecified
 *        A placeholder for an undefined buyer/seller role. (Value:
 *        "BUYER_SELLER_ROLE_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Note_CreatorRole_Seller Specifies
 *        the role as seller. (Value: "SELLER")
 */
@property(nonatomic, copy, nullable) NSString *creatorRole;

/** The text of the note. Maximum length is 1024 characters. */
@property(nonatomic, copy, nullable) NSString *note;

@end


/**
 *  Represents targeting information for operating systems.
 */
@interface GTLRAuthorizedBuyersMarketplace_OperatingSystemTargeting : GTLRObject

/** IDs of operating systems to be included/excluded. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_CriteriaTargeting *operatingSystemCriteria;

/** IDs of operating system versions to be included/excluded. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_CriteriaTargeting *operatingSystemVersionCriteria;

@end


/**
 *  Request message for pausing a finalized deal.
 */
@interface GTLRAuthorizedBuyersMarketplace_PauseFinalizedDealRequest : GTLRObject

/**
 *  The reason to pause the finalized deal, will be displayed to the seller.
 *  Maximum length is 1000 characters.
 */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  Represents targeting about where the ads can appear, for example, certain
 *  sites or mobile applications. Different placement targeting types will be
 *  logically OR'ed.
 */
@interface GTLRAuthorizedBuyersMarketplace_PlacementTargeting : GTLRObject

/**
 *  Mobile application targeting information in a deal. This doesn't apply to
 *  Auction Packages.
 */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_MobileApplicationTargeting *mobileApplicationTargeting;

/** URLs to be included/excluded. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_UriTargeting *uriTargeting;

@end


/**
 *  Pricing terms for Preferred Deals.
 */
@interface GTLRAuthorizedBuyersMarketplace_PreferredDealTerms : GTLRObject

/** Fixed price for the deal. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_Price *fixedPrice;

@end


/**
 *  Represents a price and a pricing type for a deal.
 */
@interface GTLRAuthorizedBuyersMarketplace_Price : GTLRObject

/** The actual price with currency specified. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_Money *amount;

/**
 *  The pricing type for the deal.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Price_Type_Cpd Cost per day.
 *        (Value: "CPD")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Price_Type_Cpm Cost per thousand
 *        impressions. (Value: "CPM")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Price_Type_TypeUnspecified A
 *        placeholder for an undefined pricing type. If the pricing type is
 *        unspecified, CPM will be used instead. (Value: "TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Pricing terms for Private Auctions.
 */
@interface GTLRAuthorizedBuyersMarketplace_PrivateAuctionTerms : GTLRObject

/** The minimum price buyer has to bid to compete in the private auction. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_Price *floorPrice;

/**
 *  Output only. True if open auction buyers are allowed to compete with invited
 *  buyers in this private auction.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *openAuctionAllowed;

@end


/**
 *  Buyers are allowed to store certain types of private data in a proposal or
 *  deal.
 */
@interface GTLRAuthorizedBuyersMarketplace_PrivateData : GTLRObject

/**
 *  A buyer specified reference ID. This can be queried in the list operations
 *  (max-length: 1024 unicode code units).
 */
@property(nonatomic, copy, nullable) NSString *referenceId;

@end


/**
 *  Pricing terms for Programmatic Guaranteed Deals.
 */
@interface GTLRAuthorizedBuyersMarketplace_ProgrammaticGuaranteedTerms : GTLRObject

/** Fixed price for the deal. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_Price *fixedPrice;

/**
 *  Count of guaranteed looks.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *guaranteedLooks;

/**
 *  The lifetime impression cap for CPM Sponsorship deals. Deal will stop
 *  serving when cap is reached.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *impressionCap;

/**
 *  Daily minimum looks for CPD deal types.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minimumDailyLooks;

/**
 *  For sponsorship deals, this is the percentage of the seller's eligible
 *  impressions that the deal will serve until the cap is reached. Valid value
 *  is within range 0~100.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *percentShareOfVoice;

/**
 *  The reservation type for a Programmatic Guaranteed deal. This indicates
 *  whether the number of impressions is fixed, or a percent of available
 *  impressions. If not specified, the default reservation type is STANDARD.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_ProgrammaticGuaranteedTerms_ReservationType_ReservationTypeUnspecified
 *        An unspecified reservation type. (Value:
 *        "RESERVATION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_ProgrammaticGuaranteedTerms_ReservationType_Sponsorship
 *        Sponsorship deals don't have impression goal (guaranteed_looks) and
 *        they are served based on the flight dates. For CPM Sponsorship deals,
 *        impression_cap is the lifetime impression limit. (Value:
 *        "SPONSORSHIP")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_ProgrammaticGuaranteedTerms_ReservationType_Standard
 *        Non-sponsorship deal. (Value: "STANDARD")
 */
@property(nonatomic, copy, nullable) NSString *reservationType;

@end


/**
 *  Represents a proposal in the Marketplace. A proposal is the unit of
 *  negotiation between a seller and a buyer.
 */
@interface GTLRAuthorizedBuyersMarketplace_Proposal : GTLRObject

/**
 *  Output only. When the client field is populated, this field refers to the
 *  buyer who creates and manages the client buyer and gets billed on behalf of
 *  the client buyer; when the buyer field is populated, this field is the same
 *  value as buyer. Format : `buyers/{buyerAccountId}`
 */
@property(nonatomic, copy, nullable) NSString *billedBuyer;

/**
 *  Output only. Refers to a buyer in The Realtime-bidding API. Format:
 *  `buyers/{buyerAccountId}`
 */
@property(nonatomic, copy, nullable) NSString *buyer;

/** Contact information for the buyer. */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_Contact *> *buyerContacts;

/** Buyer private data (hidden from seller). */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_PrivateData *buyerPrivateData;

/**
 *  Output only. Refers to a Client. Format:
 *  `buyers/{buyerAccountId}/clients/{clientAccountid}`
 */
@property(nonatomic, copy, nullable) NSString *client;

/**
 *  Output only. Type of deal the proposal contains.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_DealType_DealTypeUnspecified
 *        Default, unspecified deal type. (Value: "DEAL_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_DealType_PreferredDeal
 *        Preferred deals. (Value: "PREFERRED_DEAL")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_DealType_PrivateAuction
 *        Private auction deals. (Value: "PRIVATE_AUCTION")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_DealType_ProgrammaticGuaranteed
 *        Programmatic guaranteed deals. (Value: "PROGRAMMATIC_GUARANTEED")
 */
@property(nonatomic, copy, nullable) NSString *dealType;

/**
 *  Output only. The descriptive name for the proposal. Maximum length of 255
 *  unicode characters is allowed. Control characters are not allowed. Buyers
 *  cannot update this field. Note: Not to be confused with name, which is a
 *  unique identifier of the proposal.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Output only. True if the proposal was previously finalized and is now being
 *  renegotiated.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isRenegotiating;

/**
 *  Output only. The role of the last user that either updated the proposal or
 *  left a comment.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_LastUpdaterOrCommentorRole_Buyer
 *        Specifies the role as buyer. (Value: "BUYER")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_LastUpdaterOrCommentorRole_BuyerSellerRoleUnspecified
 *        A placeholder for an undefined buyer/seller role. (Value:
 *        "BUYER_SELLER_ROLE_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_LastUpdaterOrCommentorRole_Seller
 *        Specifies the role as seller. (Value: "SELLER")
 */
@property(nonatomic, copy, nullable) NSString *lastUpdaterOrCommentorRole;

/**
 *  Immutable. The name of the proposal serving as a unique identifier. Format:
 *  buyers/{accountId}/proposals/{proposalId}
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A list of notes from the buyer and the seller attached to this proposal.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_Note *> *notes;

/**
 *  Output only. Indicates whether the buyer/seller created the proposal.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_OriginatorRole_Buyer
 *        Specifies the role as buyer. (Value: "BUYER")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_OriginatorRole_BuyerSellerRoleUnspecified
 *        A placeholder for an undefined buyer/seller role. (Value:
 *        "BUYER_SELLER_ROLE_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_OriginatorRole_Seller
 *        Specifies the role as seller. (Value: "SELLER")
 */
@property(nonatomic, copy, nullable) NSString *originatorRole;

/**
 *  Whether pausing is allowed for the proposal. This is a negotiable term
 *  between buyers and publishers.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pausingConsented;

/**
 *  Output only. The revision number for the proposal. Each update to the
 *  proposal or deal causes the proposal revision number to auto-increment. The
 *  buyer keeps track of the last revision number they know of and pass it in
 *  when making an update. If the head revision number on the server has since
 *  incremented, then an ABORTED error is returned during the update operation
 *  to let the buyer know that a subsequent update was made.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *proposalRevision;

/**
 *  Immutable. Reference to the seller on the proposal. Format:
 *  `buyers/{buyerAccountId}/publisherProfiles/{publisherProfileId}` Note: This
 *  field may be set only when creating the resource. Modifying this field while
 *  updating the resource will result in an error.
 */
@property(nonatomic, copy, nullable) NSString *publisherProfile;

/** Output only. Contact information for the seller. */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_Contact *> *sellerContacts;

/**
 *  Output only. Indicates the state of the proposal.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_State_BuyerAcceptanceRequested
 *        When the seller accepted the proposal and sent it to the buyer for
 *        review. (Value: "BUYER_ACCEPTANCE_REQUESTED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_State_BuyerReviewRequested
 *        When a proposal is waiting for buyer to review. (Value:
 *        "BUYER_REVIEW_REQUESTED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_State_Finalized When
 *        both buyer and seller has accepted the proposal (Value: "FINALIZED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_State_SellerReviewRequested
 *        When the proposal is waiting for the seller to review. (Value:
 *        "SELLER_REVIEW_REQUESTED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_State_StateUnspecified
 *        Unspecified proposal state (Value: "STATE_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_Proposal_State_Terminated When
 *        either buyer or seller has cancelled the proposal (Value:
 *        "TERMINATED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Output only. The terms and conditions associated with this proposal.
 *  Accepting a proposal implies acceptance of this field. This is created by
 *  the seller, the buyer can only view it.
 */
@property(nonatomic, copy, nullable) NSString *termsAndConditions;

/** Output only. The time when the proposal was last revised. */
@property(nonatomic, strong, nullable) GTLRDateTime *updateTime;

@end


/**
 *  The values in the publisher profile are supplied by the publisher. All
 *  fields are not filterable unless stated otherwise.
 */
@interface GTLRAuthorizedBuyersMarketplace_PublisherProfile : GTLRObject

/** Description on the publisher's audience. */
@property(nonatomic, copy, nullable) NSString *audienceDescription;

/**
 *  Contact information for direct reservation deals. This is free text entered
 *  by the publisher and may include information like names, phone numbers and
 *  email addresses.
 */
@property(nonatomic, copy, nullable) NSString *directDealsContact;

/**
 *  Display name of the publisher profile. Can be used to filter the response of
 *  the publisherProfiles.list method.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  The list of domains represented in this publisher profile. Empty if this is
 *  a parent profile. These are top private domains, meaning that these will not
 *  contain a string like "photos.google.co.uk/123", but will instead contain
 *  "google.co.uk". Can be used to filter the response of the
 *  publisherProfiles.list method.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *domains;

/**
 *  Indicates if this profile is the parent profile of the seller. A parent
 *  profile represents all the inventory from the seller, as opposed to child
 *  profile that is created to brand a portion of inventory. One seller has only
 *  one parent publisher profile, and can have multiple child profiles. See
 *  https://support.google.com/admanager/answer/6035806 for details. Can be used
 *  to filter the response of the publisherProfiles.list method by setting the
 *  filter to "is_parent: true".
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isParent;

/**
 *  A Google public URL to the logo for this publisher profile. The logo is
 *  stored as a PNG, JPG, or GIF image.
 */
@property(nonatomic, copy, nullable) NSString *logoUrl;

/** URL to additional marketing and sales materials. */
@property(nonatomic, copy, nullable) NSString *mediaKitUrl;

/**
 *  The list of apps represented in this publisher profile. Empty if this is a
 *  parent profile.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication *> *mobileApps;

/**
 *  Name of the publisher profile. Format:
 *  `buyers/{buyer}/publisherProfiles/{publisher_profile}`
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Overview of the publisher. */
@property(nonatomic, copy, nullable) NSString *overview;

/**
 *  Statement explaining what's unique about publisher's business, and why
 *  buyers should partner with the publisher.
 */
@property(nonatomic, copy, nullable) NSString *pitchStatement;

/**
 *  Contact information for programmatic deals. This is free text entered by the
 *  publisher and may include information like names, phone numbers and email
 *  addresses.
 */
@property(nonatomic, copy, nullable) NSString *programmaticDealsContact;

/**
 *  A unique identifying code for the seller. This value is the same for all of
 *  the seller's parent and child publisher profiles. Can be used to filter the
 *  response of the publisherProfiles.list method.
 */
@property(nonatomic, copy, nullable) NSString *publisherCode;

/** URL to a sample content page. */
@property(nonatomic, copy, nullable) NSString *samplePageUrl;

/**
 *  Up to three key metrics and rankings. For example, "#1 Mobile News Site for
 *  20 Straight Months".
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *topHeadlines;

@end


/**
 *  A mobile application that contains a external app ID, name, and app store.
 */
@interface GTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication : GTLRObject

/**
 *  The app store the app belongs to. Can be used to filter the response of the
 *  publisherProfiles.list method.
 *
 *  Likely values:
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Amazon
 *        Amazon Appstore (Value: "AMAZON")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_AmazonFireTv
 *        Amazon Fire TV (Value: "AMAZON_FIRE_TV")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_AppleItunes
 *        Apple iTunes (Value: "APPLE_ITUNES")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_AppStoreTypeUnspecified
 *        A placeholder for an unknown app store. (Value:
 *        "APP_STORE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_GooglePlay
 *        Google Play (Value: "GOOGLE_PLAY")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Oppo
 *        OPPO App Market (Value: "OPPO")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Playstation
 *        PlayStation (Value: "PLAYSTATION")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Roku
 *        Roku (Value: "ROKU")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Samsung
 *        Samsung Galaxy Store (Value: "SAMSUNG")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_SamsungTv
 *        Samsung TV (Value: "SAMSUNG_TV")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Vivo
 *        VIVO App Store (Value: "VIVO")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Xbox
 *        Xbox (Value: "XBOX")
 *    @arg @c kGTLRAuthorizedBuyersMarketplace_PublisherProfileMobileApplication_AppStore_Xiaomi
 *        Xiaomi GetApps (Value: "XIAOMI")
 */
@property(nonatomic, copy, nullable) NSString *appStore;

/**
 *  The external ID for the app from its app store. Can be used to filter the
 *  response of the publisherProfiles.list method.
 */
@property(nonatomic, copy, nullable) NSString *externalAppId;

/** The name of the app. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Request message for resuming a finalized deal.
 */
@interface GTLRAuthorizedBuyersMarketplace_ResumeFinalizedDealRequest : GTLRObject
@end


/**
 *  Real-time bidding metrics. For what each metric means refer to [Report
 *  metrics](https://support.google.com/adxbuyer/answer/6115195#report-metrics)
 */
@interface GTLRAuthorizedBuyersMarketplace_RtbMetrics : GTLRObject

/**
 *  Ad impressions in last 7 days.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adImpressions7Days;

/**
 *  Bid rate in last 7 days, calculated by (bids / bid requests).
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bidRate7Days;

/**
 *  Bid requests in last 7 days.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bidRequests7Days;

/**
 *  Bids in last 7 days.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *bids7Days;

/**
 *  Filtered bid rate in last 7 days, calculated by (filtered bids / bids).
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *filteredBidRate7Days;

/**
 *  Must bid rate for current month.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mustBidRateCurrentMonth;

@end


/**
 *  Request to send an RFP. All fields in this request are proposed to publisher
 *  and subject to changes by publisher during later negotiation.
 */
@interface GTLRAuthorizedBuyersMarketplace_SendRfpRequest : GTLRObject

/** Contact information for the buyer. */
@property(nonatomic, strong, nullable) NSArray<GTLRAuthorizedBuyersMarketplace_Contact *> *buyerContacts;

/**
 *  If the current buyer is sending the RFP on behalf of its client, use this
 *  field to specify the name of the client in the format:
 *  `buyers/{accountId}/clients/{clientAccountid}`.
 */
@property(nonatomic, copy, nullable) NSString *client;

/** Required. The display name of the proposal being created by this RFP. */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Specified by buyers in request for proposal (RFP) to notify publisher the
 *  total estimated spend for the proposal. Publishers will receive this
 *  information and send back proposed deals accordingly.
 */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_Money *estimatedGrossSpend;

/**
 *  Required. Proposed flight end time of the RFP. A timestamp in RFC3339 UTC
 *  "Zulu" format. Note that the specified value will be truncated to a
 *  granularity of one second.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *flightEndTime;

/**
 *  Required. Proposed flight start time of the RFP. A timestamp in RFC3339 UTC
 *  "Zulu" format. Note that the specified value will be truncated to a
 *  granularity of one second.
 */
@property(nonatomic, strong, nullable) GTLRDateTime *flightStartTime;

/** Geo criteria IDs to be targeted. Refer to Geo tables. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_CriteriaTargeting *geoTargeting;

/** Inventory sizes to be targeted. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_InventorySizeTargeting *inventorySizeTargeting;

/**
 *  A message that is sent to the publisher. Maximum length is 1024 characters.
 */
@property(nonatomic, copy, nullable) NSString *note;

/** The terms for preferred deals. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_PreferredDealTerms *preferredDealTerms;

/** The terms for programmatic guaranteed deals. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_ProgrammaticGuaranteedTerms *programmaticGuaranteedTerms;

/**
 *  Required. The profile of the publisher who will receive this RFP in the
 *  format: `buyers/{accountId}/publisherProfiles/{publisherProfileId}`.
 */
@property(nonatomic, copy, nullable) NSString *publisherProfile;

@end


/**
 *  Request message for setting ready to serve for a finalized deal.
 */
@interface GTLRAuthorizedBuyersMarketplace_SetReadyToServeRequest : GTLRObject
@end


/**
 *  Request message for SubscribeAuctionPackage.
 */
@interface GTLRAuthorizedBuyersMarketplace_SubscribeAuctionPackageRequest : GTLRObject
@end


/**
 *  Request message for SubscribeAuctionPackageClients.
 */
@interface GTLRAuthorizedBuyersMarketplace_SubscribeClientsRequest : GTLRObject

/**
 *  Optional. A list of client buyers to subscribe to the auction package, with
 *  client buyer in the format `buyers/{accountId}/clients/{clientAccountId}`.
 *  The current buyer will be subscribed to the auction package regardless of
 *  the list contents if not already.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *clients;

@end


/**
 *  Represents targeting about various types of technology.
 */
@interface GTLRAuthorizedBuyersMarketplace_TechnologyTargeting : GTLRObject

/** IDs of device capabilities to be included/excluded. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_CriteriaTargeting *deviceCapabilityTargeting;

/** IDs of device categories to be included/excluded. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_CriteriaTargeting *deviceCategoryTargeting;

/** Operating system related targeting information. */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_OperatingSystemTargeting *operatingSystemTargeting;

@end


/**
 *  Represents a time of day. The date and time zone are either not significant
 *  or are specified elsewhere. An API may choose to allow leap seconds. Related
 *  types are google.type.Date and `google.protobuf.Timestamp`.
 */
@interface GTLRAuthorizedBuyersMarketplace_TimeOfDay : GTLRObject

/**
 *  Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to
 *  allow the value "24:00:00" for scenarios like business closing time.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hours;

/**
 *  Minutes of hour of day. Must be from 0 to 59.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minutes;

/**
 *  Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  Seconds of minutes of the time. Must normally be from 0 to 59. An API may
 *  allow the value 60 if it allows leap-seconds.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *seconds;

@end


/**
 *  Represents a time zone from the [IANA Time Zone
 *  Database](https://www.iana.org/time-zones).
 */
@interface GTLRAuthorizedBuyersMarketplace_TimeZone : GTLRObject

/**
 *  IANA Time Zone Database time zone, e.g. "America/New_York".
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** Optional. IANA Time Zone Database version number, e.g. "2019a". */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Request message for UnsubscribeAuctionPackage.
 */
@interface GTLRAuthorizedBuyersMarketplace_UnsubscribeAuctionPackageRequest : GTLRObject
@end


/**
 *  Request message for UnsubscribeAuctionPackage.
 */
@interface GTLRAuthorizedBuyersMarketplace_UnsubscribeClientsRequest : GTLRObject

/**
 *  Optional. A list of client buyers to unsubscribe from the auction package,
 *  with client buyer in the format
 *  `buyers/{accountId}/clients/{clientAccountId}`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *clients;

@end


/**
 *  Request message for updating the deal at the given revision number.
 */
@interface GTLRAuthorizedBuyersMarketplace_UpdateDealRequest : GTLRObject

/**
 *  Required. The deal to update. The deal's `name` field is used to identify
 *  the deal to be updated. Note: proposal_revision will have to be provided
 *  within the resource or else an error will be thrown. Format:
 *  buyers/{accountId}/proposals/{proposalId}/deals/{dealId}
 */
@property(nonatomic, strong, nullable) GTLRAuthorizedBuyersMarketplace_Deal *deal;

/**
 *  List of fields to be updated. If empty or unspecified, the service will
 *  update all fields populated in the update request excluding the output only
 *  fields and primitive fields with default value. Note that explicit field
 *  mask is required in order to reset a primitive field back to its default
 *  value, for example, false for boolean fields, 0 for integer fields. A
 *  special field mask consisting of a single path "*" can be used to indicate
 *  full replacement(the equivalent of PUT method), updatable fields unset or
 *  unspecified in the input will be cleared or set to default value. Output
 *  only fields will be ignored regardless of the value of updateMask.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

@end


/**
 *  Represents a list of targeted and excluded URLs (for example, google.com).
 *  For Private Auction Deals, URLs are either included or excluded. For
 *  Programmatic Guaranteed and Preferred Deals, this doesn't apply.
 */
@interface GTLRAuthorizedBuyersMarketplace_UriTargeting : GTLRObject

/** A list of URLs to be excluded. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *excludedUris;

/** A list of URLs to be included. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *targetedUris;

@end


/**
 *  Represents targeting information about video.
 */
@interface GTLRAuthorizedBuyersMarketplace_VideoTargeting : GTLRObject

/**
 *  A list of video positions to be excluded. When this field is populated, the
 *  targeted_position_types field must be empty.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *excludedPositionTypes;

/**
 *  A list of video positions to be included. When this field is populated, the
 *  excluded_position_types field must be empty.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *targetedPositionTypes;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
