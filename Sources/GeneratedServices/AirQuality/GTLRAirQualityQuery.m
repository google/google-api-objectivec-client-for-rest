// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Air Quality API (airquality/v1)
// Description:
//   The Air Quality API.
// Documentation:
//   https://developers.google.com/maps/documentation/air-quality

#import <GoogleAPIClientForREST/GTLRAirQualityQuery.h>

// ----------------------------------------------------------------------------
// Constants

// mapType
NSString * const kGTLRAirQualityMapTypeCanEc              = @"CAN_EC";
NSString * const kGTLRAirQualityMapTypeDeuUba             = @"DEU_UBA";
NSString * const kGTLRAirQualityMapTypeFraAtmo            = @"FRA_ATMO";
NSString * const kGTLRAirQualityMapTypeGbrDefra           = @"GBR_DEFRA";
NSString * const kGTLRAirQualityMapTypeMapTypeUnspecified = @"MAP_TYPE_UNSPECIFIED";
NSString * const kGTLRAirQualityMapTypePm25IndigoPersian  = @"PM25_INDIGO_PERSIAN";
NSString * const kGTLRAirQualityMapTypeUaqiIndigoPersian  = @"UAQI_INDIGO_PERSIAN";
NSString * const kGTLRAirQualityMapTypeUaqiRedGreen       = @"UAQI_RED_GREEN";
NSString * const kGTLRAirQualityMapTypeUsAqi              = @"US_AQI";

// ----------------------------------------------------------------------------
// Query Classes
//

@implementation GTLRAirQualityQuery

@dynamic fields;

@end

@implementation GTLRAirQualityQuery_CurrentConditionsLookup

+ (instancetype)queryWithObject:(GTLRAirQuality_LookupCurrentConditionsRequest *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v1/currentConditions:lookup";
  GTLRAirQualityQuery_CurrentConditionsLookup *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRAirQuality_LookupCurrentConditionsResponse class];
  query.loggingName = @"airquality.currentConditions.lookup";
  return query;
}

@end

@implementation GTLRAirQualityQuery_ForecastLookup

+ (instancetype)queryWithObject:(GTLRAirQuality_LookupForecastRequest *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v1/forecast:lookup";
  GTLRAirQualityQuery_ForecastLookup *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRAirQuality_LookupForecastResponse class];
  query.loggingName = @"airquality.forecast.lookup";
  return query;
}

@end

@implementation GTLRAirQualityQuery_HistoryLookup

+ (instancetype)queryWithObject:(GTLRAirQuality_LookupHistoryRequest *)object {
  if (object == nil) {
#if defined(DEBUG) && DEBUG
    NSAssert(object != nil, @"Got a nil object");
#endif
    return nil;
  }
  NSString *pathURITemplate = @"v1/history:lookup";
  GTLRAirQualityQuery_HistoryLookup *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:nil];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLRAirQuality_LookupHistoryResponse class];
  query.loggingName = @"airquality.history.lookup";
  return query;
}

@end

@implementation GTLRAirQualityQuery_MapTypesHeatmapTilesLookupHeatmapTile

@dynamic mapType, x, y, zoom;

+ (instancetype)queryWithMapType:(NSString *)mapType
                            zoom:(NSInteger)zoom
                               x:(NSInteger)x
                               y:(NSInteger)y {
  NSArray *pathParams = @[
    @"mapType", @"x", @"y", @"zoom"
  ];
  NSString *pathURITemplate = @"v1/mapTypes/{mapType}/heatmapTiles/{zoom}/{x}/{y}";
  GTLRAirQualityQuery_MapTypesHeatmapTilesLookupHeatmapTile *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.mapType = mapType;
  query.zoom = zoom;
  query.x = x;
  query.y = y;
  query.expectedObjectClass = [GTLRAirQuality_HttpBody class];
  query.loggingName = @"airquality.mapTypes.heatmapTiles.lookupHeatmapTile";
  return query;
}

@end
