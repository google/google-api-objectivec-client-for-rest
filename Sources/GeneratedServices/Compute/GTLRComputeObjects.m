// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Compute Engine API (compute/v1)
// Description:
//   Creates and runs virtual machines on Google Cloud Platform.
// Documentation:
//   https://cloud.google.com/compute/

#import <GoogleAPIClientForREST/GTLRComputeObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRCompute_AcceleratorTypeAggregatedList_Warning.code
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AcceleratorTypeList_Warning.code
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AcceleratorTypesScopedList_Warning.code
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AccessConfig.networkTier
NSString * const kGTLRCompute_AccessConfig_NetworkTier_FixedStandard = @"FIXED_STANDARD";
NSString * const kGTLRCompute_AccessConfig_NetworkTier_Premium = @"PREMIUM";
NSString * const kGTLRCompute_AccessConfig_NetworkTier_Standard = @"STANDARD";
NSString * const kGTLRCompute_AccessConfig_NetworkTier_StandardOverridesFixedStandard = @"STANDARD_OVERRIDES_FIXED_STANDARD";

// GTLRCompute_AccessConfig.type
NSString * const kGTLRCompute_AccessConfig_Type_DirectIpv6  = @"DIRECT_IPV6";
NSString * const kGTLRCompute_AccessConfig_Type_OneToOneNat = @"ONE_TO_ONE_NAT";

// GTLRCompute_Address.addressType
NSString * const kGTLRCompute_Address_AddressType_External     = @"EXTERNAL";
NSString * const kGTLRCompute_Address_AddressType_Internal     = @"INTERNAL";
NSString * const kGTLRCompute_Address_AddressType_UnspecifiedType = @"UNSPECIFIED_TYPE";

// GTLRCompute_Address.ipv6EndpointType
NSString * const kGTLRCompute_Address_Ipv6EndpointType_Netlb = @"NETLB";
NSString * const kGTLRCompute_Address_Ipv6EndpointType_Vm    = @"VM";

// GTLRCompute_Address.ipVersion
NSString * const kGTLRCompute_Address_IpVersion_Ipv4           = @"IPV4";
NSString * const kGTLRCompute_Address_IpVersion_Ipv6           = @"IPV6";
NSString * const kGTLRCompute_Address_IpVersion_UnspecifiedVersion = @"UNSPECIFIED_VERSION";

// GTLRCompute_Address.networkTier
NSString * const kGTLRCompute_Address_NetworkTier_FixedStandard = @"FIXED_STANDARD";
NSString * const kGTLRCompute_Address_NetworkTier_Premium      = @"PREMIUM";
NSString * const kGTLRCompute_Address_NetworkTier_Standard     = @"STANDARD";
NSString * const kGTLRCompute_Address_NetworkTier_StandardOverridesFixedStandard = @"STANDARD_OVERRIDES_FIXED_STANDARD";

// GTLRCompute_Address.purpose
NSString * const kGTLRCompute_Address_Purpose_DnsResolver      = @"DNS_RESOLVER";
NSString * const kGTLRCompute_Address_Purpose_GceEndpoint      = @"GCE_ENDPOINT";
NSString * const kGTLRCompute_Address_Purpose_IpsecInterconnect = @"IPSEC_INTERCONNECT";
NSString * const kGTLRCompute_Address_Purpose_NatAuto          = @"NAT_AUTO";
NSString * const kGTLRCompute_Address_Purpose_PrivateServiceConnect = @"PRIVATE_SERVICE_CONNECT";
NSString * const kGTLRCompute_Address_Purpose_Serverless       = @"SERVERLESS";
NSString * const kGTLRCompute_Address_Purpose_SharedLoadbalancerVip = @"SHARED_LOADBALANCER_VIP";
NSString * const kGTLRCompute_Address_Purpose_VpcPeering       = @"VPC_PEERING";

// GTLRCompute_Address.status
NSString * const kGTLRCompute_Address_Status_InUse     = @"IN_USE";
NSString * const kGTLRCompute_Address_Status_Reserved  = @"RESERVED";
NSString * const kGTLRCompute_Address_Status_Reserving = @"RESERVING";

// GTLRCompute_AddressAggregatedList_Warning.code
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AddressesScopedList_Warning.code
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AddressList_Warning.code
NSString * const kGTLRCompute_AddressList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AddressList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AddressList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AddressList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AddressList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AddressList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AddressList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AddressList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AddressList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_AddressList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_AddressList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AddressList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AddressList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AddressList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_AddressList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AddressList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AddressList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AddressList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AddressList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AddressList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AddressList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk.interface
NSString * const kGTLRCompute_AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk_Interface_Nvme = @"NVME";
NSString * const kGTLRCompute_AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk_Interface_Scsi = @"SCSI";

// GTLRCompute_AttachedDisk.architecture
NSString * const kGTLRCompute_AttachedDisk_Architecture_ArchitectureUnspecified = @"ARCHITECTURE_UNSPECIFIED";
NSString * const kGTLRCompute_AttachedDisk_Architecture_Arm64  = @"ARM64";
NSString * const kGTLRCompute_AttachedDisk_Architecture_X8664  = @"X86_64";

// GTLRCompute_AttachedDisk.interface
NSString * const kGTLRCompute_AttachedDisk_Interface_Nvme = @"NVME";
NSString * const kGTLRCompute_AttachedDisk_Interface_Scsi = @"SCSI";

// GTLRCompute_AttachedDisk.mode
NSString * const kGTLRCompute_AttachedDisk_Mode_ReadOnly  = @"READ_ONLY";
NSString * const kGTLRCompute_AttachedDisk_Mode_ReadWrite = @"READ_WRITE";

// GTLRCompute_AttachedDisk.type
NSString * const kGTLRCompute_AttachedDisk_Type_Persistent = @"PERSISTENT";
NSString * const kGTLRCompute_AttachedDisk_Type_Scratch    = @"SCRATCH";

// GTLRCompute_AttachedDiskInitializeParams.architecture
NSString * const kGTLRCompute_AttachedDiskInitializeParams_Architecture_ArchitectureUnspecified = @"ARCHITECTURE_UNSPECIFIED";
NSString * const kGTLRCompute_AttachedDiskInitializeParams_Architecture_Arm64 = @"ARM64";
NSString * const kGTLRCompute_AttachedDiskInitializeParams_Architecture_X8664 = @"X86_64";

// GTLRCompute_AttachedDiskInitializeParams.onUpdateAction
NSString * const kGTLRCompute_AttachedDiskInitializeParams_OnUpdateAction_RecreateDisk = @"RECREATE_DISK";
NSString * const kGTLRCompute_AttachedDiskInitializeParams_OnUpdateAction_RecreateDiskIfSourceChanged = @"RECREATE_DISK_IF_SOURCE_CHANGED";
NSString * const kGTLRCompute_AttachedDiskInitializeParams_OnUpdateAction_UseExistingDisk = @"USE_EXISTING_DISK";

// GTLRCompute_AuditLogConfig.logType
NSString * const kGTLRCompute_AuditLogConfig_LogType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRCompute_AuditLogConfig_LogType_DataRead  = @"DATA_READ";
NSString * const kGTLRCompute_AuditLogConfig_LogType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRCompute_AuditLogConfig_LogType_LogTypeUnspecified = @"LOG_TYPE_UNSPECIFIED";

// GTLRCompute_AuthorizationLoggingOptions.permissionType
NSString * const kGTLRCompute_AuthorizationLoggingOptions_PermissionType_AdminRead = @"ADMIN_READ";
NSString * const kGTLRCompute_AuthorizationLoggingOptions_PermissionType_AdminWrite = @"ADMIN_WRITE";
NSString * const kGTLRCompute_AuthorizationLoggingOptions_PermissionType_DataRead = @"DATA_READ";
NSString * const kGTLRCompute_AuthorizationLoggingOptions_PermissionType_DataWrite = @"DATA_WRITE";
NSString * const kGTLRCompute_AuthorizationLoggingOptions_PermissionType_PermissionTypeUnspecified = @"PERMISSION_TYPE_UNSPECIFIED";

// GTLRCompute_Autoscaler.status
NSString * const kGTLRCompute_Autoscaler_Status_Active   = @"ACTIVE";
NSString * const kGTLRCompute_Autoscaler_Status_Deleting = @"DELETING";
NSString * const kGTLRCompute_Autoscaler_Status_Error    = @"ERROR";
NSString * const kGTLRCompute_Autoscaler_Status_Pending  = @"PENDING";

// GTLRCompute_AutoscalerAggregatedList_Warning.code
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AutoscalerList_Warning.code
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AutoscalerList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AutoscalersScopedList_Warning.code
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_AutoscalerStatusDetails.type
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_AllInstancesUnhealthy = @"ALL_INSTANCES_UNHEALTHY";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_BackendServiceDoesNotExist = @"BACKEND_SERVICE_DOES_NOT_EXIST";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_CappedAtMaxNumReplicas = @"CAPPED_AT_MAX_NUM_REPLICAS";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_CustomMetricDataPointsTooSparse = @"CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_CustomMetricInvalid = @"CUSTOM_METRIC_INVALID";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_MinEqualsMax = @"MIN_EQUALS_MAX";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_MissingCustomMetricDataPoints = @"MISSING_CUSTOM_METRIC_DATA_POINTS";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_MissingLoadBalancingDataPoints = @"MISSING_LOAD_BALANCING_DATA_POINTS";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ModeOff = @"MODE_OFF";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ModeOnlyScaleOut = @"MODE_ONLY_SCALE_OUT";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ModeOnlyUp = @"MODE_ONLY_UP";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_MoreThanOneBackendService = @"MORE_THAN_ONE_BACKEND_SERVICE";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_NotEnoughQuotaAvailable = @"NOT_ENOUGH_QUOTA_AVAILABLE";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_RegionResourceStockout = @"REGION_RESOURCE_STOCKOUT";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ScalingTargetDoesNotExist = @"SCALING_TARGET_DOES_NOT_EXIST";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ScheduledInstancesGreaterThanAutoscalerMax = @"SCHEDULED_INSTANCES_GREATER_THAN_AUTOSCALER_MAX";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ScheduledInstancesLessThanAutoscalerMin = @"SCHEDULED_INSTANCES_LESS_THAN_AUTOSCALER_MIN";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_Unknown = @"UNKNOWN";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_UnsupportedMaxRateLoadBalancingConfiguration = @"UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION";
NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ZoneResourceStockout = @"ZONE_RESOURCE_STOCKOUT";

// GTLRCompute_AutoscalingPolicy.mode
NSString * const kGTLRCompute_AutoscalingPolicy_Mode_Off       = @"OFF";
NSString * const kGTLRCompute_AutoscalingPolicy_Mode_On        = @"ON";
NSString * const kGTLRCompute_AutoscalingPolicy_Mode_OnlyScaleOut = @"ONLY_SCALE_OUT";
NSString * const kGTLRCompute_AutoscalingPolicy_Mode_OnlyUp    = @"ONLY_UP";

// GTLRCompute_AutoscalingPolicyCpuUtilization.predictiveMethod
NSString * const kGTLRCompute_AutoscalingPolicyCpuUtilization_PredictiveMethod_None = @"NONE";
NSString * const kGTLRCompute_AutoscalingPolicyCpuUtilization_PredictiveMethod_OptimizeAvailability = @"OPTIMIZE_AVAILABILITY";

// GTLRCompute_AutoscalingPolicyCustomMetricUtilization.utilizationTargetType
NSString * const kGTLRCompute_AutoscalingPolicyCustomMetricUtilization_UtilizationTargetType_DeltaPerMinute = @"DELTA_PER_MINUTE";
NSString * const kGTLRCompute_AutoscalingPolicyCustomMetricUtilization_UtilizationTargetType_DeltaPerSecond = @"DELTA_PER_SECOND";
NSString * const kGTLRCompute_AutoscalingPolicyCustomMetricUtilization_UtilizationTargetType_Gauge = @"GAUGE";

// GTLRCompute_Backend.balancingMode
NSString * const kGTLRCompute_Backend_BalancingMode_Connection = @"CONNECTION";
NSString * const kGTLRCompute_Backend_BalancingMode_Rate       = @"RATE";
NSString * const kGTLRCompute_Backend_BalancingMode_Utilization = @"UTILIZATION";

// GTLRCompute_BackendBucket.compressionMode
NSString * const kGTLRCompute_BackendBucket_CompressionMode_Automatic = @"AUTOMATIC";
NSString * const kGTLRCompute_BackendBucket_CompressionMode_Disabled = @"DISABLED";

// GTLRCompute_BackendBucketCdnPolicy.cacheMode
NSString * const kGTLRCompute_BackendBucketCdnPolicy_CacheMode_CacheAllStatic = @"CACHE_ALL_STATIC";
NSString * const kGTLRCompute_BackendBucketCdnPolicy_CacheMode_ForceCacheAll = @"FORCE_CACHE_ALL";
NSString * const kGTLRCompute_BackendBucketCdnPolicy_CacheMode_InvalidCacheMode = @"INVALID_CACHE_MODE";
NSString * const kGTLRCompute_BackendBucketCdnPolicy_CacheMode_UseOriginHeaders = @"USE_ORIGIN_HEADERS";

// GTLRCompute_BackendBucketList_Warning.code
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_BackendBucketList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_BackendService.compressionMode
NSString * const kGTLRCompute_BackendService_CompressionMode_Automatic = @"AUTOMATIC";
NSString * const kGTLRCompute_BackendService_CompressionMode_Disabled = @"DISABLED";

// GTLRCompute_BackendService.loadBalancingScheme
NSString * const kGTLRCompute_BackendService_LoadBalancingScheme_External = @"EXTERNAL";
NSString * const kGTLRCompute_BackendService_LoadBalancingScheme_ExternalManaged = @"EXTERNAL_MANAGED";
NSString * const kGTLRCompute_BackendService_LoadBalancingScheme_Internal = @"INTERNAL";
NSString * const kGTLRCompute_BackendService_LoadBalancingScheme_InternalManaged = @"INTERNAL_MANAGED";
NSString * const kGTLRCompute_BackendService_LoadBalancingScheme_InternalSelfManaged = @"INTERNAL_SELF_MANAGED";
NSString * const kGTLRCompute_BackendService_LoadBalancingScheme_InvalidLoadBalancingScheme = @"INVALID_LOAD_BALANCING_SCHEME";

// GTLRCompute_BackendService.localityLbPolicy
NSString * const kGTLRCompute_BackendService_LocalityLbPolicy_InvalidLbPolicy = @"INVALID_LB_POLICY";
NSString * const kGTLRCompute_BackendService_LocalityLbPolicy_LeastRequest = @"LEAST_REQUEST";
NSString * const kGTLRCompute_BackendService_LocalityLbPolicy_Maglev = @"MAGLEV";
NSString * const kGTLRCompute_BackendService_LocalityLbPolicy_OriginalDestination = @"ORIGINAL_DESTINATION";
NSString * const kGTLRCompute_BackendService_LocalityLbPolicy_Random = @"RANDOM";
NSString * const kGTLRCompute_BackendService_LocalityLbPolicy_RingHash = @"RING_HASH";
NSString * const kGTLRCompute_BackendService_LocalityLbPolicy_RoundRobin = @"ROUND_ROBIN";

// GTLRCompute_BackendService.protocol
NSString * const kGTLRCompute_BackendService_Protocol_Grpc     = @"GRPC";
NSString * const kGTLRCompute_BackendService_Protocol_Http     = @"HTTP";
NSString * const kGTLRCompute_BackendService_Protocol_Http2    = @"HTTP2";
NSString * const kGTLRCompute_BackendService_Protocol_Https    = @"HTTPS";
NSString * const kGTLRCompute_BackendService_Protocol_Ssl      = @"SSL";
NSString * const kGTLRCompute_BackendService_Protocol_Tcp      = @"TCP";
NSString * const kGTLRCompute_BackendService_Protocol_Udp      = @"UDP";
NSString * const kGTLRCompute_BackendService_Protocol_Unspecified = @"UNSPECIFIED";

// GTLRCompute_BackendService.sessionAffinity
NSString * const kGTLRCompute_BackendService_SessionAffinity_ClientIp = @"CLIENT_IP";
NSString * const kGTLRCompute_BackendService_SessionAffinity_ClientIpNoDestination = @"CLIENT_IP_NO_DESTINATION";
NSString * const kGTLRCompute_BackendService_SessionAffinity_ClientIpPortProto = @"CLIENT_IP_PORT_PROTO";
NSString * const kGTLRCompute_BackendService_SessionAffinity_ClientIpProto = @"CLIENT_IP_PROTO";
NSString * const kGTLRCompute_BackendService_SessionAffinity_GeneratedCookie = @"GENERATED_COOKIE";
NSString * const kGTLRCompute_BackendService_SessionAffinity_HeaderField = @"HEADER_FIELD";
NSString * const kGTLRCompute_BackendService_SessionAffinity_HttpCookie = @"HTTP_COOKIE";
NSString * const kGTLRCompute_BackendService_SessionAffinity_None = @"NONE";

// GTLRCompute_BackendServiceAggregatedList_Warning.code
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_BackendServiceCdnPolicy.cacheMode
NSString * const kGTLRCompute_BackendServiceCdnPolicy_CacheMode_CacheAllStatic = @"CACHE_ALL_STATIC";
NSString * const kGTLRCompute_BackendServiceCdnPolicy_CacheMode_ForceCacheAll = @"FORCE_CACHE_ALL";
NSString * const kGTLRCompute_BackendServiceCdnPolicy_CacheMode_InvalidCacheMode = @"INVALID_CACHE_MODE";
NSString * const kGTLRCompute_BackendServiceCdnPolicy_CacheMode_UseOriginHeaders = @"USE_ORIGIN_HEADERS";

// GTLRCompute_BackendServiceConnectionTrackingPolicy.connectionPersistenceOnUnhealthyBackends
NSString * const kGTLRCompute_BackendServiceConnectionTrackingPolicy_ConnectionPersistenceOnUnhealthyBackends_AlwaysPersist = @"ALWAYS_PERSIST";
NSString * const kGTLRCompute_BackendServiceConnectionTrackingPolicy_ConnectionPersistenceOnUnhealthyBackends_DefaultForProtocol = @"DEFAULT_FOR_PROTOCOL";
NSString * const kGTLRCompute_BackendServiceConnectionTrackingPolicy_ConnectionPersistenceOnUnhealthyBackends_NeverPersist = @"NEVER_PERSIST";

// GTLRCompute_BackendServiceConnectionTrackingPolicy.trackingMode
NSString * const kGTLRCompute_BackendServiceConnectionTrackingPolicy_TrackingMode_InvalidTrackingMode = @"INVALID_TRACKING_MODE";
NSString * const kGTLRCompute_BackendServiceConnectionTrackingPolicy_TrackingMode_PerConnection = @"PER_CONNECTION";
NSString * const kGTLRCompute_BackendServiceConnectionTrackingPolicy_TrackingMode_PerSession = @"PER_SESSION";

// GTLRCompute_BackendServiceList_Warning.code
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_BackendServiceList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy.name
NSString * const kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_InvalidLbPolicy = @"INVALID_LB_POLICY";
NSString * const kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_LeastRequest = @"LEAST_REQUEST";
NSString * const kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_Maglev = @"MAGLEV";
NSString * const kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_OriginalDestination = @"ORIGINAL_DESTINATION";
NSString * const kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_Random = @"RANDOM";
NSString * const kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_RingHash = @"RING_HASH";
NSString * const kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_RoundRobin = @"ROUND_ROBIN";

// GTLRCompute_BackendServicesScopedList_Warning.code
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_BfdPacket.diagnostic
NSString * const kGTLRCompute_BfdPacket_Diagnostic_AdministrativelyDown = @"ADMINISTRATIVELY_DOWN";
NSString * const kGTLRCompute_BfdPacket_Diagnostic_ConcatenatedPathDown = @"CONCATENATED_PATH_DOWN";
NSString * const kGTLRCompute_BfdPacket_Diagnostic_ControlDetectionTimeExpired = @"CONTROL_DETECTION_TIME_EXPIRED";
NSString * const kGTLRCompute_BfdPacket_Diagnostic_DiagnosticUnspecified = @"DIAGNOSTIC_UNSPECIFIED";
NSString * const kGTLRCompute_BfdPacket_Diagnostic_EchoFunctionFailed = @"ECHO_FUNCTION_FAILED";
NSString * const kGTLRCompute_BfdPacket_Diagnostic_ForwardingPlaneReset = @"FORWARDING_PLANE_RESET";
NSString * const kGTLRCompute_BfdPacket_Diagnostic_NeighborSignaledSessionDown = @"NEIGHBOR_SIGNALED_SESSION_DOWN";
NSString * const kGTLRCompute_BfdPacket_Diagnostic_NoDiagnostic = @"NO_DIAGNOSTIC";
NSString * const kGTLRCompute_BfdPacket_Diagnostic_PathDown    = @"PATH_DOWN";
NSString * const kGTLRCompute_BfdPacket_Diagnostic_ReverseConcatenatedPathDown = @"REVERSE_CONCATENATED_PATH_DOWN";

// GTLRCompute_BfdPacket.state
NSString * const kGTLRCompute_BfdPacket_State_AdminDown        = @"ADMIN_DOWN";
NSString * const kGTLRCompute_BfdPacket_State_Down             = @"DOWN";
NSString * const kGTLRCompute_BfdPacket_State_Init             = @"INIT";
NSString * const kGTLRCompute_BfdPacket_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRCompute_BfdPacket_State_Up               = @"UP";

// GTLRCompute_BfdStatus.bfdSessionInitializationMode
NSString * const kGTLRCompute_BfdStatus_BfdSessionInitializationMode_Active = @"ACTIVE";
NSString * const kGTLRCompute_BfdStatus_BfdSessionInitializationMode_Disabled = @"DISABLED";
NSString * const kGTLRCompute_BfdStatus_BfdSessionInitializationMode_Passive = @"PASSIVE";

// GTLRCompute_BfdStatus.localDiagnostic
NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_AdministrativelyDown = @"ADMINISTRATIVELY_DOWN";
NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_ConcatenatedPathDown = @"CONCATENATED_PATH_DOWN";
NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_ControlDetectionTimeExpired = @"CONTROL_DETECTION_TIME_EXPIRED";
NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_DiagnosticUnspecified = @"DIAGNOSTIC_UNSPECIFIED";
NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_EchoFunctionFailed = @"ECHO_FUNCTION_FAILED";
NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_ForwardingPlaneReset = @"FORWARDING_PLANE_RESET";
NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_NeighborSignaledSessionDown = @"NEIGHBOR_SIGNALED_SESSION_DOWN";
NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_NoDiagnostic = @"NO_DIAGNOSTIC";
NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_PathDown = @"PATH_DOWN";
NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_ReverseConcatenatedPathDown = @"REVERSE_CONCATENATED_PATH_DOWN";

// GTLRCompute_BfdStatus.localState
NSString * const kGTLRCompute_BfdStatus_LocalState_AdminDown   = @"ADMIN_DOWN";
NSString * const kGTLRCompute_BfdStatus_LocalState_Down        = @"DOWN";
NSString * const kGTLRCompute_BfdStatus_LocalState_Init        = @"INIT";
NSString * const kGTLRCompute_BfdStatus_LocalState_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRCompute_BfdStatus_LocalState_Up          = @"UP";

// GTLRCompute_Commitment.category
NSString * const kGTLRCompute_Commitment_Category_CategoryUnspecified = @"CATEGORY_UNSPECIFIED";
NSString * const kGTLRCompute_Commitment_Category_License      = @"LICENSE";
NSString * const kGTLRCompute_Commitment_Category_Machine      = @"MACHINE";

// GTLRCompute_Commitment.plan
NSString * const kGTLRCompute_Commitment_Plan_Invalid        = @"INVALID";
NSString * const kGTLRCompute_Commitment_Plan_ThirtySixMonth = @"THIRTY_SIX_MONTH";
NSString * const kGTLRCompute_Commitment_Plan_TwelveMonth    = @"TWELVE_MONTH";

// GTLRCompute_Commitment.status
NSString * const kGTLRCompute_Commitment_Status_Active       = @"ACTIVE";
NSString * const kGTLRCompute_Commitment_Status_Cancelled    = @"CANCELLED";
NSString * const kGTLRCompute_Commitment_Status_Creating     = @"CREATING";
NSString * const kGTLRCompute_Commitment_Status_Expired      = @"EXPIRED";
NSString * const kGTLRCompute_Commitment_Status_NotYetActive = @"NOT_YET_ACTIVE";

// GTLRCompute_Commitment.type
NSString * const kGTLRCompute_Commitment_Type_AcceleratorOptimized = @"ACCELERATOR_OPTIMIZED";
NSString * const kGTLRCompute_Commitment_Type_ComputeOptimized = @"COMPUTE_OPTIMIZED";
NSString * const kGTLRCompute_Commitment_Type_ComputeOptimizedC2d = @"COMPUTE_OPTIMIZED_C2D";
NSString * const kGTLRCompute_Commitment_Type_GeneralPurpose   = @"GENERAL_PURPOSE";
NSString * const kGTLRCompute_Commitment_Type_GeneralPurposeE2 = @"GENERAL_PURPOSE_E2";
NSString * const kGTLRCompute_Commitment_Type_GeneralPurposeN2 = @"GENERAL_PURPOSE_N2";
NSString * const kGTLRCompute_Commitment_Type_GeneralPurposeN2d = @"GENERAL_PURPOSE_N2D";
NSString * const kGTLRCompute_Commitment_Type_GeneralPurposeT2d = @"GENERAL_PURPOSE_T2D";
NSString * const kGTLRCompute_Commitment_Type_MemoryOptimized  = @"MEMORY_OPTIMIZED";
NSString * const kGTLRCompute_Commitment_Type_MemoryOptimizedM3 = @"MEMORY_OPTIMIZED_M3";
NSString * const kGTLRCompute_Commitment_Type_TypeUnspecified  = @"TYPE_UNSPECIFIED";

// GTLRCompute_CommitmentAggregatedList_Warning.code
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_CommitmentList_Warning.code
NSString * const kGTLRCompute_CommitmentList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_CommitmentList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_CommitmentsScopedList_Warning.code
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_Condition.iam
NSString * const kGTLRCompute_Condition_Iam_Approver          = @"APPROVER";
NSString * const kGTLRCompute_Condition_Iam_Attribution       = @"ATTRIBUTION";
NSString * const kGTLRCompute_Condition_Iam_Authority         = @"AUTHORITY";
NSString * const kGTLRCompute_Condition_Iam_CredentialsType   = @"CREDENTIALS_TYPE";
NSString * const kGTLRCompute_Condition_Iam_CredsAssertion    = @"CREDS_ASSERTION";
NSString * const kGTLRCompute_Condition_Iam_JustificationType = @"JUSTIFICATION_TYPE";
NSString * const kGTLRCompute_Condition_Iam_NoAttr            = @"NO_ATTR";
NSString * const kGTLRCompute_Condition_Iam_SecurityRealm     = @"SECURITY_REALM";

// GTLRCompute_Condition.op
NSString * const kGTLRCompute_Condition_Op_Discharged = @"DISCHARGED";
NSString * const kGTLRCompute_Condition_Op_Equals     = @"EQUALS";
NSString * const kGTLRCompute_Condition_Op_In         = @"IN";
NSString * const kGTLRCompute_Condition_Op_NoOp       = @"NO_OP";
NSString * const kGTLRCompute_Condition_Op_NotEquals  = @"NOT_EQUALS";
NSString * const kGTLRCompute_Condition_Op_NotIn      = @"NOT_IN";

// GTLRCompute_Condition.sys
NSString * const kGTLRCompute_Condition_Sys_Ip      = @"IP";
NSString * const kGTLRCompute_Condition_Sys_Name    = @"NAME";
NSString * const kGTLRCompute_Condition_Sys_NoAttr  = @"NO_ATTR";
NSString * const kGTLRCompute_Condition_Sys_Region  = @"REGION";
NSString * const kGTLRCompute_Condition_Sys_Service = @"SERVICE";

// GTLRCompute_DeprecationStatus.state
NSString * const kGTLRCompute_DeprecationStatus_State_Active   = @"ACTIVE";
NSString * const kGTLRCompute_DeprecationStatus_State_Deleted  = @"DELETED";
NSString * const kGTLRCompute_DeprecationStatus_State_Deprecated = @"DEPRECATED";
NSString * const kGTLRCompute_DeprecationStatus_State_Obsolete = @"OBSOLETE";

// GTLRCompute_Disk.architecture
NSString * const kGTLRCompute_Disk_Architecture_ArchitectureUnspecified = @"ARCHITECTURE_UNSPECIFIED";
NSString * const kGTLRCompute_Disk_Architecture_Arm64          = @"ARM64";
NSString * const kGTLRCompute_Disk_Architecture_X8664          = @"X86_64";

// GTLRCompute_Disk.status
NSString * const kGTLRCompute_Disk_Status_Creating  = @"CREATING";
NSString * const kGTLRCompute_Disk_Status_Deleting  = @"DELETING";
NSString * const kGTLRCompute_Disk_Status_Failed    = @"FAILED";
NSString * const kGTLRCompute_Disk_Status_Ready     = @"READY";
NSString * const kGTLRCompute_Disk_Status_Restoring = @"RESTORING";

// GTLRCompute_DiskAggregatedList_Warning.code
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_DiskInstantiationConfig.instantiateFrom
NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_AttachReadOnly = @"ATTACH_READ_ONLY";
NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_Blank = @"BLANK";
NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_CustomImage = @"CUSTOM_IMAGE";
NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_Default = @"DEFAULT";
NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_DoNotInclude = @"DO_NOT_INCLUDE";
NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_SourceImage = @"SOURCE_IMAGE";
NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_SourceImageFamily = @"SOURCE_IMAGE_FAMILY";

// GTLRCompute_DiskList_Warning.code
NSString * const kGTLRCompute_DiskList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_DiskList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_DiskList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_DiskList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_DiskList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_DiskList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_DiskList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_DiskList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_DiskList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_DiskList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_DiskList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_DiskList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_DiskList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_DiskList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_DiskList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_DiskList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_DiskList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_DiskList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_DiskList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_DiskList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_DiskList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_DisksScopedList_Warning.code
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_DisksScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_DiskTypeAggregatedList_Warning.code
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_DiskTypeList_Warning.code
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_DiskTypeList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_DiskTypesScopedList_Warning.code
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_DistributionPolicy.targetShape
NSString * const kGTLRCompute_DistributionPolicy_TargetShape_Any = @"ANY";
NSString * const kGTLRCompute_DistributionPolicy_TargetShape_Balanced = @"BALANCED";
NSString * const kGTLRCompute_DistributionPolicy_TargetShape_Even = @"EVEN";

// GTLRCompute_ExchangedPeeringRoute.type
NSString * const kGTLRCompute_ExchangedPeeringRoute_Type_DynamicPeeringRoute = @"DYNAMIC_PEERING_ROUTE";
NSString * const kGTLRCompute_ExchangedPeeringRoute_Type_StaticPeeringRoute = @"STATIC_PEERING_ROUTE";
NSString * const kGTLRCompute_ExchangedPeeringRoute_Type_SubnetPeeringRoute = @"SUBNET_PEERING_ROUTE";

// GTLRCompute_ExchangedPeeringRoutesList_Warning.code
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ExternalVpnGateway.redundancyType
NSString * const kGTLRCompute_ExternalVpnGateway_RedundancyType_FourIpsRedundancy = @"FOUR_IPS_REDUNDANCY";
NSString * const kGTLRCompute_ExternalVpnGateway_RedundancyType_SingleIpInternallyRedundant = @"SINGLE_IP_INTERNALLY_REDUNDANT";
NSString * const kGTLRCompute_ExternalVpnGateway_RedundancyType_TwoIpsRedundancy = @"TWO_IPS_REDUNDANCY";

// GTLRCompute_ExternalVpnGatewayList_Warning.code
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_FileContentBuffer.fileType
NSString * const kGTLRCompute_FileContentBuffer_FileType_Bin   = @"BIN";
NSString * const kGTLRCompute_FileContentBuffer_FileType_Undefined = @"UNDEFINED";
NSString * const kGTLRCompute_FileContentBuffer_FileType_X509  = @"X509";

// GTLRCompute_Firewall.direction
NSString * const kGTLRCompute_Firewall_Direction_Egress  = @"EGRESS";
NSString * const kGTLRCompute_Firewall_Direction_Ingress = @"INGRESS";

// GTLRCompute_FirewallList_Warning.code
NSString * const kGTLRCompute_FirewallList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_FirewallList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_FirewallList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_FirewallList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_FirewallList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_FirewallList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_FirewallList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_FirewallList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_FirewallList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_FirewallList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_FirewallList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_FirewallList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_FirewallList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_FirewallList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_FirewallList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_FirewallLogConfig.metadata
NSString * const kGTLRCompute_FirewallLogConfig_Metadata_ExcludeAllMetadata = @"EXCLUDE_ALL_METADATA";
NSString * const kGTLRCompute_FirewallLogConfig_Metadata_IncludeAllMetadata = @"INCLUDE_ALL_METADATA";

// GTLRCompute_FirewallPolicyList_Warning.code
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_FirewallPolicyRule.direction
NSString * const kGTLRCompute_FirewallPolicyRule_Direction_Egress = @"EGRESS";
NSString * const kGTLRCompute_FirewallPolicyRule_Direction_Ingress = @"INGRESS";

// GTLRCompute_FirewallPolicyRuleSecureTag.state
NSString * const kGTLRCompute_FirewallPolicyRuleSecureTag_State_Effective = @"EFFECTIVE";
NSString * const kGTLRCompute_FirewallPolicyRuleSecureTag_State_Ineffective = @"INEFFECTIVE";

// GTLRCompute_ForwardingRule.IPProtocol
NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Ah     = @"AH";
NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Esp    = @"ESP";
NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Icmp   = @"ICMP";
NSString * const kGTLRCompute_ForwardingRule_IPProtocol_L3Default = @"L3_DEFAULT";
NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Sctp   = @"SCTP";
NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Tcp    = @"TCP";
NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Udp    = @"UDP";

// GTLRCompute_ForwardingRule.ipVersion
NSString * const kGTLRCompute_ForwardingRule_IpVersion_Ipv4    = @"IPV4";
NSString * const kGTLRCompute_ForwardingRule_IpVersion_Ipv6    = @"IPV6";
NSString * const kGTLRCompute_ForwardingRule_IpVersion_UnspecifiedVersion = @"UNSPECIFIED_VERSION";

// GTLRCompute_ForwardingRule.loadBalancingScheme
NSString * const kGTLRCompute_ForwardingRule_LoadBalancingScheme_External = @"EXTERNAL";
NSString * const kGTLRCompute_ForwardingRule_LoadBalancingScheme_ExternalManaged = @"EXTERNAL_MANAGED";
NSString * const kGTLRCompute_ForwardingRule_LoadBalancingScheme_Internal = @"INTERNAL";
NSString * const kGTLRCompute_ForwardingRule_LoadBalancingScheme_InternalManaged = @"INTERNAL_MANAGED";
NSString * const kGTLRCompute_ForwardingRule_LoadBalancingScheme_InternalSelfManaged = @"INTERNAL_SELF_MANAGED";
NSString * const kGTLRCompute_ForwardingRule_LoadBalancingScheme_Invalid = @"INVALID";

// GTLRCompute_ForwardingRule.networkTier
NSString * const kGTLRCompute_ForwardingRule_NetworkTier_FixedStandard = @"FIXED_STANDARD";
NSString * const kGTLRCompute_ForwardingRule_NetworkTier_Premium = @"PREMIUM";
NSString * const kGTLRCompute_ForwardingRule_NetworkTier_Standard = @"STANDARD";
NSString * const kGTLRCompute_ForwardingRule_NetworkTier_StandardOverridesFixedStandard = @"STANDARD_OVERRIDES_FIXED_STANDARD";

// GTLRCompute_ForwardingRule.pscConnectionStatus
NSString * const kGTLRCompute_ForwardingRule_PscConnectionStatus_Accepted = @"ACCEPTED";
NSString * const kGTLRCompute_ForwardingRule_PscConnectionStatus_Closed = @"CLOSED";
NSString * const kGTLRCompute_ForwardingRule_PscConnectionStatus_NeedsAttention = @"NEEDS_ATTENTION";
NSString * const kGTLRCompute_ForwardingRule_PscConnectionStatus_Pending = @"PENDING";
NSString * const kGTLRCompute_ForwardingRule_PscConnectionStatus_Rejected = @"REJECTED";
NSString * const kGTLRCompute_ForwardingRule_PscConnectionStatus_StatusUnspecified = @"STATUS_UNSPECIFIED";

// GTLRCompute_ForwardingRuleAggregatedList_Warning.code
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ForwardingRuleList_Warning.code
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ForwardingRulesScopedList_Warning.code
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_GRPCHealthCheck.portSpecification
NSString * const kGTLRCompute_GRPCHealthCheck_PortSpecification_UseFixedPort = @"USE_FIXED_PORT";
NSString * const kGTLRCompute_GRPCHealthCheck_PortSpecification_UseNamedPort = @"USE_NAMED_PORT";
NSString * const kGTLRCompute_GRPCHealthCheck_PortSpecification_UseServingPort = @"USE_SERVING_PORT";

// GTLRCompute_GuestOsFeature.type
NSString * const kGTLRCompute_GuestOsFeature_Type_FeatureTypeUnspecified = @"FEATURE_TYPE_UNSPECIFIED";
NSString * const kGTLRCompute_GuestOsFeature_Type_Gvnic        = @"GVNIC";
NSString * const kGTLRCompute_GuestOsFeature_Type_MultiIpSubnet = @"MULTI_IP_SUBNET";
NSString * const kGTLRCompute_GuestOsFeature_Type_SecureBoot   = @"SECURE_BOOT";
NSString * const kGTLRCompute_GuestOsFeature_Type_SevCapable   = @"SEV_CAPABLE";
NSString * const kGTLRCompute_GuestOsFeature_Type_UefiCompatible = @"UEFI_COMPATIBLE";
NSString * const kGTLRCompute_GuestOsFeature_Type_VirtioScsiMultiqueue = @"VIRTIO_SCSI_MULTIQUEUE";
NSString * const kGTLRCompute_GuestOsFeature_Type_Windows      = @"WINDOWS";

// GTLRCompute_HealthCheck.type
NSString * const kGTLRCompute_HealthCheck_Type_Grpc    = @"GRPC";
NSString * const kGTLRCompute_HealthCheck_Type_Http    = @"HTTP";
NSString * const kGTLRCompute_HealthCheck_Type_Http2   = @"HTTP2";
NSString * const kGTLRCompute_HealthCheck_Type_Https   = @"HTTPS";
NSString * const kGTLRCompute_HealthCheck_Type_Invalid = @"INVALID";
NSString * const kGTLRCompute_HealthCheck_Type_Ssl     = @"SSL";
NSString * const kGTLRCompute_HealthCheck_Type_Tcp     = @"TCP";

// GTLRCompute_HealthCheckList_Warning.code
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_HealthCheckList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_HealthChecksAggregatedList_Warning.code
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_HealthCheckService.healthStatusAggregationPolicy
NSString * const kGTLRCompute_HealthCheckService_HealthStatusAggregationPolicy_And = @"AND";
NSString * const kGTLRCompute_HealthCheckService_HealthStatusAggregationPolicy_NoAggregation = @"NO_AGGREGATION";

// GTLRCompute_HealthCheckServicesList_Warning.code
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_HealthChecksScopedList_Warning.code
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_HealthStatus.healthState
NSString * const kGTLRCompute_HealthStatus_HealthState_Healthy = @"HEALTHY";
NSString * const kGTLRCompute_HealthStatus_HealthState_Unhealthy = @"UNHEALTHY";

// GTLRCompute_HealthStatus.weightError
NSString * const kGTLRCompute_HealthStatus_WeightError_InvalidWeight = @"INVALID_WEIGHT";
NSString * const kGTLRCompute_HealthStatus_WeightError_MissingWeight = @"MISSING_WEIGHT";
NSString * const kGTLRCompute_HealthStatus_WeightError_UnavailableWeight = @"UNAVAILABLE_WEIGHT";
NSString * const kGTLRCompute_HealthStatus_WeightError_WeightNone = @"WEIGHT_NONE";

// GTLRCompute_HealthStatusForNetworkEndpoint.healthState
NSString * const kGTLRCompute_HealthStatusForNetworkEndpoint_HealthState_Draining = @"DRAINING";
NSString * const kGTLRCompute_HealthStatusForNetworkEndpoint_HealthState_Healthy = @"HEALTHY";
NSString * const kGTLRCompute_HealthStatusForNetworkEndpoint_HealthState_Unhealthy = @"UNHEALTHY";
NSString * const kGTLRCompute_HealthStatusForNetworkEndpoint_HealthState_Unknown = @"UNKNOWN";

// GTLRCompute_HTTP2HealthCheck.portSpecification
NSString * const kGTLRCompute_HTTP2HealthCheck_PortSpecification_UseFixedPort = @"USE_FIXED_PORT";
NSString * const kGTLRCompute_HTTP2HealthCheck_PortSpecification_UseNamedPort = @"USE_NAMED_PORT";
NSString * const kGTLRCompute_HTTP2HealthCheck_PortSpecification_UseServingPort = @"USE_SERVING_PORT";

// GTLRCompute_HTTP2HealthCheck.proxyHeader
NSString * const kGTLRCompute_HTTP2HealthCheck_ProxyHeader_None = @"NONE";
NSString * const kGTLRCompute_HTTP2HealthCheck_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_HTTPHealthCheck.portSpecification
NSString * const kGTLRCompute_HTTPHealthCheck_PortSpecification_UseFixedPort = @"USE_FIXED_PORT";
NSString * const kGTLRCompute_HTTPHealthCheck_PortSpecification_UseNamedPort = @"USE_NAMED_PORT";
NSString * const kGTLRCompute_HTTPHealthCheck_PortSpecification_UseServingPort = @"USE_SERVING_PORT";

// GTLRCompute_HTTPHealthCheck.proxyHeader
NSString * const kGTLRCompute_HTTPHealthCheck_ProxyHeader_None = @"NONE";
NSString * const kGTLRCompute_HTTPHealthCheck_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_HttpHealthCheckList_Warning.code
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_HttpRedirectAction.redirectResponseCode
NSString * const kGTLRCompute_HttpRedirectAction_RedirectResponseCode_Found = @"FOUND";
NSString * const kGTLRCompute_HttpRedirectAction_RedirectResponseCode_MovedPermanentlyDefault = @"MOVED_PERMANENTLY_DEFAULT";
NSString * const kGTLRCompute_HttpRedirectAction_RedirectResponseCode_PermanentRedirect = @"PERMANENT_REDIRECT";
NSString * const kGTLRCompute_HttpRedirectAction_RedirectResponseCode_SeeOther = @"SEE_OTHER";
NSString * const kGTLRCompute_HttpRedirectAction_RedirectResponseCode_TemporaryRedirect = @"TEMPORARY_REDIRECT";

// GTLRCompute_HTTPSHealthCheck.portSpecification
NSString * const kGTLRCompute_HTTPSHealthCheck_PortSpecification_UseFixedPort = @"USE_FIXED_PORT";
NSString * const kGTLRCompute_HTTPSHealthCheck_PortSpecification_UseNamedPort = @"USE_NAMED_PORT";
NSString * const kGTLRCompute_HTTPSHealthCheck_PortSpecification_UseServingPort = @"USE_SERVING_PORT";

// GTLRCompute_HTTPSHealthCheck.proxyHeader
NSString * const kGTLRCompute_HTTPSHealthCheck_ProxyHeader_None = @"NONE";
NSString * const kGTLRCompute_HTTPSHealthCheck_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_HttpsHealthCheckList_Warning.code
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_Image.architecture
NSString * const kGTLRCompute_Image_Architecture_ArchitectureUnspecified = @"ARCHITECTURE_UNSPECIFIED";
NSString * const kGTLRCompute_Image_Architecture_Arm64         = @"ARM64";
NSString * const kGTLRCompute_Image_Architecture_X8664         = @"X86_64";

// GTLRCompute_Image.sourceType
NSString * const kGTLRCompute_Image_SourceType_Raw = @"RAW";

// GTLRCompute_Image.status
NSString * const kGTLRCompute_Image_Status_Deleting = @"DELETING";
NSString * const kGTLRCompute_Image_Status_Failed   = @"FAILED";
NSString * const kGTLRCompute_Image_Status_Pending  = @"PENDING";
NSString * const kGTLRCompute_Image_Status_Ready    = @"READY";

// GTLRCompute_Image_RawDisk.containerType
NSString * const kGTLRCompute_Image_RawDisk_ContainerType_Tar = @"TAR";

// GTLRCompute_ImageList_Warning.code
NSString * const kGTLRCompute_ImageList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ImageList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ImageList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ImageList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ImageList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ImageList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ImageList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ImageList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ImageList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ImageList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ImageList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ImageList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ImageList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ImageList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ImageList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ImageList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ImageList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ImageList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ImageList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ImageList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ImageList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_Instance.keyRevocationActionType
NSString * const kGTLRCompute_Instance_KeyRevocationActionType_KeyRevocationActionTypeUnspecified = @"KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED";
NSString * const kGTLRCompute_Instance_KeyRevocationActionType_None = @"NONE";
NSString * const kGTLRCompute_Instance_KeyRevocationActionType_Stop = @"STOP";

// GTLRCompute_Instance.privateIpv6GoogleAccess
NSString * const kGTLRCompute_Instance_PrivateIpv6GoogleAccess_EnableBidirectionalAccessToGoogle = @"ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE";
NSString * const kGTLRCompute_Instance_PrivateIpv6GoogleAccess_EnableOutboundVmAccessToGoogle = @"ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE";
NSString * const kGTLRCompute_Instance_PrivateIpv6GoogleAccess_InheritFromSubnetwork = @"INHERIT_FROM_SUBNETWORK";

// GTLRCompute_Instance.status
NSString * const kGTLRCompute_Instance_Status_Deprovisioning = @"DEPROVISIONING";
NSString * const kGTLRCompute_Instance_Status_Provisioning   = @"PROVISIONING";
NSString * const kGTLRCompute_Instance_Status_Repairing      = @"REPAIRING";
NSString * const kGTLRCompute_Instance_Status_Running        = @"RUNNING";
NSString * const kGTLRCompute_Instance_Status_Staging        = @"STAGING";
NSString * const kGTLRCompute_Instance_Status_Stopped        = @"STOPPED";
NSString * const kGTLRCompute_Instance_Status_Stopping       = @"STOPPING";
NSString * const kGTLRCompute_Instance_Status_Suspended      = @"SUSPENDED";
NSString * const kGTLRCompute_Instance_Status_Suspending     = @"SUSPENDING";
NSString * const kGTLRCompute_Instance_Status_Terminated     = @"TERMINATED";

// GTLRCompute_InstanceAggregatedList_Warning.code
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceGroupAggregatedList_Warning.code
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceGroupList_Warning.code
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceGroupManager.listManagedInstancesResults
NSString * const kGTLRCompute_InstanceGroupManager_ListManagedInstancesResults_Pageless = @"PAGELESS";
NSString * const kGTLRCompute_InstanceGroupManager_ListManagedInstancesResults_Paginated = @"PAGINATED";

// GTLRCompute_InstanceGroupManagerAggregatedList_Warning.code
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceGroupManagerList_Warning.code
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceGroupManagersApplyUpdatesRequest.minimalAction
NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MinimalAction_None = @"NONE";
NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MinimalAction_Refresh = @"REFRESH";
NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MinimalAction_Replace = @"REPLACE";
NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MinimalAction_Restart = @"RESTART";

// GTLRCompute_InstanceGroupManagersApplyUpdatesRequest.mostDisruptiveAllowedAction
NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_None = @"NONE";
NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Refresh = @"REFRESH";
NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Replace = @"REPLACE";
NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Restart = @"RESTART";

// GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning.code
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceGroupManagersScopedList_Warning.code
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceGroupManagerUpdatePolicy.instanceRedistributionType
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_InstanceRedistributionType_None = @"NONE";
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_InstanceRedistributionType_Proactive = @"PROACTIVE";

// GTLRCompute_InstanceGroupManagerUpdatePolicy.minimalAction
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MinimalAction_None = @"NONE";
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MinimalAction_Refresh = @"REFRESH";
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MinimalAction_Replace = @"REPLACE";
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MinimalAction_Restart = @"RESTART";

// GTLRCompute_InstanceGroupManagerUpdatePolicy.mostDisruptiveAllowedAction
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MostDisruptiveAllowedAction_None = @"NONE";
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MostDisruptiveAllowedAction_Refresh = @"REFRESH";
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MostDisruptiveAllowedAction_Replace = @"REPLACE";
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MostDisruptiveAllowedAction_Restart = @"RESTART";

// GTLRCompute_InstanceGroupManagerUpdatePolicy.replacementMethod
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_ReplacementMethod_Recreate = @"RECREATE";
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_ReplacementMethod_Substitute = @"SUBSTITUTE";

// GTLRCompute_InstanceGroupManagerUpdatePolicy.type
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_Type_Opportunistic = @"OPPORTUNISTIC";
NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_Type_Proactive = @"PROACTIVE";

// GTLRCompute_InstanceGroupsListInstances_Warning.code
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceGroupsListInstancesRequest.instanceState
NSString * const kGTLRCompute_InstanceGroupsListInstancesRequest_InstanceState_All = @"ALL";
NSString * const kGTLRCompute_InstanceGroupsListInstancesRequest_InstanceState_Running = @"RUNNING";

// GTLRCompute_InstanceGroupsScopedList_Warning.code
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceList_Warning.code
NSString * const kGTLRCompute_InstanceList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InstanceList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InstanceList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InstanceList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceListReferrers_Warning.code
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails.action
NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Abandoning = @"ABANDONING";
NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Creating = @"CREATING";
NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_CreatingWithoutRetries = @"CREATING_WITHOUT_RETRIES";
NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Deleting = @"DELETING";
NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_None = @"NONE";
NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Recreating = @"RECREATING";
NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Refreshing = @"REFRESHING";
NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Restarting = @"RESTARTING";
NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Resuming = @"RESUMING";
NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Starting = @"STARTING";
NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Stopping = @"STOPPING";
NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Suspending = @"SUSPENDING";
NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Verifying = @"VERIFYING";

// GTLRCompute_InstanceProperties.keyRevocationActionType
NSString * const kGTLRCompute_InstanceProperties_KeyRevocationActionType_KeyRevocationActionTypeUnspecified = @"KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED";
NSString * const kGTLRCompute_InstanceProperties_KeyRevocationActionType_None = @"NONE";
NSString * const kGTLRCompute_InstanceProperties_KeyRevocationActionType_Stop = @"STOP";

// GTLRCompute_InstanceProperties.privateIpv6GoogleAccess
NSString * const kGTLRCompute_InstanceProperties_PrivateIpv6GoogleAccess_EnableBidirectionalAccessToGoogle = @"ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE";
NSString * const kGTLRCompute_InstanceProperties_PrivateIpv6GoogleAccess_EnableOutboundVmAccessToGoogle = @"ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE";
NSString * const kGTLRCompute_InstanceProperties_PrivateIpv6GoogleAccess_InheritFromSubnetwork = @"INHERIT_FROM_SUBNETWORK";

// GTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy.type
NSString * const kGTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Hierarchy = @"HIERARCHY";
NSString * const kGTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Network = @"NETWORK";
NSString * const kGTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_NetworkRegional = @"NETWORK_REGIONAL";
NSString * const kGTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Unspecified = @"UNSPECIFIED";

// GTLRCompute_InstancesScopedList_Warning.code
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceTemplateList_Warning.code
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InstanceWithNamedPorts.status
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Deprovisioning = @"DEPROVISIONING";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Provisioning = @"PROVISIONING";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Repairing = @"REPAIRING";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Running = @"RUNNING";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Staging = @"STAGING";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Stopped = @"STOPPED";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Stopping = @"STOPPING";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Suspended = @"SUSPENDED";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Suspending = @"SUSPENDING";
NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Terminated = @"TERMINATED";

// GTLRCompute_Interconnect.interconnectType
NSString * const kGTLRCompute_Interconnect_InterconnectType_Dedicated = @"DEDICATED";
NSString * const kGTLRCompute_Interconnect_InterconnectType_ItPrivate = @"IT_PRIVATE";
NSString * const kGTLRCompute_Interconnect_InterconnectType_Partner = @"PARTNER";

// GTLRCompute_Interconnect.linkType
NSString * const kGTLRCompute_Interconnect_LinkType_LinkTypeEthernet100gLr = @"LINK_TYPE_ETHERNET_100G_LR";
NSString * const kGTLRCompute_Interconnect_LinkType_LinkTypeEthernet10gLr = @"LINK_TYPE_ETHERNET_10G_LR";

// GTLRCompute_Interconnect.operationalStatus
NSString * const kGTLRCompute_Interconnect_OperationalStatus_OsActive = @"OS_ACTIVE";
NSString * const kGTLRCompute_Interconnect_OperationalStatus_OsUnprovisioned = @"OS_UNPROVISIONED";

// GTLRCompute_Interconnect.state
NSString * const kGTLRCompute_Interconnect_State_Active        = @"ACTIVE";
NSString * const kGTLRCompute_Interconnect_State_Unprovisioned = @"UNPROVISIONED";

// GTLRCompute_InterconnectAttachment.bandwidth
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps100m = @"BPS_100M";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps10g = @"BPS_10G";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps1g = @"BPS_1G";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps200m = @"BPS_200M";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps20g = @"BPS_20G";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps2g = @"BPS_2G";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps300m = @"BPS_300M";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps400m = @"BPS_400M";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps500m = @"BPS_500M";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps50g = @"BPS_50G";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps50m = @"BPS_50M";
NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps5g = @"BPS_5G";

// GTLRCompute_InterconnectAttachment.edgeAvailabilityDomain
NSString * const kGTLRCompute_InterconnectAttachment_EdgeAvailabilityDomain_AvailabilityDomain1 = @"AVAILABILITY_DOMAIN_1";
NSString * const kGTLRCompute_InterconnectAttachment_EdgeAvailabilityDomain_AvailabilityDomain2 = @"AVAILABILITY_DOMAIN_2";
NSString * const kGTLRCompute_InterconnectAttachment_EdgeAvailabilityDomain_AvailabilityDomainAny = @"AVAILABILITY_DOMAIN_ANY";

// GTLRCompute_InterconnectAttachment.encryption
NSString * const kGTLRCompute_InterconnectAttachment_Encryption_Ipsec = @"IPSEC";
NSString * const kGTLRCompute_InterconnectAttachment_Encryption_None = @"NONE";

// GTLRCompute_InterconnectAttachment.operationalStatus
NSString * const kGTLRCompute_InterconnectAttachment_OperationalStatus_OsActive = @"OS_ACTIVE";
NSString * const kGTLRCompute_InterconnectAttachment_OperationalStatus_OsUnprovisioned = @"OS_UNPROVISIONED";

// GTLRCompute_InterconnectAttachment.stackType
NSString * const kGTLRCompute_InterconnectAttachment_StackType_Ipv4Ipv6 = @"IPV4_IPV6";
NSString * const kGTLRCompute_InterconnectAttachment_StackType_Ipv4Only = @"IPV4_ONLY";

// GTLRCompute_InterconnectAttachment.state
NSString * const kGTLRCompute_InterconnectAttachment_State_Active = @"ACTIVE";
NSString * const kGTLRCompute_InterconnectAttachment_State_Defunct = @"DEFUNCT";
NSString * const kGTLRCompute_InterconnectAttachment_State_PartnerRequestReceived = @"PARTNER_REQUEST_RECEIVED";
NSString * const kGTLRCompute_InterconnectAttachment_State_PendingCustomer = @"PENDING_CUSTOMER";
NSString * const kGTLRCompute_InterconnectAttachment_State_PendingPartner = @"PENDING_PARTNER";
NSString * const kGTLRCompute_InterconnectAttachment_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRCompute_InterconnectAttachment_State_Unprovisioned = @"UNPROVISIONED";

// GTLRCompute_InterconnectAttachment.type
NSString * const kGTLRCompute_InterconnectAttachment_Type_Dedicated = @"DEDICATED";
NSString * const kGTLRCompute_InterconnectAttachment_Type_Partner = @"PARTNER";
NSString * const kGTLRCompute_InterconnectAttachment_Type_PartnerProvider = @"PARTNER_PROVIDER";

// GTLRCompute_InterconnectAttachmentAggregatedList_Warning.code
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InterconnectAttachmentList_Warning.code
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InterconnectAttachmentsScopedList_Warning.code
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InterconnectDiagnosticsLinkLACPStatus.state
NSString * const kGTLRCompute_InterconnectDiagnosticsLinkLACPStatus_State_Active = @"ACTIVE";
NSString * const kGTLRCompute_InterconnectDiagnosticsLinkLACPStatus_State_Detached = @"DETACHED";

// GTLRCompute_InterconnectDiagnosticsLinkOpticalPower.state
NSString * const kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_HighAlarm = @"HIGH_ALARM";
NSString * const kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_HighWarning = @"HIGH_WARNING";
NSString * const kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_LowAlarm = @"LOW_ALARM";
NSString * const kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_LowWarning = @"LOW_WARNING";
NSString * const kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_Ok = @"OK";

// GTLRCompute_InterconnectList_Warning.code
NSString * const kGTLRCompute_InterconnectList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InterconnectList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InterconnectLocation.continent
NSString * const kGTLRCompute_InterconnectLocation_Continent_Africa = @"AFRICA";
NSString * const kGTLRCompute_InterconnectLocation_Continent_AsiaPac = @"ASIA_PAC";
NSString * const kGTLRCompute_InterconnectLocation_Continent_CAfrica = @"C_AFRICA";
NSString * const kGTLRCompute_InterconnectLocation_Continent_CAsiaPac = @"C_ASIA_PAC";
NSString * const kGTLRCompute_InterconnectLocation_Continent_CEurope = @"C_EUROPE";
NSString * const kGTLRCompute_InterconnectLocation_Continent_CNorthAmerica = @"C_NORTH_AMERICA";
NSString * const kGTLRCompute_InterconnectLocation_Continent_CSouthAmerica = @"C_SOUTH_AMERICA";
NSString * const kGTLRCompute_InterconnectLocation_Continent_Europe = @"EUROPE";
NSString * const kGTLRCompute_InterconnectLocation_Continent_NorthAmerica = @"NORTH_AMERICA";
NSString * const kGTLRCompute_InterconnectLocation_Continent_SouthAmerica = @"SOUTH_AMERICA";

// GTLRCompute_InterconnectLocation.status
NSString * const kGTLRCompute_InterconnectLocation_Status_Available = @"AVAILABLE";
NSString * const kGTLRCompute_InterconnectLocation_Status_Closed = @"CLOSED";

// GTLRCompute_InterconnectLocationList_Warning.code
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_InterconnectLocationRegionInfo.locationPresence
NSString * const kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_Global = @"GLOBAL";
NSString * const kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_LocalRegion = @"LOCAL_REGION";
NSString * const kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_LpGlobal = @"LP_GLOBAL";
NSString * const kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_LpLocalRegion = @"LP_LOCAL_REGION";

// GTLRCompute_InterconnectOutageNotification.issueType
NSString * const kGTLRCompute_InterconnectOutageNotification_IssueType_ItOutage = @"IT_OUTAGE";
NSString * const kGTLRCompute_InterconnectOutageNotification_IssueType_ItPartialOutage = @"IT_PARTIAL_OUTAGE";
NSString * const kGTLRCompute_InterconnectOutageNotification_IssueType_Outage = @"OUTAGE";
NSString * const kGTLRCompute_InterconnectOutageNotification_IssueType_PartialOutage = @"PARTIAL_OUTAGE";

// GTLRCompute_InterconnectOutageNotification.source
NSString * const kGTLRCompute_InterconnectOutageNotification_Source_Google = @"GOOGLE";
NSString * const kGTLRCompute_InterconnectOutageNotification_Source_NsrcGoogle = @"NSRC_GOOGLE";

// GTLRCompute_InterconnectOutageNotification.state
NSString * const kGTLRCompute_InterconnectOutageNotification_State_Active = @"ACTIVE";
NSString * const kGTLRCompute_InterconnectOutageNotification_State_Cancelled = @"CANCELLED";
NSString * const kGTLRCompute_InterconnectOutageNotification_State_Completed = @"COMPLETED";
NSString * const kGTLRCompute_InterconnectOutageNotification_State_NsActive = @"NS_ACTIVE";
NSString * const kGTLRCompute_InterconnectOutageNotification_State_NsCanceled = @"NS_CANCELED";

// GTLRCompute_LicenseCode.state
NSString * const kGTLRCompute_LicenseCode_State_Disabled       = @"DISABLED";
NSString * const kGTLRCompute_LicenseCode_State_Enabled        = @"ENABLED";
NSString * const kGTLRCompute_LicenseCode_State_Restricted     = @"RESTRICTED";
NSString * const kGTLRCompute_LicenseCode_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRCompute_LicenseCode_State_Terminated     = @"TERMINATED";

// GTLRCompute_LicensesListResponse_Warning.code
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_LocationPolicy.targetShape
NSString * const kGTLRCompute_LocationPolicy_TargetShape_Any   = @"ANY";
NSString * const kGTLRCompute_LocationPolicy_TargetShape_AnySingleZone = @"ANY_SINGLE_ZONE";
NSString * const kGTLRCompute_LocationPolicy_TargetShape_Balanced = @"BALANCED";

// GTLRCompute_LocationPolicyLocation.preference
NSString * const kGTLRCompute_LocationPolicyLocation_Preference_Allow = @"ALLOW";
NSString * const kGTLRCompute_LocationPolicyLocation_Preference_Deny = @"DENY";
NSString * const kGTLRCompute_LocationPolicyLocation_Preference_PreferenceUnspecified = @"PREFERENCE_UNSPECIFIED";

// GTLRCompute_LogConfigCloudAuditOptions.logName
NSString * const kGTLRCompute_LogConfigCloudAuditOptions_LogName_AdminActivity = @"ADMIN_ACTIVITY";
NSString * const kGTLRCompute_LogConfigCloudAuditOptions_LogName_DataAccess = @"DATA_ACCESS";
NSString * const kGTLRCompute_LogConfigCloudAuditOptions_LogName_UnspecifiedLogName = @"UNSPECIFIED_LOG_NAME";

// GTLRCompute_LogConfigDataAccessOptions.logMode
NSString * const kGTLRCompute_LogConfigDataAccessOptions_LogMode_LogFailClosed = @"LOG_FAIL_CLOSED";
NSString * const kGTLRCompute_LogConfigDataAccessOptions_LogMode_LogModeUnspecified = @"LOG_MODE_UNSPECIFIED";

// GTLRCompute_MachineImage.status
NSString * const kGTLRCompute_MachineImage_Status_Creating  = @"CREATING";
NSString * const kGTLRCompute_MachineImage_Status_Deleting  = @"DELETING";
NSString * const kGTLRCompute_MachineImage_Status_Invalid   = @"INVALID";
NSString * const kGTLRCompute_MachineImage_Status_Ready     = @"READY";
NSString * const kGTLRCompute_MachineImage_Status_Uploading = @"UPLOADING";

// GTLRCompute_MachineImageList_Warning.code
NSString * const kGTLRCompute_MachineImageList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_MachineImageList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_MachineTypeAggregatedList_Warning.code
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_MachineTypeList_Warning.code
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_MachineTypeList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_MachineTypesScopedList_Warning.code
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ManagedInstance.currentAction
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Abandoning = @"ABANDONING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Creating = @"CREATING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_CreatingWithoutRetries = @"CREATING_WITHOUT_RETRIES";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Deleting = @"DELETING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_None = @"NONE";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Recreating = @"RECREATING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Refreshing = @"REFRESHING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Restarting = @"RESTARTING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Resuming = @"RESUMING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Starting = @"STARTING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Stopping = @"STOPPING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Suspending = @"SUSPENDING";
NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Verifying = @"VERIFYING";

// GTLRCompute_ManagedInstance.instanceStatus
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Deprovisioning = @"DEPROVISIONING";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Provisioning = @"PROVISIONING";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Repairing = @"REPAIRING";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Running = @"RUNNING";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Staging = @"STAGING";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Stopped = @"STOPPED";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Stopping = @"STOPPING";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Suspended = @"SUSPENDED";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Suspending = @"SUSPENDING";
NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Terminated = @"TERMINATED";

// GTLRCompute_ManagedInstanceInstanceHealth.detailedHealthState
NSString * const kGTLRCompute_ManagedInstanceInstanceHealth_DetailedHealthState_Draining = @"DRAINING";
NSString * const kGTLRCompute_ManagedInstanceInstanceHealth_DetailedHealthState_Healthy = @"HEALTHY";
NSString * const kGTLRCompute_ManagedInstanceInstanceHealth_DetailedHealthState_Timeout = @"TIMEOUT";
NSString * const kGTLRCompute_ManagedInstanceInstanceHealth_DetailedHealthState_Unhealthy = @"UNHEALTHY";
NSString * const kGTLRCompute_ManagedInstanceInstanceHealth_DetailedHealthState_Unknown = @"UNKNOWN";

// GTLRCompute_MetadataFilter.filterMatchCriteria
NSString * const kGTLRCompute_MetadataFilter_FilterMatchCriteria_MatchAll = @"MATCH_ALL";
NSString * const kGTLRCompute_MetadataFilter_FilterMatchCriteria_MatchAny = @"MATCH_ANY";
NSString * const kGTLRCompute_MetadataFilter_FilterMatchCriteria_NotSet = @"NOT_SET";

// GTLRCompute_Network.networkFirewallPolicyEnforcementOrder
NSString * const kGTLRCompute_Network_NetworkFirewallPolicyEnforcementOrder_AfterClassicFirewall = @"AFTER_CLASSIC_FIREWALL";
NSString * const kGTLRCompute_Network_NetworkFirewallPolicyEnforcementOrder_BeforeClassicFirewall = @"BEFORE_CLASSIC_FIREWALL";

// GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning.code
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning.code
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NetworkEndpointGroup.networkEndpointType
NSString * const kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_GceVmIp = @"GCE_VM_IP";
NSString * const kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_GceVmIpPort = @"GCE_VM_IP_PORT";
NSString * const kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_InternetFqdnPort = @"INTERNET_FQDN_PORT";
NSString * const kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_InternetIpPort = @"INTERNET_IP_PORT";
NSString * const kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_NonGcpPrivateIpPort = @"NON_GCP_PRIVATE_IP_PORT";
NSString * const kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_PrivateServiceConnect = @"PRIVATE_SERVICE_CONNECT";
NSString * const kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_Serverless = @"SERVERLESS";

// GTLRCompute_NetworkEndpointGroupAggregatedList_Warning.code
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NetworkEndpointGroupList_Warning.code
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NetworkEndpointGroupPscData.pscConnectionStatus
NSString * const kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_Accepted = @"ACCEPTED";
NSString * const kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_Closed = @"CLOSED";
NSString * const kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_NeedsAttention = @"NEEDS_ATTENTION";
NSString * const kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_Pending = @"PENDING";
NSString * const kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_Rejected = @"REJECTED";
NSString * const kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_StatusUnspecified = @"STATUS_UNSPECIFIED";

// GTLRCompute_NetworkEndpointGroupsListEndpointsRequest.healthStatus
NSString * const kGTLRCompute_NetworkEndpointGroupsListEndpointsRequest_HealthStatus_Show = @"SHOW";
NSString * const kGTLRCompute_NetworkEndpointGroupsListEndpointsRequest_HealthStatus_Skip = @"SKIP";

// GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning.code
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NetworkEndpointGroupsScopedList_Warning.code
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NetworkInterface.ipv6AccessType
NSString * const kGTLRCompute_NetworkInterface_Ipv6AccessType_External = @"EXTERNAL";
NSString * const kGTLRCompute_NetworkInterface_Ipv6AccessType_Internal = @"INTERNAL";

// GTLRCompute_NetworkInterface.nicType
NSString * const kGTLRCompute_NetworkInterface_NicType_Gvnic   = @"GVNIC";
NSString * const kGTLRCompute_NetworkInterface_NicType_UnspecifiedNicType = @"UNSPECIFIED_NIC_TYPE";
NSString * const kGTLRCompute_NetworkInterface_NicType_VirtioNet = @"VIRTIO_NET";

// GTLRCompute_NetworkInterface.stackType
NSString * const kGTLRCompute_NetworkInterface_StackType_Ipv4Ipv6 = @"IPV4_IPV6";
NSString * const kGTLRCompute_NetworkInterface_StackType_Ipv4Only = @"IPV4_ONLY";

// GTLRCompute_NetworkList_Warning.code
NSString * const kGTLRCompute_NetworkList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NetworkList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NetworkList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NetworkList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NetworkList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NetworkList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NetworkList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NetworkList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NetworkList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NetworkList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NetworkList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NetworkList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NetworkList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NetworkList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NetworkList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NetworkPeering.stackType
NSString * const kGTLRCompute_NetworkPeering_StackType_Ipv4Ipv6 = @"IPV4_IPV6";
NSString * const kGTLRCompute_NetworkPeering_StackType_Ipv4Only = @"IPV4_ONLY";

// GTLRCompute_NetworkPeering.state
NSString * const kGTLRCompute_NetworkPeering_State_Active   = @"ACTIVE";
NSString * const kGTLRCompute_NetworkPeering_State_Inactive = @"INACTIVE";

// GTLRCompute_NetworkPerformanceConfig.totalEgressBandwidthTier
NSString * const kGTLRCompute_NetworkPerformanceConfig_TotalEgressBandwidthTier_Default = @"DEFAULT";
NSString * const kGTLRCompute_NetworkPerformanceConfig_TotalEgressBandwidthTier_Tier1 = @"TIER_1";

// GTLRCompute_NetworkRoutingConfig.routingMode
NSString * const kGTLRCompute_NetworkRoutingConfig_RoutingMode_Global = @"GLOBAL";
NSString * const kGTLRCompute_NetworkRoutingConfig_RoutingMode_Regional = @"REGIONAL";

// GTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy.type
NSString * const kGTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Hierarchy = @"HIERARCHY";
NSString * const kGTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Network = @"NETWORK";
NSString * const kGTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Unspecified = @"UNSPECIFIED";

// GTLRCompute_NodeGroup.maintenancePolicy
NSString * const kGTLRCompute_NodeGroup_MaintenancePolicy_Default = @"DEFAULT";
NSString * const kGTLRCompute_NodeGroup_MaintenancePolicy_MaintenancePolicyUnspecified = @"MAINTENANCE_POLICY_UNSPECIFIED";
NSString * const kGTLRCompute_NodeGroup_MaintenancePolicy_MigrateWithinNodeGroup = @"MIGRATE_WITHIN_NODE_GROUP";
NSString * const kGTLRCompute_NodeGroup_MaintenancePolicy_RestartInPlace = @"RESTART_IN_PLACE";

// GTLRCompute_NodeGroup.status
NSString * const kGTLRCompute_NodeGroup_Status_Creating = @"CREATING";
NSString * const kGTLRCompute_NodeGroup_Status_Deleting = @"DELETING";
NSString * const kGTLRCompute_NodeGroup_Status_Invalid  = @"INVALID";
NSString * const kGTLRCompute_NodeGroup_Status_Ready    = @"READY";

// GTLRCompute_NodeGroupAggregatedList_Warning.code
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeGroupAutoscalingPolicy.mode
NSString * const kGTLRCompute_NodeGroupAutoscalingPolicy_Mode_ModeUnspecified = @"MODE_UNSPECIFIED";
NSString * const kGTLRCompute_NodeGroupAutoscalingPolicy_Mode_Off = @"OFF";
NSString * const kGTLRCompute_NodeGroupAutoscalingPolicy_Mode_On = @"ON";
NSString * const kGTLRCompute_NodeGroupAutoscalingPolicy_Mode_OnlyScaleOut = @"ONLY_SCALE_OUT";

// GTLRCompute_NodeGroupList_Warning.code
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeGroupList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeGroupNode.cpuOvercommitType
NSString * const kGTLRCompute_NodeGroupNode_CpuOvercommitType_CpuOvercommitTypeUnspecified = @"CPU_OVERCOMMIT_TYPE_UNSPECIFIED";
NSString * const kGTLRCompute_NodeGroupNode_CpuOvercommitType_Enabled = @"ENABLED";
NSString * const kGTLRCompute_NodeGroupNode_CpuOvercommitType_None = @"NONE";

// GTLRCompute_NodeGroupNode.status
NSString * const kGTLRCompute_NodeGroupNode_Status_Creating  = @"CREATING";
NSString * const kGTLRCompute_NodeGroupNode_Status_Deleting  = @"DELETING";
NSString * const kGTLRCompute_NodeGroupNode_Status_Invalid   = @"INVALID";
NSString * const kGTLRCompute_NodeGroupNode_Status_Ready     = @"READY";
NSString * const kGTLRCompute_NodeGroupNode_Status_Repairing = @"REPAIRING";

// GTLRCompute_NodeGroupsListNodes_Warning.code
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeGroupsScopedList_Warning.code
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeTemplate.cpuOvercommitType
NSString * const kGTLRCompute_NodeTemplate_CpuOvercommitType_CpuOvercommitTypeUnspecified = @"CPU_OVERCOMMIT_TYPE_UNSPECIFIED";
NSString * const kGTLRCompute_NodeTemplate_CpuOvercommitType_Enabled = @"ENABLED";
NSString * const kGTLRCompute_NodeTemplate_CpuOvercommitType_None = @"NONE";

// GTLRCompute_NodeTemplate.status
NSString * const kGTLRCompute_NodeTemplate_Status_Creating = @"CREATING";
NSString * const kGTLRCompute_NodeTemplate_Status_Deleting = @"DELETING";
NSString * const kGTLRCompute_NodeTemplate_Status_Invalid  = @"INVALID";
NSString * const kGTLRCompute_NodeTemplate_Status_Ready    = @"READY";

// GTLRCompute_NodeTemplateAggregatedList_Warning.code
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeTemplateList_Warning.code
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeTemplatesScopedList_Warning.code
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeTypeAggregatedList_Warning.code
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeTypeList_Warning.code
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeTypeList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NodeTypesScopedList_Warning.code
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_NotificationEndpointList_Warning.code
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_Operation.status
NSString * const kGTLRCompute_Operation_Status_Done    = @"DONE";
NSString * const kGTLRCompute_Operation_Status_Pending = @"PENDING";
NSString * const kGTLRCompute_Operation_Status_Running = @"RUNNING";

// GTLRCompute_Operation_Warnings_Item.code
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_Operation_Warnings_Item_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_OperationAggregatedList_Warning.code
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_OperationList_Warning.code
NSString * const kGTLRCompute_OperationList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_OperationList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_OperationList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_OperationList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_OperationList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_OperationList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_OperationList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_OperationList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_OperationList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_OperationList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_OperationList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_OperationList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_OperationList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_OperationList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_OperationList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_OperationList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_OperationList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_OperationList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_OperationList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_OperationList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_OperationList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_OperationsScopedList_Warning.code
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_PacketIntervals.duration
NSString * const kGTLRCompute_PacketIntervals_Duration_DurationUnspecified = @"DURATION_UNSPECIFIED";
NSString * const kGTLRCompute_PacketIntervals_Duration_Hour    = @"HOUR";
NSString * const kGTLRCompute_PacketIntervals_Duration_Max     = @"MAX";
NSString * const kGTLRCompute_PacketIntervals_Duration_Minute  = @"MINUTE";

// GTLRCompute_PacketIntervals.type
NSString * const kGTLRCompute_PacketIntervals_Type_Loopback    = @"LOOPBACK";
NSString * const kGTLRCompute_PacketIntervals_Type_Receive     = @"RECEIVE";
NSString * const kGTLRCompute_PacketIntervals_Type_Transmit    = @"TRANSMIT";
NSString * const kGTLRCompute_PacketIntervals_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCompute_PacketMirroring.enable
NSString * const kGTLRCompute_PacketMirroring_Enable_False = @"FALSE";
NSString * const kGTLRCompute_PacketMirroring_Enable_True  = @"TRUE";

// GTLRCompute_PacketMirroringAggregatedList_Warning.code
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_PacketMirroringFilter.direction
NSString * const kGTLRCompute_PacketMirroringFilter_Direction_Both = @"BOTH";
NSString * const kGTLRCompute_PacketMirroringFilter_Direction_Egress = @"EGRESS";
NSString * const kGTLRCompute_PacketMirroringFilter_Direction_Ingress = @"INGRESS";

// GTLRCompute_PacketMirroringList_Warning.code
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_PacketMirroringsScopedList_Warning.code
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_PerInstanceConfig.status
NSString * const kGTLRCompute_PerInstanceConfig_Status_Applying = @"APPLYING";
NSString * const kGTLRCompute_PerInstanceConfig_Status_Deleting = @"DELETING";
NSString * const kGTLRCompute_PerInstanceConfig_Status_Effective = @"EFFECTIVE";
NSString * const kGTLRCompute_PerInstanceConfig_Status_None    = @"NONE";
NSString * const kGTLRCompute_PerInstanceConfig_Status_Unapplied = @"UNAPPLIED";
NSString * const kGTLRCompute_PerInstanceConfig_Status_UnappliedDeletion = @"UNAPPLIED_DELETION";

// GTLRCompute_PreservedStatePreservedDisk.autoDelete
NSString * const kGTLRCompute_PreservedStatePreservedDisk_AutoDelete_Never = @"NEVER";
NSString * const kGTLRCompute_PreservedStatePreservedDisk_AutoDelete_OnPermanentInstanceDeletion = @"ON_PERMANENT_INSTANCE_DELETION";

// GTLRCompute_PreservedStatePreservedDisk.mode
NSString * const kGTLRCompute_PreservedStatePreservedDisk_Mode_ReadOnly = @"READ_ONLY";
NSString * const kGTLRCompute_PreservedStatePreservedDisk_Mode_ReadWrite = @"READ_WRITE";

// GTLRCompute_Project.defaultNetworkTier
NSString * const kGTLRCompute_Project_DefaultNetworkTier_FixedStandard = @"FIXED_STANDARD";
NSString * const kGTLRCompute_Project_DefaultNetworkTier_Premium = @"PREMIUM";
NSString * const kGTLRCompute_Project_DefaultNetworkTier_Standard = @"STANDARD";
NSString * const kGTLRCompute_Project_DefaultNetworkTier_StandardOverridesFixedStandard = @"STANDARD_OVERRIDES_FIXED_STANDARD";

// GTLRCompute_Project.xpnProjectStatus
NSString * const kGTLRCompute_Project_XpnProjectStatus_Host    = @"HOST";
NSString * const kGTLRCompute_Project_XpnProjectStatus_UnspecifiedXpnProjectStatus = @"UNSPECIFIED_XPN_PROJECT_STATUS";

// GTLRCompute_ProjectsSetDefaultNetworkTierRequest.networkTier
NSString * const kGTLRCompute_ProjectsSetDefaultNetworkTierRequest_NetworkTier_FixedStandard = @"FIXED_STANDARD";
NSString * const kGTLRCompute_ProjectsSetDefaultNetworkTierRequest_NetworkTier_Premium = @"PREMIUM";
NSString * const kGTLRCompute_ProjectsSetDefaultNetworkTierRequest_NetworkTier_Standard = @"STANDARD";
NSString * const kGTLRCompute_ProjectsSetDefaultNetworkTierRequest_NetworkTier_StandardOverridesFixedStandard = @"STANDARD_OVERRIDES_FIXED_STANDARD";

// GTLRCompute_PublicAdvertisedPrefix.status
NSString * const kGTLRCompute_PublicAdvertisedPrefix_Status_Initial = @"INITIAL";
NSString * const kGTLRCompute_PublicAdvertisedPrefix_Status_PrefixConfigurationComplete = @"PREFIX_CONFIGURATION_COMPLETE";
NSString * const kGTLRCompute_PublicAdvertisedPrefix_Status_PrefixConfigurationInProgress = @"PREFIX_CONFIGURATION_IN_PROGRESS";
NSString * const kGTLRCompute_PublicAdvertisedPrefix_Status_PrefixRemovalInProgress = @"PREFIX_REMOVAL_IN_PROGRESS";
NSString * const kGTLRCompute_PublicAdvertisedPrefix_Status_PtrConfigured = @"PTR_CONFIGURED";
NSString * const kGTLRCompute_PublicAdvertisedPrefix_Status_ReverseDnsLookupFailed = @"REVERSE_DNS_LOOKUP_FAILED";
NSString * const kGTLRCompute_PublicAdvertisedPrefix_Status_Validated = @"VALIDATED";

// GTLRCompute_PublicAdvertisedPrefixList_Warning.code
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_PublicDelegatedPrefix.status
NSString * const kGTLRCompute_PublicDelegatedPrefix_Status_Announced = @"ANNOUNCED";
NSString * const kGTLRCompute_PublicDelegatedPrefix_Status_Deleting = @"DELETING";
NSString * const kGTLRCompute_PublicDelegatedPrefix_Status_Initializing = @"INITIALIZING";
NSString * const kGTLRCompute_PublicDelegatedPrefix_Status_ReadyToAnnounce = @"READY_TO_ANNOUNCE";

// GTLRCompute_PublicDelegatedPrefixAggregatedList_Warning.code
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_PublicDelegatedPrefixesScopedList_Warning.code
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_PublicDelegatedPrefixList_Warning.code
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_PublicDelegatedPrefixPublicDelegatedSubPrefix.status
NSString * const kGTLRCompute_PublicDelegatedPrefixPublicDelegatedSubPrefix_Status_Active = @"ACTIVE";
NSString * const kGTLRCompute_PublicDelegatedPrefixPublicDelegatedSubPrefix_Status_Inactive = @"INACTIVE";

// GTLRCompute_Quota.metric
NSString * const kGTLRCompute_Quota_Metric_A2Cpus              = @"A2_CPUS";
NSString * const kGTLRCompute_Quota_Metric_AffinityGroups      = @"AFFINITY_GROUPS";
NSString * const kGTLRCompute_Quota_Metric_Autoscalers         = @"AUTOSCALERS";
NSString * const kGTLRCompute_Quota_Metric_BackendBuckets      = @"BACKEND_BUCKETS";
NSString * const kGTLRCompute_Quota_Metric_BackendServices     = @"BACKEND_SERVICES";
NSString * const kGTLRCompute_Quota_Metric_C2Cpus              = @"C2_CPUS";
NSString * const kGTLRCompute_Quota_Metric_C2dCpus             = @"C2D_CPUS";
NSString * const kGTLRCompute_Quota_Metric_C3Cpus              = @"C3_CPUS";
NSString * const kGTLRCompute_Quota_Metric_Commitments         = @"COMMITMENTS";
NSString * const kGTLRCompute_Quota_Metric_CommittedA2Cpus     = @"COMMITTED_A2_CPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedC2Cpus     = @"COMMITTED_C2_CPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedC2dCpus    = @"COMMITTED_C2D_CPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedC3Cpus     = @"COMMITTED_C3_CPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedCpus       = @"COMMITTED_CPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedE2Cpus     = @"COMMITTED_E2_CPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedLicenses   = @"COMMITTED_LICENSES";
NSString * const kGTLRCompute_Quota_Metric_CommittedLocalSsdTotalGb = @"COMMITTED_LOCAL_SSD_TOTAL_GB";
NSString * const kGTLRCompute_Quota_Metric_CommittedM3Cpus     = @"COMMITTED_M3_CPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedMemoryOptimizedCpus = @"COMMITTED_MEMORY_OPTIMIZED_CPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedN2aCpus    = @"COMMITTED_N2A_CPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedN2Cpus     = @"COMMITTED_N2_CPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedN2dCpus    = @"COMMITTED_N2D_CPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedNvidiaA10080gbGpus = @"COMMITTED_NVIDIA_A100_80GB_GPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedNvidiaA100Gpus = @"COMMITTED_NVIDIA_A100_GPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedNvidiaK80Gpus = @"COMMITTED_NVIDIA_K80_GPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedNvidiaP100Gpus = @"COMMITTED_NVIDIA_P100_GPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedNvidiaP4Gpus = @"COMMITTED_NVIDIA_P4_GPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedNvidiaT4Gpus = @"COMMITTED_NVIDIA_T4_GPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedNvidiaV100Gpus = @"COMMITTED_NVIDIA_V100_GPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedT2aCpus    = @"COMMITTED_T2A_CPUS";
NSString * const kGTLRCompute_Quota_Metric_CommittedT2dCpus    = @"COMMITTED_T2D_CPUS";
NSString * const kGTLRCompute_Quota_Metric_Cpus                = @"CPUS";
NSString * const kGTLRCompute_Quota_Metric_CpusAllRegions      = @"CPUS_ALL_REGIONS";
NSString * const kGTLRCompute_Quota_Metric_DisksTotalGb        = @"DISKS_TOTAL_GB";
NSString * const kGTLRCompute_Quota_Metric_E2Cpus              = @"E2_CPUS";
NSString * const kGTLRCompute_Quota_Metric_ExternalManagedForwardingRules = @"EXTERNAL_MANAGED_FORWARDING_RULES";
NSString * const kGTLRCompute_Quota_Metric_ExternalNetworkLbForwardingRules = @"EXTERNAL_NETWORK_LB_FORWARDING_RULES";
NSString * const kGTLRCompute_Quota_Metric_ExternalProtocolForwardingRules = @"EXTERNAL_PROTOCOL_FORWARDING_RULES";
NSString * const kGTLRCompute_Quota_Metric_ExternalVpnGateways = @"EXTERNAL_VPN_GATEWAYS";
NSString * const kGTLRCompute_Quota_Metric_Firewalls           = @"FIREWALLS";
NSString * const kGTLRCompute_Quota_Metric_ForwardingRules     = @"FORWARDING_RULES";
NSString * const kGTLRCompute_Quota_Metric_GlobalExternalManagedForwardingRules = @"GLOBAL_EXTERNAL_MANAGED_FORWARDING_RULES";
NSString * const kGTLRCompute_Quota_Metric_GlobalInternalAddresses = @"GLOBAL_INTERNAL_ADDRESSES";
NSString * const kGTLRCompute_Quota_Metric_GpusAllRegions      = @"GPUS_ALL_REGIONS";
NSString * const kGTLRCompute_Quota_Metric_HealthChecks        = @"HEALTH_CHECKS";
NSString * const kGTLRCompute_Quota_Metric_Images              = @"IMAGES";
NSString * const kGTLRCompute_Quota_Metric_InPlaceSnapshots    = @"IN_PLACE_SNAPSHOTS";
NSString * const kGTLRCompute_Quota_Metric_InstanceGroupManagers = @"INSTANCE_GROUP_MANAGERS";
NSString * const kGTLRCompute_Quota_Metric_InstanceGroups      = @"INSTANCE_GROUPS";
NSString * const kGTLRCompute_Quota_Metric_Instances           = @"INSTANCES";
NSString * const kGTLRCompute_Quota_Metric_InstanceTemplates   = @"INSTANCE_TEMPLATES";
NSString * const kGTLRCompute_Quota_Metric_InterconnectAttachmentsPerRegion = @"INTERCONNECT_ATTACHMENTS_PER_REGION";
NSString * const kGTLRCompute_Quota_Metric_InterconnectAttachmentsTotalMbps = @"INTERCONNECT_ATTACHMENTS_TOTAL_MBPS";
NSString * const kGTLRCompute_Quota_Metric_Interconnects       = @"INTERCONNECTS";
NSString * const kGTLRCompute_Quota_Metric_InterconnectTotalGbps = @"INTERCONNECT_TOTAL_GBPS";
NSString * const kGTLRCompute_Quota_Metric_InternalAddresses   = @"INTERNAL_ADDRESSES";
NSString * const kGTLRCompute_Quota_Metric_InternalTrafficDirectorForwardingRules = @"INTERNAL_TRAFFIC_DIRECTOR_FORWARDING_RULES";
NSString * const kGTLRCompute_Quota_Metric_InUseAddresses      = @"IN_USE_ADDRESSES";
NSString * const kGTLRCompute_Quota_Metric_InUseBackupSchedules = @"IN_USE_BACKUP_SCHEDULES";
NSString * const kGTLRCompute_Quota_Metric_InUseSnapshotSchedules = @"IN_USE_SNAPSHOT_SCHEDULES";
NSString * const kGTLRCompute_Quota_Metric_LocalSsdTotalGb     = @"LOCAL_SSD_TOTAL_GB";
NSString * const kGTLRCompute_Quota_Metric_M1Cpus              = @"M1_CPUS";
NSString * const kGTLRCompute_Quota_Metric_M2Cpus              = @"M2_CPUS";
NSString * const kGTLRCompute_Quota_Metric_M3Cpus              = @"M3_CPUS";
NSString * const kGTLRCompute_Quota_Metric_MachineImages       = @"MACHINE_IMAGES";
NSString * const kGTLRCompute_Quota_Metric_N2aCpus             = @"N2A_CPUS";
NSString * const kGTLRCompute_Quota_Metric_N2Cpus              = @"N2_CPUS";
NSString * const kGTLRCompute_Quota_Metric_N2dCpus             = @"N2D_CPUS";
NSString * const kGTLRCompute_Quota_Metric_NetworkEndpointGroups = @"NETWORK_ENDPOINT_GROUPS";
NSString * const kGTLRCompute_Quota_Metric_NetworkFirewallPolicies = @"NETWORK_FIREWALL_POLICIES";
NSString * const kGTLRCompute_Quota_Metric_Networks            = @"NETWORKS";
NSString * const kGTLRCompute_Quota_Metric_NodeGroups          = @"NODE_GROUPS";
NSString * const kGTLRCompute_Quota_Metric_NodeTemplates       = @"NODE_TEMPLATES";
NSString * const kGTLRCompute_Quota_Metric_NvidiaA10080gbGpus  = @"NVIDIA_A100_80GB_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaA100Gpus      = @"NVIDIA_A100_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaK80Gpus       = @"NVIDIA_K80_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaP100Gpus      = @"NVIDIA_P100_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaP100VwsGpus   = @"NVIDIA_P100_VWS_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaP4Gpus        = @"NVIDIA_P4_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaP4VwsGpus     = @"NVIDIA_P4_VWS_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaT4Gpus        = @"NVIDIA_T4_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaT4VwsGpus     = @"NVIDIA_T4_VWS_GPUS";
NSString * const kGTLRCompute_Quota_Metric_NvidiaV100Gpus      = @"NVIDIA_V100_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PacketMirrorings    = @"PACKET_MIRRORINGS";
NSString * const kGTLRCompute_Quota_Metric_PdExtremeTotalProvisionedIops = @"PD_EXTREME_TOTAL_PROVISIONED_IOPS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleCpus     = @"PREEMPTIBLE_CPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleLocalSsdGb = @"PREEMPTIBLE_LOCAL_SSD_GB";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaA10080gbGpus = @"PREEMPTIBLE_NVIDIA_A100_80GB_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaA100Gpus = @"PREEMPTIBLE_NVIDIA_A100_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaK80Gpus = @"PREEMPTIBLE_NVIDIA_K80_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaP100Gpus = @"PREEMPTIBLE_NVIDIA_P100_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaP100VwsGpus = @"PREEMPTIBLE_NVIDIA_P100_VWS_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaP4Gpus = @"PREEMPTIBLE_NVIDIA_P4_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaP4VwsGpus = @"PREEMPTIBLE_NVIDIA_P4_VWS_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaT4Gpus = @"PREEMPTIBLE_NVIDIA_T4_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaT4VwsGpus = @"PREEMPTIBLE_NVIDIA_T4_VWS_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaV100Gpus = @"PREEMPTIBLE_NVIDIA_V100_GPUS";
NSString * const kGTLRCompute_Quota_Metric_PscIlbConsumerForwardingRulesPerProducerNetwork = @"PSC_ILB_CONSUMER_FORWARDING_RULES_PER_PRODUCER_NETWORK";
NSString * const kGTLRCompute_Quota_Metric_PscInternalLbForwardingRules = @"PSC_INTERNAL_LB_FORWARDING_RULES";
NSString * const kGTLRCompute_Quota_Metric_PublicAdvertisedPrefixes = @"PUBLIC_ADVERTISED_PREFIXES";
NSString * const kGTLRCompute_Quota_Metric_PublicDelegatedPrefixes = @"PUBLIC_DELEGATED_PREFIXES";
NSString * const kGTLRCompute_Quota_Metric_RegionalAutoscalers = @"REGIONAL_AUTOSCALERS";
NSString * const kGTLRCompute_Quota_Metric_RegionalInstanceGroupManagers = @"REGIONAL_INSTANCE_GROUP_MANAGERS";
NSString * const kGTLRCompute_Quota_Metric_Reservations        = @"RESERVATIONS";
NSString * const kGTLRCompute_Quota_Metric_ResourcePolicies    = @"RESOURCE_POLICIES";
NSString * const kGTLRCompute_Quota_Metric_Routers             = @"ROUTERS";
NSString * const kGTLRCompute_Quota_Metric_Routes              = @"ROUTES";
NSString * const kGTLRCompute_Quota_Metric_SecurityPolicies    = @"SECURITY_POLICIES";
NSString * const kGTLRCompute_Quota_Metric_SecurityPoliciesPerRegion = @"SECURITY_POLICIES_PER_REGION";
NSString * const kGTLRCompute_Quota_Metric_SecurityPolicyCevalRules = @"SECURITY_POLICY_CEVAL_RULES";
NSString * const kGTLRCompute_Quota_Metric_SecurityPolicyRules = @"SECURITY_POLICY_RULES";
NSString * const kGTLRCompute_Quota_Metric_SecurityPolicyRulesPerRegion = @"SECURITY_POLICY_RULES_PER_REGION";
NSString * const kGTLRCompute_Quota_Metric_ServiceAttachments  = @"SERVICE_ATTACHMENTS";
NSString * const kGTLRCompute_Quota_Metric_Snapshots           = @"SNAPSHOTS";
NSString * const kGTLRCompute_Quota_Metric_SsdTotalGb          = @"SSD_TOTAL_GB";
NSString * const kGTLRCompute_Quota_Metric_SslCertificates     = @"SSL_CERTIFICATES";
NSString * const kGTLRCompute_Quota_Metric_StaticAddresses     = @"STATIC_ADDRESSES";
NSString * const kGTLRCompute_Quota_Metric_StaticByoipAddresses = @"STATIC_BYOIP_ADDRESSES";
NSString * const kGTLRCompute_Quota_Metric_StaticExternalIpv6AddressRanges = @"STATIC_EXTERNAL_IPV6_ADDRESS_RANGES";
NSString * const kGTLRCompute_Quota_Metric_Subnetworks         = @"SUBNETWORKS";
NSString * const kGTLRCompute_Quota_Metric_T2aCpus             = @"T2A_CPUS";
NSString * const kGTLRCompute_Quota_Metric_T2dCpus             = @"T2D_CPUS";
NSString * const kGTLRCompute_Quota_Metric_TargetHttpProxies   = @"TARGET_HTTP_PROXIES";
NSString * const kGTLRCompute_Quota_Metric_TargetHttpsProxies  = @"TARGET_HTTPS_PROXIES";
NSString * const kGTLRCompute_Quota_Metric_TargetInstances     = @"TARGET_INSTANCES";
NSString * const kGTLRCompute_Quota_Metric_TargetPools         = @"TARGET_POOLS";
NSString * const kGTLRCompute_Quota_Metric_TargetSslProxies    = @"TARGET_SSL_PROXIES";
NSString * const kGTLRCompute_Quota_Metric_TargetTcpProxies    = @"TARGET_TCP_PROXIES";
NSString * const kGTLRCompute_Quota_Metric_TargetVpnGateways   = @"TARGET_VPN_GATEWAYS";
NSString * const kGTLRCompute_Quota_Metric_UrlMaps             = @"URL_MAPS";
NSString * const kGTLRCompute_Quota_Metric_VpnGateways         = @"VPN_GATEWAYS";
NSString * const kGTLRCompute_Quota_Metric_VpnTunnels          = @"VPN_TUNNELS";
NSString * const kGTLRCompute_Quota_Metric_XpnServiceProjects  = @"XPN_SERVICE_PROJECTS";

// GTLRCompute_Region.status
NSString * const kGTLRCompute_Region_Status_Down = @"DOWN";
NSString * const kGTLRCompute_Region_Status_Up   = @"UP";

// GTLRCompute_RegionAutoscalerList_Warning.code
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RegionDiskTypeList_Warning.code
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RegionInstanceGroupList_Warning.code
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RegionInstanceGroupManagerList_Warning.code
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest.minimalAction
NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MinimalAction_None = @"NONE";
NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MinimalAction_Refresh = @"REFRESH";
NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MinimalAction_Replace = @"REPLACE";
NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MinimalAction_Restart = @"RESTART";

// GTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest.mostDisruptiveAllowedAction
NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_None = @"NONE";
NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Refresh = @"REFRESH";
NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Replace = @"REPLACE";
NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Restart = @"RESTART";

// GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning.code
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RegionInstanceGroupsListInstances_Warning.code
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RegionInstanceGroupsListInstancesRequest.instanceState
NSString * const kGTLRCompute_RegionInstanceGroupsListInstancesRequest_InstanceState_All = @"ALL";
NSString * const kGTLRCompute_RegionInstanceGroupsListInstancesRequest_InstanceState_Running = @"RUNNING";

// GTLRCompute_RegionList_Warning.code
NSString * const kGTLRCompute_RegionList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RegionList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RegionList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RegionList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RegionList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RegionList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RegionList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RegionList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RegionList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_RegionList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_RegionList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RegionList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RegionList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RegionList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_RegionList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RegionList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RegionList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RegionList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RegionList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RegionList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RegionList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy.type
NSString * const kGTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Hierarchy = @"HIERARCHY";
NSString * const kGTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Network = @"NETWORK";
NSString * const kGTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_NetworkRegional = @"NETWORK_REGIONAL";
NSString * const kGTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Unspecified = @"UNSPECIFIED";

// GTLRCompute_Reservation.status
NSString * const kGTLRCompute_Reservation_Status_Creating = @"CREATING";
NSString * const kGTLRCompute_Reservation_Status_Deleting = @"DELETING";
NSString * const kGTLRCompute_Reservation_Status_Invalid  = @"INVALID";
NSString * const kGTLRCompute_Reservation_Status_Ready    = @"READY";
NSString * const kGTLRCompute_Reservation_Status_Updating = @"UPDATING";

// GTLRCompute_ReservationAffinity.consumeReservationType
NSString * const kGTLRCompute_ReservationAffinity_ConsumeReservationType_AnyReservation = @"ANY_RESERVATION";
NSString * const kGTLRCompute_ReservationAffinity_ConsumeReservationType_NoReservation = @"NO_RESERVATION";
NSString * const kGTLRCompute_ReservationAffinity_ConsumeReservationType_SpecificReservation = @"SPECIFIC_RESERVATION";
NSString * const kGTLRCompute_ReservationAffinity_ConsumeReservationType_Unspecified = @"UNSPECIFIED";

// GTLRCompute_ReservationAggregatedList_Warning.code
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ReservationList_Warning.code
NSString * const kGTLRCompute_ReservationList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ReservationList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ReservationList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ReservationList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ReservationList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ReservationList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ReservationList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ReservationList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ReservationList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ReservationList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ReservationList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ReservationList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ReservationList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ReservationList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ReservationList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ReservationList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ReservationList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ReservationList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ReservationList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ReservationList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ReservationList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ReservationList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ReservationList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ReservationList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ReservationList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ReservationList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ReservationList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ReservationsScopedList_Warning.code
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ResourceCommitment.type
NSString * const kGTLRCompute_ResourceCommitment_Type_Accelerator = @"ACCELERATOR";
NSString * const kGTLRCompute_ResourceCommitment_Type_LocalSsd = @"LOCAL_SSD";
NSString * const kGTLRCompute_ResourceCommitment_Type_Memory   = @"MEMORY";
NSString * const kGTLRCompute_ResourceCommitment_Type_Unspecified = @"UNSPECIFIED";
NSString * const kGTLRCompute_ResourceCommitment_Type_Vcpu     = @"VCPU";

// GTLRCompute_ResourcePoliciesScopedList_Warning.code
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ResourcePolicy.status
NSString * const kGTLRCompute_ResourcePolicy_Status_Creating = @"CREATING";
NSString * const kGTLRCompute_ResourcePolicy_Status_Deleting = @"DELETING";
NSString * const kGTLRCompute_ResourcePolicy_Status_Expired  = @"EXPIRED";
NSString * const kGTLRCompute_ResourcePolicy_Status_Invalid  = @"INVALID";
NSString * const kGTLRCompute_ResourcePolicy_Status_Ready    = @"READY";

// GTLRCompute_ResourcePolicyAggregatedList_Warning.code
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ResourcePolicyGroupPlacementPolicy.collocation
NSString * const kGTLRCompute_ResourcePolicyGroupPlacementPolicy_Collocation_Collocated = @"COLLOCATED";
NSString * const kGTLRCompute_ResourcePolicyGroupPlacementPolicy_Collocation_UnspecifiedCollocation = @"UNSPECIFIED_COLLOCATION";

// GTLRCompute_ResourcePolicyList_Warning.code
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy.onSourceDiskDelete
NSString * const kGTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy_OnSourceDiskDelete_ApplyRetentionPolicy = @"APPLY_RETENTION_POLICY";
NSString * const kGTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy_OnSourceDiskDelete_KeepAutoSnapshots = @"KEEP_AUTO_SNAPSHOTS";
NSString * const kGTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy_OnSourceDiskDelete_UnspecifiedOnSourceDiskDelete = @"UNSPECIFIED_ON_SOURCE_DISK_DELETE";

// GTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek.day
NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Friday = @"FRIDAY";
NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Invalid = @"INVALID";
NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Monday = @"MONDAY";
NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Saturday = @"SATURDAY";
NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Sunday = @"SUNDAY";
NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Thursday = @"THURSDAY";
NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Tuesday = @"TUESDAY";
NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Wednesday = @"WEDNESDAY";

// GTLRCompute_Route.routeStatus
NSString * const kGTLRCompute_Route_RouteStatus_Active   = @"ACTIVE";
NSString * const kGTLRCompute_Route_RouteStatus_Dropped  = @"DROPPED";
NSString * const kGTLRCompute_Route_RouteStatus_Inactive = @"INACTIVE";
NSString * const kGTLRCompute_Route_RouteStatus_Pending  = @"PENDING";

// GTLRCompute_Route.routeType
NSString * const kGTLRCompute_Route_RouteType_Bgp     = @"BGP";
NSString * const kGTLRCompute_Route_RouteType_Static  = @"STATIC";
NSString * const kGTLRCompute_Route_RouteType_Subnet  = @"SUBNET";
NSString * const kGTLRCompute_Route_RouteType_Transit = @"TRANSIT";

// GTLRCompute_Route_Warnings_Item.code
NSString * const kGTLRCompute_Route_Warnings_Item_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_Route_Warnings_Item_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RouteAsPath.pathSegmentType
NSString * const kGTLRCompute_RouteAsPath_PathSegmentType_AsConfedSequence = @"AS_CONFED_SEQUENCE";
NSString * const kGTLRCompute_RouteAsPath_PathSegmentType_AsConfedSet = @"AS_CONFED_SET";
NSString * const kGTLRCompute_RouteAsPath_PathSegmentType_AsSequence = @"AS_SEQUENCE";
NSString * const kGTLRCompute_RouteAsPath_PathSegmentType_AsSet = @"AS_SET";

// GTLRCompute_RouteList_Warning.code
NSString * const kGTLRCompute_RouteList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RouteList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RouteList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RouteList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RouteList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RouteList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RouteList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RouteList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RouteList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_RouteList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_RouteList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RouteList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RouteList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RouteList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_RouteList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RouteList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RouteList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RouteList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RouteList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RouteList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RouteList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RouterAggregatedList_Warning.code
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RouterBgp.advertisedGroups
NSString * const kGTLRCompute_RouterBgp_AdvertisedGroups_AllSubnets = @"ALL_SUBNETS";

// GTLRCompute_RouterBgp.advertiseMode
NSString * const kGTLRCompute_RouterBgp_AdvertiseMode_Custom  = @"CUSTOM";
NSString * const kGTLRCompute_RouterBgp_AdvertiseMode_Default = @"DEFAULT";

// GTLRCompute_RouterBgpPeer.advertisedGroups
NSString * const kGTLRCompute_RouterBgpPeer_AdvertisedGroups_AllSubnets = @"ALL_SUBNETS";

// GTLRCompute_RouterBgpPeer.advertiseMode
NSString * const kGTLRCompute_RouterBgpPeer_AdvertiseMode_Custom = @"CUSTOM";
NSString * const kGTLRCompute_RouterBgpPeer_AdvertiseMode_Default = @"DEFAULT";

// GTLRCompute_RouterBgpPeer.enable
NSString * const kGTLRCompute_RouterBgpPeer_Enable_False = @"FALSE";
NSString * const kGTLRCompute_RouterBgpPeer_Enable_True  = @"TRUE";

// GTLRCompute_RouterBgpPeer.managementType
NSString * const kGTLRCompute_RouterBgpPeer_ManagementType_ManagedByAttachment = @"MANAGED_BY_ATTACHMENT";
NSString * const kGTLRCompute_RouterBgpPeer_ManagementType_ManagedByUser = @"MANAGED_BY_USER";

// GTLRCompute_RouterBgpPeerBfd.sessionInitializationMode
NSString * const kGTLRCompute_RouterBgpPeerBfd_SessionInitializationMode_Active = @"ACTIVE";
NSString * const kGTLRCompute_RouterBgpPeerBfd_SessionInitializationMode_Disabled = @"DISABLED";
NSString * const kGTLRCompute_RouterBgpPeerBfd_SessionInitializationMode_Passive = @"PASSIVE";

// GTLRCompute_RouterInterface.managementType
NSString * const kGTLRCompute_RouterInterface_ManagementType_ManagedByAttachment = @"MANAGED_BY_ATTACHMENT";
NSString * const kGTLRCompute_RouterInterface_ManagementType_ManagedByUser = @"MANAGED_BY_USER";

// GTLRCompute_RouterList_Warning.code
NSString * const kGTLRCompute_RouterList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RouterList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RouterList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RouterList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RouterList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RouterList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RouterList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RouterList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RouterList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_RouterList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_RouterList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RouterList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RouterList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RouterList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_RouterList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RouterList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RouterList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RouterList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RouterList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RouterList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RouterList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RouterNat.endpointTypes
NSString * const kGTLRCompute_RouterNat_EndpointTypes_EndpointTypeSwg = @"ENDPOINT_TYPE_SWG";
NSString * const kGTLRCompute_RouterNat_EndpointTypes_EndpointTypeVm = @"ENDPOINT_TYPE_VM";

// GTLRCompute_RouterNat.natIpAllocateOption
NSString * const kGTLRCompute_RouterNat_NatIpAllocateOption_AutoOnly = @"AUTO_ONLY";
NSString * const kGTLRCompute_RouterNat_NatIpAllocateOption_ManualOnly = @"MANUAL_ONLY";

// GTLRCompute_RouterNat.sourceSubnetworkIpRangesToNat
NSString * const kGTLRCompute_RouterNat_SourceSubnetworkIpRangesToNat_AllSubnetworksAllIpRanges = @"ALL_SUBNETWORKS_ALL_IP_RANGES";
NSString * const kGTLRCompute_RouterNat_SourceSubnetworkIpRangesToNat_AllSubnetworksAllPrimaryIpRanges = @"ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES";
NSString * const kGTLRCompute_RouterNat_SourceSubnetworkIpRangesToNat_ListOfSubnetworks = @"LIST_OF_SUBNETWORKS";

// GTLRCompute_RouterNatLogConfig.filter
NSString * const kGTLRCompute_RouterNatLogConfig_Filter_All    = @"ALL";
NSString * const kGTLRCompute_RouterNatLogConfig_Filter_ErrorsOnly = @"ERRORS_ONLY";
NSString * const kGTLRCompute_RouterNatLogConfig_Filter_TranslationsOnly = @"TRANSLATIONS_ONLY";

// GTLRCompute_RouterNatSubnetworkToNat.sourceIpRangesToNat
NSString * const kGTLRCompute_RouterNatSubnetworkToNat_SourceIpRangesToNat_AllIpRanges = @"ALL_IP_RANGES";
NSString * const kGTLRCompute_RouterNatSubnetworkToNat_SourceIpRangesToNat_ListOfSecondaryIpRanges = @"LIST_OF_SECONDARY_IP_RANGES";
NSString * const kGTLRCompute_RouterNatSubnetworkToNat_SourceIpRangesToNat_PrimaryIpRange = @"PRIMARY_IP_RANGE";

// GTLRCompute_RoutersScopedList_Warning.code
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_RouterStatusBgpPeerStatus.status
NSString * const kGTLRCompute_RouterStatusBgpPeerStatus_Status_Down = @"DOWN";
NSString * const kGTLRCompute_RouterStatusBgpPeerStatus_Status_Unknown = @"UNKNOWN";
NSString * const kGTLRCompute_RouterStatusBgpPeerStatus_Status_Up = @"UP";

// GTLRCompute_RouterStatusBgpPeerStatus.statusReason
NSString * const kGTLRCompute_RouterStatusBgpPeerStatus_StatusReason_Md5AuthInternalProblem = @"MD5_AUTH_INTERNAL_PROBLEM";
NSString * const kGTLRCompute_RouterStatusBgpPeerStatus_StatusReason_StatusReasonUnspecified = @"STATUS_REASON_UNSPECIFIED";

// GTLRCompute_Rule.action
NSString * const kGTLRCompute_Rule_Action_Allow        = @"ALLOW";
NSString * const kGTLRCompute_Rule_Action_AllowWithLog = @"ALLOW_WITH_LOG";
NSString * const kGTLRCompute_Rule_Action_Deny         = @"DENY";
NSString * const kGTLRCompute_Rule_Action_DenyWithLog  = @"DENY_WITH_LOG";
NSString * const kGTLRCompute_Rule_Action_Log          = @"LOG";
NSString * const kGTLRCompute_Rule_Action_NoAction     = @"NO_ACTION";

// GTLRCompute_SavedAttachedDisk.interface
NSString * const kGTLRCompute_SavedAttachedDisk_Interface_Nvme = @"NVME";
NSString * const kGTLRCompute_SavedAttachedDisk_Interface_Scsi = @"SCSI";

// GTLRCompute_SavedAttachedDisk.mode
NSString * const kGTLRCompute_SavedAttachedDisk_Mode_ReadOnly  = @"READ_ONLY";
NSString * const kGTLRCompute_SavedAttachedDisk_Mode_ReadWrite = @"READ_WRITE";

// GTLRCompute_SavedAttachedDisk.storageBytesStatus
NSString * const kGTLRCompute_SavedAttachedDisk_StorageBytesStatus_Updating = @"UPDATING";
NSString * const kGTLRCompute_SavedAttachedDisk_StorageBytesStatus_UpToDate = @"UP_TO_DATE";

// GTLRCompute_SavedAttachedDisk.type
NSString * const kGTLRCompute_SavedAttachedDisk_Type_Persistent = @"PERSISTENT";
NSString * const kGTLRCompute_SavedAttachedDisk_Type_Scratch   = @"SCRATCH";

// GTLRCompute_SavedDisk.architecture
NSString * const kGTLRCompute_SavedDisk_Architecture_ArchitectureUnspecified = @"ARCHITECTURE_UNSPECIFIED";
NSString * const kGTLRCompute_SavedDisk_Architecture_Arm64     = @"ARM64";
NSString * const kGTLRCompute_SavedDisk_Architecture_X8664     = @"X86_64";

// GTLRCompute_SavedDisk.storageBytesStatus
NSString * const kGTLRCompute_SavedDisk_StorageBytesStatus_Updating = @"UPDATING";
NSString * const kGTLRCompute_SavedDisk_StorageBytesStatus_UpToDate = @"UP_TO_DATE";

// GTLRCompute_ScalingScheduleStatus.state
NSString * const kGTLRCompute_ScalingScheduleStatus_State_Active = @"ACTIVE";
NSString * const kGTLRCompute_ScalingScheduleStatus_State_Disabled = @"DISABLED";
NSString * const kGTLRCompute_ScalingScheduleStatus_State_Obsolete = @"OBSOLETE";
NSString * const kGTLRCompute_ScalingScheduleStatus_State_Ready = @"READY";

// GTLRCompute_Scheduling.instanceTerminationAction
NSString * const kGTLRCompute_Scheduling_InstanceTerminationAction_Delete = @"DELETE";
NSString * const kGTLRCompute_Scheduling_InstanceTerminationAction_InstanceTerminationActionUnspecified = @"INSTANCE_TERMINATION_ACTION_UNSPECIFIED";
NSString * const kGTLRCompute_Scheduling_InstanceTerminationAction_Stop = @"STOP";

// GTLRCompute_Scheduling.onHostMaintenance
NSString * const kGTLRCompute_Scheduling_OnHostMaintenance_Migrate = @"MIGRATE";
NSString * const kGTLRCompute_Scheduling_OnHostMaintenance_Terminate = @"TERMINATE";

// GTLRCompute_Scheduling.provisioningModel
NSString * const kGTLRCompute_Scheduling_ProvisioningModel_Spot = @"SPOT";
NSString * const kGTLRCompute_Scheduling_ProvisioningModel_Standard = @"STANDARD";

// GTLRCompute_SchedulingNodeAffinity.operatorProperty
NSString * const kGTLRCompute_SchedulingNodeAffinity_OperatorProperty_In = @"IN";
NSString * const kGTLRCompute_SchedulingNodeAffinity_OperatorProperty_NotIn = @"NOT_IN";
NSString * const kGTLRCompute_SchedulingNodeAffinity_OperatorProperty_OperatorUnspecified = @"OPERATOR_UNSPECIFIED";

// GTLRCompute_SecurityPoliciesAggregatedList_Warning.code
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SecurityPoliciesScopedList_Warning.code
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SecurityPolicy.type
NSString * const kGTLRCompute_SecurityPolicy_Type_CloudArmor   = @"CLOUD_ARMOR";
NSString * const kGTLRCompute_SecurityPolicy_Type_CloudArmorEdge = @"CLOUD_ARMOR_EDGE";
NSString * const kGTLRCompute_SecurityPolicy_Type_CloudArmorNetwork = @"CLOUD_ARMOR_NETWORK";

// GTLRCompute_SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig.ruleVisibility
NSString * const kGTLRCompute_SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig_RuleVisibility_Premium = @"PREMIUM";
NSString * const kGTLRCompute_SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig_RuleVisibility_Standard = @"STANDARD";

// GTLRCompute_SecurityPolicyAdvancedOptionsConfig.jsonParsing
NSString * const kGTLRCompute_SecurityPolicyAdvancedOptionsConfig_JsonParsing_Disabled = @"DISABLED";
NSString * const kGTLRCompute_SecurityPolicyAdvancedOptionsConfig_JsonParsing_Standard = @"STANDARD";

// GTLRCompute_SecurityPolicyAdvancedOptionsConfig.logLevel
NSString * const kGTLRCompute_SecurityPolicyAdvancedOptionsConfig_LogLevel_Normal = @"NORMAL";
NSString * const kGTLRCompute_SecurityPolicyAdvancedOptionsConfig_LogLevel_Verbose = @"VERBOSE";

// GTLRCompute_SecurityPolicyDdosProtectionConfig.ddosProtection
NSString * const kGTLRCompute_SecurityPolicyDdosProtectionConfig_DdosProtection_Advanced = @"ADVANCED";
NSString * const kGTLRCompute_SecurityPolicyDdosProtectionConfig_DdosProtection_Standard = @"STANDARD";

// GTLRCompute_SecurityPolicyList_Warning.code
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SecurityPolicyRuleMatcher.versionedExpr
NSString * const kGTLRCompute_SecurityPolicyRuleMatcher_VersionedExpr_SrcIpsV1 = @"SRC_IPS_V1";

// GTLRCompute_SecurityPolicyRuleRateLimitOptions.enforceOnKey
NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_All = @"ALL";
NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_HttpCookie = @"HTTP_COOKIE";
NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_HttpHeader = @"HTTP_HEADER";
NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_HttpPath = @"HTTP_PATH";
NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_Ip = @"IP";
NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_RegionCode = @"REGION_CODE";
NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_Sni = @"SNI";
NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_XffIp = @"XFF_IP";

// GTLRCompute_SecurityPolicyRuleRedirectOptions.type
NSString * const kGTLRCompute_SecurityPolicyRuleRedirectOptions_Type_External302 = @"EXTERNAL_302";
NSString * const kGTLRCompute_SecurityPolicyRuleRedirectOptions_Type_GoogleRecaptcha = @"GOOGLE_RECAPTCHA";

// GTLRCompute_ServerBinding.type
NSString * const kGTLRCompute_ServerBinding_Type_RestartNodeOnAnyServer = @"RESTART_NODE_ON_ANY_SERVER";
NSString * const kGTLRCompute_ServerBinding_Type_RestartNodeOnMinimalServers = @"RESTART_NODE_ON_MINIMAL_SERVERS";
NSString * const kGTLRCompute_ServerBinding_Type_ServerBindingTypeUnspecified = @"SERVER_BINDING_TYPE_UNSPECIFIED";

// GTLRCompute_ServiceAttachment.connectionPreference
NSString * const kGTLRCompute_ServiceAttachment_ConnectionPreference_AcceptAutomatic = @"ACCEPT_AUTOMATIC";
NSString * const kGTLRCompute_ServiceAttachment_ConnectionPreference_AcceptManual = @"ACCEPT_MANUAL";
NSString * const kGTLRCompute_ServiceAttachment_ConnectionPreference_ConnectionPreferenceUnspecified = @"CONNECTION_PREFERENCE_UNSPECIFIED";

// GTLRCompute_ServiceAttachmentAggregatedList_Warning.code
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ServiceAttachmentConnectedEndpoint.status
NSString * const kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_Accepted = @"ACCEPTED";
NSString * const kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_Closed = @"CLOSED";
NSString * const kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_NeedsAttention = @"NEEDS_ATTENTION";
NSString * const kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_Pending = @"PENDING";
NSString * const kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_Rejected = @"REJECTED";
NSString * const kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_StatusUnspecified = @"STATUS_UNSPECIFIED";

// GTLRCompute_ServiceAttachmentList_Warning.code
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ServiceAttachmentsScopedList_Warning.code
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_ShareSettings.shareType
NSString * const kGTLRCompute_ShareSettings_ShareType_Local    = @"LOCAL";
NSString * const kGTLRCompute_ShareSettings_ShareType_Organization = @"ORGANIZATION";
NSString * const kGTLRCompute_ShareSettings_ShareType_ShareTypeUnspecified = @"SHARE_TYPE_UNSPECIFIED";
NSString * const kGTLRCompute_ShareSettings_ShareType_SpecificProjects = @"SPECIFIC_PROJECTS";

// GTLRCompute_Snapshot.architecture
NSString * const kGTLRCompute_Snapshot_Architecture_ArchitectureUnspecified = @"ARCHITECTURE_UNSPECIFIED";
NSString * const kGTLRCompute_Snapshot_Architecture_Arm64      = @"ARM64";
NSString * const kGTLRCompute_Snapshot_Architecture_X8664      = @"X86_64";

// GTLRCompute_Snapshot.snapshotType
NSString * const kGTLRCompute_Snapshot_SnapshotType_Archive  = @"ARCHIVE";
NSString * const kGTLRCompute_Snapshot_SnapshotType_Standard = @"STANDARD";

// GTLRCompute_Snapshot.status
NSString * const kGTLRCompute_Snapshot_Status_Creating  = @"CREATING";
NSString * const kGTLRCompute_Snapshot_Status_Deleting  = @"DELETING";
NSString * const kGTLRCompute_Snapshot_Status_Failed    = @"FAILED";
NSString * const kGTLRCompute_Snapshot_Status_Ready     = @"READY";
NSString * const kGTLRCompute_Snapshot_Status_Uploading = @"UPLOADING";

// GTLRCompute_Snapshot.storageBytesStatus
NSString * const kGTLRCompute_Snapshot_StorageBytesStatus_Updating = @"UPDATING";
NSString * const kGTLRCompute_Snapshot_StorageBytesStatus_UpToDate = @"UP_TO_DATE";

// GTLRCompute_SnapshotList_Warning.code
NSString * const kGTLRCompute_SnapshotList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SnapshotList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SourceInstanceProperties.keyRevocationActionType
NSString * const kGTLRCompute_SourceInstanceProperties_KeyRevocationActionType_KeyRevocationActionTypeUnspecified = @"KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED";
NSString * const kGTLRCompute_SourceInstanceProperties_KeyRevocationActionType_None = @"NONE";
NSString * const kGTLRCompute_SourceInstanceProperties_KeyRevocationActionType_Stop = @"STOP";

// GTLRCompute_SslCertificate.type
NSString * const kGTLRCompute_SslCertificate_Type_Managed      = @"MANAGED";
NSString * const kGTLRCompute_SslCertificate_Type_SelfManaged  = @"SELF_MANAGED";
NSString * const kGTLRCompute_SslCertificate_Type_TypeUnspecified = @"TYPE_UNSPECIFIED";

// GTLRCompute_SslCertificateAggregatedList_Warning.code
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SslCertificateList_Warning.code
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SslCertificateList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SslCertificateManagedSslCertificate.status
NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_Status_Active = @"ACTIVE";
NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_Status_ManagedCertificateStatusUnspecified = @"MANAGED_CERTIFICATE_STATUS_UNSPECIFIED";
NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_Status_Provisioning = @"PROVISIONING";
NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_Status_ProvisioningFailed = @"PROVISIONING_FAILED";
NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_Status_ProvisioningFailedPermanently = @"PROVISIONING_FAILED_PERMANENTLY";
NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_Status_RenewalFailed = @"RENEWAL_FAILED";

// GTLRCompute_SslCertificateManagedSslCertificate_DomainStatus.domainStatu
NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_DomainStatus_DomainStatu_Active = @"ACTIVE";
NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_DomainStatus_DomainStatu_DomainStatusUnspecified = @"DOMAIN_STATUS_UNSPECIFIED";
NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_DomainStatus_DomainStatu_FailedCaaChecking = @"FAILED_CAA_CHECKING";
NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_DomainStatus_DomainStatu_FailedCaaForbidden = @"FAILED_CAA_FORBIDDEN";
NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_DomainStatus_DomainStatu_FailedNotVisible = @"FAILED_NOT_VISIBLE";
NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_DomainStatus_DomainStatu_FailedRateLimited = @"FAILED_RATE_LIMITED";
NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_DomainStatus_DomainStatu_Provisioning = @"PROVISIONING";

// GTLRCompute_SslCertificatesScopedList_Warning.code
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SSLHealthCheck.portSpecification
NSString * const kGTLRCompute_SSLHealthCheck_PortSpecification_UseFixedPort = @"USE_FIXED_PORT";
NSString * const kGTLRCompute_SSLHealthCheck_PortSpecification_UseNamedPort = @"USE_NAMED_PORT";
NSString * const kGTLRCompute_SSLHealthCheck_PortSpecification_UseServingPort = @"USE_SERVING_PORT";

// GTLRCompute_SSLHealthCheck.proxyHeader
NSString * const kGTLRCompute_SSLHealthCheck_ProxyHeader_None  = @"NONE";
NSString * const kGTLRCompute_SSLHealthCheck_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_SslPoliciesAggregatedList_Warning.code
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SslPoliciesList_Warning.code
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SslPoliciesScopedList_Warning.code
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SslPolicy.minTlsVersion
NSString * const kGTLRCompute_SslPolicy_MinTlsVersion_Tls10 = @"TLS_1_0";
NSString * const kGTLRCompute_SslPolicy_MinTlsVersion_Tls11 = @"TLS_1_1";
NSString * const kGTLRCompute_SslPolicy_MinTlsVersion_Tls12 = @"TLS_1_2";

// GTLRCompute_SslPolicy.profile
NSString * const kGTLRCompute_SslPolicy_Profile_Compatible = @"COMPATIBLE";
NSString * const kGTLRCompute_SslPolicy_Profile_Custom     = @"CUSTOM";
NSString * const kGTLRCompute_SslPolicy_Profile_Modern     = @"MODERN";
NSString * const kGTLRCompute_SslPolicy_Profile_Restricted = @"RESTRICTED";

// GTLRCompute_SslPolicy_Warnings_Item.code
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_StatefulPolicyPreservedStateDiskDevice.autoDelete
NSString * const kGTLRCompute_StatefulPolicyPreservedStateDiskDevice_AutoDelete_Never = @"NEVER";
NSString * const kGTLRCompute_StatefulPolicyPreservedStateDiskDevice_AutoDelete_OnPermanentInstanceDeletion = @"ON_PERMANENT_INSTANCE_DELETION";

// GTLRCompute_Subnetwork.ipv6AccessType
NSString * const kGTLRCompute_Subnetwork_Ipv6AccessType_External = @"EXTERNAL";
NSString * const kGTLRCompute_Subnetwork_Ipv6AccessType_Internal = @"INTERNAL";

// GTLRCompute_Subnetwork.privateIpv6GoogleAccess
NSString * const kGTLRCompute_Subnetwork_PrivateIpv6GoogleAccess_DisableGoogleAccess = @"DISABLE_GOOGLE_ACCESS";
NSString * const kGTLRCompute_Subnetwork_PrivateIpv6GoogleAccess_EnableBidirectionalAccessToGoogle = @"ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE";
NSString * const kGTLRCompute_Subnetwork_PrivateIpv6GoogleAccess_EnableOutboundVmAccessToGoogle = @"ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE";

// GTLRCompute_Subnetwork.purpose
NSString * const kGTLRCompute_Subnetwork_Purpose_InternalHttpsLoadBalancer = @"INTERNAL_HTTPS_LOAD_BALANCER";
NSString * const kGTLRCompute_Subnetwork_Purpose_Private       = @"PRIVATE";
NSString * const kGTLRCompute_Subnetwork_Purpose_PrivateRfc1918 = @"PRIVATE_RFC_1918";
NSString * const kGTLRCompute_Subnetwork_Purpose_PrivateServiceConnect = @"PRIVATE_SERVICE_CONNECT";
NSString * const kGTLRCompute_Subnetwork_Purpose_RegionalManagedProxy = @"REGIONAL_MANAGED_PROXY";

// GTLRCompute_Subnetwork.role
NSString * const kGTLRCompute_Subnetwork_Role_Active = @"ACTIVE";
NSString * const kGTLRCompute_Subnetwork_Role_Backup = @"BACKUP";

// GTLRCompute_Subnetwork.stackType
NSString * const kGTLRCompute_Subnetwork_StackType_Ipv4Ipv6 = @"IPV4_IPV6";
NSString * const kGTLRCompute_Subnetwork_StackType_Ipv4Only = @"IPV4_ONLY";

// GTLRCompute_Subnetwork.state
NSString * const kGTLRCompute_Subnetwork_State_Draining = @"DRAINING";
NSString * const kGTLRCompute_Subnetwork_State_Ready    = @"READY";

// GTLRCompute_SubnetworkAggregatedList_Warning.code
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SubnetworkList_Warning.code
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SubnetworkList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_SubnetworkLogConfig.aggregationInterval
NSString * const kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval10Min = @"INTERVAL_10_MIN";
NSString * const kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval15Min = @"INTERVAL_15_MIN";
NSString * const kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval1Min = @"INTERVAL_1_MIN";
NSString * const kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval30Sec = @"INTERVAL_30_SEC";
NSString * const kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval5Min = @"INTERVAL_5_MIN";
NSString * const kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval5Sec = @"INTERVAL_5_SEC";

// GTLRCompute_SubnetworkLogConfig.metadata
NSString * const kGTLRCompute_SubnetworkLogConfig_Metadata_CustomMetadata = @"CUSTOM_METADATA";
NSString * const kGTLRCompute_SubnetworkLogConfig_Metadata_ExcludeAllMetadata = @"EXCLUDE_ALL_METADATA";
NSString * const kGTLRCompute_SubnetworkLogConfig_Metadata_IncludeAllMetadata = @"INCLUDE_ALL_METADATA";

// GTLRCompute_SubnetworksScopedList_Warning.code
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_Subsetting.policy
NSString * const kGTLRCompute_Subsetting_Policy_ConsistentHashSubsetting = @"CONSISTENT_HASH_SUBSETTING";
NSString * const kGTLRCompute_Subsetting_Policy_None           = @"NONE";

// GTLRCompute_TargetGrpcProxyList_Warning.code
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetHttpProxiesScopedList_Warning.code
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetHttpProxyList_Warning.code
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetHttpsProxiesScopedList_Warning.code
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest.quicOverride
NSString * const kGTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest_QuicOverride_Disable = @"DISABLE";
NSString * const kGTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest_QuicOverride_Enable = @"ENABLE";
NSString * const kGTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest_QuicOverride_None = @"NONE";

// GTLRCompute_TargetHttpsProxy.quicOverride
NSString * const kGTLRCompute_TargetHttpsProxy_QuicOverride_Disable = @"DISABLE";
NSString * const kGTLRCompute_TargetHttpsProxy_QuicOverride_Enable = @"ENABLE";
NSString * const kGTLRCompute_TargetHttpsProxy_QuicOverride_None = @"NONE";

// GTLRCompute_TargetHttpsProxyAggregatedList_Warning.code
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetHttpsProxyList_Warning.code
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetInstance.natPolicy
NSString * const kGTLRCompute_TargetInstance_NatPolicy_NoNat = @"NO_NAT";

// GTLRCompute_TargetInstanceAggregatedList_Warning.code
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetInstanceList_Warning.code
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetInstancesScopedList_Warning.code
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetPool.sessionAffinity
NSString * const kGTLRCompute_TargetPool_SessionAffinity_ClientIp = @"CLIENT_IP";
NSString * const kGTLRCompute_TargetPool_SessionAffinity_ClientIpNoDestination = @"CLIENT_IP_NO_DESTINATION";
NSString * const kGTLRCompute_TargetPool_SessionAffinity_ClientIpPortProto = @"CLIENT_IP_PORT_PROTO";
NSString * const kGTLRCompute_TargetPool_SessionAffinity_ClientIpProto = @"CLIENT_IP_PROTO";
NSString * const kGTLRCompute_TargetPool_SessionAffinity_GeneratedCookie = @"GENERATED_COOKIE";
NSString * const kGTLRCompute_TargetPool_SessionAffinity_HeaderField = @"HEADER_FIELD";
NSString * const kGTLRCompute_TargetPool_SessionAffinity_HttpCookie = @"HTTP_COOKIE";
NSString * const kGTLRCompute_TargetPool_SessionAffinity_None  = @"NONE";

// GTLRCompute_TargetPoolAggregatedList_Warning.code
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetPoolList_Warning.code
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetPoolList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetPoolsScopedList_Warning.code
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetSslProxiesSetProxyHeaderRequest.proxyHeader
NSString * const kGTLRCompute_TargetSslProxiesSetProxyHeaderRequest_ProxyHeader_None = @"NONE";
NSString * const kGTLRCompute_TargetSslProxiesSetProxyHeaderRequest_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_TargetSslProxy.proxyHeader
NSString * const kGTLRCompute_TargetSslProxy_ProxyHeader_None  = @"NONE";
NSString * const kGTLRCompute_TargetSslProxy_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_TargetSslProxyList_Warning.code
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetTcpProxiesScopedList_Warning.code
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetTcpProxiesSetProxyHeaderRequest.proxyHeader
NSString * const kGTLRCompute_TargetTcpProxiesSetProxyHeaderRequest_ProxyHeader_None = @"NONE";
NSString * const kGTLRCompute_TargetTcpProxiesSetProxyHeaderRequest_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_TargetTcpProxy.proxyHeader
NSString * const kGTLRCompute_TargetTcpProxy_ProxyHeader_None  = @"NONE";
NSString * const kGTLRCompute_TargetTcpProxy_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_TargetTcpProxyAggregatedList_Warning.code
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetTcpProxyList_Warning.code
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetVpnGateway.status
NSString * const kGTLRCompute_TargetVpnGateway_Status_Creating = @"CREATING";
NSString * const kGTLRCompute_TargetVpnGateway_Status_Deleting = @"DELETING";
NSString * const kGTLRCompute_TargetVpnGateway_Status_Failed   = @"FAILED";
NSString * const kGTLRCompute_TargetVpnGateway_Status_Ready    = @"READY";

// GTLRCompute_TargetVpnGatewayAggregatedList_Warning.code
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetVpnGatewayList_Warning.code
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TargetVpnGatewaysScopedList_Warning.code
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_TCPHealthCheck.portSpecification
NSString * const kGTLRCompute_TCPHealthCheck_PortSpecification_UseFixedPort = @"USE_FIXED_PORT";
NSString * const kGTLRCompute_TCPHealthCheck_PortSpecification_UseNamedPort = @"USE_NAMED_PORT";
NSString * const kGTLRCompute_TCPHealthCheck_PortSpecification_UseServingPort = @"USE_SERVING_PORT";

// GTLRCompute_TCPHealthCheck.proxyHeader
NSString * const kGTLRCompute_TCPHealthCheck_ProxyHeader_None  = @"NONE";
NSString * const kGTLRCompute_TCPHealthCheck_ProxyHeader_ProxyV1 = @"PROXY_V1";

// GTLRCompute_UrlMapList_Warning.code
NSString * const kGTLRCompute_UrlMapList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_UrlMapList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_UrlMapsAggregatedList_Warning.code
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_UrlMapsScopedList_Warning.code
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_UrlMapsValidateRequest.loadBalancingSchemes
NSString * const kGTLRCompute_UrlMapsValidateRequest_LoadBalancingSchemes_External = @"EXTERNAL";
NSString * const kGTLRCompute_UrlMapsValidateRequest_LoadBalancingSchemes_ExternalManaged = @"EXTERNAL_MANAGED";
NSString * const kGTLRCompute_UrlMapsValidateRequest_LoadBalancingSchemes_LoadBalancingSchemeUnspecified = @"LOAD_BALANCING_SCHEME_UNSPECIFIED";

// GTLRCompute_UsableSubnetwork.ipv6AccessType
NSString * const kGTLRCompute_UsableSubnetwork_Ipv6AccessType_External = @"EXTERNAL";
NSString * const kGTLRCompute_UsableSubnetwork_Ipv6AccessType_Internal = @"INTERNAL";

// GTLRCompute_UsableSubnetwork.purpose
NSString * const kGTLRCompute_UsableSubnetwork_Purpose_InternalHttpsLoadBalancer = @"INTERNAL_HTTPS_LOAD_BALANCER";
NSString * const kGTLRCompute_UsableSubnetwork_Purpose_Private = @"PRIVATE";
NSString * const kGTLRCompute_UsableSubnetwork_Purpose_PrivateRfc1918 = @"PRIVATE_RFC_1918";
NSString * const kGTLRCompute_UsableSubnetwork_Purpose_PrivateServiceConnect = @"PRIVATE_SERVICE_CONNECT";
NSString * const kGTLRCompute_UsableSubnetwork_Purpose_RegionalManagedProxy = @"REGIONAL_MANAGED_PROXY";

// GTLRCompute_UsableSubnetwork.role
NSString * const kGTLRCompute_UsableSubnetwork_Role_Active = @"ACTIVE";
NSString * const kGTLRCompute_UsableSubnetwork_Role_Backup = @"BACKUP";

// GTLRCompute_UsableSubnetwork.stackType
NSString * const kGTLRCompute_UsableSubnetwork_StackType_Ipv4Ipv6 = @"IPV4_IPV6";
NSString * const kGTLRCompute_UsableSubnetwork_StackType_Ipv4Only = @"IPV4_ONLY";

// GTLRCompute_UsableSubnetworksAggregatedList_Warning.code
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_VmEndpointNatMappingsList_Warning.code
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_VpnGateway.stackType
NSString * const kGTLRCompute_VpnGateway_StackType_Ipv4Ipv6 = @"IPV4_IPV6";
NSString * const kGTLRCompute_VpnGateway_StackType_Ipv4Only = @"IPV4_ONLY";

// GTLRCompute_VpnGatewayAggregatedList_Warning.code
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_VpnGatewayList_Warning.code
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_VpnGatewaysScopedList_Warning.code
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState.state
NSString * const kGTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState_State_ConnectionRedundancyMet = @"CONNECTION_REDUNDANCY_MET";
NSString * const kGTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState_State_ConnectionRedundancyNotMet = @"CONNECTION_REDUNDANCY_NOT_MET";

// GTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState.unsatisfiedReason
NSString * const kGTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState_UnsatisfiedReason_IncompleteTunnelsCoverage = @"INCOMPLETE_TUNNELS_COVERAGE";

// GTLRCompute_VpnTunnel.status
NSString * const kGTLRCompute_VpnTunnel_Status_AllocatingResources = @"ALLOCATING_RESOURCES";
NSString * const kGTLRCompute_VpnTunnel_Status_AuthorizationError = @"AUTHORIZATION_ERROR";
NSString * const kGTLRCompute_VpnTunnel_Status_Deprovisioning  = @"DEPROVISIONING";
NSString * const kGTLRCompute_VpnTunnel_Status_Established     = @"ESTABLISHED";
NSString * const kGTLRCompute_VpnTunnel_Status_Failed          = @"FAILED";
NSString * const kGTLRCompute_VpnTunnel_Status_FirstHandshake  = @"FIRST_HANDSHAKE";
NSString * const kGTLRCompute_VpnTunnel_Status_NegotiationFailure = @"NEGOTIATION_FAILURE";
NSString * const kGTLRCompute_VpnTunnel_Status_NetworkError    = @"NETWORK_ERROR";
NSString * const kGTLRCompute_VpnTunnel_Status_NoIncomingPackets = @"NO_INCOMING_PACKETS";
NSString * const kGTLRCompute_VpnTunnel_Status_Provisioning    = @"PROVISIONING";
NSString * const kGTLRCompute_VpnTunnel_Status_Rejected        = @"REJECTED";
NSString * const kGTLRCompute_VpnTunnel_Status_Stopped         = @"STOPPED";
NSString * const kGTLRCompute_VpnTunnel_Status_WaitingForFullConfig = @"WAITING_FOR_FULL_CONFIG";

// GTLRCompute_VpnTunnelAggregatedList_Warning.code
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_VpnTunnelList_Warning.code
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_VpnTunnelsScopedList_Warning.code
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_XpnHostList_Warning.code
NSString * const kGTLRCompute_XpnHostList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_XpnHostList_Warning_Code_Unreachable = @"UNREACHABLE";

// GTLRCompute_XpnResourceId.type
NSString * const kGTLRCompute_XpnResourceId_Type_Project       = @"PROJECT";
NSString * const kGTLRCompute_XpnResourceId_Type_XpnResourceTypeUnspecified = @"XPN_RESOURCE_TYPE_UNSPECIFIED";

// GTLRCompute_Zone.status
NSString * const kGTLRCompute_Zone_Status_Down = @"DOWN";
NSString * const kGTLRCompute_Zone_Status_Up   = @"UP";

// GTLRCompute_ZoneList_Warning.code
NSString * const kGTLRCompute_ZoneList_Warning_Code_CleanupFailed = @"CLEANUP_FAILED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_DeprecatedResourceUsed = @"DEPRECATED_RESOURCE_USED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_DeprecatedTypeUsed = @"DEPRECATED_TYPE_USED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_DiskSizeLargerThanImageSize = @"DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
NSString * const kGTLRCompute_ZoneList_Warning_Code_ExperimentalTypeUsed = @"EXPERIMENTAL_TYPE_USED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_ExternalApiWarning = @"EXTERNAL_API_WARNING";
NSString * const kGTLRCompute_ZoneList_Warning_Code_FieldValueOverriden = @"FIELD_VALUE_OVERRIDEN";
NSString * const kGTLRCompute_ZoneList_Warning_Code_InjectedKernelsDeprecated = @"INJECTED_KERNELS_DEPRECATED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb = @"INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
NSString * const kGTLRCompute_ZoneList_Warning_Code_LargeDeploymentWarning = @"LARGE_DEPLOYMENT_WARNING";
NSString * const kGTLRCompute_ZoneList_Warning_Code_MissingTypeDependency = @"MISSING_TYPE_DEPENDENCY";
NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopAddressNotAssigned = @"NEXT_HOP_ADDRESS_NOT_ASSIGNED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopCannotIpForward = @"NEXT_HOP_CANNOT_IP_FORWARD";
NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopInstanceHasNoIpv6Interface = @"NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopInstanceNotFound = @"NEXT_HOP_INSTANCE_NOT_FOUND";
NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopInstanceNotOnNetwork = @"NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopNotRunning = @"NEXT_HOP_NOT_RUNNING";
NSString * const kGTLRCompute_ZoneList_Warning_Code_NoResultsOnPage = @"NO_RESULTS_ON_PAGE";
NSString * const kGTLRCompute_ZoneList_Warning_Code_NotCriticalError = @"NOT_CRITICAL_ERROR";
NSString * const kGTLRCompute_ZoneList_Warning_Code_PartialSuccess = @"PARTIAL_SUCCESS";
NSString * const kGTLRCompute_ZoneList_Warning_Code_RequiredTosAgreement = @"REQUIRED_TOS_AGREEMENT";
NSString * const kGTLRCompute_ZoneList_Warning_Code_ResourceInUseByOtherResourceWarning = @"RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
NSString * const kGTLRCompute_ZoneList_Warning_Code_ResourceNotDeleted = @"RESOURCE_NOT_DELETED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_SchemaValidationIgnored = @"SCHEMA_VALIDATION_IGNORED";
NSString * const kGTLRCompute_ZoneList_Warning_Code_SingleInstancePropertyTemplate = @"SINGLE_INSTANCE_PROPERTY_TEMPLATE";
NSString * const kGTLRCompute_ZoneList_Warning_Code_UndeclaredProperties = @"UNDECLARED_PROPERTIES";
NSString * const kGTLRCompute_ZoneList_Warning_Code_Unreachable = @"UNREACHABLE";

// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorConfig
//

@implementation GTLRCompute_AcceleratorConfig
@dynamic acceleratorCount, acceleratorType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorType
//

@implementation GTLRCompute_AcceleratorType
@dynamic creationTimestamp, deprecated, descriptionProperty, identifier, kind,
         maximumCardsPerInstance, name, selfLink, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypeAggregatedList
//

@implementation GTLRCompute_AcceleratorTypeAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypeAggregatedList_Items
//

@implementation GTLRCompute_AcceleratorTypeAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_AcceleratorTypesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypeAggregatedList_Warning
//

@implementation GTLRCompute_AcceleratorTypeAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AcceleratorTypeAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypeAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_AcceleratorTypeAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypeList
//

@implementation GTLRCompute_AcceleratorTypeList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_AcceleratorType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypeList_Warning
//

@implementation GTLRCompute_AcceleratorTypeList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AcceleratorTypeList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypeList_Warning_Data_Item
//

@implementation GTLRCompute_AcceleratorTypeList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypesScopedList
//

@implementation GTLRCompute_AcceleratorTypesScopedList
@dynamic acceleratorTypes, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"acceleratorTypes" : [GTLRCompute_AcceleratorType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypesScopedList_Warning
//

@implementation GTLRCompute_AcceleratorTypesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AcceleratorTypesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AcceleratorTypesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_AcceleratorTypesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AccessConfig
//

@implementation GTLRCompute_AccessConfig
@dynamic externalIpv6, externalIpv6PrefixLength, kind, name, natIP, networkTier,
         publicPtrDomainName, setPublicPtr, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Address
//

@implementation GTLRCompute_Address
@dynamic address, addressType, creationTimestamp, descriptionProperty,
         identifier, ipv6EndpointType, ipVersion, kind, name, network,
         networkTier, prefixLength, purpose, region, selfLink, status,
         subnetwork, users;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"users" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressAggregatedList
//

@implementation GTLRCompute_AddressAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressAggregatedList_Items
//

@implementation GTLRCompute_AddressAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_AddressesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressAggregatedList_Warning
//

@implementation GTLRCompute_AddressAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AddressAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_AddressAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressesScopedList
//

@implementation GTLRCompute_AddressesScopedList
@dynamic addresses, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"addresses" : [GTLRCompute_Address class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressesScopedList_Warning
//

@implementation GTLRCompute_AddressesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AddressesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_AddressesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressList
//

@implementation GTLRCompute_AddressList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Address class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressList_Warning
//

@implementation GTLRCompute_AddressList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AddressList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AddressList_Warning_Data_Item
//

@implementation GTLRCompute_AddressList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AdvancedMachineFeatures
//

@implementation GTLRCompute_AdvancedMachineFeatures
@dynamic enableNestedVirtualization, enableUefiNetworking, threadsPerCore,
         visibleCoreCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AliasIpRange
//

@implementation GTLRCompute_AliasIpRange
@dynamic ipCidrRange, subnetworkRangeName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk
//

@implementation GTLRCompute_AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk
@dynamic diskSizeGb, interface;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AllocationSpecificSKUAllocationReservedInstanceProperties
//

@implementation GTLRCompute_AllocationSpecificSKUAllocationReservedInstanceProperties
@dynamic guestAccelerators, localSsds, locationHint, machineType,
         minCpuPlatform;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"guestAccelerators" : [GTLRCompute_AcceleratorConfig class],
    @"localSsds" : [GTLRCompute_AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AllocationSpecificSKUReservation
//

@implementation GTLRCompute_AllocationSpecificSKUReservation
@dynamic assuredCount, count, instanceProperties, inUseCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AttachedDisk
//

@implementation GTLRCompute_AttachedDisk
@dynamic architecture, autoDelete, boot, deviceName, diskEncryptionKey,
         diskSizeGb, forceAttach, guestOsFeatures, index, initializeParams,
         interface, kind, licenses, mode, shieldedInstanceInitialState, source,
         type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"guestOsFeatures" : [GTLRCompute_GuestOsFeature class],
    @"licenses" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AttachedDiskInitializeParams
//

@implementation GTLRCompute_AttachedDiskInitializeParams
@dynamic architecture, descriptionProperty, diskName, diskSizeGb, diskType,
         labels, licenses, onUpdateAction, provisionedIops, resourceManagerTags,
         resourcePolicies, sourceImage, sourceImageEncryptionKey,
         sourceSnapshot, sourceSnapshotEncryptionKey;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"licenses" : [NSString class],
    @"resourcePolicies" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AttachedDiskInitializeParams_Labels
//

@implementation GTLRCompute_AttachedDiskInitializeParams_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AttachedDiskInitializeParams_ResourceManagerTags
//

@implementation GTLRCompute_AttachedDiskInitializeParams_ResourceManagerTags

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AuditConfig
//

@implementation GTLRCompute_AuditConfig
@dynamic auditLogConfigs, exemptedMembers, service;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditLogConfigs" : [GTLRCompute_AuditLogConfig class],
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AuditLogConfig
//

@implementation GTLRCompute_AuditLogConfig
@dynamic exemptedMembers, ignoreChildExemptions, logType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"exemptedMembers" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AuthorizationLoggingOptions
//

@implementation GTLRCompute_AuthorizationLoggingOptions
@dynamic permissionType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Autoscaler
//

@implementation GTLRCompute_Autoscaler
@dynamic autoscalingPolicy, creationTimestamp, descriptionProperty, identifier,
         kind, name, recommendedSize, region, scalingScheduleStatus, selfLink,
         status, statusDetails, target, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"statusDetails" : [GTLRCompute_AutoscalerStatusDetails class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Autoscaler_ScalingScheduleStatus
//

@implementation GTLRCompute_Autoscaler_ScalingScheduleStatus

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_ScalingScheduleStatus class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerAggregatedList
//

@implementation GTLRCompute_AutoscalerAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerAggregatedList_Items
//

@implementation GTLRCompute_AutoscalerAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_AutoscalersScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerAggregatedList_Warning
//

@implementation GTLRCompute_AutoscalerAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AutoscalerAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_AutoscalerAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerList
//

@implementation GTLRCompute_AutoscalerList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Autoscaler class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerList_Warning
//

@implementation GTLRCompute_AutoscalerList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AutoscalerList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerList_Warning_Data_Item
//

@implementation GTLRCompute_AutoscalerList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalersScopedList
//

@implementation GTLRCompute_AutoscalersScopedList
@dynamic autoscalers, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"autoscalers" : [GTLRCompute_Autoscaler class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalersScopedList_Warning
//

@implementation GTLRCompute_AutoscalersScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_AutoscalersScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalersScopedList_Warning_Data_Item
//

@implementation GTLRCompute_AutoscalersScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalerStatusDetails
//

@implementation GTLRCompute_AutoscalerStatusDetails
@dynamic message, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalingPolicy
//

@implementation GTLRCompute_AutoscalingPolicy
@dynamic coolDownPeriodSec, cpuUtilization, customMetricUtilizations,
         loadBalancingUtilization, maxNumReplicas, minNumReplicas, mode,
         scaleInControl, scalingSchedules;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"customMetricUtilizations" : [GTLRCompute_AutoscalingPolicyCustomMetricUtilization class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalingPolicy_ScalingSchedules
//

@implementation GTLRCompute_AutoscalingPolicy_ScalingSchedules

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_AutoscalingPolicyScalingSchedule class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalingPolicyCpuUtilization
//

@implementation GTLRCompute_AutoscalingPolicyCpuUtilization
@dynamic predictiveMethod, utilizationTarget;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalingPolicyCustomMetricUtilization
//

@implementation GTLRCompute_AutoscalingPolicyCustomMetricUtilization
@dynamic filter, metric, singleInstanceAssignment, utilizationTarget,
         utilizationTargetType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalingPolicyLoadBalancingUtilization
//

@implementation GTLRCompute_AutoscalingPolicyLoadBalancingUtilization
@dynamic utilizationTarget;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalingPolicyScaleInControl
//

@implementation GTLRCompute_AutoscalingPolicyScaleInControl
@dynamic maxScaledInReplicas, timeWindowSec;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_AutoscalingPolicyScalingSchedule
//

@implementation GTLRCompute_AutoscalingPolicyScalingSchedule
@dynamic descriptionProperty, disabled, durationSec, minRequiredReplicas,
         schedule, timeZone;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Backend
//

@implementation GTLRCompute_Backend
@dynamic balancingMode, capacityScaler, descriptionProperty, failover, group,
         maxConnections, maxConnectionsPerEndpoint, maxConnectionsPerInstance,
         maxRate, maxRatePerEndpoint, maxRatePerInstance, maxUtilization;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendBucket
//

@implementation GTLRCompute_BackendBucket
@dynamic bucketName, cdnPolicy, compressionMode, creationTimestamp,
         customResponseHeaders, descriptionProperty, edgeSecurityPolicy,
         enableCdn, identifier, kind, name, selfLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"customResponseHeaders" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendBucketCdnPolicy
//

@implementation GTLRCompute_BackendBucketCdnPolicy
@dynamic bypassCacheOnRequestHeaders, cacheKeyPolicy, cacheMode, clientTtl,
         defaultTtl, maxTtl, negativeCaching, negativeCachingPolicy,
         requestCoalescing, serveWhileStale, signedUrlCacheMaxAgeSec,
         signedUrlKeyNames;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bypassCacheOnRequestHeaders" : [GTLRCompute_BackendBucketCdnPolicyBypassCacheOnRequestHeader class],
    @"negativeCachingPolicy" : [GTLRCompute_BackendBucketCdnPolicyNegativeCachingPolicy class],
    @"signedUrlKeyNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendBucketCdnPolicyBypassCacheOnRequestHeader
//

@implementation GTLRCompute_BackendBucketCdnPolicyBypassCacheOnRequestHeader
@dynamic headerName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendBucketCdnPolicyCacheKeyPolicy
//

@implementation GTLRCompute_BackendBucketCdnPolicyCacheKeyPolicy
@dynamic includeHttpHeaders, queryStringWhitelist;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"includeHttpHeaders" : [NSString class],
    @"queryStringWhitelist" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendBucketCdnPolicyNegativeCachingPolicy
//

@implementation GTLRCompute_BackendBucketCdnPolicyNegativeCachingPolicy
@dynamic code, ttl;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendBucketList
//

@implementation GTLRCompute_BackendBucketList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_BackendBucket class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendBucketList_Warning
//

@implementation GTLRCompute_BackendBucketList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_BackendBucketList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendBucketList_Warning_Data_Item
//

@implementation GTLRCompute_BackendBucketList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendService
//

@implementation GTLRCompute_BackendService
@dynamic affinityCookieTtlSec, backends, cdnPolicy, circuitBreakers,
         compressionMode, connectionDraining, connectionTrackingPolicy,
         consistentHash, creationTimestamp, customRequestHeaders,
         customResponseHeaders, descriptionProperty, edgeSecurityPolicy,
         enableCDN, failoverPolicy, fingerprint, healthChecks, iap, identifier,
         kind, loadBalancingScheme, localityLbPolicies, localityLbPolicy,
         logConfig, maxStreamDuration, name, network, outlierDetection, port,
         portName, protocol, region, securityPolicy, securitySettings, selfLink,
         serviceBindings, sessionAffinity, subsetting, timeoutSec;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"backends" : [GTLRCompute_Backend class],
    @"customRequestHeaders" : [NSString class],
    @"customResponseHeaders" : [NSString class],
    @"healthChecks" : [NSString class],
    @"localityLbPolicies" : [GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfig class],
    @"serviceBindings" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceAggregatedList
//

@implementation GTLRCompute_BackendServiceAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceAggregatedList_Items
//

@implementation GTLRCompute_BackendServiceAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_BackendServicesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceAggregatedList_Warning
//

@implementation GTLRCompute_BackendServiceAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_BackendServiceAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_BackendServiceAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceCdnPolicy
//

@implementation GTLRCompute_BackendServiceCdnPolicy
@dynamic bypassCacheOnRequestHeaders, cacheKeyPolicy, cacheMode, clientTtl,
         defaultTtl, maxTtl, negativeCaching, negativeCachingPolicy,
         requestCoalescing, serveWhileStale, signedUrlCacheMaxAgeSec,
         signedUrlKeyNames;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bypassCacheOnRequestHeaders" : [GTLRCompute_BackendServiceCdnPolicyBypassCacheOnRequestHeader class],
    @"negativeCachingPolicy" : [GTLRCompute_BackendServiceCdnPolicyNegativeCachingPolicy class],
    @"signedUrlKeyNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceCdnPolicyBypassCacheOnRequestHeader
//

@implementation GTLRCompute_BackendServiceCdnPolicyBypassCacheOnRequestHeader
@dynamic headerName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceCdnPolicyNegativeCachingPolicy
//

@implementation GTLRCompute_BackendServiceCdnPolicyNegativeCachingPolicy
@dynamic code, ttl;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceConnectionTrackingPolicy
//

@implementation GTLRCompute_BackendServiceConnectionTrackingPolicy
@dynamic connectionPersistenceOnUnhealthyBackends, enableStrongAffinity,
         idleTimeoutSec, trackingMode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceFailoverPolicy
//

@implementation GTLRCompute_BackendServiceFailoverPolicy
@dynamic disableConnectionDrainOnFailover, dropTrafficIfUnhealthy,
         failoverRatio;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceGroupHealth
//

@implementation GTLRCompute_BackendServiceGroupHealth
@dynamic annotations, healthStatus, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"healthStatus" : [GTLRCompute_HealthStatus class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceGroupHealth_Annotations
//

@implementation GTLRCompute_BackendServiceGroupHealth_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceIAP
//

@implementation GTLRCompute_BackendServiceIAP
@dynamic enabled, oauth2ClientId, oauth2ClientSecret, oauth2ClientSecretSha256;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceList
//

@implementation GTLRCompute_BackendServiceList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_BackendService class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceList_Warning
//

@implementation GTLRCompute_BackendServiceList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_BackendServiceList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceList_Warning_Data_Item
//

@implementation GTLRCompute_BackendServiceList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfig
//

@implementation GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfig
@dynamic customPolicy, policy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigCustomPolicy
//

@implementation GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigCustomPolicy
@dynamic data, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy
//

@implementation GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy
@dynamic name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceLogConfig
//

@implementation GTLRCompute_BackendServiceLogConfig
@dynamic enable, sampleRate;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServiceReference
//

@implementation GTLRCompute_BackendServiceReference
@dynamic backendService;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServicesScopedList
//

@implementation GTLRCompute_BackendServicesScopedList
@dynamic backendServices, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"backendServices" : [GTLRCompute_BackendService class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServicesScopedList_Warning
//

@implementation GTLRCompute_BackendServicesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_BackendServicesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BackendServicesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_BackendServicesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BfdPacket
//

@implementation GTLRCompute_BfdPacket
@dynamic authenticationPresent, controlPlaneIndependent, demand, diagnostic,
         final, length, minEchoRxIntervalMs, minRxIntervalMs, minTxIntervalMs,
         multiplier, multipoint, myDiscriminator, poll, state, version,
         yourDiscriminator;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BfdStatus
//

@implementation GTLRCompute_BfdStatus
@dynamic bfdSessionInitializationMode, configUpdateTimestampMicros,
         controlPacketCounts, controlPacketIntervals, localDiagnostic,
         localState, negotiatedLocalControlTxIntervalMs, rxPacket, txPacket,
         uptimeMs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"controlPacketIntervals" : [GTLRCompute_PacketIntervals class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BfdStatusPacketCounts
//

@implementation GTLRCompute_BfdStatusPacketCounts
@dynamic numRx, numRxRejected, numRxSuccessful, numTx;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Binding
//

@implementation GTLRCompute_Binding
@dynamic bindingId, condition, members, role;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"members" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BulkInsertInstanceResource
//

@implementation GTLRCompute_BulkInsertInstanceResource
@dynamic count, instanceProperties, locationPolicy, minCount, namePattern,
         perInstanceProperties, sourceInstanceTemplate;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BulkInsertInstanceResource_PerInstanceProperties
//

@implementation GTLRCompute_BulkInsertInstanceResource_PerInstanceProperties

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_BulkInsertInstanceResourcePerInstanceProperties class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_BulkInsertInstanceResourcePerInstanceProperties
//

@implementation GTLRCompute_BulkInsertInstanceResourcePerInstanceProperties
@dynamic name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CacheInvalidationRule
//

@implementation GTLRCompute_CacheInvalidationRule
@dynamic host, path;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CacheKeyPolicy
//

@implementation GTLRCompute_CacheKeyPolicy
@dynamic includeHost, includeHttpHeaders, includeNamedCookies, includeProtocol,
         includeQueryString, queryStringBlacklist, queryStringWhitelist;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"includeHttpHeaders" : [NSString class],
    @"includeNamedCookies" : [NSString class],
    @"queryStringBlacklist" : [NSString class],
    @"queryStringWhitelist" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CircuitBreakers
//

@implementation GTLRCompute_CircuitBreakers
@dynamic maxConnections, maxPendingRequests, maxRequests,
         maxRequestsPerConnection, maxRetries;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Commitment
//

@implementation GTLRCompute_Commitment
@dynamic autoRenew, category, creationTimestamp, descriptionProperty,
         endTimestamp, identifier, kind, licenseResource,
         mergeSourceCommitments, name, plan, region, reservations, resources,
         selfLink, splitSourceCommitment, startTimestamp, status, statusMessage,
         type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"mergeSourceCommitments" : [NSString class],
    @"reservations" : [GTLRCompute_Reservation class],
    @"resources" : [GTLRCompute_ResourceCommitment class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentAggregatedList
//

@implementation GTLRCompute_CommitmentAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentAggregatedList_Items
//

@implementation GTLRCompute_CommitmentAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_CommitmentsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentAggregatedList_Warning
//

@implementation GTLRCompute_CommitmentAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_CommitmentAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_CommitmentAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentList
//

@implementation GTLRCompute_CommitmentList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Commitment class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentList_Warning
//

@implementation GTLRCompute_CommitmentList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_CommitmentList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentList_Warning_Data_Item
//

@implementation GTLRCompute_CommitmentList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentsScopedList
//

@implementation GTLRCompute_CommitmentsScopedList
@dynamic commitments, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"commitments" : [GTLRCompute_Commitment class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentsScopedList_Warning
//

@implementation GTLRCompute_CommitmentsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_CommitmentsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CommitmentsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_CommitmentsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Condition
//

@implementation GTLRCompute_Condition
@dynamic iam, op, svc, sys, values;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"values" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ConfidentialInstanceConfig
//

@implementation GTLRCompute_ConfidentialInstanceConfig
@dynamic enableConfidentialCompute;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ConnectionDraining
//

@implementation GTLRCompute_ConnectionDraining
@dynamic drainingTimeoutSec;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ConsistentHashLoadBalancerSettings
//

@implementation GTLRCompute_ConsistentHashLoadBalancerSettings
@dynamic httpCookie, httpHeaderName, minimumRingSize;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ConsistentHashLoadBalancerSettingsHttpCookie
//

@implementation GTLRCompute_ConsistentHashLoadBalancerSettingsHttpCookie
@dynamic name, path, ttl;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CorsPolicy
//

@implementation GTLRCompute_CorsPolicy
@dynamic allowCredentials, allowHeaders, allowMethods, allowOriginRegexes,
         allowOrigins, disabled, exposeHeaders, maxAge;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"allowHeaders" : [NSString class],
    @"allowMethods" : [NSString class],
    @"allowOriginRegexes" : [NSString class],
    @"allowOrigins" : [NSString class],
    @"exposeHeaders" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CustomerEncryptionKey
//

@implementation GTLRCompute_CustomerEncryptionKey
@dynamic kmsKeyName, kmsKeyServiceAccount, rawKey, rsaEncryptedKey, sha256;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_CustomerEncryptionKeyProtectedDisk
//

@implementation GTLRCompute_CustomerEncryptionKeyProtectedDisk
@dynamic diskEncryptionKey, source;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DeprecationStatus
//

@implementation GTLRCompute_DeprecationStatus
@dynamic deleted, deprecated, obsolete, replacement, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Disk
//

@implementation GTLRCompute_Disk
@dynamic architecture, creationTimestamp, descriptionProperty,
         diskEncryptionKey, guestOsFeatures, identifier, kind, labelFingerprint,
         labels, lastAttachTimestamp, lastDetachTimestamp, licenseCodes,
         licenses, locationHint, name, options, params, physicalBlockSizeBytes,
         provisionedIops, region, replicaZones, resourcePolicies, satisfiesPzs,
         selfLink, sizeGb, sourceDisk, sourceDiskId, sourceImage,
         sourceImageEncryptionKey, sourceImageId, sourceSnapshot,
         sourceSnapshotEncryptionKey, sourceSnapshotId, sourceStorageObject,
         status, type, users, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"guestOsFeatures" : [GTLRCompute_GuestOsFeature class],
    @"licenseCodes" : [NSNumber class],
    @"licenses" : [NSString class],
    @"replicaZones" : [NSString class],
    @"resourcePolicies" : [NSString class],
    @"users" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Disk_Labels
//

@implementation GTLRCompute_Disk_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskAggregatedList
//

@implementation GTLRCompute_DiskAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskAggregatedList_Items
//

@implementation GTLRCompute_DiskAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_DisksScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskAggregatedList_Warning
//

@implementation GTLRCompute_DiskAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_DiskAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_DiskAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskInstantiationConfig
//

@implementation GTLRCompute_DiskInstantiationConfig
@dynamic autoDelete, customImage, deviceName, instantiateFrom;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskList
//

@implementation GTLRCompute_DiskList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Disk class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskList_Warning
//

@implementation GTLRCompute_DiskList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_DiskList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskList_Warning_Data_Item
//

@implementation GTLRCompute_DiskList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskMoveRequest
//

@implementation GTLRCompute_DiskMoveRequest
@dynamic destinationZone, targetDisk;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskParams
//

@implementation GTLRCompute_DiskParams
@dynamic resourceManagerTags;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskParams_ResourceManagerTags
//

@implementation GTLRCompute_DiskParams_ResourceManagerTags

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DisksAddResourcePoliciesRequest
//

@implementation GTLRCompute_DisksAddResourcePoliciesRequest
@dynamic resourcePolicies;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourcePolicies" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DisksRemoveResourcePoliciesRequest
//

@implementation GTLRCompute_DisksRemoveResourcePoliciesRequest
@dynamic resourcePolicies;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourcePolicies" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DisksResizeRequest
//

@implementation GTLRCompute_DisksResizeRequest
@dynamic sizeGb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DisksScopedList
//

@implementation GTLRCompute_DisksScopedList
@dynamic disks, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"disks" : [GTLRCompute_Disk class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DisksScopedList_Warning
//

@implementation GTLRCompute_DisksScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_DisksScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DisksScopedList_Warning_Data_Item
//

@implementation GTLRCompute_DisksScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskType
//

@implementation GTLRCompute_DiskType
@dynamic creationTimestamp, defaultDiskSizeGb, deprecated, descriptionProperty,
         identifier, kind, name, region, selfLink, validDiskSize, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypeAggregatedList
//

@implementation GTLRCompute_DiskTypeAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypeAggregatedList_Items
//

@implementation GTLRCompute_DiskTypeAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_DiskTypesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypeAggregatedList_Warning
//

@implementation GTLRCompute_DiskTypeAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_DiskTypeAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypeAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_DiskTypeAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypeList
//

@implementation GTLRCompute_DiskTypeList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_DiskType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypeList_Warning
//

@implementation GTLRCompute_DiskTypeList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_DiskTypeList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypeList_Warning_Data_Item
//

@implementation GTLRCompute_DiskTypeList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypesScopedList
//

@implementation GTLRCompute_DiskTypesScopedList
@dynamic diskTypes, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"diskTypes" : [GTLRCompute_DiskType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypesScopedList_Warning
//

@implementation GTLRCompute_DiskTypesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_DiskTypesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DiskTypesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_DiskTypesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DisplayDevice
//

@implementation GTLRCompute_DisplayDevice
@dynamic enableDisplay;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DistributionPolicy
//

@implementation GTLRCompute_DistributionPolicy
@dynamic targetShape, zones;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"zones" : [GTLRCompute_DistributionPolicyZoneConfiguration class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_DistributionPolicyZoneConfiguration
//

@implementation GTLRCompute_DistributionPolicyZoneConfiguration
@dynamic zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"zoneProperty" : @"zone" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Duration
//

@implementation GTLRCompute_Duration
@dynamic nanos, seconds;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ErrorInfo
//

@implementation GTLRCompute_ErrorInfo
@dynamic domain, metadatas, reason;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ErrorInfo_Metadatas
//

@implementation GTLRCompute_ErrorInfo_Metadatas

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ExchangedPeeringRoute
//

@implementation GTLRCompute_ExchangedPeeringRoute
@dynamic destRange, imported, nextHopRegion, priority, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ExchangedPeeringRoutesList
//

@implementation GTLRCompute_ExchangedPeeringRoutesList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_ExchangedPeeringRoute class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ExchangedPeeringRoutesList_Warning
//

@implementation GTLRCompute_ExchangedPeeringRoutesList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ExchangedPeeringRoutesList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ExchangedPeeringRoutesList_Warning_Data_Item
//

@implementation GTLRCompute_ExchangedPeeringRoutesList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Expr
//

@implementation GTLRCompute_Expr
@dynamic descriptionProperty, expression, location, title;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ExternalVpnGateway
//

@implementation GTLRCompute_ExternalVpnGateway
@dynamic creationTimestamp, descriptionProperty, identifier, interfaces, kind,
         labelFingerprint, labels, name, redundancyType, selfLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"interfaces" : [GTLRCompute_ExternalVpnGatewayInterface class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ExternalVpnGateway_Labels
//

@implementation GTLRCompute_ExternalVpnGateway_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ExternalVpnGatewayInterface
//

@implementation GTLRCompute_ExternalVpnGatewayInterface
@dynamic identifier, ipAddress;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ExternalVpnGatewayList
//

@implementation GTLRCompute_ExternalVpnGatewayList
@dynamic ETag, identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"ETag" : @"etag",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_ExternalVpnGateway class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ExternalVpnGatewayList_Warning
//

@implementation GTLRCompute_ExternalVpnGatewayList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ExternalVpnGatewayList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ExternalVpnGatewayList_Warning_Data_Item
//

@implementation GTLRCompute_ExternalVpnGatewayList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FileContentBuffer
//

@implementation GTLRCompute_FileContentBuffer
@dynamic content, fileType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Firewall
//

@implementation GTLRCompute_Firewall
@dynamic allowed, creationTimestamp, denied, descriptionProperty,
         destinationRanges, direction, disabled, identifier, kind, logConfig,
         name, network, priority, selfLink, sourceRanges, sourceServiceAccounts,
         sourceTags, targetServiceAccounts, targetTags;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"allowed" : [GTLRCompute_Firewall_Allowed_Item class],
    @"denied" : [GTLRCompute_Firewall_Denied_Item class],
    @"destinationRanges" : [NSString class],
    @"sourceRanges" : [NSString class],
    @"sourceServiceAccounts" : [NSString class],
    @"sourceTags" : [NSString class],
    @"targetServiceAccounts" : [NSString class],
    @"targetTags" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Firewall_Allowed_Item
//

@implementation GTLRCompute_Firewall_Allowed_Item
@dynamic IPProtocol, ports;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"ports" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Firewall_Denied_Item
//

@implementation GTLRCompute_Firewall_Denied_Item
@dynamic IPProtocol, ports;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"ports" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallList
//

@implementation GTLRCompute_FirewallList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Firewall class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallList_Warning
//

@implementation GTLRCompute_FirewallList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_FirewallList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallList_Warning_Data_Item
//

@implementation GTLRCompute_FirewallList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallLogConfig
//

@implementation GTLRCompute_FirewallLogConfig
@dynamic enable, metadata;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallPoliciesListAssociationsResponse
//

@implementation GTLRCompute_FirewallPoliciesListAssociationsResponse
@dynamic associations, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"associations" : [GTLRCompute_FirewallPolicyAssociation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallPolicy
//

@implementation GTLRCompute_FirewallPolicy
@dynamic associations, creationTimestamp, descriptionProperty, displayName,
         fingerprint, identifier, kind, name, parent, region, rules,
         ruleTupleCount, selfLink, selfLinkWithId, shortName;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"associations" : [GTLRCompute_FirewallPolicyAssociation class],
    @"rules" : [GTLRCompute_FirewallPolicyRule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallPolicyAssociation
//

@implementation GTLRCompute_FirewallPolicyAssociation
@dynamic attachmentTarget, displayName, firewallPolicyId, name, shortName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallPolicyList
//

@implementation GTLRCompute_FirewallPolicyList
@dynamic identifier, items, kind, nextPageToken, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_FirewallPolicy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallPolicyList_Warning
//

@implementation GTLRCompute_FirewallPolicyList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_FirewallPolicyList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallPolicyList_Warning_Data_Item
//

@implementation GTLRCompute_FirewallPolicyList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallPolicyRule
//

@implementation GTLRCompute_FirewallPolicyRule
@dynamic action, descriptionProperty, direction, disabled, enableLogging, kind,
         match, priority, ruleName, ruleTupleCount, targetResources,
         targetSecureTags, targetServiceAccounts;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetResources" : [NSString class],
    @"targetSecureTags" : [GTLRCompute_FirewallPolicyRuleSecureTag class],
    @"targetServiceAccounts" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallPolicyRuleMatcher
//

@implementation GTLRCompute_FirewallPolicyRuleMatcher
@dynamic destIpRanges, layer4Configs, srcIpRanges, srcSecureTags;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"destIpRanges" : [NSString class],
    @"layer4Configs" : [GTLRCompute_FirewallPolicyRuleMatcherLayer4Config class],
    @"srcIpRanges" : [NSString class],
    @"srcSecureTags" : [GTLRCompute_FirewallPolicyRuleSecureTag class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallPolicyRuleMatcherLayer4Config
//

@implementation GTLRCompute_FirewallPolicyRuleMatcherLayer4Config
@dynamic ipProtocol, ports;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"ports" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FirewallPolicyRuleSecureTag
//

@implementation GTLRCompute_FirewallPolicyRuleSecureTag
@dynamic name, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_FixedOrPercent
//

@implementation GTLRCompute_FixedOrPercent
@dynamic calculated, fixed, percent;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRule
//

@implementation GTLRCompute_ForwardingRule
@dynamic allowGlobalAccess, allPorts, backendService, creationTimestamp,
         descriptionProperty, fingerprint, identifier, IPAddress, IPProtocol,
         ipVersion, isMirroringCollector, kind, labelFingerprint, labels,
         loadBalancingScheme, metadataFilters, name, network, networkTier,
         noAutomateDnsZone, portRange, ports, pscConnectionId,
         pscConnectionStatus, region, selfLink, serviceDirectoryRegistrations,
         serviceLabel, serviceName, subnetwork, target;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"metadataFilters" : [GTLRCompute_MetadataFilter class],
    @"ports" : [NSString class],
    @"serviceDirectoryRegistrations" : [GTLRCompute_ForwardingRuleServiceDirectoryRegistration class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRule_Labels
//

@implementation GTLRCompute_ForwardingRule_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleAggregatedList
//

@implementation GTLRCompute_ForwardingRuleAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleAggregatedList_Items
//

@implementation GTLRCompute_ForwardingRuleAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_ForwardingRulesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleAggregatedList_Warning
//

@implementation GTLRCompute_ForwardingRuleAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ForwardingRuleAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_ForwardingRuleAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleList
//

@implementation GTLRCompute_ForwardingRuleList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_ForwardingRule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleList_Warning
//

@implementation GTLRCompute_ForwardingRuleList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ForwardingRuleList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleList_Warning_Data_Item
//

@implementation GTLRCompute_ForwardingRuleList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleReference
//

@implementation GTLRCompute_ForwardingRuleReference
@dynamic forwardingRule;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRuleServiceDirectoryRegistration
//

@implementation GTLRCompute_ForwardingRuleServiceDirectoryRegistration
@dynamic namespaceProperty, service, serviceDirectoryRegion;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"namespaceProperty" : @"namespace" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRulesScopedList
//

@implementation GTLRCompute_ForwardingRulesScopedList
@dynamic forwardingRules, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"forwardingRules" : [GTLRCompute_ForwardingRule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRulesScopedList_Warning
//

@implementation GTLRCompute_ForwardingRulesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ForwardingRulesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ForwardingRulesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_ForwardingRulesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_GlobalNetworkEndpointGroupsAttachEndpointsRequest
//

@implementation GTLRCompute_GlobalNetworkEndpointGroupsAttachEndpointsRequest
@dynamic networkEndpoints;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"networkEndpoints" : [GTLRCompute_NetworkEndpoint class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_GlobalNetworkEndpointGroupsDetachEndpointsRequest
//

@implementation GTLRCompute_GlobalNetworkEndpointGroupsDetachEndpointsRequest
@dynamic networkEndpoints;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"networkEndpoints" : [GTLRCompute_NetworkEndpoint class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_GlobalOrganizationSetPolicyRequest
//

@implementation GTLRCompute_GlobalOrganizationSetPolicyRequest
@dynamic bindings, ETag, policy;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bindings" : [GTLRCompute_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_GlobalSetLabelsRequest
//

@implementation GTLRCompute_GlobalSetLabelsRequest
@dynamic labelFingerprint, labels;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_GlobalSetLabelsRequest_Labels
//

@implementation GTLRCompute_GlobalSetLabelsRequest_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_GlobalSetPolicyRequest
//

@implementation GTLRCompute_GlobalSetPolicyRequest
@dynamic bindings, ETag, policy;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bindings" : [GTLRCompute_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_GRPCHealthCheck
//

@implementation GTLRCompute_GRPCHealthCheck
@dynamic grpcServiceName, port, portName, portSpecification;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_GuestAttributes
//

@implementation GTLRCompute_GuestAttributes
@dynamic kind, queryPath, queryValue, selfLink, variableKey, variableValue;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_GuestAttributesEntry
//

@implementation GTLRCompute_GuestAttributesEntry
@dynamic key, namespaceProperty, value;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"namespaceProperty" : @"namespace" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_GuestAttributesValue
//

@implementation GTLRCompute_GuestAttributesValue
@dynamic items;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_GuestAttributesEntry class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_GuestOsFeature
//

@implementation GTLRCompute_GuestOsFeature
@dynamic type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheck
//

@implementation GTLRCompute_HealthCheck
@dynamic checkIntervalSec, creationTimestamp, descriptionProperty,
         grpcHealthCheck, healthyThreshold, http2HealthCheck, httpHealthCheck,
         httpsHealthCheck, identifier, kind, logConfig, name, region, selfLink,
         sslHealthCheck, tcpHealthCheck, timeoutSec, type, unhealthyThreshold;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheckList
//

@implementation GTLRCompute_HealthCheckList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_HealthCheck class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheckList_Warning
//

@implementation GTLRCompute_HealthCheckList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_HealthCheckList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheckList_Warning_Data_Item
//

@implementation GTLRCompute_HealthCheckList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheckLogConfig
//

@implementation GTLRCompute_HealthCheckLogConfig
@dynamic enable;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheckReference
//

@implementation GTLRCompute_HealthCheckReference
@dynamic healthCheck;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthChecksAggregatedList
//

@implementation GTLRCompute_HealthChecksAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthChecksAggregatedList_Items
//

@implementation GTLRCompute_HealthChecksAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_HealthChecksScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthChecksAggregatedList_Warning
//

@implementation GTLRCompute_HealthChecksAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_HealthChecksAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthChecksAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_HealthChecksAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheckService
//

@implementation GTLRCompute_HealthCheckService
@dynamic creationTimestamp, descriptionProperty, fingerprint, healthChecks,
         healthStatusAggregationPolicy, identifier, kind, name,
         networkEndpointGroups, notificationEndpoints, region, selfLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"healthChecks" : [NSString class],
    @"networkEndpointGroups" : [NSString class],
    @"notificationEndpoints" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheckServiceReference
//

@implementation GTLRCompute_HealthCheckServiceReference
@dynamic healthCheckService;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheckServicesList
//

@implementation GTLRCompute_HealthCheckServicesList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_HealthCheckService class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheckServicesList_Warning
//

@implementation GTLRCompute_HealthCheckServicesList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_HealthCheckServicesList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthCheckServicesList_Warning_Data_Item
//

@implementation GTLRCompute_HealthCheckServicesList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthChecksScopedList
//

@implementation GTLRCompute_HealthChecksScopedList
@dynamic healthChecks, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"healthChecks" : [GTLRCompute_HealthCheck class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthChecksScopedList_Warning
//

@implementation GTLRCompute_HealthChecksScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_HealthChecksScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthChecksScopedList_Warning_Data_Item
//

@implementation GTLRCompute_HealthChecksScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthStatus
//

@implementation GTLRCompute_HealthStatus
@dynamic annotations, forwardingRule, forwardingRuleIp, healthState, instance,
         ipAddress, port, weight, weightError;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthStatus_Annotations
//

@implementation GTLRCompute_HealthStatus_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HealthStatusForNetworkEndpoint
//

@implementation GTLRCompute_HealthStatusForNetworkEndpoint
@dynamic backendService, forwardingRule, healthCheck, healthCheckService,
         healthState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Help
//

@implementation GTLRCompute_Help
@dynamic links;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"links" : [GTLRCompute_HelpLink class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HelpLink
//

@implementation GTLRCompute_HelpLink
@dynamic descriptionProperty, url;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HostRule
//

@implementation GTLRCompute_HostRule
@dynamic descriptionProperty, hosts, pathMatcher;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"hosts" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HTTP2HealthCheck
//

@implementation GTLRCompute_HTTP2HealthCheck
@dynamic host, port, portName, portSpecification, proxyHeader, requestPath,
         response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpFaultAbort
//

@implementation GTLRCompute_HttpFaultAbort
@dynamic httpStatus, percentage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpFaultDelay
//

@implementation GTLRCompute_HttpFaultDelay
@dynamic fixedDelay, percentage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpFaultInjection
//

@implementation GTLRCompute_HttpFaultInjection
@dynamic abort, delay;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpHeaderAction
//

@implementation GTLRCompute_HttpHeaderAction
@dynamic requestHeadersToAdd, requestHeadersToRemove, responseHeadersToAdd,
         responseHeadersToRemove;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"requestHeadersToAdd" : [GTLRCompute_HttpHeaderOption class],
    @"requestHeadersToRemove" : [NSString class],
    @"responseHeadersToAdd" : [GTLRCompute_HttpHeaderOption class],
    @"responseHeadersToRemove" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpHeaderMatch
//

@implementation GTLRCompute_HttpHeaderMatch
@dynamic exactMatch, headerName, invertMatch, prefixMatch, presentMatch,
         rangeMatch, regexMatch, suffixMatch;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpHeaderOption
//

@implementation GTLRCompute_HttpHeaderOption
@dynamic headerName, headerValue, replace;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HTTPHealthCheck
//

@implementation GTLRCompute_HTTPHealthCheck
@dynamic host, port, portName, portSpecification, proxyHeader, requestPath,
         response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpHealthCheck
//

@implementation GTLRCompute_HttpHealthCheck
@dynamic checkIntervalSec, creationTimestamp, descriptionProperty,
         healthyThreshold, host, identifier, kind, name, port, requestPath,
         selfLink, timeoutSec, unhealthyThreshold;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpHealthCheckList
//

@implementation GTLRCompute_HttpHealthCheckList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_HttpHealthCheck class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpHealthCheckList_Warning
//

@implementation GTLRCompute_HttpHealthCheckList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_HttpHealthCheckList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpHealthCheckList_Warning_Data_Item
//

@implementation GTLRCompute_HttpHealthCheckList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpQueryParameterMatch
//

@implementation GTLRCompute_HttpQueryParameterMatch
@dynamic exactMatch, name, presentMatch, regexMatch;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpRedirectAction
//

@implementation GTLRCompute_HttpRedirectAction
@dynamic hostRedirect, httpsRedirect, pathRedirect, prefixRedirect,
         redirectResponseCode, stripQuery;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpRetryPolicy
//

@implementation GTLRCompute_HttpRetryPolicy
@dynamic numRetries, perTryTimeout, retryConditions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"retryConditions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpRouteAction
//

@implementation GTLRCompute_HttpRouteAction
@dynamic corsPolicy, faultInjectionPolicy, maxStreamDuration,
         requestMirrorPolicy, retryPolicy, timeout, urlRewrite,
         weightedBackendServices;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"weightedBackendServices" : [GTLRCompute_WeightedBackendService class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpRouteRule
//

@implementation GTLRCompute_HttpRouteRule
@dynamic descriptionProperty, headerAction, matchRules, priority, routeAction,
         service, urlRedirect;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"matchRules" : [GTLRCompute_HttpRouteRuleMatch class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpRouteRuleMatch
//

@implementation GTLRCompute_HttpRouteRuleMatch
@dynamic fullPathMatch, headerMatches, ignoreCase, metadataFilters, prefixMatch,
         queryParameterMatches, regexMatch;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"headerMatches" : [GTLRCompute_HttpHeaderMatch class],
    @"metadataFilters" : [GTLRCompute_MetadataFilter class],
    @"queryParameterMatches" : [GTLRCompute_HttpQueryParameterMatch class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HTTPSHealthCheck
//

@implementation GTLRCompute_HTTPSHealthCheck
@dynamic host, port, portName, portSpecification, proxyHeader, requestPath,
         response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpsHealthCheck
//

@implementation GTLRCompute_HttpsHealthCheck
@dynamic checkIntervalSec, creationTimestamp, descriptionProperty,
         healthyThreshold, host, identifier, kind, name, port, requestPath,
         selfLink, timeoutSec, unhealthyThreshold;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpsHealthCheckList
//

@implementation GTLRCompute_HttpsHealthCheckList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_HttpsHealthCheck class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpsHealthCheckList_Warning
//

@implementation GTLRCompute_HttpsHealthCheckList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_HttpsHealthCheckList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_HttpsHealthCheckList_Warning_Data_Item
//

@implementation GTLRCompute_HttpsHealthCheckList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Image
//

@implementation GTLRCompute_Image
@dynamic architecture, archiveSizeBytes, creationTimestamp, deprecated,
         descriptionProperty, diskSizeGb, family, guestOsFeatures, identifier,
         imageEncryptionKey, kind, labelFingerprint, labels, licenseCodes,
         licenses, name, rawDisk, satisfiesPzs, selfLink,
         shieldedInstanceInitialState, sourceDisk, sourceDiskEncryptionKey,
         sourceDiskId, sourceImage, sourceImageEncryptionKey, sourceImageId,
         sourceSnapshot, sourceSnapshotEncryptionKey, sourceSnapshotId,
         sourceType, status, storageLocations;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"guestOsFeatures" : [GTLRCompute_GuestOsFeature class],
    @"licenseCodes" : [NSNumber class],
    @"licenses" : [NSString class],
    @"storageLocations" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Image_Labels
//

@implementation GTLRCompute_Image_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Image_RawDisk
//

@implementation GTLRCompute_Image_RawDisk
@dynamic containerType, sha1Checksum, source;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ImageFamilyView
//

@implementation GTLRCompute_ImageFamilyView
@dynamic image;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ImageList
//

@implementation GTLRCompute_ImageList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Image class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ImageList_Warning
//

@implementation GTLRCompute_ImageList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ImageList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ImageList_Warning_Data_Item
//

@implementation GTLRCompute_ImageList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InitialStateConfig
//

@implementation GTLRCompute_InitialStateConfig
@dynamic dbs, dbxs, keks, pk;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"dbs" : [GTLRCompute_FileContentBuffer class],
    @"dbxs" : [GTLRCompute_FileContentBuffer class],
    @"keks" : [GTLRCompute_FileContentBuffer class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Instance
//

@implementation GTLRCompute_Instance
@dynamic advancedMachineFeatures, canIpForward, confidentialInstanceConfig,
         cpuPlatform, creationTimestamp, deletionProtection,
         descriptionProperty, disks, displayDevice, fingerprint,
         guestAccelerators, hostname, identifier, keyRevocationActionType, kind,
         labelFingerprint, labels, lastStartTimestamp, lastStopTimestamp,
         lastSuspendedTimestamp, machineType, metadata, minCpuPlatform, name,
         networkInterfaces, networkPerformanceConfig, params,
         privateIpv6GoogleAccess, reservationAffinity, resourcePolicies,
         resourceStatus, satisfiesPzs, scheduling, selfLink, serviceAccounts,
         shieldedInstanceConfig, shieldedInstanceIntegrityPolicy,
         sourceMachineImage, sourceMachineImageEncryptionKey, startRestricted,
         status, statusMessage, tags, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"disks" : [GTLRCompute_AttachedDisk class],
    @"guestAccelerators" : [GTLRCompute_AcceleratorConfig class],
    @"networkInterfaces" : [GTLRCompute_NetworkInterface class],
    @"resourcePolicies" : [NSString class],
    @"serviceAccounts" : [GTLRCompute_ServiceAccount class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Instance_Labels
//

@implementation GTLRCompute_Instance_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceAggregatedList
//

@implementation GTLRCompute_InstanceAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceAggregatedList_Items
//

@implementation GTLRCompute_InstanceAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_InstancesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceAggregatedList_Warning
//

@implementation GTLRCompute_InstanceAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceConsumptionData
//

@implementation GTLRCompute_InstanceConsumptionData
@dynamic consumptionInfo, instance;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceConsumptionInfo
//

@implementation GTLRCompute_InstanceConsumptionInfo
@dynamic guestCpus, localSsdGb, memoryMb, minNodeCpus;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroup
//

@implementation GTLRCompute_InstanceGroup
@dynamic creationTimestamp, descriptionProperty, fingerprint, identifier, kind,
         name, namedPorts, network, region, selfLink, size, subnetwork,
         zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"namedPorts" : [GTLRCompute_NamedPort class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupAggregatedList
//

@implementation GTLRCompute_InstanceGroupAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupAggregatedList_Items
//

@implementation GTLRCompute_InstanceGroupAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_InstanceGroupsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupAggregatedList_Warning
//

@implementation GTLRCompute_InstanceGroupAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceGroupAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceGroupAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupList
//

@implementation GTLRCompute_InstanceGroupList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceGroup class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupList_Warning
//

@implementation GTLRCompute_InstanceGroupList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceGroupList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceGroupList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManager
//

@implementation GTLRCompute_InstanceGroupManager
@dynamic autoHealingPolicies, baseInstanceName, creationTimestamp,
         currentActions, descriptionProperty, distributionPolicy, fingerprint,
         identifier, instanceGroup, instanceTemplate, kind,
         listManagedInstancesResults, name, namedPorts, region, selfLink,
         statefulPolicy, status, targetPools, targetSize, updatePolicy,
         versions, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"autoHealingPolicies" : [GTLRCompute_InstanceGroupManagerAutoHealingPolicy class],
    @"namedPorts" : [GTLRCompute_NamedPort class],
    @"targetPools" : [NSString class],
    @"versions" : [GTLRCompute_InstanceGroupManagerVersion class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerActionsSummary
//

@implementation GTLRCompute_InstanceGroupManagerActionsSummary
@dynamic abandoning, creating, creatingWithoutRetries, deleting, none,
         recreating, refreshing, restarting, resuming, starting, stopping,
         suspending, verifying;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerAggregatedList
//

@implementation GTLRCompute_InstanceGroupManagerAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerAggregatedList_Items
//

@implementation GTLRCompute_InstanceGroupManagerAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_InstanceGroupManagersScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerAggregatedList_Warning
//

@implementation GTLRCompute_InstanceGroupManagerAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceGroupManagerAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceGroupManagerAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerAutoHealingPolicy
//

@implementation GTLRCompute_InstanceGroupManagerAutoHealingPolicy
@dynamic healthCheck, initialDelaySec;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerList
//

@implementation GTLRCompute_InstanceGroupManagerList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceGroupManager class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerList_Warning
//

@implementation GTLRCompute_InstanceGroupManagerList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceGroupManagerList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceGroupManagerList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersAbandonInstancesRequest
//

@implementation GTLRCompute_InstanceGroupManagersAbandonInstancesRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersApplyUpdatesRequest
//

@implementation GTLRCompute_InstanceGroupManagersApplyUpdatesRequest
@dynamic allInstances, instances, minimalAction, mostDisruptiveAllowedAction;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersCreateInstancesRequest
//

@implementation GTLRCompute_InstanceGroupManagersCreateInstancesRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRCompute_PerInstanceConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersDeleteInstancesRequest
//

@implementation GTLRCompute_InstanceGroupManagersDeleteInstancesRequest
@dynamic instances, skipInstancesOnValidationError;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersDeletePerInstanceConfigsReq
//

@implementation GTLRCompute_InstanceGroupManagersDeletePerInstanceConfigsReq
@dynamic names;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"names" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersListErrorsResponse
//

@implementation GTLRCompute_InstanceGroupManagersListErrorsResponse
@dynamic items, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceManagedByIgmError class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersListManagedInstancesResponse
//

@implementation GTLRCompute_InstanceGroupManagersListManagedInstancesResponse
@dynamic managedInstances, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"managedInstances" : [GTLRCompute_ManagedInstance class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"managedInstances";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp
//

@implementation GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp
@dynamic items, nextPageToken, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_PerInstanceConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning
//

@implementation GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Data_Item
//

@implementation GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersPatchPerInstanceConfigsReq
//

@implementation GTLRCompute_InstanceGroupManagersPatchPerInstanceConfigsReq
@dynamic perInstanceConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"perInstanceConfigs" : [GTLRCompute_PerInstanceConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersRecreateInstancesRequest
//

@implementation GTLRCompute_InstanceGroupManagersRecreateInstancesRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersScopedList
//

@implementation GTLRCompute_InstanceGroupManagersScopedList
@dynamic instanceGroupManagers, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instanceGroupManagers" : [GTLRCompute_InstanceGroupManager class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersScopedList_Warning
//

@implementation GTLRCompute_InstanceGroupManagersScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceGroupManagersScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersScopedList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceGroupManagersScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersSetInstanceTemplateRequest
//

@implementation GTLRCompute_InstanceGroupManagersSetInstanceTemplateRequest
@dynamic instanceTemplate;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersSetTargetPoolsRequest
//

@implementation GTLRCompute_InstanceGroupManagersSetTargetPoolsRequest
@dynamic fingerprint, targetPools;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetPools" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerStatus
//

@implementation GTLRCompute_InstanceGroupManagerStatus
@dynamic autoscaler, isStable, stateful, versionTarget;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerStatusStateful
//

@implementation GTLRCompute_InstanceGroupManagerStatusStateful
@dynamic hasStatefulConfig, perInstanceConfigs;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerStatusStatefulPerInstanceConfigs
//

@implementation GTLRCompute_InstanceGroupManagerStatusStatefulPerInstanceConfigs
@dynamic allEffective;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerStatusVersionTarget
//

@implementation GTLRCompute_InstanceGroupManagerStatusVersionTarget
@dynamic isReached;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagersUpdatePerInstanceConfigsReq
//

@implementation GTLRCompute_InstanceGroupManagersUpdatePerInstanceConfigsReq
@dynamic perInstanceConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"perInstanceConfigs" : [GTLRCompute_PerInstanceConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerUpdatePolicy
//

@implementation GTLRCompute_InstanceGroupManagerUpdatePolicy
@dynamic instanceRedistributionType, maxSurge, maxUnavailable, minimalAction,
         mostDisruptiveAllowedAction, replacementMethod, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupManagerVersion
//

@implementation GTLRCompute_InstanceGroupManagerVersion
@dynamic instanceTemplate, name, targetSize;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsAddInstancesRequest
//

@implementation GTLRCompute_InstanceGroupsAddInstancesRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRCompute_InstanceReference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsListInstances
//

@implementation GTLRCompute_InstanceGroupsListInstances
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceWithNamedPorts class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsListInstances_Warning
//

@implementation GTLRCompute_InstanceGroupsListInstances_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceGroupsListInstances_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsListInstances_Warning_Data_Item
//

@implementation GTLRCompute_InstanceGroupsListInstances_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsListInstancesRequest
//

@implementation GTLRCompute_InstanceGroupsListInstancesRequest
@dynamic instanceState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsRemoveInstancesRequest
//

@implementation GTLRCompute_InstanceGroupsRemoveInstancesRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRCompute_InstanceReference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsScopedList
//

@implementation GTLRCompute_InstanceGroupsScopedList
@dynamic instanceGroups, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instanceGroups" : [GTLRCompute_InstanceGroup class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsScopedList_Warning
//

@implementation GTLRCompute_InstanceGroupsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceGroupsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceGroupsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceGroupsSetNamedPortsRequest
//

@implementation GTLRCompute_InstanceGroupsSetNamedPortsRequest
@dynamic fingerprint, namedPorts;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"namedPorts" : [GTLRCompute_NamedPort class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceList
//

@implementation GTLRCompute_InstanceList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Instance class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceList_Warning
//

@implementation GTLRCompute_InstanceList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceListReferrers
//

@implementation GTLRCompute_InstanceListReferrers
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Reference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceListReferrers_Warning
//

@implementation GTLRCompute_InstanceListReferrers_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceListReferrers_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceListReferrers_Warning_Data_Item
//

@implementation GTLRCompute_InstanceListReferrers_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceManagedByIgmError
//

@implementation GTLRCompute_InstanceManagedByIgmError
@dynamic error, instanceActionDetails, timestamp;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails
//

@implementation GTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails
@dynamic action, instance, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceManagedByIgmErrorManagedInstanceError
//

@implementation GTLRCompute_InstanceManagedByIgmErrorManagedInstanceError
@dynamic code, message;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceMoveRequest
//

@implementation GTLRCompute_InstanceMoveRequest
@dynamic destinationZone, targetInstance;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceParams
//

@implementation GTLRCompute_InstanceParams
@dynamic resourceManagerTags;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceParams_ResourceManagerTags
//

@implementation GTLRCompute_InstanceParams_ResourceManagerTags

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceProperties
//

@implementation GTLRCompute_InstanceProperties
@dynamic advancedMachineFeatures, canIpForward, confidentialInstanceConfig,
         descriptionProperty, disks, guestAccelerators, keyRevocationActionType,
         labels, machineType, metadata, minCpuPlatform, networkInterfaces,
         networkPerformanceConfig, privateIpv6GoogleAccess, reservationAffinity,
         resourceManagerTags, resourcePolicies, scheduling, serviceAccounts,
         shieldedInstanceConfig, tags;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"disks" : [GTLRCompute_AttachedDisk class],
    @"guestAccelerators" : [GTLRCompute_AcceleratorConfig class],
    @"networkInterfaces" : [GTLRCompute_NetworkInterface class],
    @"resourcePolicies" : [NSString class],
    @"serviceAccounts" : [GTLRCompute_ServiceAccount class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceProperties_Labels
//

@implementation GTLRCompute_InstanceProperties_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceProperties_ResourceManagerTags
//

@implementation GTLRCompute_InstanceProperties_ResourceManagerTags

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceReference
//

@implementation GTLRCompute_InstanceReference
@dynamic instance;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesAddResourcePoliciesRequest
//

@implementation GTLRCompute_InstancesAddResourcePoliciesRequest
@dynamic resourcePolicies;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourcePolicies" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesGetEffectiveFirewallsResponse
//

@implementation GTLRCompute_InstancesGetEffectiveFirewallsResponse
@dynamic firewallPolicys, firewalls;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"firewallPolicys" : [GTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy class],
    @"firewalls" : [GTLRCompute_Firewall class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy
//

@implementation GTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy
@dynamic displayName, name, rules, shortName, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"rules" : [GTLRCompute_FirewallPolicyRule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesRemoveResourcePoliciesRequest
//

@implementation GTLRCompute_InstancesRemoveResourcePoliciesRequest
@dynamic resourcePolicies;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourcePolicies" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesScopedList
//

@implementation GTLRCompute_InstancesScopedList
@dynamic instances, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRCompute_Instance class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesScopedList_Warning
//

@implementation GTLRCompute_InstancesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstancesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_InstancesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesSetLabelsRequest
//

@implementation GTLRCompute_InstancesSetLabelsRequest
@dynamic labelFingerprint, labels;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesSetLabelsRequest_Labels
//

@implementation GTLRCompute_InstancesSetLabelsRequest_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesSetMachineResourcesRequest
//

@implementation GTLRCompute_InstancesSetMachineResourcesRequest
@dynamic guestAccelerators;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"guestAccelerators" : [GTLRCompute_AcceleratorConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesSetMachineTypeRequest
//

@implementation GTLRCompute_InstancesSetMachineTypeRequest
@dynamic machineType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesSetMinCpuPlatformRequest
//

@implementation GTLRCompute_InstancesSetMinCpuPlatformRequest
@dynamic minCpuPlatform;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesSetServiceAccountRequest
//

@implementation GTLRCompute_InstancesSetServiceAccountRequest
@dynamic email, scopes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"scopes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstancesStartWithEncryptionKeyRequest
//

@implementation GTLRCompute_InstancesStartWithEncryptionKeyRequest
@dynamic disks;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"disks" : [GTLRCompute_CustomerEncryptionKeyProtectedDisk class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceTemplate
//

@implementation GTLRCompute_InstanceTemplate
@dynamic creationTimestamp, descriptionProperty, identifier, kind, name,
         properties, selfLink, sourceInstance, sourceInstanceParams;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceTemplateList
//

@implementation GTLRCompute_InstanceTemplateList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceTemplate class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceTemplateList_Warning
//

@implementation GTLRCompute_InstanceTemplateList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InstanceTemplateList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceTemplateList_Warning_Data_Item
//

@implementation GTLRCompute_InstanceTemplateList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InstanceWithNamedPorts
//

@implementation GTLRCompute_InstanceWithNamedPorts
@dynamic instance, namedPorts, status;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"namedPorts" : [GTLRCompute_NamedPort class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Int64RangeMatch
//

@implementation GTLRCompute_Int64RangeMatch
@dynamic rangeEnd, rangeStart;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Interconnect
//

@implementation GTLRCompute_Interconnect
@dynamic adminEnabled, circuitInfos, creationTimestamp, customerName,
         descriptionProperty, expectedOutages, googleIpAddress,
         googleReferenceId, identifier, interconnectAttachments,
         interconnectType, kind, linkType, location, name, nocContactEmail,
         operationalStatus, peerIpAddress, provisionedLinkCount,
         requestedLinkCount, satisfiesPzs, selfLink, state;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"circuitInfos" : [GTLRCompute_InterconnectCircuitInfo class],
    @"expectedOutages" : [GTLRCompute_InterconnectOutageNotification class],
    @"interconnectAttachments" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachment
//

@implementation GTLRCompute_InterconnectAttachment
@dynamic adminEnabled, bandwidth, candidateIpv6Subnets, candidateSubnets,
         cloudRouterIpAddress, cloudRouterIpv6Address,
         cloudRouterIpv6InterfaceId, creationTimestamp, customerRouterIpAddress,
         customerRouterIpv6Address, customerRouterIpv6InterfaceId,
         dataplaneVersion, descriptionProperty, edgeAvailabilityDomain,
         encryption, googleReferenceId, identifier, interconnect,
         ipsecInternalAddresses, kind, mtu, name, operationalStatus, pairingKey,
         partnerAsn, partnerMetadata, privateInterconnectInfo, region, router,
         satisfiesPzs, selfLink, stackType, state, type, vlanTag8021q;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"candidateIpv6Subnets" : [NSString class],
    @"candidateSubnets" : [NSString class],
    @"ipsecInternalAddresses" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentAggregatedList
//

@implementation GTLRCompute_InterconnectAttachmentAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentAggregatedList_Items
//

@implementation GTLRCompute_InterconnectAttachmentAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_InterconnectAttachmentsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentAggregatedList_Warning
//

@implementation GTLRCompute_InterconnectAttachmentAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InterconnectAttachmentAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_InterconnectAttachmentAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentList
//

@implementation GTLRCompute_InterconnectAttachmentList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InterconnectAttachment class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentList_Warning
//

@implementation GTLRCompute_InterconnectAttachmentList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InterconnectAttachmentList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentList_Warning_Data_Item
//

@implementation GTLRCompute_InterconnectAttachmentList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentPartnerMetadata
//

@implementation GTLRCompute_InterconnectAttachmentPartnerMetadata
@dynamic interconnectName, partnerName, portalUrl;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentPrivateInfo
//

@implementation GTLRCompute_InterconnectAttachmentPrivateInfo
@dynamic tag8021q;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentsScopedList
//

@implementation GTLRCompute_InterconnectAttachmentsScopedList
@dynamic interconnectAttachments, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"interconnectAttachments" : [GTLRCompute_InterconnectAttachment class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentsScopedList_Warning
//

@implementation GTLRCompute_InterconnectAttachmentsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InterconnectAttachmentsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectAttachmentsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_InterconnectAttachmentsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectCircuitInfo
//

@implementation GTLRCompute_InterconnectCircuitInfo
@dynamic customerDemarcId, googleCircuitId, googleDemarcId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectDiagnostics
//

@implementation GTLRCompute_InterconnectDiagnostics
@dynamic arpCaches, links, macAddress;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"arpCaches" : [GTLRCompute_InterconnectDiagnosticsARPEntry class],
    @"links" : [GTLRCompute_InterconnectDiagnosticsLinkStatus class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectDiagnosticsARPEntry
//

@implementation GTLRCompute_InterconnectDiagnosticsARPEntry
@dynamic ipAddress, macAddress;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectDiagnosticsLinkLACPStatus
//

@implementation GTLRCompute_InterconnectDiagnosticsLinkLACPStatus
@dynamic googleSystemId, neighborSystemId, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectDiagnosticsLinkOpticalPower
//

@implementation GTLRCompute_InterconnectDiagnosticsLinkOpticalPower
@dynamic state, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectDiagnosticsLinkStatus
//

@implementation GTLRCompute_InterconnectDiagnosticsLinkStatus
@dynamic arpCaches, circuitId, googleDemarc, lacpStatus, receivingOpticalPower,
         transmittingOpticalPower;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"arpCaches" : [GTLRCompute_InterconnectDiagnosticsARPEntry class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectList
//

@implementation GTLRCompute_InterconnectList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Interconnect class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectList_Warning
//

@implementation GTLRCompute_InterconnectList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InterconnectList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectList_Warning_Data_Item
//

@implementation GTLRCompute_InterconnectList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectLocation
//

@implementation GTLRCompute_InterconnectLocation
@dynamic address, availabilityZone, city, continent, creationTimestamp,
         descriptionProperty, facilityProvider, facilityProviderFacilityId,
         identifier, kind, name, peeringdbFacilityId, regionInfos, selfLink,
         status, supportsPzs;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"regionInfos" : [GTLRCompute_InterconnectLocationRegionInfo class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectLocationList
//

@implementation GTLRCompute_InterconnectLocationList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InterconnectLocation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectLocationList_Warning
//

@implementation GTLRCompute_InterconnectLocationList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_InterconnectLocationList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectLocationList_Warning_Data_Item
//

@implementation GTLRCompute_InterconnectLocationList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectLocationRegionInfo
//

@implementation GTLRCompute_InterconnectLocationRegionInfo
@dynamic expectedRttMs, locationPresence, region;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectOutageNotification
//

@implementation GTLRCompute_InterconnectOutageNotification
@dynamic affectedCircuits, descriptionProperty, endTime, issueType, name,
         source, startTime, state;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"affectedCircuits" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_InterconnectsGetDiagnosticsResponse
//

@implementation GTLRCompute_InterconnectsGetDiagnosticsResponse
@dynamic result;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_License
//

@implementation GTLRCompute_License
@dynamic chargesUseFee, creationTimestamp, descriptionProperty, identifier,
         kind, licenseCode, name, resourceRequirements, selfLink, transferable;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LicenseCode
//

@implementation GTLRCompute_LicenseCode
@dynamic creationTimestamp, descriptionProperty, identifier, kind, licenseAlias,
         name, selfLink, state, transferable;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"licenseAlias" : [GTLRCompute_LicenseCodeLicenseAlias class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LicenseCodeLicenseAlias
//

@implementation GTLRCompute_LicenseCodeLicenseAlias
@dynamic descriptionProperty, selfLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LicenseResourceCommitment
//

@implementation GTLRCompute_LicenseResourceCommitment
@dynamic amount, coresPerLicense, license;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LicenseResourceRequirements
//

@implementation GTLRCompute_LicenseResourceRequirements
@dynamic minGuestCpuCount, minMemoryMb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LicensesListResponse
//

@implementation GTLRCompute_LicensesListResponse
@dynamic identifier, items, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_License class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LicensesListResponse_Warning
//

@implementation GTLRCompute_LicensesListResponse_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_LicensesListResponse_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LicensesListResponse_Warning_Data_Item
//

@implementation GTLRCompute_LicensesListResponse_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LocalDisk
//

@implementation GTLRCompute_LocalDisk
@dynamic diskCount, diskSizeGb, diskType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LocalizedMessage
//

@implementation GTLRCompute_LocalizedMessage
@dynamic locale, message;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LocationPolicy
//

@implementation GTLRCompute_LocationPolicy
@dynamic locations, targetShape;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LocationPolicy_Locations
//

@implementation GTLRCompute_LocationPolicy_Locations

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_LocationPolicyLocation class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LocationPolicyLocation
//

@implementation GTLRCompute_LocationPolicyLocation
@dynamic constraints, preference;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LocationPolicyLocationConstraints
//

@implementation GTLRCompute_LocationPolicyLocationConstraints
@dynamic maxCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LogConfig
//

@implementation GTLRCompute_LogConfig
@dynamic cloudAudit, counter, dataAccess;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LogConfigCloudAuditOptions
//

@implementation GTLRCompute_LogConfigCloudAuditOptions
@dynamic authorizationLoggingOptions, logName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LogConfigCounterOptions
//

@implementation GTLRCompute_LogConfigCounterOptions
@dynamic customFields, field, metric;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"customFields" : [GTLRCompute_LogConfigCounterOptionsCustomField class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LogConfigCounterOptionsCustomField
//

@implementation GTLRCompute_LogConfigCounterOptionsCustomField
@dynamic name, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_LogConfigDataAccessOptions
//

@implementation GTLRCompute_LogConfigDataAccessOptions
@dynamic logMode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineImage
//

@implementation GTLRCompute_MachineImage
@dynamic creationTimestamp, descriptionProperty, guestFlush, identifier,
         instanceProperties, kind, machineImageEncryptionKey, name,
         satisfiesPzs, savedDisks, selfLink, sourceDiskEncryptionKeys,
         sourceInstance, sourceInstanceProperties, status, storageLocations,
         totalStorageBytes;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"savedDisks" : [GTLRCompute_SavedDisk class],
    @"sourceDiskEncryptionKeys" : [GTLRCompute_SourceDiskEncryptionKey class],
    @"storageLocations" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineImageList
//

@implementation GTLRCompute_MachineImageList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_MachineImage class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineImageList_Warning
//

@implementation GTLRCompute_MachineImageList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_MachineImageList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineImageList_Warning_Data_Item
//

@implementation GTLRCompute_MachineImageList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineType
//

@implementation GTLRCompute_MachineType
@dynamic accelerators, creationTimestamp, deprecated, descriptionProperty,
         guestCpus, identifier, imageSpaceGb, isSharedCpu, kind,
         maximumPersistentDisks, maximumPersistentDisksSizeGb, memoryMb, name,
         scratchDisks, selfLink, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accelerators" : [GTLRCompute_MachineType_Accelerators_Item class],
    @"scratchDisks" : [GTLRCompute_MachineType_ScratchDisks_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineType_Accelerators_Item
//

@implementation GTLRCompute_MachineType_Accelerators_Item
@dynamic guestAcceleratorCount, guestAcceleratorType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineType_ScratchDisks_Item
//

@implementation GTLRCompute_MachineType_ScratchDisks_Item
@dynamic diskGb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypeAggregatedList
//

@implementation GTLRCompute_MachineTypeAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypeAggregatedList_Items
//

@implementation GTLRCompute_MachineTypeAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_MachineTypesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypeAggregatedList_Warning
//

@implementation GTLRCompute_MachineTypeAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_MachineTypeAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypeAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_MachineTypeAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypeList
//

@implementation GTLRCompute_MachineTypeList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_MachineType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypeList_Warning
//

@implementation GTLRCompute_MachineTypeList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_MachineTypeList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypeList_Warning_Data_Item
//

@implementation GTLRCompute_MachineTypeList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypesScopedList
//

@implementation GTLRCompute_MachineTypesScopedList
@dynamic machineTypes, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"machineTypes" : [GTLRCompute_MachineType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypesScopedList_Warning
//

@implementation GTLRCompute_MachineTypesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_MachineTypesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MachineTypesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_MachineTypesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ManagedInstance
//

@implementation GTLRCompute_ManagedInstance
@dynamic currentAction, identifier, instance, instanceHealth, instanceStatus,
         lastAttempt, preservedStateFromConfig, preservedStateFromPolicy,
         version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instanceHealth" : [GTLRCompute_ManagedInstanceInstanceHealth class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ManagedInstanceInstanceHealth
//

@implementation GTLRCompute_ManagedInstanceInstanceHealth
@dynamic detailedHealthState, healthCheck;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ManagedInstanceLastAttempt
//

@implementation GTLRCompute_ManagedInstanceLastAttempt
@dynamic errors;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ManagedInstanceLastAttempt_Errors
//

@implementation GTLRCompute_ManagedInstanceLastAttempt_Errors
@dynamic errors;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"errors" : [GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item
//

@implementation GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item
@dynamic code, errorDetails, location, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"errorDetails" : [GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item_ErrorDetails_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item_ErrorDetails_Item
//

@implementation GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item_ErrorDetails_Item
@dynamic errorInfo, help, localizedMessage, quotaInfo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ManagedInstanceVersion
//

@implementation GTLRCompute_ManagedInstanceVersion
@dynamic instanceTemplate, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Metadata
//

@implementation GTLRCompute_Metadata
@dynamic fingerprint, items, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Metadata_Items_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Metadata_Items_Item
//

@implementation GTLRCompute_Metadata_Items_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MetadataFilter
//

@implementation GTLRCompute_MetadataFilter
@dynamic filterLabels, filterMatchCriteria;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"filterLabels" : [GTLRCompute_MetadataFilterLabelMatch class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_MetadataFilterLabelMatch
//

@implementation GTLRCompute_MetadataFilterLabelMatch
@dynamic name, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NamedPort
//

@implementation GTLRCompute_NamedPort
@dynamic name, port;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Network
//

@implementation GTLRCompute_Network
@dynamic autoCreateSubnetworks, creationTimestamp, descriptionProperty,
         enableUlaInternalIpv6, firewallPolicy, gatewayIPv4, identifier,
         internalIpv6Range, IPv4Range, kind, mtu, name,
         networkFirewallPolicyEnforcementOrder, peerings, routingConfig,
         selfLink, selfLinkWithId, subnetworks;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"peerings" : [GTLRCompute_NetworkPeering class],
    @"subnetworks" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEdgeSecurityService
//

@implementation GTLRCompute_NetworkEdgeSecurityService
@dynamic creationTimestamp, descriptionProperty, fingerprint, identifier, kind,
         name, region, securityPolicy, selfLink, selfLinkWithId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEdgeSecurityServiceAggregatedList
//

@implementation GTLRCompute_NetworkEdgeSecurityServiceAggregatedList
@dynamic ETag, identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"ETag" : @"etag",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Items
//

@implementation GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_NetworkEdgeSecurityServicesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning
//

@implementation GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEdgeSecurityServicesScopedList
//

@implementation GTLRCompute_NetworkEdgeSecurityServicesScopedList
@dynamic networkEdgeSecurityServices, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"networkEdgeSecurityServices" : [GTLRCompute_NetworkEdgeSecurityService class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning
//

@implementation GTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpoint
//

@implementation GTLRCompute_NetworkEndpoint
@dynamic annotations, fqdn, instance, ipAddress, port;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpoint_Annotations
//

@implementation GTLRCompute_NetworkEndpoint_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroup
//

@implementation GTLRCompute_NetworkEndpointGroup
@dynamic annotations, appEngine, cloudFunction, cloudRun, creationTimestamp,
         defaultPort, descriptionProperty, identifier, kind, name, network,
         networkEndpointType, pscData, pscTargetService, region, selfLink, size,
         subnetwork, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroup_Annotations
//

@implementation GTLRCompute_NetworkEndpointGroup_Annotations

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupAggregatedList
//

@implementation GTLRCompute_NetworkEndpointGroupAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupAggregatedList_Items
//

@implementation GTLRCompute_NetworkEndpointGroupAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_NetworkEndpointGroupsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupAggregatedList_Warning
//

@implementation GTLRCompute_NetworkEndpointGroupAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupAppEngine
//

@implementation GTLRCompute_NetworkEndpointGroupAppEngine
@dynamic service, urlMask, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupCloudFunction
//

@implementation GTLRCompute_NetworkEndpointGroupCloudFunction
@dynamic function, urlMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupCloudRun
//

@implementation GTLRCompute_NetworkEndpointGroupCloudRun
@dynamic service, tag, urlMask;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupList
//

@implementation GTLRCompute_NetworkEndpointGroupList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_NetworkEndpointGroup class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupList_Warning
//

@implementation GTLRCompute_NetworkEndpointGroupList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NetworkEndpointGroupList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupList_Warning_Data_Item
//

@implementation GTLRCompute_NetworkEndpointGroupList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupPscData
//

@implementation GTLRCompute_NetworkEndpointGroupPscData
@dynamic consumerPscAddress, pscConnectionId, pscConnectionStatus;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupsAttachEndpointsRequest
//

@implementation GTLRCompute_NetworkEndpointGroupsAttachEndpointsRequest
@dynamic networkEndpoints;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"networkEndpoints" : [GTLRCompute_NetworkEndpoint class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupsDetachEndpointsRequest
//

@implementation GTLRCompute_NetworkEndpointGroupsDetachEndpointsRequest
@dynamic networkEndpoints;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"networkEndpoints" : [GTLRCompute_NetworkEndpoint class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupsListEndpointsRequest
//

@implementation GTLRCompute_NetworkEndpointGroupsListEndpointsRequest
@dynamic healthStatus;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints
//

@implementation GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints
@dynamic identifier, items, kind, nextPageToken, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_NetworkEndpointWithHealthStatus class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning
//

@implementation GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Data_Item
//

@implementation GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupsScopedList
//

@implementation GTLRCompute_NetworkEndpointGroupsScopedList
@dynamic networkEndpointGroups, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"networkEndpointGroups" : [GTLRCompute_NetworkEndpointGroup class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupsScopedList_Warning
//

@implementation GTLRCompute_NetworkEndpointGroupsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NetworkEndpointGroupsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointGroupsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_NetworkEndpointGroupsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkEndpointWithHealthStatus
//

@implementation GTLRCompute_NetworkEndpointWithHealthStatus
@dynamic healths, networkEndpoint;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"healths" : [GTLRCompute_HealthStatusForNetworkEndpoint class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkInterface
//

@implementation GTLRCompute_NetworkInterface
@dynamic accessConfigs, aliasIpRanges, fingerprint, internalIpv6PrefixLength,
         ipv6AccessConfigs, ipv6AccessType, ipv6Address, kind, name, network,
         networkIP, nicType, queueCount, stackType, subnetwork;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accessConfigs" : [GTLRCompute_AccessConfig class],
    @"aliasIpRanges" : [GTLRCompute_AliasIpRange class],
    @"ipv6AccessConfigs" : [GTLRCompute_AccessConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkList
//

@implementation GTLRCompute_NetworkList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Network class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkList_Warning
//

@implementation GTLRCompute_NetworkList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NetworkList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkList_Warning_Data_Item
//

@implementation GTLRCompute_NetworkList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkPeering
//

@implementation GTLRCompute_NetworkPeering
@dynamic autoCreateRoutes, exchangeSubnetRoutes, exportCustomRoutes,
         exportSubnetRoutesWithPublicIp, importCustomRoutes,
         importSubnetRoutesWithPublicIp, name, network, peerMtu, stackType,
         state, stateDetails;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkPerformanceConfig
//

@implementation GTLRCompute_NetworkPerformanceConfig
@dynamic totalEgressBandwidthTier;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworkRoutingConfig
//

@implementation GTLRCompute_NetworkRoutingConfig
@dynamic routingMode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworksAddPeeringRequest
//

@implementation GTLRCompute_NetworksAddPeeringRequest
@dynamic autoCreateRoutes, name, networkPeering, peerNetwork;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworksGetEffectiveFirewallsResponse
//

@implementation GTLRCompute_NetworksGetEffectiveFirewallsResponse
@dynamic firewallPolicys, firewalls;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"firewallPolicys" : [GTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy class],
    @"firewalls" : [GTLRCompute_Firewall class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy
//

@implementation GTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy
@dynamic displayName, name, rules, shortName, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"rules" : [GTLRCompute_FirewallPolicyRule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworksRemovePeeringRequest
//

@implementation GTLRCompute_NetworksRemovePeeringRequest
@dynamic name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NetworksUpdatePeeringRequest
//

@implementation GTLRCompute_NetworksUpdatePeeringRequest
@dynamic networkPeering;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroup
//

@implementation GTLRCompute_NodeGroup
@dynamic autoscalingPolicy, creationTimestamp, descriptionProperty, fingerprint,
         identifier, kind, locationHint, maintenancePolicy, maintenanceWindow,
         name, nodeTemplate, selfLink, shareSettings, size, status,
         zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupAggregatedList
//

@implementation GTLRCompute_NodeGroupAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupAggregatedList_Items
//

@implementation GTLRCompute_NodeGroupAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_NodeGroupsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupAggregatedList_Warning
//

@implementation GTLRCompute_NodeGroupAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeGroupAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_NodeGroupAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupAutoscalingPolicy
//

@implementation GTLRCompute_NodeGroupAutoscalingPolicy
@dynamic maxNodes, minNodes, mode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupList
//

@implementation GTLRCompute_NodeGroupList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_NodeGroup class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupList_Warning
//

@implementation GTLRCompute_NodeGroupList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeGroupList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupList_Warning_Data_Item
//

@implementation GTLRCompute_NodeGroupList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupMaintenanceWindow
//

@implementation GTLRCompute_NodeGroupMaintenanceWindow
@dynamic maintenanceDuration, startTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupNode
//

@implementation GTLRCompute_NodeGroupNode
@dynamic accelerators, consumedResources, cpuOvercommitType, disks,
         instanceConsumptionData, instances, name, nodeType, satisfiesPzs,
         serverBinding, serverId, status, totalResources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accelerators" : [GTLRCompute_AcceleratorConfig class],
    @"disks" : [GTLRCompute_LocalDisk class],
    @"instanceConsumptionData" : [GTLRCompute_InstanceConsumptionData class],
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsAddNodesRequest
//

@implementation GTLRCompute_NodeGroupsAddNodesRequest
@dynamic additionalNodeCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsDeleteNodesRequest
//

@implementation GTLRCompute_NodeGroupsDeleteNodesRequest
@dynamic nodes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nodes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsListNodes
//

@implementation GTLRCompute_NodeGroupsListNodes
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_NodeGroupNode class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsListNodes_Warning
//

@implementation GTLRCompute_NodeGroupsListNodes_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeGroupsListNodes_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsListNodes_Warning_Data_Item
//

@implementation GTLRCompute_NodeGroupsListNodes_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsScopedList
//

@implementation GTLRCompute_NodeGroupsScopedList
@dynamic nodeGroups, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nodeGroups" : [GTLRCompute_NodeGroup class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsScopedList_Warning
//

@implementation GTLRCompute_NodeGroupsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeGroupsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_NodeGroupsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeGroupsSetNodeTemplateRequest
//

@implementation GTLRCompute_NodeGroupsSetNodeTemplateRequest
@dynamic nodeTemplate;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplate
//

@implementation GTLRCompute_NodeTemplate
@dynamic accelerators, cpuOvercommitType, creationTimestamp,
         descriptionProperty, disks, identifier, kind, name, nodeAffinityLabels,
         nodeType, nodeTypeFlexibility, region, selfLink, serverBinding, status,
         statusMessage;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"accelerators" : [GTLRCompute_AcceleratorConfig class],
    @"disks" : [GTLRCompute_LocalDisk class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplate_NodeAffinityLabels
//

@implementation GTLRCompute_NodeTemplate_NodeAffinityLabels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateAggregatedList
//

@implementation GTLRCompute_NodeTemplateAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateAggregatedList_Items
//

@implementation GTLRCompute_NodeTemplateAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_NodeTemplatesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateAggregatedList_Warning
//

@implementation GTLRCompute_NodeTemplateAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeTemplateAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_NodeTemplateAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateList
//

@implementation GTLRCompute_NodeTemplateList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_NodeTemplate class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateList_Warning
//

@implementation GTLRCompute_NodeTemplateList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeTemplateList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateList_Warning_Data_Item
//

@implementation GTLRCompute_NodeTemplateList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplateNodeTypeFlexibility
//

@implementation GTLRCompute_NodeTemplateNodeTypeFlexibility
@dynamic cpus, localSsd, memory;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplatesScopedList
//

@implementation GTLRCompute_NodeTemplatesScopedList
@dynamic nodeTemplates, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nodeTemplates" : [GTLRCompute_NodeTemplate class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplatesScopedList_Warning
//

@implementation GTLRCompute_NodeTemplatesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeTemplatesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTemplatesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_NodeTemplatesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeType
//

@implementation GTLRCompute_NodeType
@dynamic cpuPlatform, creationTimestamp, deprecated, descriptionProperty,
         guestCpus, identifier, kind, localSsdGb, memoryMb, name, selfLink,
         zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypeAggregatedList
//

@implementation GTLRCompute_NodeTypeAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypeAggregatedList_Items
//

@implementation GTLRCompute_NodeTypeAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_NodeTypesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypeAggregatedList_Warning
//

@implementation GTLRCompute_NodeTypeAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeTypeAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypeAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_NodeTypeAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypeList
//

@implementation GTLRCompute_NodeTypeList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_NodeType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypeList_Warning
//

@implementation GTLRCompute_NodeTypeList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeTypeList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypeList_Warning_Data_Item
//

@implementation GTLRCompute_NodeTypeList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypesScopedList
//

@implementation GTLRCompute_NodeTypesScopedList
@dynamic nodeTypes, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nodeTypes" : [GTLRCompute_NodeType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypesScopedList_Warning
//

@implementation GTLRCompute_NodeTypesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NodeTypesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NodeTypesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_NodeTypesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NotificationEndpoint
//

@implementation GTLRCompute_NotificationEndpoint
@dynamic creationTimestamp, descriptionProperty, grpcSettings, identifier, kind,
         name, region, selfLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NotificationEndpointGrpcSettings
//

@implementation GTLRCompute_NotificationEndpointGrpcSettings
@dynamic authority, endpoint, payloadName, resendInterval, retryDurationSec;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NotificationEndpointList
//

@implementation GTLRCompute_NotificationEndpointList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_NotificationEndpoint class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NotificationEndpointList_Warning
//

@implementation GTLRCompute_NotificationEndpointList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_NotificationEndpointList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_NotificationEndpointList_Warning_Data_Item
//

@implementation GTLRCompute_NotificationEndpointList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Operation
//

@implementation GTLRCompute_Operation
@dynamic clientOperationId, creationTimestamp, descriptionProperty, endTime,
         error, httpErrorMessage, httpErrorStatusCode, identifier, insertTime,
         kind, name, operationGroupId, operationType, progress, region,
         selfLink, startTime, status, statusMessage, targetId, targetLink, user,
         warnings, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"warnings" : [GTLRCompute_Operation_Warnings_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Operation_Error
//

@implementation GTLRCompute_Operation_Error
@dynamic errors;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"errors" : [GTLRCompute_Operation_Error_Errors_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Operation_Warnings_Item
//

@implementation GTLRCompute_Operation_Warnings_Item
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_Operation_Warnings_Item_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Operation_Error_Errors_Item
//

@implementation GTLRCompute_Operation_Error_Errors_Item
@dynamic code, errorDetails, location, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"errorDetails" : [GTLRCompute_Operation_Error_Errors_Item_ErrorDetails_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Operation_Warnings_Item_Data_Item
//

@implementation GTLRCompute_Operation_Warnings_Item_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Operation_Error_Errors_Item_ErrorDetails_Item
//

@implementation GTLRCompute_Operation_Error_Errors_Item_ErrorDetails_Item
@dynamic errorInfo, help, localizedMessage, quotaInfo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationAggregatedList
//

@implementation GTLRCompute_OperationAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationAggregatedList_Items
//

@implementation GTLRCompute_OperationAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_OperationsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationAggregatedList_Warning
//

@implementation GTLRCompute_OperationAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_OperationAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_OperationAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationList
//

@implementation GTLRCompute_OperationList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Operation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationList_Warning
//

@implementation GTLRCompute_OperationList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_OperationList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationList_Warning_Data_Item
//

@implementation GTLRCompute_OperationList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationsScopedList
//

@implementation GTLRCompute_OperationsScopedList
@dynamic operations, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"operations" : [GTLRCompute_Operation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationsScopedList_Warning
//

@implementation GTLRCompute_OperationsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_OperationsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OperationsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_OperationsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_OutlierDetection
//

@implementation GTLRCompute_OutlierDetection
@dynamic baseEjectionTime, consecutiveErrors, consecutiveGatewayFailure,
         enforcingConsecutiveErrors, enforcingConsecutiveGatewayFailure,
         enforcingSuccessRate, interval, maxEjectionPercent,
         successRateMinimumHosts, successRateRequestVolume,
         successRateStdevFactor;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketIntervals
//

@implementation GTLRCompute_PacketIntervals
@dynamic avgMs, duration, maxMs, minMs, numIntervals, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroring
//

@implementation GTLRCompute_PacketMirroring
@dynamic collectorIlb, creationTimestamp, descriptionProperty, enable, filter,
         identifier, kind, mirroredResources, name, network, priority, region,
         selfLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringAggregatedList
//

@implementation GTLRCompute_PacketMirroringAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringAggregatedList_Items
//

@implementation GTLRCompute_PacketMirroringAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_PacketMirroringsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringAggregatedList_Warning
//

@implementation GTLRCompute_PacketMirroringAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_PacketMirroringAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_PacketMirroringAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringFilter
//

@implementation GTLRCompute_PacketMirroringFilter
@dynamic cidrRanges, direction, IPProtocols;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"cidrRanges" : [NSString class],
    @"IPProtocols" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringForwardingRuleInfo
//

@implementation GTLRCompute_PacketMirroringForwardingRuleInfo
@dynamic canonicalUrl, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringList
//

@implementation GTLRCompute_PacketMirroringList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_PacketMirroring class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringList_Warning
//

@implementation GTLRCompute_PacketMirroringList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_PacketMirroringList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringList_Warning_Data_Item
//

@implementation GTLRCompute_PacketMirroringList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringMirroredResourceInfo
//

@implementation GTLRCompute_PacketMirroringMirroredResourceInfo
@dynamic instances, subnetworks, tags;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRCompute_PacketMirroringMirroredResourceInfoInstanceInfo class],
    @"subnetworks" : [GTLRCompute_PacketMirroringMirroredResourceInfoSubnetInfo class],
    @"tags" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringMirroredResourceInfoInstanceInfo
//

@implementation GTLRCompute_PacketMirroringMirroredResourceInfoInstanceInfo
@dynamic canonicalUrl, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringMirroredResourceInfoSubnetInfo
//

@implementation GTLRCompute_PacketMirroringMirroredResourceInfoSubnetInfo
@dynamic canonicalUrl, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringNetworkInfo
//

@implementation GTLRCompute_PacketMirroringNetworkInfo
@dynamic canonicalUrl, url;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringsScopedList
//

@implementation GTLRCompute_PacketMirroringsScopedList
@dynamic packetMirrorings, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"packetMirrorings" : [GTLRCompute_PacketMirroring class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringsScopedList_Warning
//

@implementation GTLRCompute_PacketMirroringsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_PacketMirroringsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PacketMirroringsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_PacketMirroringsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PathMatcher
//

@implementation GTLRCompute_PathMatcher
@dynamic defaultRouteAction, defaultService, defaultUrlRedirect,
         descriptionProperty, headerAction, name, pathRules, routeRules;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"pathRules" : [GTLRCompute_PathRule class],
    @"routeRules" : [GTLRCompute_HttpRouteRule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PathRule
//

@implementation GTLRCompute_PathRule
@dynamic paths, routeAction, service, urlRedirect;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"paths" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PerInstanceConfig
//

@implementation GTLRCompute_PerInstanceConfig
@dynamic fingerprint, name, preservedState, status;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Policy
//

@implementation GTLRCompute_Policy
@dynamic auditConfigs, bindings, ETag, rules, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"auditConfigs" : [GTLRCompute_AuditConfig class],
    @"bindings" : [GTLRCompute_Binding class],
    @"rules" : [GTLRCompute_Rule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PreconfiguredWafSet
//

@implementation GTLRCompute_PreconfiguredWafSet
@dynamic expressionSets;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"expressionSets" : [GTLRCompute_WafExpressionSet class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PreservedState
//

@implementation GTLRCompute_PreservedState
@dynamic disks, metadata;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PreservedState_Disks
//

@implementation GTLRCompute_PreservedState_Disks

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_PreservedStatePreservedDisk class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PreservedState_Metadata
//

@implementation GTLRCompute_PreservedState_Metadata

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PreservedStatePreservedDisk
//

@implementation GTLRCompute_PreservedStatePreservedDisk
@dynamic autoDelete, mode, source;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Project
//

@implementation GTLRCompute_Project
@dynamic commonInstanceMetadata, creationTimestamp, defaultNetworkTier,
         defaultServiceAccount, descriptionProperty, enabledFeatures,
         identifier, kind, name, quotas, selfLink, usageExportLocation,
         xpnProjectStatus;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"enabledFeatures" : [NSString class],
    @"quotas" : [GTLRCompute_Quota class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ProjectsDisableXpnResourceRequest
//

@implementation GTLRCompute_ProjectsDisableXpnResourceRequest
@dynamic xpnResource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ProjectsEnableXpnResourceRequest
//

@implementation GTLRCompute_ProjectsEnableXpnResourceRequest
@dynamic xpnResource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ProjectsGetXpnResources
//

@implementation GTLRCompute_ProjectsGetXpnResources
@dynamic kind, nextPageToken, resources;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resources" : [GTLRCompute_XpnResourceId class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"resources";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ProjectsListXpnHostsRequest
//

@implementation GTLRCompute_ProjectsListXpnHostsRequest
@dynamic organization;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ProjectsSetDefaultNetworkTierRequest
//

@implementation GTLRCompute_ProjectsSetDefaultNetworkTierRequest
@dynamic networkTier;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicAdvertisedPrefix
//

@implementation GTLRCompute_PublicAdvertisedPrefix
@dynamic creationTimestamp, descriptionProperty, dnsVerificationIp, fingerprint,
         identifier, ipCidrRange, kind, name, publicDelegatedPrefixs, selfLink,
         sharedSecret, status;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"publicDelegatedPrefixs" : [GTLRCompute_PublicAdvertisedPrefixPublicDelegatedPrefix class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicAdvertisedPrefixList
//

@implementation GTLRCompute_PublicAdvertisedPrefixList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_PublicAdvertisedPrefix class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicAdvertisedPrefixList_Warning
//

@implementation GTLRCompute_PublicAdvertisedPrefixList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_PublicAdvertisedPrefixList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicAdvertisedPrefixList_Warning_Data_Item
//

@implementation GTLRCompute_PublicAdvertisedPrefixList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicAdvertisedPrefixPublicDelegatedPrefix
//

@implementation GTLRCompute_PublicAdvertisedPrefixPublicDelegatedPrefix
@dynamic ipRange, name, project, region, status;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicDelegatedPrefix
//

@implementation GTLRCompute_PublicDelegatedPrefix
@dynamic creationTimestamp, descriptionProperty, fingerprint, identifier,
         ipCidrRange, isLiveMigration, kind, name, parentPrefix,
         publicDelegatedSubPrefixs, region, selfLink, status;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"publicDelegatedSubPrefixs" : [GTLRCompute_PublicDelegatedPrefixPublicDelegatedSubPrefix class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicDelegatedPrefixAggregatedList
//

@implementation GTLRCompute_PublicDelegatedPrefixAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicDelegatedPrefixAggregatedList_Items
//

@implementation GTLRCompute_PublicDelegatedPrefixAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_PublicDelegatedPrefixesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicDelegatedPrefixAggregatedList_Warning
//

@implementation GTLRCompute_PublicDelegatedPrefixAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicDelegatedPrefixesScopedList
//

@implementation GTLRCompute_PublicDelegatedPrefixesScopedList
@dynamic publicDelegatedPrefixes, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"publicDelegatedPrefixes" : [GTLRCompute_PublicDelegatedPrefix class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicDelegatedPrefixesScopedList_Warning
//

@implementation GTLRCompute_PublicDelegatedPrefixesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicDelegatedPrefixList
//

@implementation GTLRCompute_PublicDelegatedPrefixList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_PublicDelegatedPrefix class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicDelegatedPrefixList_Warning
//

@implementation GTLRCompute_PublicDelegatedPrefixList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_PublicDelegatedPrefixList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicDelegatedPrefixList_Warning_Data_Item
//

@implementation GTLRCompute_PublicDelegatedPrefixList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_PublicDelegatedPrefixPublicDelegatedSubPrefix
//

@implementation GTLRCompute_PublicDelegatedPrefixPublicDelegatedSubPrefix
@dynamic delegateeProject, descriptionProperty, ipCidrRange, isAddress, name,
         region, status;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Quota
//

@implementation GTLRCompute_Quota
@dynamic limit, metric, owner, usage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_QuotaExceededInfo
//

@implementation GTLRCompute_QuotaExceededInfo
@dynamic dimensions, limit, limitName, metricName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_QuotaExceededInfo_Dimensions
//

@implementation GTLRCompute_QuotaExceededInfo_Dimensions

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Reference
//

@implementation GTLRCompute_Reference
@dynamic kind, referenceType, referrer, target;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Region
//

@implementation GTLRCompute_Region
@dynamic creationTimestamp, deprecated, descriptionProperty, identifier, kind,
         name, quotas, selfLink, status, supportsPzs, zones;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"quotas" : [GTLRCompute_Quota class],
    @"zones" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionAutoscalerList
//

@implementation GTLRCompute_RegionAutoscalerList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Autoscaler class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionAutoscalerList_Warning
//

@implementation GTLRCompute_RegionAutoscalerList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RegionAutoscalerList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionAutoscalerList_Warning_Data_Item
//

@implementation GTLRCompute_RegionAutoscalerList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionDisksAddResourcePoliciesRequest
//

@implementation GTLRCompute_RegionDisksAddResourcePoliciesRequest
@dynamic resourcePolicies;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourcePolicies" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionDisksRemoveResourcePoliciesRequest
//

@implementation GTLRCompute_RegionDisksRemoveResourcePoliciesRequest
@dynamic resourcePolicies;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourcePolicies" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionDisksResizeRequest
//

@implementation GTLRCompute_RegionDisksResizeRequest
@dynamic sizeGb;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionDiskTypeList
//

@implementation GTLRCompute_RegionDiskTypeList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_DiskType class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionDiskTypeList_Warning
//

@implementation GTLRCompute_RegionDiskTypeList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RegionDiskTypeList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionDiskTypeList_Warning_Data_Item
//

@implementation GTLRCompute_RegionDiskTypeList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupList
//

@implementation GTLRCompute_RegionInstanceGroupList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceGroup class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupList_Warning
//

@implementation GTLRCompute_RegionInstanceGroupList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RegionInstanceGroupList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupList_Warning_Data_Item
//

@implementation GTLRCompute_RegionInstanceGroupList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagerDeleteInstanceConfigReq
//

@implementation GTLRCompute_RegionInstanceGroupManagerDeleteInstanceConfigReq
@dynamic names;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"names" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagerList
//

@implementation GTLRCompute_RegionInstanceGroupManagerList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceGroupManager class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagerList_Warning
//

@implementation GTLRCompute_RegionInstanceGroupManagerList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RegionInstanceGroupManagerList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagerList_Warning_Data_Item
//

@implementation GTLRCompute_RegionInstanceGroupManagerList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagerPatchInstanceConfigReq
//

@implementation GTLRCompute_RegionInstanceGroupManagerPatchInstanceConfigReq
@dynamic perInstanceConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"perInstanceConfigs" : [GTLRCompute_PerInstanceConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersAbandonInstancesRequest
//

@implementation GTLRCompute_RegionInstanceGroupManagersAbandonInstancesRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest
//

@implementation GTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest
@dynamic allInstances, instances, minimalAction, mostDisruptiveAllowedAction;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersCreateInstancesRequest
//

@implementation GTLRCompute_RegionInstanceGroupManagersCreateInstancesRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRCompute_PerInstanceConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersDeleteInstancesRequest
//

@implementation GTLRCompute_RegionInstanceGroupManagersDeleteInstancesRequest
@dynamic instances, skipInstancesOnValidationError;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersListErrorsResponse
//

@implementation GTLRCompute_RegionInstanceGroupManagersListErrorsResponse
@dynamic items, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceManagedByIgmError class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp
//

@implementation GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp
@dynamic items, nextPageToken, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_PerInstanceConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning
//

@implementation GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Data_Item
//

@implementation GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersListInstancesResponse
//

@implementation GTLRCompute_RegionInstanceGroupManagersListInstancesResponse
@dynamic managedInstances, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"managedInstances" : [GTLRCompute_ManagedInstance class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"managedInstances";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersRecreateRequest
//

@implementation GTLRCompute_RegionInstanceGroupManagersRecreateRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersSetTargetPoolsRequest
//

@implementation GTLRCompute_RegionInstanceGroupManagersSetTargetPoolsRequest
@dynamic fingerprint, targetPools;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetPools" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagersSetTemplateRequest
//

@implementation GTLRCompute_RegionInstanceGroupManagersSetTemplateRequest
@dynamic instanceTemplate;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupManagerUpdateInstanceConfigReq
//

@implementation GTLRCompute_RegionInstanceGroupManagerUpdateInstanceConfigReq
@dynamic perInstanceConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"perInstanceConfigs" : [GTLRCompute_PerInstanceConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupsListInstances
//

@implementation GTLRCompute_RegionInstanceGroupsListInstances
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_InstanceWithNamedPorts class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupsListInstances_Warning
//

@implementation GTLRCompute_RegionInstanceGroupsListInstances_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RegionInstanceGroupsListInstances_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupsListInstances_Warning_Data_Item
//

@implementation GTLRCompute_RegionInstanceGroupsListInstances_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupsListInstancesRequest
//

@implementation GTLRCompute_RegionInstanceGroupsListInstancesRequest
@dynamic instanceState, portName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionInstanceGroupsSetNamedPortsRequest
//

@implementation GTLRCompute_RegionInstanceGroupsSetNamedPortsRequest
@dynamic fingerprint, namedPorts;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"namedPorts" : [GTLRCompute_NamedPort class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionList
//

@implementation GTLRCompute_RegionList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Region class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionList_Warning
//

@implementation GTLRCompute_RegionList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RegionList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionList_Warning_Data_Item
//

@implementation GTLRCompute_RegionList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponse
//

@implementation GTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponse
@dynamic firewallPolicys, firewalls;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"firewallPolicys" : [GTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy class],
    @"firewalls" : [GTLRCompute_Firewall class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy
//

@implementation GTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy
@dynamic displayName, name, rules, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"rules" : [GTLRCompute_FirewallPolicyRule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionSetLabelsRequest
//

@implementation GTLRCompute_RegionSetLabelsRequest
@dynamic labelFingerprint, labels;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionSetLabelsRequest_Labels
//

@implementation GTLRCompute_RegionSetLabelsRequest_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionSetPolicyRequest
//

@implementation GTLRCompute_RegionSetPolicyRequest
@dynamic bindings, ETag, policy;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bindings" : [GTLRCompute_Binding class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionTargetHttpsProxiesSetSslCertificatesRequest
//

@implementation GTLRCompute_RegionTargetHttpsProxiesSetSslCertificatesRequest
@dynamic sslCertificates;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sslCertificates" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RegionUrlMapsValidateRequest
//

@implementation GTLRCompute_RegionUrlMapsValidateRequest
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RequestMirrorPolicy
//

@implementation GTLRCompute_RequestMirrorPolicy
@dynamic backendService;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Reservation
//

@implementation GTLRCompute_Reservation
@dynamic commitment, creationTimestamp, descriptionProperty, identifier, kind,
         name, satisfiesPzs, selfLink, shareSettings, specificReservation,
         specificReservationRequired, status, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ReservationAffinity
//

@implementation GTLRCompute_ReservationAffinity
@dynamic consumeReservationType, key, values;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"values" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ReservationAggregatedList
//

@implementation GTLRCompute_ReservationAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ReservationAggregatedList_Items
//

@implementation GTLRCompute_ReservationAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_ReservationsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ReservationAggregatedList_Warning
//

@implementation GTLRCompute_ReservationAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ReservationAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ReservationAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_ReservationAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ReservationList
//

@implementation GTLRCompute_ReservationList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Reservation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ReservationList_Warning
//

@implementation GTLRCompute_ReservationList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ReservationList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ReservationList_Warning_Data_Item
//

@implementation GTLRCompute_ReservationList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ReservationsResizeRequest
//

@implementation GTLRCompute_ReservationsResizeRequest
@dynamic specificSkuCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ReservationsScopedList
//

@implementation GTLRCompute_ReservationsScopedList
@dynamic reservations, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"reservations" : [GTLRCompute_Reservation class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ReservationsScopedList_Warning
//

@implementation GTLRCompute_ReservationsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ReservationsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ReservationsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_ReservationsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourceCommitment
//

@implementation GTLRCompute_ResourceCommitment
@dynamic acceleratorType, amount, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourceGroupReference
//

@implementation GTLRCompute_ResourceGroupReference
@dynamic group;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePoliciesScopedList
//

@implementation GTLRCompute_ResourcePoliciesScopedList
@dynamic resourcePolicies, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"resourcePolicies" : [GTLRCompute_ResourcePolicy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePoliciesScopedList_Warning
//

@implementation GTLRCompute_ResourcePoliciesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ResourcePoliciesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePoliciesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_ResourcePoliciesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicy
//

@implementation GTLRCompute_ResourcePolicy
@dynamic creationTimestamp, descriptionProperty, groupPlacementPolicy,
         identifier, instanceSchedulePolicy, kind, name, region, resourceStatus,
         selfLink, snapshotSchedulePolicy, status;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyAggregatedList
//

@implementation GTLRCompute_ResourcePolicyAggregatedList
@dynamic ETag, identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"ETag" : @"etag",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyAggregatedList_Items
//

@implementation GTLRCompute_ResourcePolicyAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_ResourcePoliciesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyAggregatedList_Warning
//

@implementation GTLRCompute_ResourcePolicyAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ResourcePolicyAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_ResourcePolicyAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyDailyCycle
//

@implementation GTLRCompute_ResourcePolicyDailyCycle
@dynamic daysInCycle, duration, startTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyGroupPlacementPolicy
//

@implementation GTLRCompute_ResourcePolicyGroupPlacementPolicy
@dynamic availabilityDomainCount, collocation, vmCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyHourlyCycle
//

@implementation GTLRCompute_ResourcePolicyHourlyCycle
@dynamic duration, hoursInCycle, startTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyInstanceSchedulePolicy
//

@implementation GTLRCompute_ResourcePolicyInstanceSchedulePolicy
@dynamic expirationTime, startTime, timeZone, vmStartSchedule, vmStopSchedule;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyInstanceSchedulePolicySchedule
//

@implementation GTLRCompute_ResourcePolicyInstanceSchedulePolicySchedule
@dynamic schedule;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyList
//

@implementation GTLRCompute_ResourcePolicyList
@dynamic ETag, identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"ETag" : @"etag",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_ResourcePolicy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyList_Warning
//

@implementation GTLRCompute_ResourcePolicyList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ResourcePolicyList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyList_Warning_Data_Item
//

@implementation GTLRCompute_ResourcePolicyList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyResourceStatus
//

@implementation GTLRCompute_ResourcePolicyResourceStatus
@dynamic instanceSchedulePolicy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyResourceStatusInstanceSchedulePolicyStatus
//

@implementation GTLRCompute_ResourcePolicyResourceStatusInstanceSchedulePolicyStatus
@dynamic lastRunStartTime, nextRunStartTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicySnapshotSchedulePolicy
//

@implementation GTLRCompute_ResourcePolicySnapshotSchedulePolicy
@dynamic retentionPolicy, schedule, snapshotProperties;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy
//

@implementation GTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy
@dynamic maxRetentionDays, onSourceDiskDelete;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicySnapshotSchedulePolicySchedule
//

@implementation GTLRCompute_ResourcePolicySnapshotSchedulePolicySchedule
@dynamic dailySchedule, hourlySchedule, weeklySchedule;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicySnapshotSchedulePolicySnapshotProperties
//

@implementation GTLRCompute_ResourcePolicySnapshotSchedulePolicySnapshotProperties
@dynamic chainName, guestFlush, labels, storageLocations;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"storageLocations" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicySnapshotSchedulePolicySnapshotProperties_Labels
//

@implementation GTLRCompute_ResourcePolicySnapshotSchedulePolicySnapshotProperties_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyWeeklyCycle
//

@implementation GTLRCompute_ResourcePolicyWeeklyCycle
@dynamic dayOfWeeks;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"dayOfWeeks" : [GTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek
//

@implementation GTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek
@dynamic day, duration, startTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ResourceStatus
//

@implementation GTLRCompute_ResourceStatus
@dynamic physicalHost;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Route
//

@implementation GTLRCompute_Route
@dynamic asPaths, creationTimestamp, descriptionProperty, destRange, identifier,
         kind, name, network, nextHopGateway, nextHopIlb, nextHopInstance,
         nextHopIp, nextHopNetwork, nextHopPeering, nextHopVpnTunnel, priority,
         routeStatus, routeType, selfLink, tags, warnings;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"asPaths" : [GTLRCompute_RouteAsPath class],
    @"tags" : [NSString class],
    @"warnings" : [GTLRCompute_Route_Warnings_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Route_Warnings_Item
//

@implementation GTLRCompute_Route_Warnings_Item
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_Route_Warnings_Item_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Route_Warnings_Item_Data_Item
//

@implementation GTLRCompute_Route_Warnings_Item_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouteAsPath
//

@implementation GTLRCompute_RouteAsPath
@dynamic asLists, pathSegmentType;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"asLists" : [NSNumber class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouteList
//

@implementation GTLRCompute_RouteList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Route class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouteList_Warning
//

@implementation GTLRCompute_RouteList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RouteList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouteList_Warning_Data_Item
//

@implementation GTLRCompute_RouteList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Router
//

@implementation GTLRCompute_Router
@dynamic bgp, bgpPeers, creationTimestamp, descriptionProperty,
         encryptedInterconnectRouter, identifier, interfaces, kind,
         md5AuthenticationKeys, name, nats, network, region, selfLink;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bgpPeers" : [GTLRCompute_RouterBgpPeer class],
    @"interfaces" : [GTLRCompute_RouterInterface class],
    @"md5AuthenticationKeys" : [GTLRCompute_RouterMd5AuthenticationKey class],
    @"nats" : [GTLRCompute_RouterNat class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterAdvertisedIpRange
//

@implementation GTLRCompute_RouterAdvertisedIpRange
@dynamic descriptionProperty, range;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterAggregatedList
//

@implementation GTLRCompute_RouterAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterAggregatedList_Items
//

@implementation GTLRCompute_RouterAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_RoutersScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterAggregatedList_Warning
//

@implementation GTLRCompute_RouterAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RouterAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_RouterAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterBgp
//

@implementation GTLRCompute_RouterBgp
@dynamic advertisedGroups, advertisedIpRanges, advertiseMode, asn,
         keepaliveInterval;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"advertisedGroups" : [NSString class],
    @"advertisedIpRanges" : [GTLRCompute_RouterAdvertisedIpRange class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterBgpPeer
//

@implementation GTLRCompute_RouterBgpPeer
@dynamic advertisedGroups, advertisedIpRanges, advertisedRoutePriority,
         advertiseMode, bfd, enable, enableIpv6, interfaceName, ipAddress,
         ipv6NexthopAddress, managementType, md5AuthenticationKeyName, name,
         peerAsn, peerIpAddress, peerIpv6NexthopAddress,
         routerApplianceInstance;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"advertisedGroups" : [NSString class],
    @"advertisedIpRanges" : [GTLRCompute_RouterAdvertisedIpRange class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterBgpPeerBfd
//

@implementation GTLRCompute_RouterBgpPeerBfd
@dynamic minReceiveInterval, minTransmitInterval, multiplier,
         sessionInitializationMode;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterInterface
//

@implementation GTLRCompute_RouterInterface
@dynamic ipRange, linkedInterconnectAttachment, linkedVpnTunnel, managementType,
         name, privateIpAddress, redundantInterface, subnetwork;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterList
//

@implementation GTLRCompute_RouterList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Router class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterList_Warning
//

@implementation GTLRCompute_RouterList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RouterList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterList_Warning_Data_Item
//

@implementation GTLRCompute_RouterList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterMd5AuthenticationKey
//

@implementation GTLRCompute_RouterMd5AuthenticationKey
@dynamic key, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterNat
//

@implementation GTLRCompute_RouterNat
@dynamic drainNatIps, enableDynamicPortAllocation,
         enableEndpointIndependentMapping, endpointTypes, icmpIdleTimeoutSec,
         logConfig, maxPortsPerVm, minPortsPerVm, name, natIpAllocateOption,
         natIps, rules, sourceSubnetworkIpRangesToNat, subnetworks,
         tcpEstablishedIdleTimeoutSec, tcpTimeWaitTimeoutSec,
         tcpTransitoryIdleTimeoutSec, udpIdleTimeoutSec;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"drainNatIps" : [NSString class],
    @"endpointTypes" : [NSString class],
    @"natIps" : [NSString class],
    @"rules" : [GTLRCompute_RouterNatRule class],
    @"subnetworks" : [GTLRCompute_RouterNatSubnetworkToNat class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterNatLogConfig
//

@implementation GTLRCompute_RouterNatLogConfig
@dynamic enable, filter;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterNatRule
//

@implementation GTLRCompute_RouterNatRule
@dynamic action, descriptionProperty, match, ruleNumber;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterNatRuleAction
//

@implementation GTLRCompute_RouterNatRuleAction
@dynamic sourceNatActiveIps, sourceNatDrainIps;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sourceNatActiveIps" : [NSString class],
    @"sourceNatDrainIps" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterNatSubnetworkToNat
//

@implementation GTLRCompute_RouterNatSubnetworkToNat
@dynamic name, secondaryIpRangeNames, sourceIpRangesToNat;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"secondaryIpRangeNames" : [NSString class],
    @"sourceIpRangesToNat" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RoutersPreviewResponse
//

@implementation GTLRCompute_RoutersPreviewResponse
@dynamic resource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RoutersScopedList
//

@implementation GTLRCompute_RoutersScopedList
@dynamic routers, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"routers" : [GTLRCompute_Router class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RoutersScopedList_Warning
//

@implementation GTLRCompute_RoutersScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_RoutersScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RoutersScopedList_Warning_Data_Item
//

@implementation GTLRCompute_RoutersScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterStatus
//

@implementation GTLRCompute_RouterStatus
@dynamic bestRoutes, bestRoutesForRouter, bgpPeerStatus, natStatus, network;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bestRoutes" : [GTLRCompute_Route class],
    @"bestRoutesForRouter" : [GTLRCompute_Route class],
    @"bgpPeerStatus" : [GTLRCompute_RouterStatusBgpPeerStatus class],
    @"natStatus" : [GTLRCompute_RouterStatusNatStatus class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterStatusBgpPeerStatus
//

@implementation GTLRCompute_RouterStatusBgpPeerStatus
@dynamic advertisedRoutes, bfdStatus, enableIpv6, ipAddress, ipv6NexthopAddress,
         linkedVpnTunnel, md5AuthEnabled, name, numLearnedRoutes, peerIpAddress,
         peerIpv6NexthopAddress, routerApplianceInstance, state, status,
         statusReason, uptime, uptimeSeconds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"advertisedRoutes" : [GTLRCompute_Route class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterStatusNatStatus
//

@implementation GTLRCompute_RouterStatusNatStatus
@dynamic autoAllocatedNatIps, drainAutoAllocatedNatIps,
         drainUserAllocatedNatIps, minExtraNatIpsNeeded, name,
         numVmEndpointsWithNatMappings, ruleStatus, userAllocatedNatIpResources,
         userAllocatedNatIps;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"autoAllocatedNatIps" : [NSString class],
    @"drainAutoAllocatedNatIps" : [NSString class],
    @"drainUserAllocatedNatIps" : [NSString class],
    @"ruleStatus" : [GTLRCompute_RouterStatusNatStatusNatRuleStatus class],
    @"userAllocatedNatIpResources" : [NSString class],
    @"userAllocatedNatIps" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterStatusNatStatusNatRuleStatus
//

@implementation GTLRCompute_RouterStatusNatStatusNatRuleStatus
@dynamic activeNatIps, drainNatIps, minExtraIpsNeeded,
         numVmEndpointsWithNatMappings, ruleNumber;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"activeNatIps" : [NSString class],
    @"drainNatIps" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_RouterStatusResponse
//

@implementation GTLRCompute_RouterStatusResponse
@dynamic kind, result;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Rule
//

@implementation GTLRCompute_Rule
@dynamic action, conditions, descriptionProperty, ins, logConfigs, notIns,
         permissions;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"conditions" : [GTLRCompute_Condition class],
    @"ins" : [NSString class],
    @"logConfigs" : [GTLRCompute_LogConfig class],
    @"notIns" : [NSString class],
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SavedAttachedDisk
//

@implementation GTLRCompute_SavedAttachedDisk
@dynamic autoDelete, boot, deviceName, diskEncryptionKey, diskSizeGb, diskType,
         guestOsFeatures, index, interface, kind, licenses, mode, source,
         storageBytes, storageBytesStatus, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"guestOsFeatures" : [GTLRCompute_GuestOsFeature class],
    @"licenses" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SavedDisk
//

@implementation GTLRCompute_SavedDisk
@dynamic architecture, kind, sourceDisk, storageBytes, storageBytesStatus;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ScalingScheduleStatus
//

@implementation GTLRCompute_ScalingScheduleStatus
@dynamic lastStartTime, nextStartTime, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Scheduling
//

@implementation GTLRCompute_Scheduling
@dynamic automaticRestart, instanceTerminationAction, locationHint, minNodeCpus,
         nodeAffinities, onHostMaintenance, preemptible, provisioningModel;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"nodeAffinities" : [GTLRCompute_SchedulingNodeAffinity class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SchedulingNodeAffinity
//

@implementation GTLRCompute_SchedulingNodeAffinity
@dynamic key, operatorProperty, values;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"operatorProperty" : @"operator" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"values" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Screenshot
//

@implementation GTLRCompute_Screenshot
@dynamic contents, kind;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPoliciesAggregatedList
//

@implementation GTLRCompute_SecurityPoliciesAggregatedList
@dynamic ETag, identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"ETag" : @"etag",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPoliciesAggregatedList_Items
//

@implementation GTLRCompute_SecurityPoliciesAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_SecurityPoliciesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPoliciesAggregatedList_Warning
//

@implementation GTLRCompute_SecurityPoliciesAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SecurityPoliciesAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPoliciesAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_SecurityPoliciesAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPoliciesListPreconfiguredExpressionSetsResponse
//

@implementation GTLRCompute_SecurityPoliciesListPreconfiguredExpressionSetsResponse
@dynamic preconfiguredExpressionSets;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPoliciesScopedList
//

@implementation GTLRCompute_SecurityPoliciesScopedList
@dynamic securityPolicies, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"securityPolicies" : [GTLRCompute_SecurityPolicy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPoliciesScopedList_Warning
//

@implementation GTLRCompute_SecurityPoliciesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SecurityPoliciesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPoliciesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_SecurityPoliciesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPoliciesWafConfig
//

@implementation GTLRCompute_SecurityPoliciesWafConfig
@dynamic wafRules;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicy
//

@implementation GTLRCompute_SecurityPolicy
@dynamic adaptiveProtectionConfig, advancedOptionsConfig, creationTimestamp,
         ddosProtectionConfig, descriptionProperty, fingerprint, identifier,
         kind, name, recaptchaOptionsConfig, region, rules, selfLink, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"rules" : [GTLRCompute_SecurityPolicyRule class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyAdaptiveProtectionConfig
//

@implementation GTLRCompute_SecurityPolicyAdaptiveProtectionConfig
@dynamic layer7DdosDefenseConfig;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig
//

@implementation GTLRCompute_SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig
@dynamic enable, ruleVisibility;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyAdvancedOptionsConfig
//

@implementation GTLRCompute_SecurityPolicyAdvancedOptionsConfig
@dynamic jsonCustomConfig, jsonParsing, logLevel;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyAdvancedOptionsConfigJsonCustomConfig
//

@implementation GTLRCompute_SecurityPolicyAdvancedOptionsConfigJsonCustomConfig
@dynamic contentTypes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"contentTypes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyDdosProtectionConfig
//

@implementation GTLRCompute_SecurityPolicyDdosProtectionConfig
@dynamic ddosProtection;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyList
//

@implementation GTLRCompute_SecurityPolicyList
@dynamic identifier, items, kind, nextPageToken, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_SecurityPolicy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyList_Warning
//

@implementation GTLRCompute_SecurityPolicyList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SecurityPolicyList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyList_Warning_Data_Item
//

@implementation GTLRCompute_SecurityPolicyList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyRecaptchaOptionsConfig
//

@implementation GTLRCompute_SecurityPolicyRecaptchaOptionsConfig
@dynamic redirectSiteKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyReference
//

@implementation GTLRCompute_SecurityPolicyReference
@dynamic securityPolicy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyRule
//

@implementation GTLRCompute_SecurityPolicyRule
@dynamic action, descriptionProperty, headerAction, kind, match, preview,
         priority, rateLimitOptions, redirectOptions;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyRuleHttpHeaderAction
//

@implementation GTLRCompute_SecurityPolicyRuleHttpHeaderAction
@dynamic requestHeadersToAdds;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"requestHeadersToAdds" : [GTLRCompute_SecurityPolicyRuleHttpHeaderActionHttpHeaderOption class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyRuleHttpHeaderActionHttpHeaderOption
//

@implementation GTLRCompute_SecurityPolicyRuleHttpHeaderActionHttpHeaderOption
@dynamic headerName, headerValue;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyRuleMatcher
//

@implementation GTLRCompute_SecurityPolicyRuleMatcher
@dynamic config, expr, versionedExpr;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyRuleMatcherConfig
//

@implementation GTLRCompute_SecurityPolicyRuleMatcherConfig
@dynamic srcIpRanges;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"srcIpRanges" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyRuleRateLimitOptions
//

@implementation GTLRCompute_SecurityPolicyRuleRateLimitOptions
@dynamic banDurationSec, banThreshold, conformAction, enforceOnKey,
         enforceOnKeyName, exceedAction, exceedRedirectOptions,
         rateLimitThreshold;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyRuleRateLimitOptionsThreshold
//

@implementation GTLRCompute_SecurityPolicyRuleRateLimitOptionsThreshold
@dynamic count, intervalSec;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecurityPolicyRuleRedirectOptions
//

@implementation GTLRCompute_SecurityPolicyRuleRedirectOptions
@dynamic target, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SecuritySettings
//

@implementation GTLRCompute_SecuritySettings
@dynamic clientTlsPolicy, subjectAltNames;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"subjectAltNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SerialPortOutput
//

@implementation GTLRCompute_SerialPortOutput
@dynamic contents, kind, next, selfLink, start;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServerBinding
//

@implementation GTLRCompute_ServerBinding
@dynamic type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServiceAccount
//

@implementation GTLRCompute_ServiceAccount
@dynamic email, scopes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"scopes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServiceAttachment
//

@implementation GTLRCompute_ServiceAttachment
@dynamic connectedEndpoints, connectionPreference, consumerAcceptLists,
         consumerRejectLists, creationTimestamp, descriptionProperty,
         domainNames, enableProxyProtocol, fingerprint, identifier, kind, name,
         natSubnets, producerForwardingRule, pscServiceAttachmentId, region,
         selfLink, targetService;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"connectedEndpoints" : [GTLRCompute_ServiceAttachmentConnectedEndpoint class],
    @"consumerAcceptLists" : [GTLRCompute_ServiceAttachmentConsumerProjectLimit class],
    @"consumerRejectLists" : [NSString class],
    @"domainNames" : [NSString class],
    @"natSubnets" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServiceAttachmentAggregatedList
//

@implementation GTLRCompute_ServiceAttachmentAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServiceAttachmentAggregatedList_Items
//

@implementation GTLRCompute_ServiceAttachmentAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_ServiceAttachmentsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServiceAttachmentAggregatedList_Warning
//

@implementation GTLRCompute_ServiceAttachmentAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ServiceAttachmentAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServiceAttachmentAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_ServiceAttachmentAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServiceAttachmentConnectedEndpoint
//

@implementation GTLRCompute_ServiceAttachmentConnectedEndpoint
@dynamic endpoint, pscConnectionId, status;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServiceAttachmentConsumerProjectLimit
//

@implementation GTLRCompute_ServiceAttachmentConsumerProjectLimit
@dynamic connectionLimit, projectIdOrNum;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServiceAttachmentList
//

@implementation GTLRCompute_ServiceAttachmentList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_ServiceAttachment class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServiceAttachmentList_Warning
//

@implementation GTLRCompute_ServiceAttachmentList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ServiceAttachmentList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServiceAttachmentList_Warning_Data_Item
//

@implementation GTLRCompute_ServiceAttachmentList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServiceAttachmentsScopedList
//

@implementation GTLRCompute_ServiceAttachmentsScopedList
@dynamic serviceAttachments, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"serviceAttachments" : [GTLRCompute_ServiceAttachment class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServiceAttachmentsScopedList_Warning
//

@implementation GTLRCompute_ServiceAttachmentsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ServiceAttachmentsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ServiceAttachmentsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_ServiceAttachmentsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ShareSettings
//

@implementation GTLRCompute_ShareSettings
@dynamic projectMap, shareType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ShareSettings_ProjectMap
//

@implementation GTLRCompute_ShareSettings_ProjectMap

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_ShareSettingsProjectConfig class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ShareSettingsProjectConfig
//

@implementation GTLRCompute_ShareSettingsProjectConfig
@dynamic projectId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ShieldedInstanceConfig
//

@implementation GTLRCompute_ShieldedInstanceConfig
@dynamic enableIntegrityMonitoring, enableSecureBoot, enableVtpm;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ShieldedInstanceIdentity
//

@implementation GTLRCompute_ShieldedInstanceIdentity
@dynamic encryptionKey, kind, signingKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ShieldedInstanceIdentityEntry
//

@implementation GTLRCompute_ShieldedInstanceIdentityEntry
@dynamic ekCert, ekPub;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ShieldedInstanceIntegrityPolicy
//

@implementation GTLRCompute_ShieldedInstanceIntegrityPolicy
@dynamic updateAutoLearnPolicy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SignedUrlKey
//

@implementation GTLRCompute_SignedUrlKey
@dynamic keyName, keyValue;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Snapshot
//

@implementation GTLRCompute_Snapshot
@dynamic architecture, autoCreated, chainName, creationSizeBytes,
         creationTimestamp, descriptionProperty, diskSizeGb, downloadBytes,
         identifier, kind, labelFingerprint, labels, licenseCodes, licenses,
         locationHint, name, satisfiesPzs, selfLink, snapshotEncryptionKey,
         snapshotType, sourceDisk, sourceDiskEncryptionKey, sourceDiskId,
         sourceSnapshotSchedulePolicy, sourceSnapshotSchedulePolicyId, status,
         storageBytes, storageBytesStatus, storageLocations;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"licenseCodes" : [NSNumber class],
    @"licenses" : [NSString class],
    @"storageLocations" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Snapshot_Labels
//

@implementation GTLRCompute_Snapshot_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SnapshotList
//

@implementation GTLRCompute_SnapshotList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Snapshot class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SnapshotList_Warning
//

@implementation GTLRCompute_SnapshotList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SnapshotList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SnapshotList_Warning_Data_Item
//

@implementation GTLRCompute_SnapshotList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SourceDiskEncryptionKey
//

@implementation GTLRCompute_SourceDiskEncryptionKey
@dynamic diskEncryptionKey, sourceDisk;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SourceInstanceParams
//

@implementation GTLRCompute_SourceInstanceParams
@dynamic diskConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"diskConfigs" : [GTLRCompute_DiskInstantiationConfig class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SourceInstanceProperties
//

@implementation GTLRCompute_SourceInstanceProperties
@dynamic canIpForward, deletionProtection, descriptionProperty, disks,
         guestAccelerators, keyRevocationActionType, labels, machineType,
         metadata, minCpuPlatform, networkInterfaces, scheduling,
         serviceAccounts, tags;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"disks" : [GTLRCompute_SavedAttachedDisk class],
    @"guestAccelerators" : [GTLRCompute_AcceleratorConfig class],
    @"networkInterfaces" : [GTLRCompute_NetworkInterface class],
    @"serviceAccounts" : [GTLRCompute_ServiceAccount class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SourceInstanceProperties_Labels
//

@implementation GTLRCompute_SourceInstanceProperties_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificate
//

@implementation GTLRCompute_SslCertificate
@dynamic certificate, creationTimestamp, descriptionProperty, expireTime,
         identifier, kind, managed, name, privateKey, region, selfLink,
         selfManaged, subjectAlternativeNames, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"subjectAlternativeNames" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificateAggregatedList
//

@implementation GTLRCompute_SslCertificateAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificateAggregatedList_Items
//

@implementation GTLRCompute_SslCertificateAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_SslCertificatesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificateAggregatedList_Warning
//

@implementation GTLRCompute_SslCertificateAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SslCertificateAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificateAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_SslCertificateAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificateList
//

@implementation GTLRCompute_SslCertificateList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_SslCertificate class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificateList_Warning
//

@implementation GTLRCompute_SslCertificateList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SslCertificateList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificateList_Warning_Data_Item
//

@implementation GTLRCompute_SslCertificateList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificateManagedSslCertificate
//

@implementation GTLRCompute_SslCertificateManagedSslCertificate
@dynamic domains, domainStatus, status;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"domains" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificateManagedSslCertificate_DomainStatus
//

@implementation GTLRCompute_SslCertificateManagedSslCertificate_DomainStatus

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificateSelfManagedSslCertificate
//

@implementation GTLRCompute_SslCertificateSelfManagedSslCertificate
@dynamic certificate, privateKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificatesScopedList
//

@implementation GTLRCompute_SslCertificatesScopedList
@dynamic sslCertificates, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sslCertificates" : [GTLRCompute_SslCertificate class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificatesScopedList_Warning
//

@implementation GTLRCompute_SslCertificatesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SslCertificatesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslCertificatesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_SslCertificatesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SSLHealthCheck
//

@implementation GTLRCompute_SSLHealthCheck
@dynamic port, portName, portSpecification, proxyHeader, request, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPoliciesAggregatedList
//

@implementation GTLRCompute_SslPoliciesAggregatedList
@dynamic ETag, identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"ETag" : @"etag",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPoliciesAggregatedList_Items
//

@implementation GTLRCompute_SslPoliciesAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_SslPoliciesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPoliciesAggregatedList_Warning
//

@implementation GTLRCompute_SslPoliciesAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SslPoliciesAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPoliciesAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_SslPoliciesAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPoliciesList
//

@implementation GTLRCompute_SslPoliciesList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_SslPolicy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPoliciesList_Warning
//

@implementation GTLRCompute_SslPoliciesList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SslPoliciesList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPoliciesList_Warning_Data_Item
//

@implementation GTLRCompute_SslPoliciesList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPoliciesListAvailableFeaturesResponse
//

@implementation GTLRCompute_SslPoliciesListAvailableFeaturesResponse
@dynamic features;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"features" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPoliciesScopedList
//

@implementation GTLRCompute_SslPoliciesScopedList
@dynamic sslPolicies, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sslPolicies" : [GTLRCompute_SslPolicy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPoliciesScopedList_Warning
//

@implementation GTLRCompute_SslPoliciesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SslPoliciesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPoliciesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_SslPoliciesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPolicy
//

@implementation GTLRCompute_SslPolicy
@dynamic creationTimestamp, customFeatures, descriptionProperty,
         enabledFeatures, fingerprint, identifier, kind, minTlsVersion, name,
         profile, region, selfLink, warnings;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"customFeatures" : [NSString class],
    @"enabledFeatures" : [NSString class],
    @"warnings" : [GTLRCompute_SslPolicy_Warnings_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPolicy_Warnings_Item
//

@implementation GTLRCompute_SslPolicy_Warnings_Item
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SslPolicy_Warnings_Item_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPolicy_Warnings_Item_Data_Item
//

@implementation GTLRCompute_SslPolicy_Warnings_Item_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SslPolicyReference
//

@implementation GTLRCompute_SslPolicyReference
@dynamic sslPolicy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_StatefulPolicy
//

@implementation GTLRCompute_StatefulPolicy
@dynamic preservedState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_StatefulPolicyPreservedState
//

@implementation GTLRCompute_StatefulPolicyPreservedState
@dynamic disks;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_StatefulPolicyPreservedState_Disks
//

@implementation GTLRCompute_StatefulPolicyPreservedState_Disks

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_StatefulPolicyPreservedStateDiskDevice class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_StatefulPolicyPreservedStateDiskDevice
//

@implementation GTLRCompute_StatefulPolicyPreservedStateDiskDevice
@dynamic autoDelete;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Subnetwork
//

@implementation GTLRCompute_Subnetwork
@dynamic creationTimestamp, descriptionProperty, enableFlowLogs,
         externalIpv6Prefix, fingerprint, gatewayAddress, identifier,
         internalIpv6Prefix, ipCidrRange, ipv6AccessType, ipv6CidrRange, kind,
         logConfig, name, network, privateIpGoogleAccess,
         privateIpv6GoogleAccess, purpose, region, role, secondaryIpRanges,
         selfLink, stackType, state;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"secondaryIpRanges" : [GTLRCompute_SubnetworkSecondaryRange class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkAggregatedList
//

@implementation GTLRCompute_SubnetworkAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkAggregatedList_Items
//

@implementation GTLRCompute_SubnetworkAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_SubnetworksScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkAggregatedList_Warning
//

@implementation GTLRCompute_SubnetworkAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SubnetworkAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_SubnetworkAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkList
//

@implementation GTLRCompute_SubnetworkList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Subnetwork class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkList_Warning
//

@implementation GTLRCompute_SubnetworkList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SubnetworkList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkList_Warning_Data_Item
//

@implementation GTLRCompute_SubnetworkList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkLogConfig
//

@implementation GTLRCompute_SubnetworkLogConfig
@dynamic aggregationInterval, enable, filterExpr, flowSampling, metadata,
         metadataFields;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"metadataFields" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworkSecondaryRange
//

@implementation GTLRCompute_SubnetworkSecondaryRange
@dynamic ipCidrRange, rangeName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworksExpandIpCidrRangeRequest
//

@implementation GTLRCompute_SubnetworksExpandIpCidrRangeRequest
@dynamic ipCidrRange;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworksScopedList
//

@implementation GTLRCompute_SubnetworksScopedList
@dynamic subnetworks, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"subnetworks" : [GTLRCompute_Subnetwork class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworksScopedList_Warning
//

@implementation GTLRCompute_SubnetworksScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_SubnetworksScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworksScopedList_Warning_Data_Item
//

@implementation GTLRCompute_SubnetworksScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_SubnetworksSetPrivateIpGoogleAccessRequest
//

@implementation GTLRCompute_SubnetworksSetPrivateIpGoogleAccessRequest
@dynamic privateIpGoogleAccess;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Subsetting
//

@implementation GTLRCompute_Subsetting
@dynamic policy;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Tags
//

@implementation GTLRCompute_Tags
@dynamic fingerprint, items;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetGrpcProxy
//

@implementation GTLRCompute_TargetGrpcProxy
@dynamic creationTimestamp, descriptionProperty, fingerprint, identifier, kind,
         name, selfLink, selfLinkWithId, urlMap, validateForProxyless;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetGrpcProxyList
//

@implementation GTLRCompute_TargetGrpcProxyList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_TargetGrpcProxy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetGrpcProxyList_Warning
//

@implementation GTLRCompute_TargetGrpcProxyList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetGrpcProxyList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetGrpcProxyList_Warning_Data_Item
//

@implementation GTLRCompute_TargetGrpcProxyList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpProxiesScopedList
//

@implementation GTLRCompute_TargetHttpProxiesScopedList
@dynamic targetHttpProxies, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetHttpProxies" : [GTLRCompute_TargetHttpProxy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpProxiesScopedList_Warning
//

@implementation GTLRCompute_TargetHttpProxiesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetHttpProxiesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpProxiesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetHttpProxiesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpProxy
//

@implementation GTLRCompute_TargetHttpProxy
@dynamic creationTimestamp, descriptionProperty, fingerprint, identifier, kind,
         name, proxyBind, region, selfLink, urlMap;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpProxyAggregatedList
//

@implementation GTLRCompute_TargetHttpProxyAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpProxyAggregatedList_Items
//

@implementation GTLRCompute_TargetHttpProxyAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_TargetHttpProxiesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpProxyList
//

@implementation GTLRCompute_TargetHttpProxyList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_TargetHttpProxy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpProxyList_Warning
//

@implementation GTLRCompute_TargetHttpProxyList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetHttpProxyList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpProxyList_Warning_Data_Item
//

@implementation GTLRCompute_TargetHttpProxyList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxiesScopedList
//

@implementation GTLRCompute_TargetHttpsProxiesScopedList
@dynamic targetHttpsProxies, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetHttpsProxies" : [GTLRCompute_TargetHttpsProxy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxiesScopedList_Warning
//

@implementation GTLRCompute_TargetHttpsProxiesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetHttpsProxiesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxiesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetHttpsProxiesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxiesSetCertificateMapRequest
//

@implementation GTLRCompute_TargetHttpsProxiesSetCertificateMapRequest
@dynamic certificateMap;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest
//

@implementation GTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest
@dynamic quicOverride;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxiesSetSslCertificatesRequest
//

@implementation GTLRCompute_TargetHttpsProxiesSetSslCertificatesRequest
@dynamic sslCertificates;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sslCertificates" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxy
//

@implementation GTLRCompute_TargetHttpsProxy
@dynamic authorizationPolicy, certificateMap, creationTimestamp,
         descriptionProperty, fingerprint, identifier, kind, name, proxyBind,
         quicOverride, region, selfLink, serverTlsPolicy, sslCertificates,
         sslPolicy, urlMap;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sslCertificates" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxyAggregatedList
//

@implementation GTLRCompute_TargetHttpsProxyAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxyAggregatedList_Items
//

@implementation GTLRCompute_TargetHttpsProxyAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_TargetHttpsProxiesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxyAggregatedList_Warning
//

@implementation GTLRCompute_TargetHttpsProxyAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetHttpsProxyAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxyAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetHttpsProxyAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxyList
//

@implementation GTLRCompute_TargetHttpsProxyList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_TargetHttpsProxy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxyList_Warning
//

@implementation GTLRCompute_TargetHttpsProxyList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetHttpsProxyList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetHttpsProxyList_Warning_Data_Item
//

@implementation GTLRCompute_TargetHttpsProxyList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstance
//

@implementation GTLRCompute_TargetInstance
@dynamic creationTimestamp, descriptionProperty, identifier, instance, kind,
         name, natPolicy, network, selfLink, zoneProperty;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id",
    @"zoneProperty" : @"zone"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstanceAggregatedList
//

@implementation GTLRCompute_TargetInstanceAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstanceAggregatedList_Items
//

@implementation GTLRCompute_TargetInstanceAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_TargetInstancesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstanceAggregatedList_Warning
//

@implementation GTLRCompute_TargetInstanceAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetInstanceAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstanceAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetInstanceAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstanceList
//

@implementation GTLRCompute_TargetInstanceList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_TargetInstance class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstanceList_Warning
//

@implementation GTLRCompute_TargetInstanceList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetInstanceList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstanceList_Warning_Data_Item
//

@implementation GTLRCompute_TargetInstanceList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstancesScopedList
//

@implementation GTLRCompute_TargetInstancesScopedList
@dynamic targetInstances, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetInstances" : [GTLRCompute_TargetInstance class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstancesScopedList_Warning
//

@implementation GTLRCompute_TargetInstancesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetInstancesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetInstancesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetInstancesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPool
//

@implementation GTLRCompute_TargetPool
@dynamic backupPool, creationTimestamp, descriptionProperty, failoverRatio,
         healthChecks, identifier, instances, kind, name, region, selfLink,
         sessionAffinity;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"healthChecks" : [NSString class],
    @"instances" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolAggregatedList
//

@implementation GTLRCompute_TargetPoolAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolAggregatedList_Items
//

@implementation GTLRCompute_TargetPoolAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_TargetPoolsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolAggregatedList_Warning
//

@implementation GTLRCompute_TargetPoolAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetPoolAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetPoolAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolInstanceHealth
//

@implementation GTLRCompute_TargetPoolInstanceHealth
@dynamic healthStatus, kind;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"healthStatus" : [GTLRCompute_HealthStatus class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolList
//

@implementation GTLRCompute_TargetPoolList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_TargetPool class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolList_Warning
//

@implementation GTLRCompute_TargetPoolList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetPoolList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolList_Warning_Data_Item
//

@implementation GTLRCompute_TargetPoolList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolsAddHealthCheckRequest
//

@implementation GTLRCompute_TargetPoolsAddHealthCheckRequest
@dynamic healthChecks;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"healthChecks" : [GTLRCompute_HealthCheckReference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolsAddInstanceRequest
//

@implementation GTLRCompute_TargetPoolsAddInstanceRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRCompute_InstanceReference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolsRemoveHealthCheckRequest
//

@implementation GTLRCompute_TargetPoolsRemoveHealthCheckRequest
@dynamic healthChecks;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"healthChecks" : [GTLRCompute_HealthCheckReference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolsRemoveInstanceRequest
//

@implementation GTLRCompute_TargetPoolsRemoveInstanceRequest
@dynamic instances;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"instances" : [GTLRCompute_InstanceReference class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolsScopedList
//

@implementation GTLRCompute_TargetPoolsScopedList
@dynamic targetPools, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetPools" : [GTLRCompute_TargetPool class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolsScopedList_Warning
//

@implementation GTLRCompute_TargetPoolsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetPoolsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetPoolsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetPoolsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetReference
//

@implementation GTLRCompute_TargetReference
@dynamic target;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetSslProxiesSetBackendServiceRequest
//

@implementation GTLRCompute_TargetSslProxiesSetBackendServiceRequest
@dynamic service;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetSslProxiesSetCertificateMapRequest
//

@implementation GTLRCompute_TargetSslProxiesSetCertificateMapRequest
@dynamic certificateMap;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetSslProxiesSetProxyHeaderRequest
//

@implementation GTLRCompute_TargetSslProxiesSetProxyHeaderRequest
@dynamic proxyHeader;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetSslProxiesSetSslCertificatesRequest
//

@implementation GTLRCompute_TargetSslProxiesSetSslCertificatesRequest
@dynamic sslCertificates;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sslCertificates" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetSslProxy
//

@implementation GTLRCompute_TargetSslProxy
@dynamic certificateMap, creationTimestamp, descriptionProperty, identifier,
         kind, name, proxyHeader, selfLink, service, sslCertificates, sslPolicy;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sslCertificates" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetSslProxyList
//

@implementation GTLRCompute_TargetSslProxyList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_TargetSslProxy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetSslProxyList_Warning
//

@implementation GTLRCompute_TargetSslProxyList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetSslProxyList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetSslProxyList_Warning_Data_Item
//

@implementation GTLRCompute_TargetSslProxyList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxiesScopedList
//

@implementation GTLRCompute_TargetTcpProxiesScopedList
@dynamic targetTcpProxies, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetTcpProxies" : [GTLRCompute_TargetTcpProxy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxiesScopedList_Warning
//

@implementation GTLRCompute_TargetTcpProxiesScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetTcpProxiesScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxiesScopedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetTcpProxiesScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxiesSetBackendServiceRequest
//

@implementation GTLRCompute_TargetTcpProxiesSetBackendServiceRequest
@dynamic service;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxiesSetProxyHeaderRequest
//

@implementation GTLRCompute_TargetTcpProxiesSetProxyHeaderRequest
@dynamic proxyHeader;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxy
//

@implementation GTLRCompute_TargetTcpProxy
@dynamic creationTimestamp, descriptionProperty, identifier, kind, name,
         proxyBind, proxyHeader, region, selfLink, service;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxyAggregatedList
//

@implementation GTLRCompute_TargetTcpProxyAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxyAggregatedList_Items
//

@implementation GTLRCompute_TargetTcpProxyAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_TargetTcpProxiesScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxyAggregatedList_Warning
//

@implementation GTLRCompute_TargetTcpProxyAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetTcpProxyAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxyAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetTcpProxyAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxyList
//

@implementation GTLRCompute_TargetTcpProxyList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_TargetTcpProxy class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxyList_Warning
//

@implementation GTLRCompute_TargetTcpProxyList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetTcpProxyList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetTcpProxyList_Warning_Data_Item
//

@implementation GTLRCompute_TargetTcpProxyList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGateway
//

@implementation GTLRCompute_TargetVpnGateway
@dynamic creationTimestamp, descriptionProperty, forwardingRules, identifier,
         kind, name, network, region, selfLink, status, tunnels;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"forwardingRules" : [NSString class],
    @"tunnels" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewayAggregatedList
//

@implementation GTLRCompute_TargetVpnGatewayAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewayAggregatedList_Items
//

@implementation GTLRCompute_TargetVpnGatewayAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_TargetVpnGatewaysScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewayAggregatedList_Warning
//

@implementation GTLRCompute_TargetVpnGatewayAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetVpnGatewayAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewayAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetVpnGatewayAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewayList
//

@implementation GTLRCompute_TargetVpnGatewayList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_TargetVpnGateway class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewayList_Warning
//

@implementation GTLRCompute_TargetVpnGatewayList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetVpnGatewayList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewayList_Warning_Data_Item
//

@implementation GTLRCompute_TargetVpnGatewayList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewaysScopedList
//

@implementation GTLRCompute_TargetVpnGatewaysScopedList
@dynamic targetVpnGateways, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"targetVpnGateways" : [GTLRCompute_TargetVpnGateway class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewaysScopedList_Warning
//

@implementation GTLRCompute_TargetVpnGatewaysScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_TargetVpnGatewaysScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TargetVpnGatewaysScopedList_Warning_Data_Item
//

@implementation GTLRCompute_TargetVpnGatewaysScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TCPHealthCheck
//

@implementation GTLRCompute_TCPHealthCheck
@dynamic port, portName, portSpecification, proxyHeader, request, response;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TestFailure
//

@implementation GTLRCompute_TestFailure
@dynamic actualOutputUrl, actualRedirectResponseCode, actualService,
         expectedOutputUrl, expectedRedirectResponseCode, expectedService,
         headers, host, path;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"headers" : [GTLRCompute_UrlMapTestHeader class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TestPermissionsRequest
//

@implementation GTLRCompute_TestPermissionsRequest
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_TestPermissionsResponse
//

@implementation GTLRCompute_TestPermissionsResponse
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Uint128
//

@implementation GTLRCompute_Uint128
@dynamic high, low;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMap
//

@implementation GTLRCompute_UrlMap
@dynamic creationTimestamp, defaultRouteAction, defaultService,
         defaultUrlRedirect, descriptionProperty, fingerprint, headerAction,
         hostRules, identifier, kind, name, pathMatchers, region, selfLink,
         tests;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"hostRules" : [GTLRCompute_HostRule class],
    @"pathMatchers" : [GTLRCompute_PathMatcher class],
    @"tests" : [GTLRCompute_UrlMapTest class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapList
//

@implementation GTLRCompute_UrlMapList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_UrlMap class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapList_Warning
//

@implementation GTLRCompute_UrlMapList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_UrlMapList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapList_Warning_Data_Item
//

@implementation GTLRCompute_UrlMapList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapReference
//

@implementation GTLRCompute_UrlMapReference
@dynamic urlMap;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapsAggregatedList
//

@implementation GTLRCompute_UrlMapsAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapsAggregatedList_Items
//

@implementation GTLRCompute_UrlMapsAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_UrlMapsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapsAggregatedList_Warning
//

@implementation GTLRCompute_UrlMapsAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_UrlMapsAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapsAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_UrlMapsAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapsScopedList
//

@implementation GTLRCompute_UrlMapsScopedList
@dynamic urlMaps, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"urlMaps" : [GTLRCompute_UrlMap class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapsScopedList_Warning
//

@implementation GTLRCompute_UrlMapsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_UrlMapsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_UrlMapsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapsValidateRequest
//

@implementation GTLRCompute_UrlMapsValidateRequest
@dynamic loadBalancingSchemes, resource;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"loadBalancingSchemes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapsValidateResponse
//

@implementation GTLRCompute_UrlMapsValidateResponse
@dynamic result;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapTest
//

@implementation GTLRCompute_UrlMapTest
@dynamic descriptionProperty, expectedOutputUrl, expectedRedirectResponseCode,
         headers, host, path, service;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"headers" : [GTLRCompute_UrlMapTestHeader class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapTestHeader
//

@implementation GTLRCompute_UrlMapTestHeader
@dynamic name, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlMapValidationResult
//

@implementation GTLRCompute_UrlMapValidationResult
@dynamic loadErrors, loadSucceeded, testFailures, testPassed;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"loadErrors" : [NSString class],
    @"testFailures" : [GTLRCompute_TestFailure class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UrlRewrite
//

@implementation GTLRCompute_UrlRewrite
@dynamic hostRewrite, pathPrefixRewrite;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UsableSubnetwork
//

@implementation GTLRCompute_UsableSubnetwork
@dynamic externalIpv6Prefix, internalIpv6Prefix, ipCidrRange, ipv6AccessType,
         network, purpose, role, secondaryIpRanges, stackType, subnetwork;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"secondaryIpRanges" : [GTLRCompute_UsableSubnetworkSecondaryRange class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UsableSubnetworksAggregatedList
//

@implementation GTLRCompute_UsableSubnetworksAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_UsableSubnetwork class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UsableSubnetworksAggregatedList_Warning
//

@implementation GTLRCompute_UsableSubnetworksAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_UsableSubnetworksAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UsableSubnetworksAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_UsableSubnetworksAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UsableSubnetworkSecondaryRange
//

@implementation GTLRCompute_UsableSubnetworkSecondaryRange
@dynamic ipCidrRange, rangeName;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_UsageExportLocation
//

@implementation GTLRCompute_UsageExportLocation
@dynamic bucketName, reportNamePrefix;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VmEndpointNatMappings
//

@implementation GTLRCompute_VmEndpointNatMappings
@dynamic instanceName, interfaceNatMappings;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"interfaceNatMappings" : [GTLRCompute_VmEndpointNatMappingsInterfaceNatMappings class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VmEndpointNatMappingsInterfaceNatMappings
//

@implementation GTLRCompute_VmEndpointNatMappingsInterfaceNatMappings
@dynamic drainNatIpPortRanges, natIpPortRanges, numTotalDrainNatPorts,
         numTotalNatPorts, ruleMappings, sourceAliasIpRange, sourceVirtualIp;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"drainNatIpPortRanges" : [NSString class],
    @"natIpPortRanges" : [NSString class],
    @"ruleMappings" : [GTLRCompute_VmEndpointNatMappingsInterfaceNatMappingsNatRuleMappings class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VmEndpointNatMappingsInterfaceNatMappingsNatRuleMappings
//

@implementation GTLRCompute_VmEndpointNatMappingsInterfaceNatMappingsNatRuleMappings
@dynamic drainNatIpPortRanges, natIpPortRanges, numTotalDrainNatPorts,
         numTotalNatPorts, ruleNumber;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"drainNatIpPortRanges" : [NSString class],
    @"natIpPortRanges" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VmEndpointNatMappingsList
//

@implementation GTLRCompute_VmEndpointNatMappingsList
@dynamic identifier, kind, nextPageToken, result, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"result" : [GTLRCompute_VmEndpointNatMappings class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"result";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VmEndpointNatMappingsList_Warning
//

@implementation GTLRCompute_VmEndpointNatMappingsList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_VmEndpointNatMappingsList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VmEndpointNatMappingsList_Warning_Data_Item
//

@implementation GTLRCompute_VmEndpointNatMappingsList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGateway
//

@implementation GTLRCompute_VpnGateway
@dynamic creationTimestamp, descriptionProperty, identifier, kind,
         labelFingerprint, labels, name, network, region, selfLink, stackType,
         vpnInterfaces;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"vpnInterfaces" : [GTLRCompute_VpnGatewayVpnGatewayInterface class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGateway_Labels
//

@implementation GTLRCompute_VpnGateway_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewayAggregatedList
//

@implementation GTLRCompute_VpnGatewayAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewayAggregatedList_Items
//

@implementation GTLRCompute_VpnGatewayAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_VpnGatewaysScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewayAggregatedList_Warning
//

@implementation GTLRCompute_VpnGatewayAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_VpnGatewayAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewayAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_VpnGatewayAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewayList
//

@implementation GTLRCompute_VpnGatewayList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_VpnGateway class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewayList_Warning
//

@implementation GTLRCompute_VpnGatewayList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_VpnGatewayList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewayList_Warning_Data_Item
//

@implementation GTLRCompute_VpnGatewayList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewaysGetStatusResponse
//

@implementation GTLRCompute_VpnGatewaysGetStatusResponse
@dynamic result;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewaysScopedList
//

@implementation GTLRCompute_VpnGatewaysScopedList
@dynamic vpnGateways, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"vpnGateways" : [GTLRCompute_VpnGateway class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewaysScopedList_Warning
//

@implementation GTLRCompute_VpnGatewaysScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_VpnGatewaysScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewaysScopedList_Warning_Data_Item
//

@implementation GTLRCompute_VpnGatewaysScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewayStatus
//

@implementation GTLRCompute_VpnGatewayStatus
@dynamic vpnConnections;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"vpnConnections" : [GTLRCompute_VpnGatewayStatusVpnConnection class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState
//

@implementation GTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState
@dynamic state, unsatisfiedReason;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewayStatusTunnel
//

@implementation GTLRCompute_VpnGatewayStatusTunnel
@dynamic localGatewayInterface, peerGatewayInterface, tunnelUrl;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewayStatusVpnConnection
//

@implementation GTLRCompute_VpnGatewayStatusVpnConnection
@dynamic peerExternalGateway, peerGcpGateway, state, tunnels;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"tunnels" : [GTLRCompute_VpnGatewayStatusTunnel class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnGatewayVpnGatewayInterface
//

@implementation GTLRCompute_VpnGatewayVpnGatewayInterface
@dynamic identifier, interconnectAttachment, ipAddress;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnel
//

@implementation GTLRCompute_VpnTunnel
@dynamic creationTimestamp, descriptionProperty, detailedStatus, identifier,
         ikeVersion, kind, localTrafficSelector, name, peerExternalGateway,
         peerExternalGatewayInterface, peerGcpGateway, peerIp, region,
         remoteTrafficSelector, router, selfLink, sharedSecret,
         sharedSecretHash, status, targetVpnGateway, vpnGateway,
         vpnGatewayInterface;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"localTrafficSelector" : [NSString class],
    @"remoteTrafficSelector" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelAggregatedList
//

@implementation GTLRCompute_VpnTunnelAggregatedList
@dynamic identifier, items, kind, nextPageToken, selfLink, unreachables,
         warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"unreachables" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelAggregatedList_Items
//

@implementation GTLRCompute_VpnTunnelAggregatedList_Items

+ (Class)classForAdditionalProperties {
  return [GTLRCompute_VpnTunnelsScopedList class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelAggregatedList_Warning
//

@implementation GTLRCompute_VpnTunnelAggregatedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_VpnTunnelAggregatedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelAggregatedList_Warning_Data_Item
//

@implementation GTLRCompute_VpnTunnelAggregatedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelList
//

@implementation GTLRCompute_VpnTunnelList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_VpnTunnel class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelList_Warning
//

@implementation GTLRCompute_VpnTunnelList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_VpnTunnelList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelList_Warning_Data_Item
//

@implementation GTLRCompute_VpnTunnelList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelsScopedList
//

@implementation GTLRCompute_VpnTunnelsScopedList
@dynamic vpnTunnels, warning;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"vpnTunnels" : [GTLRCompute_VpnTunnel class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelsScopedList_Warning
//

@implementation GTLRCompute_VpnTunnelsScopedList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_VpnTunnelsScopedList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_VpnTunnelsScopedList_Warning_Data_Item
//

@implementation GTLRCompute_VpnTunnelsScopedList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_WafExpressionSet
//

@implementation GTLRCompute_WafExpressionSet
@dynamic aliases, expressions, identifier;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"aliases" : [NSString class],
    @"expressions" : [GTLRCompute_WafExpressionSetExpression class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_WafExpressionSetExpression
//

@implementation GTLRCompute_WafExpressionSetExpression
@dynamic identifier;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_WeightedBackendService
//

@implementation GTLRCompute_WeightedBackendService
@dynamic backendService, headerAction, weight;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_XpnHostList
//

@implementation GTLRCompute_XpnHostList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Project class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_XpnHostList_Warning
//

@implementation GTLRCompute_XpnHostList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_XpnHostList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_XpnHostList_Warning_Data_Item
//

@implementation GTLRCompute_XpnHostList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_XpnResourceId
//

@implementation GTLRCompute_XpnResourceId
@dynamic identifier, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_Zone
//

@implementation GTLRCompute_Zone
@dynamic availableCpuPlatforms, creationTimestamp, deprecated,
         descriptionProperty, identifier, kind, name, region, selfLink, status,
         supportsPzs;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  NSDictionary<NSString *, NSString *> *map = @{
    @"descriptionProperty" : @"description",
    @"identifier" : @"id"
  };
  return map;
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"availableCpuPlatforms" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ZoneList
//

@implementation GTLRCompute_ZoneList
@dynamic identifier, items, kind, nextPageToken, selfLink, warning;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"items" : [GTLRCompute_Zone class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ZoneList_Warning
//

@implementation GTLRCompute_ZoneList_Warning
@dynamic code, data, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"data" : [GTLRCompute_ZoneList_Warning_Data_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ZoneList_Warning_Data_Item
//

@implementation GTLRCompute_ZoneList_Warning_Data_Item
@dynamic key, value;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ZoneSetLabelsRequest
//

@implementation GTLRCompute_ZoneSetLabelsRequest
@dynamic labelFingerprint, labels;
@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ZoneSetLabelsRequest_Labels
//

@implementation GTLRCompute_ZoneSetLabelsRequest_Labels

+ (Class)classForAdditionalProperties {
  return [NSString class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRCompute_ZoneSetPolicyRequest
//

@implementation GTLRCompute_ZoneSetPolicyRequest
@dynamic bindings, ETag, policy;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"bindings" : [GTLRCompute_Binding class]
  };
  return map;
}

@end
