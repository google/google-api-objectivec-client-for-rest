// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Compute Engine API (compute/v1)
// Description:
//   Creates and runs virtual machines on Google Cloud Platform.
// Documentation:
//   https://cloud.google.com/compute/

#import <GoogleAPIClientForREST/GTLRObject.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

@class GTLRCompute_AcceleratorConfig;
@class GTLRCompute_AcceleratorType;
@class GTLRCompute_AcceleratorTypeAggregatedList_Items;
@class GTLRCompute_AcceleratorTypeAggregatedList_Warning;
@class GTLRCompute_AcceleratorTypeAggregatedList_Warning_Data_Item;
@class GTLRCompute_AcceleratorTypeList_Warning;
@class GTLRCompute_AcceleratorTypeList_Warning_Data_Item;
@class GTLRCompute_AcceleratorTypesScopedList;
@class GTLRCompute_AcceleratorTypesScopedList_Warning;
@class GTLRCompute_AcceleratorTypesScopedList_Warning_Data_Item;
@class GTLRCompute_AccessConfig;
@class GTLRCompute_Address;
@class GTLRCompute_AddressAggregatedList_Items;
@class GTLRCompute_AddressAggregatedList_Warning;
@class GTLRCompute_AddressAggregatedList_Warning_Data_Item;
@class GTLRCompute_AddressesScopedList;
@class GTLRCompute_AddressesScopedList_Warning;
@class GTLRCompute_AddressesScopedList_Warning_Data_Item;
@class GTLRCompute_AddressList_Warning;
@class GTLRCompute_AddressList_Warning_Data_Item;
@class GTLRCompute_AdvancedMachineFeatures;
@class GTLRCompute_AliasIpRange;
@class GTLRCompute_AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk;
@class GTLRCompute_AllocationSpecificSKUAllocationReservedInstanceProperties;
@class GTLRCompute_AllocationSpecificSKUReservation;
@class GTLRCompute_AttachedDisk;
@class GTLRCompute_AttachedDiskInitializeParams;
@class GTLRCompute_AttachedDiskInitializeParams_Labels;
@class GTLRCompute_AttachedDiskInitializeParams_ResourceManagerTags;
@class GTLRCompute_AuditConfig;
@class GTLRCompute_AuditLogConfig;
@class GTLRCompute_AuthorizationLoggingOptions;
@class GTLRCompute_Autoscaler;
@class GTLRCompute_Autoscaler_ScalingScheduleStatus;
@class GTLRCompute_AutoscalerAggregatedList_Items;
@class GTLRCompute_AutoscalerAggregatedList_Warning;
@class GTLRCompute_AutoscalerAggregatedList_Warning_Data_Item;
@class GTLRCompute_AutoscalerList_Warning;
@class GTLRCompute_AutoscalerList_Warning_Data_Item;
@class GTLRCompute_AutoscalersScopedList;
@class GTLRCompute_AutoscalersScopedList_Warning;
@class GTLRCompute_AutoscalersScopedList_Warning_Data_Item;
@class GTLRCompute_AutoscalerStatusDetails;
@class GTLRCompute_AutoscalingPolicy;
@class GTLRCompute_AutoscalingPolicy_ScalingSchedules;
@class GTLRCompute_AutoscalingPolicyCpuUtilization;
@class GTLRCompute_AutoscalingPolicyCustomMetricUtilization;
@class GTLRCompute_AutoscalingPolicyLoadBalancingUtilization;
@class GTLRCompute_AutoscalingPolicyScaleInControl;
@class GTLRCompute_AutoscalingPolicyScalingSchedule;
@class GTLRCompute_Backend;
@class GTLRCompute_BackendBucket;
@class GTLRCompute_BackendBucketCdnPolicy;
@class GTLRCompute_BackendBucketCdnPolicyBypassCacheOnRequestHeader;
@class GTLRCompute_BackendBucketCdnPolicyCacheKeyPolicy;
@class GTLRCompute_BackendBucketCdnPolicyNegativeCachingPolicy;
@class GTLRCompute_BackendBucketList_Warning;
@class GTLRCompute_BackendBucketList_Warning_Data_Item;
@class GTLRCompute_BackendService;
@class GTLRCompute_BackendServiceAggregatedList_Items;
@class GTLRCompute_BackendServiceAggregatedList_Warning;
@class GTLRCompute_BackendServiceAggregatedList_Warning_Data_Item;
@class GTLRCompute_BackendServiceCdnPolicy;
@class GTLRCompute_BackendServiceCdnPolicyBypassCacheOnRequestHeader;
@class GTLRCompute_BackendServiceCdnPolicyNegativeCachingPolicy;
@class GTLRCompute_BackendServiceConnectionTrackingPolicy;
@class GTLRCompute_BackendServiceFailoverPolicy;
@class GTLRCompute_BackendServiceGroupHealth_Annotations;
@class GTLRCompute_BackendServiceIAP;
@class GTLRCompute_BackendServiceList_Warning;
@class GTLRCompute_BackendServiceList_Warning_Data_Item;
@class GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfig;
@class GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigCustomPolicy;
@class GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy;
@class GTLRCompute_BackendServiceLogConfig;
@class GTLRCompute_BackendServiceReference;
@class GTLRCompute_BackendServicesScopedList;
@class GTLRCompute_BackendServicesScopedList_Warning;
@class GTLRCompute_BackendServicesScopedList_Warning_Data_Item;
@class GTLRCompute_BfdPacket;
@class GTLRCompute_BfdStatus;
@class GTLRCompute_BfdStatusPacketCounts;
@class GTLRCompute_Binding;
@class GTLRCompute_BulkInsertInstanceResource_PerInstanceProperties;
@class GTLRCompute_BulkInsertInstanceResourcePerInstanceProperties;
@class GTLRCompute_CacheKeyPolicy;
@class GTLRCompute_CircuitBreakers;
@class GTLRCompute_Commitment;
@class GTLRCompute_CommitmentAggregatedList_Items;
@class GTLRCompute_CommitmentAggregatedList_Warning;
@class GTLRCompute_CommitmentAggregatedList_Warning_Data_Item;
@class GTLRCompute_CommitmentList_Warning;
@class GTLRCompute_CommitmentList_Warning_Data_Item;
@class GTLRCompute_CommitmentsScopedList;
@class GTLRCompute_CommitmentsScopedList_Warning;
@class GTLRCompute_CommitmentsScopedList_Warning_Data_Item;
@class GTLRCompute_Condition;
@class GTLRCompute_ConfidentialInstanceConfig;
@class GTLRCompute_ConnectionDraining;
@class GTLRCompute_ConsistentHashLoadBalancerSettings;
@class GTLRCompute_ConsistentHashLoadBalancerSettingsHttpCookie;
@class GTLRCompute_CorsPolicy;
@class GTLRCompute_CustomerEncryptionKey;
@class GTLRCompute_CustomerEncryptionKeyProtectedDisk;
@class GTLRCompute_DeprecationStatus;
@class GTLRCompute_Disk;
@class GTLRCompute_Disk_Labels;
@class GTLRCompute_DiskAggregatedList_Items;
@class GTLRCompute_DiskAggregatedList_Warning;
@class GTLRCompute_DiskAggregatedList_Warning_Data_Item;
@class GTLRCompute_DiskInstantiationConfig;
@class GTLRCompute_DiskList_Warning;
@class GTLRCompute_DiskList_Warning_Data_Item;
@class GTLRCompute_DiskParams;
@class GTLRCompute_DiskParams_ResourceManagerTags;
@class GTLRCompute_DisksScopedList;
@class GTLRCompute_DisksScopedList_Warning;
@class GTLRCompute_DisksScopedList_Warning_Data_Item;
@class GTLRCompute_DiskType;
@class GTLRCompute_DiskTypeAggregatedList_Items;
@class GTLRCompute_DiskTypeAggregatedList_Warning;
@class GTLRCompute_DiskTypeAggregatedList_Warning_Data_Item;
@class GTLRCompute_DiskTypeList_Warning;
@class GTLRCompute_DiskTypeList_Warning_Data_Item;
@class GTLRCompute_DiskTypesScopedList;
@class GTLRCompute_DiskTypesScopedList_Warning;
@class GTLRCompute_DiskTypesScopedList_Warning_Data_Item;
@class GTLRCompute_DisplayDevice;
@class GTLRCompute_DistributionPolicy;
@class GTLRCompute_DistributionPolicyZoneConfiguration;
@class GTLRCompute_Duration;
@class GTLRCompute_ErrorInfo;
@class GTLRCompute_ErrorInfo_Metadatas;
@class GTLRCompute_ExchangedPeeringRoute;
@class GTLRCompute_ExchangedPeeringRoutesList_Warning;
@class GTLRCompute_ExchangedPeeringRoutesList_Warning_Data_Item;
@class GTLRCompute_Expr;
@class GTLRCompute_ExternalVpnGateway;
@class GTLRCompute_ExternalVpnGateway_Labels;
@class GTLRCompute_ExternalVpnGatewayInterface;
@class GTLRCompute_ExternalVpnGatewayList_Warning;
@class GTLRCompute_ExternalVpnGatewayList_Warning_Data_Item;
@class GTLRCompute_FileContentBuffer;
@class GTLRCompute_Firewall;
@class GTLRCompute_Firewall_Allowed_Item;
@class GTLRCompute_Firewall_Denied_Item;
@class GTLRCompute_FirewallList_Warning;
@class GTLRCompute_FirewallList_Warning_Data_Item;
@class GTLRCompute_FirewallLogConfig;
@class GTLRCompute_FirewallPolicy;
@class GTLRCompute_FirewallPolicyAssociation;
@class GTLRCompute_FirewallPolicyList_Warning;
@class GTLRCompute_FirewallPolicyList_Warning_Data_Item;
@class GTLRCompute_FirewallPolicyRule;
@class GTLRCompute_FirewallPolicyRuleMatcher;
@class GTLRCompute_FirewallPolicyRuleMatcherLayer4Config;
@class GTLRCompute_FirewallPolicyRuleSecureTag;
@class GTLRCompute_FixedOrPercent;
@class GTLRCompute_ForwardingRule;
@class GTLRCompute_ForwardingRule_Labels;
@class GTLRCompute_ForwardingRuleAggregatedList_Items;
@class GTLRCompute_ForwardingRuleAggregatedList_Warning;
@class GTLRCompute_ForwardingRuleAggregatedList_Warning_Data_Item;
@class GTLRCompute_ForwardingRuleList_Warning;
@class GTLRCompute_ForwardingRuleList_Warning_Data_Item;
@class GTLRCompute_ForwardingRuleReference;
@class GTLRCompute_ForwardingRuleServiceDirectoryRegistration;
@class GTLRCompute_ForwardingRulesScopedList;
@class GTLRCompute_ForwardingRulesScopedList_Warning;
@class GTLRCompute_ForwardingRulesScopedList_Warning_Data_Item;
@class GTLRCompute_GlobalSetLabelsRequest_Labels;
@class GTLRCompute_GRPCHealthCheck;
@class GTLRCompute_GuestAttributesEntry;
@class GTLRCompute_GuestAttributesValue;
@class GTLRCompute_GuestOsFeature;
@class GTLRCompute_HealthCheck;
@class GTLRCompute_HealthCheckList_Warning;
@class GTLRCompute_HealthCheckList_Warning_Data_Item;
@class GTLRCompute_HealthCheckLogConfig;
@class GTLRCompute_HealthCheckReference;
@class GTLRCompute_HealthChecksAggregatedList_Items;
@class GTLRCompute_HealthChecksAggregatedList_Warning;
@class GTLRCompute_HealthChecksAggregatedList_Warning_Data_Item;
@class GTLRCompute_HealthCheckService;
@class GTLRCompute_HealthCheckServiceReference;
@class GTLRCompute_HealthCheckServicesList_Warning;
@class GTLRCompute_HealthCheckServicesList_Warning_Data_Item;
@class GTLRCompute_HealthChecksScopedList;
@class GTLRCompute_HealthChecksScopedList_Warning;
@class GTLRCompute_HealthChecksScopedList_Warning_Data_Item;
@class GTLRCompute_HealthStatus;
@class GTLRCompute_HealthStatus_Annotations;
@class GTLRCompute_HealthStatusForNetworkEndpoint;
@class GTLRCompute_Help;
@class GTLRCompute_HelpLink;
@class GTLRCompute_HostRule;
@class GTLRCompute_HTTP2HealthCheck;
@class GTLRCompute_HttpFaultAbort;
@class GTLRCompute_HttpFaultDelay;
@class GTLRCompute_HttpFaultInjection;
@class GTLRCompute_HttpHeaderAction;
@class GTLRCompute_HttpHeaderMatch;
@class GTLRCompute_HttpHeaderOption;
@class GTLRCompute_HTTPHealthCheck;
@class GTLRCompute_HttpHealthCheck;
@class GTLRCompute_HttpHealthCheckList_Warning;
@class GTLRCompute_HttpHealthCheckList_Warning_Data_Item;
@class GTLRCompute_HttpQueryParameterMatch;
@class GTLRCompute_HttpRedirectAction;
@class GTLRCompute_HttpRetryPolicy;
@class GTLRCompute_HttpRouteAction;
@class GTLRCompute_HttpRouteRule;
@class GTLRCompute_HttpRouteRuleMatch;
@class GTLRCompute_HTTPSHealthCheck;
@class GTLRCompute_HttpsHealthCheck;
@class GTLRCompute_HttpsHealthCheckList_Warning;
@class GTLRCompute_HttpsHealthCheckList_Warning_Data_Item;
@class GTLRCompute_Image;
@class GTLRCompute_Image_Labels;
@class GTLRCompute_Image_RawDisk;
@class GTLRCompute_ImageList_Warning;
@class GTLRCompute_ImageList_Warning_Data_Item;
@class GTLRCompute_InitialStateConfig;
@class GTLRCompute_Instance;
@class GTLRCompute_Instance_Labels;
@class GTLRCompute_InstanceAggregatedList_Items;
@class GTLRCompute_InstanceAggregatedList_Warning;
@class GTLRCompute_InstanceAggregatedList_Warning_Data_Item;
@class GTLRCompute_InstanceConsumptionData;
@class GTLRCompute_InstanceConsumptionInfo;
@class GTLRCompute_InstanceGroup;
@class GTLRCompute_InstanceGroupAggregatedList_Items;
@class GTLRCompute_InstanceGroupAggregatedList_Warning;
@class GTLRCompute_InstanceGroupAggregatedList_Warning_Data_Item;
@class GTLRCompute_InstanceGroupList_Warning;
@class GTLRCompute_InstanceGroupList_Warning_Data_Item;
@class GTLRCompute_InstanceGroupManager;
@class GTLRCompute_InstanceGroupManagerActionsSummary;
@class GTLRCompute_InstanceGroupManagerAggregatedList_Items;
@class GTLRCompute_InstanceGroupManagerAggregatedList_Warning;
@class GTLRCompute_InstanceGroupManagerAggregatedList_Warning_Data_Item;
@class GTLRCompute_InstanceGroupManagerAutoHealingPolicy;
@class GTLRCompute_InstanceGroupManagerList_Warning;
@class GTLRCompute_InstanceGroupManagerList_Warning_Data_Item;
@class GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning;
@class GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Data_Item;
@class GTLRCompute_InstanceGroupManagersScopedList;
@class GTLRCompute_InstanceGroupManagersScopedList_Warning;
@class GTLRCompute_InstanceGroupManagersScopedList_Warning_Data_Item;
@class GTLRCompute_InstanceGroupManagerStatus;
@class GTLRCompute_InstanceGroupManagerStatusStateful;
@class GTLRCompute_InstanceGroupManagerStatusStatefulPerInstanceConfigs;
@class GTLRCompute_InstanceGroupManagerStatusVersionTarget;
@class GTLRCompute_InstanceGroupManagerUpdatePolicy;
@class GTLRCompute_InstanceGroupManagerVersion;
@class GTLRCompute_InstanceGroupsListInstances_Warning;
@class GTLRCompute_InstanceGroupsListInstances_Warning_Data_Item;
@class GTLRCompute_InstanceGroupsScopedList;
@class GTLRCompute_InstanceGroupsScopedList_Warning;
@class GTLRCompute_InstanceGroupsScopedList_Warning_Data_Item;
@class GTLRCompute_InstanceList_Warning;
@class GTLRCompute_InstanceList_Warning_Data_Item;
@class GTLRCompute_InstanceListReferrers_Warning;
@class GTLRCompute_InstanceListReferrers_Warning_Data_Item;
@class GTLRCompute_InstanceManagedByIgmError;
@class GTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails;
@class GTLRCompute_InstanceManagedByIgmErrorManagedInstanceError;
@class GTLRCompute_InstanceParams;
@class GTLRCompute_InstanceParams_ResourceManagerTags;
@class GTLRCompute_InstanceProperties;
@class GTLRCompute_InstanceProperties_Labels;
@class GTLRCompute_InstanceProperties_ResourceManagerTags;
@class GTLRCompute_InstanceReference;
@class GTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy;
@class GTLRCompute_InstancesScopedList;
@class GTLRCompute_InstancesScopedList_Warning;
@class GTLRCompute_InstancesScopedList_Warning_Data_Item;
@class GTLRCompute_InstancesSetLabelsRequest_Labels;
@class GTLRCompute_InstanceTemplate;
@class GTLRCompute_InstanceTemplateList_Warning;
@class GTLRCompute_InstanceTemplateList_Warning_Data_Item;
@class GTLRCompute_InstanceWithNamedPorts;
@class GTLRCompute_Int64RangeMatch;
@class GTLRCompute_Interconnect;
@class GTLRCompute_InterconnectAttachment;
@class GTLRCompute_InterconnectAttachmentAggregatedList_Items;
@class GTLRCompute_InterconnectAttachmentAggregatedList_Warning;
@class GTLRCompute_InterconnectAttachmentAggregatedList_Warning_Data_Item;
@class GTLRCompute_InterconnectAttachmentList_Warning;
@class GTLRCompute_InterconnectAttachmentList_Warning_Data_Item;
@class GTLRCompute_InterconnectAttachmentPartnerMetadata;
@class GTLRCompute_InterconnectAttachmentPrivateInfo;
@class GTLRCompute_InterconnectAttachmentsScopedList;
@class GTLRCompute_InterconnectAttachmentsScopedList_Warning;
@class GTLRCompute_InterconnectAttachmentsScopedList_Warning_Data_Item;
@class GTLRCompute_InterconnectCircuitInfo;
@class GTLRCompute_InterconnectDiagnostics;
@class GTLRCompute_InterconnectDiagnosticsARPEntry;
@class GTLRCompute_InterconnectDiagnosticsLinkLACPStatus;
@class GTLRCompute_InterconnectDiagnosticsLinkOpticalPower;
@class GTLRCompute_InterconnectDiagnosticsLinkStatus;
@class GTLRCompute_InterconnectList_Warning;
@class GTLRCompute_InterconnectList_Warning_Data_Item;
@class GTLRCompute_InterconnectLocation;
@class GTLRCompute_InterconnectLocationList_Warning;
@class GTLRCompute_InterconnectLocationList_Warning_Data_Item;
@class GTLRCompute_InterconnectLocationRegionInfo;
@class GTLRCompute_InterconnectOutageNotification;
@class GTLRCompute_License;
@class GTLRCompute_LicenseCodeLicenseAlias;
@class GTLRCompute_LicenseResourceCommitment;
@class GTLRCompute_LicenseResourceRequirements;
@class GTLRCompute_LicensesListResponse_Warning;
@class GTLRCompute_LicensesListResponse_Warning_Data_Item;
@class GTLRCompute_LocalDisk;
@class GTLRCompute_LocalizedMessage;
@class GTLRCompute_LocationPolicy;
@class GTLRCompute_LocationPolicy_Locations;
@class GTLRCompute_LocationPolicyLocation;
@class GTLRCompute_LocationPolicyLocationConstraints;
@class GTLRCompute_LogConfig;
@class GTLRCompute_LogConfigCloudAuditOptions;
@class GTLRCompute_LogConfigCounterOptions;
@class GTLRCompute_LogConfigCounterOptionsCustomField;
@class GTLRCompute_LogConfigDataAccessOptions;
@class GTLRCompute_MachineImage;
@class GTLRCompute_MachineImageList_Warning;
@class GTLRCompute_MachineImageList_Warning_Data_Item;
@class GTLRCompute_MachineType;
@class GTLRCompute_MachineType_Accelerators_Item;
@class GTLRCompute_MachineType_ScratchDisks_Item;
@class GTLRCompute_MachineTypeAggregatedList_Items;
@class GTLRCompute_MachineTypeAggregatedList_Warning;
@class GTLRCompute_MachineTypeAggregatedList_Warning_Data_Item;
@class GTLRCompute_MachineTypeList_Warning;
@class GTLRCompute_MachineTypeList_Warning_Data_Item;
@class GTLRCompute_MachineTypesScopedList;
@class GTLRCompute_MachineTypesScopedList_Warning;
@class GTLRCompute_MachineTypesScopedList_Warning_Data_Item;
@class GTLRCompute_ManagedInstance;
@class GTLRCompute_ManagedInstanceInstanceHealth;
@class GTLRCompute_ManagedInstanceLastAttempt;
@class GTLRCompute_ManagedInstanceLastAttempt_Errors;
@class GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item;
@class GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item_ErrorDetails_Item;
@class GTLRCompute_ManagedInstanceVersion;
@class GTLRCompute_Metadata;
@class GTLRCompute_Metadata_Items_Item;
@class GTLRCompute_MetadataFilter;
@class GTLRCompute_MetadataFilterLabelMatch;
@class GTLRCompute_NamedPort;
@class GTLRCompute_Network;
@class GTLRCompute_NetworkEdgeSecurityService;
@class GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Items;
@class GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning;
@class GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Data_Item;
@class GTLRCompute_NetworkEdgeSecurityServicesScopedList;
@class GTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning;
@class GTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Data_Item;
@class GTLRCompute_NetworkEndpoint;
@class GTLRCompute_NetworkEndpoint_Annotations;
@class GTLRCompute_NetworkEndpointGroup;
@class GTLRCompute_NetworkEndpointGroup_Annotations;
@class GTLRCompute_NetworkEndpointGroupAggregatedList_Items;
@class GTLRCompute_NetworkEndpointGroupAggregatedList_Warning;
@class GTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Data_Item;
@class GTLRCompute_NetworkEndpointGroupAppEngine;
@class GTLRCompute_NetworkEndpointGroupCloudFunction;
@class GTLRCompute_NetworkEndpointGroupCloudRun;
@class GTLRCompute_NetworkEndpointGroupList_Warning;
@class GTLRCompute_NetworkEndpointGroupList_Warning_Data_Item;
@class GTLRCompute_NetworkEndpointGroupPscData;
@class GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning;
@class GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Data_Item;
@class GTLRCompute_NetworkEndpointGroupsScopedList;
@class GTLRCompute_NetworkEndpointGroupsScopedList_Warning;
@class GTLRCompute_NetworkEndpointGroupsScopedList_Warning_Data_Item;
@class GTLRCompute_NetworkEndpointWithHealthStatus;
@class GTLRCompute_NetworkInterface;
@class GTLRCompute_NetworkList_Warning;
@class GTLRCompute_NetworkList_Warning_Data_Item;
@class GTLRCompute_NetworkPeering;
@class GTLRCompute_NetworkPerformanceConfig;
@class GTLRCompute_NetworkRoutingConfig;
@class GTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy;
@class GTLRCompute_NodeGroup;
@class GTLRCompute_NodeGroupAggregatedList_Items;
@class GTLRCompute_NodeGroupAggregatedList_Warning;
@class GTLRCompute_NodeGroupAggregatedList_Warning_Data_Item;
@class GTLRCompute_NodeGroupAutoscalingPolicy;
@class GTLRCompute_NodeGroupList_Warning;
@class GTLRCompute_NodeGroupList_Warning_Data_Item;
@class GTLRCompute_NodeGroupMaintenanceWindow;
@class GTLRCompute_NodeGroupNode;
@class GTLRCompute_NodeGroupsListNodes_Warning;
@class GTLRCompute_NodeGroupsListNodes_Warning_Data_Item;
@class GTLRCompute_NodeGroupsScopedList;
@class GTLRCompute_NodeGroupsScopedList_Warning;
@class GTLRCompute_NodeGroupsScopedList_Warning_Data_Item;
@class GTLRCompute_NodeTemplate;
@class GTLRCompute_NodeTemplate_NodeAffinityLabels;
@class GTLRCompute_NodeTemplateAggregatedList_Items;
@class GTLRCompute_NodeTemplateAggregatedList_Warning;
@class GTLRCompute_NodeTemplateAggregatedList_Warning_Data_Item;
@class GTLRCompute_NodeTemplateList_Warning;
@class GTLRCompute_NodeTemplateList_Warning_Data_Item;
@class GTLRCompute_NodeTemplateNodeTypeFlexibility;
@class GTLRCompute_NodeTemplatesScopedList;
@class GTLRCompute_NodeTemplatesScopedList_Warning;
@class GTLRCompute_NodeTemplatesScopedList_Warning_Data_Item;
@class GTLRCompute_NodeType;
@class GTLRCompute_NodeTypeAggregatedList_Items;
@class GTLRCompute_NodeTypeAggregatedList_Warning;
@class GTLRCompute_NodeTypeAggregatedList_Warning_Data_Item;
@class GTLRCompute_NodeTypeList_Warning;
@class GTLRCompute_NodeTypeList_Warning_Data_Item;
@class GTLRCompute_NodeTypesScopedList;
@class GTLRCompute_NodeTypesScopedList_Warning;
@class GTLRCompute_NodeTypesScopedList_Warning_Data_Item;
@class GTLRCompute_NotificationEndpoint;
@class GTLRCompute_NotificationEndpointGrpcSettings;
@class GTLRCompute_NotificationEndpointList_Warning;
@class GTLRCompute_NotificationEndpointList_Warning_Data_Item;
@class GTLRCompute_Operation;
@class GTLRCompute_Operation_Error;
@class GTLRCompute_Operation_Error_Errors_Item;
@class GTLRCompute_Operation_Error_Errors_Item_ErrorDetails_Item;
@class GTLRCompute_Operation_Warnings_Item;
@class GTLRCompute_Operation_Warnings_Item_Data_Item;
@class GTLRCompute_OperationAggregatedList_Items;
@class GTLRCompute_OperationAggregatedList_Warning;
@class GTLRCompute_OperationAggregatedList_Warning_Data_Item;
@class GTLRCompute_OperationList_Warning;
@class GTLRCompute_OperationList_Warning_Data_Item;
@class GTLRCompute_OperationsScopedList;
@class GTLRCompute_OperationsScopedList_Warning;
@class GTLRCompute_OperationsScopedList_Warning_Data_Item;
@class GTLRCompute_OutlierDetection;
@class GTLRCompute_PacketIntervals;
@class GTLRCompute_PacketMirroring;
@class GTLRCompute_PacketMirroringAggregatedList_Items;
@class GTLRCompute_PacketMirroringAggregatedList_Warning;
@class GTLRCompute_PacketMirroringAggregatedList_Warning_Data_Item;
@class GTLRCompute_PacketMirroringFilter;
@class GTLRCompute_PacketMirroringForwardingRuleInfo;
@class GTLRCompute_PacketMirroringList_Warning;
@class GTLRCompute_PacketMirroringList_Warning_Data_Item;
@class GTLRCompute_PacketMirroringMirroredResourceInfo;
@class GTLRCompute_PacketMirroringMirroredResourceInfoInstanceInfo;
@class GTLRCompute_PacketMirroringMirroredResourceInfoSubnetInfo;
@class GTLRCompute_PacketMirroringNetworkInfo;
@class GTLRCompute_PacketMirroringsScopedList;
@class GTLRCompute_PacketMirroringsScopedList_Warning;
@class GTLRCompute_PacketMirroringsScopedList_Warning_Data_Item;
@class GTLRCompute_PathMatcher;
@class GTLRCompute_PathRule;
@class GTLRCompute_PerInstanceConfig;
@class GTLRCompute_Policy;
@class GTLRCompute_PreconfiguredWafSet;
@class GTLRCompute_PreservedState;
@class GTLRCompute_PreservedState_Disks;
@class GTLRCompute_PreservedState_Metadata;
@class GTLRCompute_PreservedStatePreservedDisk;
@class GTLRCompute_Project;
@class GTLRCompute_PublicAdvertisedPrefix;
@class GTLRCompute_PublicAdvertisedPrefixList_Warning;
@class GTLRCompute_PublicAdvertisedPrefixList_Warning_Data_Item;
@class GTLRCompute_PublicAdvertisedPrefixPublicDelegatedPrefix;
@class GTLRCompute_PublicDelegatedPrefix;
@class GTLRCompute_PublicDelegatedPrefixAggregatedList_Items;
@class GTLRCompute_PublicDelegatedPrefixAggregatedList_Warning;
@class GTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Data_Item;
@class GTLRCompute_PublicDelegatedPrefixesScopedList;
@class GTLRCompute_PublicDelegatedPrefixesScopedList_Warning;
@class GTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Data_Item;
@class GTLRCompute_PublicDelegatedPrefixList_Warning;
@class GTLRCompute_PublicDelegatedPrefixList_Warning_Data_Item;
@class GTLRCompute_PublicDelegatedPrefixPublicDelegatedSubPrefix;
@class GTLRCompute_Quota;
@class GTLRCompute_QuotaExceededInfo;
@class GTLRCompute_QuotaExceededInfo_Dimensions;
@class GTLRCompute_Reference;
@class GTLRCompute_Region;
@class GTLRCompute_RegionAutoscalerList_Warning;
@class GTLRCompute_RegionAutoscalerList_Warning_Data_Item;
@class GTLRCompute_RegionDiskTypeList_Warning;
@class GTLRCompute_RegionDiskTypeList_Warning_Data_Item;
@class GTLRCompute_RegionInstanceGroupList_Warning;
@class GTLRCompute_RegionInstanceGroupList_Warning_Data_Item;
@class GTLRCompute_RegionInstanceGroupManagerList_Warning;
@class GTLRCompute_RegionInstanceGroupManagerList_Warning_Data_Item;
@class GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning;
@class GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Data_Item;
@class GTLRCompute_RegionInstanceGroupsListInstances_Warning;
@class GTLRCompute_RegionInstanceGroupsListInstances_Warning_Data_Item;
@class GTLRCompute_RegionList_Warning;
@class GTLRCompute_RegionList_Warning_Data_Item;
@class GTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy;
@class GTLRCompute_RegionSetLabelsRequest_Labels;
@class GTLRCompute_RequestMirrorPolicy;
@class GTLRCompute_Reservation;
@class GTLRCompute_ReservationAffinity;
@class GTLRCompute_ReservationAggregatedList_Items;
@class GTLRCompute_ReservationAggregatedList_Warning;
@class GTLRCompute_ReservationAggregatedList_Warning_Data_Item;
@class GTLRCompute_ReservationList_Warning;
@class GTLRCompute_ReservationList_Warning_Data_Item;
@class GTLRCompute_ReservationsScopedList;
@class GTLRCompute_ReservationsScopedList_Warning;
@class GTLRCompute_ReservationsScopedList_Warning_Data_Item;
@class GTLRCompute_ResourceCommitment;
@class GTLRCompute_ResourcePoliciesScopedList;
@class GTLRCompute_ResourcePoliciesScopedList_Warning;
@class GTLRCompute_ResourcePoliciesScopedList_Warning_Data_Item;
@class GTLRCompute_ResourcePolicy;
@class GTLRCompute_ResourcePolicyAggregatedList_Items;
@class GTLRCompute_ResourcePolicyAggregatedList_Warning;
@class GTLRCompute_ResourcePolicyAggregatedList_Warning_Data_Item;
@class GTLRCompute_ResourcePolicyDailyCycle;
@class GTLRCompute_ResourcePolicyGroupPlacementPolicy;
@class GTLRCompute_ResourcePolicyHourlyCycle;
@class GTLRCompute_ResourcePolicyInstanceSchedulePolicy;
@class GTLRCompute_ResourcePolicyInstanceSchedulePolicySchedule;
@class GTLRCompute_ResourcePolicyList_Warning;
@class GTLRCompute_ResourcePolicyList_Warning_Data_Item;
@class GTLRCompute_ResourcePolicyResourceStatus;
@class GTLRCompute_ResourcePolicyResourceStatusInstanceSchedulePolicyStatus;
@class GTLRCompute_ResourcePolicySnapshotSchedulePolicy;
@class GTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy;
@class GTLRCompute_ResourcePolicySnapshotSchedulePolicySchedule;
@class GTLRCompute_ResourcePolicySnapshotSchedulePolicySnapshotProperties;
@class GTLRCompute_ResourcePolicySnapshotSchedulePolicySnapshotProperties_Labels;
@class GTLRCompute_ResourcePolicyWeeklyCycle;
@class GTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek;
@class GTLRCompute_ResourceStatus;
@class GTLRCompute_Route;
@class GTLRCompute_Route_Warnings_Item;
@class GTLRCompute_Route_Warnings_Item_Data_Item;
@class GTLRCompute_RouteAsPath;
@class GTLRCompute_RouteList_Warning;
@class GTLRCompute_RouteList_Warning_Data_Item;
@class GTLRCompute_Router;
@class GTLRCompute_RouterAdvertisedIpRange;
@class GTLRCompute_RouterAggregatedList_Items;
@class GTLRCompute_RouterAggregatedList_Warning;
@class GTLRCompute_RouterAggregatedList_Warning_Data_Item;
@class GTLRCompute_RouterBgp;
@class GTLRCompute_RouterBgpPeer;
@class GTLRCompute_RouterBgpPeerBfd;
@class GTLRCompute_RouterInterface;
@class GTLRCompute_RouterList_Warning;
@class GTLRCompute_RouterList_Warning_Data_Item;
@class GTLRCompute_RouterMd5AuthenticationKey;
@class GTLRCompute_RouterNat;
@class GTLRCompute_RouterNatLogConfig;
@class GTLRCompute_RouterNatRule;
@class GTLRCompute_RouterNatRuleAction;
@class GTLRCompute_RouterNatSubnetworkToNat;
@class GTLRCompute_RoutersScopedList;
@class GTLRCompute_RoutersScopedList_Warning;
@class GTLRCompute_RoutersScopedList_Warning_Data_Item;
@class GTLRCompute_RouterStatus;
@class GTLRCompute_RouterStatusBgpPeerStatus;
@class GTLRCompute_RouterStatusNatStatus;
@class GTLRCompute_RouterStatusNatStatusNatRuleStatus;
@class GTLRCompute_Rule;
@class GTLRCompute_SavedAttachedDisk;
@class GTLRCompute_SavedDisk;
@class GTLRCompute_ScalingScheduleStatus;
@class GTLRCompute_Scheduling;
@class GTLRCompute_SchedulingNodeAffinity;
@class GTLRCompute_SecurityPoliciesAggregatedList_Items;
@class GTLRCompute_SecurityPoliciesAggregatedList_Warning;
@class GTLRCompute_SecurityPoliciesAggregatedList_Warning_Data_Item;
@class GTLRCompute_SecurityPoliciesScopedList;
@class GTLRCompute_SecurityPoliciesScopedList_Warning;
@class GTLRCompute_SecurityPoliciesScopedList_Warning_Data_Item;
@class GTLRCompute_SecurityPoliciesWafConfig;
@class GTLRCompute_SecurityPolicy;
@class GTLRCompute_SecurityPolicyAdaptiveProtectionConfig;
@class GTLRCompute_SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig;
@class GTLRCompute_SecurityPolicyAdvancedOptionsConfig;
@class GTLRCompute_SecurityPolicyAdvancedOptionsConfigJsonCustomConfig;
@class GTLRCompute_SecurityPolicyDdosProtectionConfig;
@class GTLRCompute_SecurityPolicyList_Warning;
@class GTLRCompute_SecurityPolicyList_Warning_Data_Item;
@class GTLRCompute_SecurityPolicyRecaptchaOptionsConfig;
@class GTLRCompute_SecurityPolicyRule;
@class GTLRCompute_SecurityPolicyRuleHttpHeaderAction;
@class GTLRCompute_SecurityPolicyRuleHttpHeaderActionHttpHeaderOption;
@class GTLRCompute_SecurityPolicyRuleMatcher;
@class GTLRCompute_SecurityPolicyRuleMatcherConfig;
@class GTLRCompute_SecurityPolicyRuleRateLimitOptions;
@class GTLRCompute_SecurityPolicyRuleRateLimitOptionsThreshold;
@class GTLRCompute_SecurityPolicyRuleRedirectOptions;
@class GTLRCompute_SecuritySettings;
@class GTLRCompute_ServerBinding;
@class GTLRCompute_ServiceAccount;
@class GTLRCompute_ServiceAttachment;
@class GTLRCompute_ServiceAttachmentAggregatedList_Items;
@class GTLRCompute_ServiceAttachmentAggregatedList_Warning;
@class GTLRCompute_ServiceAttachmentAggregatedList_Warning_Data_Item;
@class GTLRCompute_ServiceAttachmentConnectedEndpoint;
@class GTLRCompute_ServiceAttachmentConsumerProjectLimit;
@class GTLRCompute_ServiceAttachmentList_Warning;
@class GTLRCompute_ServiceAttachmentList_Warning_Data_Item;
@class GTLRCompute_ServiceAttachmentsScopedList;
@class GTLRCompute_ServiceAttachmentsScopedList_Warning;
@class GTLRCompute_ServiceAttachmentsScopedList_Warning_Data_Item;
@class GTLRCompute_ShareSettings;
@class GTLRCompute_ShareSettings_ProjectMap;
@class GTLRCompute_ShareSettingsProjectConfig;
@class GTLRCompute_ShieldedInstanceConfig;
@class GTLRCompute_ShieldedInstanceIdentityEntry;
@class GTLRCompute_ShieldedInstanceIntegrityPolicy;
@class GTLRCompute_Snapshot;
@class GTLRCompute_Snapshot_Labels;
@class GTLRCompute_SnapshotList_Warning;
@class GTLRCompute_SnapshotList_Warning_Data_Item;
@class GTLRCompute_SourceDiskEncryptionKey;
@class GTLRCompute_SourceInstanceParams;
@class GTLRCompute_SourceInstanceProperties;
@class GTLRCompute_SourceInstanceProperties_Labels;
@class GTLRCompute_SslCertificate;
@class GTLRCompute_SslCertificateAggregatedList_Items;
@class GTLRCompute_SslCertificateAggregatedList_Warning;
@class GTLRCompute_SslCertificateAggregatedList_Warning_Data_Item;
@class GTLRCompute_SslCertificateList_Warning;
@class GTLRCompute_SslCertificateList_Warning_Data_Item;
@class GTLRCompute_SslCertificateManagedSslCertificate;
@class GTLRCompute_SslCertificateManagedSslCertificate_DomainStatus;
@class GTLRCompute_SslCertificateSelfManagedSslCertificate;
@class GTLRCompute_SslCertificatesScopedList;
@class GTLRCompute_SslCertificatesScopedList_Warning;
@class GTLRCompute_SslCertificatesScopedList_Warning_Data_Item;
@class GTLRCompute_SSLHealthCheck;
@class GTLRCompute_SslPoliciesAggregatedList_Items;
@class GTLRCompute_SslPoliciesAggregatedList_Warning;
@class GTLRCompute_SslPoliciesAggregatedList_Warning_Data_Item;
@class GTLRCompute_SslPoliciesList_Warning;
@class GTLRCompute_SslPoliciesList_Warning_Data_Item;
@class GTLRCompute_SslPoliciesScopedList;
@class GTLRCompute_SslPoliciesScopedList_Warning;
@class GTLRCompute_SslPoliciesScopedList_Warning_Data_Item;
@class GTLRCompute_SslPolicy;
@class GTLRCompute_SslPolicy_Warnings_Item;
@class GTLRCompute_SslPolicy_Warnings_Item_Data_Item;
@class GTLRCompute_StatefulPolicy;
@class GTLRCompute_StatefulPolicyPreservedState;
@class GTLRCompute_StatefulPolicyPreservedState_Disks;
@class GTLRCompute_StatefulPolicyPreservedStateDiskDevice;
@class GTLRCompute_Subnetwork;
@class GTLRCompute_SubnetworkAggregatedList_Items;
@class GTLRCompute_SubnetworkAggregatedList_Warning;
@class GTLRCompute_SubnetworkAggregatedList_Warning_Data_Item;
@class GTLRCompute_SubnetworkList_Warning;
@class GTLRCompute_SubnetworkList_Warning_Data_Item;
@class GTLRCompute_SubnetworkLogConfig;
@class GTLRCompute_SubnetworkSecondaryRange;
@class GTLRCompute_SubnetworksScopedList;
@class GTLRCompute_SubnetworksScopedList_Warning;
@class GTLRCompute_SubnetworksScopedList_Warning_Data_Item;
@class GTLRCompute_Subsetting;
@class GTLRCompute_Tags;
@class GTLRCompute_TargetGrpcProxy;
@class GTLRCompute_TargetGrpcProxyList_Warning;
@class GTLRCompute_TargetGrpcProxyList_Warning_Data_Item;
@class GTLRCompute_TargetHttpProxiesScopedList;
@class GTLRCompute_TargetHttpProxiesScopedList_Warning;
@class GTLRCompute_TargetHttpProxiesScopedList_Warning_Data_Item;
@class GTLRCompute_TargetHttpProxy;
@class GTLRCompute_TargetHttpProxyAggregatedList_Items;
@class GTLRCompute_TargetHttpProxyList_Warning;
@class GTLRCompute_TargetHttpProxyList_Warning_Data_Item;
@class GTLRCompute_TargetHttpsProxiesScopedList;
@class GTLRCompute_TargetHttpsProxiesScopedList_Warning;
@class GTLRCompute_TargetHttpsProxiesScopedList_Warning_Data_Item;
@class GTLRCompute_TargetHttpsProxy;
@class GTLRCompute_TargetHttpsProxyAggregatedList_Items;
@class GTLRCompute_TargetHttpsProxyAggregatedList_Warning;
@class GTLRCompute_TargetHttpsProxyAggregatedList_Warning_Data_Item;
@class GTLRCompute_TargetHttpsProxyList_Warning;
@class GTLRCompute_TargetHttpsProxyList_Warning_Data_Item;
@class GTLRCompute_TargetInstance;
@class GTLRCompute_TargetInstanceAggregatedList_Items;
@class GTLRCompute_TargetInstanceAggregatedList_Warning;
@class GTLRCompute_TargetInstanceAggregatedList_Warning_Data_Item;
@class GTLRCompute_TargetInstanceList_Warning;
@class GTLRCompute_TargetInstanceList_Warning_Data_Item;
@class GTLRCompute_TargetInstancesScopedList;
@class GTLRCompute_TargetInstancesScopedList_Warning;
@class GTLRCompute_TargetInstancesScopedList_Warning_Data_Item;
@class GTLRCompute_TargetPool;
@class GTLRCompute_TargetPoolAggregatedList_Items;
@class GTLRCompute_TargetPoolAggregatedList_Warning;
@class GTLRCompute_TargetPoolAggregatedList_Warning_Data_Item;
@class GTLRCompute_TargetPoolList_Warning;
@class GTLRCompute_TargetPoolList_Warning_Data_Item;
@class GTLRCompute_TargetPoolsScopedList;
@class GTLRCompute_TargetPoolsScopedList_Warning;
@class GTLRCompute_TargetPoolsScopedList_Warning_Data_Item;
@class GTLRCompute_TargetSslProxy;
@class GTLRCompute_TargetSslProxyList_Warning;
@class GTLRCompute_TargetSslProxyList_Warning_Data_Item;
@class GTLRCompute_TargetTcpProxiesScopedList;
@class GTLRCompute_TargetTcpProxiesScopedList_Warning;
@class GTLRCompute_TargetTcpProxiesScopedList_Warning_Data_Item;
@class GTLRCompute_TargetTcpProxy;
@class GTLRCompute_TargetTcpProxyAggregatedList_Items;
@class GTLRCompute_TargetTcpProxyAggregatedList_Warning;
@class GTLRCompute_TargetTcpProxyAggregatedList_Warning_Data_Item;
@class GTLRCompute_TargetTcpProxyList_Warning;
@class GTLRCompute_TargetTcpProxyList_Warning_Data_Item;
@class GTLRCompute_TargetVpnGateway;
@class GTLRCompute_TargetVpnGatewayAggregatedList_Items;
@class GTLRCompute_TargetVpnGatewayAggregatedList_Warning;
@class GTLRCompute_TargetVpnGatewayAggregatedList_Warning_Data_Item;
@class GTLRCompute_TargetVpnGatewayList_Warning;
@class GTLRCompute_TargetVpnGatewayList_Warning_Data_Item;
@class GTLRCompute_TargetVpnGatewaysScopedList;
@class GTLRCompute_TargetVpnGatewaysScopedList_Warning;
@class GTLRCompute_TargetVpnGatewaysScopedList_Warning_Data_Item;
@class GTLRCompute_TCPHealthCheck;
@class GTLRCompute_TestFailure;
@class GTLRCompute_Uint128;
@class GTLRCompute_UrlMap;
@class GTLRCompute_UrlMapList_Warning;
@class GTLRCompute_UrlMapList_Warning_Data_Item;
@class GTLRCompute_UrlMapsAggregatedList_Items;
@class GTLRCompute_UrlMapsAggregatedList_Warning;
@class GTLRCompute_UrlMapsAggregatedList_Warning_Data_Item;
@class GTLRCompute_UrlMapsScopedList;
@class GTLRCompute_UrlMapsScopedList_Warning;
@class GTLRCompute_UrlMapsScopedList_Warning_Data_Item;
@class GTLRCompute_UrlMapTest;
@class GTLRCompute_UrlMapTestHeader;
@class GTLRCompute_UrlMapValidationResult;
@class GTLRCompute_UrlRewrite;
@class GTLRCompute_UsableSubnetwork;
@class GTLRCompute_UsableSubnetworksAggregatedList_Warning;
@class GTLRCompute_UsableSubnetworksAggregatedList_Warning_Data_Item;
@class GTLRCompute_UsableSubnetworkSecondaryRange;
@class GTLRCompute_UsageExportLocation;
@class GTLRCompute_VmEndpointNatMappings;
@class GTLRCompute_VmEndpointNatMappingsInterfaceNatMappings;
@class GTLRCompute_VmEndpointNatMappingsInterfaceNatMappingsNatRuleMappings;
@class GTLRCompute_VmEndpointNatMappingsList_Warning;
@class GTLRCompute_VmEndpointNatMappingsList_Warning_Data_Item;
@class GTLRCompute_VpnGateway;
@class GTLRCompute_VpnGateway_Labels;
@class GTLRCompute_VpnGatewayAggregatedList_Items;
@class GTLRCompute_VpnGatewayAggregatedList_Warning;
@class GTLRCompute_VpnGatewayAggregatedList_Warning_Data_Item;
@class GTLRCompute_VpnGatewayList_Warning;
@class GTLRCompute_VpnGatewayList_Warning_Data_Item;
@class GTLRCompute_VpnGatewaysScopedList;
@class GTLRCompute_VpnGatewaysScopedList_Warning;
@class GTLRCompute_VpnGatewaysScopedList_Warning_Data_Item;
@class GTLRCompute_VpnGatewayStatus;
@class GTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState;
@class GTLRCompute_VpnGatewayStatusTunnel;
@class GTLRCompute_VpnGatewayStatusVpnConnection;
@class GTLRCompute_VpnGatewayVpnGatewayInterface;
@class GTLRCompute_VpnTunnel;
@class GTLRCompute_VpnTunnelAggregatedList_Items;
@class GTLRCompute_VpnTunnelAggregatedList_Warning;
@class GTLRCompute_VpnTunnelAggregatedList_Warning_Data_Item;
@class GTLRCompute_VpnTunnelList_Warning;
@class GTLRCompute_VpnTunnelList_Warning_Data_Item;
@class GTLRCompute_VpnTunnelsScopedList;
@class GTLRCompute_VpnTunnelsScopedList_Warning;
@class GTLRCompute_VpnTunnelsScopedList_Warning_Data_Item;
@class GTLRCompute_WafExpressionSet;
@class GTLRCompute_WafExpressionSetExpression;
@class GTLRCompute_WeightedBackendService;
@class GTLRCompute_XpnHostList_Warning;
@class GTLRCompute_XpnHostList_Warning_Data_Item;
@class GTLRCompute_XpnResourceId;
@class GTLRCompute_Zone;
@class GTLRCompute_ZoneList_Warning;
@class GTLRCompute_ZoneList_Warning_Data_Item;
@class GTLRCompute_ZoneSetLabelsRequest_Labels;

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the classes' properties below.

// ----------------------------------------------------------------------------
// GTLRCompute_AcceleratorTypeAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_AcceleratorTypeList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypeList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_AcceleratorTypesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_AccessConfig.networkTier

/**
 *  Public internet quality with fixed bandwidth.
 *
 *  Value: "FIXED_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AccessConfig_NetworkTier_FixedStandard;
/**
 *  High quality, Google-grade network tier, support for all networking
 *  products.
 *
 *  Value: "PREMIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AccessConfig_NetworkTier_Premium;
/**
 *  Public internet quality, only limited support for other networking products.
 *
 *  Value: "STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AccessConfig_NetworkTier_Standard;
/**
 *  (Output only) Temporary tier for FIXED_STANDARD when fixed standard tier is
 *  expired or not configured.
 *
 *  Value: "STANDARD_OVERRIDES_FIXED_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AccessConfig_NetworkTier_StandardOverridesFixedStandard;

// ----------------------------------------------------------------------------
// GTLRCompute_AccessConfig.type

/** Value: "DIRECT_IPV6" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AccessConfig_Type_DirectIpv6;
/** Value: "ONE_TO_ONE_NAT" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AccessConfig_Type_OneToOneNat;

// ----------------------------------------------------------------------------
// GTLRCompute_Address.addressType

/**
 *  A publicly visible external IP address.
 *
 *  Value: "EXTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_AddressType_External;
/**
 *  A private network IP address, for use with an Instance or Internal Load
 *  Balancer forwarding rule.
 *
 *  Value: "INTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_AddressType_Internal;
/** Value: "UNSPECIFIED_TYPE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_AddressType_UnspecifiedType;

// ----------------------------------------------------------------------------
// GTLRCompute_Address.ipv6EndpointType

/**
 *  Reserved IPv6 address can be used on network load balancer.
 *
 *  Value: "NETLB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_Ipv6EndpointType_Netlb;
/**
 *  Reserved IPv6 address can be used on VM.
 *
 *  Value: "VM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_Ipv6EndpointType_Vm;

// ----------------------------------------------------------------------------
// GTLRCompute_Address.ipVersion

/** Value: "IPV4" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_IpVersion_Ipv4;
/** Value: "IPV6" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_IpVersion_Ipv6;
/** Value: "UNSPECIFIED_VERSION" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_IpVersion_UnspecifiedVersion;

// ----------------------------------------------------------------------------
// GTLRCompute_Address.networkTier

/**
 *  Public internet quality with fixed bandwidth.
 *
 *  Value: "FIXED_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_NetworkTier_FixedStandard;
/**
 *  High quality, Google-grade network tier, support for all networking
 *  products.
 *
 *  Value: "PREMIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_NetworkTier_Premium;
/**
 *  Public internet quality, only limited support for other networking products.
 *
 *  Value: "STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_NetworkTier_Standard;
/**
 *  (Output only) Temporary tier for FIXED_STANDARD when fixed standard tier is
 *  expired or not configured.
 *
 *  Value: "STANDARD_OVERRIDES_FIXED_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_NetworkTier_StandardOverridesFixedStandard;

// ----------------------------------------------------------------------------
// GTLRCompute_Address.purpose

/**
 *  DNS resolver address in the subnetwork.
 *
 *  Value: "DNS_RESOLVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_Purpose_DnsResolver;
/**
 *  VM internal/alias IP, Internal LB service IP, etc.
 *
 *  Value: "GCE_ENDPOINT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_Purpose_GceEndpoint;
/**
 *  A regional internal IP address range reserved for the VLAN attachment that
 *  is used in HA VPN over Cloud Interconnect. This regional internal IP address
 *  range must not overlap with any IP address range of subnet/route in the VPC
 *  network and its peering networks. After the VLAN attachment is created with
 *  the reserved IP address range, when creating a new VPN gateway, its
 *  interface IP address is allocated from the associated VLAN attachment’s IP
 *  address range.
 *
 *  Value: "IPSEC_INTERCONNECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_Purpose_IpsecInterconnect;
/**
 *  External IP automatically reserved for Cloud NAT.
 *
 *  Value: "NAT_AUTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_Purpose_NatAuto;
/**
 *  A private network IP address that can be used to configure Private Service
 *  Connect. This purpose can be specified only for GLOBAL addresses of Type
 *  INTERNAL
 *
 *  Value: "PRIVATE_SERVICE_CONNECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_Purpose_PrivateServiceConnect;
/**
 *  A regional internal IP address range reserved for Serverless.
 *
 *  Value: "SERVERLESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_Purpose_Serverless;
/**
 *  A private network IP address that can be shared by multiple Internal Load
 *  Balancer forwarding rules.
 *
 *  Value: "SHARED_LOADBALANCER_VIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_Purpose_SharedLoadbalancerVip;
/**
 *  IP range for peer networks.
 *
 *  Value: "VPC_PEERING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_Purpose_VpcPeering;

// ----------------------------------------------------------------------------
// GTLRCompute_Address.status

/**
 *  Address is being used by another resource and is not available.
 *
 *  Value: "IN_USE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_Status_InUse;
/**
 *  Address is reserved and available to use.
 *
 *  Value: "RESERVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_Status_Reserved;
/**
 *  Address is being reserved.
 *
 *  Value: "RESERVING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Address_Status_Reserving;

// ----------------------------------------------------------------------------
// GTLRCompute_AddressAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_AddressesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_AddressList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AddressList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk.interface

/** Value: "NVME" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk_Interface_Nvme;
/** Value: "SCSI" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk_Interface_Scsi;

// ----------------------------------------------------------------------------
// GTLRCompute_AttachedDisk.architecture

/**
 *  Default value indicating Architecture is not set.
 *
 *  Value: "ARCHITECTURE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AttachedDisk_Architecture_ArchitectureUnspecified;
/**
 *  Machines with architecture ARM64
 *
 *  Value: "ARM64"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AttachedDisk_Architecture_Arm64;
/**
 *  Machines with architecture X86_64
 *
 *  Value: "X86_64"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AttachedDisk_Architecture_X8664;

// ----------------------------------------------------------------------------
// GTLRCompute_AttachedDisk.interface

/** Value: "NVME" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AttachedDisk_Interface_Nvme;
/** Value: "SCSI" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AttachedDisk_Interface_Scsi;

// ----------------------------------------------------------------------------
// GTLRCompute_AttachedDisk.mode

/**
 *  Attaches this disk in read-only mode. Multiple virtual machines can use a
 *  disk in read-only mode at a time.
 *
 *  Value: "READ_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AttachedDisk_Mode_ReadOnly;
/**
 *  *[Default]* Attaches this disk in read-write mode. Only one virtual machine
 *  at a time can be attached to a disk in read-write mode.
 *
 *  Value: "READ_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AttachedDisk_Mode_ReadWrite;

// ----------------------------------------------------------------------------
// GTLRCompute_AttachedDisk.type

/** Value: "PERSISTENT" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AttachedDisk_Type_Persistent;
/** Value: "SCRATCH" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AttachedDisk_Type_Scratch;

// ----------------------------------------------------------------------------
// GTLRCompute_AttachedDiskInitializeParams.architecture

/**
 *  Default value indicating Architecture is not set.
 *
 *  Value: "ARCHITECTURE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AttachedDiskInitializeParams_Architecture_ArchitectureUnspecified;
/**
 *  Machines with architecture ARM64
 *
 *  Value: "ARM64"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AttachedDiskInitializeParams_Architecture_Arm64;
/**
 *  Machines with architecture X86_64
 *
 *  Value: "X86_64"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AttachedDiskInitializeParams_Architecture_X8664;

// ----------------------------------------------------------------------------
// GTLRCompute_AttachedDiskInitializeParams.onUpdateAction

/**
 *  Always recreate the disk.
 *
 *  Value: "RECREATE_DISK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AttachedDiskInitializeParams_OnUpdateAction_RecreateDisk;
/**
 *  Recreate the disk if source (image, snapshot) of this disk is different from
 *  source of existing disk.
 *
 *  Value: "RECREATE_DISK_IF_SOURCE_CHANGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AttachedDiskInitializeParams_OnUpdateAction_RecreateDiskIfSourceChanged;
/**
 *  Use the existing disk, this is the default behaviour.
 *
 *  Value: "USE_EXISTING_DISK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AttachedDiskInitializeParams_OnUpdateAction_UseExistingDisk;

// ----------------------------------------------------------------------------
// GTLRCompute_AuditLogConfig.logType

/**
 *  Admin reads. Example: CloudIAM getIamPolicy
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AuditLogConfig_LogType_AdminRead;
/**
 *  Data reads. Example: CloudSQL Users list
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AuditLogConfig_LogType_DataRead;
/**
 *  Data writes. Example: CloudSQL Users create
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AuditLogConfig_LogType_DataWrite;
/**
 *  Default case. Should never be this.
 *
 *  Value: "LOG_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AuditLogConfig_LogType_LogTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_AuthorizationLoggingOptions.permissionType

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "ADMIN_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AuthorizationLoggingOptions_PermissionType_AdminRead;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "ADMIN_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AuthorizationLoggingOptions_PermissionType_AdminWrite;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "DATA_READ"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AuthorizationLoggingOptions_PermissionType_DataRead;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "DATA_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AuthorizationLoggingOptions_PermissionType_DataWrite;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "PERMISSION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AuthorizationLoggingOptions_PermissionType_PermissionTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_Autoscaler.status

/**
 *  Configuration is acknowledged to be effective
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Autoscaler_Status_Active;
/**
 *  Configuration is being deleted
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Autoscaler_Status_Deleting;
/**
 *  Configuration has errors. Actionable for users.
 *
 *  Value: "ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Autoscaler_Status_Error;
/**
 *  Autoscaler backend hasn't read new/updated configuration
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Autoscaler_Status_Pending;

// ----------------------------------------------------------------------------
// GTLRCompute_AutoscalerAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_AutoscalerList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_AutoscalersScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalersScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_AutoscalerStatusDetails.type

/**
 *  All instances in the instance group are unhealthy (not in RUNNING state).
 *
 *  Value: "ALL_INSTANCES_UNHEALTHY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_AllInstancesUnhealthy;
/**
 *  There is no backend service attached to the instance group.
 *
 *  Value: "BACKEND_SERVICE_DOES_NOT_EXIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_BackendServiceDoesNotExist;
/**
 *  Autoscaler recommends a size greater than maxNumReplicas.
 *
 *  Value: "CAPPED_AT_MAX_NUM_REPLICAS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_CappedAtMaxNumReplicas;
/**
 *  The custom metric samples are not exported often enough to be a credible
 *  base for autoscaling.
 *
 *  Value: "CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_CustomMetricDataPointsTooSparse;
/**
 *  The custom metric that was specified does not exist or does not have the
 *  necessary labels.
 *
 *  Value: "CUSTOM_METRIC_INVALID"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_CustomMetricInvalid;
/**
 *  The minNumReplicas is equal to maxNumReplicas. This means the autoscaler
 *  cannot add or remove instances from the instance group.
 *
 *  Value: "MIN_EQUALS_MAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_MinEqualsMax;
/**
 *  The autoscaler did not receive any data from the custom metric configured
 *  for autoscaling.
 *
 *  Value: "MISSING_CUSTOM_METRIC_DATA_POINTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_MissingCustomMetricDataPoints;
/**
 *  The autoscaler is configured to scale based on a load balancing signal but
 *  the instance group has not received any requests from the load balancer.
 *
 *  Value: "MISSING_LOAD_BALANCING_DATA_POINTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_MissingLoadBalancingDataPoints;
/**
 *  Autoscaling is turned off. The number of instances in the group won't change
 *  automatically. The autoscaling configuration is preserved.
 *
 *  Value: "MODE_OFF"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ModeOff;
/**
 *  Autoscaling is in the "Autoscale only scale out" mode. Instances in the
 *  group will be only added.
 *
 *  Value: "MODE_ONLY_SCALE_OUT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ModeOnlyScaleOut;
/**
 *  Autoscaling is in the "Autoscale only out" mode. Instances in the group will
 *  be only added.
 *
 *  Value: "MODE_ONLY_UP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ModeOnlyUp;
/**
 *  The instance group cannot be autoscaled because it has more than one backend
 *  service attached to it.
 *
 *  Value: "MORE_THAN_ONE_BACKEND_SERVICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_MoreThanOneBackendService;
/**
 *  There is insufficient quota for the necessary resources, such as CPU or
 *  number of instances.
 *
 *  Value: "NOT_ENOUGH_QUOTA_AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_NotEnoughQuotaAvailable;
/**
 *  Showed only for regional autoscalers: there is a resource stockout in the
 *  chosen region.
 *
 *  Value: "REGION_RESOURCE_STOCKOUT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_RegionResourceStockout;
/**
 *  The target to be scaled does not exist.
 *
 *  Value: "SCALING_TARGET_DOES_NOT_EXIST"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ScalingTargetDoesNotExist;
/**
 *  For some scaling schedules minRequiredReplicas is greater than
 *  maxNumReplicas. Autoscaler always recommends at most maxNumReplicas
 *  instances.
 *
 *  Value: "SCHEDULED_INSTANCES_GREATER_THAN_AUTOSCALER_MAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ScheduledInstancesGreaterThanAutoscalerMax;
/**
 *  For some scaling schedules minRequiredReplicas is less than minNumReplicas.
 *  Autoscaler always recommends at least minNumReplicas instances.
 *
 *  Value: "SCHEDULED_INSTANCES_LESS_THAN_AUTOSCALER_MIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ScheduledInstancesLessThanAutoscalerMin;
/** Value: "UNKNOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_Unknown;
/**
 *  Autoscaling does not work with an HTTP/S load balancer that has been
 *  configured for maxRate.
 *
 *  Value: "UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_UnsupportedMaxRateLoadBalancingConfiguration;
/**
 *  For zonal autoscalers: there is a resource stockout in the chosen zone. For
 *  regional autoscalers: in at least one of the zones you're using there is a
 *  resource stockout.
 *
 *  Value: "ZONE_RESOURCE_STOCKOUT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalerStatusDetails_Type_ZoneResourceStockout;

// ----------------------------------------------------------------------------
// GTLRCompute_AutoscalingPolicy.mode

/**
 *  Do not automatically scale the MIG in or out. The recommended_size field
 *  contains the size of MIG that would be set if the actuation mode was
 *  enabled.
 *
 *  Value: "OFF"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalingPolicy_Mode_Off;
/**
 *  Automatically scale the MIG in and out according to the policy.
 *
 *  Value: "ON"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalingPolicy_Mode_On;
/**
 *  Automatically create VMs according to the policy, but do not scale the MIG
 *  in.
 *
 *  Value: "ONLY_SCALE_OUT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalingPolicy_Mode_OnlyScaleOut;
/**
 *  Automatically create VMs according to the policy, but do not scale the MIG
 *  in.
 *
 *  Value: "ONLY_UP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalingPolicy_Mode_OnlyUp;

// ----------------------------------------------------------------------------
// GTLRCompute_AutoscalingPolicyCpuUtilization.predictiveMethod

/**
 *  No predictive method is used. The autoscaler scales the group to meet
 *  current demand based on real-time metrics
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalingPolicyCpuUtilization_PredictiveMethod_None;
/**
 *  Predictive autoscaling improves availability by monitoring daily and weekly
 *  load patterns and scaling out ahead of anticipated demand.
 *
 *  Value: "OPTIMIZE_AVAILABILITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalingPolicyCpuUtilization_PredictiveMethod_OptimizeAvailability;

// ----------------------------------------------------------------------------
// GTLRCompute_AutoscalingPolicyCustomMetricUtilization.utilizationTargetType

/**
 *  Sets the utilization target value for a cumulative or delta metric,
 *  expressed as the rate of growth per minute.
 *
 *  Value: "DELTA_PER_MINUTE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalingPolicyCustomMetricUtilization_UtilizationTargetType_DeltaPerMinute;
/**
 *  Sets the utilization target value for a cumulative or delta metric,
 *  expressed as the rate of growth per second.
 *
 *  Value: "DELTA_PER_SECOND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalingPolicyCustomMetricUtilization_UtilizationTargetType_DeltaPerSecond;
/**
 *  Sets the utilization target value for a gauge metric. The autoscaler will
 *  collect the average utilization of the virtual machines from the last couple
 *  of minutes, and compare the value to the utilization target value to perform
 *  autoscaling.
 *
 *  Value: "GAUGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_AutoscalingPolicyCustomMetricUtilization_UtilizationTargetType_Gauge;

// ----------------------------------------------------------------------------
// GTLRCompute_Backend.balancingMode

/**
 *  Balance based on the number of simultaneous connections.
 *
 *  Value: "CONNECTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Backend_BalancingMode_Connection;
/**
 *  Balance based on requests per second (RPS).
 *
 *  Value: "RATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Backend_BalancingMode_Rate;
/**
 *  Balance based on the backend utilization.
 *
 *  Value: "UTILIZATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Backend_BalancingMode_Utilization;

// ----------------------------------------------------------------------------
// GTLRCompute_BackendBucket.compressionMode

/**
 *  Automatically uses the best compression based on the Accept-Encoding header
 *  sent by the client.
 *
 *  Value: "AUTOMATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucket_CompressionMode_Automatic;
/**
 *  Disables compression. Existing compressed responses cached by Cloud CDN will
 *  not be served to clients.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucket_CompressionMode_Disabled;

// ----------------------------------------------------------------------------
// GTLRCompute_BackendBucketCdnPolicy.cacheMode

/**
 *  Automatically cache static content, including common image formats, media
 *  (video and audio), and web assets (JavaScript and CSS). Requests and
 *  responses that are marked as uncacheable, as well as dynamic content
 *  (including HTML), will not be cached.
 *
 *  Value: "CACHE_ALL_STATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketCdnPolicy_CacheMode_CacheAllStatic;
/**
 *  Cache all content, ignoring any "private", "no-store" or "no-cache"
 *  directives in Cache-Control response headers. Warning: this may result in
 *  Cloud CDN caching private, per-user (user identifiable) content.
 *
 *  Value: "FORCE_CACHE_ALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketCdnPolicy_CacheMode_ForceCacheAll;
/** Value: "INVALID_CACHE_MODE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketCdnPolicy_CacheMode_InvalidCacheMode;
/**
 *  Requires the origin to set valid caching headers to cache content. Responses
 *  without these headers will not be cached at Google's edge, and will require
 *  a full trip to the origin on every request, potentially impacting
 *  performance and increasing load on the origin server.
 *
 *  Value: "USE_ORIGIN_HEADERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketCdnPolicy_CacheMode_UseOriginHeaders;

// ----------------------------------------------------------------------------
// GTLRCompute_BackendBucketList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendBucketList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_BackendService.compressionMode

/**
 *  Automatically uses the best compression based on the Accept-Encoding header
 *  sent by the client.
 *
 *  Value: "AUTOMATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_CompressionMode_Automatic;
/**
 *  Disables compression. Existing compressed responses cached by Cloud CDN will
 *  not be served to clients.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_CompressionMode_Disabled;

// ----------------------------------------------------------------------------
// GTLRCompute_BackendService.loadBalancingScheme

/**
 *  Signifies that this will be used for external HTTP(S), SSL Proxy, TCP Proxy,
 *  or Network Load Balancing
 *
 *  Value: "EXTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_LoadBalancingScheme_External;
/**
 *  Signifies that this will be used for External Managed HTTP(S) Load
 *  Balancing.
 *
 *  Value: "EXTERNAL_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_LoadBalancingScheme_ExternalManaged;
/**
 *  Signifies that this will be used for Internal TCP/UDP Load Balancing.
 *
 *  Value: "INTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_LoadBalancingScheme_Internal;
/**
 *  Signifies that this will be used for Internal HTTP(S) Load Balancing.
 *
 *  Value: "INTERNAL_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_LoadBalancingScheme_InternalManaged;
/**
 *  Signifies that this will be used by Traffic Director.
 *
 *  Value: "INTERNAL_SELF_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_LoadBalancingScheme_InternalSelfManaged;
/** Value: "INVALID_LOAD_BALANCING_SCHEME" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_LoadBalancingScheme_InvalidLoadBalancingScheme;

// ----------------------------------------------------------------------------
// GTLRCompute_BackendService.localityLbPolicy

/** Value: "INVALID_LB_POLICY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_LocalityLbPolicy_InvalidLbPolicy;
/**
 *  An O(1) algorithm which selects two random healthy hosts and picks the host
 *  which has fewer active requests.
 *
 *  Value: "LEAST_REQUEST"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_LocalityLbPolicy_LeastRequest;
/**
 *  This algorithm implements consistent hashing to backends. Maglev can be used
 *  as a drop in replacement for the ring hash load balancer. Maglev is not as
 *  stable as ring hash but has faster table lookup build times and host
 *  selection times. For more information about Maglev, see
 *  https://ai.google/research/pubs/pub44824
 *
 *  Value: "MAGLEV"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_LocalityLbPolicy_Maglev;
/**
 *  Backend host is selected based on the client connection metadata, i.e.,
 *  connections are opened to the same address as the destination address of the
 *  incoming connection before the connection was redirected to the load
 *  balancer.
 *
 *  Value: "ORIGINAL_DESTINATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_LocalityLbPolicy_OriginalDestination;
/**
 *  The load balancer selects a random healthy host.
 *
 *  Value: "RANDOM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_LocalityLbPolicy_Random;
/**
 *  The ring/modulo hash load balancer implements consistent hashing to
 *  backends. The algorithm has the property that the addition/removal of a host
 *  from a set of N hosts only affects 1/N of the requests.
 *
 *  Value: "RING_HASH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_LocalityLbPolicy_RingHash;
/**
 *  This is a simple policy in which each healthy backend is selected in round
 *  robin order. This is the default.
 *
 *  Value: "ROUND_ROBIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_LocalityLbPolicy_RoundRobin;

// ----------------------------------------------------------------------------
// GTLRCompute_BackendService.protocol

/**
 *  gRPC (available for Traffic Director).
 *
 *  Value: "GRPC"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_Protocol_Grpc;
/** Value: "HTTP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_Protocol_Http;
/**
 *  HTTP/2 with SSL.
 *
 *  Value: "HTTP2"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_Protocol_Http2;
/** Value: "HTTPS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_Protocol_Https;
/**
 *  TCP proxying with SSL.
 *
 *  Value: "SSL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_Protocol_Ssl;
/**
 *  TCP proxying or TCP pass-through.
 *
 *  Value: "TCP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_Protocol_Tcp;
/**
 *  UDP.
 *
 *  Value: "UDP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_Protocol_Udp;
/**
 *  If a Backend Service has UNSPECIFIED as its protocol, it can be used with
 *  any L3/L4 Forwarding Rules.
 *
 *  Value: "UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_Protocol_Unspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_BackendService.sessionAffinity

/**
 *  2-tuple hash on packet's source and destination IP addresses. Connections
 *  from the same source IP address to the same destination IP address will be
 *  served by the same backend VM while that VM remains healthy.
 *
 *  Value: "CLIENT_IP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_SessionAffinity_ClientIp;
/**
 *  1-tuple hash only on packet's source IP address. Connections from the same
 *  source IP address will be served by the same backend VM while that VM
 *  remains healthy. This option can only be used for Internal TCP/UDP Load
 *  Balancing.
 *
 *  Value: "CLIENT_IP_NO_DESTINATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_SessionAffinity_ClientIpNoDestination;
/**
 *  5-tuple hash on packet's source and destination IP addresses, IP protocol,
 *  and source and destination ports. Connections for the same IP protocol from
 *  the same source IP address and port to the same destination IP address and
 *  port will be served by the same backend VM while that VM remains healthy.
 *  This option cannot be used for HTTP(S) load balancing.
 *
 *  Value: "CLIENT_IP_PORT_PROTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_SessionAffinity_ClientIpPortProto;
/**
 *  3-tuple hash on packet's source and destination IP addresses, and IP
 *  protocol. Connections for the same IP protocol from the same source IP
 *  address to the same destination IP address will be served by the same
 *  backend VM while that VM remains healthy. This option cannot be used for
 *  HTTP(S) load balancing.
 *
 *  Value: "CLIENT_IP_PROTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_SessionAffinity_ClientIpProto;
/**
 *  Hash based on a cookie generated by the L7 loadbalancer. Only valid for
 *  HTTP(S) load balancing.
 *
 *  Value: "GENERATED_COOKIE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_SessionAffinity_GeneratedCookie;
/**
 *  The hash is based on a user specified header field.
 *
 *  Value: "HEADER_FIELD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_SessionAffinity_HeaderField;
/**
 *  The hash is based on a user provided cookie.
 *
 *  Value: "HTTP_COOKIE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_SessionAffinity_HttpCookie;
/**
 *  No session affinity. Connections from the same client IP may go to any
 *  instance in the pool.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendService_SessionAffinity_None;

// ----------------------------------------------------------------------------
// GTLRCompute_BackendServiceAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_BackendServiceCdnPolicy.cacheMode

/**
 *  Automatically cache static content, including common image formats, media
 *  (video and audio), and web assets (JavaScript and CSS). Requests and
 *  responses that are marked as uncacheable, as well as dynamic content
 *  (including HTML), will not be cached.
 *
 *  Value: "CACHE_ALL_STATIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceCdnPolicy_CacheMode_CacheAllStatic;
/**
 *  Cache all content, ignoring any "private", "no-store" or "no-cache"
 *  directives in Cache-Control response headers. Warning: this may result in
 *  Cloud CDN caching private, per-user (user identifiable) content.
 *
 *  Value: "FORCE_CACHE_ALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceCdnPolicy_CacheMode_ForceCacheAll;
/** Value: "INVALID_CACHE_MODE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceCdnPolicy_CacheMode_InvalidCacheMode;
/**
 *  Requires the origin to set valid caching headers to cache content. Responses
 *  without these headers will not be cached at Google's edge, and will require
 *  a full trip to the origin on every request, potentially impacting
 *  performance and increasing load on the origin server.
 *
 *  Value: "USE_ORIGIN_HEADERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceCdnPolicy_CacheMode_UseOriginHeaders;

// ----------------------------------------------------------------------------
// GTLRCompute_BackendServiceConnectionTrackingPolicy.connectionPersistenceOnUnhealthyBackends

/** Value: "ALWAYS_PERSIST" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceConnectionTrackingPolicy_ConnectionPersistenceOnUnhealthyBackends_AlwaysPersist;
/** Value: "DEFAULT_FOR_PROTOCOL" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceConnectionTrackingPolicy_ConnectionPersistenceOnUnhealthyBackends_DefaultForProtocol;
/** Value: "NEVER_PERSIST" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceConnectionTrackingPolicy_ConnectionPersistenceOnUnhealthyBackends_NeverPersist;

// ----------------------------------------------------------------------------
// GTLRCompute_BackendServiceConnectionTrackingPolicy.trackingMode

/** Value: "INVALID_TRACKING_MODE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceConnectionTrackingPolicy_TrackingMode_InvalidTrackingMode;
/** Value: "PER_CONNECTION" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceConnectionTrackingPolicy_TrackingMode_PerConnection;
/** Value: "PER_SESSION" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceConnectionTrackingPolicy_TrackingMode_PerSession;

// ----------------------------------------------------------------------------
// GTLRCompute_BackendServiceList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy.name

/** Value: "INVALID_LB_POLICY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_InvalidLbPolicy;
/**
 *  An O(1) algorithm which selects two random healthy hosts and picks the host
 *  which has fewer active requests.
 *
 *  Value: "LEAST_REQUEST"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_LeastRequest;
/**
 *  This algorithm implements consistent hashing to backends. Maglev can be used
 *  as a drop in replacement for the ring hash load balancer. Maglev is not as
 *  stable as ring hash but has faster table lookup build times and host
 *  selection times. For more information about Maglev, see
 *  https://ai.google/research/pubs/pub44824
 *
 *  Value: "MAGLEV"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_Maglev;
/**
 *  Backend host is selected based on the client connection metadata, i.e.,
 *  connections are opened to the same address as the destination address of the
 *  incoming connection before the connection was redirected to the load
 *  balancer.
 *
 *  Value: "ORIGINAL_DESTINATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_OriginalDestination;
/**
 *  The load balancer selects a random healthy host.
 *
 *  Value: "RANDOM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_Random;
/**
 *  The ring/modulo hash load balancer implements consistent hashing to
 *  backends. The algorithm has the property that the addition/removal of a host
 *  from a set of N hosts only affects 1/N of the requests.
 *
 *  Value: "RING_HASH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_RingHash;
/**
 *  This is a simple policy in which each healthy backend is selected in round
 *  robin order. This is the default.
 *
 *  Value: "ROUND_ROBIN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_RoundRobin;

// ----------------------------------------------------------------------------
// GTLRCompute_BackendServicesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BackendServicesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_BfdPacket.diagnostic

/** Value: "ADMINISTRATIVELY_DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdPacket_Diagnostic_AdministrativelyDown;
/** Value: "CONCATENATED_PATH_DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdPacket_Diagnostic_ConcatenatedPathDown;
/** Value: "CONTROL_DETECTION_TIME_EXPIRED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdPacket_Diagnostic_ControlDetectionTimeExpired;
/** Value: "DIAGNOSTIC_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdPacket_Diagnostic_DiagnosticUnspecified;
/** Value: "ECHO_FUNCTION_FAILED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdPacket_Diagnostic_EchoFunctionFailed;
/** Value: "FORWARDING_PLANE_RESET" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdPacket_Diagnostic_ForwardingPlaneReset;
/** Value: "NEIGHBOR_SIGNALED_SESSION_DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdPacket_Diagnostic_NeighborSignaledSessionDown;
/** Value: "NO_DIAGNOSTIC" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdPacket_Diagnostic_NoDiagnostic;
/** Value: "PATH_DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdPacket_Diagnostic_PathDown;
/** Value: "REVERSE_CONCATENATED_PATH_DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdPacket_Diagnostic_ReverseConcatenatedPathDown;

// ----------------------------------------------------------------------------
// GTLRCompute_BfdPacket.state

/** Value: "ADMIN_DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdPacket_State_AdminDown;
/** Value: "DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdPacket_State_Down;
/** Value: "INIT" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdPacket_State_Init;
/** Value: "STATE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdPacket_State_StateUnspecified;
/** Value: "UP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdPacket_State_Up;

// ----------------------------------------------------------------------------
// GTLRCompute_BfdStatus.bfdSessionInitializationMode

/** Value: "ACTIVE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_BfdSessionInitializationMode_Active;
/** Value: "DISABLED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_BfdSessionInitializationMode_Disabled;
/** Value: "PASSIVE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_BfdSessionInitializationMode_Passive;

// ----------------------------------------------------------------------------
// GTLRCompute_BfdStatus.localDiagnostic

/** Value: "ADMINISTRATIVELY_DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_AdministrativelyDown;
/** Value: "CONCATENATED_PATH_DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_ConcatenatedPathDown;
/** Value: "CONTROL_DETECTION_TIME_EXPIRED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_ControlDetectionTimeExpired;
/** Value: "DIAGNOSTIC_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_DiagnosticUnspecified;
/** Value: "ECHO_FUNCTION_FAILED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_EchoFunctionFailed;
/** Value: "FORWARDING_PLANE_RESET" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_ForwardingPlaneReset;
/** Value: "NEIGHBOR_SIGNALED_SESSION_DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_NeighborSignaledSessionDown;
/** Value: "NO_DIAGNOSTIC" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_NoDiagnostic;
/** Value: "PATH_DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_PathDown;
/** Value: "REVERSE_CONCATENATED_PATH_DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_LocalDiagnostic_ReverseConcatenatedPathDown;

// ----------------------------------------------------------------------------
// GTLRCompute_BfdStatus.localState

/** Value: "ADMIN_DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_LocalState_AdminDown;
/** Value: "DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_LocalState_Down;
/** Value: "INIT" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_LocalState_Init;
/** Value: "STATE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_LocalState_StateUnspecified;
/** Value: "UP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_BfdStatus_LocalState_Up;

// ----------------------------------------------------------------------------
// GTLRCompute_Commitment.category

/** Value: "CATEGORY_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Category_CategoryUnspecified;
/** Value: "LICENSE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Category_License;
/** Value: "MACHINE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Category_Machine;

// ----------------------------------------------------------------------------
// GTLRCompute_Commitment.plan

/** Value: "INVALID" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Plan_Invalid;
/** Value: "THIRTY_SIX_MONTH" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Plan_ThirtySixMonth;
/** Value: "TWELVE_MONTH" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Plan_TwelveMonth;

// ----------------------------------------------------------------------------
// GTLRCompute_Commitment.status

/** Value: "ACTIVE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Status_Active;
/** Value: "CANCELLED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Status_Cancelled;
/** Value: "CREATING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Status_Creating;
/** Value: "EXPIRED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Status_Expired;
/** Value: "NOT_YET_ACTIVE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Status_NotYetActive;

// ----------------------------------------------------------------------------
// GTLRCompute_Commitment.type

/** Value: "ACCELERATOR_OPTIMIZED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Type_AcceleratorOptimized;
/** Value: "COMPUTE_OPTIMIZED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Type_ComputeOptimized;
/** Value: "COMPUTE_OPTIMIZED_C2D" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Type_ComputeOptimizedC2d;
/** Value: "GENERAL_PURPOSE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Type_GeneralPurpose;
/** Value: "GENERAL_PURPOSE_E2" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Type_GeneralPurposeE2;
/** Value: "GENERAL_PURPOSE_N2" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Type_GeneralPurposeN2;
/** Value: "GENERAL_PURPOSE_N2D" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Type_GeneralPurposeN2d;
/** Value: "GENERAL_PURPOSE_T2D" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Type_GeneralPurposeT2d;
/** Value: "MEMORY_OPTIMIZED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Type_MemoryOptimized;
/** Value: "MEMORY_OPTIMIZED_M3" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Type_MemoryOptimizedM3;
/** Value: "TYPE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Commitment_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_CommitmentAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_CommitmentList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_CommitmentsScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_CommitmentsScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_Condition.iam

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "APPROVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Iam_Approver;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "ATTRIBUTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Iam_Attribution;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "AUTHORITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Iam_Authority;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "CREDENTIALS_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Iam_CredentialsType;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "CREDS_ASSERTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Iam_CredsAssertion;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "JUSTIFICATION_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Iam_JustificationType;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "NO_ATTR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Iam_NoAttr;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "SECURITY_REALM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Iam_SecurityRealm;

// ----------------------------------------------------------------------------
// GTLRCompute_Condition.op

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "DISCHARGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Op_Discharged;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "EQUALS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Op_Equals;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "IN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Op_In;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "NO_OP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Op_NoOp;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "NOT_EQUALS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Op_NotEquals;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "NOT_IN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Op_NotIn;

// ----------------------------------------------------------------------------
// GTLRCompute_Condition.sys

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "IP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Sys_Ip;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Sys_Name;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "NO_ATTR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Sys_NoAttr;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Sys_Region;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "SERVICE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Condition_Sys_Service;

// ----------------------------------------------------------------------------
// GTLRCompute_DeprecationStatus.state

/** Value: "ACTIVE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DeprecationStatus_State_Active;
/** Value: "DELETED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DeprecationStatus_State_Deleted;
/** Value: "DEPRECATED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DeprecationStatus_State_Deprecated;
/** Value: "OBSOLETE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DeprecationStatus_State_Obsolete;

// ----------------------------------------------------------------------------
// GTLRCompute_Disk.architecture

/**
 *  Default value indicating Architecture is not set.
 *
 *  Value: "ARCHITECTURE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Disk_Architecture_ArchitectureUnspecified;
/**
 *  Machines with architecture ARM64
 *
 *  Value: "ARM64"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Disk_Architecture_Arm64;
/**
 *  Machines with architecture X86_64
 *
 *  Value: "X86_64"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Disk_Architecture_X8664;

// ----------------------------------------------------------------------------
// GTLRCompute_Disk.status

/**
 *  Disk is provisioning
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Disk_Status_Creating;
/**
 *  Disk is deleting.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Disk_Status_Deleting;
/**
 *  Disk creation failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Disk_Status_Failed;
/**
 *  Disk is ready for use.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Disk_Status_Ready;
/**
 *  Source data is being copied into the disk.
 *
 *  Value: "RESTORING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Disk_Status_Restoring;

// ----------------------------------------------------------------------------
// GTLRCompute_DiskAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_DiskInstantiationConfig.instantiateFrom

/**
 *  Attach the existing disk in read-only mode. The request will fail if the
 *  disk was attached in read-write mode on the source instance. Applicable to:
 *  read-only disks.
 *
 *  Value: "ATTACH_READ_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_AttachReadOnly;
/**
 *  Create a blank disk. The disk will be created unformatted. Applicable to:
 *  additional read-write disks, local SSDs.
 *
 *  Value: "BLANK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_Blank;
/**
 *  Use the custom image specified in the custom_image field. Applicable to:
 *  boot disk, additional read-write disks.
 *
 *  Value: "CUSTOM_IMAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_CustomImage;
/**
 *  Use the default instantiation option for the corresponding type of disk. For
 *  boot disk and any other R/W disks, new custom images will be created from
 *  each disk. For read-only disks, they will be attached in read-only mode.
 *  Local SSD disks will be created as blank volumes.
 *
 *  Value: "DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_Default;
/**
 *  Do not include the disk in the instance template. Applicable to: additional
 *  read-write disks, local SSDs, read-only disks.
 *
 *  Value: "DO_NOT_INCLUDE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_DoNotInclude;
/**
 *  Use the same source image used for creation of the source instance's
 *  corresponding disk. The request will fail if the source VM's disk was
 *  created from a snapshot. Applicable to: boot disk, additional read-write
 *  disks.
 *
 *  Value: "SOURCE_IMAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_SourceImage;
/**
 *  Use the same source image family used for creation of the source instance's
 *  corresponding disk. The request will fail if the source image of the source
 *  disk does not belong to any image family. Applicable to: boot disk,
 *  additional read-write disks.
 *
 *  Value: "SOURCE_IMAGE_FAMILY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_SourceImageFamily;

// ----------------------------------------------------------------------------
// GTLRCompute_DiskList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_DisksScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DisksScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_DiskTypeAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_DiskTypeList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypeList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_DiskTypesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DiskTypesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_DistributionPolicy.targetShape

/**
 *  The group picks zones for creating VM instances to fulfill the requested
 *  number of VMs within present resource constraints and to maximize
 *  utilization of unused zonal reservations. Recommended for batch workloads
 *  that do not require high availability.
 *
 *  Value: "ANY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DistributionPolicy_TargetShape_Any;
/**
 *  The group prioritizes acquisition of resources, scheduling VMs in zones
 *  where resources are available while distributing VMs as evenly as possible
 *  across selected zones to minimize the impact of zonal failure. Recommended
 *  for highly available serving workloads.
 *
 *  Value: "BALANCED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DistributionPolicy_TargetShape_Balanced;
/**
 *  The group schedules VM instance creation and deletion to achieve and
 *  maintain an even number of managed instances across the selected zones. The
 *  distribution is even when the number of managed instances does not differ by
 *  more than 1 between any two zones. Recommended for highly available serving
 *  workloads.
 *
 *  Value: "EVEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_DistributionPolicy_TargetShape_Even;

// ----------------------------------------------------------------------------
// GTLRCompute_ExchangedPeeringRoute.type

/**
 *  For routes exported from local network.
 *
 *  Value: "DYNAMIC_PEERING_ROUTE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoute_Type_DynamicPeeringRoute;
/**
 *  The peering route.
 *
 *  Value: "STATIC_PEERING_ROUTE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoute_Type_StaticPeeringRoute;
/**
 *  The peering route corresponding to subnetwork range.
 *
 *  Value: "SUBNET_PEERING_ROUTE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoute_Type_SubnetPeeringRoute;

// ----------------------------------------------------------------------------
// GTLRCompute_ExchangedPeeringRoutesList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_ExternalVpnGateway.redundancyType

/**
 *  The external VPN gateway has four public IP addresses; at the time of
 *  writing this API, the AWS virtual private gateway is an example which has
 *  four public IP addresses for high availability connections; there should be
 *  two VPN connections in the AWS virtual private gateway , each AWS VPN
 *  connection has two public IP addresses; please make sure to put two public
 *  IP addresses from one AWS VPN connection into interfaces 0 and 1 of this
 *  external VPN gateway, and put the other two public IP addresses from another
 *  AWS VPN connection into interfaces 2 and 3 of this external VPN gateway.
 *  When displaying highly available configuration status for the VPN tunnels
 *  connected to FOUR_IPS_REDUNDANCY external VPN gateway, Google will always
 *  detect whether interfaces 0 and 1 are connected on one interface of HA Cloud
 *  VPN gateway, and detect whether interfaces 2 and 3 are connected to another
 *  interface of the HA Cloud VPN gateway.
 *
 *  Value: "FOUR_IPS_REDUNDANCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGateway_RedundancyType_FourIpsRedundancy;
/**
 *  The external VPN gateway has only one public IP address which internally
 *  provide redundancy or failover.
 *
 *  Value: "SINGLE_IP_INTERNALLY_REDUNDANT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGateway_RedundancyType_SingleIpInternallyRedundant;
/**
 *  The external VPN gateway has two public IP addresses which are redundant
 *  with each other, the following two types of setup on your on-premises side
 *  would have this type of redundancy: (1) Two separate on-premises gateways,
 *  each with one public IP address, the two on-premises gateways are redundant
 *  with each other. (2) A single on-premise gateway with two public IP
 *  addresses that are redundant with eatch other.
 *
 *  Value: "TWO_IPS_REDUNDANCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGateway_RedundancyType_TwoIpsRedundancy;

// ----------------------------------------------------------------------------
// GTLRCompute_ExternalVpnGatewayList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ExternalVpnGatewayList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_FileContentBuffer.fileType

/** Value: "BIN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FileContentBuffer_FileType_Bin;
/** Value: "UNDEFINED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FileContentBuffer_FileType_Undefined;
/** Value: "X509" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FileContentBuffer_FileType_X509;

// ----------------------------------------------------------------------------
// GTLRCompute_Firewall.direction

/**
 *  Indicates that firewall should apply to outgoing traffic.
 *
 *  Value: "EGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Firewall_Direction_Egress;
/**
 *  Indicates that firewall should apply to incoming traffic.
 *
 *  Value: "INGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Firewall_Direction_Ingress;

// ----------------------------------------------------------------------------
// GTLRCompute_FirewallList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_FirewallLogConfig.metadata

/** Value: "EXCLUDE_ALL_METADATA" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallLogConfig_Metadata_ExcludeAllMetadata;
/** Value: "INCLUDE_ALL_METADATA" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallLogConfig_Metadata_IncludeAllMetadata;

// ----------------------------------------------------------------------------
// GTLRCompute_FirewallPolicyList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_FirewallPolicyRule.direction

/** Value: "EGRESS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyRule_Direction_Egress;
/** Value: "INGRESS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyRule_Direction_Ingress;

// ----------------------------------------------------------------------------
// GTLRCompute_FirewallPolicyRuleSecureTag.state

/** Value: "EFFECTIVE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyRuleSecureTag_State_Effective;
/** Value: "INEFFECTIVE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_FirewallPolicyRuleSecureTag_State_Ineffective;

// ----------------------------------------------------------------------------
// GTLRCompute_ForwardingRule.IPProtocol

/** Value: "AH" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Ah;
/** Value: "ESP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Esp;
/** Value: "ICMP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Icmp;
/** Value: "L3_DEFAULT" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_IPProtocol_L3Default;
/** Value: "SCTP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Sctp;
/** Value: "TCP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Tcp;
/** Value: "UDP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_IPProtocol_Udp;

// ----------------------------------------------------------------------------
// GTLRCompute_ForwardingRule.ipVersion

/** Value: "IPV4" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_IpVersion_Ipv4;
/** Value: "IPV6" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_IpVersion_Ipv6;
/** Value: "UNSPECIFIED_VERSION" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_IpVersion_UnspecifiedVersion;

// ----------------------------------------------------------------------------
// GTLRCompute_ForwardingRule.loadBalancingScheme

/** Value: "EXTERNAL" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_LoadBalancingScheme_External;
/** Value: "EXTERNAL_MANAGED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_LoadBalancingScheme_ExternalManaged;
/** Value: "INTERNAL" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_LoadBalancingScheme_Internal;
/** Value: "INTERNAL_MANAGED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_LoadBalancingScheme_InternalManaged;
/** Value: "INTERNAL_SELF_MANAGED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_LoadBalancingScheme_InternalSelfManaged;
/** Value: "INVALID" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_LoadBalancingScheme_Invalid;

// ----------------------------------------------------------------------------
// GTLRCompute_ForwardingRule.networkTier

/**
 *  Public internet quality with fixed bandwidth.
 *
 *  Value: "FIXED_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_NetworkTier_FixedStandard;
/**
 *  High quality, Google-grade network tier, support for all networking
 *  products.
 *
 *  Value: "PREMIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_NetworkTier_Premium;
/**
 *  Public internet quality, only limited support for other networking products.
 *
 *  Value: "STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_NetworkTier_Standard;
/**
 *  (Output only) Temporary tier for FIXED_STANDARD when fixed standard tier is
 *  expired or not configured.
 *
 *  Value: "STANDARD_OVERRIDES_FIXED_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_NetworkTier_StandardOverridesFixedStandard;

// ----------------------------------------------------------------------------
// GTLRCompute_ForwardingRule.pscConnectionStatus

/**
 *  The connection has been accepted by the producer.
 *
 *  Value: "ACCEPTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_PscConnectionStatus_Accepted;
/**
 *  The connection has been closed by the producer and will not serve traffic
 *  going forward.
 *
 *  Value: "CLOSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_PscConnectionStatus_Closed;
/**
 *  The connection has been accepted by the producer, but the producer needs to
 *  take further action before the forwarding rule can serve traffic.
 *
 *  Value: "NEEDS_ATTENTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_PscConnectionStatus_NeedsAttention;
/**
 *  The connection is pending acceptance by the producer.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_PscConnectionStatus_Pending;
/**
 *  The connection has been rejected by the producer.
 *
 *  Value: "REJECTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_PscConnectionStatus_Rejected;
/** Value: "STATUS_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRule_PscConnectionStatus_StatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_ForwardingRuleAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_ForwardingRuleList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRuleList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_ForwardingRulesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ForwardingRulesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_GRPCHealthCheck.portSpecification

/**
 *  The port number in the health check's port is used for health checking.
 *  Applies to network endpoint group and instance group backends.
 *
 *  Value: "USE_FIXED_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_GRPCHealthCheck_PortSpecification_UseFixedPort;
/**
 *  Not supported.
 *
 *  Value: "USE_NAMED_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_GRPCHealthCheck_PortSpecification_UseNamedPort;
/**
 *  For network endpoint group backends, the health check uses the port number
 *  specified on each endpoint in the network endpoint group. For instance group
 *  backends, the health check uses the port number specified for the backend
 *  service's named port defined in the instance group's named ports.
 *
 *  Value: "USE_SERVING_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_GRPCHealthCheck_PortSpecification_UseServingPort;

// ----------------------------------------------------------------------------
// GTLRCompute_GuestOsFeature.type

/** Value: "FEATURE_TYPE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_GuestOsFeature_Type_FeatureTypeUnspecified;
/** Value: "GVNIC" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_GuestOsFeature_Type_Gvnic;
/** Value: "MULTI_IP_SUBNET" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_GuestOsFeature_Type_MultiIpSubnet;
/** Value: "SECURE_BOOT" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_GuestOsFeature_Type_SecureBoot;
/** Value: "SEV_CAPABLE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_GuestOsFeature_Type_SevCapable;
/** Value: "UEFI_COMPATIBLE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_GuestOsFeature_Type_UefiCompatible;
/** Value: "VIRTIO_SCSI_MULTIQUEUE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_GuestOsFeature_Type_VirtioScsiMultiqueue;
/** Value: "WINDOWS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_GuestOsFeature_Type_Windows;

// ----------------------------------------------------------------------------
// GTLRCompute_HealthCheck.type

/** Value: "GRPC" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheck_Type_Grpc;
/** Value: "HTTP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheck_Type_Http;
/** Value: "HTTP2" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheck_Type_Http2;
/** Value: "HTTPS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheck_Type_Https;
/** Value: "INVALID" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheck_Type_Invalid;
/** Value: "SSL" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheck_Type_Ssl;
/** Value: "TCP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheck_Type_Tcp;

// ----------------------------------------------------------------------------
// GTLRCompute_HealthCheckList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_HealthChecksAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_HealthCheckService.healthStatusAggregationPolicy

/**
 *  If any backend's health check reports UNHEALTHY, then UNHEALTHY is the
 *  HealthState of the entire health check service. If all backend's are
 *  healthy, the HealthState of the health check service is HEALTHY.
 *
 *  Value: "AND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckService_HealthStatusAggregationPolicy_And;
/**
 *  An EndpointHealth message is returned for each backend in the health check
 *  service.
 *
 *  Value: "NO_AGGREGATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckService_HealthStatusAggregationPolicy_NoAggregation;

// ----------------------------------------------------------------------------
// GTLRCompute_HealthCheckServicesList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthCheckServicesList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_HealthChecksScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthChecksScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_HealthStatus.healthState

/** Value: "HEALTHY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthStatus_HealthState_Healthy;
/** Value: "UNHEALTHY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthStatus_HealthState_Unhealthy;

// ----------------------------------------------------------------------------
// GTLRCompute_HealthStatus.weightError

/**
 *  The response to a Health Check probe had the HTTP response header field
 *  X-Load-Balancing-Endpoint-Weight, but its content was invalid (i.e., not a
 *  non-negative single-precision floating-point number in decimal string
 *  representation).
 *
 *  Value: "INVALID_WEIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthStatus_WeightError_InvalidWeight;
/**
 *  The response to a Health Check probe did not have the HTTP response header
 *  field X-Load-Balancing-Endpoint-Weight.
 *
 *  Value: "MISSING_WEIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthStatus_WeightError_MissingWeight;
/**
 *  This is the value when the accompanied health status is either TIMEOUT
 *  (i.e.,the Health Check probe was not able to get a response in time) or
 *  UNKNOWN. For the latter, it should be typically because there has not been
 *  sufficient time to parse and report the weight for a new backend (which is
 *  with 0.0.0.0 ip address). However, it can be also due to an outage case for
 *  which the health status is explicitly reset to UNKNOWN.
 *
 *  Value: "UNAVAILABLE_WEIGHT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthStatus_WeightError_UnavailableWeight;
/**
 *  This is the default value when WeightReportMode is DISABLE, and is also the
 *  initial value when WeightReportMode has just updated to ENABLE or DRY_RUN
 *  and there has not been sufficient time to parse and report the backend
 *  weight.
 *
 *  Value: "WEIGHT_NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthStatus_WeightError_WeightNone;

// ----------------------------------------------------------------------------
// GTLRCompute_HealthStatusForNetworkEndpoint.healthState

/** Value: "DRAINING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthStatusForNetworkEndpoint_HealthState_Draining;
/** Value: "HEALTHY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthStatusForNetworkEndpoint_HealthState_Healthy;
/** Value: "UNHEALTHY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthStatusForNetworkEndpoint_HealthState_Unhealthy;
/** Value: "UNKNOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HealthStatusForNetworkEndpoint_HealthState_Unknown;

// ----------------------------------------------------------------------------
// GTLRCompute_HTTP2HealthCheck.portSpecification

/**
 *  The port number in the health check's port is used for health checking.
 *  Applies to network endpoint group and instance group backends.
 *
 *  Value: "USE_FIXED_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HTTP2HealthCheck_PortSpecification_UseFixedPort;
/**
 *  Not supported.
 *
 *  Value: "USE_NAMED_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HTTP2HealthCheck_PortSpecification_UseNamedPort;
/**
 *  For network endpoint group backends, the health check uses the port number
 *  specified on each endpoint in the network endpoint group. For instance group
 *  backends, the health check uses the port number specified for the backend
 *  service's named port defined in the instance group's named ports.
 *
 *  Value: "USE_SERVING_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HTTP2HealthCheck_PortSpecification_UseServingPort;

// ----------------------------------------------------------------------------
// GTLRCompute_HTTP2HealthCheck.proxyHeader

/** Value: "NONE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HTTP2HealthCheck_ProxyHeader_None;
/** Value: "PROXY_V1" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HTTP2HealthCheck_ProxyHeader_ProxyV1;

// ----------------------------------------------------------------------------
// GTLRCompute_HTTPHealthCheck.portSpecification

/**
 *  The port number in the health check's port is used for health checking.
 *  Applies to network endpoint group and instance group backends.
 *
 *  Value: "USE_FIXED_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HTTPHealthCheck_PortSpecification_UseFixedPort;
/**
 *  Not supported.
 *
 *  Value: "USE_NAMED_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HTTPHealthCheck_PortSpecification_UseNamedPort;
/**
 *  For network endpoint group backends, the health check uses the port number
 *  specified on each endpoint in the network endpoint group. For instance group
 *  backends, the health check uses the port number specified for the backend
 *  service's named port defined in the instance group's named ports.
 *
 *  Value: "USE_SERVING_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HTTPHealthCheck_PortSpecification_UseServingPort;

// ----------------------------------------------------------------------------
// GTLRCompute_HTTPHealthCheck.proxyHeader

/** Value: "NONE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HTTPHealthCheck_ProxyHeader_None;
/** Value: "PROXY_V1" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HTTPHealthCheck_ProxyHeader_ProxyV1;

// ----------------------------------------------------------------------------
// GTLRCompute_HttpHealthCheckList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpHealthCheckList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_HttpRedirectAction.redirectResponseCode

/**
 *  Http Status Code 302 - Found.
 *
 *  Value: "FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpRedirectAction_RedirectResponseCode_Found;
/**
 *  Http Status Code 301 - Moved Permanently.
 *
 *  Value: "MOVED_PERMANENTLY_DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpRedirectAction_RedirectResponseCode_MovedPermanentlyDefault;
/**
 *  Http Status Code 308 - Permanent Redirect maintaining HTTP method.
 *
 *  Value: "PERMANENT_REDIRECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpRedirectAction_RedirectResponseCode_PermanentRedirect;
/**
 *  Http Status Code 303 - See Other.
 *
 *  Value: "SEE_OTHER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpRedirectAction_RedirectResponseCode_SeeOther;
/**
 *  Http Status Code 307 - Temporary Redirect maintaining HTTP method.
 *
 *  Value: "TEMPORARY_REDIRECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpRedirectAction_RedirectResponseCode_TemporaryRedirect;

// ----------------------------------------------------------------------------
// GTLRCompute_HTTPSHealthCheck.portSpecification

/**
 *  The port number in the health check's port is used for health checking.
 *  Applies to network endpoint group and instance group backends.
 *
 *  Value: "USE_FIXED_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HTTPSHealthCheck_PortSpecification_UseFixedPort;
/**
 *  Not supported.
 *
 *  Value: "USE_NAMED_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HTTPSHealthCheck_PortSpecification_UseNamedPort;
/**
 *  For network endpoint group backends, the health check uses the port number
 *  specified on each endpoint in the network endpoint group. For instance group
 *  backends, the health check uses the port number specified for the backend
 *  service's named port defined in the instance group's named ports.
 *
 *  Value: "USE_SERVING_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HTTPSHealthCheck_PortSpecification_UseServingPort;

// ----------------------------------------------------------------------------
// GTLRCompute_HTTPSHealthCheck.proxyHeader

/** Value: "NONE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HTTPSHealthCheck_ProxyHeader_None;
/** Value: "PROXY_V1" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HTTPSHealthCheck_ProxyHeader_ProxyV1;

// ----------------------------------------------------------------------------
// GTLRCompute_HttpsHealthCheckList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_HttpsHealthCheckList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_Image.architecture

/**
 *  Default value indicating Architecture is not set.
 *
 *  Value: "ARCHITECTURE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Image_Architecture_ArchitectureUnspecified;
/**
 *  Machines with architecture ARM64
 *
 *  Value: "ARM64"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Image_Architecture_Arm64;
/**
 *  Machines with architecture X86_64
 *
 *  Value: "X86_64"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Image_Architecture_X8664;

// ----------------------------------------------------------------------------
// GTLRCompute_Image.sourceType

/** Value: "RAW" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Image_SourceType_Raw;

// ----------------------------------------------------------------------------
// GTLRCompute_Image.status

/**
 *  Image is deleting.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Image_Status_Deleting;
/**
 *  Image creation failed due to an error.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Image_Status_Failed;
/**
 *  Image hasn't been created as yet.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Image_Status_Pending;
/**
 *  Image has been successfully created.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Image_Status_Ready;

// ----------------------------------------------------------------------------
// GTLRCompute_Image_RawDisk.containerType

/** Value: "TAR" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Image_RawDisk_ContainerType_Tar;

// ----------------------------------------------------------------------------
// GTLRCompute_ImageList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ImageList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_Instance.keyRevocationActionType

/**
 *  Default value. This value is unused.
 *
 *  Value: "KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_KeyRevocationActionType_KeyRevocationActionTypeUnspecified;
/**
 *  Indicates user chose no operation.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_KeyRevocationActionType_None;
/**
 *  Indicates user chose to opt for VM shutdown on key revocation.
 *
 *  Value: "STOP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_KeyRevocationActionType_Stop;

// ----------------------------------------------------------------------------
// GTLRCompute_Instance.privateIpv6GoogleAccess

/**
 *  Bidirectional private IPv6 access to/from Google services. If specified, the
 *  subnetwork who is attached to the instance's default network interface will
 *  be assigned an internal IPv6 prefix if it doesn't have before.
 *
 *  Value: "ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_PrivateIpv6GoogleAccess_EnableBidirectionalAccessToGoogle;
/**
 *  Outbound private IPv6 access from VMs in this subnet to Google services. If
 *  specified, the subnetwork who is attached to the instance's default network
 *  interface will be assigned an internal IPv6 prefix if it doesn't have
 *  before.
 *
 *  Value: "ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_PrivateIpv6GoogleAccess_EnableOutboundVmAccessToGoogle;
/**
 *  Each network interface inherits PrivateIpv6GoogleAccess from its subnetwork.
 *
 *  Value: "INHERIT_FROM_SUBNETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_PrivateIpv6GoogleAccess_InheritFromSubnetwork;

// ----------------------------------------------------------------------------
// GTLRCompute_Instance.status

/**
 *  The Nanny is halted and we are performing tear down tasks like network
 *  deprogramming, releasing quota, IP, tearing down disks etc.
 *
 *  Value: "DEPROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_Status_Deprovisioning;
/**
 *  Resources are being allocated for the instance.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_Status_Provisioning;
/**
 *  The instance is in repair.
 *
 *  Value: "REPAIRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_Status_Repairing;
/**
 *  The instance is running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_Status_Running;
/**
 *  All required resources have been allocated and the instance is being
 *  started.
 *
 *  Value: "STAGING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_Status_Staging;
/**
 *  The instance has stopped successfully.
 *
 *  Value: "STOPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_Status_Stopped;
/**
 *  The instance is currently stopping (either being deleted or killed).
 *
 *  Value: "STOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_Status_Stopping;
/**
 *  The instance has suspended.
 *
 *  Value: "SUSPENDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_Status_Suspended;
/**
 *  The instance is suspending.
 *
 *  Value: "SUSPENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_Status_Suspending;
/**
 *  The instance has stopped (either by explicit action or underlying failure).
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Instance_Status_Terminated;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupManager.listManagedInstancesResults

/**
 *  (Default) Pagination is disabled for the group's listManagedInstances API
 *  method. maxResults and pageToken query parameters are ignored and all
 *  instances are returned in a single response.
 *
 *  Value: "PAGELESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManager_ListManagedInstancesResults_Pageless;
/**
 *  Pagination is enabled for the group's listManagedInstances API method.
 *  maxResults and pageToken query parameters are respected.
 *
 *  Value: "PAGINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManager_ListManagedInstancesResults_Paginated;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupManagerAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupManagerList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupManagersApplyUpdatesRequest.minimalAction

/**
 *  Do not perform any action.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MinimalAction_None;
/**
 *  Updates applied in runtime, instances will not be disrupted.
 *
 *  Value: "REFRESH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MinimalAction_Refresh;
/**
 *  Old instances will be deleted. New instances will be created from the target
 *  template.
 *
 *  Value: "REPLACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MinimalAction_Replace;
/**
 *  Every instance will be restarted.
 *
 *  Value: "RESTART"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MinimalAction_Restart;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupManagersApplyUpdatesRequest.mostDisruptiveAllowedAction

/**
 *  Do not perform any action.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_None;
/**
 *  Updates applied in runtime, instances will not be disrupted.
 *
 *  Value: "REFRESH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Refresh;
/**
 *  Old instances will be deleted. New instances will be created from the target
 *  template.
 *
 *  Value: "REPLACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Replace;
/**
 *  Every instance will be restarted.
 *
 *  Value: "RESTART"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Restart;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupManagersScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupManagerUpdatePolicy.instanceRedistributionType

/**
 *  No action is being proactively performed in order to bring this IGM to its
 *  target instance distribution.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_InstanceRedistributionType_None;
/**
 *  This IGM will actively converge to its target instance distribution.
 *
 *  Value: "PROACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_InstanceRedistributionType_Proactive;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupManagerUpdatePolicy.minimalAction

/**
 *  Do not perform any action.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MinimalAction_None;
/**
 *  Updates applied in runtime, instances will not be disrupted.
 *
 *  Value: "REFRESH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MinimalAction_Refresh;
/**
 *  Old instances will be deleted. New instances will be created from the target
 *  template.
 *
 *  Value: "REPLACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MinimalAction_Replace;
/**
 *  Every instance will be restarted.
 *
 *  Value: "RESTART"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MinimalAction_Restart;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupManagerUpdatePolicy.mostDisruptiveAllowedAction

/**
 *  Do not perform any action.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MostDisruptiveAllowedAction_None;
/**
 *  Updates applied in runtime, instances will not be disrupted.
 *
 *  Value: "REFRESH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MostDisruptiveAllowedAction_Refresh;
/**
 *  Old instances will be deleted. New instances will be created from the target
 *  template.
 *
 *  Value: "REPLACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MostDisruptiveAllowedAction_Replace;
/**
 *  Every instance will be restarted.
 *
 *  Value: "RESTART"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_MostDisruptiveAllowedAction_Restart;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupManagerUpdatePolicy.replacementMethod

/**
 *  Instances will be recreated (with the same name)
 *
 *  Value: "RECREATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_ReplacementMethod_Recreate;
/**
 *  Default option: instances will be deleted and created (with a new name)
 *
 *  Value: "SUBSTITUTE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_ReplacementMethod_Substitute;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupManagerUpdatePolicy.type

/**
 *  No action is being proactively performed in order to bring this IGM to its
 *  target version distribution (regardless of whether this distribution is
 *  expressed using instanceTemplate or versions field).
 *
 *  Value: "OPPORTUNISTIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_Type_Opportunistic;
/**
 *  This IGM will actively converge to its target version distribution
 *  (regardless of whether this distribution is expressed using instanceTemplate
 *  or versions field).
 *
 *  Value: "PROACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupManagerUpdatePolicy_Type_Proactive;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupsListInstances_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstances_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupsListInstancesRequest.instanceState

/**
 *  Includes all instances in the generated list regardless of their state.
 *
 *  Value: "ALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstancesRequest_InstanceState_All;
/**
 *  Includes instances in the generated list only if they have a RUNNING state.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsListInstancesRequest_InstanceState_Running;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceGroupsScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceGroupsScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceListReferrers_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceListReferrers_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails.action

/**
 *  The managed instance group is abandoning this instance. The instance will be
 *  removed from the instance group and from any target pools that are
 *  associated with this group.
 *
 *  Value: "ABANDONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Abandoning;
/**
 *  The managed instance group is creating this instance. If the group fails to
 *  create this instance, it will try again until it is successful.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Creating;
/**
 *  The managed instance group is attempting to create this instance only once.
 *  If the group fails to create this instance, it does not try again and the
 *  group's targetSize value is decreased.
 *
 *  Value: "CREATING_WITHOUT_RETRIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_CreatingWithoutRetries;
/**
 *  The managed instance group is permanently deleting this instance.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Deleting;
/**
 *  The managed instance group has not scheduled any actions for this instance.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_None;
/**
 *  The managed instance group is recreating this instance.
 *
 *  Value: "RECREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Recreating;
/**
 *  The managed instance group is applying configuration changes to the instance
 *  without stopping it. For example, the group can update the target pool list
 *  for an instance without stopping that instance.
 *
 *  Value: "REFRESHING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Refreshing;
/**
 *  The managed instance group is restarting this instance.
 *
 *  Value: "RESTARTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Restarting;
/**
 *  The managed instance group is resuming this instance.
 *
 *  Value: "RESUMING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Resuming;
/**
 *  The managed instance group is starting this instance.
 *
 *  Value: "STARTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Starting;
/**
 *  The managed instance group is stopping this instance.
 *
 *  Value: "STOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Stopping;
/**
 *  The managed instance group is suspending this instance.
 *
 *  Value: "SUSPENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Suspending;
/**
 *  The managed instance group is verifying this already created instance.
 *  Verification happens every time the instance is (re)created or restarted and
 *  consists of: 1. Waiting until health check specified as part of this managed
 *  instance group's autohealing policy reports HEALTHY. Note: Applies only if
 *  autohealing policy has a health check specified 2. Waiting for addition
 *  verification steps performed as post-instance creation (subject to future
 *  extensions).
 *
 *  Value: "VERIFYING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Verifying;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceProperties.keyRevocationActionType

/**
 *  Default value. This value is unused.
 *
 *  Value: "KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceProperties_KeyRevocationActionType_KeyRevocationActionTypeUnspecified;
/**
 *  Indicates user chose no operation.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceProperties_KeyRevocationActionType_None;
/**
 *  Indicates user chose to opt for VM shutdown on key revocation.
 *
 *  Value: "STOP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceProperties_KeyRevocationActionType_Stop;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceProperties.privateIpv6GoogleAccess

/**
 *  Bidirectional private IPv6 access to/from Google services. If specified, the
 *  subnetwork who is attached to the instance's default network interface will
 *  be assigned an internal IPv6 prefix if it doesn't have before.
 *
 *  Value: "ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceProperties_PrivateIpv6GoogleAccess_EnableBidirectionalAccessToGoogle;
/**
 *  Outbound private IPv6 access from VMs in this subnet to Google services. If
 *  specified, the subnetwork who is attached to the instance's default network
 *  interface will be assigned an internal IPv6 prefix if it doesn't have
 *  before.
 *
 *  Value: "ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceProperties_PrivateIpv6GoogleAccess_EnableOutboundVmAccessToGoogle;
/**
 *  Each network interface inherits PrivateIpv6GoogleAccess from its subnetwork.
 *
 *  Value: "INHERIT_FROM_SUBNETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceProperties_PrivateIpv6GoogleAccess_InheritFromSubnetwork;

// ----------------------------------------------------------------------------
// GTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy.type

/** Value: "HIERARCHY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Hierarchy;
/** Value: "NETWORK" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Network;
/** Value: "NETWORK_REGIONAL" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_NetworkRegional;
/** Value: "UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Unspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_InstancesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstancesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceTemplateList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceTemplateList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InstanceWithNamedPorts.status

/**
 *  The Nanny is halted and we are performing tear down tasks like network
 *  deprogramming, releasing quota, IP, tearing down disks etc.
 *
 *  Value: "DEPROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Deprovisioning;
/**
 *  Resources are being allocated for the instance.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Provisioning;
/**
 *  The instance is in repair.
 *
 *  Value: "REPAIRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Repairing;
/**
 *  The instance is running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Running;
/**
 *  All required resources have been allocated and the instance is being
 *  started.
 *
 *  Value: "STAGING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Staging;
/**
 *  The instance has stopped successfully.
 *
 *  Value: "STOPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Stopped;
/**
 *  The instance is currently stopping (either being deleted or killed).
 *
 *  Value: "STOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Stopping;
/**
 *  The instance has suspended.
 *
 *  Value: "SUSPENDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Suspended;
/**
 *  The instance is suspending.
 *
 *  Value: "SUSPENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Suspending;
/**
 *  The instance has stopped (either by explicit action or underlying failure).
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InstanceWithNamedPorts_Status_Terminated;

// ----------------------------------------------------------------------------
// GTLRCompute_Interconnect.interconnectType

/**
 *  A dedicated physical interconnection with the customer.
 *
 *  Value: "DEDICATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Interconnect_InterconnectType_Dedicated;
/**
 *  [Deprecated] A private, physical interconnection with the customer.
 *
 *  Value: "IT_PRIVATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Interconnect_InterconnectType_ItPrivate;
/**
 *  A partner-managed interconnection shared between customers via partner.
 *
 *  Value: "PARTNER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Interconnect_InterconnectType_Partner;

// ----------------------------------------------------------------------------
// GTLRCompute_Interconnect.linkType

/**
 *  100G Ethernet, LR Optics.
 *
 *  Value: "LINK_TYPE_ETHERNET_100G_LR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Interconnect_LinkType_LinkTypeEthernet100gLr;
/**
 *  10G Ethernet, LR Optics. [(rate_bps) = 10000000000];
 *
 *  Value: "LINK_TYPE_ETHERNET_10G_LR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Interconnect_LinkType_LinkTypeEthernet10gLr;

// ----------------------------------------------------------------------------
// GTLRCompute_Interconnect.operationalStatus

/**
 *  The interconnect is valid, turned up, and ready to use. Attachments may be
 *  provisioned on this interconnect.
 *
 *  Value: "OS_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Interconnect_OperationalStatus_OsActive;
/**
 *  The interconnect has not completed turnup. No attachments may be provisioned
 *  on this interconnect.
 *
 *  Value: "OS_UNPROVISIONED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Interconnect_OperationalStatus_OsUnprovisioned;

// ----------------------------------------------------------------------------
// GTLRCompute_Interconnect.state

/**
 *  The interconnect is valid, turned up, and ready to use. Attachments may be
 *  provisioned on this interconnect.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Interconnect_State_Active;
/**
 *  The interconnect has not completed turnup. No attachments may be provisioned
 *  on this interconnect.
 *
 *  Value: "UNPROVISIONED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Interconnect_State_Unprovisioned;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectAttachment.bandwidth

/**
 *  100 Mbit/s
 *
 *  Value: "BPS_100M"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps100m;
/**
 *  10 Gbit/s
 *
 *  Value: "BPS_10G"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps10g;
/**
 *  1 Gbit/s
 *
 *  Value: "BPS_1G"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps1g;
/**
 *  200 Mbit/s
 *
 *  Value: "BPS_200M"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps200m;
/**
 *  20 Gbit/s
 *
 *  Value: "BPS_20G"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps20g;
/**
 *  2 Gbit/s
 *
 *  Value: "BPS_2G"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps2g;
/**
 *  300 Mbit/s
 *
 *  Value: "BPS_300M"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps300m;
/**
 *  400 Mbit/s
 *
 *  Value: "BPS_400M"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps400m;
/**
 *  500 Mbit/s
 *
 *  Value: "BPS_500M"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps500m;
/**
 *  50 Gbit/s
 *
 *  Value: "BPS_50G"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps50g;
/**
 *  50 Mbit/s
 *
 *  Value: "BPS_50M"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps50m;
/**
 *  5 Gbit/s
 *
 *  Value: "BPS_5G"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Bandwidth_Bps5g;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectAttachment.edgeAvailabilityDomain

/** Value: "AVAILABILITY_DOMAIN_1" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_EdgeAvailabilityDomain_AvailabilityDomain1;
/** Value: "AVAILABILITY_DOMAIN_2" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_EdgeAvailabilityDomain_AvailabilityDomain2;
/** Value: "AVAILABILITY_DOMAIN_ANY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_EdgeAvailabilityDomain_AvailabilityDomainAny;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectAttachment.encryption

/**
 *  The interconnect attachment will carry only encrypted traffic that is
 *  encrypted by an IPsec device such as HA VPN gateway; VMs cannot directly
 *  send traffic to or receive traffic from such an interconnect attachment. To
 *  use HA VPN over Cloud Interconnect, the interconnect attachment must be
 *  created with this option.
 *
 *  Value: "IPSEC"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Encryption_Ipsec;
/**
 *  This is the default value, which means the Interconnect Attachment will
 *  carry unencrypted traffic. VMs will be able to send traffic to or receive
 *  traffic from such interconnect attachment.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Encryption_None;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectAttachment.operationalStatus

/**
 *  Indicates that attachment has been turned up and is ready to use.
 *
 *  Value: "OS_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_OperationalStatus_OsActive;
/**
 *  Indicates that attachment is not ready to use yet, because turnup is not
 *  complete.
 *
 *  Value: "OS_UNPROVISIONED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_OperationalStatus_OsUnprovisioned;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectAttachment.stackType

/**
 *  The interconnect attachment can have both IPv4 and IPv6 addresses.
 *
 *  Value: "IPV4_IPV6"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_StackType_Ipv4Ipv6;
/**
 *  The interconnect attachment will only be assigned IPv4 addresses.
 *
 *  Value: "IPV4_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_StackType_Ipv4Only;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectAttachment.state

/**
 *  Indicates that attachment has been turned up and is ready to use.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_State_Active;
/**
 *  The attachment was deleted externally and is no longer functional. This
 *  could be because the associated Interconnect was wiped out, or because the
 *  other side of a Partner attachment was deleted.
 *
 *  Value: "DEFUNCT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_State_Defunct;
/**
 *  A PARTNER attachment is in the process of provisioning after a
 *  PARTNER_PROVIDER attachment was created that references it.
 *
 *  Value: "PARTNER_REQUEST_RECEIVED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_State_PartnerRequestReceived;
/**
 *  PARTNER or PARTNER_PROVIDER attachment that is waiting for the customer to
 *  activate.
 *
 *  Value: "PENDING_CUSTOMER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_State_PendingCustomer;
/**
 *  A newly created PARTNER attachment that has not yet been configured on the
 *  Partner side.
 *
 *  Value: "PENDING_PARTNER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_State_PendingPartner;
/** Value: "STATE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_State_StateUnspecified;
/**
 *  Indicates that attachment is not ready to use yet, because turnup is not
 *  complete.
 *
 *  Value: "UNPROVISIONED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_State_Unprovisioned;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectAttachment.type

/**
 *  Attachment to a dedicated interconnect.
 *
 *  Value: "DEDICATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Type_Dedicated;
/**
 *  Attachment to a partner interconnect, created by the customer.
 *
 *  Value: "PARTNER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Type_Partner;
/**
 *  Attachment to a partner interconnect, created by the partner.
 *
 *  Value: "PARTNER_PROVIDER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachment_Type_PartnerProvider;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectAttachmentAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectAttachmentList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectAttachmentsScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectDiagnosticsLinkLACPStatus.state

/**
 *  The link is configured and active within the bundle.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectDiagnosticsLinkLACPStatus_State_Active;
/**
 *  The link is not configured within the bundle, this means the rest of the
 *  object should be empty.
 *
 *  Value: "DETACHED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectDiagnosticsLinkLACPStatus_State_Detached;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectDiagnosticsLinkOpticalPower.state

/**
 *  The value has crossed above the high alarm threshold.
 *
 *  Value: "HIGH_ALARM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_HighAlarm;
/**
 *  The value of the current optical power has crossed above the high warning
 *  threshold.
 *
 *  Value: "HIGH_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_HighWarning;
/**
 *  The value of the current optical power has crossed below the low alarm
 *  threshold.
 *
 *  Value: "LOW_ALARM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_LowAlarm;
/**
 *  The value of the current optical power has crossed below the low warning
 *  threshold.
 *
 *  Value: "LOW_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_LowWarning;
/**
 *  The value of the current optical power has not crossed a warning threshold.
 *
 *  Value: "OK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_Ok;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectLocation.continent

/** Value: "AFRICA" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocation_Continent_Africa;
/** Value: "ASIA_PAC" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocation_Continent_AsiaPac;
/** Value: "C_AFRICA" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocation_Continent_CAfrica;
/** Value: "C_ASIA_PAC" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocation_Continent_CAsiaPac;
/** Value: "C_EUROPE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocation_Continent_CEurope;
/** Value: "C_NORTH_AMERICA" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocation_Continent_CNorthAmerica;
/** Value: "C_SOUTH_AMERICA" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocation_Continent_CSouthAmerica;
/** Value: "EUROPE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocation_Continent_Europe;
/** Value: "NORTH_AMERICA" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocation_Continent_NorthAmerica;
/** Value: "SOUTH_AMERICA" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocation_Continent_SouthAmerica;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectLocation.status

/**
 *  The InterconnectLocation is available for provisioning new Interconnects.
 *
 *  Value: "AVAILABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocation_Status_Available;
/**
 *  The InterconnectLocation is closed for provisioning new Interconnects.
 *
 *  Value: "CLOSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocation_Status_Closed;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectLocationList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectLocationRegionInfo.locationPresence

/**
 *  This region is not in any common network presence with this
 *  InterconnectLocation.
 *
 *  Value: "GLOBAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_Global;
/**
 *  This region shares the same regional network presence as this
 *  InterconnectLocation.
 *
 *  Value: "LOCAL_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_LocalRegion;
/**
 *  [Deprecated] This region is not in any common network presence with this
 *  InterconnectLocation.
 *
 *  Value: "LP_GLOBAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_LpGlobal;
/**
 *  [Deprecated] This region shares the same regional network presence as this
 *  InterconnectLocation.
 *
 *  Value: "LP_LOCAL_REGION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_LpLocalRegion;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectOutageNotification.issueType

/**
 *  [Deprecated] The Interconnect may be completely out of service for some or
 *  all of the specified window.
 *
 *  Value: "IT_OUTAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectOutageNotification_IssueType_ItOutage;
/**
 *  [Deprecated] Some circuits comprising the Interconnect will be out of
 *  service during the expected window. The interconnect as a whole should
 *  remain up, albeit with reduced bandwidth.
 *
 *  Value: "IT_PARTIAL_OUTAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectOutageNotification_IssueType_ItPartialOutage;
/**
 *  The Interconnect may be completely out of service for some or all of the
 *  specified window.
 *
 *  Value: "OUTAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectOutageNotification_IssueType_Outage;
/**
 *  Some circuits comprising the Interconnect will be out of service during the
 *  expected window. The interconnect as a whole should remain up, albeit with
 *  reduced bandwidth.
 *
 *  Value: "PARTIAL_OUTAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectOutageNotification_IssueType_PartialOutage;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectOutageNotification.source

/**
 *  This notification was generated by Google.
 *
 *  Value: "GOOGLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectOutageNotification_Source_Google;
/**
 *  [Deprecated] This notification was generated by Google.
 *
 *  Value: "NSRC_GOOGLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectOutageNotification_Source_NsrcGoogle;

// ----------------------------------------------------------------------------
// GTLRCompute_InterconnectOutageNotification.state

/**
 *  This outage notification is active. The event could be in the future,
 *  present, or past. See start_time and end_time for scheduling.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectOutageNotification_State_Active;
/**
 *  The outage associated with this notification was cancelled before the outage
 *  was due to start.
 *
 *  Value: "CANCELLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectOutageNotification_State_Cancelled;
/**
 *  The outage associated with this notification is complete.
 *
 *  Value: "COMPLETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectOutageNotification_State_Completed;
/**
 *  [Deprecated] This outage notification is active. The event could be in the
 *  future, present, or past. See start_time and end_time for scheduling.
 *
 *  Value: "NS_ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectOutageNotification_State_NsActive;
/**
 *  [Deprecated] The outage associated with this notification was canceled
 *  before the outage was due to start.
 *
 *  Value: "NS_CANCELED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_InterconnectOutageNotification_State_NsCanceled;

// ----------------------------------------------------------------------------
// GTLRCompute_LicenseCode.state

/**
 *  Machines are not allowed to attach boot disks with this License Code.
 *  Requests to create new resources with this license will be rejected.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicenseCode_State_Disabled;
/**
 *  Use is allowed for anyone with USE_READ_ONLY access to this License Code.
 *
 *  Value: "ENABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicenseCode_State_Enabled;
/**
 *  Use of this license is limited to a project whitelist.
 *
 *  Value: "RESTRICTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicenseCode_State_Restricted;
/** Value: "STATE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicenseCode_State_StateUnspecified;
/**
 *  Reserved state.
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicenseCode_State_Terminated;

// ----------------------------------------------------------------------------
// GTLRCompute_LicensesListResponse_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LicensesListResponse_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_LocationPolicy.targetShape

/**
 *  GCE picks zones for creating VM instances to fulfill the requested number of
 *  VMs within present resource constraints and to maximize utilization of
 *  unused zonal reservations. Recommended for batch workloads that do not
 *  require high availability.
 *
 *  Value: "ANY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LocationPolicy_TargetShape_Any;
/**
 *  GCE always selects a single zone for all the VMs, optimizing for resource
 *  quotas, available reservations and general capacity. Recommended for batch
 *  workloads that cannot tollerate distribution over multiple zones. This the
 *  default shape in Bulk Insert and Capacity Advisor APIs.
 *
 *  Value: "ANY_SINGLE_ZONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LocationPolicy_TargetShape_AnySingleZone;
/**
 *  GCE prioritizes acquisition of resources, scheduling VMs in zones where
 *  resources are available while distributing VMs as evenly as possible across
 *  allowed zones to minimize the impact of zonal failure. Recommended for
 *  highly available serving workloads.
 *
 *  Value: "BALANCED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LocationPolicy_TargetShape_Balanced;

// ----------------------------------------------------------------------------
// GTLRCompute_LocationPolicyLocation.preference

/**
 *  Location is allowed for use.
 *
 *  Value: "ALLOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LocationPolicyLocation_Preference_Allow;
/**
 *  Location is prohibited.
 *
 *  Value: "DENY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LocationPolicyLocation_Preference_Deny;
/**
 *  Default value, unused.
 *
 *  Value: "PREFERENCE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LocationPolicyLocation_Preference_PreferenceUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_LogConfigCloudAuditOptions.logName

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "ADMIN_ACTIVITY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LogConfigCloudAuditOptions_LogName_AdminActivity;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "DATA_ACCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LogConfigCloudAuditOptions_LogName_DataAccess;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "UNSPECIFIED_LOG_NAME"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LogConfigCloudAuditOptions_LogName_UnspecifiedLogName;

// ----------------------------------------------------------------------------
// GTLRCompute_LogConfigDataAccessOptions.logMode

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "LOG_FAIL_CLOSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LogConfigDataAccessOptions_LogMode_LogFailClosed;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "LOG_MODE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_LogConfigDataAccessOptions_LogMode_LogModeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_MachineImage.status

/** Value: "CREATING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImage_Status_Creating;
/** Value: "DELETING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImage_Status_Deleting;
/** Value: "INVALID" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImage_Status_Invalid;
/** Value: "READY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImage_Status_Ready;
/** Value: "UPLOADING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImage_Status_Uploading;

// ----------------------------------------------------------------------------
// GTLRCompute_MachineImageList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineImageList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_MachineTypeAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_MachineTypeList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypeList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_MachineTypesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MachineTypesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_ManagedInstance.currentAction

/**
 *  The managed instance group is abandoning this instance. The instance will be
 *  removed from the instance group and from any target pools that are
 *  associated with this group.
 *
 *  Value: "ABANDONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Abandoning;
/**
 *  The managed instance group is creating this instance. If the group fails to
 *  create this instance, it will try again until it is successful.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Creating;
/**
 *  The managed instance group is attempting to create this instance only once.
 *  If the group fails to create this instance, it does not try again and the
 *  group's targetSize value is decreased.
 *
 *  Value: "CREATING_WITHOUT_RETRIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_CurrentAction_CreatingWithoutRetries;
/**
 *  The managed instance group is permanently deleting this instance.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Deleting;
/**
 *  The managed instance group has not scheduled any actions for this instance.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_CurrentAction_None;
/**
 *  The managed instance group is recreating this instance.
 *
 *  Value: "RECREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Recreating;
/**
 *  The managed instance group is applying configuration changes to the instance
 *  without stopping it. For example, the group can update the target pool list
 *  for an instance without stopping that instance.
 *
 *  Value: "REFRESHING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Refreshing;
/**
 *  The managed instance group is restarting this instance.
 *
 *  Value: "RESTARTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Restarting;
/**
 *  The managed instance group is resuming this instance.
 *
 *  Value: "RESUMING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Resuming;
/**
 *  The managed instance group is starting this instance.
 *
 *  Value: "STARTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Starting;
/**
 *  The managed instance group is stopping this instance.
 *
 *  Value: "STOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Stopping;
/**
 *  The managed instance group is suspending this instance.
 *
 *  Value: "SUSPENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Suspending;
/**
 *  The managed instance group is verifying this already created instance.
 *  Verification happens every time the instance is (re)created or restarted and
 *  consists of: 1. Waiting until health check specified as part of this managed
 *  instance group's autohealing policy reports HEALTHY. Note: Applies only if
 *  autohealing policy has a health check specified 2. Waiting for addition
 *  verification steps performed as post-instance creation (subject to future
 *  extensions).
 *
 *  Value: "VERIFYING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_CurrentAction_Verifying;

// ----------------------------------------------------------------------------
// GTLRCompute_ManagedInstance.instanceStatus

/**
 *  The Nanny is halted and we are performing tear down tasks like network
 *  deprogramming, releasing quota, IP, tearing down disks etc.
 *
 *  Value: "DEPROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Deprovisioning;
/**
 *  Resources are being allocated for the instance.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Provisioning;
/**
 *  The instance is in repair.
 *
 *  Value: "REPAIRING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Repairing;
/**
 *  The instance is running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Running;
/**
 *  All required resources have been allocated and the instance is being
 *  started.
 *
 *  Value: "STAGING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Staging;
/**
 *  The instance has stopped successfully.
 *
 *  Value: "STOPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Stopped;
/**
 *  The instance is currently stopping (either being deleted or killed).
 *
 *  Value: "STOPPING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Stopping;
/**
 *  The instance has suspended.
 *
 *  Value: "SUSPENDED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Suspended;
/**
 *  The instance is suspending.
 *
 *  Value: "SUSPENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Suspending;
/**
 *  The instance has stopped (either by explicit action or underlying failure).
 *
 *  Value: "TERMINATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstance_InstanceStatus_Terminated;

// ----------------------------------------------------------------------------
// GTLRCompute_ManagedInstanceInstanceHealth.detailedHealthState

/**
 *  The instance is being drained. The existing connections to the instance have
 *  time to complete, but the new ones are being refused.
 *
 *  Value: "DRAINING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstanceInstanceHealth_DetailedHealthState_Draining;
/**
 *  The instance is reachable i.e. a connection to the application health
 *  checking endpoint can be established, and conforms to the requirements
 *  defined by the health check.
 *
 *  Value: "HEALTHY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstanceInstanceHealth_DetailedHealthState_Healthy;
/**
 *  The instance is unreachable i.e. a connection to the application health
 *  checking endpoint cannot be established, or the server does not respond
 *  within the specified timeout.
 *
 *  Value: "TIMEOUT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstanceInstanceHealth_DetailedHealthState_Timeout;
/**
 *  The instance is reachable, but does not conform to the requirements defined
 *  by the health check.
 *
 *  Value: "UNHEALTHY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstanceInstanceHealth_DetailedHealthState_Unhealthy;
/**
 *  The health checking system is aware of the instance but its health is not
 *  known at the moment.
 *
 *  Value: "UNKNOWN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ManagedInstanceInstanceHealth_DetailedHealthState_Unknown;

// ----------------------------------------------------------------------------
// GTLRCompute_MetadataFilter.filterMatchCriteria

/**
 *  Specifies that all filterLabels must match for the metadataFilter to be
 *  considered a match.
 *
 *  Value: "MATCH_ALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MetadataFilter_FilterMatchCriteria_MatchAll;
/**
 *  Specifies that any filterLabel must match for the metadataFilter to be
 *  considered a match.
 *
 *  Value: "MATCH_ANY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MetadataFilter_FilterMatchCriteria_MatchAny;
/**
 *  Indicates that the match criteria was not set. A metadataFilter must never
 *  be created with this value.
 *
 *  Value: "NOT_SET"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_MetadataFilter_FilterMatchCriteria_NotSet;

// ----------------------------------------------------------------------------
// GTLRCompute_Network.networkFirewallPolicyEnforcementOrder

/** Value: "AFTER_CLASSIC_FIREWALL" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Network_NetworkFirewallPolicyEnforcementOrder_AfterClassicFirewall;
/** Value: "BEFORE_CLASSIC_FIREWALL" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Network_NetworkFirewallPolicyEnforcementOrder_BeforeClassicFirewall;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkEndpointGroup.networkEndpointType

/**
 *  The network endpoint is represented by an IP address.
 *
 *  Value: "GCE_VM_IP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_GceVmIp;
/**
 *  The network endpoint is represented by IP address and port pair.
 *
 *  Value: "GCE_VM_IP_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_GceVmIpPort;
/**
 *  The network endpoint is represented by fully qualified domain name and port.
 *
 *  Value: "INTERNET_FQDN_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_InternetFqdnPort;
/**
 *  The network endpoint is represented by an internet IP address and port.
 *
 *  Value: "INTERNET_IP_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_InternetIpPort;
/**
 *  The network endpoint is represented by an IP address and port. The endpoint
 *  belongs to a VM or pod running in a customer's on-premises.
 *
 *  Value: "NON_GCP_PRIVATE_IP_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_NonGcpPrivateIpPort;
/**
 *  The network endpoint is either public Google APIs or services exposed by
 *  other GCP Project with a Service Attachment. The connection is set up by
 *  private service connect
 *
 *  Value: "PRIVATE_SERVICE_CONNECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_PrivateServiceConnect;
/**
 *  The network endpoint is handled by specified serverless infrastructure.
 *
 *  Value: "SERVERLESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_Serverless;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkEndpointGroupAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkEndpointGroupList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkEndpointGroupPscData.pscConnectionStatus

/**
 *  The connection has been accepted by the producer.
 *
 *  Value: "ACCEPTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_Accepted;
/**
 *  The connection has been closed by the producer and will not serve traffic
 *  going forward.
 *
 *  Value: "CLOSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_Closed;
/**
 *  The connection has been accepted by the producer, but the producer needs to
 *  take further action before the forwarding rule can serve traffic.
 *
 *  Value: "NEEDS_ATTENTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_NeedsAttention;
/**
 *  The connection is pending acceptance by the producer.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_Pending;
/**
 *  The connection has been rejected by the producer.
 *
 *  Value: "REJECTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_Rejected;
/** Value: "STATUS_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_StatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkEndpointGroupsListEndpointsRequest.healthStatus

/**
 *  Show the health status for each network endpoint. Impacts latency of the
 *  call.
 *
 *  Value: "SHOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListEndpointsRequest_HealthStatus_Show;
/**
 *  Health status for network endpoints will not be provided.
 *
 *  Value: "SKIP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListEndpointsRequest_HealthStatus_Skip;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkEndpointGroupsScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkInterface.ipv6AccessType

/**
 *  This network interface can have external IPv6.
 *
 *  Value: "EXTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkInterface_Ipv6AccessType_External;
/**
 *  This network interface can have internal IPv6.
 *
 *  Value: "INTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkInterface_Ipv6AccessType_Internal;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkInterface.nicType

/**
 *  GVNIC
 *
 *  Value: "GVNIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkInterface_NicType_Gvnic;
/**
 *  No type specified.
 *
 *  Value: "UNSPECIFIED_NIC_TYPE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkInterface_NicType_UnspecifiedNicType;
/**
 *  VIRTIO
 *
 *  Value: "VIRTIO_NET"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkInterface_NicType_VirtioNet;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkInterface.stackType

/**
 *  The network interface can have both IPv4 and IPv6 addresses.
 *
 *  Value: "IPV4_IPV6"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkInterface_StackType_Ipv4Ipv6;
/**
 *  The network interface will be assigned IPv4 address.
 *
 *  Value: "IPV4_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkInterface_StackType_Ipv4Only;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkPeering.stackType

/**
 *  This Peering will allow IPv4 traffic and routes to be exchanged.
 *  Additionally if the matching peering is IPV4_IPV6, IPv6 traffic and routes
 *  will be exchanged as well.
 *
 *  Value: "IPV4_IPV6"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkPeering_StackType_Ipv4Ipv6;
/**
 *  This Peering will only allow IPv4 traffic and routes to be exchanged, even
 *  if the matching peering is IPV4_IPV6.
 *
 *  Value: "IPV4_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkPeering_StackType_Ipv4Only;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkPeering.state

/**
 *  Matching configuration exists on the peer.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkPeering_State_Active;
/**
 *  There is no matching configuration on the peer, including the case when peer
 *  does not exist.
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkPeering_State_Inactive;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkPerformanceConfig.totalEgressBandwidthTier

/** Value: "DEFAULT" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkPerformanceConfig_TotalEgressBandwidthTier_Default;
/** Value: "TIER_1" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkPerformanceConfig_TotalEgressBandwidthTier_Tier1;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworkRoutingConfig.routingMode

/** Value: "GLOBAL" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkRoutingConfig_RoutingMode_Global;
/** Value: "REGIONAL" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworkRoutingConfig_RoutingMode_Regional;

// ----------------------------------------------------------------------------
// GTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy.type

/** Value: "HIERARCHY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Hierarchy;
/** Value: "NETWORK" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Network;
/** Value: "UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Unspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeGroup.maintenancePolicy

/**
 *  Allow the node and corresponding instances to retain default maintenance
 *  behavior.
 *
 *  Value: "DEFAULT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroup_MaintenancePolicy_Default;
/** Value: "MAINTENANCE_POLICY_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroup_MaintenancePolicy_MaintenancePolicyUnspecified;
/**
 *  When maintenance must be done on a node, the instances on that node will be
 *  moved to other nodes in the group. Instances with onHostMaintenance =
 *  MIGRATE will live migrate to their destinations while instances with
 *  onHostMaintenance = TERMINATE will terminate and then restart on their
 *  destination nodes if automaticRestart = true.
 *
 *  Value: "MIGRATE_WITHIN_NODE_GROUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroup_MaintenancePolicy_MigrateWithinNodeGroup;
/**
 *  Instances in this group will restart on the same node when maintenance has
 *  completed. Instances must have onHostMaintenance = TERMINATE, and they will
 *  only restart if automaticRestart = true.
 *
 *  Value: "RESTART_IN_PLACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroup_MaintenancePolicy_RestartInPlace;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeGroup.status

/** Value: "CREATING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroup_Status_Creating;
/** Value: "DELETING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroup_Status_Deleting;
/** Value: "INVALID" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroup_Status_Invalid;
/** Value: "READY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroup_Status_Ready;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeGroupAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeGroupAutoscalingPolicy.mode

/** Value: "MODE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAutoscalingPolicy_Mode_ModeUnspecified;
/**
 *  Autoscaling is disabled.
 *
 *  Value: "OFF"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAutoscalingPolicy_Mode_Off;
/**
 *  Autocaling is fully enabled.
 *
 *  Value: "ON"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAutoscalingPolicy_Mode_On;
/**
 *  Autoscaling will only scale out and will not remove nodes.
 *
 *  Value: "ONLY_SCALE_OUT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupAutoscalingPolicy_Mode_OnlyScaleOut;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeGroupList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeGroupNode.cpuOvercommitType

/** Value: "CPU_OVERCOMMIT_TYPE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupNode_CpuOvercommitType_CpuOvercommitTypeUnspecified;
/** Value: "ENABLED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupNode_CpuOvercommitType_Enabled;
/** Value: "NONE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupNode_CpuOvercommitType_None;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeGroupNode.status

/** Value: "CREATING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupNode_Status_Creating;
/** Value: "DELETING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupNode_Status_Deleting;
/** Value: "INVALID" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupNode_Status_Invalid;
/** Value: "READY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupNode_Status_Ready;
/** Value: "REPAIRING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupNode_Status_Repairing;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeGroupsListNodes_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsListNodes_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeGroupsScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeGroupsScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeTemplate.cpuOvercommitType

/** Value: "CPU_OVERCOMMIT_TYPE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplate_CpuOvercommitType_CpuOvercommitTypeUnspecified;
/** Value: "ENABLED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplate_CpuOvercommitType_Enabled;
/** Value: "NONE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplate_CpuOvercommitType_None;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeTemplate.status

/**
 *  Resources are being allocated.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplate_Status_Creating;
/**
 *  The node template is currently being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplate_Status_Deleting;
/**
 *  Invalid status.
 *
 *  Value: "INVALID"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplate_Status_Invalid;
/**
 *  The node template is ready.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplate_Status_Ready;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeTemplateAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeTemplateList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplateList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeTemplatesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTemplatesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeTypeAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeTypeList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypeList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NodeTypesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NodeTypesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_NotificationEndpointList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_NotificationEndpointList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_Operation.status

/** Value: "DONE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Status_Done;
/** Value: "PENDING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Status_Pending;
/** Value: "RUNNING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Status_Running;

// ----------------------------------------------------------------------------
// GTLRCompute_Operation_Warnings_Item.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Operation_Warnings_Item_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_OperationAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_OperationList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_OperationsScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_OperationsScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_PacketIntervals.duration

/** Value: "DURATION_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketIntervals_Duration_DurationUnspecified;
/** Value: "HOUR" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketIntervals_Duration_Hour;
/**
 *  From BfdSession object creation time.
 *
 *  Value: "MAX"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketIntervals_Duration_Max;
/** Value: "MINUTE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketIntervals_Duration_Minute;

// ----------------------------------------------------------------------------
// GTLRCompute_PacketIntervals.type

/**
 *  Only applies to Echo packets. This shows the intervals between sending and
 *  receiving the same packet.
 *
 *  Value: "LOOPBACK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketIntervals_Type_Loopback;
/**
 *  Intervals between received packets.
 *
 *  Value: "RECEIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketIntervals_Type_Receive;
/**
 *  Intervals between transmitted packets.
 *
 *  Value: "TRANSMIT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketIntervals_Type_Transmit;
/** Value: "TYPE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketIntervals_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_PacketMirroring.enable

/** Value: "FALSE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroring_Enable_False;
/** Value: "TRUE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroring_Enable_True;

// ----------------------------------------------------------------------------
// GTLRCompute_PacketMirroringAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_PacketMirroringFilter.direction

/**
 *  Default, both directions are mirrored.
 *
 *  Value: "BOTH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringFilter_Direction_Both;
/**
 *  Only egress traffic is mirrored.
 *
 *  Value: "EGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringFilter_Direction_Egress;
/**
 *  Only ingress traffic is mirrored.
 *
 *  Value: "INGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringFilter_Direction_Ingress;

// ----------------------------------------------------------------------------
// GTLRCompute_PacketMirroringList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_PacketMirroringsScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PacketMirroringsScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_PerInstanceConfig.status

/**
 *  The per-instance configuration is being applied to the instance, but is not
 *  yet effective, possibly waiting for the instance to, for example, REFRESH.
 *
 *  Value: "APPLYING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PerInstanceConfig_Status_Applying;
/**
 *  The per-instance configuration deletion is being applied on the instance,
 *  possibly waiting for the instance to, for example, REFRESH.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PerInstanceConfig_Status_Deleting;
/**
 *  The per-instance configuration is effective on the instance, meaning that
 *  all disks, ips and metadata specified in this configuration are attached or
 *  set on the instance.
 *
 *  Value: "EFFECTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PerInstanceConfig_Status_Effective;
/**
 *  *[Default]* The default status, when no per-instance configuration exists.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PerInstanceConfig_Status_None;
/**
 *  The per-instance configuration is set on an instance but not been applied
 *  yet.
 *
 *  Value: "UNAPPLIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PerInstanceConfig_Status_Unapplied;
/**
 *  The per-instance configuration has been deleted, but the deletion is not yet
 *  applied.
 *
 *  Value: "UNAPPLIED_DELETION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PerInstanceConfig_Status_UnappliedDeletion;

// ----------------------------------------------------------------------------
// GTLRCompute_PreservedStatePreservedDisk.autoDelete

/** Value: "NEVER" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PreservedStatePreservedDisk_AutoDelete_Never;
/** Value: "ON_PERMANENT_INSTANCE_DELETION" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PreservedStatePreservedDisk_AutoDelete_OnPermanentInstanceDeletion;

// ----------------------------------------------------------------------------
// GTLRCompute_PreservedStatePreservedDisk.mode

/**
 *  Attaches this disk in read-only mode. Multiple VM instances can use a disk
 *  in READ_ONLY mode at a time.
 *
 *  Value: "READ_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PreservedStatePreservedDisk_Mode_ReadOnly;
/**
 *  *[Default]* Attaches this disk in READ_WRITE mode. Only one VM instance at a
 *  time can be attached to a disk in READ_WRITE mode.
 *
 *  Value: "READ_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PreservedStatePreservedDisk_Mode_ReadWrite;

// ----------------------------------------------------------------------------
// GTLRCompute_Project.defaultNetworkTier

/**
 *  Public internet quality with fixed bandwidth.
 *
 *  Value: "FIXED_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Project_DefaultNetworkTier_FixedStandard;
/**
 *  High quality, Google-grade network tier, support for all networking
 *  products.
 *
 *  Value: "PREMIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Project_DefaultNetworkTier_Premium;
/**
 *  Public internet quality, only limited support for other networking products.
 *
 *  Value: "STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Project_DefaultNetworkTier_Standard;
/**
 *  (Output only) Temporary tier for FIXED_STANDARD when fixed standard tier is
 *  expired or not configured.
 *
 *  Value: "STANDARD_OVERRIDES_FIXED_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Project_DefaultNetworkTier_StandardOverridesFixedStandard;

// ----------------------------------------------------------------------------
// GTLRCompute_Project.xpnProjectStatus

/** Value: "HOST" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Project_XpnProjectStatus_Host;
/** Value: "UNSPECIFIED_XPN_PROJECT_STATUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Project_XpnProjectStatus_UnspecifiedXpnProjectStatus;

// ----------------------------------------------------------------------------
// GTLRCompute_ProjectsSetDefaultNetworkTierRequest.networkTier

/**
 *  Public internet quality with fixed bandwidth.
 *
 *  Value: "FIXED_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ProjectsSetDefaultNetworkTierRequest_NetworkTier_FixedStandard;
/**
 *  High quality, Google-grade network tier, support for all networking
 *  products.
 *
 *  Value: "PREMIUM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ProjectsSetDefaultNetworkTierRequest_NetworkTier_Premium;
/**
 *  Public internet quality, only limited support for other networking products.
 *
 *  Value: "STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ProjectsSetDefaultNetworkTierRequest_NetworkTier_Standard;
/**
 *  (Output only) Temporary tier for FIXED_STANDARD when fixed standard tier is
 *  expired or not configured.
 *
 *  Value: "STANDARD_OVERRIDES_FIXED_STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ProjectsSetDefaultNetworkTierRequest_NetworkTier_StandardOverridesFixedStandard;

// ----------------------------------------------------------------------------
// GTLRCompute_PublicAdvertisedPrefix.status

/**
 *  RPKI validation is complete.
 *
 *  Value: "INITIAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefix_Status_Initial;
/**
 *  The prefix is fully configured.
 *
 *  Value: "PREFIX_CONFIGURATION_COMPLETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefix_Status_PrefixConfigurationComplete;
/**
 *  The prefix is being configured.
 *
 *  Value: "PREFIX_CONFIGURATION_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefix_Status_PrefixConfigurationInProgress;
/**
 *  The prefix is being removed.
 *
 *  Value: "PREFIX_REMOVAL_IN_PROGRESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefix_Status_PrefixRemovalInProgress;
/**
 *  User has configured the PTR.
 *
 *  Value: "PTR_CONFIGURED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefix_Status_PtrConfigured;
/**
 *  Reverse DNS lookup failed.
 *
 *  Value: "REVERSE_DNS_LOOKUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefix_Status_ReverseDnsLookupFailed;
/**
 *  Reverse DNS lookup is successful.
 *
 *  Value: "VALIDATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefix_Status_Validated;

// ----------------------------------------------------------------------------
// GTLRCompute_PublicAdvertisedPrefixList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_PublicDelegatedPrefix.status

/**
 *  The public delegated prefix is active.
 *
 *  Value: "ANNOUNCED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefix_Status_Announced;
/**
 *  The public delegated prefix is being deprovsioned.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefix_Status_Deleting;
/**
 *  The public delegated prefix is being initialized and addresses cannot be
 *  created yet.
 *
 *  Value: "INITIALIZING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefix_Status_Initializing;
/**
 *  The public delegated prefix is currently withdrawn but ready to be
 *  announced.
 *
 *  Value: "READY_TO_ANNOUNCE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefix_Status_ReadyToAnnounce;

// ----------------------------------------------------------------------------
// GTLRCompute_PublicDelegatedPrefixAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_PublicDelegatedPrefixesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_PublicDelegatedPrefixList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_PublicDelegatedPrefixPublicDelegatedSubPrefix.status

/** Value: "ACTIVE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixPublicDelegatedSubPrefix_Status_Active;
/** Value: "INACTIVE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_PublicDelegatedPrefixPublicDelegatedSubPrefix_Status_Inactive;

// ----------------------------------------------------------------------------
// GTLRCompute_Quota.metric

/** Value: "A2_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_A2Cpus;
/** Value: "AFFINITY_GROUPS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_AffinityGroups;
/** Value: "AUTOSCALERS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_Autoscalers;
/** Value: "BACKEND_BUCKETS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_BackendBuckets;
/** Value: "BACKEND_SERVICES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_BackendServices;
/** Value: "C2_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_C2Cpus;
/** Value: "C2D_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_C2dCpus;
/** Value: "C3_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_C3Cpus;
/** Value: "COMMITMENTS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_Commitments;
/** Value: "COMMITTED_A2_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedA2Cpus;
/** Value: "COMMITTED_C2_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedC2Cpus;
/** Value: "COMMITTED_C2D_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedC2dCpus;
/** Value: "COMMITTED_C3_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedC3Cpus;
/** Value: "COMMITTED_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedCpus;
/** Value: "COMMITTED_E2_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedE2Cpus;
/** Value: "COMMITTED_LICENSES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedLicenses;
/** Value: "COMMITTED_LOCAL_SSD_TOTAL_GB" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedLocalSsdTotalGb;
/** Value: "COMMITTED_M3_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedM3Cpus;
/** Value: "COMMITTED_MEMORY_OPTIMIZED_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedMemoryOptimizedCpus;
/** Value: "COMMITTED_N2A_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedN2aCpus;
/** Value: "COMMITTED_N2_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedN2Cpus;
/** Value: "COMMITTED_N2D_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedN2dCpus;
/** Value: "COMMITTED_NVIDIA_A100_80GB_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedNvidiaA10080gbGpus;
/** Value: "COMMITTED_NVIDIA_A100_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedNvidiaA100Gpus;
/** Value: "COMMITTED_NVIDIA_K80_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedNvidiaK80Gpus;
/** Value: "COMMITTED_NVIDIA_P100_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedNvidiaP100Gpus;
/** Value: "COMMITTED_NVIDIA_P4_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedNvidiaP4Gpus;
/** Value: "COMMITTED_NVIDIA_T4_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedNvidiaT4Gpus;
/** Value: "COMMITTED_NVIDIA_V100_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedNvidiaV100Gpus;
/** Value: "COMMITTED_T2A_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedT2aCpus;
/** Value: "COMMITTED_T2D_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CommittedT2dCpus;
/**
 *  Guest CPUs
 *
 *  Value: "CPUS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_Cpus;
/** Value: "CPUS_ALL_REGIONS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_CpusAllRegions;
/** Value: "DISKS_TOTAL_GB" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_DisksTotalGb;
/** Value: "E2_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_E2Cpus;
/** Value: "EXTERNAL_MANAGED_FORWARDING_RULES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_ExternalManagedForwardingRules;
/** Value: "EXTERNAL_NETWORK_LB_FORWARDING_RULES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_ExternalNetworkLbForwardingRules;
/** Value: "EXTERNAL_PROTOCOL_FORWARDING_RULES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_ExternalProtocolForwardingRules;
/** Value: "EXTERNAL_VPN_GATEWAYS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_ExternalVpnGateways;
/** Value: "FIREWALLS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_Firewalls;
/** Value: "FORWARDING_RULES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_ForwardingRules;
/** Value: "GLOBAL_EXTERNAL_MANAGED_FORWARDING_RULES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_GlobalExternalManagedForwardingRules;
/** Value: "GLOBAL_INTERNAL_ADDRESSES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_GlobalInternalAddresses;
/** Value: "GPUS_ALL_REGIONS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_GpusAllRegions;
/** Value: "HEALTH_CHECKS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_HealthChecks;
/** Value: "IMAGES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_Images;
/** Value: "IN_PLACE_SNAPSHOTS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_InPlaceSnapshots;
/** Value: "INSTANCE_GROUP_MANAGERS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_InstanceGroupManagers;
/** Value: "INSTANCE_GROUPS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_InstanceGroups;
/** Value: "INSTANCES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_Instances;
/** Value: "INSTANCE_TEMPLATES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_InstanceTemplates;
/** Value: "INTERCONNECT_ATTACHMENTS_PER_REGION" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_InterconnectAttachmentsPerRegion;
/** Value: "INTERCONNECT_ATTACHMENTS_TOTAL_MBPS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_InterconnectAttachmentsTotalMbps;
/** Value: "INTERCONNECTS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_Interconnects;
/** Value: "INTERCONNECT_TOTAL_GBPS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_InterconnectTotalGbps;
/** Value: "INTERNAL_ADDRESSES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_InternalAddresses;
/** Value: "INTERNAL_TRAFFIC_DIRECTOR_FORWARDING_RULES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_InternalTrafficDirectorForwardingRules;
/** Value: "IN_USE_ADDRESSES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_InUseAddresses;
/** Value: "IN_USE_BACKUP_SCHEDULES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_InUseBackupSchedules;
/** Value: "IN_USE_SNAPSHOT_SCHEDULES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_InUseSnapshotSchedules;
/** Value: "LOCAL_SSD_TOTAL_GB" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_LocalSsdTotalGb;
/** Value: "M1_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_M1Cpus;
/** Value: "M2_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_M2Cpus;
/** Value: "M3_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_M3Cpus;
/** Value: "MACHINE_IMAGES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_MachineImages;
/** Value: "N2A_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_N2aCpus;
/** Value: "N2_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_N2Cpus;
/** Value: "N2D_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_N2dCpus;
/** Value: "NETWORK_ENDPOINT_GROUPS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_NetworkEndpointGroups;
/** Value: "NETWORK_FIREWALL_POLICIES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_NetworkFirewallPolicies;
/** Value: "NETWORKS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_Networks;
/** Value: "NODE_GROUPS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_NodeGroups;
/** Value: "NODE_TEMPLATES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_NodeTemplates;
/** Value: "NVIDIA_A100_80GB_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_NvidiaA10080gbGpus;
/** Value: "NVIDIA_A100_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_NvidiaA100Gpus;
/** Value: "NVIDIA_K80_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_NvidiaK80Gpus;
/** Value: "NVIDIA_P100_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_NvidiaP100Gpus;
/** Value: "NVIDIA_P100_VWS_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_NvidiaP100VwsGpus;
/** Value: "NVIDIA_P4_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_NvidiaP4Gpus;
/** Value: "NVIDIA_P4_VWS_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_NvidiaP4VwsGpus;
/** Value: "NVIDIA_T4_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_NvidiaT4Gpus;
/** Value: "NVIDIA_T4_VWS_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_NvidiaT4VwsGpus;
/** Value: "NVIDIA_V100_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_NvidiaV100Gpus;
/** Value: "PACKET_MIRRORINGS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PacketMirrorings;
/** Value: "PD_EXTREME_TOTAL_PROVISIONED_IOPS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PdExtremeTotalProvisionedIops;
/** Value: "PREEMPTIBLE_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PreemptibleCpus;
/** Value: "PREEMPTIBLE_LOCAL_SSD_GB" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PreemptibleLocalSsdGb;
/** Value: "PREEMPTIBLE_NVIDIA_A100_80GB_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaA10080gbGpus;
/** Value: "PREEMPTIBLE_NVIDIA_A100_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaA100Gpus;
/** Value: "PREEMPTIBLE_NVIDIA_K80_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaK80Gpus;
/** Value: "PREEMPTIBLE_NVIDIA_P100_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaP100Gpus;
/** Value: "PREEMPTIBLE_NVIDIA_P100_VWS_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaP100VwsGpus;
/** Value: "PREEMPTIBLE_NVIDIA_P4_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaP4Gpus;
/** Value: "PREEMPTIBLE_NVIDIA_P4_VWS_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaP4VwsGpus;
/** Value: "PREEMPTIBLE_NVIDIA_T4_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaT4Gpus;
/** Value: "PREEMPTIBLE_NVIDIA_T4_VWS_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaT4VwsGpus;
/** Value: "PREEMPTIBLE_NVIDIA_V100_GPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PreemptibleNvidiaV100Gpus;
/** Value: "PSC_ILB_CONSUMER_FORWARDING_RULES_PER_PRODUCER_NETWORK" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PscIlbConsumerForwardingRulesPerProducerNetwork;
/** Value: "PSC_INTERNAL_LB_FORWARDING_RULES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PscInternalLbForwardingRules;
/** Value: "PUBLIC_ADVERTISED_PREFIXES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PublicAdvertisedPrefixes;
/** Value: "PUBLIC_DELEGATED_PREFIXES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_PublicDelegatedPrefixes;
/** Value: "REGIONAL_AUTOSCALERS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_RegionalAutoscalers;
/** Value: "REGIONAL_INSTANCE_GROUP_MANAGERS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_RegionalInstanceGroupManagers;
/** Value: "RESERVATIONS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_Reservations;
/** Value: "RESOURCE_POLICIES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_ResourcePolicies;
/** Value: "ROUTERS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_Routers;
/** Value: "ROUTES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_Routes;
/** Value: "SECURITY_POLICIES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_SecurityPolicies;
/** Value: "SECURITY_POLICIES_PER_REGION" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_SecurityPoliciesPerRegion;
/** Value: "SECURITY_POLICY_CEVAL_RULES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_SecurityPolicyCevalRules;
/** Value: "SECURITY_POLICY_RULES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_SecurityPolicyRules;
/** Value: "SECURITY_POLICY_RULES_PER_REGION" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_SecurityPolicyRulesPerRegion;
/** Value: "SERVICE_ATTACHMENTS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_ServiceAttachments;
/**
 *  The total number of snapshots allowed for a single project.
 *
 *  Value: "SNAPSHOTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_Snapshots;
/** Value: "SSD_TOTAL_GB" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_SsdTotalGb;
/** Value: "SSL_CERTIFICATES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_SslCertificates;
/** Value: "STATIC_ADDRESSES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_StaticAddresses;
/** Value: "STATIC_BYOIP_ADDRESSES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_StaticByoipAddresses;
/** Value: "STATIC_EXTERNAL_IPV6_ADDRESS_RANGES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_StaticExternalIpv6AddressRanges;
/** Value: "SUBNETWORKS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_Subnetworks;
/** Value: "T2A_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_T2aCpus;
/** Value: "T2D_CPUS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_T2dCpus;
/** Value: "TARGET_HTTP_PROXIES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_TargetHttpProxies;
/** Value: "TARGET_HTTPS_PROXIES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_TargetHttpsProxies;
/** Value: "TARGET_INSTANCES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_TargetInstances;
/** Value: "TARGET_POOLS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_TargetPools;
/** Value: "TARGET_SSL_PROXIES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_TargetSslProxies;
/** Value: "TARGET_TCP_PROXIES" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_TargetTcpProxies;
/** Value: "TARGET_VPN_GATEWAYS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_TargetVpnGateways;
/** Value: "URL_MAPS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_UrlMaps;
/** Value: "VPN_GATEWAYS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_VpnGateways;
/** Value: "VPN_TUNNELS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_VpnTunnels;
/** Value: "XPN_SERVICE_PROJECTS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Quota_Metric_XpnServiceProjects;

// ----------------------------------------------------------------------------
// GTLRCompute_Region.status

/** Value: "DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Region_Status_Down;
/** Value: "UP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Region_Status_Up;

// ----------------------------------------------------------------------------
// GTLRCompute_RegionAutoscalerList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionAutoscalerList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_RegionDiskTypeList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionDiskTypeList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_RegionInstanceGroupList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_RegionInstanceGroupManagerList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest.minimalAction

/**
 *  Do not perform any action.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MinimalAction_None;
/**
 *  Updates applied in runtime, instances will not be disrupted.
 *
 *  Value: "REFRESH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MinimalAction_Refresh;
/**
 *  Old instances will be deleted. New instances will be created from the target
 *  template.
 *
 *  Value: "REPLACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MinimalAction_Replace;
/**
 *  Every instance will be restarted.
 *
 *  Value: "RESTART"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MinimalAction_Restart;

// ----------------------------------------------------------------------------
// GTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest.mostDisruptiveAllowedAction

/**
 *  Do not perform any action.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_None;
/**
 *  Updates applied in runtime, instances will not be disrupted.
 *
 *  Value: "REFRESH"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Refresh;
/**
 *  Old instances will be deleted. New instances will be created from the target
 *  template.
 *
 *  Value: "REPLACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Replace;
/**
 *  Every instance will be restarted.
 *
 *  Value: "RESTART"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Restart;

// ----------------------------------------------------------------------------
// GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_RegionInstanceGroupsListInstances_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_RegionInstanceGroupsListInstancesRequest.instanceState

/**
 *  Matches any status of the instances, running, non-running and others.
 *
 *  Value: "ALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstancesRequest_InstanceState_All;
/**
 *  Instance is in RUNNING state if it is running.
 *
 *  Value: "RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionInstanceGroupsListInstancesRequest_InstanceState_Running;

// ----------------------------------------------------------------------------
// GTLRCompute_RegionList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy.type

/** Value: "HIERARCHY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Hierarchy;
/** Value: "NETWORK" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Network;
/** Value: "NETWORK_REGIONAL" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_NetworkRegional;
/** Value: "UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Unspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_Reservation.status

/**
 *  Resources are being allocated for the reservation.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Reservation_Status_Creating;
/**
 *  Reservation is currently being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Reservation_Status_Deleting;
/** Value: "INVALID" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Reservation_Status_Invalid;
/**
 *  Reservation has allocated all its resources.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Reservation_Status_Ready;
/**
 *  Reservation is currently being resized.
 *
 *  Value: "UPDATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Reservation_Status_Updating;

// ----------------------------------------------------------------------------
// GTLRCompute_ReservationAffinity.consumeReservationType

/**
 *  Consume any allocation available.
 *
 *  Value: "ANY_RESERVATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAffinity_ConsumeReservationType_AnyReservation;
/**
 *  Do not consume from any allocated capacity.
 *
 *  Value: "NO_RESERVATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAffinity_ConsumeReservationType_NoReservation;
/**
 *  Must consume from a specific reservation. Must specify key value fields for
 *  specifying the reservations.
 *
 *  Value: "SPECIFIC_RESERVATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAffinity_ConsumeReservationType_SpecificReservation;
/** Value: "UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAffinity_ConsumeReservationType_Unspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_ReservationAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_ReservationList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_ReservationsScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ReservationsScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_ResourceCommitment.type

/** Value: "ACCELERATOR" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourceCommitment_Type_Accelerator;
/** Value: "LOCAL_SSD" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourceCommitment_Type_LocalSsd;
/** Value: "MEMORY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourceCommitment_Type_Memory;
/** Value: "UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourceCommitment_Type_Unspecified;
/** Value: "VCPU" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourceCommitment_Type_Vcpu;

// ----------------------------------------------------------------------------
// GTLRCompute_ResourcePoliciesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_ResourcePolicy.status

/**
 *  Resource policy is being created.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicy_Status_Creating;
/**
 *  Resource policy is being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicy_Status_Deleting;
/**
 *  Resource policy is expired and will not run again.
 *
 *  Value: "EXPIRED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicy_Status_Expired;
/** Value: "INVALID" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicy_Status_Invalid;
/**
 *  Resource policy is ready to be used.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicy_Status_Ready;

// ----------------------------------------------------------------------------
// GTLRCompute_ResourcePolicyAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_ResourcePolicyGroupPlacementPolicy.collocation

/** Value: "COLLOCATED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyGroupPlacementPolicy_Collocation_Collocated;
/** Value: "UNSPECIFIED_COLLOCATION" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyGroupPlacementPolicy_Collocation_UnspecifiedCollocation;

// ----------------------------------------------------------------------------
// GTLRCompute_ResourcePolicyList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy.onSourceDiskDelete

/** Value: "APPLY_RETENTION_POLICY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy_OnSourceDiskDelete_ApplyRetentionPolicy;
/** Value: "KEEP_AUTO_SNAPSHOTS" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy_OnSourceDiskDelete_KeepAutoSnapshots;
/** Value: "UNSPECIFIED_ON_SOURCE_DISK_DELETE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy_OnSourceDiskDelete_UnspecifiedOnSourceDiskDelete;

// ----------------------------------------------------------------------------
// GTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek.day

/** Value: "FRIDAY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Friday;
/** Value: "INVALID" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Invalid;
/** Value: "MONDAY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Monday;
/** Value: "SATURDAY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Saturday;
/** Value: "SUNDAY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Sunday;
/** Value: "THURSDAY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Thursday;
/** Value: "TUESDAY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Tuesday;
/** Value: "WEDNESDAY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Wednesday;

// ----------------------------------------------------------------------------
// GTLRCompute_Route.routeStatus

/**
 *  This route is processed and active.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_RouteStatus_Active;
/**
 *  The route is dropped due to the VPC exceeding the dynamic route limit. For
 *  dynamic route limit, please refer to the Learned route example
 *
 *  Value: "DROPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_RouteStatus_Dropped;
/**
 *  This route is processed but inactive due to failure from the backend. The
 *  backend may have rejected the route
 *
 *  Value: "INACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_RouteStatus_Inactive;
/**
 *  This route is being processed internally. The status will change once
 *  processed.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_RouteStatus_Pending;

// ----------------------------------------------------------------------------
// GTLRCompute_Route.routeType

/** Value: "BGP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_RouteType_Bgp;
/** Value: "STATIC" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_RouteType_Static;
/** Value: "SUBNET" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_RouteType_Subnet;
/** Value: "TRANSIT" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_RouteType_Transit;

// ----------------------------------------------------------------------------
// GTLRCompute_Route_Warnings_Item.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Route_Warnings_Item_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_RouteAsPath.pathSegmentType

/** Value: "AS_CONFED_SEQUENCE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteAsPath_PathSegmentType_AsConfedSequence;
/** Value: "AS_CONFED_SET" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteAsPath_PathSegmentType_AsConfedSet;
/** Value: "AS_SEQUENCE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteAsPath_PathSegmentType_AsSequence;
/** Value: "AS_SET" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteAsPath_PathSegmentType_AsSet;

// ----------------------------------------------------------------------------
// GTLRCompute_RouteList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouteList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterBgp.advertisedGroups

/**
 *  Advertise all available subnets (including peer VPC subnets).
 *
 *  Value: "ALL_SUBNETS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterBgp_AdvertisedGroups_AllSubnets;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterBgp.advertiseMode

/** Value: "CUSTOM" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterBgp_AdvertiseMode_Custom;
/** Value: "DEFAULT" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterBgp_AdvertiseMode_Default;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterBgpPeer.advertisedGroups

/**
 *  Advertise all available subnets (including peer VPC subnets).
 *
 *  Value: "ALL_SUBNETS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterBgpPeer_AdvertisedGroups_AllSubnets;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterBgpPeer.advertiseMode

/** Value: "CUSTOM" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterBgpPeer_AdvertiseMode_Custom;
/** Value: "DEFAULT" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterBgpPeer_AdvertiseMode_Default;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterBgpPeer.enable

/** Value: "FALSE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterBgpPeer_Enable_False;
/** Value: "TRUE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterBgpPeer_Enable_True;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterBgpPeer.managementType

/**
 *  The BGP peer is automatically created for PARTNER type
 *  InterconnectAttachment; Google will automatically create/delete this BGP
 *  peer when the PARTNER InterconnectAttachment is created/deleted, and Google
 *  will update the ipAddress and peerIpAddress when the PARTNER
 *  InterconnectAttachment is provisioned. This type of BGP peer cannot be
 *  created or deleted, but can be modified for all fields except for name,
 *  ipAddress and peerIpAddress.
 *
 *  Value: "MANAGED_BY_ATTACHMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterBgpPeer_ManagementType_ManagedByAttachment;
/**
 *  Default value, the BGP peer is manually created and managed by user.
 *
 *  Value: "MANAGED_BY_USER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterBgpPeer_ManagementType_ManagedByUser;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterBgpPeerBfd.sessionInitializationMode

/** Value: "ACTIVE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterBgpPeerBfd_SessionInitializationMode_Active;
/** Value: "DISABLED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterBgpPeerBfd_SessionInitializationMode_Disabled;
/** Value: "PASSIVE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterBgpPeerBfd_SessionInitializationMode_Passive;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterInterface.managementType

/**
 *  The interface is automatically created for PARTNER type
 *  InterconnectAttachment, Google will automatically create/update/delete this
 *  interface when the PARTNER InterconnectAttachment is
 *  created/provisioned/deleted. This type of interface cannot be manually
 *  managed by user.
 *
 *  Value: "MANAGED_BY_ATTACHMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterInterface_ManagementType_ManagedByAttachment;
/**
 *  Default value, the interface is manually created and managed by user.
 *
 *  Value: "MANAGED_BY_USER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterInterface_ManagementType_ManagedByUser;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterNat.endpointTypes

/**
 *  This is used for Secure Web Gateway endpoints.
 *
 *  Value: "ENDPOINT_TYPE_SWG"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterNat_EndpointTypes_EndpointTypeSwg;
/**
 *  This is the default.
 *
 *  Value: "ENDPOINT_TYPE_VM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterNat_EndpointTypes_EndpointTypeVm;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterNat.natIpAllocateOption

/**
 *  Nat IPs are allocated by GCP; customers can not specify any Nat IPs.
 *
 *  Value: "AUTO_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterNat_NatIpAllocateOption_AutoOnly;
/**
 *  Only use Nat IPs provided by customers. When specified Nat IPs are not
 *  enough then the Nat service fails for new VMs.
 *
 *  Value: "MANUAL_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterNat_NatIpAllocateOption_ManualOnly;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterNat.sourceSubnetworkIpRangesToNat

/**
 *  All the IP ranges in every Subnetwork are allowed to Nat.
 *
 *  Value: "ALL_SUBNETWORKS_ALL_IP_RANGES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterNat_SourceSubnetworkIpRangesToNat_AllSubnetworksAllIpRanges;
/**
 *  All the primary IP ranges in every Subnetwork are allowed to Nat.
 *
 *  Value: "ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterNat_SourceSubnetworkIpRangesToNat_AllSubnetworksAllPrimaryIpRanges;
/**
 *  A list of Subnetworks are allowed to Nat (specified in the field subnetwork
 *  below)
 *
 *  Value: "LIST_OF_SUBNETWORKS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterNat_SourceSubnetworkIpRangesToNat_ListOfSubnetworks;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterNatLogConfig.filter

/**
 *  Export logs for all (successful and unsuccessful) connections.
 *
 *  Value: "ALL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterNatLogConfig_Filter_All;
/**
 *  Export logs for connection failures only.
 *
 *  Value: "ERRORS_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterNatLogConfig_Filter_ErrorsOnly;
/**
 *  Export logs for successful connections only.
 *
 *  Value: "TRANSLATIONS_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterNatLogConfig_Filter_TranslationsOnly;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterNatSubnetworkToNat.sourceIpRangesToNat

/**
 *  The primary and all the secondary ranges are allowed to Nat.
 *
 *  Value: "ALL_IP_RANGES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterNatSubnetworkToNat_SourceIpRangesToNat_AllIpRanges;
/**
 *  A list of secondary ranges are allowed to Nat.
 *
 *  Value: "LIST_OF_SECONDARY_IP_RANGES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterNatSubnetworkToNat_SourceIpRangesToNat_ListOfSecondaryIpRanges;
/**
 *  The primary range is allowed to Nat.
 *
 *  Value: "PRIMARY_IP_RANGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterNatSubnetworkToNat_SourceIpRangesToNat_PrimaryIpRange;

// ----------------------------------------------------------------------------
// GTLRCompute_RoutersScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RoutersScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterStatusBgpPeerStatus.status

/** Value: "DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterStatusBgpPeerStatus_Status_Down;
/** Value: "UNKNOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterStatusBgpPeerStatus_Status_Unknown;
/** Value: "UP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterStatusBgpPeerStatus_Status_Up;

// ----------------------------------------------------------------------------
// GTLRCompute_RouterStatusBgpPeerStatus.statusReason

/**
 *  Indicates internal problems with configuration of MD5 authentication. This
 *  particular reason can only be returned when md5AuthEnabled is true and
 *  status is DOWN.
 *
 *  Value: "MD5_AUTH_INTERNAL_PROBLEM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterStatusBgpPeerStatus_StatusReason_Md5AuthInternalProblem;
/** Value: "STATUS_REASON_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_RouterStatusBgpPeerStatus_StatusReason_StatusReasonUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_Rule.action

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "ALLOW"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Rule_Action_Allow;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "ALLOW_WITH_LOG"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Rule_Action_AllowWithLog;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "DENY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Rule_Action_Deny;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "DENY_WITH_LOG"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Rule_Action_DenyWithLog;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "LOG"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Rule_Action_Log;
/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Value: "NO_ACTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Rule_Action_NoAction;

// ----------------------------------------------------------------------------
// GTLRCompute_SavedAttachedDisk.interface

/** Value: "NVME" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SavedAttachedDisk_Interface_Nvme;
/** Value: "SCSI" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SavedAttachedDisk_Interface_Scsi;

// ----------------------------------------------------------------------------
// GTLRCompute_SavedAttachedDisk.mode

/**
 *  Attaches this disk in read-only mode. Multiple virtual machines can use a
 *  disk in read-only mode at a time.
 *
 *  Value: "READ_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SavedAttachedDisk_Mode_ReadOnly;
/**
 *  *[Default]* Attaches this disk in read-write mode. Only one virtual machine
 *  at a time can be attached to a disk in read-write mode.
 *
 *  Value: "READ_WRITE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SavedAttachedDisk_Mode_ReadWrite;

// ----------------------------------------------------------------------------
// GTLRCompute_SavedAttachedDisk.storageBytesStatus

/** Value: "UPDATING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SavedAttachedDisk_StorageBytesStatus_Updating;
/** Value: "UP_TO_DATE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SavedAttachedDisk_StorageBytesStatus_UpToDate;

// ----------------------------------------------------------------------------
// GTLRCompute_SavedAttachedDisk.type

/** Value: "PERSISTENT" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SavedAttachedDisk_Type_Persistent;
/** Value: "SCRATCH" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SavedAttachedDisk_Type_Scratch;

// ----------------------------------------------------------------------------
// GTLRCompute_SavedDisk.architecture

/**
 *  Default value indicating Architecture is not set.
 *
 *  Value: "ARCHITECTURE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SavedDisk_Architecture_ArchitectureUnspecified;
/**
 *  Machines with architecture ARM64
 *
 *  Value: "ARM64"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SavedDisk_Architecture_Arm64;
/**
 *  Machines with architecture X86_64
 *
 *  Value: "X86_64"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SavedDisk_Architecture_X8664;

// ----------------------------------------------------------------------------
// GTLRCompute_SavedDisk.storageBytesStatus

/** Value: "UPDATING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SavedDisk_StorageBytesStatus_Updating;
/** Value: "UP_TO_DATE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SavedDisk_StorageBytesStatus_UpToDate;

// ----------------------------------------------------------------------------
// GTLRCompute_ScalingScheduleStatus.state

/**
 *  The current autoscaling recommendation is influenced by this scaling
 *  schedule.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ScalingScheduleStatus_State_Active;
/**
 *  This scaling schedule has been disabled by the user.
 *
 *  Value: "DISABLED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ScalingScheduleStatus_State_Disabled;
/**
 *  This scaling schedule will never become active again.
 *
 *  Value: "OBSOLETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ScalingScheduleStatus_State_Obsolete;
/**
 *  The current autoscaling recommendation is not influenced by this scaling
 *  schedule.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ScalingScheduleStatus_State_Ready;

// ----------------------------------------------------------------------------
// GTLRCompute_Scheduling.instanceTerminationAction

/**
 *  Delete the VM.
 *
 *  Value: "DELETE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Scheduling_InstanceTerminationAction_Delete;
/**
 *  Default value. This value is unused.
 *
 *  Value: "INSTANCE_TERMINATION_ACTION_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Scheduling_InstanceTerminationAction_InstanceTerminationActionUnspecified;
/**
 *  Stop the VM without storing in-memory content. default action.
 *
 *  Value: "STOP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Scheduling_InstanceTerminationAction_Stop;

// ----------------------------------------------------------------------------
// GTLRCompute_Scheduling.onHostMaintenance

/**
 *  *[Default]* Allows Compute Engine to automatically migrate instances out of
 *  the way of maintenance events.
 *
 *  Value: "MIGRATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Scheduling_OnHostMaintenance_Migrate;
/**
 *  Tells Compute Engine to terminate and (optionally) restart the instance away
 *  from the maintenance activity. If you would like your instance to be
 *  restarted, set the automaticRestart flag to true. Your instance may be
 *  restarted more than once, and it may be restarted outside the window of
 *  maintenance events.
 *
 *  Value: "TERMINATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Scheduling_OnHostMaintenance_Terminate;

// ----------------------------------------------------------------------------
// GTLRCompute_Scheduling.provisioningModel

/**
 *  Heavily discounted, no guaranteed runtime.
 *
 *  Value: "SPOT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Scheduling_ProvisioningModel_Spot;
/**
 *  Standard provisioning with user controlled runtime, no discounts.
 *
 *  Value: "STANDARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Scheduling_ProvisioningModel_Standard;

// ----------------------------------------------------------------------------
// GTLRCompute_SchedulingNodeAffinity.operatorProperty

/**
 *  Requires Compute Engine to seek for matched nodes.
 *
 *  Value: "IN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SchedulingNodeAffinity_OperatorProperty_In;
/**
 *  Requires Compute Engine to avoid certain nodes.
 *
 *  Value: "NOT_IN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SchedulingNodeAffinity_OperatorProperty_NotIn;
/** Value: "OPERATOR_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SchedulingNodeAffinity_OperatorProperty_OperatorUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_SecurityPoliciesAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_SecurityPoliciesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_SecurityPolicy.type

/** Value: "CLOUD_ARMOR" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicy_Type_CloudArmor;
/** Value: "CLOUD_ARMOR_EDGE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicy_Type_CloudArmorEdge;
/** Value: "CLOUD_ARMOR_NETWORK" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicy_Type_CloudArmorNetwork;

// ----------------------------------------------------------------------------
// GTLRCompute_SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig.ruleVisibility

/** Value: "PREMIUM" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig_RuleVisibility_Premium;
/** Value: "STANDARD" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig_RuleVisibility_Standard;

// ----------------------------------------------------------------------------
// GTLRCompute_SecurityPolicyAdvancedOptionsConfig.jsonParsing

/** Value: "DISABLED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyAdvancedOptionsConfig_JsonParsing_Disabled;
/** Value: "STANDARD" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyAdvancedOptionsConfig_JsonParsing_Standard;

// ----------------------------------------------------------------------------
// GTLRCompute_SecurityPolicyAdvancedOptionsConfig.logLevel

/** Value: "NORMAL" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyAdvancedOptionsConfig_LogLevel_Normal;
/** Value: "VERBOSE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyAdvancedOptionsConfig_LogLevel_Verbose;

// ----------------------------------------------------------------------------
// GTLRCompute_SecurityPolicyDdosProtectionConfig.ddosProtection

/** Value: "ADVANCED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyDdosProtectionConfig_DdosProtection_Advanced;
/** Value: "STANDARD" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyDdosProtectionConfig_DdosProtection_Standard;

// ----------------------------------------------------------------------------
// GTLRCompute_SecurityPolicyList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_SecurityPolicyRuleMatcher.versionedExpr

/**
 *  Matches the source IP address of a request to the IP ranges supplied in
 *  config.
 *
 *  Value: "SRC_IPS_V1"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyRuleMatcher_VersionedExpr_SrcIpsV1;

// ----------------------------------------------------------------------------
// GTLRCompute_SecurityPolicyRuleRateLimitOptions.enforceOnKey

/** Value: "ALL" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_All;
/** Value: "HTTP_COOKIE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_HttpCookie;
/** Value: "HTTP_HEADER" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_HttpHeader;
/** Value: "HTTP_PATH" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_HttpPath;
/** Value: "IP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_Ip;
/** Value: "REGION_CODE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_RegionCode;
/** Value: "SNI" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_Sni;
/** Value: "XFF_IP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_XffIp;

// ----------------------------------------------------------------------------
// GTLRCompute_SecurityPolicyRuleRedirectOptions.type

/** Value: "EXTERNAL_302" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyRuleRedirectOptions_Type_External302;
/** Value: "GOOGLE_RECAPTCHA" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SecurityPolicyRuleRedirectOptions_Type_GoogleRecaptcha;

// ----------------------------------------------------------------------------
// GTLRCompute_ServerBinding.type

/**
 *  Node may associate with any physical server over its lifetime.
 *
 *  Value: "RESTART_NODE_ON_ANY_SERVER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServerBinding_Type_RestartNodeOnAnyServer;
/**
 *  Node may associate with minimal physical servers over its lifetime.
 *
 *  Value: "RESTART_NODE_ON_MINIMAL_SERVERS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServerBinding_Type_RestartNodeOnMinimalServers;
/** Value: "SERVER_BINDING_TYPE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServerBinding_Type_ServerBindingTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_ServiceAttachment.connectionPreference

/** Value: "ACCEPT_AUTOMATIC" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachment_ConnectionPreference_AcceptAutomatic;
/** Value: "ACCEPT_MANUAL" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachment_ConnectionPreference_AcceptManual;
/** Value: "CONNECTION_PREFERENCE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachment_ConnectionPreference_ConnectionPreferenceUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_ServiceAttachmentAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_ServiceAttachmentConnectedEndpoint.status

/**
 *  The connection has been accepted by the producer.
 *
 *  Value: "ACCEPTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_Accepted;
/**
 *  The connection has been closed by the producer.
 *
 *  Value: "CLOSED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_Closed;
/**
 *  The connection has been accepted by the producer, but the producer needs to
 *  take further action before the forwarding rule can serve traffic.
 *
 *  Value: "NEEDS_ATTENTION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_NeedsAttention;
/**
 *  The connection is pending acceptance by the producer.
 *
 *  Value: "PENDING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_Pending;
/**
 *  The consumer is still connected but not using the connection.
 *
 *  Value: "REJECTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_Rejected;
/** Value: "STATUS_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_StatusUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_ServiceAttachmentList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_ServiceAttachmentsScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_ShareSettings.shareType

/**
 *  Default value.
 *
 *  Value: "LOCAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ShareSettings_ShareType_Local;
/**
 *  Shared-reservation is open to entire Organization
 *
 *  Value: "ORGANIZATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ShareSettings_ShareType_Organization;
/**
 *  Default value. This value is unused.
 *
 *  Value: "SHARE_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ShareSettings_ShareType_ShareTypeUnspecified;
/**
 *  Shared-reservation is open to specific projects
 *
 *  Value: "SPECIFIC_PROJECTS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ShareSettings_ShareType_SpecificProjects;

// ----------------------------------------------------------------------------
// GTLRCompute_Snapshot.architecture

/**
 *  Default value indicating Architecture is not set.
 *
 *  Value: "ARCHITECTURE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Snapshot_Architecture_ArchitectureUnspecified;
/**
 *  Machines with architecture ARM64
 *
 *  Value: "ARM64"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Snapshot_Architecture_Arm64;
/**
 *  Machines with architecture X86_64
 *
 *  Value: "X86_64"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Snapshot_Architecture_X8664;

// ----------------------------------------------------------------------------
// GTLRCompute_Snapshot.snapshotType

/** Value: "ARCHIVE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Snapshot_SnapshotType_Archive;
/** Value: "STANDARD" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Snapshot_SnapshotType_Standard;

// ----------------------------------------------------------------------------
// GTLRCompute_Snapshot.status

/**
 *  Snapshot creation is in progress.
 *
 *  Value: "CREATING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Snapshot_Status_Creating;
/**
 *  Snapshot is currently being deleted.
 *
 *  Value: "DELETING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Snapshot_Status_Deleting;
/**
 *  Snapshot creation failed.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Snapshot_Status_Failed;
/**
 *  Snapshot has been created successfully.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Snapshot_Status_Ready;
/**
 *  Snapshot is being uploaded.
 *
 *  Value: "UPLOADING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Snapshot_Status_Uploading;

// ----------------------------------------------------------------------------
// GTLRCompute_Snapshot.storageBytesStatus

/** Value: "UPDATING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Snapshot_StorageBytesStatus_Updating;
/** Value: "UP_TO_DATE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Snapshot_StorageBytesStatus_UpToDate;

// ----------------------------------------------------------------------------
// GTLRCompute_SnapshotList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SnapshotList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_SourceInstanceProperties.keyRevocationActionType

/**
 *  Default value. This value is unused.
 *
 *  Value: "KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SourceInstanceProperties_KeyRevocationActionType_KeyRevocationActionTypeUnspecified;
/**
 *  Indicates user chose no operation.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SourceInstanceProperties_KeyRevocationActionType_None;
/**
 *  Indicates user chose to opt for VM shutdown on key revocation.
 *
 *  Value: "STOP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SourceInstanceProperties_KeyRevocationActionType_Stop;

// ----------------------------------------------------------------------------
// GTLRCompute_SslCertificate.type

/**
 *  Google-managed SSLCertificate.
 *
 *  Value: "MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificate_Type_Managed;
/**
 *  Certificate uploaded by user.
 *
 *  Value: "SELF_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificate_Type_SelfManaged;
/** Value: "TYPE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificate_Type_TypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_SslCertificateAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_SslCertificateList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_SslCertificateManagedSslCertificate.status

/**
 *  The certificate management is working, and a certificate has been
 *  provisioned.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_Status_Active;
/** Value: "MANAGED_CERTIFICATE_STATUS_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_Status_ManagedCertificateStatusUnspecified;
/**
 *  The certificate management is working. GCP will attempt to provision the
 *  first certificate.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_Status_Provisioning;
/**
 *  Certificate provisioning failed due to an issue with the DNS or load
 *  balancing configuration. For details of which domain failed, consult
 *  domain_status field.
 *
 *  Value: "PROVISIONING_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_Status_ProvisioningFailed;
/**
 *  Certificate provisioning failed due to an issue with the DNS or load
 *  balancing configuration. It won't be retried. To try again delete and create
 *  a new managed SslCertificate resource. For details of which domain failed,
 *  consult domain_status field.
 *
 *  Value: "PROVISIONING_FAILED_PERMANENTLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_Status_ProvisioningFailedPermanently;
/**
 *  Renewal of the certificate has failed due to an issue with the DNS or load
 *  balancing configuration. The existing cert is still serving; however, it
 *  will expire shortly. To provision a renewed certificate, delete and create a
 *  new managed SslCertificate resource. For details on which domain failed,
 *  consult domain_status field.
 *
 *  Value: "RENEWAL_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_Status_RenewalFailed;

// ----------------------------------------------------------------------------
// GTLRCompute_SslCertificateManagedSslCertificate_DomainStatus.domainStatu

/**
 *  A managed certificate can be provisioned, no issues for this domain.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_DomainStatus_DomainStatu_Active;
/** Value: "DOMAIN_STATUS_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_DomainStatus_DomainStatu_DomainStatusUnspecified;
/**
 *  Failed to check CAA records for the domain.
 *
 *  Value: "FAILED_CAA_CHECKING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_DomainStatus_DomainStatu_FailedCaaChecking;
/**
 *  Certificate issuance forbidden by an explicit CAA record for the domain.
 *
 *  Value: "FAILED_CAA_FORBIDDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_DomainStatus_DomainStatu_FailedCaaForbidden;
/**
 *  There seems to be problem with the user's DNS or load balancer configuration
 *  for this domain.
 *
 *  Value: "FAILED_NOT_VISIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_DomainStatus_DomainStatu_FailedNotVisible;
/**
 *  Reached rate-limit for certificates per top-level private domain.
 *
 *  Value: "FAILED_RATE_LIMITED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_DomainStatus_DomainStatu_FailedRateLimited;
/**
 *  Certificate provisioning for this domain is under way. GCP will attempt to
 *  provision the first certificate.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificateManagedSslCertificate_DomainStatus_DomainStatu_Provisioning;

// ----------------------------------------------------------------------------
// GTLRCompute_SslCertificatesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslCertificatesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_SSLHealthCheck.portSpecification

/**
 *  The port number in the health check's port is used for health checking.
 *  Applies to network endpoint group and instance group backends.
 *
 *  Value: "USE_FIXED_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SSLHealthCheck_PortSpecification_UseFixedPort;
/**
 *  Not supported.
 *
 *  Value: "USE_NAMED_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SSLHealthCheck_PortSpecification_UseNamedPort;
/**
 *  For network endpoint group backends, the health check uses the port number
 *  specified on each endpoint in the network endpoint group. For instance group
 *  backends, the health check uses the port number specified for the backend
 *  service's named port defined in the instance group's named ports.
 *
 *  Value: "USE_SERVING_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SSLHealthCheck_PortSpecification_UseServingPort;

// ----------------------------------------------------------------------------
// GTLRCompute_SSLHealthCheck.proxyHeader

/** Value: "NONE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SSLHealthCheck_ProxyHeader_None;
/** Value: "PROXY_V1" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SSLHealthCheck_ProxyHeader_ProxyV1;

// ----------------------------------------------------------------------------
// GTLRCompute_SslPoliciesAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_SslPoliciesList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_SslPoliciesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPoliciesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_SslPolicy.minTlsVersion

/**
 *  TLS 1.0
 *
 *  Value: "TLS_1_0"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_MinTlsVersion_Tls10;
/**
 *  TLS 1.1
 *
 *  Value: "TLS_1_1"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_MinTlsVersion_Tls11;
/**
 *  TLS 1.2
 *
 *  Value: "TLS_1_2"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_MinTlsVersion_Tls12;

// ----------------------------------------------------------------------------
// GTLRCompute_SslPolicy.profile

/**
 *  Compatible profile. Allows the broadset set of clients, even those which
 *  support only out-of-date SSL features to negotiate with the load balancer.
 *
 *  Value: "COMPATIBLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Profile_Compatible;
/**
 *  Custom profile. Allow only the set of allowed SSL features specified in the
 *  customFeatures field.
 *
 *  Value: "CUSTOM"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Profile_Custom;
/**
 *  Modern profile. Supports a wide set of SSL features, allowing modern clients
 *  to negotiate SSL with the load balancer.
 *
 *  Value: "MODERN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Profile_Modern;
/**
 *  Restricted profile. Supports a reduced set of SSL features, intended to meet
 *  stricter compliance requirements.
 *
 *  Value: "RESTRICTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Profile_Restricted;

// ----------------------------------------------------------------------------
// GTLRCompute_SslPolicy_Warnings_Item.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SslPolicy_Warnings_Item_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_StatefulPolicyPreservedStateDiskDevice.autoDelete

/** Value: "NEVER" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_StatefulPolicyPreservedStateDiskDevice_AutoDelete_Never;
/** Value: "ON_PERMANENT_INSTANCE_DELETION" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_StatefulPolicyPreservedStateDiskDevice_AutoDelete_OnPermanentInstanceDeletion;

// ----------------------------------------------------------------------------
// GTLRCompute_Subnetwork.ipv6AccessType

/**
 *  VMs on this subnet will be assigned IPv6 addresses that are accessible via
 *  the Internet, as well as the VPC network.
 *
 *  Value: "EXTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_Ipv6AccessType_External;
/**
 *  VMs on this subnet will be assigned IPv6 addresses that are only accessible
 *  over the VPC network.
 *
 *  Value: "INTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_Ipv6AccessType_Internal;

// ----------------------------------------------------------------------------
// GTLRCompute_Subnetwork.privateIpv6GoogleAccess

/**
 *  Disable private IPv6 access to/from Google services.
 *
 *  Value: "DISABLE_GOOGLE_ACCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_PrivateIpv6GoogleAccess_DisableGoogleAccess;
/**
 *  Bidirectional private IPv6 access to/from Google services.
 *
 *  Value: "ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_PrivateIpv6GoogleAccess_EnableBidirectionalAccessToGoogle;
/**
 *  Outbound private IPv6 access from VMs in this subnet to Google services.
 *
 *  Value: "ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_PrivateIpv6GoogleAccess_EnableOutboundVmAccessToGoogle;

// ----------------------------------------------------------------------------
// GTLRCompute_Subnetwork.purpose

/**
 *  Subnet reserved for Internal HTTP(S) Load Balancing.
 *
 *  Value: "INTERNAL_HTTPS_LOAD_BALANCER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_Purpose_InternalHttpsLoadBalancer;
/**
 *  Regular user created or automatically created subnet.
 *
 *  Value: "PRIVATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_Purpose_Private;
/**
 *  Regular user created or automatically created subnet.
 *
 *  Value: "PRIVATE_RFC_1918"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_Purpose_PrivateRfc1918;
/**
 *  Subnetworks created for Private Service Connect in the producer network.
 *
 *  Value: "PRIVATE_SERVICE_CONNECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_Purpose_PrivateServiceConnect;
/**
 *  Subnetwork used for Regional Internal/External HTTP(S) Load Balancing.
 *
 *  Value: "REGIONAL_MANAGED_PROXY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_Purpose_RegionalManagedProxy;

// ----------------------------------------------------------------------------
// GTLRCompute_Subnetwork.role

/**
 *  The ACTIVE subnet that is currently used.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_Role_Active;
/**
 *  The BACKUP subnet that could be promoted to ACTIVE.
 *
 *  Value: "BACKUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_Role_Backup;

// ----------------------------------------------------------------------------
// GTLRCompute_Subnetwork.stackType

/**
 *  New VMs in this subnet can have both IPv4 and IPv6 addresses.
 *
 *  Value: "IPV4_IPV6"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_StackType_Ipv4Ipv6;
/**
 *  New VMs in this subnet will only be assigned IPv4 addresses.
 *
 *  Value: "IPV4_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_StackType_Ipv4Only;

// ----------------------------------------------------------------------------
// GTLRCompute_Subnetwork.state

/**
 *  Subnetwork is being drained.
 *
 *  Value: "DRAINING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_State_Draining;
/**
 *  Subnetwork is ready for use.
 *
 *  Value: "READY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subnetwork_State_Ready;

// ----------------------------------------------------------------------------
// GTLRCompute_SubnetworkAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_SubnetworkList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_SubnetworkLogConfig.aggregationInterval

/** Value: "INTERVAL_10_MIN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval10Min;
/** Value: "INTERVAL_15_MIN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval15Min;
/** Value: "INTERVAL_1_MIN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval1Min;
/** Value: "INTERVAL_30_SEC" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval30Sec;
/** Value: "INTERVAL_5_MIN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval5Min;
/** Value: "INTERVAL_5_SEC" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval5Sec;

// ----------------------------------------------------------------------------
// GTLRCompute_SubnetworkLogConfig.metadata

/** Value: "CUSTOM_METADATA" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkLogConfig_Metadata_CustomMetadata;
/** Value: "EXCLUDE_ALL_METADATA" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkLogConfig_Metadata_ExcludeAllMetadata;
/** Value: "INCLUDE_ALL_METADATA" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworkLogConfig_Metadata_IncludeAllMetadata;

// ----------------------------------------------------------------------------
// GTLRCompute_SubnetworksScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_SubnetworksScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_Subsetting.policy

/**
 *  Subsetting based on consistent hashing. For Traffic Director, the number of
 *  backends per backend group (the subset size) is based on the `subset_size`
 *  parameter. For Internal HTTP(S) load balancing, the number of backends per
 *  backend group (the subset size) is dynamically adjusted in two cases: - As
 *  the number of proxy instances participating in Internal HTTP(S) load
 *  balancing increases, the subset size decreases. - When the total number of
 *  backends in a network exceeds the capacity of a single proxy instance,
 *  subset sizes are reduced automatically for each service that has backend
 *  subsetting enabled.
 *
 *  Value: "CONSISTENT_HASH_SUBSETTING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subsetting_Policy_ConsistentHashSubsetting;
/**
 *  No Subsetting. Clients may open connections and send traffic to all backends
 *  of this backend service. This can lead to performance issues if there is
 *  substantial imbalance in the count of clients and backends.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Subsetting_Policy_None;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetGrpcProxyList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetGrpcProxyList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetHttpProxiesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetHttpProxyList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpProxyList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetHttpsProxiesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest.quicOverride

/**
 *  The load balancer will not attempt to negotiate QUIC with clients.
 *
 *  Value: "DISABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest_QuicOverride_Disable;
/**
 *  The load balancer will attempt to negotiate QUIC with clients.
 *
 *  Value: "ENABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest_QuicOverride_Enable;
/**
 *  No overrides to the default QUIC policy. This option is implicit if no QUIC
 *  override has been specified in the request.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest_QuicOverride_None;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetHttpsProxy.quicOverride

/**
 *  The load balancer will not attempt to negotiate QUIC with clients.
 *
 *  Value: "DISABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxy_QuicOverride_Disable;
/**
 *  The load balancer will attempt to negotiate QUIC with clients.
 *
 *  Value: "ENABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxy_QuicOverride_Enable;
/**
 *  No overrides to the default QUIC policy. This option is implicit if no QUIC
 *  override has been specified in the request.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxy_QuicOverride_None;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetHttpsProxyAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetHttpsProxyList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetHttpsProxyList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetInstance.natPolicy

/**
 *  No NAT performed.
 *
 *  Value: "NO_NAT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstance_NatPolicy_NoNat;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetInstanceAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetInstanceList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstanceList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetInstancesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetInstancesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetPool.sessionAffinity

/**
 *  2-tuple hash on packet's source and destination IP addresses. Connections
 *  from the same source IP address to the same destination IP address will be
 *  served by the same backend VM while that VM remains healthy.
 *
 *  Value: "CLIENT_IP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPool_SessionAffinity_ClientIp;
/**
 *  1-tuple hash only on packet's source IP address. Connections from the same
 *  source IP address will be served by the same backend VM while that VM
 *  remains healthy. This option can only be used for Internal TCP/UDP Load
 *  Balancing.
 *
 *  Value: "CLIENT_IP_NO_DESTINATION"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPool_SessionAffinity_ClientIpNoDestination;
/**
 *  5-tuple hash on packet's source and destination IP addresses, IP protocol,
 *  and source and destination ports. Connections for the same IP protocol from
 *  the same source IP address and port to the same destination IP address and
 *  port will be served by the same backend VM while that VM remains healthy.
 *  This option cannot be used for HTTP(S) load balancing.
 *
 *  Value: "CLIENT_IP_PORT_PROTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPool_SessionAffinity_ClientIpPortProto;
/**
 *  3-tuple hash on packet's source and destination IP addresses, and IP
 *  protocol. Connections for the same IP protocol from the same source IP
 *  address to the same destination IP address will be served by the same
 *  backend VM while that VM remains healthy. This option cannot be used for
 *  HTTP(S) load balancing.
 *
 *  Value: "CLIENT_IP_PROTO"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPool_SessionAffinity_ClientIpProto;
/**
 *  Hash based on a cookie generated by the L7 loadbalancer. Only valid for
 *  HTTP(S) load balancing.
 *
 *  Value: "GENERATED_COOKIE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPool_SessionAffinity_GeneratedCookie;
/**
 *  The hash is based on a user specified header field.
 *
 *  Value: "HEADER_FIELD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPool_SessionAffinity_HeaderField;
/**
 *  The hash is based on a user provided cookie.
 *
 *  Value: "HTTP_COOKIE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPool_SessionAffinity_HttpCookie;
/**
 *  No session affinity. Connections from the same client IP may go to any
 *  instance in the pool.
 *
 *  Value: "NONE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPool_SessionAffinity_None;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetPoolAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetPoolList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetPoolsScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetPoolsScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetSslProxiesSetProxyHeaderRequest.proxyHeader

/** Value: "NONE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxiesSetProxyHeaderRequest_ProxyHeader_None;
/** Value: "PROXY_V1" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxiesSetProxyHeaderRequest_ProxyHeader_ProxyV1;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetSslProxy.proxyHeader

/** Value: "NONE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxy_ProxyHeader_None;
/** Value: "PROXY_V1" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxy_ProxyHeader_ProxyV1;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetSslProxyList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetSslProxyList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetTcpProxiesScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetTcpProxiesSetProxyHeaderRequest.proxyHeader

/** Value: "NONE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesSetProxyHeaderRequest_ProxyHeader_None;
/** Value: "PROXY_V1" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxiesSetProxyHeaderRequest_ProxyHeader_ProxyV1;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetTcpProxy.proxyHeader

/** Value: "NONE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxy_ProxyHeader_None;
/** Value: "PROXY_V1" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxy_ProxyHeader_ProxyV1;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetTcpProxyAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetTcpProxyList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetTcpProxyList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetVpnGateway.status

/** Value: "CREATING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGateway_Status_Creating;
/** Value: "DELETING" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGateway_Status_Deleting;
/** Value: "FAILED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGateway_Status_Failed;
/** Value: "READY" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGateway_Status_Ready;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetVpnGatewayAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetVpnGatewayList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewayList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TargetVpnGatewaysScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_TCPHealthCheck.portSpecification

/**
 *  The port number in the health check's port is used for health checking.
 *  Applies to network endpoint group and instance group backends.
 *
 *  Value: "USE_FIXED_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TCPHealthCheck_PortSpecification_UseFixedPort;
/**
 *  Not supported.
 *
 *  Value: "USE_NAMED_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TCPHealthCheck_PortSpecification_UseNamedPort;
/**
 *  For network endpoint group backends, the health check uses the port number
 *  specified on each endpoint in the network endpoint group. For instance group
 *  backends, the health check uses the port number specified for the backend
 *  service's named port defined in the instance group's named ports.
 *
 *  Value: "USE_SERVING_PORT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TCPHealthCheck_PortSpecification_UseServingPort;

// ----------------------------------------------------------------------------
// GTLRCompute_TCPHealthCheck.proxyHeader

/** Value: "NONE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TCPHealthCheck_ProxyHeader_None;
/** Value: "PROXY_V1" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_TCPHealthCheck_ProxyHeader_ProxyV1;

// ----------------------------------------------------------------------------
// GTLRCompute_UrlMapList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_UrlMapsAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_UrlMapsScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_UrlMapsValidateRequest.loadBalancingSchemes

/**
 *  Signifies that this will be used for Classic L7 External Load Balancing.
 *
 *  Value: "EXTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsValidateRequest_LoadBalancingSchemes_External;
/**
 *  Signifies that this will be used for Envoy-based L7 External Load Balancing.
 *
 *  Value: "EXTERNAL_MANAGED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsValidateRequest_LoadBalancingSchemes_ExternalManaged;
/**
 *  If unspecified, the validation will try to infer the scheme from the backend
 *  service resources this Url map references. If the inferrence is not
 *  possible, EXTERNAL will be used as the default type.
 *
 *  Value: "LOAD_BALANCING_SCHEME_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UrlMapsValidateRequest_LoadBalancingSchemes_LoadBalancingSchemeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_UsableSubnetwork.ipv6AccessType

/**
 *  VMs on this subnet will be assigned IPv6 addresses that are accessible via
 *  the Internet, as well as the VPC network.
 *
 *  Value: "EXTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetwork_Ipv6AccessType_External;
/**
 *  VMs on this subnet will be assigned IPv6 addresses that are only accessible
 *  over the VPC network.
 *
 *  Value: "INTERNAL"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetwork_Ipv6AccessType_Internal;

// ----------------------------------------------------------------------------
// GTLRCompute_UsableSubnetwork.purpose

/**
 *  Subnet reserved for Internal HTTP(S) Load Balancing.
 *
 *  Value: "INTERNAL_HTTPS_LOAD_BALANCER"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetwork_Purpose_InternalHttpsLoadBalancer;
/**
 *  Regular user created or automatically created subnet.
 *
 *  Value: "PRIVATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetwork_Purpose_Private;
/**
 *  Regular user created or automatically created subnet.
 *
 *  Value: "PRIVATE_RFC_1918"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetwork_Purpose_PrivateRfc1918;
/**
 *  Subnetworks created for Private Service Connect in the producer network.
 *
 *  Value: "PRIVATE_SERVICE_CONNECT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetwork_Purpose_PrivateServiceConnect;
/**
 *  Subnetwork used for Regional Internal/External HTTP(S) Load Balancing.
 *
 *  Value: "REGIONAL_MANAGED_PROXY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetwork_Purpose_RegionalManagedProxy;

// ----------------------------------------------------------------------------
// GTLRCompute_UsableSubnetwork.role

/**
 *  The ACTIVE subnet that is currently used.
 *
 *  Value: "ACTIVE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetwork_Role_Active;
/**
 *  The BACKUP subnet that could be promoted to ACTIVE.
 *
 *  Value: "BACKUP"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetwork_Role_Backup;

// ----------------------------------------------------------------------------
// GTLRCompute_UsableSubnetwork.stackType

/**
 *  New VMs in this subnet can have both IPv4 and IPv6 addresses.
 *
 *  Value: "IPV4_IPV6"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetwork_StackType_Ipv4Ipv6;
/**
 *  New VMs in this subnet will only be assigned IPv4 addresses.
 *
 *  Value: "IPV4_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetwork_StackType_Ipv4Only;

// ----------------------------------------------------------------------------
// GTLRCompute_UsableSubnetworksAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_VmEndpointNatMappingsList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_VpnGateway.stackType

/**
 *  Enable VPN gateway with both IPv4 and IPv6 protocols.
 *
 *  Value: "IPV4_IPV6"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGateway_StackType_Ipv4Ipv6;
/**
 *  Enable VPN gateway with only IPv4 protocol.
 *
 *  Value: "IPV4_ONLY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGateway_StackType_Ipv4Only;

// ----------------------------------------------------------------------------
// GTLRCompute_VpnGatewayAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_VpnGatewayList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_VpnGatewaysScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewaysScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState.state

/**
 *  VPN tunnels are configured with adequate redundancy from Cloud VPN gateway
 *  to the peer VPN gateway. For both GCP-to-non-GCP and GCP-to-GCP connections,
 *  the adequate redundancy is a pre-requirement for users to get 99.99%
 *  availability on GCP side; please note that for any connection, end-to-end
 *  99.99% availability is subject to proper configuration on the peer VPN
 *  gateway.
 *
 *  Value: "CONNECTION_REDUNDANCY_MET"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState_State_ConnectionRedundancyMet;
/**
 *  VPN tunnels are not configured with adequate redundancy from the Cloud VPN
 *  gateway to the peer gateway
 *
 *  Value: "CONNECTION_REDUNDANCY_NOT_MET"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState_State_ConnectionRedundancyNotMet;

// ----------------------------------------------------------------------------
// GTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState.unsatisfiedReason

/** Value: "INCOMPLETE_TUNNELS_COVERAGE" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState_UnsatisfiedReason_IncompleteTunnelsCoverage;

// ----------------------------------------------------------------------------
// GTLRCompute_VpnTunnel.status

/**
 *  Cloud VPN is in the process of allocating all required resources
 *  (specifically, a borg task).
 *
 *  Value: "ALLOCATING_RESOURCES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnel_Status_AllocatingResources;
/**
 *  Auth error (e.g. bad shared secret).
 *
 *  Value: "AUTHORIZATION_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnel_Status_AuthorizationError;
/**
 *  Resources is being deallocated for the VPN tunnel.
 *
 *  Value: "DEPROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnel_Status_Deprovisioning;
/**
 *  Secure session is successfully established with peer VPN.
 *
 *  Value: "ESTABLISHED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnel_Status_Established;
/**
 *  Tunnel creation has failed and the tunnel is not ready to be used.
 *
 *  Value: "FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnel_Status_Failed;
/**
 *  Successful first handshake with peer VPN.
 *
 *  Value: "FIRST_HANDSHAKE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnel_Status_FirstHandshake;
/**
 *  Handshake failed.
 *
 *  Value: "NEGOTIATION_FAILURE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnel_Status_NegotiationFailure;
/**
 *  Deprecated, replaced by NO_INCOMING_PACKETS
 *
 *  Value: "NETWORK_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnel_Status_NetworkError;
/**
 *  No incoming packets from peer
 *
 *  Value: "NO_INCOMING_PACKETS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnel_Status_NoIncomingPackets;
/**
 *  Resource is being allocated for the VPN tunnel.
 *
 *  Value: "PROVISIONING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnel_Status_Provisioning;
/**
 *  Tunnel configuration was rejected, can be result of being denylisted.
 *
 *  Value: "REJECTED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnel_Status_Rejected;
/**
 *  Tunnel is stopped due to its Forwarding Rules being deleted.
 *
 *  Value: "STOPPED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnel_Status_Stopped;
/**
 *  Waiting to receive all VPN-related configs from user. Network,
 *  TargetVpnGateway, VpnTunnel, ForwardingRule and Route resources are needed
 *  to setup VPN tunnel.
 *
 *  Value: "WAITING_FOR_FULL_CONFIG"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnel_Status_WaitingForFullConfig;

// ----------------------------------------------------------------------------
// GTLRCompute_VpnTunnelAggregatedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_VpnTunnelList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_VpnTunnelsScopedList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_VpnTunnelsScopedList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_XpnHostList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnHostList_Warning_Code_Unreachable;

// ----------------------------------------------------------------------------
// GTLRCompute_XpnResourceId.type

/** Value: "PROJECT" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnResourceId_Type_Project;
/** Value: "XPN_RESOURCE_TYPE_UNSPECIFIED" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_XpnResourceId_Type_XpnResourceTypeUnspecified;

// ----------------------------------------------------------------------------
// GTLRCompute_Zone.status

/** Value: "DOWN" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Zone_Status_Down;
/** Value: "UP" */
FOUNDATION_EXTERN NSString * const kGTLRCompute_Zone_Status_Up;

// ----------------------------------------------------------------------------
// GTLRCompute_ZoneList_Warning.code

/**
 *  Warning about failed cleanup of transient changes made by a failed
 *  operation.
 *
 *  Value: "CLEANUP_FAILED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_CleanupFailed;
/**
 *  A link to a deprecated resource was created.
 *
 *  Value: "DEPRECATED_RESOURCE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_DeprecatedResourceUsed;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  deprecated
 *
 *  Value: "DEPRECATED_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_DeprecatedTypeUsed;
/**
 *  The user created a boot disk that is larger than image size.
 *
 *  Value: "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_DiskSizeLargerThanImageSize;
/**
 *  When deploying and at least one of the resources has a type marked as
 *  experimental
 *
 *  Value: "EXPERIMENTAL_TYPE_USED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_ExperimentalTypeUsed;
/**
 *  Warning that is present in an external api call
 *
 *  Value: "EXTERNAL_API_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_ExternalApiWarning;
/**
 *  Warning that value of a field has been overridden. Deprecated unused field.
 *
 *  Value: "FIELD_VALUE_OVERRIDEN"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_FieldValueOverriden;
/**
 *  The operation involved use of an injected kernel, which is deprecated.
 *
 *  Value: "INJECTED_KERNELS_DEPRECATED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_InjectedKernelsDeprecated;
/**
 *  A WEIGHTED_MAGLEV backend service is associated with a health check that is
 *  not of type HTTP/HTTPS/HTTP2.
 *
 *  Value: "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb;
/**
 *  When deploying a deployment with a exceedingly large number of resources
 *
 *  Value: "LARGE_DEPLOYMENT_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_LargeDeploymentWarning;
/**
 *  A resource depends on a missing type
 *
 *  Value: "MISSING_TYPE_DEPENDENCY"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_MissingTypeDependency;
/**
 *  The route's nextHopIp address is not assigned to an instance on the network.
 *
 *  Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopAddressNotAssigned;
/**
 *  The route's next hop instance cannot ip forward.
 *
 *  Value: "NEXT_HOP_CANNOT_IP_FORWARD"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopCannotIpForward;
/**
 *  The route's nextHopInstance URL refers to an instance that does not have an
 *  ipv6 interface on the same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopInstanceHasNoIpv6Interface;
/**
 *  The route's nextHopInstance URL refers to an instance that does not exist.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_FOUND"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopInstanceNotFound;
/**
 *  The route's nextHopInstance URL refers to an instance that is not on the
 *  same network as the route.
 *
 *  Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopInstanceNotOnNetwork;
/**
 *  The route's next hop instance does not have a status of RUNNING.
 *
 *  Value: "NEXT_HOP_NOT_RUNNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_NextHopNotRunning;
/**
 *  No results are present on a particular list page.
 *
 *  Value: "NO_RESULTS_ON_PAGE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_NoResultsOnPage;
/**
 *  Error which is not critical. We decided to continue the process despite the
 *  mentioned error.
 *
 *  Value: "NOT_CRITICAL_ERROR"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_NotCriticalError;
/**
 *  Success is reported, but some results may be missing due to errors
 *
 *  Value: "PARTIAL_SUCCESS"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_PartialSuccess;
/**
 *  The user attempted to use a resource that requires a TOS they have not
 *  accepted.
 *
 *  Value: "REQUIRED_TOS_AGREEMENT"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_RequiredTosAgreement;
/**
 *  Warning that a resource is in use.
 *
 *  Value: "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_ResourceInUseByOtherResourceWarning;
/**
 *  One or more of the resources set to auto-delete could not be deleted because
 *  they were in use.
 *
 *  Value: "RESOURCE_NOT_DELETED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_ResourceNotDeleted;
/**
 *  When a resource schema validation is ignored.
 *
 *  Value: "SCHEMA_VALIDATION_IGNORED"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_SchemaValidationIgnored;
/**
 *  Instance template used in instance group manager is valid as such, but its
 *  application does not make a lot of sense, because it allows only single
 *  instance in instance group.
 *
 *  Value: "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_SingleInstancePropertyTemplate;
/**
 *  When undeclared properties in the schema are present
 *
 *  Value: "UNDECLARED_PROPERTIES"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_UndeclaredProperties;
/**
 *  A given scope cannot be reached.
 *
 *  Value: "UNREACHABLE"
 */
FOUNDATION_EXTERN NSString * const kGTLRCompute_ZoneList_Warning_Code_Unreachable;

/**
 *  A specification of the type and number of accelerator cards attached to the
 *  instance.
 */
@interface GTLRCompute_AcceleratorConfig : GTLRObject

/**
 *  The number of the guest accelerator cards exposed to this instance.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *acceleratorCount;

/**
 *  Full or partial URL of the accelerator type resource to attach to this
 *  instance. For example:
 *  projects/my-project/zones/us-central1-c/acceleratorTypes/nvidia-tesla-p100
 *  If you are creating an instance template, specify only the accelerator name.
 *  See GPUs on Compute Engine for a full list of accelerator types.
 */
@property(nonatomic, copy, nullable) NSString *acceleratorType;

@end


/**
 *  Represents an Accelerator Type resource. Google Cloud Platform provides
 *  graphics processing units (accelerators) that you can add to VM instances to
 *  improve or accelerate performance when working with intensive workloads. For
 *  more information, read GPUs on Compute Engine.
 */
@interface GTLRCompute_AcceleratorType : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  [Output Only] The deprecation status associated with this accelerator type.
 */
@property(nonatomic, strong, nullable) GTLRCompute_DeprecationStatus *deprecated;

/**
 *  [Output Only] An optional textual description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] The type of the resource. Always compute#acceleratorType for
 *  accelerator types.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] Maximum number of accelerator cards allowed per instance.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maximumCardsPerInstance;

/** [Output Only] Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** [Output Only] Server-defined, fully qualified URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] The name of the zone where the accelerator type resides, such
 *  as us-central1-a. You must specify this field as part of the HTTP request
 *  URL. It is not settable as a field in the request body.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  GTLRCompute_AcceleratorTypeAggregatedList
 */
@interface GTLRCompute_AcceleratorTypeAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of AcceleratorTypesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_AcceleratorTypeAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#acceleratorTypeAggregatedList
 *  for aggregated lists of accelerator types.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_AcceleratorTypeAggregatedList_Warning *warning;

@end


/**
 *  A list of AcceleratorTypesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_AcceleratorTypesScopedList. Use @c -additionalJSONKeys and
 *        @c -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_AcceleratorTypeAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_AcceleratorTypeAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_AcceleratorTypeAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AcceleratorTypeAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_AcceleratorTypeAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_AcceleratorTypeAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of accelerator types.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_AcceleratorTypeList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of AcceleratorType resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AcceleratorType *> *items;

/**
 *  [Output Only] Type of resource. Always compute#acceleratorTypeList for lists
 *  of accelerator types.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_AcceleratorTypeList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_AcceleratorTypeList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_AcceleratorTypeList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AcceleratorTypeList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_AcceleratorTypeList_Warning_Data_Item
 */
@interface GTLRCompute_AcceleratorTypeList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_AcceleratorTypesScopedList
 */
@interface GTLRCompute_AcceleratorTypesScopedList : GTLRObject

/** [Output Only] A list of accelerator types contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AcceleratorType *> *acceleratorTypes;

/**
 *  [Output Only] An informational warning that appears when the accelerator
 *  types list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_AcceleratorTypesScopedList_Warning *warning;

@end


/**
 *  [Output Only] An informational warning that appears when the accelerator
 *  types list is empty.
 */
@interface GTLRCompute_AcceleratorTypesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_AcceleratorTypesScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AcceleratorTypesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_AcceleratorTypesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_AcceleratorTypesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  An access configuration attached to an instance's network interface. Only
 *  one access config per instance is supported.
 */
@interface GTLRCompute_AccessConfig : GTLRObject

/**
 *  The first IPv6 address of the external IPv6 range associated with this
 *  instance, prefix length is stored in externalIpv6PrefixLength in
 *  ipv6AccessConfig. The field is output only, an IPv6 address from a
 *  subnetwork associated with the instance will be allocated dynamically.
 */
@property(nonatomic, copy, nullable) NSString *externalIpv6;

/**
 *  The prefix length of the external IPv6 range.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *externalIpv6PrefixLength;

/**
 *  [Output Only] Type of the resource. Always compute#accessConfig for access
 *  configs.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The name of this access configuration. The default and recommended name is
 *  External NAT, but you can use any arbitrary string, such as My external IP
 *  or Network Access.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An external IP address associated with this instance. Specify an unused
 *  static external IP address available to the project or leave this field
 *  undefined to use an IP from a shared ephemeral IP address pool. If you
 *  specify a static external IP address, it must live in the same region as the
 *  zone of the instance.
 */
@property(nonatomic, copy, nullable) NSString *natIP;

/**
 *  This signifies the networking tier used for configuring this access
 *  configuration and can only take the following values: PREMIUM, STANDARD. If
 *  an AccessConfig is specified without a valid external IP address, an
 *  ephemeral IP will be created with this networkTier. If an AccessConfig with
 *  a valid external IP address is specified, it must match that of the
 *  networkTier associated with the Address resource owning that IP.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AccessConfig_NetworkTier_FixedStandard Public
 *        internet quality with fixed bandwidth. (Value: "FIXED_STANDARD")
 *    @arg @c kGTLRCompute_AccessConfig_NetworkTier_Premium High quality,
 *        Google-grade network tier, support for all networking products.
 *        (Value: "PREMIUM")
 *    @arg @c kGTLRCompute_AccessConfig_NetworkTier_Standard Public internet
 *        quality, only limited support for other networking products. (Value:
 *        "STANDARD")
 *    @arg @c kGTLRCompute_AccessConfig_NetworkTier_StandardOverridesFixedStandard
 *        (Output only) Temporary tier for FIXED_STANDARD when fixed standard
 *        tier is expired or not configured. (Value:
 *        "STANDARD_OVERRIDES_FIXED_STANDARD")
 */
@property(nonatomic, copy, nullable) NSString *networkTier;

/**
 *  The DNS domain name for the public PTR record. You can set this field only
 *  if the `setPublicPtr` field is enabled in accessConfig. If this field is
 *  unspecified in ipv6AccessConfig, a default PTR record will be createc for
 *  first IP in associated external IPv6 range.
 */
@property(nonatomic, copy, nullable) NSString *publicPtrDomainName;

/**
 *  Specifies whether a public DNS 'PTR' record should be created to map the
 *  external IP address of the instance to a DNS domain name. This field is not
 *  used in ipv6AccessConfig. A default PTR record will be created if the VM has
 *  external IPv6 range associated.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *setPublicPtr;

/**
 *  The type of configuration. The default and only option is ONE_TO_ONE_NAT.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AccessConfig_Type_DirectIpv6 Value "DIRECT_IPV6"
 *    @arg @c kGTLRCompute_AccessConfig_Type_OneToOneNat Value "ONE_TO_ONE_NAT"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents an IP Address resource. Google Compute Engine has two IP Address
 *  resources: * [Global (external and
 *  internal)](https://cloud.google.com/compute/docs/reference/rest/v1/globalAddresses)
 *  * [Regional (external and
 *  internal)](https://cloud.google.com/compute/docs/reference/rest/v1/addresses)
 *  For more information, see Reserving a static external IP address.
 */
@interface GTLRCompute_Address : GTLRObject

/** The static IP address represented by this resource. */
@property(nonatomic, copy, nullable) NSString *address;

/**
 *  The type of address to reserve, either INTERNAL or EXTERNAL. If unspecified,
 *  defaults to EXTERNAL.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Address_AddressType_External A publicly visible
 *        external IP address. (Value: "EXTERNAL")
 *    @arg @c kGTLRCompute_Address_AddressType_Internal A private network IP
 *        address, for use with an Instance or Internal Load Balancer forwarding
 *        rule. (Value: "INTERNAL")
 *    @arg @c kGTLRCompute_Address_AddressType_UnspecifiedType Value
 *        "UNSPECIFIED_TYPE"
 */
@property(nonatomic, copy, nullable) NSString *addressType;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this field when you create
 *  the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  The endpoint type of this address, which should be VM or NETLB. This is used
 *  for deciding which type of endpoint this address can be used after the
 *  external IPv6 address reservation.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Address_Ipv6EndpointType_Netlb Reserved IPv6 address
 *        can be used on network load balancer. (Value: "NETLB")
 *    @arg @c kGTLRCompute_Address_Ipv6EndpointType_Vm Reserved IPv6 address can
 *        be used on VM. (Value: "VM")
 */
@property(nonatomic, copy, nullable) NSString *ipv6EndpointType;

/**
 *  The IP version that will be used by this address. Valid options are IPV4 or
 *  IPV6. This can only be specified for a global address.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Address_IpVersion_Ipv4 Value "IPV4"
 *    @arg @c kGTLRCompute_Address_IpVersion_Ipv6 Value "IPV6"
 *    @arg @c kGTLRCompute_Address_IpVersion_UnspecifiedVersion Value
 *        "UNSPECIFIED_VERSION"
 */
@property(nonatomic, copy, nullable) NSString *ipVersion;

/**
 *  [Output Only] Type of the resource. Always compute#address for addresses.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a
 *  lowercase letter, and all following characters (except for the last
 *  character) must be a dash, lowercase letter, or digit. The last character
 *  must be a lowercase letter or digit.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The URL of the network in which to reserve the address. This field can only
 *  be used with INTERNAL type with the VPC_PEERING purpose.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  This signifies the networking tier used for configuring this address and can
 *  only take the following values: PREMIUM or STANDARD. Internal IP addresses
 *  are always Premium Tier; global external IP addresses are always Premium
 *  Tier; regional external IP addresses can be either Standard or Premium Tier.
 *  If this field is not specified, it is assumed to be PREMIUM.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Address_NetworkTier_FixedStandard Public internet
 *        quality with fixed bandwidth. (Value: "FIXED_STANDARD")
 *    @arg @c kGTLRCompute_Address_NetworkTier_Premium High quality,
 *        Google-grade network tier, support for all networking products.
 *        (Value: "PREMIUM")
 *    @arg @c kGTLRCompute_Address_NetworkTier_Standard Public internet quality,
 *        only limited support for other networking products. (Value:
 *        "STANDARD")
 *    @arg @c kGTLRCompute_Address_NetworkTier_StandardOverridesFixedStandard
 *        (Output only) Temporary tier for FIXED_STANDARD when fixed standard
 *        tier is expired or not configured. (Value:
 *        "STANDARD_OVERRIDES_FIXED_STANDARD")
 */
@property(nonatomic, copy, nullable) NSString *networkTier;

/**
 *  The prefix length if the resource represents an IP range.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *prefixLength;

/**
 *  The purpose of this resource, which can be one of the following values: -
 *  GCE_ENDPOINT for addresses that are used by VM instances, alias IP ranges,
 *  load balancers, and similar resources. - DNS_RESOLVER for a DNS resolver
 *  address in a subnetwork for a Cloud DNS inbound forwarder IP addresses
 *  (regional internal IP address in a subnet of a VPC network) - VPC_PEERING
 *  for global internal IP addresses used for private services access allocated
 *  ranges. - NAT_AUTO for the regional external IP addresses used by Cloud NAT
 *  when allocating addresses using automatic NAT IP address allocation. -
 *  IPSEC_INTERCONNECT for addresses created from a private IP range that are
 *  reserved for a VLAN attachment in an *HA VPN over Cloud Interconnect*
 *  configuration. These addresses are regional resources. -
 *  `SHARED_LOADBALANCER_VIP` for an internal IP address that is assigned to
 *  multiple internal forwarding rules. - `PRIVATE_SERVICE_CONNECT` for a
 *  private network address that is used to configure Private Service Connect.
 *  Only global internal addresses can use this purpose.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Address_Purpose_DnsResolver DNS resolver address in
 *        the subnetwork. (Value: "DNS_RESOLVER")
 *    @arg @c kGTLRCompute_Address_Purpose_GceEndpoint VM internal/alias IP,
 *        Internal LB service IP, etc. (Value: "GCE_ENDPOINT")
 *    @arg @c kGTLRCompute_Address_Purpose_IpsecInterconnect A regional internal
 *        IP address range reserved for the VLAN attachment that is used in HA
 *        VPN over Cloud Interconnect. This regional internal IP address range
 *        must not overlap with any IP address range of subnet/route in the VPC
 *        network and its peering networks. After the VLAN attachment is created
 *        with the reserved IP address range, when creating a new VPN gateway,
 *        its interface IP address is allocated from the associated VLAN
 *        attachment’s IP address range. (Value: "IPSEC_INTERCONNECT")
 *    @arg @c kGTLRCompute_Address_Purpose_NatAuto External IP automatically
 *        reserved for Cloud NAT. (Value: "NAT_AUTO")
 *    @arg @c kGTLRCompute_Address_Purpose_PrivateServiceConnect A private
 *        network IP address that can be used to configure Private Service
 *        Connect. This purpose can be specified only for GLOBAL addresses of
 *        Type INTERNAL (Value: "PRIVATE_SERVICE_CONNECT")
 *    @arg @c kGTLRCompute_Address_Purpose_Serverless A regional internal IP
 *        address range reserved for Serverless. (Value: "SERVERLESS")
 *    @arg @c kGTLRCompute_Address_Purpose_SharedLoadbalancerVip A private
 *        network IP address that can be shared by multiple Internal Load
 *        Balancer forwarding rules. (Value: "SHARED_LOADBALANCER_VIP")
 *    @arg @c kGTLRCompute_Address_Purpose_VpcPeering IP range for peer
 *        networks. (Value: "VPC_PEERING")
 */
@property(nonatomic, copy, nullable) NSString *purpose;

/**
 *  [Output Only] The URL of the region where a regional address resides. For
 *  regional addresses, you must specify the region as a path parameter in the
 *  HTTP request URL. *This field is not applicable to global addresses.*
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] The status of the address, which can be one of RESERVING,
 *  RESERVED, or IN_USE. An address that is RESERVING is currently in the
 *  process of being reserved. A RESERVED address is currently reserved and
 *  available to use. An IN_USE address is currently being used by another
 *  resource and is not available.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Address_Status_InUse Address is being used by another
 *        resource and is not available. (Value: "IN_USE")
 *    @arg @c kGTLRCompute_Address_Status_Reserved Address is reserved and
 *        available to use. (Value: "RESERVED")
 *    @arg @c kGTLRCompute_Address_Status_Reserving Address is being reserved.
 *        (Value: "RESERVING")
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  The URL of the subnetwork in which to reserve the address. If an IP address
 *  is specified, it must be within the subnetwork's IP range. This field can
 *  only be used with INTERNAL type with a GCE_ENDPOINT or DNS_RESOLVER purpose.
 */
@property(nonatomic, copy, nullable) NSString *subnetwork;

/** [Output Only] The URLs of the resources that are using this address. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *users;

@end


/**
 *  GTLRCompute_AddressAggregatedList
 */
@interface GTLRCompute_AddressAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of AddressesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_AddressAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#addressAggregatedList for
 *  aggregated lists of addresses.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_AddressAggregatedList_Warning *warning;

@end


/**
 *  A list of AddressesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_AddressesScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_AddressAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_AddressAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_AddressAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AddressAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_AddressAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_AddressAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_AddressesScopedList
 */
@interface GTLRCompute_AddressesScopedList : GTLRObject

/** [Output Only] A list of addresses contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Address *> *addresses;

/**
 *  [Output Only] Informational warning which replaces the list of addresses
 *  when the list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_AddressesScopedList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning which replaces the list of addresses
 *  when the list is empty.
 */
@interface GTLRCompute_AddressesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_AddressesScopedList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AddressesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_AddressesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_AddressesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of addresses.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_AddressList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Address resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Address *> *items;

/**
 *  [Output Only] Type of resource. Always compute#addressList for lists of
 *  addresses.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_AddressList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_AddressList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_NoResultsOnPage No results
 *        are present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_NotCriticalError Error which
 *        is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_SchemaValidationIgnored When
 *        a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_AddressList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AddressList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_AddressList_Warning_Data_Item
 */
@interface GTLRCompute_AddressList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Specifies options for controlling advanced machine features. Options that
 *  would traditionally be configured in a BIOS belong here. Features that
 *  require operating system support may have corresponding entries in the
 *  GuestOsFeatures of an Image (e.g., whether or not the OS in the Image
 *  supports nested virtualization being enabled or disabled).
 */
@interface GTLRCompute_AdvancedMachineFeatures : GTLRObject

/**
 *  Whether to enable nested virtualization or not (default is false).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableNestedVirtualization;

/**
 *  Whether to enable UEFI networking for instance creation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableUefiNetworking;

/**
 *  The number of threads per physical core. To disable simultaneous
 *  multithreading (SMT) set this to 1. If unset, the maximum number of threads
 *  supported per core by the underlying processor is assumed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *threadsPerCore;

/**
 *  The number of physical cores to expose to an instance. Multiply by the
 *  number of threads per core to compute the total number of virtual CPUs to
 *  expose to the instance. If unset, the number of cores is inferred from the
 *  instance's nominal CPU count and the underlying platform's SMT width.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *visibleCoreCount;

@end


/**
 *  An alias IP range attached to an instance's network interface.
 */
@interface GTLRCompute_AliasIpRange : GTLRObject

/**
 *  The IP alias ranges to allocate for this interface. This IP CIDR range must
 *  belong to the specified subnetwork and cannot contain IP addresses reserved
 *  by system or used by other network interfaces. This range may be a single IP
 *  address (such as 10.2.3.4), a netmask (such as /24) or a CIDR-formatted
 *  string (such as 10.1.2.0/24).
 */
@property(nonatomic, copy, nullable) NSString *ipCidrRange;

/**
 *  The name of a subnetwork secondary IP range from which to allocate an IP
 *  alias range. If not specified, the primary range of the subnetwork is used.
 */
@property(nonatomic, copy, nullable) NSString *subnetworkRangeName;

@end


/**
 *  GTLRCompute_AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk
 */
@interface GTLRCompute_AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk : GTLRObject

/**
 *  Specifies the size of the disk in base-2 GB.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *diskSizeGb;

/**
 *  Specifies the disk interface to use for attaching this disk, which is either
 *  SCSI or NVME. The default is SCSI. For performance characteristics of SCSI
 *  over NVMe, see Local SSD performance.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk_Interface_Nvme
 *        Value "NVME"
 *    @arg @c kGTLRCompute_AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk_Interface_Scsi
 *        Value "SCSI"
 */
@property(nonatomic, copy, nullable) NSString *interface;

@end


/**
 *  Properties of the SKU instances being reserved. Next ID: 9
 */
@interface GTLRCompute_AllocationSpecificSKUAllocationReservedInstanceProperties : GTLRObject

/** Specifies accelerator type and count. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AcceleratorConfig *> *guestAccelerators;

/**
 *  Specifies amount of local ssd to reserve with each instance. The type of
 *  disk is local-ssd.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AllocationSpecificSKUAllocationAllocatedInstancePropertiesReservedDisk *> *localSsds;

/**
 *  An opaque location hint used to place the allocation close to other
 *  resources. This field is for use by internal tools that use the public API.
 */
@property(nonatomic, copy, nullable) NSString *locationHint;

/**
 *  Specifies type of machine (name only) which has fixed number of vCPUs and
 *  fixed amount of memory. This also includes specifying custom machine type
 *  following custom-NUMBER_OF_CPUS-AMOUNT_OF_MEMORY pattern.
 */
@property(nonatomic, copy, nullable) NSString *machineType;

/** Minimum cpu platform the reservation. */
@property(nonatomic, copy, nullable) NSString *minCpuPlatform;

@end


/**
 *  This reservation type allows to pre allocate specific instance
 *  configuration. Next ID: 6
 */
@interface GTLRCompute_AllocationSpecificSKUReservation : GTLRObject

/**
 *  [Output Only] Indicates how many instances are actually usable currently.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *assuredCount;

/**
 *  Specifies the number of resources that are allocated.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/** The instance properties for the reservation. */
@property(nonatomic, strong, nullable) GTLRCompute_AllocationSpecificSKUAllocationReservedInstanceProperties *instanceProperties;

/**
 *  [Output Only] Indicates how many instances are in use.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *inUseCount;

@end


/**
 *  An instance-attached disk resource.
 */
@interface GTLRCompute_AttachedDisk : GTLRObject

/**
 *  [Output Only] The architecture of the attached disk. Valid values are ARM64
 *  or X86_64.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AttachedDisk_Architecture_ArchitectureUnspecified
 *        Default value indicating Architecture is not set. (Value:
 *        "ARCHITECTURE_UNSPECIFIED")
 *    @arg @c kGTLRCompute_AttachedDisk_Architecture_Arm64 Machines with
 *        architecture ARM64 (Value: "ARM64")
 *    @arg @c kGTLRCompute_AttachedDisk_Architecture_X8664 Machines with
 *        architecture X86_64 (Value: "X86_64")
 */
@property(nonatomic, copy, nullable) NSString *architecture;

/**
 *  Specifies whether the disk will be auto-deleted when the instance is deleted
 *  (but not when the disk is detached from the instance).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *autoDelete;

/**
 *  Indicates that this is a boot disk. The virtual machine will use the first
 *  partition of the disk for its root filesystem.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boot;

/**
 *  Specifies a unique device name of your choice that is reflected into the
 *  /dev/disk/by-id/google-* tree of a Linux operating system running within the
 *  instance. This name can be used to reference the device for mounting,
 *  resizing, and so on, from within the instance. If not specified, the server
 *  chooses a default device name to apply to this disk, in the form
 *  persistent-disk-x, where x is a number assigned by Google Compute Engine.
 *  This field is only applicable for persistent disks.
 */
@property(nonatomic, copy, nullable) NSString *deviceName;

/**
 *  Encrypts or decrypts a disk using a customer-supplied encryption key. If you
 *  are creating a new disk, this field encrypts the new disk using an
 *  encryption key that you provide. If you are attaching an existing disk that
 *  is already encrypted, this field decrypts the disk using the
 *  customer-supplied encryption key. If you encrypt a disk using a
 *  customer-supplied key, you must provide the same key again when you attempt
 *  to use this resource at a later time. For example, you must provide the key
 *  when you create a snapshot or an image from the disk or when you attach the
 *  disk to a virtual machine instance. If you do not provide an encryption key,
 *  then the disk will be encrypted using an automatically generated key and you
 *  do not need to provide a key to use the disk later. Instance templates do
 *  not store customer-supplied encryption keys, so you cannot use your own keys
 *  to encrypt disks in a managed instance group.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *diskEncryptionKey;

/**
 *  The size of the disk in GB.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *diskSizeGb;

/**
 *  [Input Only] Whether to force attach the regional disk even if it's
 *  currently attached to another instance. If you try to force attach a zonal
 *  disk to an instance, you will receive an error.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *forceAttach;

/**
 *  A list of features to enable on the guest operating system. Applicable only
 *  for bootable images. Read Enabling guest operating system features to see a
 *  list of available options.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_GuestOsFeature *> *guestOsFeatures;

/**
 *  [Output Only] A zero-based index to this disk, where 0 is reserved for the
 *  boot disk. If you have many disks attached to an instance, each disk would
 *  have a unique index number.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *index;

/**
 *  [Input Only] Specifies the parameters for a new disk that will be created
 *  alongside the new instance. Use initialization parameters to create boot
 *  disks or local SSDs attached to the new instance. This property is mutually
 *  exclusive with the source property; you can only define one or the other,
 *  but not both.
 */
@property(nonatomic, strong, nullable) GTLRCompute_AttachedDiskInitializeParams *initializeParams;

/**
 *  Specifies the disk interface to use for attaching this disk, which is either
 *  SCSI or NVME. For most machine types, the default is SCSI. Local SSDs can
 *  use either NVME or SCSI. In certain configurations, persistent disks can use
 *  NVMe. For more information, see About persistent disks.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AttachedDisk_Interface_Nvme Value "NVME"
 *    @arg @c kGTLRCompute_AttachedDisk_Interface_Scsi Value "SCSI"
 */
@property(nonatomic, copy, nullable) NSString *interface;

/**
 *  [Output Only] Type of the resource. Always compute#attachedDisk for attached
 *  disks.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** [Output Only] Any valid publicly visible licenses. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *licenses;

/**
 *  The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If
 *  not specified, the default is to attach the disk in READ_WRITE mode.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AttachedDisk_Mode_ReadOnly Attaches this disk in
 *        read-only mode. Multiple virtual machines can use a disk in read-only
 *        mode at a time. (Value: "READ_ONLY")
 *    @arg @c kGTLRCompute_AttachedDisk_Mode_ReadWrite *[Default]* Attaches this
 *        disk in read-write mode. Only one virtual machine at a time can be
 *        attached to a disk in read-write mode. (Value: "READ_WRITE")
 */
@property(nonatomic, copy, nullable) NSString *mode;

/** [Output Only] shielded vm initial state stored on disk */
@property(nonatomic, strong, nullable) GTLRCompute_InitialStateConfig *shieldedInstanceInitialState;

/**
 *  Specifies a valid partial or full URL to an existing Persistent Disk
 *  resource. When creating a new instance, one of initializeParams.sourceImage
 *  or initializeParams.sourceSnapshot or disks.source is required except for
 *  local SSD. If desired, you can also attach existing non-root persistent
 *  disks using this property. This field is only applicable for persistent
 *  disks. Note that for InstanceTemplate, specify the disk name for zonal disk,
 *  and the URL for regional disk.
 */
@property(nonatomic, copy, nullable) NSString *source;

/**
 *  Specifies the type of the disk, either SCRATCH or PERSISTENT. If not
 *  specified, the default is PERSISTENT.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AttachedDisk_Type_Persistent Value "PERSISTENT"
 *    @arg @c kGTLRCompute_AttachedDisk_Type_Scratch Value "SCRATCH"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  [Input Only] Specifies the parameters for a new disk that will be created
 *  alongside the new instance. Use initialization parameters to create boot
 *  disks or local SSDs attached to the new instance. This field is persisted
 *  and returned for instanceTemplate and not returned in the context of
 *  instance. This property is mutually exclusive with the source property; you
 *  can only define one or the other, but not both.
 */
@interface GTLRCompute_AttachedDiskInitializeParams : GTLRObject

/**
 *  The architecture of the attached disk. Valid values are arm64 or x86_64.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AttachedDiskInitializeParams_Architecture_ArchitectureUnspecified
 *        Default value indicating Architecture is not set. (Value:
 *        "ARCHITECTURE_UNSPECIFIED")
 *    @arg @c kGTLRCompute_AttachedDiskInitializeParams_Architecture_Arm64
 *        Machines with architecture ARM64 (Value: "ARM64")
 *    @arg @c kGTLRCompute_AttachedDiskInitializeParams_Architecture_X8664
 *        Machines with architecture X86_64 (Value: "X86_64")
 */
@property(nonatomic, copy, nullable) NSString *architecture;

/**
 *  An optional description. Provide this property when creating the disk.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Specifies the disk name. If not specified, the default is to use the name of
 *  the instance. If a disk with the same name already exists in the given
 *  region, the existing disk is attached to the new instance and the new disk
 *  is not created.
 */
@property(nonatomic, copy, nullable) NSString *diskName;

/**
 *  Specifies the size of the disk in base-2 GB. The size must be at least 10
 *  GB. If you specify a sourceImage, which is required for boot disks, the
 *  default size is the size of the sourceImage. If you do not specify a
 *  sourceImage, the default disk size is 500 GB.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *diskSizeGb;

/**
 *  Specifies the disk type to use to create the instance. If not specified, the
 *  default is pd-standard, specified using the full URL. For example:
 *  https://www.googleapis.com/compute/v1/projects/project/zones/zone
 *  /diskTypes/pd-standard For a full list of acceptable values, see Persistent
 *  disk types. If you specify this field when creating a VM, you can provide
 *  either the full or partial URL. For example, the following values are valid:
 *  - https://www.googleapis.com/compute/v1/projects/project/zones/zone
 *  /diskTypes/diskType - projects/project/zones/zone/diskTypes/diskType -
 *  zones/zone/diskTypes/diskType If you specify this field when creating or
 *  updating an instance template or all-instances configuration, specify the
 *  type of the disk, not the URL. For example: pd-standard.
 */
@property(nonatomic, copy, nullable) NSString *diskType;

/**
 *  Labels to apply to this disk. These can be later modified by the
 *  disks.setLabels method. This field is only applicable for persistent disks.
 */
@property(nonatomic, strong, nullable) GTLRCompute_AttachedDiskInitializeParams_Labels *labels;

/** A list of publicly visible licenses. Reserved for Google's use. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *licenses;

/**
 *  Specifies which action to take on instance update with this disk. Default is
 *  to use the existing disk.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AttachedDiskInitializeParams_OnUpdateAction_RecreateDisk
 *        Always recreate the disk. (Value: "RECREATE_DISK")
 *    @arg @c kGTLRCompute_AttachedDiskInitializeParams_OnUpdateAction_RecreateDiskIfSourceChanged
 *        Recreate the disk if source (image, snapshot) of this disk is
 *        different from source of existing disk. (Value:
 *        "RECREATE_DISK_IF_SOURCE_CHANGED")
 *    @arg @c kGTLRCompute_AttachedDiskInitializeParams_OnUpdateAction_UseExistingDisk
 *        Use the existing disk, this is the default behaviour. (Value:
 *        "USE_EXISTING_DISK")
 */
@property(nonatomic, copy, nullable) NSString *onUpdateAction;

/**
 *  Indicates how many IOPS to provision for the disk. This sets the number of
 *  I/O operations per second that the disk can handle. Values must be between
 *  10,000 and 120,000. For more details, see the Extreme persistent disk
 *  documentation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *provisionedIops;

/**
 *  Resource manager tags to be bound to the disk. Tag keys and values have the
 *  same definition as resource manager tags. Keys must be in the format
 *  `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The
 *  field is ignored (both PUT & PATCH) when empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_AttachedDiskInitializeParams_ResourceManagerTags *resourceManagerTags;

/**
 *  Resource policies applied to this disk for automatic snapshot creations.
 *  Specified using the full or partial URL. For instance template, specify only
 *  the resource policy name.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourcePolicies;

/**
 *  The source image to create this disk. When creating a new instance, one of
 *  initializeParams.sourceImage or initializeParams.sourceSnapshot or
 *  disks.source is required except for local SSD. To create a disk with one of
 *  the public operating system images, specify the image by its family name.
 *  For example, specify family/debian-9 to use the latest Debian 9 image:
 *  projects/debian-cloud/global/images/family/debian-9 Alternatively, use a
 *  specific version of a public operating system image:
 *  projects/debian-cloud/global/images/debian-9-stretch-vYYYYMMDD To create a
 *  disk with a custom image that you created, specify the image name in the
 *  following format: global/images/my-custom-image You can also specify a
 *  custom image by its image family, which returns the latest version of the
 *  image in that family. Replace the image name with family/family-name:
 *  global/images/family/my-image-family If the source image is deleted later,
 *  this field will not be set.
 */
@property(nonatomic, copy, nullable) NSString *sourceImage;

/**
 *  The customer-supplied encryption key of the source image. Required if the
 *  source image is protected by a customer-supplied encryption key.
 *  InstanceTemplate and InstancePropertiesPatch do not store customer-supplied
 *  encryption keys, so you cannot create disks for instances in a managed
 *  instance group if the source images are encrypted with your own keys.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *sourceImageEncryptionKey;

/**
 *  The source snapshot to create this disk. When creating a new instance, one
 *  of initializeParams.sourceSnapshot or initializeParams.sourceImage or
 *  disks.source is required except for local SSD. To create a disk with a
 *  snapshot that you created, specify the snapshot name in the following
 *  format: global/snapshots/my-backup If the source snapshot is deleted later,
 *  this field will not be set.
 */
@property(nonatomic, copy, nullable) NSString *sourceSnapshot;

/** The customer-supplied encryption key of the source snapshot. */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *sourceSnapshotEncryptionKey;

@end


/**
 *  Labels to apply to this disk. These can be later modified by the
 *  disks.setLabels method. This field is only applicable for persistent disks.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_AttachedDiskInitializeParams_Labels : GTLRObject
@end


/**
 *  Resource manager tags to be bound to the disk. Tag keys and values have the
 *  same definition as resource manager tags. Keys must be in the format
 *  `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The
 *  field is ignored (both PUT & PATCH) when empty.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_AttachedDiskInitializeParams_ResourceManagerTags : GTLRObject
@end


/**
 *  Specifies the audit configuration for a service. The configuration
 *  determines which permission types are logged, and what identities, if any,
 *  are exempted from logging. An AuditConfig must have one or more
 *  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
 *  specific service, the union of the two AuditConfigs is used for that
 *  service: the log_types specified in each AuditConfig are enabled, and the
 *  exempted_members in each AuditLogConfig are exempted. Example Policy with
 *  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
 *  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
 *  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
 *  "DATA_WRITE", "exempted_members": [ "user:aliya\@example.com" ] } ] } ] }
 *  For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
 *  logging. It also exempts jose\@example.com from DATA_READ logging, and
 *  aliya\@example.com from DATA_WRITE logging.
 */
@interface GTLRCompute_AuditConfig : GTLRObject

/** The configuration for logging of each type of permission. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AuditLogConfig *> *auditLogConfigs;

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  Specifies a service that will be enabled for audit logging. For example,
 *  `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a
 *  special value that covers all services.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  Provides the configuration for logging a type of permissions. Example: {
 *  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
 *  "user:jose\@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
 *  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose\@example.com from
 *  DATA_READ logging.
 */
@interface GTLRCompute_AuditLogConfig : GTLRObject

/**
 *  Specifies the identities that do not cause logging for this type of
 *  permission. Follows the same format of Binding.members.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exemptedMembers;

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreChildExemptions;

/**
 *  The log type that this config enables.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AuditLogConfig_LogType_AdminRead Admin reads.
 *        Example: CloudIAM getIamPolicy (Value: "ADMIN_READ")
 *    @arg @c kGTLRCompute_AuditLogConfig_LogType_DataRead Data reads. Example:
 *        CloudSQL Users list (Value: "DATA_READ")
 *    @arg @c kGTLRCompute_AuditLogConfig_LogType_DataWrite Data writes.
 *        Example: CloudSQL Users create (Value: "DATA_WRITE")
 *    @arg @c kGTLRCompute_AuditLogConfig_LogType_LogTypeUnspecified Default
 *        case. Should never be this. (Value: "LOG_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logType;

@end


/**
 *  This is deprecated and has no effect. Do not use.
 */
@interface GTLRCompute_AuthorizationLoggingOptions : GTLRObject

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AuthorizationLoggingOptions_PermissionType_AdminRead
 *        This is deprecated and has no effect. Do not use. (Value:
 *        "ADMIN_READ")
 *    @arg @c kGTLRCompute_AuthorizationLoggingOptions_PermissionType_AdminWrite
 *        This is deprecated and has no effect. Do not use. (Value:
 *        "ADMIN_WRITE")
 *    @arg @c kGTLRCompute_AuthorizationLoggingOptions_PermissionType_DataRead
 *        This is deprecated and has no effect. Do not use. (Value: "DATA_READ")
 *    @arg @c kGTLRCompute_AuthorizationLoggingOptions_PermissionType_DataWrite
 *        This is deprecated and has no effect. Do not use. (Value:
 *        "DATA_WRITE")
 *    @arg @c kGTLRCompute_AuthorizationLoggingOptions_PermissionType_PermissionTypeUnspecified
 *        This is deprecated and has no effect. Do not use. (Value:
 *        "PERMISSION_TYPE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *permissionType;

@end


/**
 *  Represents an Autoscaler resource. Google Compute Engine has two Autoscaler
 *  resources: * [Zonal](/compute/docs/reference/rest/v1/autoscalers) *
 *  [Regional](/compute/docs/reference/rest/v1/regionAutoscalers) Use
 *  autoscalers to automatically add or delete instances from a managed instance
 *  group according to your defined autoscaling policy. For more information,
 *  read Autoscaling Groups of Instances. For zonal managed instance groups
 *  resource, use the autoscaler resource. For regional managed instance groups,
 *  use the regionAutoscalers resource.
 */
@interface GTLRCompute_Autoscaler : GTLRObject

/**
 *  The configuration parameters for the autoscaling algorithm. You can define
 *  one or more signals for an autoscaler: cpuUtilization,
 *  customMetricUtilizations, and loadBalancingUtilization. If none of these are
 *  specified, the default will be to autoscale based on cpuUtilization to 0.6
 *  or 60%.
 */
@property(nonatomic, strong, nullable) GTLRCompute_AutoscalingPolicy *autoscalingPolicy;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#autoscaler for
 *  autoscalers.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] Target recommended MIG size (number of instances) computed by
 *  autoscaler. Autoscaler calculates the recommended MIG size even when the
 *  autoscaling policy mode is different from ON. This field is empty when
 *  autoscaler is not connected to an existing managed instance group or
 *  autoscaler did not generate its prediction.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *recommendedSize;

/**
 *  [Output Only] URL of the region where the instance group resides (for
 *  autoscalers living in regional scope).
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Status information of existing scaling schedules. */
@property(nonatomic, strong, nullable) GTLRCompute_Autoscaler_ScalingScheduleStatus *scalingScheduleStatus;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] The status of the autoscaler configuration. Current set of
 *  possible values: - PENDING: Autoscaler backend hasn't read new/updated
 *  configuration. - DELETING: Configuration is being deleted. - ACTIVE:
 *  Configuration is acknowledged to be effective. Some warnings might be
 *  present in the statusDetails field. - ERROR: Configuration has errors.
 *  Actionable for users. Details are present in the statusDetails field. New
 *  values might be added in the future.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Autoscaler_Status_Active Configuration is
 *        acknowledged to be effective (Value: "ACTIVE")
 *    @arg @c kGTLRCompute_Autoscaler_Status_Deleting Configuration is being
 *        deleted (Value: "DELETING")
 *    @arg @c kGTLRCompute_Autoscaler_Status_Error Configuration has errors.
 *        Actionable for users. (Value: "ERROR")
 *    @arg @c kGTLRCompute_Autoscaler_Status_Pending Autoscaler backend hasn't
 *        read new/updated configuration (Value: "PENDING")
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  [Output Only] Human-readable details about the current state of the
 *  autoscaler. Read the documentation for Commonly returned status messages for
 *  examples of status messages you might encounter.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AutoscalerStatusDetails *> *statusDetails;

/**
 *  URL of the managed instance group that this autoscaler will scale. This
 *  field is required when creating an autoscaler.
 */
@property(nonatomic, copy, nullable) NSString *target;

/**
 *  [Output Only] URL of the zone where the instance group resides (for
 *  autoscalers living in zonal scope).
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  [Output Only] Status information of existing scaling schedules.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_ScalingScheduleStatus. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_Autoscaler_ScalingScheduleStatus : GTLRObject
@end


/**
 *  GTLRCompute_AutoscalerAggregatedList
 */
@interface GTLRCompute_AutoscalerAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of AutoscalersScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_AutoscalerAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#autoscalerAggregatedList for
 *  aggregated lists of autoscalers.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] Unreachable resources. end_interface:
 *  MixerListResponseWithEtagBuilder
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_AutoscalerAggregatedList_Warning *warning;

@end


/**
 *  A list of AutoscalersScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_AutoscalersScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_AutoscalerAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_AutoscalerAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_AutoscalerAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AutoscalerAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_AutoscalerAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_AutoscalerAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of Autoscaler resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_AutoscalerList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Autoscaler resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Autoscaler *> *items;

/**
 *  [Output Only] Type of resource. Always compute#autoscalerList for lists of
 *  autoscalers.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_AutoscalerList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_AutoscalerList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_AutoscalerList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AutoscalerList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_AutoscalerList_Warning_Data_Item
 */
@interface GTLRCompute_AutoscalerList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_AutoscalersScopedList
 */
@interface GTLRCompute_AutoscalersScopedList : GTLRObject

/** [Output Only] A list of autoscalers contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Autoscaler *> *autoscalers;

/**
 *  [Output Only] Informational warning which replaces the list of autoscalers
 *  when the list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_AutoscalersScopedList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning which replaces the list of autoscalers
 *  when the list is empty.
 */
@interface GTLRCompute_AutoscalersScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_AutoscalersScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AutoscalersScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_AutoscalersScopedList_Warning_Data_Item
 */
@interface GTLRCompute_AutoscalersScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_AutoscalerStatusDetails
 */
@interface GTLRCompute_AutoscalerStatusDetails : GTLRObject

/** The status message. */
@property(nonatomic, copy, nullable) NSString *message;

/**
 *  The type of error, warning, or notice returned. Current set of possible
 *  values: - ALL_INSTANCES_UNHEALTHY (WARNING): All instances in the instance
 *  group are unhealthy (not in RUNNING state). - BACKEND_SERVICE_DOES_NOT_EXIST
 *  (ERROR): There is no backend service attached to the instance group. -
 *  CAPPED_AT_MAX_NUM_REPLICAS (WARNING): Autoscaler recommends a size greater
 *  than maxNumReplicas. - CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE (WARNING): The
 *  custom metric samples are not exported often enough to be a credible base
 *  for autoscaling. - CUSTOM_METRIC_INVALID (ERROR): The custom metric that was
 *  specified does not exist or does not have the necessary labels. -
 *  MIN_EQUALS_MAX (WARNING): The minNumReplicas is equal to maxNumReplicas.
 *  This means the autoscaler cannot add or remove instances from the instance
 *  group. - MISSING_CUSTOM_METRIC_DATA_POINTS (WARNING): The autoscaler did not
 *  receive any data from the custom metric configured for autoscaling. -
 *  MISSING_LOAD_BALANCING_DATA_POINTS (WARNING): The autoscaler is configured
 *  to scale based on a load balancing signal but the instance group has not
 *  received any requests from the load balancer. - MODE_OFF (WARNING):
 *  Autoscaling is turned off. The number of instances in the group won't change
 *  automatically. The autoscaling configuration is preserved. - MODE_ONLY_UP
 *  (WARNING): Autoscaling is in the "Autoscale only out" mode. The autoscaler
 *  can add instances but not remove any. - MORE_THAN_ONE_BACKEND_SERVICE
 *  (ERROR): The instance group cannot be autoscaled because it has more than
 *  one backend service attached to it. - NOT_ENOUGH_QUOTA_AVAILABLE (ERROR):
 *  There is insufficient quota for the necessary resources, such as CPU or
 *  number of instances. - REGION_RESOURCE_STOCKOUT (ERROR): Shown only for
 *  regional autoscalers: there is a resource stockout in the chosen region. -
 *  SCALING_TARGET_DOES_NOT_EXIST (ERROR): The target to be scaled does not
 *  exist. - UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION (ERROR):
 *  Autoscaling does not work with an HTTP/S load balancer that has been
 *  configured for maxRate. - ZONE_RESOURCE_STOCKOUT (ERROR): For zonal
 *  autoscalers: there is a resource stockout in the chosen zone. For regional
 *  autoscalers: in at least one of the zones you're using there is a resource
 *  stockout. New values might be added in the future. Some of the values might
 *  not be available in all API versions.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_AllInstancesUnhealthy
 *        All instances in the instance group are unhealthy (not in RUNNING
 *        state). (Value: "ALL_INSTANCES_UNHEALTHY")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_BackendServiceDoesNotExist
 *        There is no backend service attached to the instance group. (Value:
 *        "BACKEND_SERVICE_DOES_NOT_EXIST")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_CappedAtMaxNumReplicas
 *        Autoscaler recommends a size greater than maxNumReplicas. (Value:
 *        "CAPPED_AT_MAX_NUM_REPLICAS")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_CustomMetricDataPointsTooSparse
 *        The custom metric samples are not exported often enough to be a
 *        credible base for autoscaling. (Value:
 *        "CUSTOM_METRIC_DATA_POINTS_TOO_SPARSE")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_CustomMetricInvalid The
 *        custom metric that was specified does not exist or does not have the
 *        necessary labels. (Value: "CUSTOM_METRIC_INVALID")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_MinEqualsMax The
 *        minNumReplicas is equal to maxNumReplicas. This means the autoscaler
 *        cannot add or remove instances from the instance group. (Value:
 *        "MIN_EQUALS_MAX")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_MissingCustomMetricDataPoints
 *        The autoscaler did not receive any data from the custom metric
 *        configured for autoscaling. (Value:
 *        "MISSING_CUSTOM_METRIC_DATA_POINTS")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_MissingLoadBalancingDataPoints
 *        The autoscaler is configured to scale based on a load balancing signal
 *        but the instance group has not received any requests from the load
 *        balancer. (Value: "MISSING_LOAD_BALANCING_DATA_POINTS")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_ModeOff Autoscaling is
 *        turned off. The number of instances in the group won't change
 *        automatically. The autoscaling configuration is preserved. (Value:
 *        "MODE_OFF")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_ModeOnlyScaleOut
 *        Autoscaling is in the "Autoscale only scale out" mode. Instances in
 *        the group will be only added. (Value: "MODE_ONLY_SCALE_OUT")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_ModeOnlyUp Autoscaling
 *        is in the "Autoscale only out" mode. Instances in the group will be
 *        only added. (Value: "MODE_ONLY_UP")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_MoreThanOneBackendService
 *        The instance group cannot be autoscaled because it has more than one
 *        backend service attached to it. (Value:
 *        "MORE_THAN_ONE_BACKEND_SERVICE")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_NotEnoughQuotaAvailable
 *        There is insufficient quota for the necessary resources, such as CPU
 *        or number of instances. (Value: "NOT_ENOUGH_QUOTA_AVAILABLE")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_RegionResourceStockout
 *        Showed only for regional autoscalers: there is a resource stockout in
 *        the chosen region. (Value: "REGION_RESOURCE_STOCKOUT")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_ScalingTargetDoesNotExist
 *        The target to be scaled does not exist. (Value:
 *        "SCALING_TARGET_DOES_NOT_EXIST")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_ScheduledInstancesGreaterThanAutoscalerMax
 *        For some scaling schedules minRequiredReplicas is greater than
 *        maxNumReplicas. Autoscaler always recommends at most maxNumReplicas
 *        instances. (Value: "SCHEDULED_INSTANCES_GREATER_THAN_AUTOSCALER_MAX")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_ScheduledInstancesLessThanAutoscalerMin
 *        For some scaling schedules minRequiredReplicas is less than
 *        minNumReplicas. Autoscaler always recommends at least minNumReplicas
 *        instances. (Value: "SCHEDULED_INSTANCES_LESS_THAN_AUTOSCALER_MIN")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_Unknown Value "UNKNOWN"
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_UnsupportedMaxRateLoadBalancingConfiguration
 *        Autoscaling does not work with an HTTP/S load balancer that has been
 *        configured for maxRate. (Value:
 *        "UNSUPPORTED_MAX_RATE_LOAD_BALANCING_CONFIGURATION")
 *    @arg @c kGTLRCompute_AutoscalerStatusDetails_Type_ZoneResourceStockout For
 *        zonal autoscalers: there is a resource stockout in the chosen zone.
 *        For regional autoscalers: in at least one of the zones you're using
 *        there is a resource stockout. (Value: "ZONE_RESOURCE_STOCKOUT")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Cloud Autoscaler policy.
 */
@interface GTLRCompute_AutoscalingPolicy : GTLRObject

/**
 *  The number of seconds that the autoscaler waits before it starts collecting
 *  information from a new instance. This prevents the autoscaler from
 *  collecting information when the instance is initializing, during which the
 *  collected usage would not be reliable. The default time autoscaler waits is
 *  60 seconds. Virtual machine initialization times might vary because of
 *  numerous factors. We recommend that you test how long an instance may take
 *  to initialize. To do this, create an instance and time the startup process.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *coolDownPeriodSec;

/**
 *  Defines the CPU utilization policy that allows the autoscaler to scale based
 *  on the average CPU utilization of a managed instance group.
 */
@property(nonatomic, strong, nullable) GTLRCompute_AutoscalingPolicyCpuUtilization *cpuUtilization;

/** Configuration parameters of autoscaling based on a custom metric. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AutoscalingPolicyCustomMetricUtilization *> *customMetricUtilizations;

/** Configuration parameters of autoscaling based on load balancer. */
@property(nonatomic, strong, nullable) GTLRCompute_AutoscalingPolicyLoadBalancingUtilization *loadBalancingUtilization;

/**
 *  The maximum number of instances that the autoscaler can scale out to. This
 *  is required when creating or updating an autoscaler. The maximum number of
 *  replicas must not be lower than minimal number of replicas.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxNumReplicas;

/**
 *  The minimum number of replicas that the autoscaler can scale in to. This
 *  cannot be less than 0. If not provided, autoscaler chooses a default value
 *  depending on maximum number of instances allowed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minNumReplicas;

/**
 *  Defines operating mode for this policy.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AutoscalingPolicy_Mode_Off Do not automatically scale
 *        the MIG in or out. The recommended_size field contains the size of MIG
 *        that would be set if the actuation mode was enabled. (Value: "OFF")
 *    @arg @c kGTLRCompute_AutoscalingPolicy_Mode_On Automatically scale the MIG
 *        in and out according to the policy. (Value: "ON")
 *    @arg @c kGTLRCompute_AutoscalingPolicy_Mode_OnlyScaleOut Automatically
 *        create VMs according to the policy, but do not scale the MIG in.
 *        (Value: "ONLY_SCALE_OUT")
 *    @arg @c kGTLRCompute_AutoscalingPolicy_Mode_OnlyUp Automatically create
 *        VMs according to the policy, but do not scale the MIG in. (Value:
 *        "ONLY_UP")
 */
@property(nonatomic, copy, nullable) NSString *mode;

@property(nonatomic, strong, nullable) GTLRCompute_AutoscalingPolicyScaleInControl *scaleInControl;

/**
 *  Scaling schedules defined for an autoscaler. Multiple schedules can be set
 *  on an autoscaler, and they can overlap. During overlapping periods the
 *  greatest min_required_replicas of all scaling schedules is applied. Up to
 *  128 scaling schedules are allowed.
 */
@property(nonatomic, strong, nullable) GTLRCompute_AutoscalingPolicy_ScalingSchedules *scalingSchedules;

@end


/**
 *  Scaling schedules defined for an autoscaler. Multiple schedules can be set
 *  on an autoscaler, and they can overlap. During overlapping periods the
 *  greatest min_required_replicas of all scaling schedules is applied. Up to
 *  128 scaling schedules are allowed.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_AutoscalingPolicyScalingSchedule. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_AutoscalingPolicy_ScalingSchedules : GTLRObject
@end


/**
 *  CPU utilization policy.
 */
@interface GTLRCompute_AutoscalingPolicyCpuUtilization : GTLRObject

/**
 *  Indicates whether predictive autoscaling based on CPU metric is enabled.
 *  Valid values are: * NONE (default). No predictive method is used. The
 *  autoscaler scales the group to meet current demand based on real-time
 *  metrics. * OPTIMIZE_AVAILABILITY. Predictive autoscaling improves
 *  availability by monitoring daily and weekly load patterns and scaling out
 *  ahead of anticipated demand.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AutoscalingPolicyCpuUtilization_PredictiveMethod_None
 *        No predictive method is used. The autoscaler scales the group to meet
 *        current demand based on real-time metrics (Value: "NONE")
 *    @arg @c kGTLRCompute_AutoscalingPolicyCpuUtilization_PredictiveMethod_OptimizeAvailability
 *        Predictive autoscaling improves availability by monitoring daily and
 *        weekly load patterns and scaling out ahead of anticipated demand.
 *        (Value: "OPTIMIZE_AVAILABILITY")
 */
@property(nonatomic, copy, nullable) NSString *predictiveMethod;

/**
 *  The target CPU utilization that the autoscaler maintains. Must be a float
 *  value in the range (0, 1]. If not specified, the default is 0.6. If the CPU
 *  level is below the target utilization, the autoscaler scales in the number
 *  of instances until it reaches the minimum number of instances you specified
 *  or until the average CPU of your instances reaches the target utilization.
 *  If the average CPU is above the target utilization, the autoscaler scales
 *  out until it reaches the maximum number of instances you specified or until
 *  the average utilization reaches the target utilization.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *utilizationTarget;

@end


/**
 *  Custom utilization metric policy.
 */
@interface GTLRCompute_AutoscalingPolicyCustomMetricUtilization : GTLRObject

/**
 *  A filter string, compatible with a Stackdriver Monitoring filter string for
 *  TimeSeries.list API call. This filter is used to select a specific
 *  TimeSeries for the purpose of autoscaling and to determine whether the
 *  metric is exporting per-instance or per-group data. For the filter to be
 *  valid for autoscaling purposes, the following rules apply: - You can only
 *  use the AND operator for joining selectors. - You can only use direct
 *  equality comparison operator (=) without any functions for each selector. -
 *  You can specify the metric in both the filter string and in the metric
 *  field. However, if specified in both places, the metric must be identical. -
 *  The monitored resource type determines what kind of values are expected for
 *  the metric. If it is a gce_instance, the autoscaler expects the metric to
 *  include a separate TimeSeries for each instance in a group. In such a case,
 *  you cannot filter on resource labels. If the resource type is any other
 *  value, the autoscaler expects this metric to contain values that apply to
 *  the entire autoscaled instance group and resource label filtering can be
 *  performed to point autoscaler at the correct TimeSeries to scale upon. This
 *  is called a *per-group metric* for the purpose of autoscaling. If not
 *  specified, the type defaults to gce_instance. Try to provide a filter that
 *  is selective enough to pick just one TimeSeries for the autoscaled group or
 *  for each of the instances (if you are using gce_instance resource type). If
 *  multiple TimeSeries are returned upon the query execution, the autoscaler
 *  will sum their respective values to obtain its scaling value.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  The identifier (type) of the Stackdriver Monitoring metric. The metric
 *  cannot have negative values. The metric must have a value type of INT64 or
 *  DOUBLE.
 */
@property(nonatomic, copy, nullable) NSString *metric;

/**
 *  If scaling is based on a per-group metric value that represents the total
 *  amount of work to be done or resource usage, set this value to an amount
 *  assigned for a single instance of the scaled group. Autoscaler keeps the
 *  number of instances proportional to the value of this metric. The metric
 *  itself does not change value due to group resizing. A good metric to use
 *  with the target is for example
 *  pubsub.googleapis.com/subscription/num_undelivered_messages or a custom
 *  metric exporting the total number of requests coming to your instances. A
 *  bad example would be a metric exporting an average or median latency, since
 *  this value can't include a chunk assignable to a single instance, it could
 *  be better used with utilization_target instead.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *singleInstanceAssignment;

/**
 *  The target value of the metric that autoscaler maintains. This must be a
 *  positive value. A utilization metric scales number of virtual machines
 *  handling requests to increase or decrease proportionally to the metric. For
 *  example, a good metric to use as a utilization_target is
 *  https://www.googleapis.com/compute/v1/instance/network/received_bytes_count.
 *  The autoscaler works to keep this value constant for each of the instances.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *utilizationTarget;

/**
 *  Defines how target utilization value is expressed for a Stackdriver
 *  Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_AutoscalingPolicyCustomMetricUtilization_UtilizationTargetType_DeltaPerMinute
 *        Sets the utilization target value for a cumulative or delta metric,
 *        expressed as the rate of growth per minute. (Value:
 *        "DELTA_PER_MINUTE")
 *    @arg @c kGTLRCompute_AutoscalingPolicyCustomMetricUtilization_UtilizationTargetType_DeltaPerSecond
 *        Sets the utilization target value for a cumulative or delta metric,
 *        expressed as the rate of growth per second. (Value:
 *        "DELTA_PER_SECOND")
 *    @arg @c kGTLRCompute_AutoscalingPolicyCustomMetricUtilization_UtilizationTargetType_Gauge
 *        Sets the utilization target value for a gauge metric. The autoscaler
 *        will collect the average utilization of the virtual machines from the
 *        last couple of minutes, and compare the value to the utilization
 *        target value to perform autoscaling. (Value: "GAUGE")
 */
@property(nonatomic, copy, nullable) NSString *utilizationTargetType;

@end


/**
 *  Configuration parameters of autoscaling based on load balancing.
 */
@interface GTLRCompute_AutoscalingPolicyLoadBalancingUtilization : GTLRObject

/**
 *  Fraction of backend capacity utilization (set in HTTP(S) load balancing
 *  configuration) that the autoscaler maintains. Must be a positive float
 *  value. If not defined, the default is 0.8.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *utilizationTarget;

@end


/**
 *  Configuration that allows for slower scale in so that even if Autoscaler
 *  recommends an abrupt scale in of a MIG, it will be throttled as specified by
 *  the parameters below.
 */
@interface GTLRCompute_AutoscalingPolicyScaleInControl : GTLRObject

/**
 *  Maximum allowed number (or %) of VMs that can be deducted from the peak
 *  recommendation during the window autoscaler looks at when computing
 *  recommendations. Possibly all these VMs can be deleted at once so user
 *  service needs to be prepared to lose that many VMs in one step.
 */
@property(nonatomic, strong, nullable) GTLRCompute_FixedOrPercent *maxScaledInReplicas;

/**
 *  How far back autoscaling looks when computing recommendations to include
 *  directives regarding slower scale in, as described above.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timeWindowSec;

@end


/**
 *  Scaling based on user-defined schedule. The message describes a single
 *  scaling schedule. A scaling schedule changes the minimum number of VM
 *  instances an autoscaler can recommend, which can trigger scaling out.
 */
@interface GTLRCompute_AutoscalingPolicyScalingSchedule : GTLRObject

/**
 *  A description of a scaling schedule.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  A boolean value that specifies whether a scaling schedule can influence
 *  autoscaler recommendations. If set to true, then a scaling schedule has no
 *  effect. This field is optional, and its value is false by default.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/**
 *  The duration of time intervals, in seconds, for which this scaling schedule
 *  is to run. The minimum allowed value is 300. This field is required.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *durationSec;

/**
 *  The minimum number of VM instances that the autoscaler will recommend in
 *  time intervals starting according to schedule. This field is required.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minRequiredReplicas;

/**
 *  The start timestamps of time intervals when this scaling schedule is to
 *  provide a scaling signal. This field uses the extended cron format (with an
 *  optional year field). The expression can describe a single timestamp if the
 *  optional year is set, in which case the scaling schedule runs once. The
 *  schedule is interpreted with respect to time_zone. This field is required.
 *  Note: These timestamps only describe when autoscaler starts providing the
 *  scaling signal. The VMs need additional time to become serving.
 */
@property(nonatomic, copy, nullable) NSString *schedule;

/**
 *  The time zone to use when interpreting the schedule. The value of this field
 *  must be a time zone name from the tz database:
 *  http://en.wikipedia.org/wiki/Tz_database. This field is assigned a default
 *  value of “UTC” if left empty.
 */
@property(nonatomic, copy, nullable) NSString *timeZone;

@end


/**
 *  Message containing information of one individual backend.
 */
@interface GTLRCompute_Backend : GTLRObject

/**
 *  Specifies how to determine whether the backend of a load balancer can handle
 *  additional traffic or is fully loaded. For usage guidelines, see Connection
 *  balancing mode. Backends must use compatible balancing modes. For more
 *  information, see Supported balancing modes and target capacity settings and
 *  Restrictions and guidance for instance groups. Note: Currently, if you use
 *  the API to configure incompatible balancing modes, the configuration might
 *  be accepted even though it has no impact and is ignored. Specifically,
 *  Backend.maxUtilization is ignored when Backend.balancingMode is RATE. In the
 *  future, this incompatible combination will be rejected.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Backend_BalancingMode_Connection Balance based on the
 *        number of simultaneous connections. (Value: "CONNECTION")
 *    @arg @c kGTLRCompute_Backend_BalancingMode_Rate Balance based on requests
 *        per second (RPS). (Value: "RATE")
 *    @arg @c kGTLRCompute_Backend_BalancingMode_Utilization Balance based on
 *        the backend utilization. (Value: "UTILIZATION")
 */
@property(nonatomic, copy, nullable) NSString *balancingMode;

/**
 *  A multiplier applied to the backend's target capacity of its balancing mode.
 *  The default value is 1, which means the group serves up to 100% of its
 *  configured capacity (depending on balancingMode). A setting of 0 means the
 *  group is completely drained, offering 0% of its available capacity. The
 *  valid ranges are 0.0 and [0.1,1.0]. You cannot configure a setting larger
 *  than 0 and smaller than 0.1. You cannot configure a setting of 0 when there
 *  is only one backend attached to the backend service.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *capacityScaler;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  This field designates whether this is a failover backend. More than one
 *  failover backend can be configured for a given BackendService.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failover;

/**
 *  The fully-qualified URL of an instance group or network endpoint group (NEG)
 *  resource. To determine what types of backends a load balancer supports, see
 *  the [Backend services
 *  overview](https://cloud.google.com/load-balancing/docs/backend-service#backends).
 *  You must use the *fully-qualified* URL (starting with
 *  https://www.googleapis.com/) to specify the instance group or NEG. Partial
 *  URLs are not supported.
 */
@property(nonatomic, copy, nullable) NSString *group;

/**
 *  Defines a target maximum number of simultaneous connections. For usage
 *  guidelines, see Connection balancing mode and Utilization balancing mode.
 *  Not available if the backend's balancingMode is RATE.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxConnections;

/**
 *  Defines a target maximum number of simultaneous connections. For usage
 *  guidelines, see Connection balancing mode and Utilization balancing mode.
 *  Not available if the backend's balancingMode is RATE.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxConnectionsPerEndpoint;

/**
 *  Defines a target maximum number of simultaneous connections. For usage
 *  guidelines, see Connection balancing mode and Utilization balancing mode.
 *  Not available if the backend's balancingMode is RATE.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxConnectionsPerInstance;

/**
 *  Defines a maximum number of HTTP requests per second (RPS). For usage
 *  guidelines, see Rate balancing mode and Utilization balancing mode. Not
 *  available if the backend's balancingMode is CONNECTION.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxRate;

/**
 *  Defines a maximum target for requests per second (RPS). For usage
 *  guidelines, see Rate balancing mode and Utilization balancing mode. Not
 *  available if the backend's balancingMode is CONNECTION.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxRatePerEndpoint;

/**
 *  Defines a maximum target for requests per second (RPS). For usage
 *  guidelines, see Rate balancing mode and Utilization balancing mode. Not
 *  available if the backend's balancingMode is CONNECTION.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxRatePerInstance;

/**
 *  Optional parameter to define a target capacity for the UTILIZATION balancing
 *  mode. The valid range is [0.0, 1.0]. For usage guidelines, see Utilization
 *  balancing mode.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxUtilization;

@end


/**
 *  Represents a Cloud Storage Bucket resource. This Cloud Storage bucket
 *  resource is referenced by a URL map of a load balancer. For more
 *  information, read Backend Buckets.
 */
@interface GTLRCompute_BackendBucket : GTLRObject

/** Cloud Storage bucket name. */
@property(nonatomic, copy, nullable) NSString *bucketName;

/** Cloud CDN configuration for this BackendBucket. */
@property(nonatomic, strong, nullable) GTLRCompute_BackendBucketCdnPolicy *cdnPolicy;

/**
 *  Compress text responses using Brotli or gzip compression, based on the
 *  client's Accept-Encoding header.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BackendBucket_CompressionMode_Automatic Automatically
 *        uses the best compression based on the Accept-Encoding header sent by
 *        the client. (Value: "AUTOMATIC")
 *    @arg @c kGTLRCompute_BackendBucket_CompressionMode_Disabled Disables
 *        compression. Existing compressed responses cached by Cloud CDN will
 *        not be served to clients. (Value: "DISABLED")
 */
@property(nonatomic, copy, nullable) NSString *compressionMode;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/** Headers that the HTTP/S load balancer should add to proxied responses. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *customResponseHeaders;

/**
 *  An optional textual description of the resource; provided by the client when
 *  the resource is created.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The resource URL for the edge security policy associated with
 *  this backend bucket.
 */
@property(nonatomic, copy, nullable) NSString *edgeSecurityPolicy;

/**
 *  If true, enable Cloud CDN for this BackendBucket.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableCdn;

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** Type of the resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end


/**
 *  Message containing Cloud CDN configuration for a backend bucket.
 */
@interface GTLRCompute_BackendBucketCdnPolicy : GTLRObject

/**
 *  Bypass the cache when the specified request headers are matched - e.g.
 *  Pragma or Authorization headers. Up to 5 headers can be specified. The cache
 *  is bypassed for all cdnPolicy.cacheMode settings.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_BackendBucketCdnPolicyBypassCacheOnRequestHeader *> *bypassCacheOnRequestHeaders;

/** The CacheKeyPolicy for this CdnPolicy. */
@property(nonatomic, strong, nullable) GTLRCompute_BackendBucketCdnPolicyCacheKeyPolicy *cacheKeyPolicy;

/**
 *  Specifies the cache setting for all responses from this backend. The
 *  possible values are: USE_ORIGIN_HEADERS Requires the origin to set valid
 *  caching headers to cache content. Responses without these headers will not
 *  be cached at Google's edge, and will require a full trip to the origin on
 *  every request, potentially impacting performance and increasing load on the
 *  origin server. FORCE_CACHE_ALL Cache all content, ignoring any "private",
 *  "no-store" or "no-cache" directives in Cache-Control response headers.
 *  Warning: this may result in Cloud CDN caching private, per-user (user
 *  identifiable) content. CACHE_ALL_STATIC Automatically cache static content,
 *  including common image formats, media (video and audio), and web assets
 *  (JavaScript and CSS). Requests and responses that are marked as uncacheable,
 *  as well as dynamic content (including HTML), will not be cached.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BackendBucketCdnPolicy_CacheMode_CacheAllStatic
 *        Automatically cache static content, including common image formats,
 *        media (video and audio), and web assets (JavaScript and CSS). Requests
 *        and responses that are marked as uncacheable, as well as dynamic
 *        content (including HTML), will not be cached. (Value:
 *        "CACHE_ALL_STATIC")
 *    @arg @c kGTLRCompute_BackendBucketCdnPolicy_CacheMode_ForceCacheAll Cache
 *        all content, ignoring any "private", "no-store" or "no-cache"
 *        directives in Cache-Control response headers. Warning: this may result
 *        in Cloud CDN caching private, per-user (user identifiable) content.
 *        (Value: "FORCE_CACHE_ALL")
 *    @arg @c kGTLRCompute_BackendBucketCdnPolicy_CacheMode_InvalidCacheMode
 *        Value "INVALID_CACHE_MODE"
 *    @arg @c kGTLRCompute_BackendBucketCdnPolicy_CacheMode_UseOriginHeaders
 *        Requires the origin to set valid caching headers to cache content.
 *        Responses without these headers will not be cached at Google's edge,
 *        and will require a full trip to the origin on every request,
 *        potentially impacting performance and increasing load on the origin
 *        server. (Value: "USE_ORIGIN_HEADERS")
 */
@property(nonatomic, copy, nullable) NSString *cacheMode;

/**
 *  Specifies a separate client (e.g. browser client) maximum TTL. This is used
 *  to clamp the max-age (or Expires) value sent to the client. With
 *  FORCE_CACHE_ALL, the lesser of client_ttl and default_ttl is used for the
 *  response max-age directive, along with a "public" directive. For cacheable
 *  content in CACHE_ALL_STATIC mode, client_ttl clamps the max-age from the
 *  origin (if specified), or else sets the response max-age directive to the
 *  lesser of the client_ttl and default_ttl, and also ensures a "public"
 *  cache-control directive is present. If a client TTL is not specified, a
 *  default value (1 hour) will be used. The maximum allowed value is
 *  31,622,400s (1 year).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clientTtl;

/**
 *  Specifies the default TTL for cached content served by this origin for
 *  responses that do not have an existing valid TTL (max-age or s-max-age).
 *  Setting a TTL of "0" means "always revalidate". The value of defaultTTL
 *  cannot be set to a value greater than that of maxTTL, but can be equal. When
 *  the cacheMode is set to FORCE_CACHE_ALL, the defaultTTL will overwrite the
 *  TTL set in all responses. The maximum allowed value is 31,622,400s (1 year),
 *  noting that infrequently accessed objects may be evicted from the cache
 *  before the defined TTL.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *defaultTtl;

/**
 *  Specifies the maximum allowed TTL for cached content served by this origin.
 *  Cache directives that attempt to set a max-age or s-maxage higher than this,
 *  or an Expires header more than maxTTL seconds in the future will be capped
 *  at the value of maxTTL, as if it were the value of an s-maxage Cache-Control
 *  directive. Headers sent to the client will not be modified. Setting a TTL of
 *  "0" means "always revalidate". The maximum allowed value is 31,622,400s (1
 *  year), noting that infrequently accessed objects may be evicted from the
 *  cache before the defined TTL.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxTtl;

/**
 *  Negative caching allows per-status code TTLs to be set, in order to apply
 *  fine-grained caching for common errors or redirects. This can reduce the
 *  load on your origin and improve end-user experience by reducing response
 *  latency. When the cache mode is set to CACHE_ALL_STATIC or
 *  USE_ORIGIN_HEADERS, negative caching applies to responses with the specified
 *  response code that lack any Cache-Control, Expires, or Pragma: no-cache
 *  directives. When the cache mode is set to FORCE_CACHE_ALL, negative caching
 *  applies to all responses with the specified response code, and override any
 *  caching headers. By default, Cloud CDN will apply the following default TTLs
 *  to these status codes: HTTP 300 (Multiple Choice), 301, 308 (Permanent
 *  Redirects): 10m HTTP 404 (Not Found), 410 (Gone), 451 (Unavailable For Legal
 *  Reasons): 120s HTTP 405 (Method Not Found), 421 (Misdirected Request), 501
 *  (Not Implemented): 60s. These defaults can be overridden in
 *  negative_caching_policy.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negativeCaching;

/**
 *  Sets a cache TTL for the specified HTTP status code. negative_caching must
 *  be enabled to configure negative_caching_policy. Omitting the policy and
 *  leaving negative_caching enabled will use Cloud CDN's default cache TTLs.
 *  Note that when specifying an explicit negative_caching_policy, you should
 *  take care to specify a cache TTL for all response codes that you wish to
 *  cache. Cloud CDN will not apply any default negative caching when a policy
 *  exists.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_BackendBucketCdnPolicyNegativeCachingPolicy *> *negativeCachingPolicy;

/**
 *  If true then Cloud CDN will combine multiple concurrent cache fill requests
 *  into a small number of requests to the origin.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestCoalescing;

/**
 *  Serve existing content from the cache (if available) when revalidating
 *  content with the origin, or when an error is encountered when refreshing the
 *  cache. This setting defines the default "max-stale" duration for any cached
 *  responses that do not specify a max-stale directive. Stale responses that
 *  exceed the TTL configured here will not be served. The default limit
 *  (max-stale) is 86400s (1 day), which will allow stale content to be served
 *  up to this limit beyond the max-age (or s-max-age) of a cached response. The
 *  maximum allowed value is 604800 (1 week). Set this to zero (0) to disable
 *  serve-while-stale.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *serveWhileStale;

/**
 *  Maximum number of seconds the response to a signed URL request will be
 *  considered fresh. After this time period, the response will be revalidated
 *  before being served. Defaults to 1hr (3600s). When serving responses to
 *  signed URL requests, Cloud CDN will internally behave as though all
 *  responses from this backend had a "Cache-Control: public, max-age=[TTL]"
 *  header, regardless of any existing Cache-Control header. The actual headers
 *  served in responses will not be altered.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *signedUrlCacheMaxAgeSec;

/** [Output Only] Names of the keys for signing request URLs. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *signedUrlKeyNames;

@end


/**
 *  Bypass the cache when the specified request headers are present, e.g. Pragma
 *  or Authorization headers. Values are case insensitive. The presence of such
 *  a header overrides the cache_mode setting.
 */
@interface GTLRCompute_BackendBucketCdnPolicyBypassCacheOnRequestHeader : GTLRObject

/**
 *  The header field name to match on when bypassing cache. Values are
 *  case-insensitive.
 */
@property(nonatomic, copy, nullable) NSString *headerName;

@end


/**
 *  Message containing what to include in the cache key for a request for Cloud
 *  CDN.
 */
@interface GTLRCompute_BackendBucketCdnPolicyCacheKeyPolicy : GTLRObject

/** Allows HTTP request headers (by name) to be used in the cache key. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includeHttpHeaders;

/**
 *  Names of query string parameters to include in cache keys. Default
 *  parameters are always included. '&' and '=' will be percent encoded and not
 *  treated as delimiters.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *queryStringWhitelist;

@end


/**
 *  Specify CDN TTLs for response error codes.
 */
@interface GTLRCompute_BackendBucketCdnPolicyNegativeCachingPolicy : GTLRObject

/**
 *  The HTTP status code to define a TTL against. Only HTTP status codes 300,
 *  301, 302, 307, 308, 404, 405, 410, 421, 451 and 501 are can be specified as
 *  values, and you cannot specify a status code more than once.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  The TTL (in seconds) for which to cache responses with the corresponding
 *  status code. The maximum allowed value is 1800s (30 minutes), noting that
 *  infrequently accessed objects may be evicted from the cache before the
 *  defined TTL.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ttl;

@end


/**
 *  Contains a list of BackendBucket resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_BackendBucketList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of BackendBucket resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_BackendBucket *> *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_BackendBucketList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_BackendBucketList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_PartialSuccess Success
 *        is reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_ResourceNotDeleted One
 *        or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_BackendBucketList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_BackendBucketList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_BackendBucketList_Warning_Data_Item
 */
@interface GTLRCompute_BackendBucketList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a Backend Service resource. A backend service defines how Google
 *  Cloud load balancers distribute traffic. The backend service configuration
 *  contains a set of values, such as the protocol used to connect to backends,
 *  various distribution and session settings, health checks, and timeouts.
 *  These settings provide fine-grained control over how your load balancer
 *  behaves. Most of the settings have default values that allow for easy
 *  configuration if you need to get started quickly. Backend services in Google
 *  Compute Engine can be either regionally or globally scoped. *
 *  [Global](https://cloud.google.com/compute/docs/reference/rest/v1/backendServices)
 *  *
 *  [Regional](https://cloud.google.com/compute/docs/reference/rest/v1/regionBackendServices)
 *  For more information, see Backend Services.
 */
@interface GTLRCompute_BackendService : GTLRObject

/**
 *  Lifetime of cookies in seconds. This setting is applicable to external and
 *  internal HTTP(S) load balancers and Traffic Director and requires
 *  GENERATED_COOKIE or HTTP_COOKIE session affinity. If set to 0, the cookie is
 *  non-persistent and lasts only until the end of the browser session (or
 *  equivalent). The maximum allowed value is two weeks (1,209,600). Not
 *  supported when the backend service is referenced by a URL map that is bound
 *  to target gRPC proxy that has validateForProxyless field set to true.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *affinityCookieTtlSec;

/** The list of backends that serve this BackendService. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Backend *> *backends;

/**
 *  Cloud CDN configuration for this BackendService. Only available for
 *  specified load balancer types.
 */
@property(nonatomic, strong, nullable) GTLRCompute_BackendServiceCdnPolicy *cdnPolicy;

@property(nonatomic, strong, nullable) GTLRCompute_CircuitBreakers *circuitBreakers;

/**
 *  Compress text responses using Brotli or gzip compression, based on the
 *  client's Accept-Encoding header.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BackendService_CompressionMode_Automatic
 *        Automatically uses the best compression based on the Accept-Encoding
 *        header sent by the client. (Value: "AUTOMATIC")
 *    @arg @c kGTLRCompute_BackendService_CompressionMode_Disabled Disables
 *        compression. Existing compressed responses cached by Cloud CDN will
 *        not be served to clients. (Value: "DISABLED")
 */
@property(nonatomic, copy, nullable) NSString *compressionMode;

@property(nonatomic, strong, nullable) GTLRCompute_ConnectionDraining *connectionDraining;

/**
 *  Connection Tracking configuration for this BackendService. Connection
 *  tracking policy settings are only available for Network Load Balancing and
 *  Internal TCP/UDP Load Balancing.
 */
@property(nonatomic, strong, nullable) GTLRCompute_BackendServiceConnectionTrackingPolicy *connectionTrackingPolicy;

/**
 *  Consistent Hash-based load balancing can be used to provide soft session
 *  affinity based on HTTP headers, cookies or other properties. This load
 *  balancing policy is applicable only for HTTP connections. The affinity to a
 *  particular destination host will be lost when one or more hosts are
 *  added/removed from the destination service. This field specifies parameters
 *  that control consistent hashing. This field is only applicable when
 *  localityLbPolicy is set to MAGLEV or RING_HASH. This field is applicable to
 *  either: - A regional backend service with the service_protocol set to HTTP,
 *  HTTPS, or HTTP2, and load_balancing_scheme set to INTERNAL_MANAGED. - A
 *  global backend service with the load_balancing_scheme set to
 *  INTERNAL_SELF_MANAGED.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ConsistentHashLoadBalancerSettings *consistentHash;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  Headers that the load balancer adds to proxied requests. See [Creating
 *  custom
 *  headers](https://cloud.google.com/load-balancing/docs/custom-headers).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *customRequestHeaders;

/**
 *  Headers that the load balancer adds to proxied responses. See [Creating
 *  custom
 *  headers](https://cloud.google.com/load-balancing/docs/custom-headers).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *customResponseHeaders;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The resource URL for the edge security policy associated with
 *  this backend service.
 */
@property(nonatomic, copy, nullable) NSString *edgeSecurityPolicy;

/**
 *  If true, enables Cloud CDN for the backend service of an external HTTP(S)
 *  load balancer.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableCDN;

/**
 *  Requires at least one backend instance group to be defined as a backup
 *  (failover) backend. For load balancers that have configurable failover:
 *  [Internal TCP/UDP Load
 *  Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview)
 *  and [external TCP/UDP Load
 *  Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-failover-overview).
 */
@property(nonatomic, strong, nullable) GTLRCompute_BackendServiceFailoverPolicy *failoverPolicy;

/**
 *  Fingerprint of this resource. A hash of the contents stored in this object.
 *  This field is used in optimistic locking. This field will be ignored when
 *  inserting a BackendService. An up-to-date fingerprint must be provided in
 *  order to update the BackendService, otherwise the request will fail with
 *  error 412 conditionNotMet. To see the latest fingerprint, make a get()
 *  request to retrieve a BackendService.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  The list of URLs to the healthChecks, httpHealthChecks (legacy), or
 *  httpsHealthChecks (legacy) resource for health checking this backend
 *  service. Not all backend services support legacy health checks. See Load
 *  balancer guide. Currently, at most one health check can be specified for
 *  each backend service. Backend services with instance group or zonal NEG
 *  backends must have a health check. Backend services with internet or
 *  serverless NEG backends must not have a health check.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *healthChecks;

/**
 *  The configurations for Identity-Aware Proxy on this resource. Not available
 *  for Internal TCP/UDP Load Balancing and Network Load Balancing.
 */
@property(nonatomic, strong, nullable) GTLRCompute_BackendServiceIAP *iap;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of resource. Always compute#backendService for backend
 *  services.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Specifies the load balancer type. A backend service created for one type of
 *  load balancer cannot be used with another. For more information, refer to
 *  Choosing a load balancer.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BackendService_LoadBalancingScheme_External Signifies
 *        that this will be used for external HTTP(S), SSL Proxy, TCP Proxy, or
 *        Network Load Balancing (Value: "EXTERNAL")
 *    @arg @c kGTLRCompute_BackendService_LoadBalancingScheme_ExternalManaged
 *        Signifies that this will be used for External Managed HTTP(S) Load
 *        Balancing. (Value: "EXTERNAL_MANAGED")
 *    @arg @c kGTLRCompute_BackendService_LoadBalancingScheme_Internal Signifies
 *        that this will be used for Internal TCP/UDP Load Balancing. (Value:
 *        "INTERNAL")
 *    @arg @c kGTLRCompute_BackendService_LoadBalancingScheme_InternalManaged
 *        Signifies that this will be used for Internal HTTP(S) Load Balancing.
 *        (Value: "INTERNAL_MANAGED")
 *    @arg @c kGTLRCompute_BackendService_LoadBalancingScheme_InternalSelfManaged
 *        Signifies that this will be used by Traffic Director. (Value:
 *        "INTERNAL_SELF_MANAGED")
 *    @arg @c kGTLRCompute_BackendService_LoadBalancingScheme_InvalidLoadBalancingScheme
 *        Value "INVALID_LOAD_BALANCING_SCHEME"
 */
@property(nonatomic, copy, nullable) NSString *loadBalancingScheme;

/**
 *  A list of locality load balancing policies to be used in order of
 *  preference. Either the policy or the customPolicy field should be set.
 *  Overrides any value set in the localityLbPolicy field. localityLbPolicies is
 *  only supported when the BackendService is referenced by a URL Map that is
 *  referenced by a target gRPC proxy that has the validateForProxyless field
 *  set to true.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfig *> *localityLbPolicies;

/**
 *  The load balancing algorithm used within the scope of the locality. The
 *  possible values are: - ROUND_ROBIN: This is a simple policy in which each
 *  healthy backend is selected in round robin order. This is the default. -
 *  LEAST_REQUEST: An O(1) algorithm which selects two random healthy hosts and
 *  picks the host which has fewer active requests. - RING_HASH: The ring/modulo
 *  hash load balancer implements consistent hashing to backends. The algorithm
 *  has the property that the addition/removal of a host from a set of N hosts
 *  only affects 1/N of the requests. - RANDOM: The load balancer selects a
 *  random healthy host. - ORIGINAL_DESTINATION: Backend host is selected based
 *  on the client connection metadata, i.e., connections are opened to the same
 *  address as the destination address of the incoming connection before the
 *  connection was redirected to the load balancer. - MAGLEV: used as a drop in
 *  replacement for the ring hash load balancer. Maglev is not as stable as ring
 *  hash but has faster table lookup build times and host selection times. For
 *  more information about Maglev, see https://ai.google/research/pubs/pub44824
 *  This field is applicable to either: - A regional backend service with the
 *  service_protocol set to HTTP, HTTPS, or HTTP2, and load_balancing_scheme set
 *  to INTERNAL_MANAGED. - A global backend service with the
 *  load_balancing_scheme set to INTERNAL_SELF_MANAGED. If sessionAffinity is
 *  not NONE, and this field is not set to MAGLEV or RING_HASH, session affinity
 *  settings will not take effect. Only ROUND_ROBIN and RING_HASH are supported
 *  when the backend service is referenced by a URL map that is bound to target
 *  gRPC proxy that has validateForProxyless field set to true.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BackendService_LocalityLbPolicy_InvalidLbPolicy Value
 *        "INVALID_LB_POLICY"
 *    @arg @c kGTLRCompute_BackendService_LocalityLbPolicy_LeastRequest An O(1)
 *        algorithm which selects two random healthy hosts and picks the host
 *        which has fewer active requests. (Value: "LEAST_REQUEST")
 *    @arg @c kGTLRCompute_BackendService_LocalityLbPolicy_Maglev This algorithm
 *        implements consistent hashing to backends. Maglev can be used as a
 *        drop in replacement for the ring hash load balancer. Maglev is not as
 *        stable as ring hash but has faster table lookup build times and host
 *        selection times. For more information about Maglev, see
 *        https://ai.google/research/pubs/pub44824 (Value: "MAGLEV")
 *    @arg @c kGTLRCompute_BackendService_LocalityLbPolicy_OriginalDestination
 *        Backend host is selected based on the client connection metadata,
 *        i.e., connections are opened to the same address as the destination
 *        address of the incoming connection before the connection was
 *        redirected to the load balancer. (Value: "ORIGINAL_DESTINATION")
 *    @arg @c kGTLRCompute_BackendService_LocalityLbPolicy_Random The load
 *        balancer selects a random healthy host. (Value: "RANDOM")
 *    @arg @c kGTLRCompute_BackendService_LocalityLbPolicy_RingHash The
 *        ring/modulo hash load balancer implements consistent hashing to
 *        backends. The algorithm has the property that the addition/removal of
 *        a host from a set of N hosts only affects 1/N of the requests. (Value:
 *        "RING_HASH")
 *    @arg @c kGTLRCompute_BackendService_LocalityLbPolicy_RoundRobin This is a
 *        simple policy in which each healthy backend is selected in round robin
 *        order. This is the default. (Value: "ROUND_ROBIN")
 */
@property(nonatomic, copy, nullable) NSString *localityLbPolicy;

/**
 *  This field denotes the logging options for the load balancer traffic served
 *  by this backend service. If logging is enabled, logs will be exported to
 *  Stackdriver.
 */
@property(nonatomic, strong, nullable) GTLRCompute_BackendServiceLogConfig *logConfig;

/**
 *  Specifies the default maximum duration (timeout) for streams to this
 *  service. Duration is computed from the beginning of the stream until the
 *  response has been completely processed, including all retries. A stream that
 *  does not complete in this duration is closed. If not specified, there will
 *  be no timeout limit, i.e. the maximum duration is infinite. This value can
 *  be overridden in the PathMatcher configuration of the UrlMap that references
 *  this backend service. This field is only allowed when the
 *  loadBalancingScheme of the backend service is INTERNAL_SELF_MANAGED.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Duration *maxStreamDuration;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The URL of the network to which this backend service belongs. This field can
 *  only be specified when the load balancing scheme is set to INTERNAL.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Settings controlling the eviction of unhealthy hosts from the load balancing
 *  pool for the backend service. If not set, this feature is considered
 *  disabled. This field is applicable to either: - A regional backend service
 *  with the service_protocol set to HTTP, HTTPS, HTTP2, or GRPC, and
 *  load_balancing_scheme set to INTERNAL_MANAGED. - A global backend service
 *  with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
 */
@property(nonatomic, strong, nullable) GTLRCompute_OutlierDetection *outlierDetection;

/**
 *  Deprecated in favor of portName. The TCP port to connect on the backend. The
 *  default value is 80. For Internal TCP/UDP Load Balancing and Network Load
 *  Balancing, omit port.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

/**
 *  A named port on a backend instance group representing the port for
 *  communication to the backend VMs in that group. The named port must be
 *  [defined on each backend instance
 *  group](https://cloud.google.com/load-balancing/docs/backend-service#named_ports).
 *  This parameter has no meaning if the backends are NEGs. For Internal TCP/UDP
 *  Load Balancing and Network Load Balancing, omit port_name.
 */
@property(nonatomic, copy, nullable) NSString *portName;

/**
 *  The protocol this BackendService uses to communicate with backends. Possible
 *  values are HTTP, HTTPS, HTTP2, TCP, SSL, UDP or GRPC. depending on the
 *  chosen load balancer or Traffic Director configuration. Refer to the
 *  documentation for the load balancers or for Traffic Director for more
 *  information. Must be set to GRPC when the backend service is referenced by a
 *  URL map that is bound to target gRPC proxy.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BackendService_Protocol_Grpc gRPC (available for
 *        Traffic Director). (Value: "GRPC")
 *    @arg @c kGTLRCompute_BackendService_Protocol_Http Value "HTTP"
 *    @arg @c kGTLRCompute_BackendService_Protocol_Http2 HTTP/2 with SSL.
 *        (Value: "HTTP2")
 *    @arg @c kGTLRCompute_BackendService_Protocol_Https Value "HTTPS"
 *    @arg @c kGTLRCompute_BackendService_Protocol_Ssl TCP proxying with SSL.
 *        (Value: "SSL")
 *    @arg @c kGTLRCompute_BackendService_Protocol_Tcp TCP proxying or TCP
 *        pass-through. (Value: "TCP")
 *    @arg @c kGTLRCompute_BackendService_Protocol_Udp UDP. (Value: "UDP")
 *    @arg @c kGTLRCompute_BackendService_Protocol_Unspecified If a Backend
 *        Service has UNSPECIFIED as its protocol, it can be used with any L3/L4
 *        Forwarding Rules. (Value: "UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *protocol;

/**
 *  [Output Only] URL of the region where the regional backend service resides.
 *  This field is not applicable to global backend services. You must specify
 *  this field as part of the HTTP request URL. It is not settable as a field in
 *  the request body.
 */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  [Output Only] The resource URL for the security policy associated with this
 *  backend service.
 */
@property(nonatomic, copy, nullable) NSString *securityPolicy;

/**
 *  This field specifies the security settings that apply to this backend
 *  service. This field is applicable to a global backend service with the
 *  load_balancing_scheme set to INTERNAL_SELF_MANAGED.
 */
@property(nonatomic, strong, nullable) GTLRCompute_SecuritySettings *securitySettings;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  URLs of networkservices.ServiceBinding resources. Can only be set if load
 *  balancing scheme is INTERNAL_SELF_MANAGED. If set, lists of backends and
 *  health checks must be both empty.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *serviceBindings;

/**
 *  Type of session affinity to use. The default is NONE. Only NONE and
 *  HEADER_FIELD are supported when the backend service is referenced by a URL
 *  map that is bound to target gRPC proxy that has validateForProxyless field
 *  set to true. For more details, see: [Session
 *  Affinity](https://cloud.google.com/load-balancing/docs/backend-service#session_affinity).
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BackendService_SessionAffinity_ClientIp 2-tuple hash
 *        on packet's source and destination IP addresses. Connections from the
 *        same source IP address to the same destination IP address will be
 *        served by the same backend VM while that VM remains healthy. (Value:
 *        "CLIENT_IP")
 *    @arg @c kGTLRCompute_BackendService_SessionAffinity_ClientIpNoDestination
 *        1-tuple hash only on packet's source IP address. Connections from the
 *        same source IP address will be served by the same backend VM while
 *        that VM remains healthy. This option can only be used for Internal
 *        TCP/UDP Load Balancing. (Value: "CLIENT_IP_NO_DESTINATION")
 *    @arg @c kGTLRCompute_BackendService_SessionAffinity_ClientIpPortProto
 *        5-tuple hash on packet's source and destination IP addresses, IP
 *        protocol, and source and destination ports. Connections for the same
 *        IP protocol from the same source IP address and port to the same
 *        destination IP address and port will be served by the same backend VM
 *        while that VM remains healthy. This option cannot be used for HTTP(S)
 *        load balancing. (Value: "CLIENT_IP_PORT_PROTO")
 *    @arg @c kGTLRCompute_BackendService_SessionAffinity_ClientIpProto 3-tuple
 *        hash on packet's source and destination IP addresses, and IP protocol.
 *        Connections for the same IP protocol from the same source IP address
 *        to the same destination IP address will be served by the same backend
 *        VM while that VM remains healthy. This option cannot be used for
 *        HTTP(S) load balancing. (Value: "CLIENT_IP_PROTO")
 *    @arg @c kGTLRCompute_BackendService_SessionAffinity_GeneratedCookie Hash
 *        based on a cookie generated by the L7 loadbalancer. Only valid for
 *        HTTP(S) load balancing. (Value: "GENERATED_COOKIE")
 *    @arg @c kGTLRCompute_BackendService_SessionAffinity_HeaderField The hash
 *        is based on a user specified header field. (Value: "HEADER_FIELD")
 *    @arg @c kGTLRCompute_BackendService_SessionAffinity_HttpCookie The hash is
 *        based on a user provided cookie. (Value: "HTTP_COOKIE")
 *    @arg @c kGTLRCompute_BackendService_SessionAffinity_None No session
 *        affinity. Connections from the same client IP may go to any instance
 *        in the pool. (Value: "NONE")
 */
@property(nonatomic, copy, nullable) NSString *sessionAffinity;

@property(nonatomic, strong, nullable) GTLRCompute_Subsetting *subsetting;

/**
 *  The backend service timeout has a different meaning depending on the type of
 *  load balancer. For more information see, Backend service settings. The
 *  default is 30 seconds. The full range of timeout values allowed goes from 1
 *  through 2,147,483,647 seconds. This value can be overridden in the
 *  PathMatcher configuration of the UrlMap that references this backend
 *  service. Not supported when the backend service is referenced by a URL map
 *  that is bound to target gRPC proxy that has validateForProxyless field set
 *  to true. Instead, use maxStreamDuration.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timeoutSec;

@end


/**
 *  Contains a list of BackendServicesScopedList.
 */
@interface GTLRCompute_BackendServiceAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of BackendServicesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_BackendServiceAggregatedList_Items *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_BackendServiceAggregatedList_Warning *warning;

@end


/**
 *  A list of BackendServicesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_BackendServicesScopedList. Use @c -additionalJSONKeys and
 *        @c -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_BackendServiceAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_BackendServiceAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_BackendServiceAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_BackendServiceAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_BackendServiceAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_BackendServiceAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Message containing Cloud CDN configuration for a backend service.
 */
@interface GTLRCompute_BackendServiceCdnPolicy : GTLRObject

/**
 *  Bypass the cache when the specified request headers are matched - e.g.
 *  Pragma or Authorization headers. Up to 5 headers can be specified. The cache
 *  is bypassed for all cdnPolicy.cacheMode settings.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_BackendServiceCdnPolicyBypassCacheOnRequestHeader *> *bypassCacheOnRequestHeaders;

/** The CacheKeyPolicy for this CdnPolicy. */
@property(nonatomic, strong, nullable) GTLRCompute_CacheKeyPolicy *cacheKeyPolicy;

/**
 *  Specifies the cache setting for all responses from this backend. The
 *  possible values are: USE_ORIGIN_HEADERS Requires the origin to set valid
 *  caching headers to cache content. Responses without these headers will not
 *  be cached at Google's edge, and will require a full trip to the origin on
 *  every request, potentially impacting performance and increasing load on the
 *  origin server. FORCE_CACHE_ALL Cache all content, ignoring any "private",
 *  "no-store" or "no-cache" directives in Cache-Control response headers.
 *  Warning: this may result in Cloud CDN caching private, per-user (user
 *  identifiable) content. CACHE_ALL_STATIC Automatically cache static content,
 *  including common image formats, media (video and audio), and web assets
 *  (JavaScript and CSS). Requests and responses that are marked as uncacheable,
 *  as well as dynamic content (including HTML), will not be cached.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BackendServiceCdnPolicy_CacheMode_CacheAllStatic
 *        Automatically cache static content, including common image formats,
 *        media (video and audio), and web assets (JavaScript and CSS). Requests
 *        and responses that are marked as uncacheable, as well as dynamic
 *        content (including HTML), will not be cached. (Value:
 *        "CACHE_ALL_STATIC")
 *    @arg @c kGTLRCompute_BackendServiceCdnPolicy_CacheMode_ForceCacheAll Cache
 *        all content, ignoring any "private", "no-store" or "no-cache"
 *        directives in Cache-Control response headers. Warning: this may result
 *        in Cloud CDN caching private, per-user (user identifiable) content.
 *        (Value: "FORCE_CACHE_ALL")
 *    @arg @c kGTLRCompute_BackendServiceCdnPolicy_CacheMode_InvalidCacheMode
 *        Value "INVALID_CACHE_MODE"
 *    @arg @c kGTLRCompute_BackendServiceCdnPolicy_CacheMode_UseOriginHeaders
 *        Requires the origin to set valid caching headers to cache content.
 *        Responses without these headers will not be cached at Google's edge,
 *        and will require a full trip to the origin on every request,
 *        potentially impacting performance and increasing load on the origin
 *        server. (Value: "USE_ORIGIN_HEADERS")
 */
@property(nonatomic, copy, nullable) NSString *cacheMode;

/**
 *  Specifies a separate client (e.g. browser client) maximum TTL. This is used
 *  to clamp the max-age (or Expires) value sent to the client. With
 *  FORCE_CACHE_ALL, the lesser of client_ttl and default_ttl is used for the
 *  response max-age directive, along with a "public" directive. For cacheable
 *  content in CACHE_ALL_STATIC mode, client_ttl clamps the max-age from the
 *  origin (if specified), or else sets the response max-age directive to the
 *  lesser of the client_ttl and default_ttl, and also ensures a "public"
 *  cache-control directive is present. If a client TTL is not specified, a
 *  default value (1 hour) will be used. The maximum allowed value is
 *  31,622,400s (1 year).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *clientTtl;

/**
 *  Specifies the default TTL for cached content served by this origin for
 *  responses that do not have an existing valid TTL (max-age or s-max-age).
 *  Setting a TTL of "0" means "always revalidate". The value of defaultTTL
 *  cannot be set to a value greater than that of maxTTL, but can be equal. When
 *  the cacheMode is set to FORCE_CACHE_ALL, the defaultTTL will overwrite the
 *  TTL set in all responses. The maximum allowed value is 31,622,400s (1 year),
 *  noting that infrequently accessed objects may be evicted from the cache
 *  before the defined TTL.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *defaultTtl;

/**
 *  Specifies the maximum allowed TTL for cached content served by this origin.
 *  Cache directives that attempt to set a max-age or s-maxage higher than this,
 *  or an Expires header more than maxTTL seconds in the future will be capped
 *  at the value of maxTTL, as if it were the value of an s-maxage Cache-Control
 *  directive. Headers sent to the client will not be modified. Setting a TTL of
 *  "0" means "always revalidate". The maximum allowed value is 31,622,400s (1
 *  year), noting that infrequently accessed objects may be evicted from the
 *  cache before the defined TTL.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxTtl;

/**
 *  Negative caching allows per-status code TTLs to be set, in order to apply
 *  fine-grained caching for common errors or redirects. This can reduce the
 *  load on your origin and improve end-user experience by reducing response
 *  latency. When the cache mode is set to CACHE_ALL_STATIC or
 *  USE_ORIGIN_HEADERS, negative caching applies to responses with the specified
 *  response code that lack any Cache-Control, Expires, or Pragma: no-cache
 *  directives. When the cache mode is set to FORCE_CACHE_ALL, negative caching
 *  applies to all responses with the specified response code, and override any
 *  caching headers. By default, Cloud CDN will apply the following default TTLs
 *  to these status codes: HTTP 300 (Multiple Choice), 301, 308 (Permanent
 *  Redirects): 10m HTTP 404 (Not Found), 410 (Gone), 451 (Unavailable For Legal
 *  Reasons): 120s HTTP 405 (Method Not Found), 421 (Misdirected Request), 501
 *  (Not Implemented): 60s. These defaults can be overridden in
 *  negative_caching_policy.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negativeCaching;

/**
 *  Sets a cache TTL for the specified HTTP status code. negative_caching must
 *  be enabled to configure negative_caching_policy. Omitting the policy and
 *  leaving negative_caching enabled will use Cloud CDN's default cache TTLs.
 *  Note that when specifying an explicit negative_caching_policy, you should
 *  take care to specify a cache TTL for all response codes that you wish to
 *  cache. Cloud CDN will not apply any default negative caching when a policy
 *  exists.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_BackendServiceCdnPolicyNegativeCachingPolicy *> *negativeCachingPolicy;

/**
 *  If true then Cloud CDN will combine multiple concurrent cache fill requests
 *  into a small number of requests to the origin.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestCoalescing;

/**
 *  Serve existing content from the cache (if available) when revalidating
 *  content with the origin, or when an error is encountered when refreshing the
 *  cache. This setting defines the default "max-stale" duration for any cached
 *  responses that do not specify a max-stale directive. Stale responses that
 *  exceed the TTL configured here will not be served. The default limit
 *  (max-stale) is 86400s (1 day), which will allow stale content to be served
 *  up to this limit beyond the max-age (or s-max-age) of a cached response. The
 *  maximum allowed value is 604800 (1 week). Set this to zero (0) to disable
 *  serve-while-stale.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *serveWhileStale;

/**
 *  Maximum number of seconds the response to a signed URL request will be
 *  considered fresh. After this time period, the response will be revalidated
 *  before being served. Defaults to 1hr (3600s). When serving responses to
 *  signed URL requests, Cloud CDN will internally behave as though all
 *  responses from this backend had a "Cache-Control: public, max-age=[TTL]"
 *  header, regardless of any existing Cache-Control header. The actual headers
 *  served in responses will not be altered.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *signedUrlCacheMaxAgeSec;

/** [Output Only] Names of the keys for signing request URLs. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *signedUrlKeyNames;

@end


/**
 *  Bypass the cache when the specified request headers are present, e.g. Pragma
 *  or Authorization headers. Values are case insensitive. The presence of such
 *  a header overrides the cache_mode setting.
 */
@interface GTLRCompute_BackendServiceCdnPolicyBypassCacheOnRequestHeader : GTLRObject

/**
 *  The header field name to match on when bypassing cache. Values are
 *  case-insensitive.
 */
@property(nonatomic, copy, nullable) NSString *headerName;

@end


/**
 *  Specify CDN TTLs for response error codes.
 */
@interface GTLRCompute_BackendServiceCdnPolicyNegativeCachingPolicy : GTLRObject

/**
 *  The HTTP status code to define a TTL against. Only HTTP status codes 300,
 *  301, 302, 307, 308, 404, 405, 410, 421, 451 and 501 are can be specified as
 *  values, and you cannot specify a status code more than once.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *code;

/**
 *  The TTL (in seconds) for which to cache responses with the corresponding
 *  status code. The maximum allowed value is 1800s (30 minutes), noting that
 *  infrequently accessed objects may be evicted from the cache before the
 *  defined TTL.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ttl;

@end


/**
 *  Connection Tracking configuration for this BackendService.
 */
@interface GTLRCompute_BackendServiceConnectionTrackingPolicy : GTLRObject

/**
 *  Specifies connection persistence when backends are unhealthy. The default
 *  value is DEFAULT_FOR_PROTOCOL. If set to DEFAULT_FOR_PROTOCOL, the existing
 *  connections persist on unhealthy backends only for connection-oriented
 *  protocols (TCP and SCTP) and only if the Tracking Mode is PER_CONNECTION
 *  (default tracking mode) or the Session Affinity is configured for 5-tuple.
 *  They do not persist for UDP. If set to NEVER_PERSIST, after a backend
 *  becomes unhealthy, the existing connections on the unhealthy backend are
 *  never persisted on the unhealthy backend. They are always diverted to newly
 *  selected healthy backends (unless all backends are unhealthy). If set to
 *  ALWAYS_PERSIST, existing connections always persist on unhealthy backends
 *  regardless of protocol and session affinity. It is generally not recommended
 *  to use this mode overriding the default. For more details, see [Connection
 *  Persistence for Network Load
 *  Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-backend-service#connection-persistence)
 *  and [Connection Persistence for Internal TCP/UDP Load
 *  Balancing](https://cloud.google.com/load-balancing/docs/internal#connection-persistence).
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BackendServiceConnectionTrackingPolicy_ConnectionPersistenceOnUnhealthyBackends_AlwaysPersist
 *        Value "ALWAYS_PERSIST"
 *    @arg @c kGTLRCompute_BackendServiceConnectionTrackingPolicy_ConnectionPersistenceOnUnhealthyBackends_DefaultForProtocol
 *        Value "DEFAULT_FOR_PROTOCOL"
 *    @arg @c kGTLRCompute_BackendServiceConnectionTrackingPolicy_ConnectionPersistenceOnUnhealthyBackends_NeverPersist
 *        Value "NEVER_PERSIST"
 */
@property(nonatomic, copy, nullable) NSString *connectionPersistenceOnUnhealthyBackends;

/**
 *  Enable Strong Session Affinity for Network Load Balancing. This option is
 *  not available publicly.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableStrongAffinity;

/**
 *  Specifies how long to keep a Connection Tracking entry while there is no
 *  matching traffic (in seconds). For Internal TCP/UDP Load Balancing: - The
 *  minimum (default) is 10 minutes and the maximum is 16 hours. - It can be set
 *  only if Connection Tracking is less than 5-tuple (i.e. Session Affinity is
 *  CLIENT_IP_NO_DESTINATION, CLIENT_IP or CLIENT_IP_PROTO, and Tracking Mode is
 *  PER_SESSION). For Network Load Balancer the default is 60 seconds. This
 *  option is not available publicly.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *idleTimeoutSec;

/**
 *  Specifies the key used for connection tracking. There are two options: -
 *  PER_CONNECTION: This is the default mode. The Connection Tracking is
 *  performed as per the Connection Key (default Hash Method) for the specific
 *  protocol. - PER_SESSION: The Connection Tracking is performed as per the
 *  configured Session Affinity. It matches the configured Session Affinity. For
 *  more details, see [Tracking Mode for Network Load
 *  Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-backend-service#tracking-mode)
 *  and [Tracking Mode for Internal TCP/UDP Load
 *  Balancing](https://cloud.google.com/load-balancing/docs/internal#tracking-mode).
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BackendServiceConnectionTrackingPolicy_TrackingMode_InvalidTrackingMode
 *        Value "INVALID_TRACKING_MODE"
 *    @arg @c kGTLRCompute_BackendServiceConnectionTrackingPolicy_TrackingMode_PerConnection
 *        Value "PER_CONNECTION"
 *    @arg @c kGTLRCompute_BackendServiceConnectionTrackingPolicy_TrackingMode_PerSession
 *        Value "PER_SESSION"
 */
@property(nonatomic, copy, nullable) NSString *trackingMode;

@end


/**
 *  For load balancers that have configurable failover: [Internal TCP/UDP Load
 *  Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview)
 *  and [external TCP/UDP Load
 *  Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-failover-overview).
 *  On failover or failback, this field indicates whether connection draining
 *  will be honored. Google Cloud has a fixed connection draining timeout of 10
 *  minutes. A setting of true terminates existing TCP connections to the active
 *  pool during failover and failback, immediately draining traffic. A setting
 *  of false allows existing TCP connections to persist, even on VMs no longer
 *  in the active pool, for up to the duration of the connection draining
 *  timeout (10 minutes).
 */
@interface GTLRCompute_BackendServiceFailoverPolicy : GTLRObject

/**
 *  This can be set to true only if the protocol is TCP. The default is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disableConnectionDrainOnFailover;

/**
 *  If set to true, connections to the load balancer are dropped when all
 *  primary and all backup backend VMs are unhealthy.If set to false,
 *  connections are distributed among all primary VMs when all primary and all
 *  backup backend VMs are unhealthy. For load balancers that have configurable
 *  failover: [Internal TCP/UDP Load
 *  Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview)
 *  and [external TCP/UDP Load
 *  Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-failover-overview).
 *  The default is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dropTrafficIfUnhealthy;

/**
 *  The value of the field must be in the range [0, 1]. If the value is 0, the
 *  load balancer performs a failover when the number of healthy primary VMs
 *  equals zero. For all other values, the load balancer performs a failover
 *  when the total number of healthy primary VMs is less than this ratio. For
 *  load balancers that have configurable failover: [Internal TCP/UDP Load
 *  Balancing](https://cloud.google.com/load-balancing/docs/internal/failover-overview)
 *  and [external TCP/UDP Load
 *  Balancing](https://cloud.google.com/load-balancing/docs/network/networklb-failover-overview).
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failoverRatio;

@end


/**
 *  GTLRCompute_BackendServiceGroupHealth
 */
@interface GTLRCompute_BackendServiceGroupHealth : GTLRObject

/** Metadata defined as annotations on the network endpoint group. */
@property(nonatomic, strong, nullable) GTLRCompute_BackendServiceGroupHealth_Annotations *annotations;

/**
 *  Health state of the backend instances or endpoints in requested instance or
 *  network endpoint group, determined based on configured health checks.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HealthStatus *> *healthStatus;

/**
 *  [Output Only] Type of resource. Always compute#backendServiceGroupHealth for
 *  the health of backend services.
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  Metadata defined as annotations on the network endpoint group.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_BackendServiceGroupHealth_Annotations : GTLRObject
@end


/**
 *  Identity-Aware Proxy
 */
@interface GTLRCompute_BackendServiceIAP : GTLRObject

/**
 *  Whether the serving infrastructure will authenticate and authorize all
 *  incoming requests. If true, the oauth2ClientId and oauth2ClientSecret fields
 *  must be non-empty.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enabled;

/** OAuth2 client ID to use for the authentication flow. */
@property(nonatomic, copy, nullable) NSString *oauth2ClientId;

/**
 *  OAuth2 client secret to use for the authentication flow. For security
 *  reasons, this value cannot be retrieved via the API. Instead, the SHA-256
 *  hash of the value is returned in the oauth2ClientSecretSha256 field.
 *  \@InputOnly
 */
@property(nonatomic, copy, nullable) NSString *oauth2ClientSecret;

/**
 *  [Output Only] SHA256 hash value for the field oauth2_client_secret above.
 */
@property(nonatomic, copy, nullable) NSString *oauth2ClientSecretSha256;

@end


/**
 *  Contains a list of BackendService resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_BackendServiceList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of BackendService resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_BackendService *> *items;

/**
 *  [Output Only] Type of resource. Always compute#backendServiceList for lists
 *  of backend services.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_BackendServiceList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_BackendServiceList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_BackendServiceList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_BackendServiceList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_BackendServiceList_Warning_Data_Item
 */
@interface GTLRCompute_BackendServiceList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Container for either a built-in LB policy supported by gRPC or Envoy or a
 *  custom one implemented by the end user.
 */
@interface GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfig : GTLRObject

@property(nonatomic, strong, nullable) GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigCustomPolicy *customPolicy;
@property(nonatomic, strong, nullable) GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy *policy;

@end


/**
 *  The configuration for a custom policy implemented by the user and deployed
 *  with the client.
 */
@interface GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigCustomPolicy : GTLRObject

/**
 *  An optional, arbitrary JSON object with configuration data, understood by a
 *  locally installed custom policy implementation.
 */
@property(nonatomic, copy, nullable) NSString *data;

/**
 *  Identifies the custom policy. The value should match the type the custom
 *  implementation is registered with on the gRPC clients. It should follow
 *  protocol buffer message naming conventions and include the full path (e.g.
 *  myorg.CustomLbPolicy). The maximum length is 256 characters. Note that
 *  specifying the same custom policy more than once for a backend is not a
 *  valid configuration and will be rejected.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  The configuration for a built-in load balancing policy.
 */
@interface GTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy : GTLRObject

/**
 *  The name of a locality load balancer policy to be used. The value should be
 *  one of the predefined ones as supported by localityLbPolicy, although at the
 *  moment only ROUND_ROBIN is supported. This field should only be populated
 *  when the customPolicy field is not used. Note that specifying the same
 *  policy more than once for a backend is not a valid configuration and will be
 *  rejected.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_InvalidLbPolicy
 *        Value "INVALID_LB_POLICY"
 *    @arg @c kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_LeastRequest
 *        An O(1) algorithm which selects two random healthy hosts and picks the
 *        host which has fewer active requests. (Value: "LEAST_REQUEST")
 *    @arg @c kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_Maglev
 *        This algorithm implements consistent hashing to backends. Maglev can
 *        be used as a drop in replacement for the ring hash load balancer.
 *        Maglev is not as stable as ring hash but has faster table lookup build
 *        times and host selection times. For more information about Maglev, see
 *        https://ai.google/research/pubs/pub44824 (Value: "MAGLEV")
 *    @arg @c kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_OriginalDestination
 *        Backend host is selected based on the client connection metadata,
 *        i.e., connections are opened to the same address as the destination
 *        address of the incoming connection before the connection was
 *        redirected to the load balancer. (Value: "ORIGINAL_DESTINATION")
 *    @arg @c kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_Random
 *        The load balancer selects a random healthy host. (Value: "RANDOM")
 *    @arg @c kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_RingHash
 *        The ring/modulo hash load balancer implements consistent hashing to
 *        backends. The algorithm has the property that the addition/removal of
 *        a host from a set of N hosts only affects 1/N of the requests. (Value:
 *        "RING_HASH")
 *    @arg @c kGTLRCompute_BackendServiceLocalityLoadBalancingPolicyConfigPolicy_Name_RoundRobin
 *        This is a simple policy in which each healthy backend is selected in
 *        round robin order. This is the default. (Value: "ROUND_ROBIN")
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  The available logging options for the load balancer traffic served by this
 *  backend service.
 */
@interface GTLRCompute_BackendServiceLogConfig : GTLRObject

/**
 *  Denotes whether to enable logging for the load balancer traffic served by
 *  this backend service. The default value is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enable;

/**
 *  This field can only be specified if logging is enabled for this backend
 *  service. The value of the field must be in [0, 1]. This configures the
 *  sampling rate of requests to the load balancer where 1.0 means all logged
 *  requests are reported and 0.0 means no logged requests are reported. The
 *  default value is 1.0.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sampleRate;

@end


/**
 *  GTLRCompute_BackendServiceReference
 */
@interface GTLRCompute_BackendServiceReference : GTLRObject

@property(nonatomic, copy, nullable) NSString *backendService;

@end


/**
 *  GTLRCompute_BackendServicesScopedList
 */
@interface GTLRCompute_BackendServicesScopedList : GTLRObject

/** A list of BackendServices contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_BackendService *> *backendServices;

/**
 *  Informational warning which replaces the list of backend services when the
 *  list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_BackendServicesScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of backend services when the
 *  list is empty.
 */
@interface GTLRCompute_BackendServicesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_BackendServicesScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_BackendServicesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_BackendServicesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_BackendServicesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_BfdPacket
 */
@interface GTLRCompute_BfdPacket : GTLRObject

/**
 *  The Authentication Present bit of the BFD packet. This is specified in
 *  section 4.1 of RFC5880
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *authenticationPresent;

/**
 *  The Control Plane Independent bit of the BFD packet. This is specified in
 *  section 4.1 of RFC5880
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *controlPlaneIndependent;

/**
 *  The demand bit of the BFD packet. This is specified in section 4.1 of
 *  RFC5880
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *demand;

/**
 *  The diagnostic code specifies the local system's reason for the last change
 *  in session state. This allows remote systems to determine the reason that
 *  the previous session failed, for example. These diagnostic codes are
 *  specified in section 4.1 of RFC5880
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BfdPacket_Diagnostic_AdministrativelyDown Value
 *        "ADMINISTRATIVELY_DOWN"
 *    @arg @c kGTLRCompute_BfdPacket_Diagnostic_ConcatenatedPathDown Value
 *        "CONCATENATED_PATH_DOWN"
 *    @arg @c kGTLRCompute_BfdPacket_Diagnostic_ControlDetectionTimeExpired
 *        Value "CONTROL_DETECTION_TIME_EXPIRED"
 *    @arg @c kGTLRCompute_BfdPacket_Diagnostic_DiagnosticUnspecified Value
 *        "DIAGNOSTIC_UNSPECIFIED"
 *    @arg @c kGTLRCompute_BfdPacket_Diagnostic_EchoFunctionFailed Value
 *        "ECHO_FUNCTION_FAILED"
 *    @arg @c kGTLRCompute_BfdPacket_Diagnostic_ForwardingPlaneReset Value
 *        "FORWARDING_PLANE_RESET"
 *    @arg @c kGTLRCompute_BfdPacket_Diagnostic_NeighborSignaledSessionDown
 *        Value "NEIGHBOR_SIGNALED_SESSION_DOWN"
 *    @arg @c kGTLRCompute_BfdPacket_Diagnostic_NoDiagnostic Value
 *        "NO_DIAGNOSTIC"
 *    @arg @c kGTLRCompute_BfdPacket_Diagnostic_PathDown Value "PATH_DOWN"
 *    @arg @c kGTLRCompute_BfdPacket_Diagnostic_ReverseConcatenatedPathDown
 *        Value "REVERSE_CONCATENATED_PATH_DOWN"
 */
@property(nonatomic, copy, nullable) NSString *diagnostic;

/**
 *  The Final bit of the BFD packet. This is specified in section 4.1 of RFC5880
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *final;

/**
 *  The length of the BFD Control packet in bytes. This is specified in section
 *  4.1 of RFC5880
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *length;

/**
 *  The Required Min Echo RX Interval value in the BFD packet. This is specified
 *  in section 4.1 of RFC5880
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minEchoRxIntervalMs;

/**
 *  The Required Min RX Interval value in the BFD packet. This is specified in
 *  section 4.1 of RFC5880
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minRxIntervalMs;

/**
 *  The Desired Min TX Interval value in the BFD packet. This is specified in
 *  section 4.1 of RFC5880
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minTxIntervalMs;

/**
 *  The detection time multiplier of the BFD packet. This is specified in
 *  section 4.1 of RFC5880
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *multiplier;

/**
 *  The multipoint bit of the BFD packet. This is specified in section 4.1 of
 *  RFC5880
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *multipoint;

/**
 *  The My Discriminator value in the BFD packet. This is specified in section
 *  4.1 of RFC5880
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *myDiscriminator;

/**
 *  The Poll bit of the BFD packet. This is specified in section 4.1 of RFC5880
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *poll;

/**
 *  The current BFD session state as seen by the transmitting system. These
 *  states are specified in section 4.1 of RFC5880
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BfdPacket_State_AdminDown Value "ADMIN_DOWN"
 *    @arg @c kGTLRCompute_BfdPacket_State_Down Value "DOWN"
 *    @arg @c kGTLRCompute_BfdPacket_State_Init Value "INIT"
 *    @arg @c kGTLRCompute_BfdPacket_State_StateUnspecified Value
 *        "STATE_UNSPECIFIED"
 *    @arg @c kGTLRCompute_BfdPacket_State_Up Value "UP"
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  The version number of the BFD protocol, as specified in section 4.1 of
 *  RFC5880.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

/**
 *  The Your Discriminator value in the BFD packet. This is specified in section
 *  4.1 of RFC5880
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *yourDiscriminator;

@end


/**
 *  Next free: 15
 */
@interface GTLRCompute_BfdStatus : GTLRObject

/**
 *  The BFD session initialization mode for this BGP peer. If set to ACTIVE, the
 *  Cloud Router will initiate the BFD session for this BGP peer. If set to
 *  PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD
 *  session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP
 *  peer.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BfdStatus_BfdSessionInitializationMode_Active Value
 *        "ACTIVE"
 *    @arg @c kGTLRCompute_BfdStatus_BfdSessionInitializationMode_Disabled Value
 *        "DISABLED"
 *    @arg @c kGTLRCompute_BfdStatus_BfdSessionInitializationMode_Passive Value
 *        "PASSIVE"
 */
@property(nonatomic, copy, nullable) NSString *bfdSessionInitializationMode;

/**
 *  Unix timestamp of the most recent config update.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *configUpdateTimestampMicros;

/** Control packet counts for the current BFD session. */
@property(nonatomic, strong, nullable) GTLRCompute_BfdStatusPacketCounts *controlPacketCounts;

/** Inter-packet time interval statistics for control packets. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PacketIntervals *> *controlPacketIntervals;

/**
 *  The diagnostic code specifies the local system's reason for the last change
 *  in session state. This allows remote systems to determine the reason that
 *  the previous session failed, for example. These diagnostic codes are
 *  specified in section 4.1 of RFC5880
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BfdStatus_LocalDiagnostic_AdministrativelyDown Value
 *        "ADMINISTRATIVELY_DOWN"
 *    @arg @c kGTLRCompute_BfdStatus_LocalDiagnostic_ConcatenatedPathDown Value
 *        "CONCATENATED_PATH_DOWN"
 *    @arg @c kGTLRCompute_BfdStatus_LocalDiagnostic_ControlDetectionTimeExpired
 *        Value "CONTROL_DETECTION_TIME_EXPIRED"
 *    @arg @c kGTLRCompute_BfdStatus_LocalDiagnostic_DiagnosticUnspecified Value
 *        "DIAGNOSTIC_UNSPECIFIED"
 *    @arg @c kGTLRCompute_BfdStatus_LocalDiagnostic_EchoFunctionFailed Value
 *        "ECHO_FUNCTION_FAILED"
 *    @arg @c kGTLRCompute_BfdStatus_LocalDiagnostic_ForwardingPlaneReset Value
 *        "FORWARDING_PLANE_RESET"
 *    @arg @c kGTLRCompute_BfdStatus_LocalDiagnostic_NeighborSignaledSessionDown
 *        Value "NEIGHBOR_SIGNALED_SESSION_DOWN"
 *    @arg @c kGTLRCompute_BfdStatus_LocalDiagnostic_NoDiagnostic Value
 *        "NO_DIAGNOSTIC"
 *    @arg @c kGTLRCompute_BfdStatus_LocalDiagnostic_PathDown Value "PATH_DOWN"
 *    @arg @c kGTLRCompute_BfdStatus_LocalDiagnostic_ReverseConcatenatedPathDown
 *        Value "REVERSE_CONCATENATED_PATH_DOWN"
 */
@property(nonatomic, copy, nullable) NSString *localDiagnostic;

/**
 *  The current BFD session state as seen by the transmitting system. These
 *  states are specified in section 4.1 of RFC5880
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_BfdStatus_LocalState_AdminDown Value "ADMIN_DOWN"
 *    @arg @c kGTLRCompute_BfdStatus_LocalState_Down Value "DOWN"
 *    @arg @c kGTLRCompute_BfdStatus_LocalState_Init Value "INIT"
 *    @arg @c kGTLRCompute_BfdStatus_LocalState_StateUnspecified Value
 *        "STATE_UNSPECIFIED"
 *    @arg @c kGTLRCompute_BfdStatus_LocalState_Up Value "UP"
 */
@property(nonatomic, copy, nullable) NSString *localState;

/**
 *  Negotiated transmit interval for control packets.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *negotiatedLocalControlTxIntervalMs;

/** The most recent Rx control packet for this BFD session. */
@property(nonatomic, strong, nullable) GTLRCompute_BfdPacket *rxPacket;

/** The most recent Tx control packet for this BFD session. */
@property(nonatomic, strong, nullable) GTLRCompute_BfdPacket *txPacket;

/**
 *  Session uptime in milliseconds. Value will be 0 if session is not up.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *uptimeMs;

@end


/**
 *  GTLRCompute_BfdStatusPacketCounts
 */
@interface GTLRCompute_BfdStatusPacketCounts : GTLRObject

/**
 *  Number of packets received since the beginning of the current BFD session.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numRx;

/**
 *  Number of packets received that were rejected because of errors since the
 *  beginning of the current BFD session.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numRxRejected;

/**
 *  Number of packets received that were successfully processed since the
 *  beginning of the current BFD session.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numRxSuccessful;

/**
 *  Number of packets transmitted since the beginning of the current BFD
 *  session.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numTx;

@end


/**
 *  Associates `members`, or principals, with a `role`.
 */
@interface GTLRCompute_Binding : GTLRObject

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, copy, nullable) NSString *bindingId;

/**
 *  The condition that is associated with this binding. If the condition
 *  evaluates to `true`, then this binding applies to the current request. If
 *  the condition evaluates to `false`, then this binding does not apply to the
 *  current request. However, a different role binding might grant the same role
 *  to one or more of the principals in this binding. To learn which resources
 *  support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 */
@property(nonatomic, strong, nullable) GTLRCompute_Expr *condition;

/**
 *  Specifies the principals requesting access for a Google Cloud resource.
 *  `members` can have the following values: * `allUsers`: A special identifier
 *  that represents anyone who is on the internet; with or without a Google
 *  account. * `allAuthenticatedUsers`: A special identifier that represents
 *  anyone who is authenticated with a Google account or a service account. Does
 *  not include identities that come from external identity providers (IdPs)
 *  through identity federation. * `user:{emailid}`: An email address that
 *  represents a specific Google account. For example, `alice\@example.com` . *
 *  `serviceAccount:{emailid}`: An email address that represents a Google
 *  service account. For example, `my-other-app\@appspot.gserviceaccount.com`. *
 *  `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An
 *  identifier for a [Kubernetes service
 *  account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts).
 *  For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. *
 *  `group:{emailid}`: An email address that represents a Google group. For
 *  example, `admins\@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`:
 *  An email address (plus unique identifier) representing a user that has been
 *  recently deleted. For example,
 *  `alice\@example.com?uid=123456789012345678901`. If the user is recovered,
 *  this value reverts to `user:{emailid}` and the recovered user retains the
 *  role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An
 *  email address (plus unique identifier) representing a service account that
 *  has been recently deleted. For example,
 *  `my-other-app\@appspot.gserviceaccount.com?uid=123456789012345678901`. If
 *  the service account is undeleted, this value reverts to
 *  `serviceAccount:{emailid}` and the undeleted service account retains the
 *  role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email
 *  address (plus unique identifier) representing a Google group that has been
 *  recently deleted. For example,
 *  `admins\@example.com?uid=123456789012345678901`. If the group is recovered,
 *  this value reverts to `group:{emailid}` and the recovered group retains the
 *  role in the binding. * `domain:{domain}`: The G Suite domain (primary) that
 *  represents all the users of that domain. For example, `google.com` or
 *  `example.com`.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *members;

/**
 *  Role that is assigned to the list of `members`, or principals. For example,
 *  `roles/viewer`, `roles/editor`, or `roles/owner`.
 */
@property(nonatomic, copy, nullable) NSString *role;

@end


/**
 *  A transient resource used in compute.instances.bulkInsert and
 *  compute.regionInstances.bulkInsert . This resource is not persisted
 *  anywhere, it is used only for processing the requests.
 */
@interface GTLRCompute_BulkInsertInstanceResource : GTLRObject

/**
 *  The maximum number of instances to create.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/**
 *  The instance properties defining the VM instances to be created. Required if
 *  sourceInstanceTemplate is not provided.
 */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceProperties *instanceProperties;

/**
 *  Policy for chosing target zone. For more information, see Create VMs in bulk
 *  .
 */
@property(nonatomic, strong, nullable) GTLRCompute_LocationPolicy *locationPolicy;

/**
 *  The minimum number of instances to create. If no min_count is specified then
 *  count is used as the default value. If min_count instances cannot be
 *  created, then no instances will be created and instances already created
 *  will be deleted.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minCount;

/**
 *  The string pattern used for the names of the VMs. Either name_pattern or
 *  per_instance_properties must be set. The pattern must contain one continuous
 *  sequence of placeholder hash characters (#) with each character
 *  corresponding to one digit of the generated instance name. Example: a
 *  name_pattern of inst-#### generates instance names such as inst-0001 and
 *  inst-0002. If existing instances in the same project and zone have names
 *  that match the name pattern then the generated instance numbers start after
 *  the biggest existing number. For example, if there exists an instance with
 *  name inst-0050, then instance names generated using the pattern inst-####
 *  begin with inst-0051. The name pattern placeholder #...# can contain up to
 *  18 characters.
 */
@property(nonatomic, copy, nullable) NSString *namePattern;

/**
 *  Per-instance properties to be set on individual instances. Keys of this map
 *  specify requested instance names. Can be empty if name_pattern is used.
 */
@property(nonatomic, strong, nullable) GTLRCompute_BulkInsertInstanceResource_PerInstanceProperties *perInstanceProperties;

/**
 *  Specifies the instance template from which to create instances. You may
 *  combine sourceInstanceTemplate with instanceProperties to override specific
 *  values from an existing instance template. Bulk API follows the semantics of
 *  JSON Merge Patch described by RFC 7396. It can be a full or partial URL. For
 *  example, the following are all valid URLs to an instance template: -
 *  https://www.googleapis.com/compute/v1/projects/project
 *  /global/instanceTemplates/instanceTemplate -
 *  projects/project/global/instanceTemplates/instanceTemplate -
 *  global/instanceTemplates/instanceTemplate This field is optional.
 */
@property(nonatomic, copy, nullable) NSString *sourceInstanceTemplate;

@end


/**
 *  Per-instance properties to be set on individual instances. Keys of this map
 *  specify requested instance names. Can be empty if name_pattern is used.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_BulkInsertInstanceResourcePerInstanceProperties. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_BulkInsertInstanceResource_PerInstanceProperties : GTLRObject
@end


/**
 *  Per-instance properties to be set on individual instances. To be extended in
 *  the future.
 */
@interface GTLRCompute_BulkInsertInstanceResourcePerInstanceProperties : GTLRObject

/** This field is only temporary. It will be removed. Do not use it. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  GTLRCompute_CacheInvalidationRule
 */
@interface GTLRCompute_CacheInvalidationRule : GTLRObject

/**
 *  If set, this invalidation rule will only apply to requests with a Host
 *  header matching host.
 */
@property(nonatomic, copy, nullable) NSString *host;

@property(nonatomic, copy, nullable) NSString *path;

@end


/**
 *  Message containing what to include in the cache key for a request for Cloud
 *  CDN.
 */
@interface GTLRCompute_CacheKeyPolicy : GTLRObject

/**
 *  If true, requests to different hosts will be cached separately.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeHost;

/** Allows HTTP request headers (by name) to be used in the cache key. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includeHttpHeaders;

/**
 *  Allows HTTP cookies (by name) to be used in the cache key. The name=value
 *  pair will be used in the cache key Cloud CDN generates.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *includeNamedCookies;

/**
 *  If true, http and https requests will be cached separately.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeProtocol;

/**
 *  If true, include query string parameters in the cache key according to
 *  query_string_whitelist and query_string_blacklist. If neither is set, the
 *  entire query string will be included. If false, the query string will be
 *  excluded from the cache key entirely.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *includeQueryString;

/**
 *  Names of query string parameters to exclude in cache keys. All other
 *  parameters will be included. Either specify query_string_whitelist or
 *  query_string_blacklist, not both. '&' and '=' will be percent encoded and
 *  not treated as delimiters.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *queryStringBlacklist;

/**
 *  Names of query string parameters to include in cache keys. All other
 *  parameters will be excluded. Either specify query_string_whitelist or
 *  query_string_blacklist, not both. '&' and '=' will be percent encoded and
 *  not treated as delimiters.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *queryStringWhitelist;

@end


/**
 *  Settings controlling the volume of requests, connections and retries to this
 *  backend service.
 */
@interface GTLRCompute_CircuitBreakers : GTLRObject

/**
 *  The maximum number of connections to the backend service. If not specified,
 *  there is no limit. Not supported when the backend service is referenced by a
 *  URL map that is bound to target gRPC proxy that has validateForProxyless
 *  field set to true.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxConnections;

/**
 *  The maximum number of pending requests allowed to the backend service. If
 *  not specified, there is no limit. Not supported when the backend service is
 *  referenced by a URL map that is bound to target gRPC proxy that has
 *  validateForProxyless field set to true.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxPendingRequests;

/**
 *  The maximum number of parallel requests that allowed to the backend service.
 *  If not specified, there is no limit.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxRequests;

/**
 *  Maximum requests for a single connection to the backend service. This
 *  parameter is respected by both the HTTP/1.1 and HTTP/2 implementations. If
 *  not specified, there is no limit. Setting this parameter to 1 will
 *  effectively disable keep alive. Not supported when the backend service is
 *  referenced by a URL map that is bound to target gRPC proxy that has
 *  validateForProxyless field set to true.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxRequestsPerConnection;

/**
 *  The maximum number of parallel retries allowed to the backend cluster. If
 *  not specified, the default is 1. Not supported when the backend service is
 *  referenced by a URL map that is bound to target gRPC proxy that has
 *  validateForProxyless field set to true.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxRetries;

@end


/**
 *  Represents a regional Commitment resource. Creating a commitment resource
 *  means that you are purchasing a committed use contract with an explicit
 *  start and end time. You can create commitments based on vCPUs and memory
 *  usage and receive discounted rates. For full details, read Signing Up for
 *  Committed Use Discounts.
 */
@interface GTLRCompute_Commitment : GTLRObject

/**
 *  Specifies whether to enable automatic renewal for the commitment. The
 *  default value is false if not specified. The field can be updated until the
 *  day of the commitment expiration at 12:00am PST. If the field is set to
 *  true, the commitment will be automatically renewed for either one or three
 *  years according to the terms of the existing commitment.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *autoRenew;

/**
 *  The category of the commitment. Category MACHINE specifies commitments
 *  composed of machine resources such as VCPU or MEMORY, listed in resources.
 *  Category LICENSE specifies commitments composed of software licenses, listed
 *  in licenseResources. Note that only MACHINE commitments should have a Type
 *  specified.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Commitment_Category_CategoryUnspecified Value
 *        "CATEGORY_UNSPECIFIED"
 *    @arg @c kGTLRCompute_Commitment_Category_License Value "LICENSE"
 *    @arg @c kGTLRCompute_Commitment_Category_Machine Value "MACHINE"
 */
@property(nonatomic, copy, nullable) NSString *category;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** [Output Only] Commitment end time in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *endTimestamp;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#commitment for
 *  commitments.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** The license specification required as part of a license commitment. */
@property(nonatomic, strong, nullable) GTLRCompute_LicenseResourceCommitment *licenseResource;

/** List of source commitments to be merged into a new commitment. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *mergeSourceCommitments;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The plan for this commitment, which determines duration and discount rate.
 *  The currently supported plans are TWELVE_MONTH (1 year), and
 *  THIRTY_SIX_MONTH (3 years).
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Commitment_Plan_Invalid Value "INVALID"
 *    @arg @c kGTLRCompute_Commitment_Plan_ThirtySixMonth Value
 *        "THIRTY_SIX_MONTH"
 *    @arg @c kGTLRCompute_Commitment_Plan_TwelveMonth Value "TWELVE_MONTH"
 */
@property(nonatomic, copy, nullable) NSString *plan;

/** [Output Only] URL of the region where this commitment may be used. */
@property(nonatomic, copy, nullable) NSString *region;

/** List of reservations in this commitment. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Reservation *> *reservations;

/**
 *  A list of commitment amounts for particular resources. Note that VCPU and
 *  MEMORY resource commitments must occur together.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ResourceCommitment *> *resources;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** Source commitment to be splitted into a new commitment. */
@property(nonatomic, copy, nullable) NSString *splitSourceCommitment;

/** [Output Only] Commitment start time in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *startTimestamp;

/**
 *  [Output Only] Status of the commitment with regards to eventual expiration
 *  (each commitment has an end date defined). One of the following values:
 *  NOT_YET_ACTIVE, ACTIVE, EXPIRED.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Commitment_Status_Active Value "ACTIVE"
 *    @arg @c kGTLRCompute_Commitment_Status_Cancelled Value "CANCELLED"
 *    @arg @c kGTLRCompute_Commitment_Status_Creating Value "CREATING"
 *    @arg @c kGTLRCompute_Commitment_Status_Expired Value "EXPIRED"
 *    @arg @c kGTLRCompute_Commitment_Status_NotYetActive Value "NOT_YET_ACTIVE"
 */
@property(nonatomic, copy, nullable) NSString *status;

/** [Output Only] An optional, human-readable explanation of the status. */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  The type of commitment, which affects the discount rate and the eligible
 *  resources. Type MEMORY_OPTIMIZED specifies a commitment that will only apply
 *  to memory optimized machines. Type ACCELERATOR_OPTIMIZED specifies a
 *  commitment that will only apply to accelerator optimized machines.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Commitment_Type_AcceleratorOptimized Value
 *        "ACCELERATOR_OPTIMIZED"
 *    @arg @c kGTLRCompute_Commitment_Type_ComputeOptimized Value
 *        "COMPUTE_OPTIMIZED"
 *    @arg @c kGTLRCompute_Commitment_Type_ComputeOptimizedC2d Value
 *        "COMPUTE_OPTIMIZED_C2D"
 *    @arg @c kGTLRCompute_Commitment_Type_GeneralPurpose Value
 *        "GENERAL_PURPOSE"
 *    @arg @c kGTLRCompute_Commitment_Type_GeneralPurposeE2 Value
 *        "GENERAL_PURPOSE_E2"
 *    @arg @c kGTLRCompute_Commitment_Type_GeneralPurposeN2 Value
 *        "GENERAL_PURPOSE_N2"
 *    @arg @c kGTLRCompute_Commitment_Type_GeneralPurposeN2d Value
 *        "GENERAL_PURPOSE_N2D"
 *    @arg @c kGTLRCompute_Commitment_Type_GeneralPurposeT2d Value
 *        "GENERAL_PURPOSE_T2D"
 *    @arg @c kGTLRCompute_Commitment_Type_MemoryOptimized Value
 *        "MEMORY_OPTIMIZED"
 *    @arg @c kGTLRCompute_Commitment_Type_MemoryOptimizedM3 Value
 *        "MEMORY_OPTIMIZED_M3"
 *    @arg @c kGTLRCompute_Commitment_Type_TypeUnspecified Value
 *        "TYPE_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRCompute_CommitmentAggregatedList
 */
@interface GTLRCompute_CommitmentAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of CommitmentsScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_CommitmentAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#commitmentAggregatedList for
 *  aggregated lists of commitments.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_CommitmentAggregatedList_Warning *warning;

@end


/**
 *  A list of CommitmentsScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_CommitmentsScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_CommitmentAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_CommitmentAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_CommitmentAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_CommitmentAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_CommitmentAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_CommitmentAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of Commitment resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_CommitmentList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Commitment resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Commitment *> *items;

/**
 *  [Output Only] Type of resource. Always compute#commitmentList for lists of
 *  commitments.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_CommitmentList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_CommitmentList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_CommitmentList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_CommitmentList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_CommitmentList_Warning_Data_Item
 */
@interface GTLRCompute_CommitmentList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_CommitmentsScopedList
 */
@interface GTLRCompute_CommitmentsScopedList : GTLRObject

/** [Output Only] A list of commitments contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Commitment *> *commitments;

/**
 *  [Output Only] Informational warning which replaces the list of commitments
 *  when the list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CommitmentsScopedList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning which replaces the list of commitments
 *  when the list is empty.
 */
@interface GTLRCompute_CommitmentsScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_CommitmentsScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_CommitmentsScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_CommitmentsScopedList_Warning_Data_Item
 */
@interface GTLRCompute_CommitmentsScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  This is deprecated and has no effect. Do not use.
 */
@interface GTLRCompute_Condition : GTLRObject

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Condition_Iam_Approver This is deprecated and has no
 *        effect. Do not use. (Value: "APPROVER")
 *    @arg @c kGTLRCompute_Condition_Iam_Attribution This is deprecated and has
 *        no effect. Do not use. (Value: "ATTRIBUTION")
 *    @arg @c kGTLRCompute_Condition_Iam_Authority This is deprecated and has no
 *        effect. Do not use. (Value: "AUTHORITY")
 *    @arg @c kGTLRCompute_Condition_Iam_CredentialsType This is deprecated and
 *        has no effect. Do not use. (Value: "CREDENTIALS_TYPE")
 *    @arg @c kGTLRCompute_Condition_Iam_CredsAssertion This is deprecated and
 *        has no effect. Do not use. (Value: "CREDS_ASSERTION")
 *    @arg @c kGTLRCompute_Condition_Iam_JustificationType This is deprecated
 *        and has no effect. Do not use. (Value: "JUSTIFICATION_TYPE")
 *    @arg @c kGTLRCompute_Condition_Iam_NoAttr This is deprecated and has no
 *        effect. Do not use. (Value: "NO_ATTR")
 *    @arg @c kGTLRCompute_Condition_Iam_SecurityRealm This is deprecated and
 *        has no effect. Do not use. (Value: "SECURITY_REALM")
 */
@property(nonatomic, copy, nullable) NSString *iam;

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Condition_Op_Discharged This is deprecated and has no
 *        effect. Do not use. (Value: "DISCHARGED")
 *    @arg @c kGTLRCompute_Condition_Op_Equals This is deprecated and has no
 *        effect. Do not use. (Value: "EQUALS")
 *    @arg @c kGTLRCompute_Condition_Op_In This is deprecated and has no effect.
 *        Do not use. (Value: "IN")
 *    @arg @c kGTLRCompute_Condition_Op_NoOp This is deprecated and has no
 *        effect. Do not use. (Value: "NO_OP")
 *    @arg @c kGTLRCompute_Condition_Op_NotEquals This is deprecated and has no
 *        effect. Do not use. (Value: "NOT_EQUALS")
 *    @arg @c kGTLRCompute_Condition_Op_NotIn This is deprecated and has no
 *        effect. Do not use. (Value: "NOT_IN")
 */
@property(nonatomic, copy, nullable) NSString *op;

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, copy, nullable) NSString *svc;

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Condition_Sys_Ip This is deprecated and has no
 *        effect. Do not use. (Value: "IP")
 *    @arg @c kGTLRCompute_Condition_Sys_Name This is deprecated and has no
 *        effect. Do not use. (Value: "NAME")
 *    @arg @c kGTLRCompute_Condition_Sys_NoAttr This is deprecated and has no
 *        effect. Do not use. (Value: "NO_ATTR")
 *    @arg @c kGTLRCompute_Condition_Sys_Region This is deprecated and has no
 *        effect. Do not use. (Value: "REGION")
 *    @arg @c kGTLRCompute_Condition_Sys_Service This is deprecated and has no
 *        effect. Do not use. (Value: "SERVICE")
 */
@property(nonatomic, copy, nullable) NSString *sys;

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end


/**
 *  A set of Confidential Instance options.
 */
@interface GTLRCompute_ConfidentialInstanceConfig : GTLRObject

/**
 *  Defines whether the instance should have confidential compute enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableConfidentialCompute;

@end


/**
 *  Message containing connection draining configuration.
 */
@interface GTLRCompute_ConnectionDraining : GTLRObject

/**
 *  Configures a duration timeout for existing requests on a removed backend
 *  instance. For supported load balancers and protocols, as described in
 *  Enabling connection draining.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *drainingTimeoutSec;

@end


/**
 *  This message defines settings for a consistent hash style load balancer.
 */
@interface GTLRCompute_ConsistentHashLoadBalancerSettings : GTLRObject

/**
 *  Hash is based on HTTP Cookie. This field describes a HTTP cookie that will
 *  be used as the hash key for the consistent hash load balancer. If the cookie
 *  is not present, it will be generated. This field is applicable if the
 *  sessionAffinity is set to HTTP_COOKIE. Not supported when the backend
 *  service is referenced by a URL map that is bound to target gRPC proxy that
 *  has validateForProxyless field set to true.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ConsistentHashLoadBalancerSettingsHttpCookie *httpCookie;

/**
 *  The hash based on the value of the specified header field. This field is
 *  applicable if the sessionAffinity is set to HEADER_FIELD.
 */
@property(nonatomic, copy, nullable) NSString *httpHeaderName;

/**
 *  The minimum number of virtual nodes to use for the hash ring. Defaults to
 *  1024. Larger ring sizes result in more granular load distributions. If the
 *  number of hosts in the load balancing pool is larger than the ring size,
 *  each host will be assigned a single virtual node.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minimumRingSize;

@end


/**
 *  The information about the HTTP Cookie on which the hash function is based
 *  for load balancing policies that use a consistent hash.
 */
@interface GTLRCompute_ConsistentHashLoadBalancerSettingsHttpCookie : GTLRObject

/** Name of the cookie. */
@property(nonatomic, copy, nullable) NSString *name;

/** Path to set for the cookie. */
@property(nonatomic, copy, nullable) NSString *path;

/** Lifetime of the cookie. */
@property(nonatomic, strong, nullable) GTLRCompute_Duration *ttl;

@end


/**
 *  The specification for allowing client-side cross-origin requests. For more
 *  information about the W3C recommendation for cross-origin resource sharing
 *  (CORS), see Fetch API Living Standard.
 */
@interface GTLRCompute_CorsPolicy : GTLRObject

/**
 *  In response to a preflight request, setting this to true indicates that the
 *  actual request can include user credentials. This field translates to the
 *  Access-Control-Allow-Credentials header. Default is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowCredentials;

/** Specifies the content for the Access-Control-Allow-Headers header. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowHeaders;

/** Specifies the content for the Access-Control-Allow-Methods header. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowMethods;

/**
 *  Specifies a regular expression that matches allowed origins. For more
 *  information about the regular expression syntax, see Syntax. An origin is
 *  allowed if it matches either an item in allowOrigins or an item in
 *  allowOriginRegexes. Regular expressions can only be used when the
 *  loadBalancingScheme is set to INTERNAL_SELF_MANAGED.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowOriginRegexes;

/**
 *  Specifies the list of origins that is allowed to do CORS requests. An origin
 *  is allowed if it matches either an item in allowOrigins or an item in
 *  allowOriginRegexes.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *allowOrigins;

/**
 *  If true, the setting specifies the CORS policy is disabled. The default
 *  value of false, which indicates that the CORS policy is in effect.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/** Specifies the content for the Access-Control-Expose-Headers header. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *exposeHeaders;

/**
 *  Specifies how long results of a preflight request can be cached in seconds.
 *  This field translates to the Access-Control-Max-Age header.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxAge;

@end


/**
 *  GTLRCompute_CustomerEncryptionKey
 */
@interface GTLRCompute_CustomerEncryptionKey : GTLRObject

/**
 *  The name of the encryption key that is stored in Google Cloud KMS. For
 *  example: "kmsKeyName": "projects/kms_project_id/locations/region/keyRings/
 *  key_region/cryptoKeys/key
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyName;

/**
 *  The service account being used for the encryption request for the given KMS
 *  key. If absent, the Compute Engine default service account is used. For
 *  example: "kmsKeyServiceAccount": "name\@project_id.iam.gserviceaccount.com/
 */
@property(nonatomic, copy, nullable) NSString *kmsKeyServiceAccount;

/**
 *  Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648
 *  base64 to either encrypt or decrypt this resource. You can provide either
 *  the rawKey or the rsaEncryptedKey. For example: "rawKey":
 *  "SGVsbG8gZnJvbSBHb29nbGUgQ2xvdWQgUGxhdGZvcm0="
 */
@property(nonatomic, copy, nullable) NSString *rawKey;

/**
 *  Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied
 *  encryption key to either encrypt or decrypt this resource. You can provide
 *  either the rawKey or the rsaEncryptedKey. For example: "rsaEncryptedKey":
 *  "ieCx/NcW06PcT7Ep1X6LUTc/hLvUDYyzSZPPVCVPTVEohpeHASqC8uw5TzyO9U+Fka9JFH
 *  z0mBibXUInrC/jEk014kCK/NPjYgEMOyssZ4ZINPKxlUh2zn1bV+MCaTICrdmuSBTWlUUiFoD
 *  D6PYznLwh8ZNdaheCeZ8ewEXgFQ8V+sDroLaN3Xs3MDTXQEMMoNUXMCZEIpg9Vtp9x2oe==" The
 *  key must meet the following requirements before you can provide it to
 *  Compute Engine: 1. The key is wrapped using a RSA public key certificate
 *  provided by Google. 2. After being wrapped, the key must be encoded in RFC
 *  4648 base64 encoding. Gets the RSA public key certificate provided by Google
 *  at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
 */
@property(nonatomic, copy, nullable) NSString *rsaEncryptedKey;

/**
 *  [Output only] The RFC 4648 base64 encoded SHA-256 hash of the
 *  customer-supplied encryption key that protects this resource.
 */
@property(nonatomic, copy, nullable) NSString *sha256;

@end


/**
 *  GTLRCompute_CustomerEncryptionKeyProtectedDisk
 */
@interface GTLRCompute_CustomerEncryptionKeyProtectedDisk : GTLRObject

/**
 *  Decrypts data associated with the disk with a customer-supplied encryption
 *  key.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *diskEncryptionKey;

/**
 *  Specifies a valid partial or full URL to an existing Persistent Disk
 *  resource. This field is only applicable for persistent disks. For example:
 *  "source": "/compute/v1/projects/project_id/zones/zone/disks/ disk_name
 */
@property(nonatomic, copy, nullable) NSString *source;

@end


/**
 *  Deprecation status for a public resource.
 */
@interface GTLRCompute_DeprecationStatus : GTLRObject

/**
 *  An optional RFC3339 timestamp on or after which the state of this resource
 *  is intended to change to DELETED. This is only informational and the status
 *  will not change unless the client explicitly changes it.
 */
@property(nonatomic, copy, nullable) NSString *deleted;

/**
 *  An optional RFC3339 timestamp on or after which the state of this resource
 *  is intended to change to DEPRECATED. This is only informational and the
 *  status will not change unless the client explicitly changes it.
 */
@property(nonatomic, copy, nullable) NSString *deprecated;

/**
 *  An optional RFC3339 timestamp on or after which the state of this resource
 *  is intended to change to OBSOLETE. This is only informational and the status
 *  will not change unless the client explicitly changes it.
 */
@property(nonatomic, copy, nullable) NSString *obsolete;

/**
 *  The URL of the suggested replacement for a deprecated resource. The
 *  suggested replacement resource must be the same kind of resource as the
 *  deprecated resource.
 */
@property(nonatomic, copy, nullable) NSString *replacement;

/**
 *  The deprecation state of this resource. This can be ACTIVE, DEPRECATED,
 *  OBSOLETE, or DELETED. Operations which communicate the end of life date for
 *  an image, can use ACTIVE. Operations which create a new resource using a
 *  DEPRECATED resource will return successfully, but with a warning indicating
 *  the deprecated resource and recommending its replacement. Operations which
 *  use OBSOLETE or DELETED resources will be rejected and result in an error.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_DeprecationStatus_State_Active Value "ACTIVE"
 *    @arg @c kGTLRCompute_DeprecationStatus_State_Deleted Value "DELETED"
 *    @arg @c kGTLRCompute_DeprecationStatus_State_Deprecated Value "DEPRECATED"
 *    @arg @c kGTLRCompute_DeprecationStatus_State_Obsolete Value "OBSOLETE"
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Represents a Persistent Disk resource. Google Compute Engine has two Disk
 *  resources: * [Zonal](/compute/docs/reference/rest/v1/disks) *
 *  [Regional](/compute/docs/reference/rest/v1/regionDisks) Persistent disks are
 *  required for running your VM instances. Create both boot and non-boot (data)
 *  persistent disks. For more information, read Persistent Disks. For more
 *  storage options, read Storage options. The disks resource represents a zonal
 *  persistent disk. For more information, read Zonal persistent disks. The
 *  regionDisks resource represents a regional persistent disk. For more
 *  information, read Regional resources.
 */
@interface GTLRCompute_Disk : GTLRObject

/**
 *  The architecture of the disk. Valid values are ARM64 or X86_64.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Disk_Architecture_ArchitectureUnspecified Default
 *        value indicating Architecture is not set. (Value:
 *        "ARCHITECTURE_UNSPECIFIED")
 *    @arg @c kGTLRCompute_Disk_Architecture_Arm64 Machines with architecture
 *        ARM64 (Value: "ARM64")
 *    @arg @c kGTLRCompute_Disk_Architecture_X8664 Machines with architecture
 *        X86_64 (Value: "X86_64")
 */
@property(nonatomic, copy, nullable) NSString *architecture;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Encrypts the disk using a customer-supplied encryption key or a
 *  customer-managed encryption key. Encryption keys do not protect access to
 *  metadata of the disk. After you encrypt a disk with a customer-supplied key,
 *  you must provide the same key if you use the disk later. For example, to
 *  create a disk snapshot, to create a disk image, to create a machine image,
 *  or to attach the disk to a virtual machine. After you encrypt a disk with a
 *  customer-managed key, the diskEncryptionKey.kmsKeyName is set to a key
 *  *version* name once the disk is created. The disk is encrypted with this
 *  version of the key. In the response, diskEncryptionKey.kmsKeyName appears in
 *  the following format: "diskEncryptionKey.kmsKeyName":
 *  "projects/kms_project_id/locations/region/keyRings/
 *  key_region/cryptoKeys/key /cryptoKeysVersions/version If you do not provide
 *  an encryption key when creating the disk, then the disk is encrypted using
 *  an automatically generated key and you don't need to provide a key to use
 *  the disk later.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *diskEncryptionKey;

/**
 *  A list of features to enable on the guest operating system. Applicable only
 *  for bootable images. Read Enabling guest operating system features to see a
 *  list of available options.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_GuestOsFeature *> *guestOsFeatures;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** [Output Only] Type of the resource. Always compute#disk for disks. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  A fingerprint for the labels being applied to this disk, which is
 *  essentially a hash of the labels set used for optimistic locking. The
 *  fingerprint is initially generated by Compute Engine and changes after every
 *  request to modify or update labels. You must always provide an up-to-date
 *  fingerprint hash in order to update or change labels, otherwise the request
 *  will fail with error 412 conditionNotMet. To see the latest fingerprint,
 *  make a get() request to retrieve a disk.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *labelFingerprint;

/**
 *  Labels to apply to this disk. These can be later modified by the setLabels
 *  method.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Disk_Labels *labels;

/** [Output Only] Last attach timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *lastAttachTimestamp;

/** [Output Only] Last detach timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *lastDetachTimestamp;

/**
 *  Integer license codes indicating which licenses are attached to this disk.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *licenseCodes;

/** A list of publicly visible licenses. Reserved for Google's use. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *licenses;

/**
 *  An opaque location hint used to place the disk close to other resources.
 *  This field is for use by internal tools that use the public API.
 */
@property(nonatomic, copy, nullable) NSString *locationHint;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Internal use only. */
@property(nonatomic, copy, nullable) NSString *options;

/**
 *  Input only. [Input Only] Additional params passed with the request, but not
 *  persisted as part of resource payload.
 */
@property(nonatomic, strong, nullable) GTLRCompute_DiskParams *params;

/**
 *  Physical block size of the persistent disk, in bytes. If not present in a
 *  request, a default value is used. The currently supported size is 4096,
 *  other sizes may be added in the future. If an unsupported value is
 *  requested, the error message will list the supported values for the caller's
 *  project.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *physicalBlockSizeBytes;

/**
 *  Indicates how many IOPS to provision for the disk. This sets the number of
 *  I/O operations per second that the disk can handle. Values must be between
 *  10,000 and 120,000. For more details, see the Extreme persistent disk
 *  documentation.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *provisionedIops;

/**
 *  [Output Only] URL of the region where the disk resides. Only applicable for
 *  regional resources. You must specify this field as part of the HTTP request
 *  URL. It is not settable as a field in the request body.
 */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  URLs of the zones where the disk should be replicated to. Only applicable
 *  for regional resources.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *replicaZones;

/**
 *  Resource policies applied to this disk for automatic snapshot creations.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourcePolicies;

/**
 *  [Output Only] Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/** [Output Only] Server-defined fully-qualified URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  Size, in GB, of the persistent disk. You can specify this field when
 *  creating a persistent disk using the sourceImage, sourceSnapshot, or
 *  sourceDisk parameter, or specify it alone to create an empty persistent
 *  disk. If you specify this field along with a source, the value of sizeGb
 *  must not be less than the size of the source. Acceptable values are 1 to
 *  65536, inclusive.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeGb;

/**
 *  The source disk used to create this disk. You can provide this as a partial
 *  or full URL to the resource. For example, the following are valid values: -
 *  https://www.googleapis.com/compute/v1/projects/project/zones/zone
 *  /disks/disk -
 *  https://www.googleapis.com/compute/v1/projects/project/regions/region
 *  /disks/disk - projects/project/zones/zone/disks/disk -
 *  projects/project/regions/region/disks/disk - zones/zone/disks/disk -
 *  regions/region/disks/disk
 */
@property(nonatomic, copy, nullable) NSString *sourceDisk;

/**
 *  [Output Only] The unique ID of the disk used to create this disk. This value
 *  identifies the exact disk that was used to create this persistent disk. For
 *  example, if you created the persistent disk from a disk that was later
 *  deleted and recreated under the same name, the source disk ID would identify
 *  the exact version of the disk that was used.
 */
@property(nonatomic, copy, nullable) NSString *sourceDiskId;

/**
 *  The source image used to create this disk. If the source image is deleted,
 *  this field will not be set. To create a disk with one of the public
 *  operating system images, specify the image by its family name. For example,
 *  specify family/debian-9 to use the latest Debian 9 image:
 *  projects/debian-cloud/global/images/family/debian-9 Alternatively, use a
 *  specific version of a public operating system image:
 *  projects/debian-cloud/global/images/debian-9-stretch-vYYYYMMDD To create a
 *  disk with a custom image that you created, specify the image name in the
 *  following format: global/images/my-custom-image You can also specify a
 *  custom image by its image family, which returns the latest version of the
 *  image in that family. Replace the image name with family/family-name:
 *  global/images/family/my-image-family
 */
@property(nonatomic, copy, nullable) NSString *sourceImage;

/**
 *  The customer-supplied encryption key of the source image. Required if the
 *  source image is protected by a customer-supplied encryption key.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *sourceImageEncryptionKey;

/**
 *  [Output Only] The ID value of the image used to create this disk. This value
 *  identifies the exact image that was used to create this persistent disk. For
 *  example, if you created the persistent disk from an image that was later
 *  deleted and recreated under the same name, the source image ID would
 *  identify the exact version of the image that was used.
 */
@property(nonatomic, copy, nullable) NSString *sourceImageId;

/**
 *  The source snapshot used to create this disk. You can provide this as a
 *  partial or full URL to the resource. For example, the following are valid
 *  values: - https://www.googleapis.com/compute/v1/projects/project
 *  /global/snapshots/snapshot - projects/project/global/snapshots/snapshot -
 *  global/snapshots/snapshot
 */
@property(nonatomic, copy, nullable) NSString *sourceSnapshot;

/**
 *  The customer-supplied encryption key of the source snapshot. Required if the
 *  source snapshot is protected by a customer-supplied encryption key.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *sourceSnapshotEncryptionKey;

/**
 *  [Output Only] The unique ID of the snapshot used to create this disk. This
 *  value identifies the exact snapshot that was used to create this persistent
 *  disk. For example, if you created the persistent disk from a snapshot that
 *  was later deleted and recreated under the same name, the source snapshot ID
 *  would identify the exact version of the snapshot that was used.
 */
@property(nonatomic, copy, nullable) NSString *sourceSnapshotId;

/**
 *  The full Google Cloud Storage URI where the disk image is stored. This file
 *  must be a gzip-compressed tarball whose name ends in .tar.gz or virtual
 *  machine disk whose name ends in vmdk. Valid URIs may start with gs:// or
 *  https://storage.googleapis.com/. This flag is not optimized for creating
 *  multiple disks from a source storage object. To create many disks from a
 *  source storage object, use gcloud compute images import instead.
 */
@property(nonatomic, copy, nullable) NSString *sourceStorageObject;

/**
 *  [Output Only] The status of disk creation. - CREATING: Disk is provisioning.
 *  - RESTORING: Source data is being copied into the disk. - FAILED: Disk
 *  creation failed. - READY: Disk is ready for use. - DELETING: Disk is
 *  deleting.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Disk_Status_Creating Disk is provisioning (Value:
 *        "CREATING")
 *    @arg @c kGTLRCompute_Disk_Status_Deleting Disk is deleting. (Value:
 *        "DELETING")
 *    @arg @c kGTLRCompute_Disk_Status_Failed Disk creation failed. (Value:
 *        "FAILED")
 *    @arg @c kGTLRCompute_Disk_Status_Ready Disk is ready for use. (Value:
 *        "READY")
 *    @arg @c kGTLRCompute_Disk_Status_Restoring Source data is being copied
 *        into the disk. (Value: "RESTORING")
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  URL of the disk type resource describing which disk type to use to create
 *  the disk. Provide this when creating the disk. For example: projects/project
 *  /zones/zone/diskTypes/pd-ssd . See Persistent disk types.
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  [Output Only] Links to the users of the disk (attached instances) in form:
 *  projects/project/zones/zone/instances/instance
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *users;

/**
 *  [Output Only] URL of the zone where the disk resides. You must specify this
 *  field as part of the HTTP request URL. It is not settable as a field in the
 *  request body.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  Labels to apply to this disk. These can be later modified by the setLabels
 *  method.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_Disk_Labels : GTLRObject
@end


/**
 *  GTLRCompute_DiskAggregatedList
 */
@interface GTLRCompute_DiskAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of DisksScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_DiskAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#diskAggregatedList for
 *  aggregated lists of persistent disks.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_DiskAggregatedList_Warning *warning;

@end


/**
 *  A list of DisksScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_DisksScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_DiskAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_DiskAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_DiskAggregatedList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_DiskAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_DiskAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_DiskAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  A specification of the desired way to instantiate a disk in the instance
 *  template when its created from a source instance.
 */
@interface GTLRCompute_DiskInstantiationConfig : GTLRObject

/**
 *  Specifies whether the disk will be auto-deleted when the instance is deleted
 *  (but not when the disk is detached from the instance).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *autoDelete;

/**
 *  The custom source image to be used to restore this disk when instantiating
 *  this instance template.
 */
@property(nonatomic, copy, nullable) NSString *customImage;

/**
 *  Specifies the device name of the disk to which the configurations apply to.
 */
@property(nonatomic, copy, nullable) NSString *deviceName;

/**
 *  Specifies whether to include the disk and what image to use. Possible values
 *  are: - source-image: to use the same image that was used to create the
 *  source instance's corresponding disk. Applicable to the boot disk and
 *  additional read-write disks. - source-image-family: to use the same image
 *  family that was used to create the source instance's corresponding disk.
 *  Applicable to the boot disk and additional read-write disks. - custom-image:
 *  to use a user-provided image url for disk creation. Applicable to the boot
 *  disk and additional read-write disks. - attach-read-only: to attach a
 *  read-only disk. Applicable to read-only disks. - do-not-include: to exclude
 *  a disk from the template. Applicable to additional read-write disks, local
 *  SSDs, and read-only disks.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_AttachReadOnly
 *        Attach the existing disk in read-only mode. The request will fail if
 *        the disk was attached in read-write mode on the source instance.
 *        Applicable to: read-only disks. (Value: "ATTACH_READ_ONLY")
 *    @arg @c kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_Blank Create
 *        a blank disk. The disk will be created unformatted. Applicable to:
 *        additional read-write disks, local SSDs. (Value: "BLANK")
 *    @arg @c kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_CustomImage
 *        Use the custom image specified in the custom_image field. Applicable
 *        to: boot disk, additional read-write disks. (Value: "CUSTOM_IMAGE")
 *    @arg @c kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_Default Use
 *        the default instantiation option for the corresponding type of disk.
 *        For boot disk and any other R/W disks, new custom images will be
 *        created from each disk. For read-only disks, they will be attached in
 *        read-only mode. Local SSD disks will be created as blank volumes.
 *        (Value: "DEFAULT")
 *    @arg @c kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_DoNotInclude
 *        Do not include the disk in the instance template. Applicable to:
 *        additional read-write disks, local SSDs, read-only disks. (Value:
 *        "DO_NOT_INCLUDE")
 *    @arg @c kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_SourceImage
 *        Use the same source image used for creation of the source instance's
 *        corresponding disk. The request will fail if the source VM's disk was
 *        created from a snapshot. Applicable to: boot disk, additional
 *        read-write disks. (Value: "SOURCE_IMAGE")
 *    @arg @c kGTLRCompute_DiskInstantiationConfig_InstantiateFrom_SourceImageFamily
 *        Use the same source image family used for creation of the source
 *        instance's corresponding disk. The request will fail if the source
 *        image of the source disk does not belong to any image family.
 *        Applicable to: boot disk, additional read-write disks. (Value:
 *        "SOURCE_IMAGE_FAMILY")
 */
@property(nonatomic, copy, nullable) NSString *instantiateFrom;

@end


/**
 *  A list of Disk resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_DiskList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Disk resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Disk *> *items;

/**
 *  [Output Only] Type of resource. Always compute#diskList for lists of disks.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_DiskList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_DiskList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_DeprecatedResourceUsed A link
 *        to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_DiskSizeLargerThanImageSize The
 *        user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_ExternalApiWarning Warning that
 *        is present in an external api call (Value: "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_InjectedKernelsDeprecated The
 *        operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_NextHopAddressNotAssigned The
 *        route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_NextHopInstanceNotOnNetwork The
 *        route's nextHopInstance URL refers to an instance that is not on the
 *        same network as the route. (Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_NextHopNotRunning The route's
 *        next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_NoResultsOnPage No results are
 *        present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_NotCriticalError Error which is
 *        not critical. We decided to continue the process despite the mentioned
 *        error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_RequiredTosAgreement The user
 *        attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_ResourceNotDeleted One or more
 *        of the resources set to auto-delete could not be deleted because they
 *        were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_SchemaValidationIgnored When a
 *        resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_DiskList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_DiskList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_DiskList_Warning_Data_Item
 */
@interface GTLRCompute_DiskList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_DiskMoveRequest
 */
@interface GTLRCompute_DiskMoveRequest : GTLRObject

/**
 *  The URL of the destination zone to move the disk. This can be a full or
 *  partial URL. For example, the following are all valid URLs to a zone: -
 *  https://www.googleapis.com/compute/v1/projects/project/zones/zone -
 *  projects/project/zones/zone - zones/zone
 */
@property(nonatomic, copy, nullable) NSString *destinationZone;

/**
 *  The URL of the target disk to move. This can be a full or partial URL. For
 *  example, the following are all valid URLs to a disk: -
 *  https://www.googleapis.com/compute/v1/projects/project/zones/zone
 *  /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk
 */
@property(nonatomic, copy, nullable) NSString *targetDisk;

@end


/**
 *  Additional disk params.
 */
@interface GTLRCompute_DiskParams : GTLRObject

/**
 *  Resource manager tags to be bound to the disk. Tag keys and values have the
 *  same definition as resource manager tags. Keys must be in the format
 *  `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The
 *  field is ignored (both PUT & PATCH) when empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_DiskParams_ResourceManagerTags *resourceManagerTags;

@end


/**
 *  Resource manager tags to be bound to the disk. Tag keys and values have the
 *  same definition as resource manager tags. Keys must be in the format
 *  `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The
 *  field is ignored (both PUT & PATCH) when empty.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_DiskParams_ResourceManagerTags : GTLRObject
@end


/**
 *  GTLRCompute_DisksAddResourcePoliciesRequest
 */
@interface GTLRCompute_DisksAddResourcePoliciesRequest : GTLRObject

/**
 *  Full or relative path to the resource policy to be added to this disk. You
 *  can only specify one resource policy.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourcePolicies;

@end


/**
 *  GTLRCompute_DisksRemoveResourcePoliciesRequest
 */
@interface GTLRCompute_DisksRemoveResourcePoliciesRequest : GTLRObject

/** Resource policies to be removed from this disk. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourcePolicies;

@end


/**
 *  GTLRCompute_DisksResizeRequest
 */
@interface GTLRCompute_DisksResizeRequest : GTLRObject

/**
 *  The new size of the persistent disk, which is specified in GB.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeGb;

@end


/**
 *  GTLRCompute_DisksScopedList
 */
@interface GTLRCompute_DisksScopedList : GTLRObject

/** [Output Only] A list of disks contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Disk *> *disks;

/**
 *  [Output Only] Informational warning which replaces the list of disks when
 *  the list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_DisksScopedList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning which replaces the list of disks when
 *  the list is empty.
 */
@interface GTLRCompute_DisksScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_PartialSuccess Success
 *        is reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_ResourceNotDeleted One
 *        or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_DisksScopedList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_DisksScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_DisksScopedList_Warning_Data_Item
 */
@interface GTLRCompute_DisksScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a Disk Type resource. Google Compute Engine has two Disk Type
 *  resources: * [Regional](/compute/docs/reference/rest/v1/regionDiskTypes) *
 *  [Zonal](/compute/docs/reference/rest/v1/diskTypes) You can choose from a
 *  variety of disk types based on your needs. For more information, read
 *  Storage options. The diskTypes resource represents disk types for a zonal
 *  persistent disk. For more information, read Zonal persistent disks. The
 *  regionDiskTypes resource represents disk types for a regional persistent
 *  disk. For more information, read Regional persistent disks.
 */
@interface GTLRCompute_DiskType : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  [Output Only] Server-defined default disk size in GB.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *defaultDiskSizeGb;

/** [Output Only] The deprecation status associated with this disk type. */
@property(nonatomic, strong, nullable) GTLRCompute_DeprecationStatus *deprecated;

/**
 *  [Output Only] An optional description of this resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#diskType for disk types.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** [Output Only] Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] URL of the region where the disk type resides. Only applicable
 *  for regional resources. You must specify this field as part of the HTTP
 *  request URL. It is not settable as a field in the request body.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] An optional textual description of the valid disk size, such
 *  as "10GB-10TB".
 */
@property(nonatomic, copy, nullable) NSString *validDiskSize;

/**
 *  [Output Only] URL of the zone where the disk type resides. You must specify
 *  this field as part of the HTTP request URL. It is not settable as a field in
 *  the request body.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  GTLRCompute_DiskTypeAggregatedList
 */
@interface GTLRCompute_DiskTypeAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of DiskTypesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_DiskTypeAggregatedList_Items *items;

/** [Output Only] Type of resource. Always compute#diskTypeAggregatedList. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_DiskTypeAggregatedList_Warning *warning;

@end


/**
 *  A list of DiskTypesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_DiskTypesScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_DiskTypeAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_DiskTypeAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_DiskTypeAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_DiskTypeAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_DiskTypeAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_DiskTypeAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of disk types.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_DiskTypeList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of DiskType resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_DiskType *> *items;

/**
 *  [Output Only] Type of resource. Always compute#diskTypeList for disk types.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_DiskTypeList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_DiskTypeList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_NoResultsOnPage No results
 *        are present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_DiskTypeList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_DiskTypeList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_DiskTypeList_Warning_Data_Item
 */
@interface GTLRCompute_DiskTypeList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_DiskTypesScopedList
 */
@interface GTLRCompute_DiskTypesScopedList : GTLRObject

/** [Output Only] A list of disk types contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_DiskType *> *diskTypes;

/**
 *  [Output Only] Informational warning which replaces the list of disk types
 *  when the list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_DiskTypesScopedList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning which replaces the list of disk types
 *  when the list is empty.
 */
@interface GTLRCompute_DiskTypesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_DiskTypesScopedList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_DiskTypesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_DiskTypesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_DiskTypesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  A set of Display Device options
 */
@interface GTLRCompute_DisplayDevice : GTLRObject

/**
 *  Defines whether the instance has Display enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableDisplay;

@end


/**
 *  GTLRCompute_DistributionPolicy
 */
@interface GTLRCompute_DistributionPolicy : GTLRObject

/**
 *  The distribution shape to which the group converges either proactively or on
 *  resize events (depending on the value set in
 *  updatePolicy.instanceRedistributionType).
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_DistributionPolicy_TargetShape_Any The group picks
 *        zones for creating VM instances to fulfill the requested number of VMs
 *        within present resource constraints and to maximize utilization of
 *        unused zonal reservations. Recommended for batch workloads that do not
 *        require high availability. (Value: "ANY")
 *    @arg @c kGTLRCompute_DistributionPolicy_TargetShape_Balanced The group
 *        prioritizes acquisition of resources, scheduling VMs in zones where
 *        resources are available while distributing VMs as evenly as possible
 *        across selected zones to minimize the impact of zonal failure.
 *        Recommended for highly available serving workloads. (Value:
 *        "BALANCED")
 *    @arg @c kGTLRCompute_DistributionPolicy_TargetShape_Even The group
 *        schedules VM instance creation and deletion to achieve and maintain an
 *        even number of managed instances across the selected zones. The
 *        distribution is even when the number of managed instances does not
 *        differ by more than 1 between any two zones. Recommended for highly
 *        available serving workloads. (Value: "EVEN")
 */
@property(nonatomic, copy, nullable) NSString *targetShape;

/**
 *  Zones where the regional managed instance group will create and manage its
 *  instances.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_DistributionPolicyZoneConfiguration *> *zones;

@end


/**
 *  GTLRCompute_DistributionPolicyZoneConfiguration
 */
@interface GTLRCompute_DistributionPolicyZoneConfiguration : GTLRObject

/**
 *  The URL of the zone. The zone must exist in the region where the managed
 *  instance group is located.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  A Duration represents a fixed-length span of time represented as a count of
 *  seconds and fractions of seconds at nanosecond resolution. It is independent
 *  of any calendar and concepts like "day" or "month". Range is approximately
 *  10,000 years.
 */
@interface GTLRCompute_Duration : GTLRObject

/**
 *  Span of time that's a fraction of a second at nanosecond resolution.
 *  Durations less than one second are represented with a 0 `seconds` field and
 *  a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *nanos;

/**
 *  Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
 *  inclusive. Note: these bounds are computed from: 60 sec/min * 60 min/hr * 24
 *  hr/day * 365.25 days/year * 10000 years
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *seconds;

@end


/**
 *  Describes the cause of the error with structured details. Example of an
 *  error when contacting the "pubsub.googleapis.com" API when it is not
 *  enabled: { "reason": "API_DISABLED" "domain": "googleapis.com" "metadata": {
 *  "resource": "projects/123", "service": "pubsub.googleapis.com" } } This
 *  response indicates that the pubsub.googleapis.com API is not enabled.
 *  Example of an error that is returned when attempting to create a Spanner
 *  instance in a region that is out of stock: { "reason": "STOCKOUT" "domain":
 *  "spanner.googleapis.com", "metadata": { "availableRegions":
 *  "us-central1,us-east2" } }
 */
@interface GTLRCompute_ErrorInfo : GTLRObject

/**
 *  The logical grouping to which the "reason" belongs. The error domain is
 *  typically the registered service name of the tool or product that generates
 *  the error. Example: "pubsub.googleapis.com". If the error is generated by
 *  some common infrastructure, the error domain must be a globally unique value
 *  that identifies the infrastructure. For Google API infrastructure, the error
 *  domain is "googleapis.com".
 */
@property(nonatomic, copy, nullable) NSString *domain;

/**
 *  Additional structured details about this error. Keys should match
 *  /[a-zA-Z0-9-_]/ and be limited to 64 characters in length. When identifying
 *  the current value of an exceeded limit, the units should be contained in the
 *  key, not the value. For example, rather than {"instanceLimit":
 *  "100/request"}, should be returned as, {"instanceLimitPerRequest": "100"},
 *  if the client exceeds the number of instances that can be created in a
 *  single (batch) request.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ErrorInfo_Metadatas *metadatas;

/**
 *  The reason of the error. This is a constant value that identifies the
 *  proximate cause of the error. Error reasons are unique within a particular
 *  domain of errors. This should be at most 63 characters and match
 *  /[A-Z0-9_]+/.
 */
@property(nonatomic, copy, nullable) NSString *reason;

@end


/**
 *  Additional structured details about this error. Keys should match
 *  /[a-zA-Z0-9-_]/ and be limited to 64 characters in length. When identifying
 *  the current value of an exceeded limit, the units should be contained in the
 *  key, not the value. For example, rather than {"instanceLimit":
 *  "100/request"}, should be returned as, {"instanceLimitPerRequest": "100"},
 *  if the client exceeds the number of instances that can be created in a
 *  single (batch) request.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_ErrorInfo_Metadatas : GTLRObject
@end


/**
 *  GTLRCompute_ExchangedPeeringRoute
 */
@interface GTLRCompute_ExchangedPeeringRoute : GTLRObject

/** The destination range of the route. */
@property(nonatomic, copy, nullable) NSString *destRange;

/**
 *  True if the peering route has been imported from a peer. The actual import
 *  happens if the field networkPeering.importCustomRoutes is true for this
 *  network, and networkPeering.exportCustomRoutes is true for the peer network,
 *  and the import does not result in a route conflict.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *imported;

/** The region of peering route next hop, only applies to dynamic routes. */
@property(nonatomic, copy, nullable) NSString *nextHopRegion;

/**
 *  The priority of the peering route.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priority;

/**
 *  The type of the peering route.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ExchangedPeeringRoute_Type_DynamicPeeringRoute For
 *        routes exported from local network. (Value: "DYNAMIC_PEERING_ROUTE")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoute_Type_StaticPeeringRoute The
 *        peering route. (Value: "STATIC_PEERING_ROUTE")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoute_Type_SubnetPeeringRoute The
 *        peering route corresponding to subnetwork range. (Value:
 *        "SUBNET_PEERING_ROUTE")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRCompute_ExchangedPeeringRoutesList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_ExchangedPeeringRoutesList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of ExchangedPeeringRoute resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ExchangedPeeringRoute *> *items;

/**
 *  [Output Only] Type of resource. Always compute#exchangedPeeringRoutesList
 *  for exchanged peering routes lists.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_ExchangedPeeringRoutesList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_ExchangedPeeringRoutesList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ExchangedPeeringRoutesList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ExchangedPeeringRoutesList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ExchangedPeeringRoutesList_Warning_Data_Item
 */
@interface GTLRCompute_ExchangedPeeringRoutesList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a textual expression in the Common Expression Language (CEL)
 *  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
 *  are documented at https://github.com/google/cel-spec. Example (Comparison):
 *  title: "Summary size limit" description: "Determines if a summary is less
 *  than 100 chars" expression: "document.summary.size() < 100" Example
 *  (Equality): title: "Requestor is owner" description: "Determines if
 *  requestor is the document owner" expression: "document.owner ==
 *  request.auth.claims.email" Example (Logic): title: "Public documents"
 *  description: "Determine whether the document should be publicly visible"
 *  expression: "document.type != 'private' && document.type != 'internal'"
 *  Example (Data Manipulation): title: "Notification string" description:
 *  "Create a notification string with a timestamp." expression: "'New message
 *  received at ' + string(document.create_time)" The exact variables and
 *  functions that may be referenced within an expression are determined by the
 *  service that evaluates it. See the service documentation for additional
 *  information.
 */
@interface GTLRCompute_Expr : GTLRObject

/**
 *  Optional. Description of the expression. This is a longer text which
 *  describes the expression, e.g. when hovered over it in a UI.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Textual representation of an expression in Common Expression Language
 *  syntax.
 */
@property(nonatomic, copy, nullable) NSString *expression;

/**
 *  Optional. String indicating the location of the expression for error
 *  reporting, e.g. a file name and a position in the file.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Optional. Title for the expression, i.e. a short string describing its
 *  purpose. This can be used e.g. in UIs which allow to enter the expression.
 */
@property(nonatomic, copy, nullable) NSString *title;

@end


/**
 *  Represents an external VPN gateway. External VPN gateway is the on-premises
 *  VPN gateway(s) or another cloud provider's VPN gateway that connects to your
 *  Google Cloud VPN gateway. To create a highly available VPN from Google Cloud
 *  Platform to your VPN gateway or another cloud provider's VPN gateway, you
 *  must create a external VPN gateway resource with information about the other
 *  gateway. For more information about using external VPN gateways, see
 *  Creating an HA VPN gateway and tunnel pair to a peer VPN.
 */
@interface GTLRCompute_ExternalVpnGateway : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  A list of interfaces for this external VPN gateway. If your peer-side
 *  gateway is an on-premises gateway and non-AWS cloud providers' gateway, at
 *  most two interfaces can be provided for an external VPN gateway. If your
 *  peer side is an AWS virtual private gateway, four interfaces should be
 *  provided for an external VPN gateway.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ExternalVpnGatewayInterface *> *interfaces;

/**
 *  [Output Only] Type of the resource. Always compute#externalVpnGateway for
 *  externalVpnGateways.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  A fingerprint for the labels being applied to this ExternalVpnGateway, which
 *  is essentially a hash of the labels set used for optimistic locking. The
 *  fingerprint is initially generated by Compute Engine and changes after every
 *  request to modify or update labels. You must always provide an up-to-date
 *  fingerprint hash in order to update or change labels, otherwise the request
 *  will fail with error 412 conditionNotMet. To see the latest fingerprint,
 *  make a get() request to retrieve an ExternalVpnGateway.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *labelFingerprint;

/**
 *  Labels for this resource. These can only be added or modified by the
 *  setLabels method. Each label key/value pair must comply with RFC1035. Label
 *  values may be empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ExternalVpnGateway_Labels *labels;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Indicates the user-supplied redundancy type of this external VPN gateway.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ExternalVpnGateway_RedundancyType_FourIpsRedundancy
 *        The external VPN gateway has four public IP addresses; at the time of
 *        writing this API, the AWS virtual private gateway is an example which
 *        has four public IP addresses for high availability connections; there
 *        should be two VPN connections in the AWS virtual private gateway ,
 *        each AWS VPN connection has two public IP addresses; please make sure
 *        to put two public IP addresses from one AWS VPN connection into
 *        interfaces 0 and 1 of this external VPN gateway, and put the other two
 *        public IP addresses from another AWS VPN connection into interfaces 2
 *        and 3 of this external VPN gateway. When displaying highly available
 *        configuration status for the VPN tunnels connected to
 *        FOUR_IPS_REDUNDANCY external VPN gateway, Google will always detect
 *        whether interfaces 0 and 1 are connected on one interface of HA Cloud
 *        VPN gateway, and detect whether interfaces 2 and 3 are connected to
 *        another interface of the HA Cloud VPN gateway. (Value:
 *        "FOUR_IPS_REDUNDANCY")
 *    @arg @c kGTLRCompute_ExternalVpnGateway_RedundancyType_SingleIpInternallyRedundant
 *        The external VPN gateway has only one public IP address which
 *        internally provide redundancy or failover. (Value:
 *        "SINGLE_IP_INTERNALLY_REDUNDANT")
 *    @arg @c kGTLRCompute_ExternalVpnGateway_RedundancyType_TwoIpsRedundancy
 *        The external VPN gateway has two public IP addresses which are
 *        redundant with each other, the following two types of setup on your
 *        on-premises side would have this type of redundancy: (1) Two separate
 *        on-premises gateways, each with one public IP address, the two
 *        on-premises gateways are redundant with each other. (2) A single
 *        on-premise gateway with two public IP addresses that are redundant
 *        with eatch other. (Value: "TWO_IPS_REDUNDANCY")
 */
@property(nonatomic, copy, nullable) NSString *redundancyType;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end


/**
 *  Labels for this resource. These can only be added or modified by the
 *  setLabels method. Each label key/value pair must comply with RFC1035. Label
 *  values may be empty.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_ExternalVpnGateway_Labels : GTLRObject
@end


/**
 *  The interface for the external VPN gateway.
 */
@interface GTLRCompute_ExternalVpnGatewayInterface : GTLRObject

/**
 *  The numeric ID of this interface. The allowed input values for this id for
 *  different redundancy types of external VPN gateway: -
 *  SINGLE_IP_INTERNALLY_REDUNDANT - 0 - TWO_IPS_REDUNDANCY - 0, 1 -
 *  FOUR_IPS_REDUNDANCY - 0, 1, 2, 3
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  IP address of the interface in the external VPN gateway. Only IPv4 is
 *  supported. This IP address can be either from your on-premise gateway or
 *  another Cloud provider's VPN gateway, it cannot be an IP address from Google
 *  Compute Engine.
 */
@property(nonatomic, copy, nullable) NSString *ipAddress;

@end


/**
 *  Response to the list request, and contains a list of externalVpnGateways.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_ExternalVpnGatewayList : GTLRCollectionObject

@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of ExternalVpnGateway resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ExternalVpnGateway *> *items;

/**
 *  [Output Only] Type of resource. Always compute#externalVpnGatewayList for
 *  lists of externalVpnGateways.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_ExternalVpnGatewayList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_ExternalVpnGatewayList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ExternalVpnGatewayList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ExternalVpnGatewayList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ExternalVpnGatewayList_Warning_Data_Item
 */
@interface GTLRCompute_ExternalVpnGatewayList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_FileContentBuffer
 */
@interface GTLRCompute_FileContentBuffer : GTLRObject

/**
 *  The raw content in the secure keys file.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *content;

/**
 *  The file type of source file.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_FileContentBuffer_FileType_Bin Value "BIN"
 *    @arg @c kGTLRCompute_FileContentBuffer_FileType_Undefined Value
 *        "UNDEFINED"
 *    @arg @c kGTLRCompute_FileContentBuffer_FileType_X509 Value "X509"
 */
@property(nonatomic, copy, nullable) NSString *fileType;

@end


/**
 *  Represents a Firewall Rule resource. Firewall rules allow or deny ingress
 *  traffic to, and egress traffic from your instances. For more information,
 *  read Firewall rules.
 */
@interface GTLRCompute_Firewall : GTLRObject

/**
 *  The list of ALLOW rules specified by this firewall. Each rule specifies a
 *  protocol and port-range tuple that describes a permitted connection.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Firewall_Allowed_Item *> *allowed;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  The list of DENY rules specified by this firewall. Each rule specifies a
 *  protocol and port-range tuple that describes a denied connection.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Firewall_Denied_Item *> *denied;

/**
 *  An optional description of this resource. Provide this field when you create
 *  the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  If destination ranges are specified, the firewall rule applies only to
 *  traffic that has destination IP address in these ranges. These ranges must
 *  be expressed in CIDR format. Both IPv4 and IPv6 are supported.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *destinationRanges;

/**
 *  Direction of traffic to which this firewall applies, either `INGRESS` or
 *  `EGRESS`. The default is `INGRESS`. For `EGRESS` traffic, you cannot specify
 *  the sourceTags fields.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Firewall_Direction_Egress Indicates that firewall
 *        should apply to outgoing traffic. (Value: "EGRESS")
 *    @arg @c kGTLRCompute_Firewall_Direction_Ingress Indicates that firewall
 *        should apply to incoming traffic. (Value: "INGRESS")
 */
@property(nonatomic, copy, nullable) NSString *direction;

/**
 *  Denotes whether the firewall rule is disabled. When set to true, the
 *  firewall rule is not enforced and the network behaves as if it did not
 *  exist. If this is unspecified, the firewall rule will be enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#firewall for firewall
 *  rules.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  This field denotes the logging options for a particular firewall rule. If
 *  logging is enabled, logs will be exported to Cloud Logging.
 */
@property(nonatomic, strong, nullable) GTLRCompute_FirewallLogConfig *logConfig;

/**
 *  Name of the resource; provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a
 *  lowercase letter, and all following characters (except for the last
 *  character) must be a dash, lowercase letter, or digit. The last character
 *  must be a lowercase letter or digit.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  URL of the network resource for this firewall rule. If not specified when
 *  creating a firewall rule, the default network is used:
 *  global/networks/default If you choose to specify this field, you can specify
 *  the network as a full or partial URL. For example, the following are all
 *  valid URLs: -
 *  https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network
 *  - projects/myproject/global/networks/my-network - global/networks/default
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Priority for this rule. This is an integer between `0` and `65535`, both
 *  inclusive. The default value is `1000`. Relative priorities determine which
 *  rule takes effect if multiple rules apply. Lower values indicate higher
 *  priority. For example, a rule with priority `0` has higher precedence than a
 *  rule with priority `1`. DENY rules take precedence over ALLOW rules if they
 *  have equal priority. Note that VPC networks have implied rules with a
 *  priority of `65535`. To avoid conflicts with the implied rules, use a
 *  priority number less than `65535`.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priority;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  If source ranges are specified, the firewall rule applies only to traffic
 *  that has a source IP address in these ranges. These ranges must be expressed
 *  in CIDR format. One or both of sourceRanges and sourceTags may be set. If
 *  both fields are set, the rule applies to traffic that has a source IP
 *  address within sourceRanges OR a source IP from a resource with a matching
 *  tag listed in the sourceTags field. The connection does not need to match
 *  both fields for the rule to apply. Both IPv4 and IPv6 are supported.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sourceRanges;

/**
 *  If source service accounts are specified, the firewall rules apply only to
 *  traffic originating from an instance with a service account in this list.
 *  Source service accounts cannot be used to control traffic to an instance's
 *  external IP address because service accounts are associated with an
 *  instance, not an IP address. sourceRanges can be set at the same time as
 *  sourceServiceAccounts. If both are set, the firewall applies to traffic that
 *  has a source IP address within the sourceRanges OR a source IP that belongs
 *  to an instance with service account listed in sourceServiceAccount. The
 *  connection does not need to match both fields for the firewall to apply.
 *  sourceServiceAccounts cannot be used at the same time as sourceTags or
 *  targetTags.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sourceServiceAccounts;

/**
 *  If source tags are specified, the firewall rule applies only to traffic with
 *  source IPs that match the primary network interfaces of VM instances that
 *  have the tag and are in the same VPC network. Source tags cannot be used to
 *  control traffic to an instance's external IP address, it only applies to
 *  traffic between instances in the same virtual network. Because tags are
 *  associated with instances, not IP addresses. One or both of sourceRanges and
 *  sourceTags may be set. If both fields are set, the firewall applies to
 *  traffic that has a source IP address within sourceRanges OR a source IP from
 *  a resource with a matching tag listed in the sourceTags field. The
 *  connection does not need to match both fields for the firewall to apply.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sourceTags;

/**
 *  A list of service accounts indicating sets of instances located in the
 *  network that may make network connections as specified in allowed[].
 *  targetServiceAccounts cannot be used at the same time as targetTags or
 *  sourceTags. If neither targetServiceAccounts nor targetTags are specified,
 *  the firewall rule applies to all instances on the specified network.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *targetServiceAccounts;

/**
 *  A list of tags that controls which instances the firewall rule applies to.
 *  If targetTags are specified, then the firewall rule applies only to
 *  instances in the VPC network that have one of those tags. If no targetTags
 *  are specified, the firewall rule applies to all instances on the specified
 *  network.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *targetTags;

@end


/**
 *  GTLRCompute_Firewall_Allowed_Item
 */
@interface GTLRCompute_Firewall_Allowed_Item : GTLRObject

/**
 *  The IP protocol to which this rule applies. The protocol type is required
 *  when creating a firewall rule. This value can either be one of the following
 *  well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp) or the IP
 *  protocol number.
 */
@property(nonatomic, copy, nullable) NSString *IPProtocol;

/**
 *  An optional list of ports to which this rule applies. This field is only
 *  applicable for the UDP or TCP protocol. Each entry must be either an integer
 *  or a range. If not specified, this rule applies to connections through any
 *  port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ports;

@end


/**
 *  GTLRCompute_Firewall_Denied_Item
 */
@interface GTLRCompute_Firewall_Denied_Item : GTLRObject

/**
 *  The IP protocol to which this rule applies. The protocol type is required
 *  when creating a firewall rule. This value can either be one of the following
 *  well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp) or the IP
 *  protocol number.
 */
@property(nonatomic, copy, nullable) NSString *IPProtocol;

/**
 *  An optional list of ports to which this rule applies. This field is only
 *  applicable for the UDP or TCP protocol. Each entry must be either an integer
 *  or a range. If not specified, this rule applies to connections through any
 *  port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ports;

@end


/**
 *  Contains a list of firewalls.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_FirewallList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Firewall resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Firewall *> *items;

/**
 *  [Output Only] Type of resource. Always compute#firewallList for lists of
 *  firewalls.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_FirewallList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_FirewallList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_NoResultsOnPage No results
 *        are present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_FirewallList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_FirewallList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_FirewallList_Warning_Data_Item
 */
@interface GTLRCompute_FirewallList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  The available logging options for a firewall rule.
 */
@interface GTLRCompute_FirewallLogConfig : GTLRObject

/**
 *  This field denotes whether to enable logging for a particular firewall rule.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enable;

/**
 *  This field can only be specified for a particular firewall rule if logging
 *  is enabled for that rule. This field denotes whether to include or exclude
 *  metadata for firewall logs.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_FirewallLogConfig_Metadata_ExcludeAllMetadata Value
 *        "EXCLUDE_ALL_METADATA"
 *    @arg @c kGTLRCompute_FirewallLogConfig_Metadata_IncludeAllMetadata Value
 *        "INCLUDE_ALL_METADATA"
 */
@property(nonatomic, copy, nullable) NSString *metadata;

@end


/**
 *  GTLRCompute_FirewallPoliciesListAssociationsResponse
 */
@interface GTLRCompute_FirewallPoliciesListAssociationsResponse : GTLRObject

/** A list of associations. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_FirewallPolicyAssociation *> *associations;

/**
 *  [Output Only] Type of firewallPolicy associations. Always
 *  compute#FirewallPoliciesListAssociations for lists of firewallPolicy
 *  associations.
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  Represents a Firewall Policy resource.
 */
@interface GTLRCompute_FirewallPolicy : GTLRObject

/** A list of associations that belong to this firewall policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_FirewallPolicyAssociation *> *associations;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Deprecated, please use short name instead. User-provided name of the
 *  Organization firewall policy. The name should be unique in the organization
 *  in which the firewall policy is created. This field is not applicable to
 *  network firewall policies. This name must be set on creation and cannot be
 *  changed. The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/**
 *  Specifies a fingerprint for this resource, which is essentially a hash of
 *  the metadata's contents and used for optimistic locking. The fingerprint is
 *  initially generated by Compute Engine and changes after every request to
 *  modify or update metadata. You must always provide an up-to-date fingerprint
 *  hash in order to update or change metadata, otherwise the request will fail
 *  with error 412 conditionNotMet. To see the latest fingerprint, make get()
 *  request to the firewall policy.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output only] Type of the resource. Always compute#firewallPolicyfor
 *  firewall policies
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. For Organization Firewall Policies it's a [Output
 *  Only] numeric ID allocated by GCP which uniquely identifies the Organization
 *  Firewall Policy.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] The parent of the firewall policy. This field is not
 *  applicable to network firewall policies.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  [Output Only] URL of the region where the regional firewall policy resides.
 *  This field is not applicable to global firewall policies. You must specify
 *  this field as part of the HTTP request URL. It is not settable as a field in
 *  the request body.
 */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  A list of rules that belong to this policy. There must always be a default
 *  rule (rule with priority 2147483647 and match "*"). If no rules are provided
 *  when creating a firewall policy, a default rule with action "allow" will be
 *  added.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_FirewallPolicyRule *> *rules;

/**
 *  [Output Only] Total count of all firewall policy rule tuples. A firewall
 *  policy can not exceed a set number of tuples.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ruleTupleCount;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] Server-defined URL for this resource with the resource id.
 */
@property(nonatomic, copy, nullable) NSString *selfLinkWithId;

/**
 *  User-provided name of the Organization firewall policy. The name should be
 *  unique in the organization in which the firewall policy is created. This
 *  field is not applicable to network firewall policies. This name must be set
 *  on creation and cannot be changed. The name must be 1-63 characters long,
 *  and comply with RFC1035. Specifically, the name must be 1-63 characters long
 *  and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means
 *  the first character must be a lowercase letter, and all following characters
 *  must be a dash, lowercase letter, or digit, except the last character, which
 *  cannot be a dash.
 */
@property(nonatomic, copy, nullable) NSString *shortName;

@end


/**
 *  GTLRCompute_FirewallPolicyAssociation
 */
@interface GTLRCompute_FirewallPolicyAssociation : GTLRObject

/** The target that the firewall policy is attached to. */
@property(nonatomic, copy, nullable) NSString *attachmentTarget;

/**
 *  [Output Only] Deprecated, please use short name instead. The display name of
 *  the firewall policy of the association.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** [Output Only] The firewall policy ID of the association. */
@property(nonatomic, copy, nullable) NSString *firewallPolicyId;

/** The name for an association. */
@property(nonatomic, copy, nullable) NSString *name;

/** [Output Only] The short name of the firewall policy of the association. */
@property(nonatomic, copy, nullable) NSString *shortName;

@end


/**
 *  GTLRCompute_FirewallPolicyList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_FirewallPolicyList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of FirewallPolicy resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_FirewallPolicy *> *items;

/**
 *  [Output Only] Type of resource. Always compute#firewallPolicyList for
 *  listsof FirewallPolicies
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_FirewallPolicyList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_FirewallPolicyList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_FirewallPolicyList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_FirewallPolicyList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_FirewallPolicyList_Warning_Data_Item
 */
@interface GTLRCompute_FirewallPolicyList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a rule that describes one or more match conditions along with the
 *  action to be taken when traffic matches this condition (allow or deny).
 */
@interface GTLRCompute_FirewallPolicyRule : GTLRObject

/**
 *  The Action to perform when the client connection triggers the rule. Can
 *  currently be either "allow" or "deny()" where valid values for status are
 *  403, 404, and 502.
 */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  An optional description for this resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The direction in which this rule applies.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_FirewallPolicyRule_Direction_Egress Value "EGRESS"
 *    @arg @c kGTLRCompute_FirewallPolicyRule_Direction_Ingress Value "INGRESS"
 */
@property(nonatomic, copy, nullable) NSString *direction;

/**
 *  Denotes whether the firewall policy rule is disabled. When set to true, the
 *  firewall policy rule is not enforced and traffic behaves as if it did not
 *  exist. If this is unspecified, the firewall policy rule will be enabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *disabled;

/**
 *  Denotes whether to enable logging for a particular rule. If logging is
 *  enabled, logs will be exported to the configured export destination in
 *  Stackdriver. Logs may be exported to BigQuery or Pub/Sub. Note: you cannot
 *  enable logging on "goto_next" rules.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableLogging;

/**
 *  [Output only] Type of the resource. Always compute#firewallPolicyRule for
 *  firewall policy rules
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  A match condition that incoming traffic is evaluated against. If it
 *  evaluates to true, the corresponding 'action' is enforced.
 */
@property(nonatomic, strong, nullable) GTLRCompute_FirewallPolicyRuleMatcher *match;

/**
 *  An integer indicating the priority of a rule in the list. The priority must
 *  be a positive value between 0 and 2147483647. Rules are evaluated from
 *  highest to lowest priority where 0 is the highest priority and 2147483647 is
 *  the lowest prority.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priority;

/**
 *  An optional name for the rule. This field is not a unique identifier and can
 *  be updated.
 */
@property(nonatomic, copy, nullable) NSString *ruleName;

/**
 *  [Output Only] Calculation of the complexity of a single firewall policy
 *  rule.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ruleTupleCount;

/**
 *  A list of network resource URLs to which this rule applies. This field
 *  allows you to control which network's VMs get this rule. If this field is
 *  left blank, all VMs within the organization will receive the rule.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *targetResources;

/**
 *  A list of secure tags that controls which instances the firewall rule
 *  applies to. If targetSecureTag are specified, then the firewall rule applies
 *  only to instances in the VPC network that have one of those EFFECTIVE secure
 *  tags, if all the target_secure_tag are in INEFFECTIVE state, then this rule
 *  will be ignored. targetSecureTag may not be set at the same time as
 *  targetServiceAccounts. If neither targetServiceAccounts nor targetSecureTag
 *  are specified, the firewall rule applies to all instances on the specified
 *  network. Maximum number of target label tags allowed is 256.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_FirewallPolicyRuleSecureTag *> *targetSecureTags;

/**
 *  A list of service accounts indicating the sets of instances that are applied
 *  with this rule.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *targetServiceAccounts;

@end


/**
 *  Represents a match condition that incoming traffic is evaluated against.
 *  Exactly one field must be specified.
 */
@interface GTLRCompute_FirewallPolicyRuleMatcher : GTLRObject

/**
 *  CIDR IP address range. Maximum number of destination CIDR IP ranges allowed
 *  is 5000.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *destIpRanges;

/** Pairs of IP protocols and ports that the rule should match. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_FirewallPolicyRuleMatcherLayer4Config *> *layer4Configs;

/**
 *  CIDR IP address range. Maximum number of source CIDR IP ranges allowed is
 *  5000.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *srcIpRanges;

/**
 *  List of secure tag values, which should be matched at the source of the
 *  traffic. For INGRESS rule, if all the srcSecureTag are INEFFECTIVE, and
 *  there is no srcIpRange, this rule will be ignored. Maximum number of source
 *  tag values allowed is 256.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_FirewallPolicyRuleSecureTag *> *srcSecureTags;

@end


/**
 *  GTLRCompute_FirewallPolicyRuleMatcherLayer4Config
 */
@interface GTLRCompute_FirewallPolicyRuleMatcherLayer4Config : GTLRObject

/**
 *  The IP protocol to which this rule applies. The protocol type is required
 *  when creating a firewall rule. This value can either be one of the following
 *  well known protocol strings (tcp, udp, icmp, esp, ah, ipip, sctp), or the IP
 *  protocol number.
 */
@property(nonatomic, copy, nullable) NSString *ipProtocol;

/**
 *  An optional list of ports to which this rule applies. This field is only
 *  applicable for UDP or TCP protocol. Each entry must be either an integer or
 *  a range. If not specified, this rule applies to connections through any
 *  port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ports;

@end


/**
 *  GTLRCompute_FirewallPolicyRuleSecureTag
 */
@interface GTLRCompute_FirewallPolicyRuleSecureTag : GTLRObject

/** Name of the secure tag, created with TagManager's TagValue API. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] State of the secure tag, either `EFFECTIVE` or `INEFFECTIVE`.
 *  A secure tag is `INEFFECTIVE` when it is deleted or its network is deleted.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_FirewallPolicyRuleSecureTag_State_Effective Value
 *        "EFFECTIVE"
 *    @arg @c kGTLRCompute_FirewallPolicyRuleSecureTag_State_Ineffective Value
 *        "INEFFECTIVE"
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Encapsulates numeric value that can be either absolute or relative.
 */
@interface GTLRCompute_FixedOrPercent : GTLRObject

/**
 *  [Output Only] Absolute value of VM instances calculated based on the
 *  specific mode. - If the value is fixed, then the calculated value is equal
 *  to the fixed value. - If the value is a percent, then the calculated value
 *  is percent/100 * targetSize. For example, the calculated value of a 80% of a
 *  managed instance group with 150 instances would be (80/100 * 150) = 120 VM
 *  instances. If there is a remainder, the number is rounded.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *calculated;

/**
 *  Specifies a fixed number of VM instances. This must be a positive integer.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *fixed;

/**
 *  Specifies a percentage of instances between 0 to 100%, inclusive. For
 *  example, specify 80 for 80%.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *percent;

@end


/**
 *  Represents a Forwarding Rule resource. Forwarding rule resources in Google
 *  Cloud can be either regional or global in scope: *
 *  [Global](https://cloud.google.com/compute/docs/reference/rest/v1/globalForwardingRules)
 *  *
 *  [Regional](https://cloud.google.com/compute/docs/reference/rest/v1/forwardingRules)
 *  A forwarding rule and its corresponding IP address represent the frontend
 *  configuration of a Google Cloud Platform load balancer. Forwarding rules can
 *  also reference target instances and Cloud VPN Classic gateways
 *  (targetVpnGateway). For more information, read Forwarding rule concepts and
 *  Using protocol forwarding.
 */
@interface GTLRCompute_ForwardingRule : GTLRObject

/**
 *  This field is used along with the backend_service field for internal load
 *  balancing or with the target field for internal TargetInstance. If the field
 *  is set to TRUE, clients can access ILB from all regions. Otherwise only
 *  allows access from clients in the same region as the internal load balancer.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allowGlobalAccess;

/**
 *  This field is used along with the backend_service field for Internal TCP/UDP
 *  Load Balancing or Network Load Balancing, or with the target field for
 *  internal and external TargetInstance. You can only use one of ports and
 *  port_range, or allPorts. The three are mutually exclusive. For TCP, UDP and
 *  SCTP traffic, packets addressed to any ports will be forwarded to the target
 *  or backendService.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allPorts;

/**
 *  Identifies the backend service to which the forwarding rule sends traffic.
 *  Required for Internal TCP/UDP Load Balancing and Network Load Balancing;
 *  must be omitted for all other load balancer types.
 */
@property(nonatomic, copy, nullable) NSString *backendService;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Fingerprint of this resource. A hash of the contents stored in this object.
 *  This field is used in optimistic locking. This field will be ignored when
 *  inserting a ForwardingRule. Include the fingerprint in patch request to
 *  ensure that you do not overwrite changes that were applied from another
 *  concurrent request. To see the latest fingerprint, make a get() request to
 *  retrieve a ForwardingRule.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  IP address for which this forwarding rule accepts traffic. When a client
 *  sends traffic to this IP address, the forwarding rule directs the traffic to
 *  the referenced target or backendService. While creating a forwarding rule,
 *  specifying an IPAddress is required under the following circumstances: -
 *  When the target is set to targetGrpcProxy and validateForProxyless is set to
 *  true, the IPAddress should be set to 0.0.0.0. - When the target is a Private
 *  Service Connect Google APIs bundle, you must specify an IPAddress.
 *  Otherwise, you can optionally specify an IP address that references an
 *  existing static (reserved) IP address resource. When omitted, Google Cloud
 *  assigns an ephemeral IP address. Use one of the following formats to specify
 *  an IP address while creating a forwarding rule: * IP address number, as in
 *  `100.1.2.3` * IPv6 address range, as in `2600:1234::/96` * Full resource
 *  URL, as in https://www.googleapis.com/compute/v1/projects/
 *  project_id/regions/region/addresses/address-name * Partial URL or by name,
 *  as in: - projects/project_id/regions/region/addresses/address-name -
 *  regions/region/addresses/address-name - global/addresses/address-name -
 *  address-name The forwarding rule's target or backendService, and in most
 *  cases, also the loadBalancingScheme, determine the type of IP address that
 *  you can use. For detailed information, see [IP address
 *  specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).
 *  When reading an IPAddress, the API always returns the IP address number.
 */
@property(nonatomic, copy, nullable) NSString *IPAddress;

/**
 *  The IP protocol to which this rule applies. For protocol forwarding, valid
 *  options are TCP, UDP, ESP, AH, SCTP, ICMP and L3_DEFAULT. The valid IP
 *  protocols are different for different load balancing products as described
 *  in [Load balancing
 *  features](https://cloud.google.com/load-balancing/docs/features#protocols_from_the_load_balancer_to_the_backends).
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ForwardingRule_IPProtocol_Ah Value "AH"
 *    @arg @c kGTLRCompute_ForwardingRule_IPProtocol_Esp Value "ESP"
 *    @arg @c kGTLRCompute_ForwardingRule_IPProtocol_Icmp Value "ICMP"
 *    @arg @c kGTLRCompute_ForwardingRule_IPProtocol_L3Default Value
 *        "L3_DEFAULT"
 *    @arg @c kGTLRCompute_ForwardingRule_IPProtocol_Sctp Value "SCTP"
 *    @arg @c kGTLRCompute_ForwardingRule_IPProtocol_Tcp Value "TCP"
 *    @arg @c kGTLRCompute_ForwardingRule_IPProtocol_Udp Value "UDP"
 */
@property(nonatomic, copy, nullable) NSString *IPProtocol;

/**
 *  The IP Version that will be used by this forwarding rule. Valid options are
 *  IPV4 or IPV6.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ForwardingRule_IpVersion_Ipv4 Value "IPV4"
 *    @arg @c kGTLRCompute_ForwardingRule_IpVersion_Ipv6 Value "IPV6"
 *    @arg @c kGTLRCompute_ForwardingRule_IpVersion_UnspecifiedVersion Value
 *        "UNSPECIFIED_VERSION"
 */
@property(nonatomic, copy, nullable) NSString *ipVersion;

/**
 *  Indicates whether or not this load balancer can be used as a collector for
 *  packet mirroring. To prevent mirroring loops, instances behind this load
 *  balancer will not have their traffic mirrored even if a PacketMirroring rule
 *  applies to them. This can only be set to true for load balancers that have
 *  their loadBalancingScheme set to INTERNAL.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isMirroringCollector;

/**
 *  [Output Only] Type of the resource. Always compute#forwardingRule for
 *  Forwarding Rule resources.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  A fingerprint for the labels being applied to this resource, which is
 *  essentially a hash of the labels set used for optimistic locking. The
 *  fingerprint is initially generated by Compute Engine and changes after every
 *  request to modify or update labels. You must always provide an up-to-date
 *  fingerprint hash in order to update or change labels, otherwise the request
 *  will fail with error 412 conditionNotMet. To see the latest fingerprint,
 *  make a get() request to retrieve a ForwardingRule.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *labelFingerprint;

/**
 *  Labels for this resource. These can only be added or modified by the
 *  setLabels method. Each label key/value pair must comply with RFC1035. Label
 *  values may be empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ForwardingRule_Labels *labels;

/**
 *  Specifies the forwarding rule type. For more information about forwarding
 *  rules, refer to Forwarding rule concepts.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ForwardingRule_LoadBalancingScheme_External Value
 *        "EXTERNAL"
 *    @arg @c kGTLRCompute_ForwardingRule_LoadBalancingScheme_ExternalManaged
 *        Value "EXTERNAL_MANAGED"
 *    @arg @c kGTLRCompute_ForwardingRule_LoadBalancingScheme_Internal Value
 *        "INTERNAL"
 *    @arg @c kGTLRCompute_ForwardingRule_LoadBalancingScheme_InternalManaged
 *        Value "INTERNAL_MANAGED"
 *    @arg @c kGTLRCompute_ForwardingRule_LoadBalancingScheme_InternalSelfManaged
 *        Value "INTERNAL_SELF_MANAGED"
 *    @arg @c kGTLRCompute_ForwardingRule_LoadBalancingScheme_Invalid Value
 *        "INVALID"
 */
@property(nonatomic, copy, nullable) NSString *loadBalancingScheme;

/**
 *  Opaque filter criteria used by load balancer to restrict routing
 *  configuration to a limited set of xDS compliant clients. In their xDS
 *  requests to load balancer, xDS clients present node metadata. When there is
 *  a match, the relevant configuration is made available to those proxies.
 *  Otherwise, all the resources (e.g. TargetHttpProxy, UrlMap) referenced by
 *  the ForwardingRule are not visible to those proxies. For each metadataFilter
 *  in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one
 *  of the filterLabels must match the corresponding label provided in the
 *  metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its
 *  filterLabels must match with corresponding labels provided in the metadata.
 *  If multiple metadataFilters are specified, all of them need to be satisfied
 *  in order to be considered a match. metadataFilters specified here will be
 *  applifed before those specified in the UrlMap that this ForwardingRule
 *  references. metadataFilters only applies to Loadbalancers that have their
 *  loadBalancingScheme set to INTERNAL_SELF_MANAGED.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_MetadataFilter *> *metadataFilters;

/**
 *  Name of the resource; provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash. For Private Service Connect forwarding rules that forward traffic to
 *  Google APIs, the forwarding rule name must be a 1-20 characters string with
 *  lowercase letters and numbers and must start with a letter.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  This field is not used for external load balancing. For Internal TCP/UDP
 *  Load Balancing, this field identifies the network that the load balanced IP
 *  should belong to for this Forwarding Rule. If this field is not specified,
 *  the default network will be used. For Private Service Connect forwarding
 *  rules that forward traffic to Google APIs, a network must be provided.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  This signifies the networking tier used for configuring this load balancer
 *  and can only take the following values: PREMIUM, STANDARD. For regional
 *  ForwardingRule, the valid values are PREMIUM and STANDARD. For
 *  GlobalForwardingRule, the valid value is PREMIUM. If this field is not
 *  specified, it is assumed to be PREMIUM. If IPAddress is specified, this
 *  value must be equal to the networkTier of the Address.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ForwardingRule_NetworkTier_FixedStandard Public
 *        internet quality with fixed bandwidth. (Value: "FIXED_STANDARD")
 *    @arg @c kGTLRCompute_ForwardingRule_NetworkTier_Premium High quality,
 *        Google-grade network tier, support for all networking products.
 *        (Value: "PREMIUM")
 *    @arg @c kGTLRCompute_ForwardingRule_NetworkTier_Standard Public internet
 *        quality, only limited support for other networking products. (Value:
 *        "STANDARD")
 *    @arg @c kGTLRCompute_ForwardingRule_NetworkTier_StandardOverridesFixedStandard
 *        (Output only) Temporary tier for FIXED_STANDARD when fixed standard
 *        tier is expired or not configured. (Value:
 *        "STANDARD_OVERRIDES_FIXED_STANDARD")
 */
@property(nonatomic, copy, nullable) NSString *networkTier;

/**
 *  This is used in PSC consumer ForwardingRule to control whether it should try
 *  to auto-generate a DNS zone or not. Non-PSC forwarding rules do not use this
 *  field.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *noAutomateDnsZone;

/**
 *  This field can be used only if: - Load balancing scheme is one of EXTERNAL,
 *  INTERNAL_SELF_MANAGED or INTERNAL_MANAGED - IPProtocol is one of TCP, UDP,
 *  or SCTP. Packets addressed to ports in the specified range will be forwarded
 *  to target or backend_service. You can only use one of ports, port_range, or
 *  allPorts. The three are mutually exclusive. Forwarding rules with the same
 *  [IPAddress, IPProtocol] pair must have disjoint ports. Some types of
 *  forwarding target have constraints on the acceptable ports. For more
 *  information, see [Port
 *  specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#port_specifications).
 *  \@pattern: \\\\d+(?:-\\\\d+)?
 */
@property(nonatomic, copy, nullable) NSString *portRange;

/**
 *  The ports field is only supported when the forwarding rule references a
 *  backend_service directly. Only packets addressed to the [specified list of
 *  ports]((https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#port_specifications))
 *  are forwarded to backends. You can only use one of ports and port_range, or
 *  allPorts. The three are mutually exclusive. You can specify a list of up to
 *  five ports, which can be non-contiguous. Forwarding rules with the same
 *  [IPAddress, IPProtocol] pair must have disjoint ports. \@pattern:
 *  \\\\d+(?:-\\\\d+)?
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ports;

/**
 *  [Output Only] The PSC connection id of the PSC Forwarding Rule.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pscConnectionId;

/**
 *  pscConnectionStatus
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ForwardingRule_PscConnectionStatus_Accepted The
 *        connection has been accepted by the producer. (Value: "ACCEPTED")
 *    @arg @c kGTLRCompute_ForwardingRule_PscConnectionStatus_Closed The
 *        connection has been closed by the producer and will not serve traffic
 *        going forward. (Value: "CLOSED")
 *    @arg @c kGTLRCompute_ForwardingRule_PscConnectionStatus_NeedsAttention The
 *        connection has been accepted by the producer, but the producer needs
 *        to take further action before the forwarding rule can serve traffic.
 *        (Value: "NEEDS_ATTENTION")
 *    @arg @c kGTLRCompute_ForwardingRule_PscConnectionStatus_Pending The
 *        connection is pending acceptance by the producer. (Value: "PENDING")
 *    @arg @c kGTLRCompute_ForwardingRule_PscConnectionStatus_Rejected The
 *        connection has been rejected by the producer. (Value: "REJECTED")
 *    @arg @c kGTLRCompute_ForwardingRule_PscConnectionStatus_StatusUnspecified
 *        Value "STATUS_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *pscConnectionStatus;

/**
 *  [Output Only] URL of the region where the regional forwarding rule resides.
 *  This field is not applicable to global forwarding rules. You must specify
 *  this field as part of the HTTP request URL. It is not settable as a field in
 *  the request body.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  Service Directory resources to register this forwarding rule with.
 *  Currently, only supports a single Service Directory resource.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ForwardingRuleServiceDirectoryRegistration *> *serviceDirectoryRegistrations;

/**
 *  An optional prefix to the service name for this Forwarding Rule. If
 *  specified, the prefix is the first label of the fully qualified service
 *  name. The label must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the label must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash. This field is only used for internal load balancing.
 */
@property(nonatomic, copy, nullable) NSString *serviceLabel;

/**
 *  [Output Only] The internal fully qualified service name for this Forwarding
 *  Rule. This field is only used for internal load balancing.
 */
@property(nonatomic, copy, nullable) NSString *serviceName;

/**
 *  This field identifies the subnetwork that the load balanced IP should belong
 *  to for this Forwarding Rule, used in internal load balancing and network
 *  load balancing with IPv6. If the network specified is in auto subnet mode,
 *  this field is optional. However, a subnetwork must be specified if the
 *  network is in custom subnet mode or when creating external forwarding rule
 *  with IPv6.
 */
@property(nonatomic, copy, nullable) NSString *subnetwork;

/**
 *  The URL of the target resource to receive the matched traffic. For regional
 *  forwarding rules, this target must be in the same region as the forwarding
 *  rule. For global forwarding rules, this target must be a global load
 *  balancing resource. The forwarded traffic must be of a type appropriate to
 *  the target object. For more information, see the "Target" column in [Port
 *  specifications](https://cloud.google.com/load-balancing/docs/forwarding-rule-concepts#ip_address_specifications).
 *  For Private Service Connect forwarding rules that forward traffic to Google
 *  APIs, provide the name of a supported Google API bundle: - vpc-sc - APIs
 *  that support VPC Service Controls. - all-apis - All supported Google APIs.
 */
@property(nonatomic, copy, nullable) NSString *target;

@end


/**
 *  Labels for this resource. These can only be added or modified by the
 *  setLabels method. Each label key/value pair must comply with RFC1035. Label
 *  values may be empty.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_ForwardingRule_Labels : GTLRObject
@end


/**
 *  GTLRCompute_ForwardingRuleAggregatedList
 */
@interface GTLRCompute_ForwardingRuleAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of ForwardingRulesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_ForwardingRuleAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#forwardingRuleAggregatedList
 *  for lists of forwarding rules.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_ForwardingRuleAggregatedList_Warning *warning;

@end


/**
 *  A list of ForwardingRulesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_ForwardingRulesScopedList. Use @c -additionalJSONKeys and
 *        @c -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_ForwardingRuleAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_ForwardingRuleAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ForwardingRuleAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ForwardingRuleAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ForwardingRuleAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_ForwardingRuleAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of ForwardingRule resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_ForwardingRuleList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of ForwardingRule resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ForwardingRule *> *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_ForwardingRuleList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_ForwardingRuleList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ForwardingRuleList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ForwardingRuleList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ForwardingRuleList_Warning_Data_Item
 */
@interface GTLRCompute_ForwardingRuleList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_ForwardingRuleReference
 */
@interface GTLRCompute_ForwardingRuleReference : GTLRObject

@property(nonatomic, copy, nullable) NSString *forwardingRule;

@end


/**
 *  Describes the auto-registration of the Forwarding Rule to Service Directory.
 *  The region and project of the Service Directory resource generated from this
 *  registration will be the same as this Forwarding Rule.
 */
@interface GTLRCompute_ForwardingRuleServiceDirectoryRegistration : GTLRObject

/**
 *  Service Directory namespace to register the forwarding rule under.
 *
 *  Remapped to 'namespaceProperty' to avoid language reserved word 'namespace'.
 */
@property(nonatomic, copy, nullable) NSString *namespaceProperty;

/** Service Directory service to register the forwarding rule under. */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  [Optional] Service Directory region to register this global forwarding rule
 *  under. Default to "us-central1". Only used for PSC for Google APIs. All PSC
 *  for Google APIs Forwarding Rules on the same network should use the same
 *  Service Directory region.
 */
@property(nonatomic, copy, nullable) NSString *serviceDirectoryRegion;

@end


/**
 *  GTLRCompute_ForwardingRulesScopedList
 */
@interface GTLRCompute_ForwardingRulesScopedList : GTLRObject

/** A list of forwarding rules contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ForwardingRule *> *forwardingRules;

/**
 *  Informational warning which replaces the list of forwarding rules when the
 *  list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ForwardingRulesScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of forwarding rules when the
 *  list is empty.
 */
@interface GTLRCompute_ForwardingRulesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ForwardingRulesScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ForwardingRulesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ForwardingRulesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_ForwardingRulesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_GlobalNetworkEndpointGroupsAttachEndpointsRequest
 */
@interface GTLRCompute_GlobalNetworkEndpointGroupsAttachEndpointsRequest : GTLRObject

/** The list of network endpoints to be attached. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkEndpoint *> *networkEndpoints;

@end


/**
 *  GTLRCompute_GlobalNetworkEndpointGroupsDetachEndpointsRequest
 */
@interface GTLRCompute_GlobalNetworkEndpointGroupsDetachEndpointsRequest : GTLRObject

/** The list of network endpoints to be detached. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkEndpoint *> *networkEndpoints;

@end


/**
 *  GTLRCompute_GlobalOrganizationSetPolicyRequest
 */
@interface GTLRCompute_GlobalOrganizationSetPolicyRequest : GTLRObject

/**
 *  Flatten Policy to create a backward compatible wire-format. Deprecated. Use
 *  'policy' to specify bindings.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Binding *> *bindings;

/**
 *  Flatten Policy to create a backward compatible wire-format. Deprecated. Use
 *  'policy' to specify the etag.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  REQUIRED: The complete policy to be applied to the 'resource'. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is in general a
 *  valid policy but certain services (like Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Policy *policy;

@end


/**
 *  GTLRCompute_GlobalSetLabelsRequest
 */
@interface GTLRCompute_GlobalSetLabelsRequest : GTLRObject

/**
 *  The fingerprint of the previous set of labels for this resource, used to
 *  detect conflicts. The fingerprint is initially generated by Compute Engine
 *  and changes after every request to modify or update labels. You must always
 *  provide an up-to-date fingerprint hash when updating or changing labels,
 *  otherwise the request will fail with error 412 conditionNotMet. Make a get()
 *  request to the resource to get the latest fingerprint.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *labelFingerprint;

/**
 *  A list of labels to apply for this resource. Each label must comply with the
 *  requirements for labels. For example, "webserver-frontend": "images". A
 *  label value can also be empty (e.g. "my-label": "").
 */
@property(nonatomic, strong, nullable) GTLRCompute_GlobalSetLabelsRequest_Labels *labels;

@end


/**
 *  A list of labels to apply for this resource. Each label must comply with the
 *  requirements for labels. For example, "webserver-frontend": "images". A
 *  label value can also be empty (e.g. "my-label": "").
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_GlobalSetLabelsRequest_Labels : GTLRObject
@end


/**
 *  GTLRCompute_GlobalSetPolicyRequest
 */
@interface GTLRCompute_GlobalSetPolicyRequest : GTLRObject

/**
 *  Flatten Policy to create a backward compatible wire-format. Deprecated. Use
 *  'policy' to specify bindings.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Binding *> *bindings;

/**
 *  Flatten Policy to create a backward compatible wire-format. Deprecated. Use
 *  'policy' to specify the etag.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  REQUIRED: The complete policy to be applied to the 'resource'. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is in general a
 *  valid policy but certain services (like Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Policy *policy;

@end


/**
 *  GTLRCompute_GRPCHealthCheck
 */
@interface GTLRCompute_GRPCHealthCheck : GTLRObject

/**
 *  The gRPC service name for the health check. This field is optional. The
 *  value of grpc_service_name has the following meanings by convention: - Empty
 *  service_name means the overall status of all services at the backend. -
 *  Non-empty service_name means the health of that gRPC service, as defined by
 *  the owner of the service. The grpc_service_name can only be ASCII.
 */
@property(nonatomic, copy, nullable) NSString *grpcServiceName;

/**
 *  The TCP port number to which the health check prober sends packets. Valid
 *  values are 1 through 65535.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

/** Not supported. */
@property(nonatomic, copy, nullable) NSString *portName;

/**
 *  Specifies how a port is selected for health checking. Can be one of the
 *  following values: USE_FIXED_PORT: Specifies a port number explicitly using
 *  the port field in the health check. Supported by backend services for
 *  pass-through load balancers and backend services for proxy load balancers.
 *  Not supported by target pools. The health check supports all backends
 *  supported by the backend service provided the backend can be health checked.
 *  For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network
 *  endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported.
 *  USE_SERVING_PORT: Provides an indirect method of specifying the health check
 *  port by referring to the backend service. Only supported by backend services
 *  for proxy load balancers. Not supported by target pools. Not supported by
 *  backend services for pass-through load balancers. Supports all backends that
 *  can be health checked; for example, GCE_VM_IP_PORT network endpoint groups
 *  and instance group backends. For GCE_VM_IP_PORT network endpoint group
 *  backends, the health check uses the port number specified for each endpoint
 *  in the network endpoint group. For instance group backends, the health check
 *  uses the port number determined by looking up the backend service's named
 *  port in the instance group's list of named ports.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_GRPCHealthCheck_PortSpecification_UseFixedPort The
 *        port number in the health check's port is used for health checking.
 *        Applies to network endpoint group and instance group backends. (Value:
 *        "USE_FIXED_PORT")
 *    @arg @c kGTLRCompute_GRPCHealthCheck_PortSpecification_UseNamedPort Not
 *        supported. (Value: "USE_NAMED_PORT")
 *    @arg @c kGTLRCompute_GRPCHealthCheck_PortSpecification_UseServingPort For
 *        network endpoint group backends, the health check uses the port number
 *        specified on each endpoint in the network endpoint group. For instance
 *        group backends, the health check uses the port number specified for
 *        the backend service's named port defined in the instance group's named
 *        ports. (Value: "USE_SERVING_PORT")
 */
@property(nonatomic, copy, nullable) NSString *portSpecification;

@end


/**
 *  A guest attributes entry.
 */
@interface GTLRCompute_GuestAttributes : GTLRObject

/**
 *  [Output Only] Type of the resource. Always compute#guestAttributes for guest
 *  attributes entry.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The path to be queried. This can be the default namespace ('') or a nested
 *  namespace ('\\/') or a specified key ('\\/\\').
 */
@property(nonatomic, copy, nullable) NSString *queryPath;

/** [Output Only] The value of the requested queried path. */
@property(nonatomic, strong, nullable) GTLRCompute_GuestAttributesValue *queryValue;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** The key to search for. */
@property(nonatomic, copy, nullable) NSString *variableKey;

/** [Output Only] The value found for the requested key. */
@property(nonatomic, copy, nullable) NSString *variableValue;

@end


/**
 *  A guest attributes namespace/key/value entry.
 */
@interface GTLRCompute_GuestAttributesEntry : GTLRObject

/** Key for the guest attribute entry. */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  Namespace for the guest attribute entry.
 *
 *  Remapped to 'namespaceProperty' to avoid language reserved word 'namespace'.
 */
@property(nonatomic, copy, nullable) NSString *namespaceProperty;

/** Value for the guest attribute entry. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Array of guest attribute namespace/key/value tuples.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRCompute_GuestAttributesValue : GTLRCollectionObject

/**
 *  items
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_GuestAttributesEntry *> *items;

@end


/**
 *  Guest OS features.
 */
@interface GTLRCompute_GuestOsFeature : GTLRObject

/**
 *  The ID of a supported feature. To add multiple values, use commas to
 *  separate values. Set to one or more of the following values: -
 *  VIRTIO_SCSI_MULTIQUEUE - WINDOWS - MULTI_IP_SUBNET - UEFI_COMPATIBLE - GVNIC
 *  - SEV_CAPABLE - SUSPEND_RESUME_COMPATIBLE - SEV_SNP_CAPABLE For more
 *  information, see Enabling guest operating system features.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_GuestOsFeature_Type_FeatureTypeUnspecified Value
 *        "FEATURE_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRCompute_GuestOsFeature_Type_Gvnic Value "GVNIC"
 *    @arg @c kGTLRCompute_GuestOsFeature_Type_MultiIpSubnet Value
 *        "MULTI_IP_SUBNET"
 *    @arg @c kGTLRCompute_GuestOsFeature_Type_SecureBoot Value "SECURE_BOOT"
 *    @arg @c kGTLRCompute_GuestOsFeature_Type_SevCapable Value "SEV_CAPABLE"
 *    @arg @c kGTLRCompute_GuestOsFeature_Type_UefiCompatible Value
 *        "UEFI_COMPATIBLE"
 *    @arg @c kGTLRCompute_GuestOsFeature_Type_VirtioScsiMultiqueue Value
 *        "VIRTIO_SCSI_MULTIQUEUE"
 *    @arg @c kGTLRCompute_GuestOsFeature_Type_Windows Value "WINDOWS"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents a Health Check resource. Google Compute Engine has two Health
 *  Check resources: * [Global](/compute/docs/reference/rest/v1/healthChecks) *
 *  [Regional](/compute/docs/reference/rest/v1/regionHealthChecks) Internal
 *  HTTP(S) load balancers must use regional health checks
 *  (`compute.v1.regionHealthChecks`). Traffic Director must use global health
 *  checks (`compute.v1.HealthChecks`). Internal TCP/UDP load balancers can use
 *  either regional or global health checks (`compute.v1.regionHealthChecks` or
 *  `compute.v1.HealthChecks`). External HTTP(S), TCP proxy, and SSL proxy load
 *  balancers as well as managed instance group auto-healing must use global
 *  health checks (`compute.v1.HealthChecks`). Backend service-based network
 *  load balancers must use regional health checks
 *  (`compute.v1.regionHealthChecks`). Target pool-based network load balancers
 *  must use legacy HTTP health checks (`compute.v1.httpHealthChecks`). For more
 *  information, see Health checks overview.
 */
@interface GTLRCompute_HealthCheck : GTLRObject

/**
 *  How often (in seconds) to send a health check. The default value is 5
 *  seconds.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *checkIntervalSec;

/** [Output Only] Creation timestamp in 3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

@property(nonatomic, strong, nullable) GTLRCompute_GRPCHealthCheck *grpcHealthCheck;

/**
 *  A so-far unhealthy instance will be marked healthy after this many
 *  consecutive successes. The default value is 2.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *healthyThreshold;

@property(nonatomic, strong, nullable) GTLRCompute_HTTP2HealthCheck *http2HealthCheck;
@property(nonatomic, strong, nullable) GTLRCompute_HTTPHealthCheck *httpHealthCheck;
@property(nonatomic, strong, nullable) GTLRCompute_HTTPSHealthCheck *httpsHealthCheck;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** Type of the resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Configure logging on this health check. */
@property(nonatomic, strong, nullable) GTLRCompute_HealthCheckLogConfig *logConfig;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035. For example,
 *  a name that is 1-63 characters long, matches the regular expression
 *  `[a-z]([-a-z0-9]*[a-z0-9])?`, and otherwise complies with RFC1035. This
 *  regular expression describes a name where the first character is a lowercase
 *  letter, and all following characters are a dash, lowercase letter, or digit,
 *  except the last character, which isn't a dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] Region where the health check resides. Not applicable to
 *  global health checks.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@property(nonatomic, strong, nullable) GTLRCompute_SSLHealthCheck *sslHealthCheck;
@property(nonatomic, strong, nullable) GTLRCompute_TCPHealthCheck *tcpHealthCheck;

/**
 *  How long (in seconds) to wait before claiming failure. The default value is
 *  5 seconds. It is invalid for timeoutSec to have greater value than
 *  checkIntervalSec.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timeoutSec;

/**
 *  Specifies the type of the healthCheck, either TCP, SSL, HTTP, HTTPS, HTTP2
 *  or GRPC. Exactly one of the protocol-specific health check fields must be
 *  specified, which must match type field.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HealthCheck_Type_Grpc Value "GRPC"
 *    @arg @c kGTLRCompute_HealthCheck_Type_Http Value "HTTP"
 *    @arg @c kGTLRCompute_HealthCheck_Type_Http2 Value "HTTP2"
 *    @arg @c kGTLRCompute_HealthCheck_Type_Https Value "HTTPS"
 *    @arg @c kGTLRCompute_HealthCheck_Type_Invalid Value "INVALID"
 *    @arg @c kGTLRCompute_HealthCheck_Type_Ssl Value "SSL"
 *    @arg @c kGTLRCompute_HealthCheck_Type_Tcp Value "TCP"
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  A so-far healthy instance will be marked unhealthy after this many
 *  consecutive failures. The default value is 2.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unhealthyThreshold;

@end


/**
 *  Contains a list of HealthCheck resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_HealthCheckList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of HealthCheck resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HealthCheck *> *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_HealthCheckList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_HealthCheckList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_PartialSuccess Success
 *        is reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_ResourceNotDeleted One
 *        or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_HealthCheckList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HealthCheckList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_HealthCheckList_Warning_Data_Item
 */
@interface GTLRCompute_HealthCheckList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Configuration of logging on a health check. If logging is enabled, logs will
 *  be exported to Stackdriver.
 */
@interface GTLRCompute_HealthCheckLogConfig : GTLRObject

/**
 *  Indicates whether or not to export logs. This is false by default, which
 *  means no health check logging will be done.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enable;

@end


/**
 *  A full or valid partial URL to a health check. For example, the following
 *  are valid URLs: -
 *  https://www.googleapis.com/compute/beta/projects/project-id/global/httpHealthChecks/health-check
 *  - projects/project-id/global/httpHealthChecks/health-check -
 *  global/httpHealthChecks/health-check
 */
@interface GTLRCompute_HealthCheckReference : GTLRObject

@property(nonatomic, copy, nullable) NSString *healthCheck;

@end


/**
 *  GTLRCompute_HealthChecksAggregatedList
 */
@interface GTLRCompute_HealthChecksAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of HealthChecksScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_HealthChecksAggregatedList_Items *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_HealthChecksAggregatedList_Warning *warning;

@end


/**
 *  A list of HealthChecksScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_HealthChecksScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_HealthChecksAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_HealthChecksAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_HealthChecksAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HealthChecksAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_HealthChecksAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_HealthChecksAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a Health-Check as a Service resource.
 */
@interface GTLRCompute_HealthCheckService : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Fingerprint of this resource. A hash of the contents stored in this object.
 *  This field is used in optimistic locking. This field will be ignored when
 *  inserting a HealthCheckService. An up-to-date fingerprint must be provided
 *  in order to patch/update the HealthCheckService; Otherwise, the request will
 *  fail with error 412 conditionNotMet. To see the latest fingerprint, make a
 *  get() request to retrieve the HealthCheckService.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  A list of URLs to the HealthCheck resources. Must have at least one
 *  HealthCheck, and not more than 10. HealthCheck resources must have
 *  portSpecification=USE_SERVING_PORT or portSpecification=USE_FIXED_PORT. For
 *  regional HealthCheckService, the HealthCheck must be regional and in the
 *  same region. For global HealthCheckService, HealthCheck must be global. Mix
 *  of regional and global HealthChecks is not supported. Multiple regional
 *  HealthChecks must belong to the same region. Regional HealthChecks must
 *  belong to the same region as zones of NEGs.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *healthChecks;

/**
 *  Optional. Policy for how the results from multiple health checks for the
 *  same endpoint are aggregated. Defaults to NO_AGGREGATION if unspecified. -
 *  NO_AGGREGATION. An EndpointHealth message is returned for each pair in the
 *  health check service. - AND. If any health check of an endpoint reports
 *  UNHEALTHY, then UNHEALTHY is the HealthState of the endpoint. If all health
 *  checks report HEALTHY, the HealthState of the endpoint is HEALTHY. .
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HealthCheckService_HealthStatusAggregationPolicy_And
 *        If any backend's health check reports UNHEALTHY, then UNHEALTHY is the
 *        HealthState of the entire health check service. If all backend's are
 *        healthy, the HealthState of the health check service is HEALTHY.
 *        (Value: "AND")
 *    @arg @c kGTLRCompute_HealthCheckService_HealthStatusAggregationPolicy_NoAggregation
 *        An EndpointHealth message is returned for each backend in the health
 *        check service. (Value: "NO_AGGREGATION")
 */
@property(nonatomic, copy, nullable) NSString *healthStatusAggregationPolicy;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output only] Type of the resource. Always compute#healthCheckServicefor
 *  health check services.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. The name must be 1-63 characters long, and comply with
 *  RFC1035. Specifically, the name must be 1-63 characters long and match the
 *  regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
 *  character must be a lowercase letter, and all following characters must be a
 *  dash, lowercase letter, or digit, except the last character, which cannot be
 *  a dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A list of URLs to the NetworkEndpointGroup resources. Must not have more
 *  than 100. For regional HealthCheckService, NEGs must be in zones in the
 *  region of the HealthCheckService.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *networkEndpointGroups;

/**
 *  A list of URLs to the NotificationEndpoint resources. Must not have more
 *  than 10. A list of endpoints for receiving notifications of change in health
 *  status. For regional HealthCheckService, NotificationEndpoint must be
 *  regional and in the same region. For global HealthCheckService,
 *  NotificationEndpoint must be global.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *notificationEndpoints;

/**
 *  [Output Only] URL of the region where the health check service resides. This
 *  field is not applicable to global health check services. You must specify
 *  this field as part of the HTTP request URL. It is not settable as a field in
 *  the request body.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end


/**
 *  A full or valid partial URL to a health check service. For example, the
 *  following are valid URLs: -
 *  https://www.googleapis.com/compute/beta/projects/project-id/regions/us-west1/healthCheckServices/health-check-service
 *  -
 *  projects/project-id/regions/us-west1/healthCheckServices/health-check-service
 *  - regions/us-west1/healthCheckServices/health-check-service
 */
@interface GTLRCompute_HealthCheckServiceReference : GTLRObject

@property(nonatomic, copy, nullable) NSString *healthCheckService;

@end


/**
 *  GTLRCompute_HealthCheckServicesList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_HealthCheckServicesList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of HealthCheckService resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HealthCheckService *> *items;

/**
 *  [Output Only] Type of the resource. Always compute#healthCheckServicesList
 *  for lists of HealthCheckServices.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_HealthCheckServicesList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_HealthCheckServicesList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_HealthCheckServicesList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HealthCheckServicesList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_HealthCheckServicesList_Warning_Data_Item
 */
@interface GTLRCompute_HealthCheckServicesList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_HealthChecksScopedList
 */
@interface GTLRCompute_HealthChecksScopedList : GTLRObject

/** A list of HealthChecks contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HealthCheck *> *healthChecks;

/**
 *  Informational warning which replaces the list of backend services when the
 *  list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HealthChecksScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of backend services when the
 *  list is empty.
 */
@interface GTLRCompute_HealthChecksScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_HealthChecksScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HealthChecksScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_HealthChecksScopedList_Warning_Data_Item
 */
@interface GTLRCompute_HealthChecksScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_HealthStatus
 */
@interface GTLRCompute_HealthStatus : GTLRObject

/** Metadata defined as annotations for network endpoint. */
@property(nonatomic, strong, nullable) GTLRCompute_HealthStatus_Annotations *annotations;

/**
 *  URL of the forwarding rule associated with the health status of the
 *  instance.
 */
@property(nonatomic, copy, nullable) NSString *forwardingRule;

/** A forwarding rule IP address assigned to this instance. */
@property(nonatomic, copy, nullable) NSString *forwardingRuleIp;

/**
 *  Health state of the instance.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HealthStatus_HealthState_Healthy Value "HEALTHY"
 *    @arg @c kGTLRCompute_HealthStatus_HealthState_Unhealthy Value "UNHEALTHY"
 */
@property(nonatomic, copy, nullable) NSString *healthState;

/** URL of the instance resource. */
@property(nonatomic, copy, nullable) NSString *instance;

/**
 *  For target pool based Network Load Balancing, it indicates the forwarding
 *  rule's IP address assigned to this instance. For other types of load
 *  balancing, the field indicates VM internal ip.
 */
@property(nonatomic, copy, nullable) NSString *ipAddress;

/**
 *  The named port of the instance group, not necessarily the port that is
 *  health-checked.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

@property(nonatomic, copy, nullable) NSString *weight;

/**
 *  weightError
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HealthStatus_WeightError_InvalidWeight The response
 *        to a Health Check probe had the HTTP response header field
 *        X-Load-Balancing-Endpoint-Weight, but its content was invalid (i.e.,
 *        not a non-negative single-precision floating-point number in decimal
 *        string representation). (Value: "INVALID_WEIGHT")
 *    @arg @c kGTLRCompute_HealthStatus_WeightError_MissingWeight The response
 *        to a Health Check probe did not have the HTTP response header field
 *        X-Load-Balancing-Endpoint-Weight. (Value: "MISSING_WEIGHT")
 *    @arg @c kGTLRCompute_HealthStatus_WeightError_UnavailableWeight This is
 *        the value when the accompanied health status is either TIMEOUT
 *        (i.e.,the Health Check probe was not able to get a response in time)
 *        or UNKNOWN. For the latter, it should be typically because there has
 *        not been sufficient time to parse and report the weight for a new
 *        backend (which is with 0.0.0.0 ip address). However, it can be also
 *        due to an outage case for which the health status is explicitly reset
 *        to UNKNOWN. (Value: "UNAVAILABLE_WEIGHT")
 *    @arg @c kGTLRCompute_HealthStatus_WeightError_WeightNone This is the
 *        default value when WeightReportMode is DISABLE, and is also the
 *        initial value when WeightReportMode has just updated to ENABLE or
 *        DRY_RUN and there has not been sufficient time to parse and report the
 *        backend weight. (Value: "WEIGHT_NONE")
 */
@property(nonatomic, copy, nullable) NSString *weightError;

@end


/**
 *  Metadata defined as annotations for network endpoint.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_HealthStatus_Annotations : GTLRObject
@end


/**
 *  GTLRCompute_HealthStatusForNetworkEndpoint
 */
@interface GTLRCompute_HealthStatusForNetworkEndpoint : GTLRObject

/**
 *  URL of the backend service associated with the health state of the network
 *  endpoint.
 */
@property(nonatomic, strong, nullable) GTLRCompute_BackendServiceReference *backendService;

/**
 *  URL of the forwarding rule associated with the health state of the network
 *  endpoint.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ForwardingRuleReference *forwardingRule;

/**
 *  URL of the health check associated with the health state of the network
 *  endpoint.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HealthCheckReference *healthCheck;

/**
 *  URL of the health check service associated with the health state of the
 *  network endpoint.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HealthCheckServiceReference *healthCheckService;

/**
 *  Health state of the network endpoint determined based on the health checks
 *  configured.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HealthStatusForNetworkEndpoint_HealthState_Draining
 *        Value "DRAINING"
 *    @arg @c kGTLRCompute_HealthStatusForNetworkEndpoint_HealthState_Healthy
 *        Value "HEALTHY"
 *    @arg @c kGTLRCompute_HealthStatusForNetworkEndpoint_HealthState_Unhealthy
 *        Value "UNHEALTHY"
 *    @arg @c kGTLRCompute_HealthStatusForNetworkEndpoint_HealthState_Unknown
 *        Value "UNKNOWN"
 */
@property(nonatomic, copy, nullable) NSString *healthState;

@end


/**
 *  Provides links to documentation or for performing an out of band action. For
 *  example, if a quota check failed with an error indicating the calling
 *  project hasn't enabled the accessed service, this can contain a URL pointing
 *  directly to the right place in the developer console to flip the bit.
 */
@interface GTLRCompute_Help : GTLRObject

/**
 *  URL(s) pointing to additional information on handling the current error.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HelpLink *> *links;

@end


/**
 *  Describes a URL link.
 */
@interface GTLRCompute_HelpLink : GTLRObject

/**
 *  Describes what the link offers.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The URL of the link. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  UrlMaps A host-matching rule for a URL. If matched, will use the named
 *  PathMatcher to select the BackendService.
 */
@interface GTLRCompute_HostRule : GTLRObject

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The list of host patterns to match. They must be valid hostnames with
 *  optional port numbers in the format host:port. * matches any string of
 *  ([a-z0-9-.]*). In that case, * must be the first character, and if followed
 *  by anything, the immediate following character must be either - or .. *
 *  based matching is not supported when the URL map is bound to a target gRPC
 *  proxy that has the validateForProxyless field set to true.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *hosts;

/**
 *  The name of the PathMatcher to use to match the path portion of the URL if
 *  the hostRule matches the URL's host portion.
 */
@property(nonatomic, copy, nullable) NSString *pathMatcher;

@end


/**
 *  GTLRCompute_HTTP2HealthCheck
 */
@interface GTLRCompute_HTTP2HealthCheck : GTLRObject

/**
 *  The value of the host header in the HTTP/2 health check request. If left
 *  empty (default value), the host header is set to the destination IP address
 *  to which health check packets are sent. The destination IP address depends
 *  on the type of load balancer. For details, see:
 *  https://cloud.google.com/load-balancing/docs/health-check-concepts#hc-packet-dest
 */
@property(nonatomic, copy, nullable) NSString *host;

/**
 *  The TCP port number to which the health check prober sends packets. The
 *  default value is 443. Valid values are 1 through 65535.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

/** Not supported. */
@property(nonatomic, copy, nullable) NSString *portName;

/**
 *  Specifies how a port is selected for health checking. Can be one of the
 *  following values: USE_FIXED_PORT: Specifies a port number explicitly using
 *  the port field in the health check. Supported by backend services for
 *  pass-through load balancers and backend services for proxy load balancers.
 *  Not supported by target pools. The health check supports all backends
 *  supported by the backend service provided the backend can be health checked.
 *  For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network
 *  endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported.
 *  USE_SERVING_PORT: Provides an indirect method of specifying the health check
 *  port by referring to the backend service. Only supported by backend services
 *  for proxy load balancers. Not supported by target pools. Not supported by
 *  backend services for pass-through load balancers. Supports all backends that
 *  can be health checked; for example, GCE_VM_IP_PORT network endpoint groups
 *  and instance group backends. For GCE_VM_IP_PORT network endpoint group
 *  backends, the health check uses the port number specified for each endpoint
 *  in the network endpoint group. For instance group backends, the health check
 *  uses the port number determined by looking up the backend service's named
 *  port in the instance group's list of named ports.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HTTP2HealthCheck_PortSpecification_UseFixedPort The
 *        port number in the health check's port is used for health checking.
 *        Applies to network endpoint group and instance group backends. (Value:
 *        "USE_FIXED_PORT")
 *    @arg @c kGTLRCompute_HTTP2HealthCheck_PortSpecification_UseNamedPort Not
 *        supported. (Value: "USE_NAMED_PORT")
 *    @arg @c kGTLRCompute_HTTP2HealthCheck_PortSpecification_UseServingPort For
 *        network endpoint group backends, the health check uses the port number
 *        specified on each endpoint in the network endpoint group. For instance
 *        group backends, the health check uses the port number specified for
 *        the backend service's named port defined in the instance group's named
 *        ports. (Value: "USE_SERVING_PORT")
 */
@property(nonatomic, copy, nullable) NSString *portSpecification;

/**
 *  Specifies the type of proxy header to append before sending data to the
 *  backend, either NONE or PROXY_V1. The default is NONE.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HTTP2HealthCheck_ProxyHeader_None Value "NONE"
 *    @arg @c kGTLRCompute_HTTP2HealthCheck_ProxyHeader_ProxyV1 Value "PROXY_V1"
 */
@property(nonatomic, copy, nullable) NSString *proxyHeader;

/**
 *  The request path of the HTTP/2 health check request. The default value is /.
 */
@property(nonatomic, copy, nullable) NSString *requestPath;

/**
 *  Creates a content-based HTTP/2 health check. In addition to the required
 *  HTTP 200 (OK) status code, you can configure the health check to pass only
 *  when the backend sends this specific ASCII response string within the first
 *  1024 bytes of the HTTP response body. For details, see:
 *  https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-http
 */
@property(nonatomic, copy, nullable) NSString *response;

@end


/**
 *  Specification for how requests are aborted as part of fault injection.
 */
@interface GTLRCompute_HttpFaultAbort : GTLRObject

/**
 *  The HTTP status code used to abort the request. The value must be from 200
 *  to 599 inclusive. For gRPC protocol, the gRPC status code is mapped to HTTP
 *  status code according to this mapping table. HTTP status 200 is mapped to
 *  gRPC status UNKNOWN. Injecting an OK status is currently not supported by
 *  Traffic Director.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *httpStatus;

/**
 *  The percentage of traffic for connections, operations, or requests that is
 *  aborted as part of fault injection. The value must be from 0.0 to 100.0
 *  inclusive.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *percentage;

@end


/**
 *  Specifies the delay introduced by the load balancer before forwarding the
 *  request to the backend service as part of fault injection.
 */
@interface GTLRCompute_HttpFaultDelay : GTLRObject

/** Specifies the value of the fixed delay interval. */
@property(nonatomic, strong, nullable) GTLRCompute_Duration *fixedDelay;

/**
 *  The percentage of traffic for connections, operations, or requests for which
 *  a delay is introduced as part of fault injection. The value must be from 0.0
 *  to 100.0 inclusive.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *percentage;

@end


/**
 *  The specification for fault injection introduced into traffic to test the
 *  resiliency of clients to backend service failure. As part of fault
 *  injection, when clients send requests to a backend service, delays can be
 *  introduced by the load balancer on a percentage of requests before sending
 *  those request to the backend service. Similarly requests from clients can be
 *  aborted by the load balancer for a percentage of requests.
 */
@interface GTLRCompute_HttpFaultInjection : GTLRObject

/**
 *  The specification for how client requests are aborted as part of fault
 *  injection.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HttpFaultAbort *abort;

/**
 *  The specification for how client requests are delayed as part of fault
 *  injection, before being sent to a backend service.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HttpFaultDelay *delay;

@end


/**
 *  The request and response header transformations that take effect before the
 *  request is passed along to the selected backendService.
 */
@interface GTLRCompute_HttpHeaderAction : GTLRObject

/**
 *  Headers to add to a matching request before forwarding the request to the
 *  backendService.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HttpHeaderOption *> *requestHeadersToAdd;

/**
 *  A list of header names for headers that need to be removed from the request
 *  before forwarding the request to the backendService.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *requestHeadersToRemove;

/**
 *  Headers to add the response before sending the response back to the client.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HttpHeaderOption *> *responseHeadersToAdd;

/**
 *  A list of header names for headers that need to be removed from the response
 *  before sending the response back to the client.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *responseHeadersToRemove;

@end


/**
 *  matchRule criteria for request header matches.
 */
@interface GTLRCompute_HttpHeaderMatch : GTLRObject

/**
 *  The value should exactly match contents of exactMatch. Only one of
 *  exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch
 *  must be set.
 */
@property(nonatomic, copy, nullable) NSString *exactMatch;

/**
 *  The name of the HTTP header to match. For matching against the HTTP
 *  request's authority, use a headerMatch with the header name ":authority".
 *  For matching a request's method, use the headerName ":method". When the URL
 *  map is bound to a target gRPC proxy that has the validateForProxyless field
 *  set to true, only non-binary user-specified custom metadata and the
 *  `content-type` header are supported. The following transport-level headers
 *  cannot be used in header matching rules: `:authority`, `:method`, `:path`,
 *  `:scheme`, `user-agent`, `accept-encoding`, `content-encoding`,
 *  `grpc-accept-encoding`, `grpc-encoding`, `grpc-previous-rpc-attempts`,
 *  `grpc-tags-bin`, `grpc-timeout` and `grpc-trace-bin`.
 */
@property(nonatomic, copy, nullable) NSString *headerName;

/**
 *  If set to false, the headerMatch is considered a match if the preceding
 *  match criteria are met. If set to true, the headerMatch is considered a
 *  match if the preceding match criteria are NOT met. The default setting is
 *  false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *invertMatch;

/**
 *  The value of the header must start with the contents of prefixMatch. Only
 *  one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or
 *  rangeMatch must be set.
 */
@property(nonatomic, copy, nullable) NSString *prefixMatch;

/**
 *  A header with the contents of headerName must exist. The match takes place
 *  whether or not the request's header has a value. Only one of exactMatch,
 *  prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be
 *  set.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *presentMatch;

/**
 *  The header value must be an integer and its value must be in the range
 *  specified in rangeMatch. If the header does not contain an integer, number
 *  or is empty, the match fails. For example for a range [-5, 0] - -3 will
 *  match. - 0 will not match. - 0.25 will not match. - -3someString will not
 *  match. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch,
 *  presentMatch or rangeMatch must be set. rangeMatch is not supported for load
 *  balancers that have loadBalancingScheme set to EXTERNAL.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Int64RangeMatch *rangeMatch;

/**
 *  The value of the header must match the regular expression specified in
 *  regexMatch. For more information about regular expression syntax, see
 *  Syntax. For matching against a port specified in the HTTP request, use a
 *  headerMatch with headerName set to PORT and a regular expression that
 *  satisfies the RFC2616 Host header's port specifier. Only one of exactMatch,
 *  prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be
 *  set. Regular expressions can only be used when the loadBalancingScheme is
 *  set to INTERNAL_SELF_MANAGED.
 */
@property(nonatomic, copy, nullable) NSString *regexMatch;

/**
 *  The value of the header must end with the contents of suffixMatch. Only one
 *  of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or
 *  rangeMatch must be set.
 */
@property(nonatomic, copy, nullable) NSString *suffixMatch;

@end


/**
 *  Specification determining how headers are added to requests or responses.
 */
@interface GTLRCompute_HttpHeaderOption : GTLRObject

/** The name of the header. */
@property(nonatomic, copy, nullable) NSString *headerName;

/** The value of the header to add. */
@property(nonatomic, copy, nullable) NSString *headerValue;

/**
 *  If false, headerValue is appended to any values that already exist for the
 *  header. If true, headerValue is set for the header, discarding any values
 *  that were set for that header. The default value is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *replace;

@end


/**
 *  GTLRCompute_HTTPHealthCheck
 */
@interface GTLRCompute_HTTPHealthCheck : GTLRObject

/**
 *  The value of the host header in the HTTP health check request. If left empty
 *  (default value), the host header is set to the destination IP address to
 *  which health check packets are sent. The destination IP address depends on
 *  the type of load balancer. For details, see:
 *  https://cloud.google.com/load-balancing/docs/health-check-concepts#hc-packet-dest
 */
@property(nonatomic, copy, nullable) NSString *host;

/**
 *  The TCP port number to which the health check prober sends packets. The
 *  default value is 80. Valid values are 1 through 65535.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

/** Not supported. */
@property(nonatomic, copy, nullable) NSString *portName;

/**
 *  Specifies how a port is selected for health checking. Can be one of the
 *  following values: USE_FIXED_PORT: Specifies a port number explicitly using
 *  the port field in the health check. Supported by backend services for
 *  pass-through load balancers and backend services for proxy load balancers.
 *  Also supported in legacy HTTP health checks for target pools. The health
 *  check supports all backends supported by the backend service provided the
 *  backend can be health checked. For example, GCE_VM_IP network endpoint
 *  groups, GCE_VM_IP_PORT network endpoint groups, and instance group backends.
 *  USE_NAMED_PORT: Not supported. USE_SERVING_PORT: Provides an indirect method
 *  of specifying the health check port by referring to the backend service.
 *  Only supported by backend services for proxy load balancers. Not supported
 *  by target pools. Not supported by backend services for pass-through load
 *  balancers. Supports all backends that can be health checked; for example,
 *  GCE_VM_IP_PORT network endpoint groups and instance group backends. For
 *  GCE_VM_IP_PORT network endpoint group backends, the health check uses the
 *  port number specified for each endpoint in the network endpoint group. For
 *  instance group backends, the health check uses the port number determined by
 *  looking up the backend service's named port in the instance group's list of
 *  named ports.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HTTPHealthCheck_PortSpecification_UseFixedPort The
 *        port number in the health check's port is used for health checking.
 *        Applies to network endpoint group and instance group backends. (Value:
 *        "USE_FIXED_PORT")
 *    @arg @c kGTLRCompute_HTTPHealthCheck_PortSpecification_UseNamedPort Not
 *        supported. (Value: "USE_NAMED_PORT")
 *    @arg @c kGTLRCompute_HTTPHealthCheck_PortSpecification_UseServingPort For
 *        network endpoint group backends, the health check uses the port number
 *        specified on each endpoint in the network endpoint group. For instance
 *        group backends, the health check uses the port number specified for
 *        the backend service's named port defined in the instance group's named
 *        ports. (Value: "USE_SERVING_PORT")
 */
@property(nonatomic, copy, nullable) NSString *portSpecification;

/**
 *  Specifies the type of proxy header to append before sending data to the
 *  backend, either NONE or PROXY_V1. The default is NONE.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HTTPHealthCheck_ProxyHeader_None Value "NONE"
 *    @arg @c kGTLRCompute_HTTPHealthCheck_ProxyHeader_ProxyV1 Value "PROXY_V1"
 */
@property(nonatomic, copy, nullable) NSString *proxyHeader;

/**
 *  The request path of the HTTP health check request. The default value is /.
 */
@property(nonatomic, copy, nullable) NSString *requestPath;

/**
 *  Creates a content-based HTTP health check. In addition to the required HTTP
 *  200 (OK) status code, you can configure the health check to pass only when
 *  the backend sends this specific ASCII response string within the first 1024
 *  bytes of the HTTP response body. For details, see:
 *  https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-http
 */
@property(nonatomic, copy, nullable) NSString *response;

@end


/**
 *  Represents a legacy HTTP Health Check resource. Legacy HTTP health checks
 *  are now only required by target pool-based network load balancers. For all
 *  other load balancers, including backend service-based network load
 *  balancers, and for managed instance group auto-healing, you must use modern
 *  (non-legacy) health checks. For more information, see Health checks overview
 *  .
 */
@interface GTLRCompute_HttpHealthCheck : GTLRObject

/**
 *  How often (in seconds) to send a health check. The default value is 5
 *  seconds.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *checkIntervalSec;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  A so-far unhealthy instance will be marked healthy after this many
 *  consecutive successes. The default value is 2.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *healthyThreshold;

/**
 *  The value of the host header in the HTTP health check request. If left empty
 *  (default value), the public IP on behalf of which this health check is
 *  performed will be used.
 */
@property(nonatomic, copy, nullable) NSString *host;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#httpHealthCheck for HTTP
 *  health checks.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The TCP port number for the HTTP health check request. The default value is
 *  80.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

/**
 *  The request path of the HTTP health check request. The default value is /.
 *  This field does not support query parameters.
 */
@property(nonatomic, copy, nullable) NSString *requestPath;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  How long (in seconds) to wait before claiming failure. The default value is
 *  5 seconds. It is invalid for timeoutSec to have greater value than
 *  checkIntervalSec.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timeoutSec;

/**
 *  A so-far healthy instance will be marked unhealthy after this many
 *  consecutive failures. The default value is 2.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unhealthyThreshold;

@end


/**
 *  Contains a list of HttpHealthCheck resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_HttpHealthCheckList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of HttpHealthCheck resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HttpHealthCheck *> *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_HttpHealthCheckList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_HttpHealthCheckList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_HttpHealthCheckList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HttpHealthCheckList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_HttpHealthCheckList_Warning_Data_Item
 */
@interface GTLRCompute_HttpHealthCheckList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  HttpRouteRuleMatch criteria for a request's query parameter.
 */
@interface GTLRCompute_HttpQueryParameterMatch : GTLRObject

/**
 *  The queryParameterMatch matches if the value of the parameter exactly
 *  matches the contents of exactMatch. Only one of presentMatch, exactMatch, or
 *  regexMatch must be set.
 */
@property(nonatomic, copy, nullable) NSString *exactMatch;

/**
 *  The name of the query parameter to match. The query parameter must exist in
 *  the request, in the absence of which the request match fails.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Specifies that the queryParameterMatch matches if the request contains the
 *  query parameter, irrespective of whether the parameter has a value or not.
 *  Only one of presentMatch, exactMatch, or regexMatch must be set.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *presentMatch;

/**
 *  The queryParameterMatch matches if the value of the parameter matches the
 *  regular expression specified by regexMatch. For more information about
 *  regular expression syntax, see Syntax. Only one of presentMatch, exactMatch,
 *  or regexMatch must be set. Regular expressions can only be used when the
 *  loadBalancingScheme is set to INTERNAL_SELF_MANAGED.
 */
@property(nonatomic, copy, nullable) NSString *regexMatch;

@end


/**
 *  Specifies settings for an HTTP redirect.
 */
@interface GTLRCompute_HttpRedirectAction : GTLRObject

/**
 *  The host that is used in the redirect response instead of the one that was
 *  supplied in the request. The value must be from 1 to 255 characters.
 */
@property(nonatomic, copy, nullable) NSString *hostRedirect;

/**
 *  If set to true, the URL scheme in the redirected request is set to HTTPS. If
 *  set to false, the URL scheme of the redirected request remains the same as
 *  that of the request. This must only be set for URL maps used in
 *  TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted.
 *  The default is set to false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *httpsRedirect;

/**
 *  The path that is used in the redirect response instead of the one that was
 *  supplied in the request. pathRedirect cannot be supplied together with
 *  prefixRedirect. Supply one alone or neither. If neither is supplied, the
 *  path of the original request is used for the redirect. The value must be
 *  from 1 to 1024 characters.
 */
@property(nonatomic, copy, nullable) NSString *pathRedirect;

/**
 *  The prefix that replaces the prefixMatch specified in the
 *  HttpRouteRuleMatch, retaining the remaining portion of the URL before
 *  redirecting the request. prefixRedirect cannot be supplied together with
 *  pathRedirect. Supply one alone or neither. If neither is supplied, the path
 *  of the original request is used for the redirect. The value must be from 1
 *  to 1024 characters.
 */
@property(nonatomic, copy, nullable) NSString *prefixRedirect;

/**
 *  The HTTP Status code to use for this RedirectAction. Supported values are: -
 *  MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to
 *  301. - FOUND, which corresponds to 302. - SEE_OTHER which corresponds to
 *  303. - TEMPORARY_REDIRECT, which corresponds to 307. In this case, the
 *  request method is retained. - PERMANENT_REDIRECT, which corresponds to 308.
 *  In this case, the request method is retained.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HttpRedirectAction_RedirectResponseCode_Found Http
 *        Status Code 302 - Found. (Value: "FOUND")
 *    @arg @c kGTLRCompute_HttpRedirectAction_RedirectResponseCode_MovedPermanentlyDefault
 *        Http Status Code 301 - Moved Permanently. (Value:
 *        "MOVED_PERMANENTLY_DEFAULT")
 *    @arg @c kGTLRCompute_HttpRedirectAction_RedirectResponseCode_PermanentRedirect
 *        Http Status Code 308 - Permanent Redirect maintaining HTTP method.
 *        (Value: "PERMANENT_REDIRECT")
 *    @arg @c kGTLRCompute_HttpRedirectAction_RedirectResponseCode_SeeOther Http
 *        Status Code 303 - See Other. (Value: "SEE_OTHER")
 *    @arg @c kGTLRCompute_HttpRedirectAction_RedirectResponseCode_TemporaryRedirect
 *        Http Status Code 307 - Temporary Redirect maintaining HTTP method.
 *        (Value: "TEMPORARY_REDIRECT")
 */
@property(nonatomic, copy, nullable) NSString *redirectResponseCode;

/**
 *  If set to true, any accompanying query portion of the original URL is
 *  removed before redirecting the request. If set to false, the query portion
 *  of the original URL is retained. The default is set to false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *stripQuery;

@end


/**
 *  The retry policy associates with HttpRouteRule
 */
@interface GTLRCompute_HttpRetryPolicy : GTLRObject

/**
 *  Specifies the allowed number retries. This number must be > 0. If not
 *  specified, defaults to 1.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numRetries;

/**
 *  Specifies a non-zero timeout per retry attempt. If not specified, will use
 *  the timeout set in the HttpRouteAction field. If timeout in the
 *  HttpRouteAction field is not set, this field uses the largest timeout among
 *  all backend services associated with the route. Not supported when the URL
 *  map is bound to a target gRPC proxy that has the validateForProxyless field
 *  set to true.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Duration *perTryTimeout;

/**
 *  Specifies one or more conditions when this retry policy applies. Valid
 *  values are: - 5xx: retry is attempted if the instance or endpoint responds
 *  with any 5xx response code, or if the instance or endpoint does not respond
 *  at all. For example, disconnects, reset, read timeout, connection failure,
 *  and refused streams. - gateway-error: Similar to 5xx, but only applies to
 *  response codes 502, 503 or 504. - connect-failure: a retry is attempted on
 *  failures connecting to the instance or endpoint. For example, connection
 *  timeouts. - retriable-4xx: a retry is attempted if the instance or endpoint
 *  responds with a 4xx response code. The only error that you can retry is
 *  error code 409. - refused-stream: a retry is attempted if the instance or
 *  endpoint resets the stream with a REFUSED_STREAM error code. This reset type
 *  indicates that it is safe to retry. - cancelled: a retry is attempted if the
 *  gRPC status code in the response header is set to cancelled. -
 *  deadline-exceeded: a retry is attempted if the gRPC status code in the
 *  response header is set to deadline-exceeded. - internal: a retry is
 *  attempted if the gRPC status code in the response header is set to internal.
 *  - resource-exhausted: a retry is attempted if the gRPC status code in the
 *  response header is set to resource-exhausted. - unavailable: a retry is
 *  attempted if the gRPC status code in the response header is set to
 *  unavailable. Only the following codes are supported when the URL map is
 *  bound to target gRPC proxy that has validateForProxyless field set to true.
 *  - cancelled - deadline-exceeded - internal - resource-exhausted -
 *  unavailable
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *retryConditions;

@end


/**
 *  GTLRCompute_HttpRouteAction
 */
@interface GTLRCompute_HttpRouteAction : GTLRObject

/**
 *  The specification for allowing client-side cross-origin requests. For more
 *  information about the W3C recommendation for cross-origin resource sharing
 *  (CORS), see Fetch API Living Standard. Not supported when the URL map is
 *  bound to a target gRPC proxy.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CorsPolicy *corsPolicy;

/**
 *  The specification for fault injection introduced into traffic to test the
 *  resiliency of clients to backend service failure. As part of fault
 *  injection, when clients send requests to a backend service, delays can be
 *  introduced by a load balancer on a percentage of requests before sending
 *  those requests to the backend service. Similarly requests from clients can
 *  be aborted by the load balancer for a percentage of requests. timeout and
 *  retry_policy is ignored by clients that are configured with a
 *  fault_injection_policy if: 1. The traffic is generated by fault injection
 *  AND 2. The fault injection is not a delay fault injection. Fault injection
 *  is not supported with the global external HTTP(S) load balancer (classic).
 *  To see which load balancers support fault injection, see Load balancing:
 *  Routing and traffic management features.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HttpFaultInjection *faultInjectionPolicy;

/**
 *  Specifies the maximum duration (timeout) for streams on the selected route.
 *  Unlike the timeout field where the timeout duration starts from the time the
 *  request has been fully processed (known as *end-of-stream*), the duration in
 *  this field is computed from the beginning of the stream until the response
 *  has been processed, including all retries. A stream that does not complete
 *  in this duration is closed. If not specified, this field uses the maximum
 *  maxStreamDuration value among all backend services associated with the
 *  route. This field is only allowed if the Url map is used with backend
 *  services with loadBalancingScheme set to INTERNAL_SELF_MANAGED.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Duration *maxStreamDuration;

/**
 *  Specifies the policy on how requests intended for the route's backends are
 *  shadowed to a separate mirrored backend service. The load balancer does not
 *  wait for responses from the shadow service. Before sending traffic to the
 *  shadow service, the host / authority header is suffixed with -shadow. Not
 *  supported when the URL map is bound to a target gRPC proxy that has the
 *  validateForProxyless field set to true.
 */
@property(nonatomic, strong, nullable) GTLRCompute_RequestMirrorPolicy *requestMirrorPolicy;

/** Specifies the retry policy associated with this route. */
@property(nonatomic, strong, nullable) GTLRCompute_HttpRetryPolicy *retryPolicy;

/**
 *  Specifies the timeout for the selected route. Timeout is computed from the
 *  time the request has been fully processed (known as *end-of-stream*) up
 *  until the response has been processed. Timeout includes all retries. If not
 *  specified, this field uses the largest timeout among all backend services
 *  associated with the route. Not supported when the URL map is bound to a
 *  target gRPC proxy that has validateForProxyless field set to true.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Duration *timeout;

/**
 *  The spec to modify the URL of the request, before forwarding the request to
 *  the matched service. urlRewrite is the only action supported in UrlMaps for
 *  external HTTP(S) load balancers. Not supported when the URL map is bound to
 *  a target gRPC proxy that has the validateForProxyless field set to true.
 */
@property(nonatomic, strong, nullable) GTLRCompute_UrlRewrite *urlRewrite;

/**
 *  A list of weighted backend services to send traffic to when a route match
 *  occurs. The weights determine the fraction of traffic that flows to their
 *  corresponding backend service. If all traffic needs to go to a single
 *  backend service, there must be one weightedBackendService with weight set to
 *  a non-zero number. After a backend service is identified and before
 *  forwarding the request to the backend service, advanced routing actions such
 *  as URL rewrites and header transformations are applied depending on
 *  additional settings specified in this HttpRouteAction.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_WeightedBackendService *> *weightedBackendServices;

@end


/**
 *  The HttpRouteRule setting specifies how to match an HTTP request and the
 *  corresponding routing action that load balancing proxies perform.
 */
@interface GTLRCompute_HttpRouteRule : GTLRObject

/**
 *  The short description conveying the intent of this routeRule. The
 *  description can have a maximum length of 1024 characters.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Specifies changes to request and response headers that need to take effect
 *  for the selected backendService. The headerAction value specified here is
 *  applied before the matching pathMatchers[].headerAction and after
 *  pathMatchers[].routeRules[].routeAction.weightedBackendService.backendServiceWeightAction[].headerAction
 *  HeaderAction is not supported for load balancers that have their
 *  loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound
 *  to a target gRPC proxy that has validateForProxyless field set to true.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HttpHeaderAction *headerAction;

/**
 *  The list of criteria for matching attributes of a request to this routeRule.
 *  This list has OR semantics: the request matches this routeRule when any of
 *  the matchRules are satisfied. However predicates within a given matchRule
 *  have AND semantics. All predicates within a matchRule must match for the
 *  request to match the rule.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HttpRouteRuleMatch *> *matchRules;

/**
 *  For routeRules within a given pathMatcher, priority determines the order in
 *  which a load balancer interprets routeRules. RouteRules are evaluated in
 *  order of priority, from the lowest to highest number. The priority of a rule
 *  decreases as its number increases (1, 2, 3, N+1). The first rule that
 *  matches the request is applied. You cannot configure two or more routeRules
 *  with the same priority. Priority for each rule must be set to a number from
 *  0 to 2147483647 inclusive. Priority numbers can have gaps, which enable you
 *  to add or remove rules in the future without affecting the rest of the
 *  rules. For example, 1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority
 *  numbers to which you could add rules numbered from 6 to 8, 10 to 11, and 13
 *  to 15 in the future without any impact on existing rules.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priority;

/**
 *  In response to a matching matchRule, the load balancer performs advanced
 *  routing actions, such as URL rewrites and header transformations, before
 *  forwarding the request to the selected backend. If routeAction specifies any
 *  weightedBackendServices, service must not be set. Conversely if service is
 *  set, routeAction cannot contain any weightedBackendServices. Only one of
 *  urlRedirect, service or routeAction.weightedBackendService must be set. URL
 *  maps for Classic external HTTP(S) load balancers only support the urlRewrite
 *  action within a route rule's routeAction.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HttpRouteAction *routeAction;

/**
 *  The full or partial URL of the backend service resource to which traffic is
 *  directed if this rule is matched. If routeAction is also specified, advanced
 *  routing actions, such as URL rewrites, take effect before sending the
 *  request to the backend. However, if service is specified, routeAction cannot
 *  contain any weightedBackendServices. Conversely, if routeAction specifies
 *  any weightedBackendServices, service must not be specified. Only one of
 *  urlRedirect, service or routeAction.weightedBackendService must be set.
 */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  When this rule is matched, the request is redirected to a URL specified by
 *  urlRedirect. If urlRedirect is specified, service or routeAction must not be
 *  set. Not supported when the URL map is bound to a target gRPC proxy.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HttpRedirectAction *urlRedirect;

@end


/**
 *  HttpRouteRuleMatch specifies a set of criteria for matching requests to an
 *  HttpRouteRule. All specified criteria must be satisfied for a match to
 *  occur.
 */
@interface GTLRCompute_HttpRouteRuleMatch : GTLRObject

/**
 *  For satisfying the matchRule condition, the path of the request must exactly
 *  match the value specified in fullPathMatch after removing any query
 *  parameters and anchor that may be part of the original URL. fullPathMatch
 *  must be from 1 to 1024 characters. Only one of prefixMatch, fullPathMatch or
 *  regexMatch must be specified.
 */
@property(nonatomic, copy, nullable) NSString *fullPathMatch;

/**
 *  Specifies a list of header match criteria, all of which must match
 *  corresponding headers in the request.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HttpHeaderMatch *> *headerMatches;

/**
 *  Specifies that prefixMatch and fullPathMatch matches are case sensitive. The
 *  default value is false. ignoreCase must not be used with regexMatch. Not
 *  supported when the URL map is bound to a target gRPC proxy.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ignoreCase;

/**
 *  Opaque filter criteria used by the load balancer to restrict routing
 *  configuration to a limited set of xDS compliant clients. In their xDS
 *  requests to the load balancer, xDS clients present node metadata. When there
 *  is a match, the relevant routing configuration is made available to those
 *  proxies. For each metadataFilter in this list, if its filterMatchCriteria is
 *  set to MATCH_ANY, at least one of the filterLabels must match the
 *  corresponding label provided in the metadata. If its filterMatchCriteria is
 *  set to MATCH_ALL, then all of its filterLabels must match with corresponding
 *  labels provided in the metadata. If multiple metadata filters are specified,
 *  all of them need to be satisfied in order to be considered a match.
 *  metadataFilters specified here is applied after those specified in
 *  ForwardingRule that refers to the UrlMap this HttpRouteRuleMatch belongs to.
 *  metadataFilters only applies to load balancers that have loadBalancingScheme
 *  set to INTERNAL_SELF_MANAGED. Not supported when the URL map is bound to a
 *  target gRPC proxy that has validateForProxyless field set to true.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_MetadataFilter *> *metadataFilters;

/**
 *  For satisfying the matchRule condition, the request's path must begin with
 *  the specified prefixMatch. prefixMatch must begin with a /. The value must
 *  be from 1 to 1024 characters. Only one of prefixMatch, fullPathMatch or
 *  regexMatch must be specified.
 */
@property(nonatomic, copy, nullable) NSString *prefixMatch;

/**
 *  Specifies a list of query parameter match criteria, all of which must match
 *  corresponding query parameters in the request. Not supported when the URL
 *  map is bound to a target gRPC proxy.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HttpQueryParameterMatch *> *queryParameterMatches;

/**
 *  For satisfying the matchRule condition, the path of the request must satisfy
 *  the regular expression specified in regexMatch after removing any query
 *  parameters and anchor supplied with the original URL. For more information
 *  about regular expression syntax, see Syntax. Only one of prefixMatch,
 *  fullPathMatch or regexMatch must be specified. Regular expressions can only
 *  be used when the loadBalancingScheme is set to INTERNAL_SELF_MANAGED.
 */
@property(nonatomic, copy, nullable) NSString *regexMatch;

@end


/**
 *  GTLRCompute_HTTPSHealthCheck
 */
@interface GTLRCompute_HTTPSHealthCheck : GTLRObject

/**
 *  The value of the host header in the HTTPS health check request. If left
 *  empty (default value), the host header is set to the destination IP address
 *  to which health check packets are sent. The destination IP address depends
 *  on the type of load balancer. For details, see:
 *  https://cloud.google.com/load-balancing/docs/health-check-concepts#hc-packet-dest
 */
@property(nonatomic, copy, nullable) NSString *host;

/**
 *  The TCP port number to which the health check prober sends packets. The
 *  default value is 443. Valid values are 1 through 65535.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

/** Not supported. */
@property(nonatomic, copy, nullable) NSString *portName;

/**
 *  Specifies how a port is selected for health checking. Can be one of the
 *  following values: USE_FIXED_PORT: Specifies a port number explicitly using
 *  the port field in the health check. Supported by backend services for
 *  pass-through load balancers and backend services for proxy load balancers.
 *  Not supported by target pools. The health check supports all backends
 *  supported by the backend service provided the backend can be health checked.
 *  For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network
 *  endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported.
 *  USE_SERVING_PORT: Provides an indirect method of specifying the health check
 *  port by referring to the backend service. Only supported by backend services
 *  for proxy load balancers. Not supported by target pools. Not supported by
 *  backend services for pass-through load balancers. Supports all backends that
 *  can be health checked; for example, GCE_VM_IP_PORT network endpoint groups
 *  and instance group backends. For GCE_VM_IP_PORT network endpoint group
 *  backends, the health check uses the port number specified for each endpoint
 *  in the network endpoint group. For instance group backends, the health check
 *  uses the port number determined by looking up the backend service's named
 *  port in the instance group's list of named ports.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HTTPSHealthCheck_PortSpecification_UseFixedPort The
 *        port number in the health check's port is used for health checking.
 *        Applies to network endpoint group and instance group backends. (Value:
 *        "USE_FIXED_PORT")
 *    @arg @c kGTLRCompute_HTTPSHealthCheck_PortSpecification_UseNamedPort Not
 *        supported. (Value: "USE_NAMED_PORT")
 *    @arg @c kGTLRCompute_HTTPSHealthCheck_PortSpecification_UseServingPort For
 *        network endpoint group backends, the health check uses the port number
 *        specified on each endpoint in the network endpoint group. For instance
 *        group backends, the health check uses the port number specified for
 *        the backend service's named port defined in the instance group's named
 *        ports. (Value: "USE_SERVING_PORT")
 */
@property(nonatomic, copy, nullable) NSString *portSpecification;

/**
 *  Specifies the type of proxy header to append before sending data to the
 *  backend, either NONE or PROXY_V1. The default is NONE.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HTTPSHealthCheck_ProxyHeader_None Value "NONE"
 *    @arg @c kGTLRCompute_HTTPSHealthCheck_ProxyHeader_ProxyV1 Value "PROXY_V1"
 */
@property(nonatomic, copy, nullable) NSString *proxyHeader;

/**
 *  The request path of the HTTPS health check request. The default value is /.
 */
@property(nonatomic, copy, nullable) NSString *requestPath;

/**
 *  Creates a content-based HTTPS health check. In addition to the required HTTP
 *  200 (OK) status code, you can configure the health check to pass only when
 *  the backend sends this specific ASCII response string within the first 1024
 *  bytes of the HTTP response body. For details, see:
 *  https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-http
 */
@property(nonatomic, copy, nullable) NSString *response;

@end


/**
 *  Represents a legacy HTTPS Health Check resource. Legacy HTTPS health checks
 *  have been deprecated. If you are using a target pool-based network load
 *  balancer, you must use a legacy HTTP (not HTTPS) health check. For all other
 *  load balancers, including backend service-based network load balancers, and
 *  for managed instance group auto-healing, you must use modern (non-legacy)
 *  health checks. For more information, see Health checks overview .
 */
@interface GTLRCompute_HttpsHealthCheck : GTLRObject

/**
 *  How often (in seconds) to send a health check. The default value is 5
 *  seconds.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *checkIntervalSec;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  A so-far unhealthy instance will be marked healthy after this many
 *  consecutive successes. The default value is 2.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *healthyThreshold;

/**
 *  The value of the host header in the HTTPS health check request. If left
 *  empty (default value), the public IP on behalf of which this health check is
 *  performed will be used.
 */
@property(nonatomic, copy, nullable) NSString *host;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** Type of the resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The TCP port number for the HTTPS health check request. The default value is
 *  443.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

/**
 *  The request path of the HTTPS health check request. The default value is
 *  "/".
 */
@property(nonatomic, copy, nullable) NSString *requestPath;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  How long (in seconds) to wait before claiming failure. The default value is
 *  5 seconds. It is invalid for timeoutSec to have a greater value than
 *  checkIntervalSec.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *timeoutSec;

/**
 *  A so-far healthy instance will be marked unhealthy after this many
 *  consecutive failures. The default value is 2.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *unhealthyThreshold;

@end


/**
 *  Contains a list of HttpsHealthCheck resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_HttpsHealthCheckList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of HttpsHealthCheck resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HttpsHealthCheck *> *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_HttpsHealthCheckList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_HttpsHealthCheckList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_HttpsHealthCheckList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HttpsHealthCheckList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_HttpsHealthCheckList_Warning_Data_Item
 */
@interface GTLRCompute_HttpsHealthCheckList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents an Image resource. You can use images to create boot disks for
 *  your VM instances. For more information, read Images.
 */
@interface GTLRCompute_Image : GTLRObject

/**
 *  The architecture of the image. Valid values are ARM64 or X86_64.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Image_Architecture_ArchitectureUnspecified Default
 *        value indicating Architecture is not set. (Value:
 *        "ARCHITECTURE_UNSPECIFIED")
 *    @arg @c kGTLRCompute_Image_Architecture_Arm64 Machines with architecture
 *        ARM64 (Value: "ARM64")
 *    @arg @c kGTLRCompute_Image_Architecture_X8664 Machines with architecture
 *        X86_64 (Value: "X86_64")
 */
@property(nonatomic, copy, nullable) NSString *architecture;

/**
 *  Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *archiveSizeBytes;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/** The deprecation status associated with this image. */
@property(nonatomic, strong, nullable) GTLRCompute_DeprecationStatus *deprecated;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Size of the image when restored onto a persistent disk (in GB).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *diskSizeGb;

/**
 *  The name of the image family to which this image belongs. You can create
 *  disks by specifying an image family instead of a specific image name. The
 *  image family always returns its latest image that is not deprecated. The
 *  name of the image family must comply with RFC1035.
 */
@property(nonatomic, copy, nullable) NSString *family;

/**
 *  A list of features to enable on the guest operating system. Applicable only
 *  for bootable images. To see a list of available options, see the
 *  guestOSfeatures[].type parameter.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_GuestOsFeature *> *guestOsFeatures;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  Encrypts the image using a customer-supplied encryption key. After you
 *  encrypt an image with a customer-supplied key, you must provide the same key
 *  if you use the image later (e.g. to create a disk from the image).
 *  Customer-supplied encryption keys do not protect access to metadata of the
 *  disk. If you do not provide an encryption key when creating the image, then
 *  the disk will be encrypted using an automatically generated key and you do
 *  not need to provide a key to use the image later.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *imageEncryptionKey;

/** [Output Only] Type of the resource. Always compute#image for images. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  A fingerprint for the labels being applied to this image, which is
 *  essentially a hash of the labels used for optimistic locking. The
 *  fingerprint is initially generated by Compute Engine and changes after every
 *  request to modify or update labels. You must always provide an up-to-date
 *  fingerprint hash in order to update or change labels, otherwise the request
 *  will fail with error 412 conditionNotMet. To see the latest fingerprint,
 *  make a get() request to retrieve an image.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *labelFingerprint;

/**
 *  Labels to apply to this image. These can be later modified by the setLabels
 *  method.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Image_Labels *labels;

/**
 *  Integer license codes indicating which licenses are attached to this image.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *licenseCodes;

/** Any applicable license URI. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *licenses;

/**
 *  Name of the resource; provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The parameters of the raw disk image. */
@property(nonatomic, strong, nullable) GTLRCompute_Image_RawDisk *rawDisk;

/**
 *  [Output Only] Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** Set the secure boot keys of shielded instance. */
@property(nonatomic, strong, nullable) GTLRCompute_InitialStateConfig *shieldedInstanceInitialState;

/**
 *  URL of the source disk used to create this image. For example, the following
 *  are valid values: -
 *  https://www.googleapis.com/compute/v1/projects/project/zones/zone
 *  /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk
 *  In order to create an image, you must provide the full or partial URL of one
 *  of the following: - The rawDisk.source URL - The sourceDisk URL - The
 *  sourceImage URL - The sourceSnapshot URL
 */
@property(nonatomic, copy, nullable) NSString *sourceDisk;

/**
 *  The customer-supplied encryption key of the source disk. Required if the
 *  source disk is protected by a customer-supplied encryption key.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *sourceDiskEncryptionKey;

/**
 *  [Output Only] The ID value of the disk used to create this image. This value
 *  may be used to determine whether the image was taken from the current or a
 *  previous instance of a given disk name.
 */
@property(nonatomic, copy, nullable) NSString *sourceDiskId;

/**
 *  URL of the source image used to create this image. The following are valid
 *  formats for the URL: -
 *  https://www.googleapis.com/compute/v1/projects/project_id/global/
 *  images/image_name - projects/project_id/global/images/image_name In order to
 *  create an image, you must provide the full or partial URL of one of the
 *  following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage
 *  URL - The sourceSnapshot URL
 */
@property(nonatomic, copy, nullable) NSString *sourceImage;

/**
 *  The customer-supplied encryption key of the source image. Required if the
 *  source image is protected by a customer-supplied encryption key.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *sourceImageEncryptionKey;

/**
 *  [Output Only] The ID value of the image used to create this image. This
 *  value may be used to determine whether the image was taken from the current
 *  or a previous instance of a given image name.
 */
@property(nonatomic, copy, nullable) NSString *sourceImageId;

/**
 *  URL of the source snapshot used to create this image. The following are
 *  valid formats for the URL: -
 *  https://www.googleapis.com/compute/v1/projects/project_id/global/
 *  snapshots/snapshot_name - projects/project_id/global/snapshots/snapshot_name
 *  In order to create an image, you must provide the full or partial URL of one
 *  of the following: - The rawDisk.source URL - The sourceDisk URL - The
 *  sourceImage URL - The sourceSnapshot URL
 */
@property(nonatomic, copy, nullable) NSString *sourceSnapshot;

/**
 *  The customer-supplied encryption key of the source snapshot. Required if the
 *  source snapshot is protected by a customer-supplied encryption key.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *sourceSnapshotEncryptionKey;

/**
 *  [Output Only] The ID value of the snapshot used to create this image. This
 *  value may be used to determine whether the snapshot was taken from the
 *  current or a previous instance of a given snapshot name.
 */
@property(nonatomic, copy, nullable) NSString *sourceSnapshotId;

/**
 *  The type of the image used to create this disk. The default and only valid
 *  value is RAW.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Image_SourceType_Raw Value "RAW"
 */
@property(nonatomic, copy, nullable) NSString *sourceType;

/**
 *  [Output Only] The status of the image. An image can be used to create other
 *  resources, such as instances, only after the image has been successfully
 *  created and the status is set to READY. Possible values are FAILED, PENDING,
 *  or READY.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Image_Status_Deleting Image is deleting. (Value:
 *        "DELETING")
 *    @arg @c kGTLRCompute_Image_Status_Failed Image creation failed due to an
 *        error. (Value: "FAILED")
 *    @arg @c kGTLRCompute_Image_Status_Pending Image hasn't been created as
 *        yet. (Value: "PENDING")
 *    @arg @c kGTLRCompute_Image_Status_Ready Image has been successfully
 *        created. (Value: "READY")
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  Cloud Storage bucket storage location of the image (regional or
 *  multi-regional).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *storageLocations;

@end


/**
 *  Labels to apply to this image. These can be later modified by the setLabels
 *  method.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_Image_Labels : GTLRObject
@end


/**
 *  The parameters of the raw disk image.
 */
@interface GTLRCompute_Image_RawDisk : GTLRObject

/**
 *  The format used to encode and transmit the block device, which should be
 *  TAR. This is just a container and transmission format and not a runtime
 *  format. Provided by the client when the disk image is created.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Image_RawDisk_ContainerType_Tar Value "TAR"
 */
@property(nonatomic, copy, nullable) NSString *containerType;

/**
 *  [Deprecated] This field is deprecated. An optional SHA1 checksum of the disk
 *  image before unpackaging provided by the client when the disk image is
 *  created.
 */
@property(nonatomic, copy, nullable) NSString *sha1Checksum;

/**
 *  The full Google Cloud Storage URL where the raw disk image archive is
 *  stored. The following are valid formats for the URL: -
 *  https://storage.googleapis.com/bucket_name/image_archive_name -
 *  https://storage.googleapis.com/bucket_name/folder_name/ image_archive_name
 *  In order to create an image, you must provide the full or partial URL of one
 *  of the following: - The rawDisk.source URL - The sourceDisk URL - The
 *  sourceImage URL - The sourceSnapshot URL
 */
@property(nonatomic, copy, nullable) NSString *source;

@end


/**
 *  GTLRCompute_ImageFamilyView
 */
@interface GTLRCompute_ImageFamilyView : GTLRObject

/**
 *  The latest image that is part of the specified image family in the requested
 *  location, and that is not deprecated.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Image *image;

@end


/**
 *  Contains a list of images.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_ImageList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Image resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Image *> *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_ImageList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_ImageList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_DeprecatedResourceUsed A link
 *        to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_InjectedKernelsDeprecated The
 *        operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_NextHopAddressNotAssigned The
 *        route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_NextHopNotRunning The route's
 *        next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_NoResultsOnPage No results are
 *        present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_NotCriticalError Error which
 *        is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_RequiredTosAgreement The user
 *        attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_ResourceNotDeleted One or more
 *        of the resources set to auto-delete could not be deleted because they
 *        were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_SchemaValidationIgnored When a
 *        resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ImageList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ImageList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ImageList_Warning_Data_Item
 */
@interface GTLRCompute_ImageList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Initial State for shielded instance, these are public keys which are safe to
 *  store in public
 */
@interface GTLRCompute_InitialStateConfig : GTLRObject

/** The Key Database (db). */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_FileContentBuffer *> *dbs;

/** The forbidden key database (dbx). */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_FileContentBuffer *> *dbxs;

/** The Key Exchange Key (KEK). */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_FileContentBuffer *> *keks;

/** The Platform Key (PK). */
@property(nonatomic, strong, nullable) GTLRCompute_FileContentBuffer *pk;

@end


/**
 *  Represents an Instance resource. An instance is a virtual machine that is
 *  hosted on Google Cloud Platform. For more information, read Virtual Machine
 *  Instances.
 */
@interface GTLRCompute_Instance : GTLRObject

/** Controls for advanced machine-related behavior features. */
@property(nonatomic, strong, nullable) GTLRCompute_AdvancedMachineFeatures *advancedMachineFeatures;

/**
 *  Allows this instance to send and receive packets with non-matching
 *  destination or source IPs. This is required if you plan to use this instance
 *  to forward routes. For more information, see Enabling IP Forwarding .
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *canIpForward;

@property(nonatomic, strong, nullable) GTLRCompute_ConfidentialInstanceConfig *confidentialInstanceConfig;

/** [Output Only] The CPU platform used by this instance. */
@property(nonatomic, copy, nullable) NSString *cpuPlatform;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  Whether the resource should be protected against deletion.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deletionProtection;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Array of disks associated with this instance. Persistent disks must be
 *  created before you can assign them.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AttachedDisk *> *disks;

/** Enables display device for the instance. */
@property(nonatomic, strong, nullable) GTLRCompute_DisplayDevice *displayDevice;

/**
 *  Specifies a fingerprint for this resource, which is essentially a hash of
 *  the instance's contents and used for optimistic locking. The fingerprint is
 *  initially generated by Compute Engine and changes after every request to
 *  modify or update the instance. You must always provide an up-to-date
 *  fingerprint hash in order to update the instance. To see the latest
 *  fingerprint, make get() request to the instance.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  A list of the type and count of accelerator cards attached to the instance.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AcceleratorConfig *> *guestAccelerators;

/**
 *  Specifies the hostname of the instance. The specified hostname must be
 *  RFC1035 compliant. If hostname is not specified, the default hostname is
 *  [INSTANCE_NAME].c.[PROJECT_ID].internal when using the global DNS, and
 *  [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS.
 */
@property(nonatomic, copy, nullable) NSString *hostname;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  KeyRevocationActionType of the instance. Supported options are "STOP" and
 *  "NONE". The default value is "NONE" if it is not specified.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Instance_KeyRevocationActionType_KeyRevocationActionTypeUnspecified
 *        Default value. This value is unused. (Value:
 *        "KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCompute_Instance_KeyRevocationActionType_None Indicates user
 *        chose no operation. (Value: "NONE")
 *    @arg @c kGTLRCompute_Instance_KeyRevocationActionType_Stop Indicates user
 *        chose to opt for VM shutdown on key revocation. (Value: "STOP")
 */
@property(nonatomic, copy, nullable) NSString *keyRevocationActionType;

/**
 *  [Output Only] Type of the resource. Always compute#instance for instances.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  A fingerprint for this request, which is essentially a hash of the label's
 *  contents and used for optimistic locking. The fingerprint is initially
 *  generated by Compute Engine and changes after every request to modify or
 *  update labels. You must always provide an up-to-date fingerprint hash in
 *  order to update or change labels. To see the latest fingerprint, make get()
 *  request to the instance.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *labelFingerprint;

/**
 *  Labels to apply to this instance. These can be later modified by the
 *  setLabels method.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Instance_Labels *labels;

/** [Output Only] Last start timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *lastStartTimestamp;

/** [Output Only] Last stop timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *lastStopTimestamp;

/** [Output Only] Last suspended timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *lastSuspendedTimestamp;

/**
 *  Full or partial URL of the machine type resource to use for this instance,
 *  in the format: zones/zone/machineTypes/machine-type. This is provided by the
 *  client when the instance is created. For example, the following is a valid
 *  partial url to a predefined machine type:
 *  zones/us-central1-f/machineTypes/n1-standard-1 To create a custom machine
 *  type, provide a URL to a machine type in the following format, where CPUS is
 *  1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total
 *  memory for this instance. Memory must be a multiple of 256 MB and must be
 *  supplied in MB (e.g. 5 GB of memory is 5120 MB):
 *  zones/zone/machineTypes/custom-CPUS-MEMORY For example:
 *  zones/us-central1-f/machineTypes/custom-4-5120 For a full list of
 *  restrictions, read the Specifications for custom machine types.
 */
@property(nonatomic, copy, nullable) NSString *machineType;

/**
 *  The metadata key/value pairs assigned to this instance. This includes custom
 *  metadata and predefined keys.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Metadata *metadata;

/**
 *  Specifies a minimum CPU platform for the VM instance. Applicable values are
 *  the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell"
 *  or minCpuPlatform: "Intel Sandy Bridge".
 */
@property(nonatomic, copy, nullable) NSString *minCpuPlatform;

/**
 *  The name of the resource, provided by the client when initially creating the
 *  resource. The resource name must be 1-63 characters long, and comply with
 *  RFC1035. Specifically, the name must be 1-63 characters long and match the
 *  regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
 *  character must be a lowercase letter, and all following characters must be a
 *  dash, lowercase letter, or digit, except the last character, which cannot be
 *  a dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An array of network configurations for this instance. These specify how
 *  interfaces are configured to interact with other network services, such as
 *  connecting to the internet. Multiple interfaces are supported per instance.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkInterface *> *networkInterfaces;

@property(nonatomic, strong, nullable) GTLRCompute_NetworkPerformanceConfig *networkPerformanceConfig;

/**
 *  Input only. [Input Only] Additional params passed with the request, but not
 *  persisted as part of resource payload.
 */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceParams *params;

/**
 *  The private IPv6 google access type for the VM. If not specified, use
 *  INHERIT_FROM_SUBNETWORK as default.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Instance_PrivateIpv6GoogleAccess_EnableBidirectionalAccessToGoogle
 *        Bidirectional private IPv6 access to/from Google services. If
 *        specified, the subnetwork who is attached to the instance's default
 *        network interface will be assigned an internal IPv6 prefix if it
 *        doesn't have before. (Value: "ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE")
 *    @arg @c kGTLRCompute_Instance_PrivateIpv6GoogleAccess_EnableOutboundVmAccessToGoogle
 *        Outbound private IPv6 access from VMs in this subnet to Google
 *        services. If specified, the subnetwork who is attached to the
 *        instance's default network interface will be assigned an internal IPv6
 *        prefix if it doesn't have before. (Value:
 *        "ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE")
 *    @arg @c kGTLRCompute_Instance_PrivateIpv6GoogleAccess_InheritFromSubnetwork
 *        Each network interface inherits PrivateIpv6GoogleAccess from its
 *        subnetwork. (Value: "INHERIT_FROM_SUBNETWORK")
 */
@property(nonatomic, copy, nullable) NSString *privateIpv6GoogleAccess;

/** Specifies the reservations that this instance can consume from. */
@property(nonatomic, strong, nullable) GTLRCompute_ReservationAffinity *reservationAffinity;

/** Resource policies applied to this instance. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourcePolicies;

/**
 *  [Output Only] Specifies values set for instance attributes as compared to
 *  the values requested by user in the corresponding input only field.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ResourceStatus *resourceStatus;

/**
 *  [Output Only] Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/** Sets the scheduling options for this instance. */
@property(nonatomic, strong, nullable) GTLRCompute_Scheduling *scheduling;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  A list of service accounts, with their specified scopes, authorized for this
 *  instance. Only one service account per VM instance is supported. Service
 *  accounts generate access tokens that can be accessed through the metadata
 *  server and used to authenticate applications on the instance. See Service
 *  Accounts for more information.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ServiceAccount *> *serviceAccounts;

@property(nonatomic, strong, nullable) GTLRCompute_ShieldedInstanceConfig *shieldedInstanceConfig;
@property(nonatomic, strong, nullable) GTLRCompute_ShieldedInstanceIntegrityPolicy *shieldedInstanceIntegrityPolicy;

/** Source machine image */
@property(nonatomic, copy, nullable) NSString *sourceMachineImage;

/**
 *  Source machine image encryption key when creating an instance from a machine
 *  image.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *sourceMachineImageEncryptionKey;

/**
 *  [Output Only] Whether a VM has been restricted for start because Compute
 *  Engine has detected suspicious activity.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startRestricted;

/**
 *  [Output Only] The status of the instance. One of the following values:
 *  PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING,
 *  and TERMINATED. For more information about the status of the instance, see
 *  Instance life cycle.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Instance_Status_Deprovisioning The Nanny is halted
 *        and we are performing tear down tasks like network deprogramming,
 *        releasing quota, IP, tearing down disks etc. (Value: "DEPROVISIONING")
 *    @arg @c kGTLRCompute_Instance_Status_Provisioning Resources are being
 *        allocated for the instance. (Value: "PROVISIONING")
 *    @arg @c kGTLRCompute_Instance_Status_Repairing The instance is in repair.
 *        (Value: "REPAIRING")
 *    @arg @c kGTLRCompute_Instance_Status_Running The instance is running.
 *        (Value: "RUNNING")
 *    @arg @c kGTLRCompute_Instance_Status_Staging All required resources have
 *        been allocated and the instance is being started. (Value: "STAGING")
 *    @arg @c kGTLRCompute_Instance_Status_Stopped The instance has stopped
 *        successfully. (Value: "STOPPED")
 *    @arg @c kGTLRCompute_Instance_Status_Stopping The instance is currently
 *        stopping (either being deleted or killed). (Value: "STOPPING")
 *    @arg @c kGTLRCompute_Instance_Status_Suspended The instance has suspended.
 *        (Value: "SUSPENDED")
 *    @arg @c kGTLRCompute_Instance_Status_Suspending The instance is
 *        suspending. (Value: "SUSPENDING")
 *    @arg @c kGTLRCompute_Instance_Status_Terminated The instance has stopped
 *        (either by explicit action or underlying failure). (Value:
 *        "TERMINATED")
 */
@property(nonatomic, copy, nullable) NSString *status;

/** [Output Only] An optional, human-readable explanation of the status. */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  Tags to apply to this instance. Tags are used to identify valid sources or
 *  targets for network firewalls and are specified by the client during
 *  instance creation. The tags can be later modified by the setTags method.
 *  Each tag within the list must comply with RFC1035. Multiple tags can be
 *  specified via the 'tags.items' field.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Tags *tags;

/**
 *  [Output Only] URL of the zone where the instance resides. You must specify
 *  this field as part of the HTTP request URL. It is not settable as a field in
 *  the request body.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  Labels to apply to this instance. These can be later modified by the
 *  setLabels method.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_Instance_Labels : GTLRObject
@end


/**
 *  GTLRCompute_InstanceAggregatedList
 */
@interface GTLRCompute_InstanceAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** An object that contains a list of instances scoped by zone. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#instanceAggregatedList for
 *  aggregated lists of Instance resources.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceAggregatedList_Warning *warning;

@end


/**
 *  An object that contains a list of instances scoped by zone.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_InstancesScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_InstanceAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_InstanceAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InstanceAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InstanceAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_InstanceAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_InstanceConsumptionData
 */
@interface GTLRCompute_InstanceConsumptionData : GTLRObject

/** Resources consumed by the instance. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceConsumptionInfo *consumptionInfo;

/** Server-defined URL for the instance. */
@property(nonatomic, copy, nullable) NSString *instance;

@end


/**
 *  GTLRCompute_InstanceConsumptionInfo
 */
@interface GTLRCompute_InstanceConsumptionInfo : GTLRObject

/**
 *  The number of virtual CPUs that are available to the instance.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *guestCpus;

/**
 *  The amount of local SSD storage available to the instance, defined in GiB.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *localSsdGb;

/**
 *  The amount of physical memory available to the instance, defined in MiB.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *memoryMb;

/**
 *  The minimal guaranteed number of virtual CPUs that are reserved.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minNodeCpus;

@end


/**
 *  Represents an Instance Group resource. Instance Groups can be used to
 *  configure a target for load balancing. Instance groups can either be managed
 *  or unmanaged. To create managed instance groups, use the
 *  instanceGroupManager or regionInstanceGroupManager resource instead. Use
 *  zonal unmanaged instance groups if you need to apply load balancing to
 *  groups of heterogeneous instances or if you need to manage the instances
 *  yourself. You cannot create regional unmanaged instance groups. For more
 *  information, read Instance groups.
 */
@interface GTLRCompute_InstanceGroup : GTLRObject

/**
 *  [Output Only] The creation timestamp for this instance group in RFC3339 text
 *  format.
 */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The fingerprint of the named ports. The system uses this
 *  fingerprint to detect conflicts when multiple users change the named ports
 *  concurrently.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] A unique identifier for this instance group, generated by the
 *  server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] The resource type, which is always compute#instanceGroup for
 *  instance groups.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The name of the instance group. The name must be 1-63 characters long, and
 *  comply with RFC1035.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Assigns a name to a port number. For example: {name: "http", port: 80} This
 *  allows the system to reference ports by the assigned name instead of a port
 *  number. Named ports can also contain multiple ports. For example: [{name:
 *  "app1", port: 8080}, {name: "app1", port: 8081}, {name: "app2", port: 8082}]
 *  Named ports apply to all instances in this instance group.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NamedPort *> *namedPorts;

/**
 *  [Output Only] The URL of the network to which all instances in the instance
 *  group belong. If your instance has multiple network interfaces, then the
 *  network and subnetwork fields only refer to the network and subnet used by
 *  your primary interface (nic0).
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  [Output Only] The URL of the region where the instance group is located (for
 *  regional resources).
 */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  [Output Only] The URL for this instance group. The server generates this
 *  URL.
 */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] The total number of instances in the instance group.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *size;

/**
 *  [Output Only] The URL of the subnetwork to which all instances in the
 *  instance group belong. If your instance has multiple network interfaces,
 *  then the network and subnetwork fields only refer to the network and subnet
 *  used by your primary interface (nic0).
 */
@property(nonatomic, copy, nullable) NSString *subnetwork;

/**
 *  [Output Only] The URL of the zone where the instance group is located (for
 *  zonal resources).
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  GTLRCompute_InstanceGroupAggregatedList
 */
@interface GTLRCompute_InstanceGroupAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of InstanceGroupsScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupAggregatedList_Items *items;

/**
 *  [Output Only] The resource type, which is always
 *  compute#instanceGroupAggregatedList for aggregated lists of instance groups.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupAggregatedList_Warning *warning;

@end


/**
 *  A list of InstanceGroupsScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_InstanceGroupsScopedList. Use @c -additionalJSONKeys and
 *        @c -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_InstanceGroupAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_InstanceGroupAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InstanceGroupAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroupAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InstanceGroupAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_InstanceGroupAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  A list of InstanceGroup resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_InstanceGroupList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of InstanceGroup resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroup *> *items;

/**
 *  [Output Only] The resource type, which is always compute#instanceGroupList
 *  for instance group lists.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_InstanceGroupList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_PartialSuccess Success
 *        is reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_ResourceNotDeleted One
 *        or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InstanceGroupList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroupList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InstanceGroupList_Warning_Data_Item
 */
@interface GTLRCompute_InstanceGroupList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a Managed Instance Group resource. An instance group is a
 *  collection of VM instances that you can manage as a single entity. For more
 *  information, read Instance groups. For zonal Managed Instance Group, use the
 *  instanceGroupManagers resource. For regional Managed Instance Group, use the
 *  regionInstanceGroupManagers resource.
 */
@interface GTLRCompute_InstanceGroupManager : GTLRObject

/**
 *  The autohealing policy for this managed instance group. You can specify only
 *  one value.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroupManagerAutoHealingPolicy *> *autoHealingPolicies;

/**
 *  The base instance name to use for instances in this group. The value must be
 *  1-58 characters long. Instances are named by appending a hyphen and a random
 *  four-character string to the base instance name. The base instance name must
 *  comply with RFC1035.
 */
@property(nonatomic, copy, nullable) NSString *baseInstanceName;

/**
 *  [Output Only] The creation timestamp for this managed instance group in
 *  RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  [Output Only] The list of instance actions and the number of instances in
 *  this managed instance group that are scheduled for each of those actions.
 */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupManagerActionsSummary *currentActions;

/**
 *  An optional description of this resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Policy specifying the intended distribution of managed instances across
 *  zones in a regional managed instance group.
 */
@property(nonatomic, strong, nullable) GTLRCompute_DistributionPolicy *distributionPolicy;

/**
 *  Fingerprint of this resource. This field may be used in optimistic locking.
 *  It will be ignored when inserting an InstanceGroupManager. An up-to-date
 *  fingerprint must be provided in order to update the InstanceGroupManager,
 *  otherwise the request will fail with error 412 conditionNotMet. To see the
 *  latest fingerprint, make a get() request to retrieve an
 *  InstanceGroupManager.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] A unique identifier for this resource type. The server
 *  generates this identifier.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** [Output Only] The URL of the Instance Group resource. */
@property(nonatomic, copy, nullable) NSString *instanceGroup;

/**
 *  The URL of the instance template that is specified for this managed instance
 *  group. The group uses this template to create all new instances in the
 *  managed instance group. The templates for existing instances in the group do
 *  not change unless you run recreateInstances, run applyUpdatesToInstances, or
 *  set the group's updatePolicy.type to PROACTIVE.
 */
@property(nonatomic, copy, nullable) NSString *instanceTemplate;

/**
 *  [Output Only] The resource type, which is always
 *  compute#instanceGroupManager for managed instance groups.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Pagination behavior of the listManagedInstances API method for this managed
 *  instance group.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupManager_ListManagedInstancesResults_Pageless
 *        (Default) Pagination is disabled for the group's listManagedInstances
 *        API method. maxResults and pageToken query parameters are ignored and
 *        all instances are returned in a single response. (Value: "PAGELESS")
 *    @arg @c kGTLRCompute_InstanceGroupManager_ListManagedInstancesResults_Paginated
 *        Pagination is enabled for the group's listManagedInstances API method.
 *        maxResults and pageToken query parameters are respected. (Value:
 *        "PAGINATED")
 */
@property(nonatomic, copy, nullable) NSString *listManagedInstancesResults;

/**
 *  The name of the managed instance group. The name must be 1-63 characters
 *  long, and comply with RFC1035.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Named ports configured for the Instance Groups complementary to this
 *  Instance Group Manager.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NamedPort *> *namedPorts;

/**
 *  [Output Only] The URL of the region where the managed instance group resides
 *  (for regional resources).
 */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  [Output Only] The URL for this managed instance group. The server defines
 *  this URL.
 */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** Stateful configuration for this Instanced Group Manager */
@property(nonatomic, strong, nullable) GTLRCompute_StatefulPolicy *statefulPolicy;

/** [Output Only] The status of this managed instance group. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupManagerStatus *status;

/**
 *  The URLs for all TargetPool resources to which instances in the
 *  instanceGroup field are added. The target pools automatically apply to all
 *  of the instances in the managed instance group.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *targetPools;

/**
 *  The target number of running instances for this managed instance group. You
 *  can reduce this number by using the instanceGroupManager deleteInstances or
 *  abandonInstances methods. Resizing the group also changes this number.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *targetSize;

/** The update policy for this managed instance group. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupManagerUpdatePolicy *updatePolicy;

/**
 *  Specifies the instance templates used by this managed instance group to
 *  create instances. Each version is defined by an instanceTemplate and a name.
 *  Every version can appear at most once per instance group. This field
 *  overrides the top-level instanceTemplate field. Read more about the
 *  relationships between these fields. Exactly one version must leave the
 *  targetSize field unset. That version will be applied to all remaining
 *  instances. For more information, read about canary updates.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroupManagerVersion *> *versions;

/**
 *  [Output Only] The URL of a zone where the managed instance group is located
 *  (for zonal resources).
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  GTLRCompute_InstanceGroupManagerActionsSummary
 */
@interface GTLRCompute_InstanceGroupManagerActionsSummary : GTLRObject

/**
 *  [Output Only] The total number of instances in the managed instance group
 *  that are scheduled to be abandoned. Abandoning an instance removes it from
 *  the managed instance group without deleting it.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *abandoning;

/**
 *  [Output Only] The number of instances in the managed instance group that are
 *  scheduled to be created or are currently being created. If the group fails
 *  to create any of these instances, it tries again until it creates the
 *  instance successfully. If you have disabled creation retries, this field
 *  will not be populated; instead, the creatingWithoutRetries field will be
 *  populated.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *creating;

/**
 *  [Output Only] The number of instances that the managed instance group will
 *  attempt to create. The group attempts to create each instance only once. If
 *  the group fails to create any of these instances, it decreases the group's
 *  targetSize value accordingly.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *creatingWithoutRetries;

/**
 *  [Output Only] The number of instances in the managed instance group that are
 *  scheduled to be deleted or are currently being deleted.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deleting;

/**
 *  [Output Only] The number of instances in the managed instance group that are
 *  running and have no scheduled actions.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *none;

/**
 *  [Output Only] The number of instances in the managed instance group that are
 *  scheduled to be recreated or are currently being being recreated. Recreating
 *  an instance deletes the existing root persistent disk and creates a new disk
 *  from the image that is defined in the instance template.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *recreating;

/**
 *  [Output Only] The number of instances in the managed instance group that are
 *  being reconfigured with properties that do not require a restart or a
 *  recreate action. For example, setting or removing target pools for the
 *  instance.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *refreshing;

/**
 *  [Output Only] The number of instances in the managed instance group that are
 *  scheduled to be restarted or are currently being restarted.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *restarting;

/**
 *  [Output Only] The number of instances in the managed instance group that are
 *  scheduled to be resumed or are currently being resumed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *resuming;

/**
 *  [Output Only] The number of instances in the managed instance group that are
 *  scheduled to be started or are currently being started.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *starting;

/**
 *  [Output Only] The number of instances in the managed instance group that are
 *  scheduled to be stopped or are currently being stopped.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *stopping;

/**
 *  [Output Only] The number of instances in the managed instance group that are
 *  scheduled to be suspended or are currently being suspended.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *suspending;

/**
 *  [Output Only] The number of instances in the managed instance group that are
 *  being verified. See the managedInstances[].currentAction property in the
 *  listManagedInstances method documentation.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *verifying;

@end


/**
 *  GTLRCompute_InstanceGroupManagerAggregatedList
 */
@interface GTLRCompute_InstanceGroupManagerAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of InstanceGroupManagersScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupManagerAggregatedList_Items *items;

/**
 *  [Output Only] The resource type, which is always
 *  compute#instanceGroupManagerAggregatedList for an aggregated list of managed
 *  instance groups.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupManagerAggregatedList_Warning *warning;

@end


/**
 *  A list of InstanceGroupManagersScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_InstanceGroupManagersScopedList. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_InstanceGroupManagerAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_InstanceGroupManagerAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InstanceGroupManagerAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroupManagerAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InstanceGroupManagerAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_InstanceGroupManagerAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_InstanceGroupManagerAutoHealingPolicy
 */
@interface GTLRCompute_InstanceGroupManagerAutoHealingPolicy : GTLRObject

/** The URL for the health check that signals autohealing. */
@property(nonatomic, copy, nullable) NSString *healthCheck;

/**
 *  The number of seconds that the managed instance group waits before it
 *  applies autohealing policies to new instances or recently recreated
 *  instances. This initial delay allows instances to initialize and run their
 *  startup scripts before the instance group determines that they are
 *  UNHEALTHY. This prevents the managed instance group from recreating its
 *  instances prematurely. This value must be from range [0, 3600].
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *initialDelaySec;

@end


/**
 *  [Output Only] A list of managed instance groups.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_InstanceGroupManagerList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of InstanceGroupManager resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroupManager *> *items;

/**
 *  [Output Only] The resource type, which is always
 *  compute#instanceGroupManagerList for a list of managed instance groups.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupManagerList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_InstanceGroupManagerList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InstanceGroupManagerList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroupManagerList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InstanceGroupManagerList_Warning_Data_Item
 */
@interface GTLRCompute_InstanceGroupManagerList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_InstanceGroupManagersAbandonInstancesRequest
 */
@interface GTLRCompute_InstanceGroupManagersAbandonInstancesRequest : GTLRObject

/**
 *  The URLs of one or more instances to abandon. This can be a full URL or a
 *  partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *instances;

@end


/**
 *  InstanceGroupManagers.applyUpdatesToInstances
 */
@interface GTLRCompute_InstanceGroupManagersApplyUpdatesRequest : GTLRObject

/**
 *  Flag to update all instances instead of specified list of “instances”. If
 *  the flag is set to true then the instances may not be specified in the
 *  request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allInstances;

/**
 *  The list of URLs of one or more instances for which you want to apply
 *  updates. Each URL can be a full URL or a partial URL, such as
 *  zones/[ZONE]/instances/[INSTANCE_NAME].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *instances;

/**
 *  The minimal action that you want to perform on each instance during the
 *  update: - REPLACE: At minimum, delete the instance and create it again. -
 *  RESTART: Stop the instance and start it again. - REFRESH: Do not stop the
 *  instance. - NONE: Do not disrupt the instance at all. By default, the
 *  minimum action is NONE. If your update requires a more disruptive action
 *  than you set with this flag, the necessary action is performed to execute
 *  the update.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MinimalAction_None
 *        Do not perform any action. (Value: "NONE")
 *    @arg @c kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MinimalAction_Refresh
 *        Updates applied in runtime, instances will not be disrupted. (Value:
 *        "REFRESH")
 *    @arg @c kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MinimalAction_Replace
 *        Old instances will be deleted. New instances will be created from the
 *        target template. (Value: "REPLACE")
 *    @arg @c kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MinimalAction_Restart
 *        Every instance will be restarted. (Value: "RESTART")
 */
@property(nonatomic, copy, nullable) NSString *minimalAction;

/**
 *  The most disruptive action that you want to perform on each instance during
 *  the update: - REPLACE: Delete the instance and create it again. - RESTART:
 *  Stop the instance and start it again. - REFRESH: Do not stop the instance. -
 *  NONE: Do not disrupt the instance at all. By default, the most disruptive
 *  allowed action is REPLACE. If your update requires a more disruptive action
 *  than you set with this flag, the update request will fail.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_None
 *        Do not perform any action. (Value: "NONE")
 *    @arg @c kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Refresh
 *        Updates applied in runtime, instances will not be disrupted. (Value:
 *        "REFRESH")
 *    @arg @c kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Replace
 *        Old instances will be deleted. New instances will be created from the
 *        target template. (Value: "REPLACE")
 *    @arg @c kGTLRCompute_InstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Restart
 *        Every instance will be restarted. (Value: "RESTART")
 */
@property(nonatomic, copy, nullable) NSString *mostDisruptiveAllowedAction;

@end


/**
 *  InstanceGroupManagers.createInstances
 */
@interface GTLRCompute_InstanceGroupManagersCreateInstancesRequest : GTLRObject

/** [Required] List of specifications of per-instance configs. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PerInstanceConfig *> *instances;

@end


/**
 *  GTLRCompute_InstanceGroupManagersDeleteInstancesRequest
 */
@interface GTLRCompute_InstanceGroupManagersDeleteInstancesRequest : GTLRObject

/**
 *  The URLs of one or more instances to delete. This can be a full URL or a
 *  partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *instances;

/**
 *  Specifies whether the request should proceed despite the inclusion of
 *  instances that are not members of the group or that are already in the
 *  process of being deleted or abandoned. If this field is set to `false` and
 *  such an instance is specified in the request, the operation fails. The
 *  operation always fails if the request contains a malformed instance URL or a
 *  reference to an instance that exists in a zone or region other than the
 *  group's zone or region.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *skipInstancesOnValidationError;

@end


/**
 *  InstanceGroupManagers.deletePerInstanceConfigs
 */
@interface GTLRCompute_InstanceGroupManagersDeletePerInstanceConfigsReq : GTLRObject

/**
 *  The list of instance names for which we want to delete per-instance configs
 *  on this managed instance group.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

@end


/**
 *  GTLRCompute_InstanceGroupManagersListErrorsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_InstanceGroupManagersListErrorsResponse : GTLRCollectionObject

/**
 *  [Output Only] The list of errors of the managed instance group.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceManagedByIgmError *> *items;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRCompute_InstanceGroupManagersListManagedInstancesResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "managedInstances" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRCompute_InstanceGroupManagersListManagedInstancesResponse : GTLRCollectionObject

/**
 *  [Output Only] The list of instances in the managed instance group.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ManagedInstance *> *managedInstances;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp : GTLRCollectionObject

/**
 *  [Output Only] The list of PerInstanceConfig.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PerInstanceConfig *> *items;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Data_Item
 */
@interface GTLRCompute_InstanceGroupManagersListPerInstanceConfigsResp_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  InstanceGroupManagers.patchPerInstanceConfigs
 */
@interface GTLRCompute_InstanceGroupManagersPatchPerInstanceConfigsReq : GTLRObject

/**
 *  The list of per-instance configurations to insert or patch on this managed
 *  instance group.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PerInstanceConfig *> *perInstanceConfigs;

@end


/**
 *  GTLRCompute_InstanceGroupManagersRecreateInstancesRequest
 */
@interface GTLRCompute_InstanceGroupManagersRecreateInstancesRequest : GTLRObject

/**
 *  The URLs of one or more instances to recreate. This can be a full URL or a
 *  partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *instances;

@end


/**
 *  GTLRCompute_InstanceGroupManagersScopedList
 */
@interface GTLRCompute_InstanceGroupManagersScopedList : GTLRObject

/**
 *  [Output Only] The list of managed instance groups that are contained in the
 *  specified project and zone.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroupManager *> *instanceGroupManagers;

/**
 *  [Output Only] The warning that replaces the list of managed instance groups
 *  when the list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupManagersScopedList_Warning *warning;

@end


/**
 *  [Output Only] The warning that replaces the list of managed instance groups
 *  when the list is empty.
 */
@interface GTLRCompute_InstanceGroupManagersScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InstanceGroupManagersScopedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroupManagersScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InstanceGroupManagersScopedList_Warning_Data_Item
 */
@interface GTLRCompute_InstanceGroupManagersScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_InstanceGroupManagersSetInstanceTemplateRequest
 */
@interface GTLRCompute_InstanceGroupManagersSetInstanceTemplateRequest : GTLRObject

/**
 *  The URL of the instance template that is specified for this managed instance
 *  group. The group uses this template to create all new instances in the
 *  managed instance group. The templates for existing instances in the group do
 *  not change unless you run recreateInstances, run applyUpdatesToInstances, or
 *  set the group's updatePolicy.type to PROACTIVE.
 */
@property(nonatomic, copy, nullable) NSString *instanceTemplate;

@end


/**
 *  GTLRCompute_InstanceGroupManagersSetTargetPoolsRequest
 */
@interface GTLRCompute_InstanceGroupManagersSetTargetPoolsRequest : GTLRObject

/**
 *  The fingerprint of the target pools information. Use this optional property
 *  to prevent conflicts when multiple users change the target pools settings
 *  concurrently. Obtain the fingerprint with the instanceGroupManagers.get
 *  method. Then, include the fingerprint in your request to ensure that you do
 *  not overwrite changes that were applied from another concurrent request.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  The list of target pool URLs that instances in this managed instance group
 *  belong to. The managed instance group applies these target pools to all of
 *  the instances in the group. Existing instances and new instances in the
 *  group all receive these target pool settings.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *targetPools;

@end


/**
 *  GTLRCompute_InstanceGroupManagerStatus
 */
@interface GTLRCompute_InstanceGroupManagerStatus : GTLRObject

/**
 *  [Output Only] The URL of the Autoscaler that targets this instance group
 *  manager.
 */
@property(nonatomic, copy, nullable) NSString *autoscaler;

/**
 *  [Output Only] A bit indicating whether the managed instance group is in a
 *  stable state. A stable state means that: none of the instances in the
 *  managed instance group is currently undergoing any type of change (for
 *  example, creation, restart, or deletion); no future changes are scheduled
 *  for instances in the managed instance group; and the managed instance group
 *  itself is not being modified.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isStable;

/** [Output Only] Stateful status of the given Instance Group Manager. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupManagerStatusStateful *stateful;

/**
 *  [Output Only] A status of consistency of Instances' versions with their
 *  target version specified by version field on Instance Group Manager.
 */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupManagerStatusVersionTarget *versionTarget;

@end


/**
 *  GTLRCompute_InstanceGroupManagerStatusStateful
 */
@interface GTLRCompute_InstanceGroupManagerStatusStateful : GTLRObject

/**
 *  [Output Only] A bit indicating whether the managed instance group has
 *  stateful configuration, that is, if you have configured any items in a
 *  stateful policy or in per-instance configs. The group might report that it
 *  has no stateful configuration even when there is still some preserved state
 *  on a managed instance, for example, if you have deleted all PICs but not yet
 *  applied those deletions.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hasStatefulConfig;

/** [Output Only] Status of per-instance configurations on the instance. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupManagerStatusStatefulPerInstanceConfigs *perInstanceConfigs;

@end


/**
 *  GTLRCompute_InstanceGroupManagerStatusStatefulPerInstanceConfigs
 */
@interface GTLRCompute_InstanceGroupManagerStatusStatefulPerInstanceConfigs : GTLRObject

/**
 *  A bit indicating if all of the group's per-instance configurations (listed
 *  in the output of a listPerInstanceConfigs API call) have status EFFECTIVE or
 *  there are no per-instance-configs.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allEffective;

@end


/**
 *  GTLRCompute_InstanceGroupManagerStatusVersionTarget
 */
@interface GTLRCompute_InstanceGroupManagerStatusVersionTarget : GTLRObject

/**
 *  [Output Only] A bit indicating whether version target has been reached in
 *  this managed instance group, i.e. all instances are in their target version.
 *  Instances' target version are specified by version field on Instance Group
 *  Manager.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isReached;

@end


/**
 *  InstanceGroupManagers.updatePerInstanceConfigs
 */
@interface GTLRCompute_InstanceGroupManagersUpdatePerInstanceConfigsReq : GTLRObject

/**
 *  The list of per-instance configurations to insert or patch on this managed
 *  instance group.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PerInstanceConfig *> *perInstanceConfigs;

@end


/**
 *  GTLRCompute_InstanceGroupManagerUpdatePolicy
 */
@interface GTLRCompute_InstanceGroupManagerUpdatePolicy : GTLRObject

/**
 *  The instance redistribution policy for regional managed instance groups.
 *  Valid values are: - PROACTIVE (default): The group attempts to maintain an
 *  even distribution of VM instances across zones in the region. - NONE: For
 *  non-autoscaled groups, proactive redistribution is disabled.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupManagerUpdatePolicy_InstanceRedistributionType_None
 *        No action is being proactively performed in order to bring this IGM to
 *        its target instance distribution. (Value: "NONE")
 *    @arg @c kGTLRCompute_InstanceGroupManagerUpdatePolicy_InstanceRedistributionType_Proactive
 *        This IGM will actively converge to its target instance distribution.
 *        (Value: "PROACTIVE")
 */
@property(nonatomic, copy, nullable) NSString *instanceRedistributionType;

/**
 *  The maximum number of instances that can be created above the specified
 *  targetSize during the update process. This value can be either a fixed
 *  number or, if the group has 10 or more instances, a percentage. If you set a
 *  percentage, the number of instances is rounded if necessary. The default
 *  value for maxSurge is a fixed value equal to the number of zones in which
 *  the managed instance group operates. At least one of either maxSurge or
 *  maxUnavailable must be greater than 0. Learn more about maxSurge.
 */
@property(nonatomic, strong, nullable) GTLRCompute_FixedOrPercent *maxSurge;

/**
 *  The maximum number of instances that can be unavailable during the update
 *  process. An instance is considered available if all of the following
 *  conditions are satisfied: - The instance's status is RUNNING. - If there is
 *  a health check on the instance group, the instance's health check status
 *  must be HEALTHY at least once. If there is no health check on the group,
 *  then the instance only needs to have a status of RUNNING to be considered
 *  available. This value can be either a fixed number or, if the group has 10
 *  or more instances, a percentage. If you set a percentage, the number of
 *  instances is rounded if necessary. The default value for maxUnavailable is a
 *  fixed value equal to the number of zones in which the managed instance group
 *  operates. At least one of either maxSurge or maxUnavailable must be greater
 *  than 0. Learn more about maxUnavailable.
 */
@property(nonatomic, strong, nullable) GTLRCompute_FixedOrPercent *maxUnavailable;

/**
 *  Minimal action to be taken on an instance. Use this option to minimize
 *  disruption as much as possible or to apply a more disruptive action than is
 *  necessary. - To limit disruption as much as possible, set the minimal action
 *  to REFRESH. If your update requires a more disruptive action, Compute Engine
 *  performs the necessary action to execute the update. - To apply a more
 *  disruptive action than is strictly necessary, set the minimal action to
 *  RESTART or REPLACE. For example, Compute Engine does not need to restart a
 *  VM to change its metadata. But if your application reads instance metadata
 *  only when a VM is restarted, you can set the minimal action to RESTART in
 *  order to pick up metadata changes.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupManagerUpdatePolicy_MinimalAction_None
 *        Do not perform any action. (Value: "NONE")
 *    @arg @c kGTLRCompute_InstanceGroupManagerUpdatePolicy_MinimalAction_Refresh
 *        Updates applied in runtime, instances will not be disrupted. (Value:
 *        "REFRESH")
 *    @arg @c kGTLRCompute_InstanceGroupManagerUpdatePolicy_MinimalAction_Replace
 *        Old instances will be deleted. New instances will be created from the
 *        target template. (Value: "REPLACE")
 *    @arg @c kGTLRCompute_InstanceGroupManagerUpdatePolicy_MinimalAction_Restart
 *        Every instance will be restarted. (Value: "RESTART")
 */
@property(nonatomic, copy, nullable) NSString *minimalAction;

/**
 *  Most disruptive action that is allowed to be taken on an instance. You can
 *  specify either NONE to forbid any actions, REFRESH to allow actions that do
 *  not need instance restart, RESTART to allow actions that can be applied
 *  without instance replacing or REPLACE to allow all possible actions. If the
 *  Updater determines that the minimal update action needed is more disruptive
 *  than most disruptive allowed action you specify it will not perform the
 *  update at all.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupManagerUpdatePolicy_MostDisruptiveAllowedAction_None
 *        Do not perform any action. (Value: "NONE")
 *    @arg @c kGTLRCompute_InstanceGroupManagerUpdatePolicy_MostDisruptiveAllowedAction_Refresh
 *        Updates applied in runtime, instances will not be disrupted. (Value:
 *        "REFRESH")
 *    @arg @c kGTLRCompute_InstanceGroupManagerUpdatePolicy_MostDisruptiveAllowedAction_Replace
 *        Old instances will be deleted. New instances will be created from the
 *        target template. (Value: "REPLACE")
 *    @arg @c kGTLRCompute_InstanceGroupManagerUpdatePolicy_MostDisruptiveAllowedAction_Restart
 *        Every instance will be restarted. (Value: "RESTART")
 */
@property(nonatomic, copy, nullable) NSString *mostDisruptiveAllowedAction;

/**
 *  What action should be used to replace instances. See minimal_action.REPLACE
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupManagerUpdatePolicy_ReplacementMethod_Recreate
 *        Instances will be recreated (with the same name) (Value: "RECREATE")
 *    @arg @c kGTLRCompute_InstanceGroupManagerUpdatePolicy_ReplacementMethod_Substitute
 *        Default option: instances will be deleted and created (with a new
 *        name) (Value: "SUBSTITUTE")
 */
@property(nonatomic, copy, nullable) NSString *replacementMethod;

/**
 *  The type of update process. You can specify either PROACTIVE so that the
 *  instance group manager proactively executes actions in order to bring
 *  instances to their target versions or OPPORTUNISTIC so that no action is
 *  proactively executed but the update will be performed as part of other
 *  actions (for example, resizes or recreateInstances calls).
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupManagerUpdatePolicy_Type_Opportunistic
 *        No action is being proactively performed in order to bring this IGM to
 *        its target version distribution (regardless of whether this
 *        distribution is expressed using instanceTemplate or versions field).
 *        (Value: "OPPORTUNISTIC")
 *    @arg @c kGTLRCompute_InstanceGroupManagerUpdatePolicy_Type_Proactive This
 *        IGM will actively converge to its target version distribution
 *        (regardless of whether this distribution is expressed using
 *        instanceTemplate or versions field). (Value: "PROACTIVE")
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRCompute_InstanceGroupManagerVersion
 */
@interface GTLRCompute_InstanceGroupManagerVersion : GTLRObject

/**
 *  The URL of the instance template that is specified for this managed instance
 *  group. The group uses this template to create new instances in the managed
 *  instance group until the `targetSize` for this version is reached. The
 *  templates for existing instances in the group do not change unless you run
 *  recreateInstances, run applyUpdatesToInstances, or set the group's
 *  updatePolicy.type to PROACTIVE; in those cases, existing instances are
 *  updated until the `targetSize` for this version is reached.
 */
@property(nonatomic, copy, nullable) NSString *instanceTemplate;

/**
 *  Name of the version. Unique among all versions in the scope of this managed
 *  instance group.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Specifies the intended number of instances to be created from the
 *  instanceTemplate. The final number of instances created from the template
 *  will be equal to: - If expressed as a fixed number, the minimum of either
 *  targetSize.fixed or instanceGroupManager.targetSize is used. - if expressed
 *  as a percent, the targetSize would be (targetSize.percent/100 *
 *  InstanceGroupManager.targetSize) If there is a remainder, the number is
 *  rounded. If unset, this version will update any remaining instances not
 *  updated by another version. Read Starting a canary update for more
 *  information.
 */
@property(nonatomic, strong, nullable) GTLRCompute_FixedOrPercent *targetSize;

@end


/**
 *  GTLRCompute_InstanceGroupsAddInstancesRequest
 */
@interface GTLRCompute_InstanceGroupsAddInstancesRequest : GTLRObject

/** The list of instances to add to the instance group. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceReference *> *instances;

@end


/**
 *  GTLRCompute_InstanceGroupsListInstances
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_InstanceGroupsListInstances : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of InstanceWithNamedPorts resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceWithNamedPorts *> *items;

/**
 *  [Output Only] The resource type, which is always
 *  compute#instanceGroupsListInstances for the list of instances in the
 *  specified instance group.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupsListInstances_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_InstanceGroupsListInstances_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstances_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroupsListInstances_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InstanceGroupsListInstances_Warning_Data_Item
 */
@interface GTLRCompute_InstanceGroupsListInstances_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_InstanceGroupsListInstancesRequest
 */
@interface GTLRCompute_InstanceGroupsListInstancesRequest : GTLRObject

/**
 *  A filter for the state of the instances in the instance group. Valid options
 *  are ALL or RUNNING. If you do not specify this parameter the list includes
 *  all instances regardless of their state.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupsListInstancesRequest_InstanceState_All
 *        Includes all instances in the generated list regardless of their
 *        state. (Value: "ALL")
 *    @arg @c kGTLRCompute_InstanceGroupsListInstancesRequest_InstanceState_Running
 *        Includes instances in the generated list only if they have a RUNNING
 *        state. (Value: "RUNNING")
 */
@property(nonatomic, copy, nullable) NSString *instanceState;

@end


/**
 *  GTLRCompute_InstanceGroupsRemoveInstancesRequest
 */
@interface GTLRCompute_InstanceGroupsRemoveInstancesRequest : GTLRObject

/** The list of instances to remove from the instance group. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceReference *> *instances;

@end


/**
 *  GTLRCompute_InstanceGroupsScopedList
 */
@interface GTLRCompute_InstanceGroupsScopedList : GTLRObject

/**
 *  [Output Only] The list of instance groups that are contained in this scope.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroup *> *instanceGroups;

/**
 *  [Output Only] An informational warning that replaces the list of instance
 *  groups when the list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceGroupsScopedList_Warning *warning;

@end


/**
 *  [Output Only] An informational warning that replaces the list of instance
 *  groups when the list is empty.
 */
@interface GTLRCompute_InstanceGroupsScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InstanceGroupsScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroupsScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InstanceGroupsScopedList_Warning_Data_Item
 */
@interface GTLRCompute_InstanceGroupsScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_InstanceGroupsSetNamedPortsRequest
 */
@interface GTLRCompute_InstanceGroupsSetNamedPortsRequest : GTLRObject

/**
 *  The fingerprint of the named ports information for this instance group. Use
 *  this optional property to prevent conflicts when multiple users change the
 *  named ports settings concurrently. Obtain the fingerprint with the
 *  instanceGroups.get method. Then, include the fingerprint in your request to
 *  ensure that you do not overwrite changes that were applied from another
 *  concurrent request. A request with an incorrect fingerprint will fail with
 *  error 412 conditionNotMet.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/** The list of named ports to set for this instance group. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NamedPort *> *namedPorts;

@end


/**
 *  Contains a list of instances.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_InstanceList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Instance resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Instance *> *items;

/**
 *  [Output Only] Type of resource. Always compute#instanceList for lists of
 *  Instance resources.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_InstanceList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_NoResultsOnPage No results
 *        are present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InstanceList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InstanceList_Warning_Data_Item
 */
@interface GTLRCompute_InstanceList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of instance referrers.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_InstanceListReferrers : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Reference resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Reference *> *items;

/**
 *  [Output Only] Type of resource. Always compute#instanceListReferrers for
 *  lists of Instance referrers.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceListReferrers_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_InstanceListReferrers_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InstanceListReferrers_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceListReferrers_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InstanceListReferrers_Warning_Data_Item
 */
@interface GTLRCompute_InstanceListReferrers_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_InstanceManagedByIgmError
 */
@interface GTLRCompute_InstanceManagedByIgmError : GTLRObject

/** [Output Only] Contents of the error. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceManagedByIgmErrorManagedInstanceError *error;

/**
 *  [Output Only] Details of the instance action that triggered this error. May
 *  be null, if the error was not caused by an action on an instance. This field
 *  is optional.
 */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails *instanceActionDetails;

/**
 *  [Output Only] The time that this error occurred. This value is in RFC3339
 *  text format.
 */
@property(nonatomic, copy, nullable) NSString *timestamp;

@end


/**
 *  GTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails
 */
@interface GTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails : GTLRObject

/**
 *  [Output Only] Action that managed instance group was executing on the
 *  instance when the error occurred. Possible values:
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Abandoning
 *        The managed instance group is abandoning this instance. The instance
 *        will be removed from the instance group and from any target pools that
 *        are associated with this group. (Value: "ABANDONING")
 *    @arg @c kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Creating
 *        The managed instance group is creating this instance. If the group
 *        fails to create this instance, it will try again until it is
 *        successful. (Value: "CREATING")
 *    @arg @c kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_CreatingWithoutRetries
 *        The managed instance group is attempting to create this instance only
 *        once. If the group fails to create this instance, it does not try
 *        again and the group's targetSize value is decreased. (Value:
 *        "CREATING_WITHOUT_RETRIES")
 *    @arg @c kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Deleting
 *        The managed instance group is permanently deleting this instance.
 *        (Value: "DELETING")
 *    @arg @c kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_None
 *        The managed instance group has not scheduled any actions for this
 *        instance. (Value: "NONE")
 *    @arg @c kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Recreating
 *        The managed instance group is recreating this instance. (Value:
 *        "RECREATING")
 *    @arg @c kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Refreshing
 *        The managed instance group is applying configuration changes to the
 *        instance without stopping it. For example, the group can update the
 *        target pool list for an instance without stopping that instance.
 *        (Value: "REFRESHING")
 *    @arg @c kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Restarting
 *        The managed instance group is restarting this instance. (Value:
 *        "RESTARTING")
 *    @arg @c kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Resuming
 *        The managed instance group is resuming this instance. (Value:
 *        "RESUMING")
 *    @arg @c kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Starting
 *        The managed instance group is starting this instance. (Value:
 *        "STARTING")
 *    @arg @c kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Stopping
 *        The managed instance group is stopping this instance. (Value:
 *        "STOPPING")
 *    @arg @c kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Suspending
 *        The managed instance group is suspending this instance. (Value:
 *        "SUSPENDING")
 *    @arg @c kGTLRCompute_InstanceManagedByIgmErrorInstanceActionDetails_Action_Verifying
 *        The managed instance group is verifying this already created instance.
 *        Verification happens every time the instance is (re)created or
 *        restarted and consists of: 1. Waiting until health check specified as
 *        part of this managed instance group's autohealing policy reports
 *        HEALTHY. Note: Applies only if autohealing policy has a health check
 *        specified 2. Waiting for addition verification steps performed as
 *        post-instance creation (subject to future extensions). (Value:
 *        "VERIFYING")
 */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  [Output Only] The URL of the instance. The URL can be set even if the
 *  instance has not yet been created.
 */
@property(nonatomic, copy, nullable) NSString *instance;

/**
 *  [Output Only] Version this instance was created from, or was being created
 *  from, but the creation failed. Corresponds to one of the versions that were
 *  set on the Instance Group Manager resource at the time this instance was
 *  being created.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ManagedInstanceVersion *version;

@end


/**
 *  GTLRCompute_InstanceManagedByIgmErrorManagedInstanceError
 */
@interface GTLRCompute_InstanceManagedByIgmErrorManagedInstanceError : GTLRObject

/** [Output Only] Error code. */
@property(nonatomic, copy, nullable) NSString *code;

/** [Output Only] Error message. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InstanceMoveRequest
 */
@interface GTLRCompute_InstanceMoveRequest : GTLRObject

/**
 *  The URL of the destination zone to move the instance. This can be a full or
 *  partial URL. For example, the following are all valid URLs to a zone: -
 *  https://www.googleapis.com/compute/v1/projects/project/zones/zone -
 *  projects/project/zones/zone - zones/zone
 */
@property(nonatomic, copy, nullable) NSString *destinationZone;

/**
 *  The URL of the target instance to move. This can be a full or partial URL.
 *  For example, the following are all valid URLs to an instance: -
 *  https://www.googleapis.com/compute/v1/projects/project/zones/zone
 *  /instances/instance - projects/project/zones/zone/instances/instance -
 *  zones/zone/instances/instance
 */
@property(nonatomic, copy, nullable) NSString *targetInstance;

@end


/**
 *  Additional instance params.
 */
@interface GTLRCompute_InstanceParams : GTLRObject

/**
 *  Resource manager tags to be bound to the instance. Tag keys and values have
 *  the same definition as resource manager tags. Keys must be in the format
 *  `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The
 *  field is ignored (both PUT & PATCH) when empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceParams_ResourceManagerTags *resourceManagerTags;

@end


/**
 *  Resource manager tags to be bound to the instance. Tag keys and values have
 *  the same definition as resource manager tags. Keys must be in the format
 *  `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The
 *  field is ignored (both PUT & PATCH) when empty.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_InstanceParams_ResourceManagerTags : GTLRObject
@end


/**
 *  GTLRCompute_InstanceProperties
 */
@interface GTLRCompute_InstanceProperties : GTLRObject

/**
 *  Controls for advanced machine-related behavior features. Note that for
 *  MachineImage, this is not supported yet.
 */
@property(nonatomic, strong, nullable) GTLRCompute_AdvancedMachineFeatures *advancedMachineFeatures;

/**
 *  Enables instances created based on these properties to send packets with
 *  source IP addresses other than their own and receive packets with
 *  destination IP addresses other than their own. If these instances will be
 *  used as an IP gateway or it will be set as the next-hop in a Route resource,
 *  specify true. If unsure, leave this set to false. See the Enable IP
 *  forwarding documentation for more information.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *canIpForward;

/**
 *  Specifies the Confidential Instance options. Note that for MachineImage,
 *  this is not supported yet.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ConfidentialInstanceConfig *confidentialInstanceConfig;

/**
 *  An optional text description for the instances that are created from these
 *  properties.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  An array of disks that are associated with the instances that are created
 *  from these properties.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AttachedDisk *> *disks;

/**
 *  A list of guest accelerator cards' type and count to use for instances
 *  created from these properties.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AcceleratorConfig *> *guestAccelerators;

/**
 *  KeyRevocationActionType of the instance. Supported options are "STOP" and
 *  "NONE". The default value is "NONE" if it is not specified.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceProperties_KeyRevocationActionType_KeyRevocationActionTypeUnspecified
 *        Default value. This value is unused. (Value:
 *        "KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCompute_InstanceProperties_KeyRevocationActionType_None
 *        Indicates user chose no operation. (Value: "NONE")
 *    @arg @c kGTLRCompute_InstanceProperties_KeyRevocationActionType_Stop
 *        Indicates user chose to opt for VM shutdown on key revocation. (Value:
 *        "STOP")
 */
@property(nonatomic, copy, nullable) NSString *keyRevocationActionType;

/** Labels to apply to instances that are created from these properties. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceProperties_Labels *labels;

/**
 *  The machine type to use for instances that are created from these
 *  properties.
 */
@property(nonatomic, copy, nullable) NSString *machineType;

/**
 *  The metadata key/value pairs to assign to instances that are created from
 *  these properties. These pairs can consist of custom metadata or predefined
 *  keys. See Project and instance metadata for more information.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Metadata *metadata;

/**
 *  Minimum cpu/platform to be used by instances. The instance may be scheduled
 *  on the specified or newer cpu/platform. Applicable values are the friendly
 *  names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or
 *  minCpuPlatform: "Intel Sandy Bridge". For more information, read Specifying
 *  a Minimum CPU Platform.
 */
@property(nonatomic, copy, nullable) NSString *minCpuPlatform;

/** An array of network access configurations for this interface. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkInterface *> *networkInterfaces;

/** Note that for MachineImage, this is not supported yet. */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkPerformanceConfig *networkPerformanceConfig;

/**
 *  The private IPv6 google access type for VMs. If not specified, use
 *  INHERIT_FROM_SUBNETWORK as default. Note that for MachineImage, this is not
 *  supported yet.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceProperties_PrivateIpv6GoogleAccess_EnableBidirectionalAccessToGoogle
 *        Bidirectional private IPv6 access to/from Google services. If
 *        specified, the subnetwork who is attached to the instance's default
 *        network interface will be assigned an internal IPv6 prefix if it
 *        doesn't have before. (Value: "ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE")
 *    @arg @c kGTLRCompute_InstanceProperties_PrivateIpv6GoogleAccess_EnableOutboundVmAccessToGoogle
 *        Outbound private IPv6 access from VMs in this subnet to Google
 *        services. If specified, the subnetwork who is attached to the
 *        instance's default network interface will be assigned an internal IPv6
 *        prefix if it doesn't have before. (Value:
 *        "ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE")
 *    @arg @c kGTLRCompute_InstanceProperties_PrivateIpv6GoogleAccess_InheritFromSubnetwork
 *        Each network interface inherits PrivateIpv6GoogleAccess from its
 *        subnetwork. (Value: "INHERIT_FROM_SUBNETWORK")
 */
@property(nonatomic, copy, nullable) NSString *privateIpv6GoogleAccess;

/**
 *  Specifies the reservations that instances can consume from. Note that for
 *  MachineImage, this is not supported yet.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ReservationAffinity *reservationAffinity;

/**
 *  Resource manager tags to be bound to the instance. Tag keys and values have
 *  the same definition as resource manager tags. Keys must be in the format
 *  `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The
 *  field is ignored (both PUT & PATCH) when empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceProperties_ResourceManagerTags *resourceManagerTags;

/**
 *  Resource policies (names, not URLs) applied to instances created from these
 *  properties. Note that for MachineImage, this is not supported yet.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourcePolicies;

/**
 *  Specifies the scheduling options for the instances that are created from
 *  these properties.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Scheduling *scheduling;

/**
 *  A list of service accounts with specified scopes. Access tokens for these
 *  service accounts are available to the instances that are created from these
 *  properties. Use metadata queries to obtain the access tokens for these
 *  instances.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ServiceAccount *> *serviceAccounts;

/** Note that for MachineImage, this is not supported yet. */
@property(nonatomic, strong, nullable) GTLRCompute_ShieldedInstanceConfig *shieldedInstanceConfig;

/**
 *  A list of tags to apply to the instances that are created from these
 *  properties. The tags identify valid sources or targets for network
 *  firewalls. The setTags method can modify this list of tags. Each tag within
 *  the list must comply with RFC1035.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Tags *tags;

@end


/**
 *  Labels to apply to instances that are created from these properties.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_InstanceProperties_Labels : GTLRObject
@end


/**
 *  Resource manager tags to be bound to the instance. Tag keys and values have
 *  the same definition as resource manager tags. Keys must be in the format
 *  `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The
 *  field is ignored (both PUT & PATCH) when empty.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_InstanceProperties_ResourceManagerTags : GTLRObject
@end


/**
 *  GTLRCompute_InstanceReference
 */
@interface GTLRCompute_InstanceReference : GTLRObject

/**
 *  The URL for a specific instance. \@required
 *  compute.instancegroups.addInstances/removeInstances
 */
@property(nonatomic, copy, nullable) NSString *instance;

@end


/**
 *  GTLRCompute_InstancesAddResourcePoliciesRequest
 */
@interface GTLRCompute_InstancesAddResourcePoliciesRequest : GTLRObject

/** Resource policies to be added to this instance. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourcePolicies;

@end


/**
 *  GTLRCompute_InstancesGetEffectiveFirewallsResponse
 */
@interface GTLRCompute_InstancesGetEffectiveFirewallsResponse : GTLRObject

/** Effective firewalls from firewall policies. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy *> *firewallPolicys;

/** Effective firewalls on the instance. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Firewall *> *firewalls;

@end


/**
 *  GTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy
 */
@interface GTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy : GTLRObject

/**
 *  [Output Only] Deprecated, please use short name instead. The display name of
 *  the firewall policy.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** [Output Only] The name of the firewall policy. */
@property(nonatomic, copy, nullable) NSString *name;

/** The rules that apply to the network. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_FirewallPolicyRule *> *rules;

/** [Output Only] The short name of the firewall policy. */
@property(nonatomic, copy, nullable) NSString *shortName;

/**
 *  [Output Only] The type of the firewall policy. Can be one of HIERARCHY,
 *  NETWORK, NETWORK_REGIONAL.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Hierarchy
 *        Value "HIERARCHY"
 *    @arg @c kGTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Network
 *        Value "NETWORK"
 *    @arg @c kGTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_NetworkRegional
 *        Value "NETWORK_REGIONAL"
 *    @arg @c kGTLRCompute_InstancesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Unspecified
 *        Value "UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRCompute_InstancesRemoveResourcePoliciesRequest
 */
@interface GTLRCompute_InstancesRemoveResourcePoliciesRequest : GTLRObject

/** Resource policies to be removed from this instance. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourcePolicies;

@end


/**
 *  GTLRCompute_InstancesScopedList
 */
@interface GTLRCompute_InstancesScopedList : GTLRObject

/** [Output Only] A list of instances contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Instance *> *instances;

/**
 *  [Output Only] Informational warning which replaces the list of instances
 *  when the list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_InstancesScopedList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning which replaces the list of instances
 *  when the list is empty.
 */
@interface GTLRCompute_InstancesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InstancesScopedList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstancesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InstancesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_InstancesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_InstancesSetLabelsRequest
 */
@interface GTLRCompute_InstancesSetLabelsRequest : GTLRObject

/**
 *  Fingerprint of the previous set of labels for this resource, used to prevent
 *  conflicts. Provide the latest fingerprint value when making a request to add
 *  or change labels.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *labelFingerprint;

@property(nonatomic, strong, nullable) GTLRCompute_InstancesSetLabelsRequest_Labels *labels;

@end


/**
 *  GTLRCompute_InstancesSetLabelsRequest_Labels
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_InstancesSetLabelsRequest_Labels : GTLRObject
@end


/**
 *  GTLRCompute_InstancesSetMachineResourcesRequest
 */
@interface GTLRCompute_InstancesSetMachineResourcesRequest : GTLRObject

/**
 *  A list of the type and count of accelerator cards attached to the instance.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AcceleratorConfig *> *guestAccelerators;

@end


/**
 *  GTLRCompute_InstancesSetMachineTypeRequest
 */
@interface GTLRCompute_InstancesSetMachineTypeRequest : GTLRObject

/**
 *  Full or partial URL of the machine type resource. See Machine Types for a
 *  full list of machine types. For example:
 *  zones/us-central1-f/machineTypes/n1-standard-1
 */
@property(nonatomic, copy, nullable) NSString *machineType;

@end


/**
 *  GTLRCompute_InstancesSetMinCpuPlatformRequest
 */
@interface GTLRCompute_InstancesSetMinCpuPlatformRequest : GTLRObject

/** Minimum cpu/platform this instance should be started at. */
@property(nonatomic, copy, nullable) NSString *minCpuPlatform;

@end


/**
 *  GTLRCompute_InstancesSetServiceAccountRequest
 */
@interface GTLRCompute_InstancesSetServiceAccountRequest : GTLRObject

/** Email address of the service account. */
@property(nonatomic, copy, nullable) NSString *email;

/** The list of scopes to be made available for this service account. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *scopes;

@end


/**
 *  GTLRCompute_InstancesStartWithEncryptionKeyRequest
 */
@interface GTLRCompute_InstancesStartWithEncryptionKeyRequest : GTLRObject

/**
 *  Array of disks associated with this instance that are protected with a
 *  customer-supplied encryption key. In order to start the instance, the disk
 *  url and its corresponding key must be provided. If the disk is not protected
 *  with a customer-supplied encryption key it should not be specified.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_CustomerEncryptionKeyProtectedDisk *> *disks;

@end


/**
 *  Represents an Instance Template resource. You can use instance templates to
 *  create VM instances and managed instance groups. For more information, read
 *  Instance Templates.
 */
@interface GTLRCompute_InstanceTemplate : GTLRObject

/**
 *  [Output Only] The creation timestamp for this instance template in RFC3339
 *  text format.
 */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] A unique identifier for this instance template. The server
 *  defines this identifier.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] The resource type, which is always compute#instanceTemplate
 *  for instance templates.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource; provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The instance properties for this instance template. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceProperties *properties;

/**
 *  [Output Only] The URL for this instance template. The server defines this
 *  URL.
 */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  The source instance used to create the template. You can provide this as a
 *  partial or full URL to the resource. For example, the following are valid
 *  values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone
 *  /instances/instance - projects/project/zones/zone/instances/instance
 */
@property(nonatomic, copy, nullable) NSString *sourceInstance;

/** The source instance params to use to create this instance template. */
@property(nonatomic, strong, nullable) GTLRCompute_SourceInstanceParams *sourceInstanceParams;

@end


/**
 *  A list of instance templates.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_InstanceTemplateList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of InstanceTemplate resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceTemplate *> *items;

/**
 *  [Output Only] The resource type, which is always
 *  compute#instanceTemplatesListResponse for instance template lists.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceTemplateList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_InstanceTemplateList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InstanceTemplateList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceTemplateList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InstanceTemplateList_Warning_Data_Item
 */
@interface GTLRCompute_InstanceTemplateList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_InstanceWithNamedPorts
 */
@interface GTLRCompute_InstanceWithNamedPorts : GTLRObject

/** [Output Only] The URL of the instance. */
@property(nonatomic, copy, nullable) NSString *instance;

/** [Output Only] The named ports that belong to this instance group. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NamedPort *> *namedPorts;

/**
 *  [Output Only] The status of the instance.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InstanceWithNamedPorts_Status_Deprovisioning The
 *        Nanny is halted and we are performing tear down tasks like network
 *        deprogramming, releasing quota, IP, tearing down disks etc. (Value:
 *        "DEPROVISIONING")
 *    @arg @c kGTLRCompute_InstanceWithNamedPorts_Status_Provisioning Resources
 *        are being allocated for the instance. (Value: "PROVISIONING")
 *    @arg @c kGTLRCompute_InstanceWithNamedPorts_Status_Repairing The instance
 *        is in repair. (Value: "REPAIRING")
 *    @arg @c kGTLRCompute_InstanceWithNamedPorts_Status_Running The instance is
 *        running. (Value: "RUNNING")
 *    @arg @c kGTLRCompute_InstanceWithNamedPorts_Status_Staging All required
 *        resources have been allocated and the instance is being started.
 *        (Value: "STAGING")
 *    @arg @c kGTLRCompute_InstanceWithNamedPorts_Status_Stopped The instance
 *        has stopped successfully. (Value: "STOPPED")
 *    @arg @c kGTLRCompute_InstanceWithNamedPorts_Status_Stopping The instance
 *        is currently stopping (either being deleted or killed). (Value:
 *        "STOPPING")
 *    @arg @c kGTLRCompute_InstanceWithNamedPorts_Status_Suspended The instance
 *        has suspended. (Value: "SUSPENDED")
 *    @arg @c kGTLRCompute_InstanceWithNamedPorts_Status_Suspending The instance
 *        is suspending. (Value: "SUSPENDING")
 *    @arg @c kGTLRCompute_InstanceWithNamedPorts_Status_Terminated The instance
 *        has stopped (either by explicit action or underlying failure). (Value:
 *        "TERMINATED")
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  HttpRouteRuleMatch criteria for field values that must stay within the
 *  specified integer range.
 */
@interface GTLRCompute_Int64RangeMatch : GTLRObject

/**
 *  The end of the range (exclusive) in signed long integer format.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rangeEnd;

/**
 *  The start of the range (inclusive) in signed long integer format.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *rangeStart;

@end


/**
 *  Represents an Interconnect resource. An Interconnect resource is a dedicated
 *  connection between the GCP network and your on-premises network. For more
 *  information, read the Dedicated Interconnect Overview.
 */
@interface GTLRCompute_Interconnect : GTLRObject

/**
 *  Administrative status of the interconnect. When this is set to true, the
 *  Interconnect is functional and can carry traffic. When set to false, no
 *  packets can be carried over the interconnect and no BGP routes are exchanged
 *  over it. By default, the status is set to true.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adminEnabled;

/**
 *  [Output Only] A list of CircuitInfo objects, that describe the individual
 *  circuits in this LAG.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InterconnectCircuitInfo *> *circuitInfos;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  Customer name, to put in the Letter of Authorization as the party authorized
 *  to request a crossconnect.
 */
@property(nonatomic, copy, nullable) NSString *customerName;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** [Output Only] A list of outages expected for this Interconnect. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InterconnectOutageNotification *> *expectedOutages;

/**
 *  [Output Only] IP address configured on the Google side of the Interconnect
 *  link. This can be used only for ping tests.
 */
@property(nonatomic, copy, nullable) NSString *googleIpAddress;

/**
 *  [Output Only] Google reference ID to be used when raising support tickets
 *  with Google or otherwise to debug backend connectivity issues.
 */
@property(nonatomic, copy, nullable) NSString *googleReferenceId;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] A list of the URLs of all InterconnectAttachments configured
 *  to use this Interconnect.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *interconnectAttachments;

/**
 *  Type of interconnect, which can take one of the following values: - PARTNER:
 *  A partner-managed interconnection shared between customers though a partner.
 *  - DEDICATED: A dedicated physical interconnection with the customer. Note
 *  that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Interconnect_InterconnectType_Dedicated A dedicated
 *        physical interconnection with the customer. (Value: "DEDICATED")
 *    @arg @c kGTLRCompute_Interconnect_InterconnectType_ItPrivate [Deprecated]
 *        A private, physical interconnection with the customer. (Value:
 *        "IT_PRIVATE")
 *    @arg @c kGTLRCompute_Interconnect_InterconnectType_Partner A
 *        partner-managed interconnection shared between customers via partner.
 *        (Value: "PARTNER")
 */
@property(nonatomic, copy, nullable) NSString *interconnectType;

/**
 *  [Output Only] Type of the resource. Always compute#interconnect for
 *  interconnects.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Type of link requested, which can take one of the following values: -
 *  LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics -
 *  LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Note that this
 *  field indicates the speed of each of the links in the bundle, not the speed
 *  of the entire bundle.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Interconnect_LinkType_LinkTypeEthernet100gLr 100G
 *        Ethernet, LR Optics. (Value: "LINK_TYPE_ETHERNET_100G_LR")
 *    @arg @c kGTLRCompute_Interconnect_LinkType_LinkTypeEthernet10gLr 10G
 *        Ethernet, LR Optics. [(rate_bps) = 10000000000]; (Value:
 *        "LINK_TYPE_ETHERNET_10G_LR")
 */
@property(nonatomic, copy, nullable) NSString *linkType;

/**
 *  URL of the InterconnectLocation object that represents where this connection
 *  is to be provisioned.
 */
@property(nonatomic, copy, nullable) NSString *location;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Email address to contact the customer NOC for operations and maintenance
 *  notifications regarding this Interconnect. If specified, this will be used
 *  for notifications in addition to all other forms described, such as
 *  Stackdriver logs alerting and Cloud Notifications.
 */
@property(nonatomic, copy, nullable) NSString *nocContactEmail;

/**
 *  [Output Only] The current status of this Interconnect's functionality, which
 *  can take one of the following values: - OS_ACTIVE: A valid Interconnect,
 *  which is turned up and is ready to use. Attachments may be provisioned on
 *  this Interconnect. - OS_UNPROVISIONED: An Interconnect that has not
 *  completed turnup. No attachments may be provisioned on this Interconnect. -
 *  OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal
 *  maintenance. No attachments may be provisioned or updated on this
 *  Interconnect.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Interconnect_OperationalStatus_OsActive The
 *        interconnect is valid, turned up, and ready to use. Attachments may be
 *        provisioned on this interconnect. (Value: "OS_ACTIVE")
 *    @arg @c kGTLRCompute_Interconnect_OperationalStatus_OsUnprovisioned The
 *        interconnect has not completed turnup. No attachments may be
 *        provisioned on this interconnect. (Value: "OS_UNPROVISIONED")
 */
@property(nonatomic, copy, nullable) NSString *operationalStatus;

/**
 *  [Output Only] IP address configured on the customer side of the Interconnect
 *  link. The customer should configure this IP address during turnup when
 *  prompted by Google NOC. This can be used only for ping tests.
 */
@property(nonatomic, copy, nullable) NSString *peerIpAddress;

/**
 *  [Output Only] Number of links actually provisioned in this interconnect.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *provisionedLinkCount;

/**
 *  Target number of physical links in the link bundle, as requested by the
 *  customer.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *requestedLinkCount;

/**
 *  [Output Only] Set to true if the resource satisfies the zone separation
 *  organization policy constraints and false otherwise. Defaults to false if
 *  the field is not present.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] The current state of Interconnect functionality, which can
 *  take one of the following values: - ACTIVE: The Interconnect is valid,
 *  turned up and ready to use. Attachments may be provisioned on this
 *  Interconnect. - UNPROVISIONED: The Interconnect has not completed turnup. No
 *  attachments may be provisioned on this Interconnect. - UNDER_MAINTENANCE:
 *  The Interconnect is undergoing internal maintenance. No attachments may be
 *  provisioned or updated on this Interconnect.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Interconnect_State_Active The interconnect is valid,
 *        turned up, and ready to use. Attachments may be provisioned on this
 *        interconnect. (Value: "ACTIVE")
 *    @arg @c kGTLRCompute_Interconnect_State_Unprovisioned The interconnect has
 *        not completed turnup. No attachments may be provisioned on this
 *        interconnect. (Value: "UNPROVISIONED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Represents an Interconnect Attachment (VLAN) resource. You can use
 *  Interconnect attachments (VLANS) to connect your Virtual Private Cloud
 *  networks to your on-premises networks through an Interconnect. For more
 *  information, read Creating VLAN Attachments.
 */
@interface GTLRCompute_InterconnectAttachment : GTLRObject

/**
 *  Determines whether this Attachment will carry packets. Not present for
 *  PARTNER_PROVIDER.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *adminEnabled;

/**
 *  Provisioned bandwidth capacity for the interconnect attachment. For
 *  attachments of type DEDICATED, the user can set the bandwidth. For
 *  attachments of type PARTNER, the Google Partner that is operating the
 *  interconnect must set the bandwidth. Output only for PARTNER type, mutable
 *  for PARTNER_PROVIDER and DEDICATED, and can take one of the following
 *  values: - BPS_50M: 50 Mbit/s - BPS_100M: 100 Mbit/s - BPS_200M: 200 Mbit/s -
 *  BPS_300M: 300 Mbit/s - BPS_400M: 400 Mbit/s - BPS_500M: 500 Mbit/s - BPS_1G:
 *  1 Gbit/s - BPS_2G: 2 Gbit/s - BPS_5G: 5 Gbit/s - BPS_10G: 10 Gbit/s -
 *  BPS_20G: 20 Gbit/s - BPS_50G: 50 Gbit/s
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectAttachment_Bandwidth_Bps100m 100 Mbit/s
 *        (Value: "BPS_100M")
 *    @arg @c kGTLRCompute_InterconnectAttachment_Bandwidth_Bps10g 10 Gbit/s
 *        (Value: "BPS_10G")
 *    @arg @c kGTLRCompute_InterconnectAttachment_Bandwidth_Bps1g 1 Gbit/s
 *        (Value: "BPS_1G")
 *    @arg @c kGTLRCompute_InterconnectAttachment_Bandwidth_Bps200m 200 Mbit/s
 *        (Value: "BPS_200M")
 *    @arg @c kGTLRCompute_InterconnectAttachment_Bandwidth_Bps20g 20 Gbit/s
 *        (Value: "BPS_20G")
 *    @arg @c kGTLRCompute_InterconnectAttachment_Bandwidth_Bps2g 2 Gbit/s
 *        (Value: "BPS_2G")
 *    @arg @c kGTLRCompute_InterconnectAttachment_Bandwidth_Bps300m 300 Mbit/s
 *        (Value: "BPS_300M")
 *    @arg @c kGTLRCompute_InterconnectAttachment_Bandwidth_Bps400m 400 Mbit/s
 *        (Value: "BPS_400M")
 *    @arg @c kGTLRCompute_InterconnectAttachment_Bandwidth_Bps500m 500 Mbit/s
 *        (Value: "BPS_500M")
 *    @arg @c kGTLRCompute_InterconnectAttachment_Bandwidth_Bps50g 50 Gbit/s
 *        (Value: "BPS_50G")
 *    @arg @c kGTLRCompute_InterconnectAttachment_Bandwidth_Bps50m 50 Mbit/s
 *        (Value: "BPS_50M")
 *    @arg @c kGTLRCompute_InterconnectAttachment_Bandwidth_Bps5g 5 Gbit/s
 *        (Value: "BPS_5G")
 */
@property(nonatomic, copy, nullable) NSString *bandwidth;

/** This field is not available. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *candidateIpv6Subnets;

/**
 *  Up to 16 candidate prefixes that can be used to restrict the allocation of
 *  cloudRouterIpAddress and customerRouterIpAddress for this attachment. All
 *  prefixes must be within link-local address space (169.254.0.0/16) and must
 *  be /29 or shorter (/28, /27, etc). Google will attempt to select an unused
 *  /29 from the supplied candidate prefix(es). The request will fail if all
 *  possible /29s are in use on Google's edge. If not supplied, Google will
 *  randomly select an unused /29 from all of link-local space.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *candidateSubnets;

/**
 *  [Output Only] IPv4 address + prefix length to be configured on Cloud Router
 *  Interface for this interconnect attachment.
 */
@property(nonatomic, copy, nullable) NSString *cloudRouterIpAddress;

/**
 *  [Output Only] IPv6 address + prefix length to be configured on Cloud Router
 *  Interface for this interconnect attachment.
 */
@property(nonatomic, copy, nullable) NSString *cloudRouterIpv6Address;

/** This field is not available. */
@property(nonatomic, copy, nullable) NSString *cloudRouterIpv6InterfaceId;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  [Output Only] IPv4 address + prefix length to be configured on the customer
 *  router subinterface for this interconnect attachment.
 */
@property(nonatomic, copy, nullable) NSString *customerRouterIpAddress;

/**
 *  [Output Only] IPv6 address + prefix length to be configured on the customer
 *  router subinterface for this interconnect attachment.
 */
@property(nonatomic, copy, nullable) NSString *customerRouterIpv6Address;

/** This field is not available. */
@property(nonatomic, copy, nullable) NSString *customerRouterIpv6InterfaceId;

/**
 *  [Output Only] Dataplane version for this InterconnectAttachment. This field
 *  is only present for Dataplane version 2 and higher. Absence of this field in
 *  the API output indicates that the Dataplane is version 1.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *dataplaneVersion;

/**
 *  An optional description of this resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Desired availability domain for the attachment. Only available for type
 *  PARTNER, at creation time, and can take one of the following values: -
 *  AVAILABILITY_DOMAIN_ANY - AVAILABILITY_DOMAIN_1 - AVAILABILITY_DOMAIN_2 For
 *  improved reliability, customers should configure a pair of attachments, one
 *  per availability domain. The selected availability domain will be provided
 *  to the Partner via the pairing key, so that the provisioned circuit will lie
 *  in the specified domain. If not specified, the value will default to
 *  AVAILABILITY_DOMAIN_ANY.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectAttachment_EdgeAvailabilityDomain_AvailabilityDomain1
 *        Value "AVAILABILITY_DOMAIN_1"
 *    @arg @c kGTLRCompute_InterconnectAttachment_EdgeAvailabilityDomain_AvailabilityDomain2
 *        Value "AVAILABILITY_DOMAIN_2"
 *    @arg @c kGTLRCompute_InterconnectAttachment_EdgeAvailabilityDomain_AvailabilityDomainAny
 *        Value "AVAILABILITY_DOMAIN_ANY"
 */
@property(nonatomic, copy, nullable) NSString *edgeAvailabilityDomain;

/**
 *  Indicates the user-supplied encryption option of this VLAN attachment
 *  (interconnectAttachment). Can only be specified at attachment creation for
 *  PARTNER or DEDICATED attachments. Possible values are: - NONE - This is the
 *  default value, which means that the VLAN attachment carries unencrypted
 *  traffic. VMs are able to send traffic to, or receive traffic from, such a
 *  VLAN attachment. - IPSEC - The VLAN attachment carries only encrypted
 *  traffic that is encrypted by an IPsec device, such as an HA VPN gateway or
 *  third-party IPsec VPN. VMs cannot directly send traffic to, or receive
 *  traffic from, such a VLAN attachment. To use *HA VPN over Cloud
 *  Interconnect*, the VLAN attachment must be created with this option.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectAttachment_Encryption_Ipsec The
 *        interconnect attachment will carry only encrypted traffic that is
 *        encrypted by an IPsec device such as HA VPN gateway; VMs cannot
 *        directly send traffic to or receive traffic from such an interconnect
 *        attachment. To use HA VPN over Cloud Interconnect, the interconnect
 *        attachment must be created with this option. (Value: "IPSEC")
 *    @arg @c kGTLRCompute_InterconnectAttachment_Encryption_None This is the
 *        default value, which means the Interconnect Attachment will carry
 *        unencrypted traffic. VMs will be able to send traffic to or receive
 *        traffic from such interconnect attachment. (Value: "NONE")
 */
@property(nonatomic, copy, nullable) NSString *encryption;

/**
 *  [Output Only] Google reference ID, to be used when raising support tickets
 *  with Google or otherwise to debug backend connectivity issues. [Deprecated]
 *  This field is not used.
 */
@property(nonatomic, copy, nullable) NSString *googleReferenceId;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  URL of the underlying Interconnect object that this attachment's traffic
 *  will traverse through.
 */
@property(nonatomic, copy, nullable) NSString *interconnect;

/**
 *  A list of URLs of addresses that have been reserved for the VLAN attachment.
 *  Used only for the VLAN attachment that has the encryption option as IPSEC.
 *  The addresses must be regional internal IP address ranges. When creating an
 *  HA VPN gateway over the VLAN attachment, if the attachment is configured to
 *  use a regional internal IP address, then the VPN gateway's IP address is
 *  allocated from the IP address range specified here. For example, if the HA
 *  VPN gateway's interface 0 is paired to this VLAN attachment, then a regional
 *  internal IP address for the VPN gateway interface 0 will be allocated from
 *  the IP address specified for this VLAN attachment. If this field is not
 *  specified when creating the VLAN attachment, then later on when creating an
 *  HA VPN gateway on this VLAN attachment, the HA VPN gateway's IP address is
 *  allocated from the regional external IP address pool. Not currently
 *  available publicly.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ipsecInternalAddresses;

/**
 *  [Output Only] Type of the resource. Always compute#interconnectAttachment
 *  for interconnect attachments.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Maximum Transmission Unit (MTU), in bytes, of packets passing through this
 *  interconnect attachment. Only 1440 and 1500 are allowed. If not specified,
 *  the value will default to 1440.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mtu;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] The current status of whether or not this interconnect
 *  attachment is functional, which can take one of the following values: -
 *  OS_ACTIVE: The attachment has been turned up and is ready to use. -
 *  OS_UNPROVISIONED: The attachment is not ready to use yet, because turnup is
 *  not complete.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectAttachment_OperationalStatus_OsActive
 *        Indicates that attachment has been turned up and is ready to use.
 *        (Value: "OS_ACTIVE")
 *    @arg @c kGTLRCompute_InterconnectAttachment_OperationalStatus_OsUnprovisioned
 *        Indicates that attachment is not ready to use yet, because turnup is
 *        not complete. (Value: "OS_UNPROVISIONED")
 */
@property(nonatomic, copy, nullable) NSString *operationalStatus;

/**
 *  [Output only for type PARTNER. Input only for PARTNER_PROVIDER. Not present
 *  for DEDICATED]. The opaque identifier of an PARTNER attachment used to
 *  initiate provisioning with a selected partner. Of the form
 *  "XXXXX/region/domain"
 */
@property(nonatomic, copy, nullable) NSString *pairingKey;

/**
 *  Optional BGP ASN for the router supplied by a Layer 3 Partner if they
 *  configured BGP on behalf of the customer. Output only for PARTNER type,
 *  input only for PARTNER_PROVIDER, not available for DEDICATED.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *partnerAsn;

/**
 *  Informational metadata about Partner attachments from Partners to display to
 *  customers. Output only for for PARTNER type, mutable for PARTNER_PROVIDER,
 *  not available for DEDICATED.
 */
@property(nonatomic, strong, nullable) GTLRCompute_InterconnectAttachmentPartnerMetadata *partnerMetadata;

/**
 *  [Output Only] Information specific to an InterconnectAttachment. This
 *  property is populated if the interconnect that this is attached to is of
 *  type DEDICATED.
 */
@property(nonatomic, strong, nullable) GTLRCompute_InterconnectAttachmentPrivateInfo *privateInterconnectInfo;

/**
 *  [Output Only] URL of the region where the regional interconnect attachment
 *  resides. You must specify this field as part of the HTTP request URL. It is
 *  not settable as a field in the request body.
 */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  URL of the Cloud Router to be used for dynamic routing. This router must be
 *  in the same region as this InterconnectAttachment. The
 *  InterconnectAttachment will automatically connect the Interconnect to the
 *  network & region within which the Cloud Router is configured.
 */
@property(nonatomic, copy, nullable) NSString *router;

/**
 *  [Output Only] Set to true if the resource satisfies the zone separation
 *  organization policy constraints and false otherwise. Defaults to false if
 *  the field is not present.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  The stack type for this interconnect attachment to identify whether the IPv6
 *  feature is enabled or not. If not specified, IPV4_ONLY will be used. This
 *  field can be both set at interconnect attachments creation and update
 *  interconnect attachment operations.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectAttachment_StackType_Ipv4Ipv6 The
 *        interconnect attachment can have both IPv4 and IPv6 addresses. (Value:
 *        "IPV4_IPV6")
 *    @arg @c kGTLRCompute_InterconnectAttachment_StackType_Ipv4Only The
 *        interconnect attachment will only be assigned IPv4 addresses. (Value:
 *        "IPV4_ONLY")
 */
@property(nonatomic, copy, nullable) NSString *stackType;

/**
 *  [Output Only] The current state of this attachment's functionality. Enum
 *  values ACTIVE and UNPROVISIONED are shared by DEDICATED/PRIVATE, PARTNER,
 *  and PARTNER_PROVIDER interconnect attachments, while enum values
 *  PENDING_PARTNER, PARTNER_REQUEST_RECEIVED, and PENDING_CUSTOMER are used for
 *  only PARTNER and PARTNER_PROVIDER interconnect attachments. This state can
 *  take one of the following values: - ACTIVE: The attachment has been turned
 *  up and is ready to use. - UNPROVISIONED: The attachment is not ready to use
 *  yet, because turnup is not complete. - PENDING_PARTNER: A newly-created
 *  PARTNER attachment that has not yet been configured on the Partner side. -
 *  PARTNER_REQUEST_RECEIVED: A PARTNER attachment is in the process of
 *  provisioning after a PARTNER_PROVIDER attachment was created that references
 *  it. - PENDING_CUSTOMER: A PARTNER or PARTNER_PROVIDER attachment that is
 *  waiting for a customer to activate it. - DEFUNCT: The attachment was deleted
 *  externally and is no longer functional. This could be because the associated
 *  Interconnect was removed, or because the other side of a Partner attachment
 *  was deleted.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectAttachment_State_Active Indicates that
 *        attachment has been turned up and is ready to use. (Value: "ACTIVE")
 *    @arg @c kGTLRCompute_InterconnectAttachment_State_Defunct The attachment
 *        was deleted externally and is no longer functional. This could be
 *        because the associated Interconnect was wiped out, or because the
 *        other side of a Partner attachment was deleted. (Value: "DEFUNCT")
 *    @arg @c kGTLRCompute_InterconnectAttachment_State_PartnerRequestReceived A
 *        PARTNER attachment is in the process of provisioning after a
 *        PARTNER_PROVIDER attachment was created that references it. (Value:
 *        "PARTNER_REQUEST_RECEIVED")
 *    @arg @c kGTLRCompute_InterconnectAttachment_State_PendingCustomer PARTNER
 *        or PARTNER_PROVIDER attachment that is waiting for the customer to
 *        activate. (Value: "PENDING_CUSTOMER")
 *    @arg @c kGTLRCompute_InterconnectAttachment_State_PendingPartner A newly
 *        created PARTNER attachment that has not yet been configured on the
 *        Partner side. (Value: "PENDING_PARTNER")
 *    @arg @c kGTLRCompute_InterconnectAttachment_State_StateUnspecified Value
 *        "STATE_UNSPECIFIED"
 *    @arg @c kGTLRCompute_InterconnectAttachment_State_Unprovisioned Indicates
 *        that attachment is not ready to use yet, because turnup is not
 *        complete. (Value: "UNPROVISIONED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  The type of interconnect attachment this is, which can take one of the
 *  following values: - DEDICATED: an attachment to a Dedicated Interconnect. -
 *  PARTNER: an attachment to a Partner Interconnect, created by the customer. -
 *  PARTNER_PROVIDER: an attachment to a Partner Interconnect, created by the
 *  partner.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectAttachment_Type_Dedicated Attachment to a
 *        dedicated interconnect. (Value: "DEDICATED")
 *    @arg @c kGTLRCompute_InterconnectAttachment_Type_Partner Attachment to a
 *        partner interconnect, created by the customer. (Value: "PARTNER")
 *    @arg @c kGTLRCompute_InterconnectAttachment_Type_PartnerProvider
 *        Attachment to a partner interconnect, created by the partner. (Value:
 *        "PARTNER_PROVIDER")
 */
@property(nonatomic, copy, nullable) NSString *type;

/**
 *  The IEEE 802.1Q VLAN tag for this attachment, in the range 2-4094. Only
 *  specified at creation time.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *vlanTag8021q;

@end


/**
 *  GTLRCompute_InterconnectAttachmentAggregatedList
 */
@interface GTLRCompute_InterconnectAttachmentAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of InterconnectAttachmentsScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_InterconnectAttachmentAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always
 *  compute#interconnectAttachmentAggregatedList for aggregated lists of
 *  interconnect attachments.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_InterconnectAttachmentAggregatedList_Warning *warning;

@end


/**
 *  A list of InterconnectAttachmentsScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_InterconnectAttachmentsScopedList. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_InterconnectAttachmentAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_InterconnectAttachmentAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InterconnectAttachmentAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InterconnectAttachmentAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InterconnectAttachmentAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_InterconnectAttachmentAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Response to the list request, and contains a list of interconnect
 *  attachments.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_InterconnectAttachmentList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of InterconnectAttachment resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InterconnectAttachment *> *items;

/**
 *  [Output Only] Type of resource. Always compute#interconnectAttachmentList
 *  for lists of interconnect attachments.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_InterconnectAttachmentList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_InterconnectAttachmentList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InterconnectAttachmentList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InterconnectAttachmentList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InterconnectAttachmentList_Warning_Data_Item
 */
@interface GTLRCompute_InterconnectAttachmentList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Informational metadata about Partner attachments from Partners to display to
 *  customers. These fields are propagated from PARTNER_PROVIDER attachments to
 *  their corresponding PARTNER attachments.
 */
@interface GTLRCompute_InterconnectAttachmentPartnerMetadata : GTLRObject

/**
 *  Plain text name of the Interconnect this attachment is connected to, as
 *  displayed in the Partner's portal. For instance "Chicago 1". This value may
 *  be validated to match approved Partner values.
 */
@property(nonatomic, copy, nullable) NSString *interconnectName;

/**
 *  Plain text name of the Partner providing this attachment. This value may be
 *  validated to match approved Partner values.
 */
@property(nonatomic, copy, nullable) NSString *partnerName;

/**
 *  URL of the Partner's portal for this Attachment. Partners may customise this
 *  to be a deep link to the specific resource on the Partner portal. This value
 *  may be validated to match approved Partner values.
 */
@property(nonatomic, copy, nullable) NSString *portalUrl;

@end


/**
 *  Information for an interconnect attachment when this belongs to an
 *  interconnect of type DEDICATED.
 */
@interface GTLRCompute_InterconnectAttachmentPrivateInfo : GTLRObject

/**
 *  [Output Only] 802.1q encapsulation tag to be used for traffic between Google
 *  and the customer, going to and from this network and region.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *tag8021q;

@end


/**
 *  GTLRCompute_InterconnectAttachmentsScopedList
 */
@interface GTLRCompute_InterconnectAttachmentsScopedList : GTLRObject

/** A list of interconnect attachments contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InterconnectAttachment *> *interconnectAttachments;

/**
 *  Informational warning which replaces the list of addresses when the list is
 *  empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_InterconnectAttachmentsScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of addresses when the list is
 *  empty.
 */
@interface GTLRCompute_InterconnectAttachmentsScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InterconnectAttachmentsScopedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InterconnectAttachmentsScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InterconnectAttachmentsScopedList_Warning_Data_Item
 */
@interface GTLRCompute_InterconnectAttachmentsScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Describes a single physical circuit between the Customer and Google.
 *  CircuitInfo objects are created by Google, so all fields are output only.
 */
@interface GTLRCompute_InterconnectCircuitInfo : GTLRObject

/** Customer-side demarc ID for this circuit. */
@property(nonatomic, copy, nullable) NSString *customerDemarcId;

/**
 *  Google-assigned unique ID for this circuit. Assigned at circuit turn-up.
 */
@property(nonatomic, copy, nullable) NSString *googleCircuitId;

/**
 *  Google-side demarc ID for this circuit. Assigned at circuit turn-up and
 *  provided by Google to the customer in the LOA.
 */
@property(nonatomic, copy, nullable) NSString *googleDemarcId;

@end


/**
 *  Diagnostics information about interconnect, contains detailed and current
 *  technical information about Google's side of the connection.
 */
@interface GTLRCompute_InterconnectDiagnostics : GTLRObject

/**
 *  A list of InterconnectDiagnostics.ARPEntry objects, describing individual
 *  neighbors currently seen by the Google router in the ARP cache for the
 *  Interconnect. This will be empty when the Interconnect is not bundled.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InterconnectDiagnosticsARPEntry *> *arpCaches;

/**
 *  A list of InterconnectDiagnostics.LinkStatus objects, describing the status
 *  for each link on the Interconnect.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InterconnectDiagnosticsLinkStatus *> *links;

/** The MAC address of the Interconnect's bundle interface. */
@property(nonatomic, copy, nullable) NSString *macAddress;

@end


/**
 *  Describing the ARP neighbor entries seen on this link
 */
@interface GTLRCompute_InterconnectDiagnosticsARPEntry : GTLRObject

/** The IP address of this ARP neighbor. */
@property(nonatomic, copy, nullable) NSString *ipAddress;

/** The MAC address of this ARP neighbor. */
@property(nonatomic, copy, nullable) NSString *macAddress;

@end


/**
 *  GTLRCompute_InterconnectDiagnosticsLinkLACPStatus
 */
@interface GTLRCompute_InterconnectDiagnosticsLinkLACPStatus : GTLRObject

/** System ID of the port on Google's side of the LACP exchange. */
@property(nonatomic, copy, nullable) NSString *googleSystemId;

/** System ID of the port on the neighbor's side of the LACP exchange. */
@property(nonatomic, copy, nullable) NSString *neighborSystemId;

/**
 *  The state of a LACP link, which can take one of the following values: -
 *  ACTIVE: The link is configured and active within the bundle. - DETACHED: The
 *  link is not configured within the bundle. This means that the rest of the
 *  object should be empty.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectDiagnosticsLinkLACPStatus_State_Active
 *        The link is configured and active within the bundle. (Value: "ACTIVE")
 *    @arg @c kGTLRCompute_InterconnectDiagnosticsLinkLACPStatus_State_Detached
 *        The link is not configured within the bundle, this means the rest of
 *        the object should be empty. (Value: "DETACHED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  GTLRCompute_InterconnectDiagnosticsLinkOpticalPower
 */
@interface GTLRCompute_InterconnectDiagnosticsLinkOpticalPower : GTLRObject

/**
 *  The status of the current value when compared to the warning and alarm
 *  levels for the receiving or transmitting transceiver. Possible states
 *  include: - OK: The value has not crossed a warning threshold. - LOW_WARNING:
 *  The value has crossed below the low warning threshold. - HIGH_WARNING: The
 *  value has crossed above the high warning threshold. - LOW_ALARM: The value
 *  has crossed below the low alarm threshold. - HIGH_ALARM: The value has
 *  crossed above the high alarm threshold.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_HighAlarm
 *        The value has crossed above the high alarm threshold. (Value:
 *        "HIGH_ALARM")
 *    @arg @c kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_HighWarning
 *        The value of the current optical power has crossed above the high
 *        warning threshold. (Value: "HIGH_WARNING")
 *    @arg @c kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_LowAlarm
 *        The value of the current optical power has crossed below the low alarm
 *        threshold. (Value: "LOW_ALARM")
 *    @arg @c kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_LowWarning
 *        The value of the current optical power has crossed below the low
 *        warning threshold. (Value: "LOW_WARNING")
 *    @arg @c kGTLRCompute_InterconnectDiagnosticsLinkOpticalPower_State_Ok The
 *        value of the current optical power has not crossed a warning
 *        threshold. (Value: "OK")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Value of the current receiving or transmitting optical power, read in dBm.
 *  Take a known good optical value, give it a 10% margin and trigger warnings
 *  relative to that value. In general, a -7dBm warning and a -11dBm alarm are
 *  good optical value estimates for most links.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *value;

@end


/**
 *  GTLRCompute_InterconnectDiagnosticsLinkStatus
 */
@interface GTLRCompute_InterconnectDiagnosticsLinkStatus : GTLRObject

/**
 *  A list of InterconnectDiagnostics.ARPEntry objects, describing the ARP
 *  neighbor entries seen on this link. This will be empty if the link is
 *  bundled
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InterconnectDiagnosticsARPEntry *> *arpCaches;

/** The unique ID for this link assigned during turn up by Google. */
@property(nonatomic, copy, nullable) NSString *circuitId;

/** The Demarc address assigned by Google and provided in the LoA. */
@property(nonatomic, copy, nullable) NSString *googleDemarc;

@property(nonatomic, strong, nullable) GTLRCompute_InterconnectDiagnosticsLinkLACPStatus *lacpStatus;

/**
 *  An InterconnectDiagnostics.LinkOpticalPower object, describing the current
 *  value and status of the received light level.
 */
@property(nonatomic, strong, nullable) GTLRCompute_InterconnectDiagnosticsLinkOpticalPower *receivingOpticalPower;

/**
 *  An InterconnectDiagnostics.LinkOpticalPower object, describing the current
 *  value and status of the transmitted light level.
 */
@property(nonatomic, strong, nullable) GTLRCompute_InterconnectDiagnosticsLinkOpticalPower *transmittingOpticalPower;

@end


/**
 *  Response to the list request, and contains a list of interconnects.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_InterconnectList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Interconnect resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Interconnect *> *items;

/**
 *  [Output Only] Type of resource. Always compute#interconnectList for lists of
 *  interconnects.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_InterconnectList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_InterconnectList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_PartialSuccess Success
 *        is reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_ResourceNotDeleted One
 *        or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InterconnectList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InterconnectList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InterconnectList_Warning_Data_Item
 */
@interface GTLRCompute_InterconnectList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents an Interconnect Attachment (VLAN) Location resource. You can use
 *  this resource to find location details about an Interconnect attachment
 *  (VLAN). For more information about interconnect attachments, read Creating
 *  VLAN Attachments.
 */
@interface GTLRCompute_InterconnectLocation : GTLRObject

/**
 *  [Output Only] The postal address of the Point of Presence, each line in the
 *  address is separated by a newline character.
 */
@property(nonatomic, copy, nullable) NSString *address;

/**
 *  [Output Only] Availability zone for this InterconnectLocation. Within a
 *  metropolitan area (metro), maintenance will not be simultaneously scheduled
 *  in more than one availability zone. Example: "zone1" or "zone2".
 */
@property(nonatomic, copy, nullable) NSString *availabilityZone;

/**
 *  [Output Only] Metropolitan area designator that indicates which city an
 *  interconnect is located. For example: "Chicago, IL", "Amsterdam,
 *  Netherlands".
 */
@property(nonatomic, copy, nullable) NSString *city;

/**
 *  [Output Only] Continent for this location, which can take one of the
 *  following values: - AFRICA - ASIA_PAC - EUROPE - NORTH_AMERICA -
 *  SOUTH_AMERICA
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectLocation_Continent_Africa Value "AFRICA"
 *    @arg @c kGTLRCompute_InterconnectLocation_Continent_AsiaPac Value
 *        "ASIA_PAC"
 *    @arg @c kGTLRCompute_InterconnectLocation_Continent_CAfrica Value
 *        "C_AFRICA"
 *    @arg @c kGTLRCompute_InterconnectLocation_Continent_CAsiaPac Value
 *        "C_ASIA_PAC"
 *    @arg @c kGTLRCompute_InterconnectLocation_Continent_CEurope Value
 *        "C_EUROPE"
 *    @arg @c kGTLRCompute_InterconnectLocation_Continent_CNorthAmerica Value
 *        "C_NORTH_AMERICA"
 *    @arg @c kGTLRCompute_InterconnectLocation_Continent_CSouthAmerica Value
 *        "C_SOUTH_AMERICA"
 *    @arg @c kGTLRCompute_InterconnectLocation_Continent_Europe Value "EUROPE"
 *    @arg @c kGTLRCompute_InterconnectLocation_Continent_NorthAmerica Value
 *        "NORTH_AMERICA"
 *    @arg @c kGTLRCompute_InterconnectLocation_Continent_SouthAmerica Value
 *        "SOUTH_AMERICA"
 */
@property(nonatomic, copy, nullable) NSString *continent;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  [Output Only] An optional description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The name of the provider for this facility (e.g., EQUINIX).
 */
@property(nonatomic, copy, nullable) NSString *facilityProvider;

/**
 *  [Output Only] A provider-assigned Identifier for this facility (e.g.,
 *  Ashburn-DC1).
 */
@property(nonatomic, copy, nullable) NSString *facilityProviderFacilityId;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#interconnectLocation for
 *  interconnect locations.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** [Output Only] Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] The peeringdb identifier for this facility (corresponding with
 *  a netfac type in peeringdb).
 */
@property(nonatomic, copy, nullable) NSString *peeringdbFacilityId;

/**
 *  [Output Only] A list of InterconnectLocation.RegionInfo objects, that
 *  describe parameters pertaining to the relation between this
 *  InterconnectLocation and various Google Cloud regions.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InterconnectLocationRegionInfo *> *regionInfos;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] The status of this InterconnectLocation, which can take one of
 *  the following values: - CLOSED: The InterconnectLocation is closed and is
 *  unavailable for provisioning new Interconnects. - AVAILABLE: The
 *  InterconnectLocation is available for provisioning new Interconnects.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectLocation_Status_Available The
 *        InterconnectLocation is available for provisioning new Interconnects.
 *        (Value: "AVAILABLE")
 *    @arg @c kGTLRCompute_InterconnectLocation_Status_Closed The
 *        InterconnectLocation is closed for provisioning new Interconnects.
 *        (Value: "CLOSED")
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  [Output Only] Set to true for locations that support physical zone
 *  separation. Defaults to false if the field is not present.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *supportsPzs;

@end


/**
 *  Response to the list request, and contains a list of interconnect locations.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_InterconnectLocationList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of InterconnectLocation resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InterconnectLocation *> *items;

/**
 *  [Output Only] Type of resource. Always compute#interconnectLocationList for
 *  lists of interconnect locations.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_InterconnectLocationList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_InterconnectLocationList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_InterconnectLocationList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InterconnectLocationList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_InterconnectLocationList_Warning_Data_Item
 */
@interface GTLRCompute_InterconnectLocationList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Information about any potential InterconnectAttachments between an
 *  Interconnect at a specific InterconnectLocation, and a specific Cloud
 *  Region.
 */
@interface GTLRCompute_InterconnectLocationRegionInfo : GTLRObject

/**
 *  Expected round-trip time in milliseconds, from this InterconnectLocation to
 *  a VM in this region.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *expectedRttMs;

/**
 *  Identifies the network presence of this location.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_Global
 *        This region is not in any common network presence with this
 *        InterconnectLocation. (Value: "GLOBAL")
 *    @arg @c kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_LocalRegion
 *        This region shares the same regional network presence as this
 *        InterconnectLocation. (Value: "LOCAL_REGION")
 *    @arg @c kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_LpGlobal
 *        [Deprecated] This region is not in any common network presence with
 *        this InterconnectLocation. (Value: "LP_GLOBAL")
 *    @arg @c kGTLRCompute_InterconnectLocationRegionInfo_LocationPresence_LpLocalRegion
 *        [Deprecated] This region shares the same regional network presence as
 *        this InterconnectLocation. (Value: "LP_LOCAL_REGION")
 */
@property(nonatomic, copy, nullable) NSString *locationPresence;

/** URL for the region of this location. */
@property(nonatomic, copy, nullable) NSString *region;

@end


/**
 *  Description of a planned outage on this Interconnect.
 */
@interface GTLRCompute_InterconnectOutageNotification : GTLRObject

/**
 *  If issue_type is IT_PARTIAL_OUTAGE, a list of the Google-side circuit IDs
 *  that will be affected.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *affectedCircuits;

/**
 *  A description about the purpose of the outage.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Scheduled end time for the outage (milliseconds since Unix epoch).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *endTime;

/**
 *  Form this outage is expected to take, which can take one of the following
 *  values: - OUTAGE: The Interconnect may be completely out of service for some
 *  or all of the specified window. - PARTIAL_OUTAGE: Some circuits comprising
 *  the Interconnect as a whole should remain up, but with reduced bandwidth.
 *  Note that the versions of this enum prefixed with "IT_" have been deprecated
 *  in favor of the unprefixed values.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectOutageNotification_IssueType_ItOutage
 *        [Deprecated] The Interconnect may be completely out of service for
 *        some or all of the specified window. (Value: "IT_OUTAGE")
 *    @arg @c kGTLRCompute_InterconnectOutageNotification_IssueType_ItPartialOutage
 *        [Deprecated] Some circuits comprising the Interconnect will be out of
 *        service during the expected window. The interconnect as a whole should
 *        remain up, albeit with reduced bandwidth. (Value: "IT_PARTIAL_OUTAGE")
 *    @arg @c kGTLRCompute_InterconnectOutageNotification_IssueType_Outage The
 *        Interconnect may be completely out of service for some or all of the
 *        specified window. (Value: "OUTAGE")
 *    @arg @c kGTLRCompute_InterconnectOutageNotification_IssueType_PartialOutage
 *        Some circuits comprising the Interconnect will be out of service
 *        during the expected window. The interconnect as a whole should remain
 *        up, albeit with reduced bandwidth. (Value: "PARTIAL_OUTAGE")
 */
@property(nonatomic, copy, nullable) NSString *issueType;

/** Unique identifier for this outage notification. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The party that generated this notification, which can take the following
 *  value: - GOOGLE: this notification as generated by Google. Note that the
 *  value of NSRC_GOOGLE has been deprecated in favor of GOOGLE.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectOutageNotification_Source_Google This
 *        notification was generated by Google. (Value: "GOOGLE")
 *    @arg @c kGTLRCompute_InterconnectOutageNotification_Source_NsrcGoogle
 *        [Deprecated] This notification was generated by Google. (Value:
 *        "NSRC_GOOGLE")
 */
@property(nonatomic, copy, nullable) NSString *source;

/**
 *  Scheduled start time for the outage (milliseconds since Unix epoch).
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *startTime;

/**
 *  State of this notification, which can take one of the following values: -
 *  ACTIVE: This outage notification is active. The event could be in the past,
 *  present, or future. See start_time and end_time for scheduling. - CANCELLED:
 *  The outage associated with this notification was cancelled before the outage
 *  was due to start. - COMPLETED: The outage associated with this notification
 *  is complete. Note that the versions of this enum prefixed with "NS_" have
 *  been deprecated in favor of the unprefixed values.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_InterconnectOutageNotification_State_Active This
 *        outage notification is active. The event could be in the future,
 *        present, or past. See start_time and end_time for scheduling. (Value:
 *        "ACTIVE")
 *    @arg @c kGTLRCompute_InterconnectOutageNotification_State_Cancelled The
 *        outage associated with this notification was cancelled before the
 *        outage was due to start. (Value: "CANCELLED")
 *    @arg @c kGTLRCompute_InterconnectOutageNotification_State_Completed The
 *        outage associated with this notification is complete. (Value:
 *        "COMPLETED")
 *    @arg @c kGTLRCompute_InterconnectOutageNotification_State_NsActive
 *        [Deprecated] This outage notification is active. The event could be in
 *        the future, present, or past. See start_time and end_time for
 *        scheduling. (Value: "NS_ACTIVE")
 *    @arg @c kGTLRCompute_InterconnectOutageNotification_State_NsCanceled
 *        [Deprecated] The outage associated with this notification was canceled
 *        before the outage was due to start. (Value: "NS_CANCELED")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Response for the InterconnectsGetDiagnosticsRequest.
 */
@interface GTLRCompute_InterconnectsGetDiagnosticsResponse : GTLRObject

@property(nonatomic, strong, nullable) GTLRCompute_InterconnectDiagnostics *result;

@end


/**
 *  Represents a License resource. A License represents billing and aggregate
 *  usage data for public and marketplace images. *Caution* This resource is
 *  intended for use only by third-party partners who are creating Cloud
 *  Marketplace images.
 */
@interface GTLRCompute_License : GTLRObject

/**
 *  [Output Only] Deprecated. This field no longer reflects whether a license
 *  charges a usage fee.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *chargesUseFee;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional textual description of the resource; provided by the client when
 *  the resource is created.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** [Output Only] Type of resource. Always compute#license for licenses. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] The unique code used to attach this license to images,
 *  snapshots, and disks.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *licenseCode;

/**
 *  Name of the resource. The name must be 1-63 characters long and comply with
 *  RFC1035.
 */
@property(nonatomic, copy, nullable) NSString *name;

@property(nonatomic, strong, nullable) GTLRCompute_LicenseResourceRequirements *resourceRequirements;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  If false, licenses will not be copied from the source resource when creating
 *  an image from a disk, disk from snapshot, or snapshot from disk.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *transferable;

@end


/**
 *  Represents a License Code resource. A License Code is a unique identifier
 *  used to represent a license resource. *Caution* This resource is intended
 *  for use only by third-party partners who are creating Cloud Marketplace
 *  images.
 */
@interface GTLRCompute_LicenseCode : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  [Output Only] Description of this License Code.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of resource. Always compute#licenseCode for licenses.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] URL and description aliases of Licenses with the same License
 *  Code.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_LicenseCodeLicenseAlias *> *licenseAlias;

/**
 *  [Output Only] Name of the resource. The name is 1-20 characters long and
 *  must be a valid 64 bit integer.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] Current state of this License Code.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_LicenseCode_State_Disabled Machines are not allowed
 *        to attach boot disks with this License Code. Requests to create new
 *        resources with this license will be rejected. (Value: "DISABLED")
 *    @arg @c kGTLRCompute_LicenseCode_State_Enabled Use is allowed for anyone
 *        with USE_READ_ONLY access to this License Code. (Value: "ENABLED")
 *    @arg @c kGTLRCompute_LicenseCode_State_Restricted Use of this license is
 *        limited to a project whitelist. (Value: "RESTRICTED")
 *    @arg @c kGTLRCompute_LicenseCode_State_StateUnspecified Value
 *        "STATE_UNSPECIFIED"
 *    @arg @c kGTLRCompute_LicenseCode_State_Terminated Reserved state. (Value:
 *        "TERMINATED")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  [Output Only] If true, the license will remain attached when creating images
 *  or snapshots from disks. Otherwise, the license is not transferred.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *transferable;

@end


/**
 *  GTLRCompute_LicenseCodeLicenseAlias
 */
@interface GTLRCompute_LicenseCodeLicenseAlias : GTLRObject

/**
 *  [Output Only] Description of this License Code.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** [Output Only] URL of license corresponding to this License Code. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end


/**
 *  Commitment for a particular license resource.
 */
@interface GTLRCompute_LicenseResourceCommitment : GTLRObject

/**
 *  The number of licenses purchased.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *amount;

/**
 *  Specifies the core range of the instance for which this license applies.
 */
@property(nonatomic, copy, nullable) NSString *coresPerLicense;

/** Any applicable license URI. */
@property(nonatomic, copy, nullable) NSString *license;

@end


/**
 *  GTLRCompute_LicenseResourceRequirements
 */
@interface GTLRCompute_LicenseResourceRequirements : GTLRObject

/**
 *  Minimum number of guest cpus required to use the Instance. Enforced at
 *  Instance creation and Instance start.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minGuestCpuCount;

/**
 *  Minimum memory required to use the Instance. Enforced at Instance creation
 *  and Instance start.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minMemoryMb;

@end


/**
 *  GTLRCompute_LicensesListResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_LicensesListResponse : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of License resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_License *> *items;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_LicensesListResponse_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_LicensesListResponse_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_LicensesListResponse_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_LicensesListResponse_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_LicensesListResponse_Warning_Data_Item
 */
@interface GTLRCompute_LicensesListResponse_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_LocalDisk
 */
@interface GTLRCompute_LocalDisk : GTLRObject

/**
 *  Specifies the number of such disks.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *diskCount;

/**
 *  Specifies the size of the disk in base-2 GB.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *diskSizeGb;

/**
 *  Specifies the desired disk type on the node. This disk type must be a local
 *  storage type (e.g.: local-ssd). Note that for nodeTemplates, this should be
 *  the name of the disk type and not its URL.
 */
@property(nonatomic, copy, nullable) NSString *diskType;

@end


/**
 *  Provides a localized error message that is safe to return to the user which
 *  can be attached to an RPC error.
 */
@interface GTLRCompute_LocalizedMessage : GTLRObject

/**
 *  The locale used following the specification defined at
 *  https://www.rfc-editor.org/rfc/bcp/bcp47.txt. Examples are: "en-US",
 *  "fr-CH", "es-MX"
 */
@property(nonatomic, copy, nullable) NSString *locale;

/** The localized error message in the above locale. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  Configuration for location policy among multiple possible locations (e.g.
 *  preferences for zone selection among zones in a single region).
 */
@interface GTLRCompute_LocationPolicy : GTLRObject

/**
 *  Location configurations mapped by location name. Currently only zone names
 *  are supported and must be represented as valid internal URLs, such as
 *  zones/us-central1-a.
 */
@property(nonatomic, strong, nullable) GTLRCompute_LocationPolicy_Locations *locations;

/**
 *  Strategy for distributing VMs across zones in a region.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_LocationPolicy_TargetShape_Any GCE picks zones for
 *        creating VM instances to fulfill the requested number of VMs within
 *        present resource constraints and to maximize utilization of unused
 *        zonal reservations. Recommended for batch workloads that do not
 *        require high availability. (Value: "ANY")
 *    @arg @c kGTLRCompute_LocationPolicy_TargetShape_AnySingleZone GCE always
 *        selects a single zone for all the VMs, optimizing for resource quotas,
 *        available reservations and general capacity. Recommended for batch
 *        workloads that cannot tollerate distribution over multiple zones. This
 *        the default shape in Bulk Insert and Capacity Advisor APIs. (Value:
 *        "ANY_SINGLE_ZONE")
 *    @arg @c kGTLRCompute_LocationPolicy_TargetShape_Balanced GCE prioritizes
 *        acquisition of resources, scheduling VMs in zones where resources are
 *        available while distributing VMs as evenly as possible across allowed
 *        zones to minimize the impact of zonal failure. Recommended for highly
 *        available serving workloads. (Value: "BALANCED")
 */
@property(nonatomic, copy, nullable) NSString *targetShape;

@end


/**
 *  Location configurations mapped by location name. Currently only zone names
 *  are supported and must be represented as valid internal URLs, such as
 *  zones/us-central1-a.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_LocationPolicyLocation. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_LocationPolicy_Locations : GTLRObject
@end


/**
 *  GTLRCompute_LocationPolicyLocation
 */
@interface GTLRCompute_LocationPolicyLocation : GTLRObject

/**
 *  Constraints that the caller requires on the result distribution in this
 *  zone.
 */
@property(nonatomic, strong, nullable) GTLRCompute_LocationPolicyLocationConstraints *constraints;

/**
 *  Preference for a given location. Set to either ALLOW or DENY.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_LocationPolicyLocation_Preference_Allow Location is
 *        allowed for use. (Value: "ALLOW")
 *    @arg @c kGTLRCompute_LocationPolicyLocation_Preference_Deny Location is
 *        prohibited. (Value: "DENY")
 *    @arg @c kGTLRCompute_LocationPolicyLocation_Preference_PreferenceUnspecified
 *        Default value, unused. (Value: "PREFERENCE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *preference;

@end


/**
 *  Per-zone constraints on location policy for this zone.
 */
@interface GTLRCompute_LocationPolicyLocationConstraints : GTLRObject

/**
 *  Maximum number of items that are allowed to be placed in this zone. The
 *  value must be non-negative.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxCount;

@end


/**
 *  This is deprecated and has no effect. Do not use.
 */
@interface GTLRCompute_LogConfig : GTLRObject

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, strong, nullable) GTLRCompute_LogConfigCloudAuditOptions *cloudAudit;

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, strong, nullable) GTLRCompute_LogConfigCounterOptions *counter;

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, strong, nullable) GTLRCompute_LogConfigDataAccessOptions *dataAccess;

@end


/**
 *  This is deprecated and has no effect. Do not use.
 */
@interface GTLRCompute_LogConfigCloudAuditOptions : GTLRObject

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, strong, nullable) GTLRCompute_AuthorizationLoggingOptions *authorizationLoggingOptions;

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_LogConfigCloudAuditOptions_LogName_AdminActivity This
 *        is deprecated and has no effect. Do not use. (Value: "ADMIN_ACTIVITY")
 *    @arg @c kGTLRCompute_LogConfigCloudAuditOptions_LogName_DataAccess This is
 *        deprecated and has no effect. Do not use. (Value: "DATA_ACCESS")
 *    @arg @c kGTLRCompute_LogConfigCloudAuditOptions_LogName_UnspecifiedLogName
 *        This is deprecated and has no effect. Do not use. (Value:
 *        "UNSPECIFIED_LOG_NAME")
 */
@property(nonatomic, copy, nullable) NSString *logName;

@end


/**
 *  This is deprecated and has no effect. Do not use.
 */
@interface GTLRCompute_LogConfigCounterOptions : GTLRObject

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_LogConfigCounterOptionsCustomField *> *customFields;

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, copy, nullable) NSString *field;

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, copy, nullable) NSString *metric;

@end


/**
 *  This is deprecated and has no effect. Do not use.
 */
@interface GTLRCompute_LogConfigCounterOptionsCustomField : GTLRObject

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, copy, nullable) NSString *name;

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  This is deprecated and has no effect. Do not use.
 */
@interface GTLRCompute_LogConfigDataAccessOptions : GTLRObject

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_LogConfigDataAccessOptions_LogMode_LogFailClosed This
 *        is deprecated and has no effect. Do not use. (Value:
 *        "LOG_FAIL_CLOSED")
 *    @arg @c kGTLRCompute_LogConfigDataAccessOptions_LogMode_LogModeUnspecified
 *        This is deprecated and has no effect. Do not use. (Value:
 *        "LOG_MODE_UNSPECIFIED")
 */
@property(nonatomic, copy, nullable) NSString *logMode;

@end


/**
 *  Represents a machine image resource. A machine image is a Compute Engine
 *  resource that stores all the configuration, metadata, permissions, and data
 *  from one or more disks required to create a Virtual machine (VM) instance.
 *  For more information, see Machine images.
 */
@interface GTLRCompute_MachineImage : GTLRObject

/**
 *  [Output Only] The creation timestamp for this machine image in RFC3339 text
 *  format.
 */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Input Only] Whether to attempt an application consistent machine image by
 *  informing the OS to prepare for the snapshot process.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *guestFlush;

/**
 *  [Output Only] A unique identifier for this machine image. The server defines
 *  this identifier.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** [Output Only] Properties of source instance */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceProperties *instanceProperties;

/**
 *  [Output Only] The resource type, which is always compute#machineImage for
 *  machine image.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Encrypts the machine image using a customer-supplied encryption key. After
 *  you encrypt a machine image using a customer-supplied key, you must provide
 *  the same key if you use the machine image later. For example, you must
 *  provide the encryption key when you create an instance from the encrypted
 *  machine image in a future request. Customer-supplied encryption keys do not
 *  protect access to metadata of the machine image. If you do not provide an
 *  encryption key when creating the machine image, then the machine image will
 *  be encrypted using an automatically generated key and you do not need to
 *  provide a key to use the machine image later.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *machineImageEncryptionKey;

/**
 *  Name of the resource; provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/**
 *  An array of Machine Image specific properties for disks attached to the
 *  source instance
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SavedDisk *> *savedDisks;

/**
 *  [Output Only] The URL for this machine image. The server defines this URL.
 */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Input Only] The customer-supplied encryption key of the disks attached to
 *  the source instance. Required if the source disk is protected by a
 *  customer-supplied encryption key.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SourceDiskEncryptionKey *> *sourceDiskEncryptionKeys;

/**
 *  The source instance used to create the machine image. You can provide this
 *  as a partial or full URL to the resource. For example, the following are
 *  valid values: -
 *  https://www.googleapis.com/compute/v1/projects/project/zones/zone
 *  /instances/instance - projects/project/zones/zone/instances/instance
 */
@property(nonatomic, copy, nullable) NSString *sourceInstance;

/**
 *  [Output Only] DEPRECATED: Please use instance_properties instead for source
 *  instance related properties. New properties will not be added to this field.
 */
@property(nonatomic, strong, nullable) GTLRCompute_SourceInstanceProperties *sourceInstanceProperties;

/**
 *  [Output Only] The status of the machine image. One of the following values:
 *  INVALID, CREATING, READY, DELETING, and UPLOADING.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_MachineImage_Status_Creating Value "CREATING"
 *    @arg @c kGTLRCompute_MachineImage_Status_Deleting Value "DELETING"
 *    @arg @c kGTLRCompute_MachineImage_Status_Invalid Value "INVALID"
 *    @arg @c kGTLRCompute_MachineImage_Status_Ready Value "READY"
 *    @arg @c kGTLRCompute_MachineImage_Status_Uploading Value "UPLOADING"
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  The regional or multi-regional Cloud Storage bucket location where the
 *  machine image is stored.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *storageLocations;

/**
 *  [Output Only] Total size of the storage used by the machine image.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *totalStorageBytes;

@end


/**
 *  A list of machine images.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_MachineImageList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of MachineImage resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_MachineImage *> *items;

/**
 *  [Output Only] The resource type, which is always
 *  compute#machineImagesListResponse for machine image lists.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_MachineImageList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_MachineImageList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_PartialSuccess Success
 *        is reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_ResourceNotDeleted One
 *        or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_MachineImageList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_MachineImageList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_MachineImageList_Warning_Data_Item
 */
@interface GTLRCompute_MachineImageList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a Machine Type resource. You can use specific machine types for
 *  your VM instances based on performance and pricing requirements. For more
 *  information, read Machine Types.
 */
@interface GTLRCompute_MachineType : GTLRObject

/**
 *  [Output Only] A list of accelerator configurations assigned to this machine
 *  type.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_MachineType_Accelerators_Item *> *accelerators;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  [Output Only] The deprecation status associated with this machine type. Only
 *  applicable if the machine type is unavailable.
 */
@property(nonatomic, strong, nullable) GTLRCompute_DeprecationStatus *deprecated;

/**
 *  [Output Only] An optional textual description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The number of virtual CPUs that are available to the instance.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *guestCpus;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Deprecated] This property is deprecated and will never be populated with
 *  any relevant values.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *imageSpaceGb;

/**
 *  [Output Only] Whether this machine type has a shared CPU. See Shared-core
 *  machine types for more information.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isSharedCpu;

/**
 *  [Output Only] The type of the resource. Always compute#machineType for
 *  machine types.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] Maximum persistent disks allowed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maximumPersistentDisks;

/**
 *  [Output Only] Maximum total persistent disks size (GB) allowed.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maximumPersistentDisksSizeGb;

/**
 *  [Output Only] The amount of physical memory available to the instance,
 *  defined in MB.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *memoryMb;

/** [Output Only] Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] A list of extended scratch disks assigned to the instance.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_MachineType_ScratchDisks_Item *> *scratchDisks;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] The name of the zone where the machine type resides, such as
 *  us-central1-a.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  GTLRCompute_MachineType_Accelerators_Item
 */
@interface GTLRCompute_MachineType_Accelerators_Item : GTLRObject

/**
 *  Number of accelerator cards exposed to the guest.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *guestAcceleratorCount;

/**
 *  The accelerator type resource name, not a full URL, e.g. 'nvidia-tesla-k80'.
 */
@property(nonatomic, copy, nullable) NSString *guestAcceleratorType;

@end


/**
 *  GTLRCompute_MachineType_ScratchDisks_Item
 */
@interface GTLRCompute_MachineType_ScratchDisks_Item : GTLRObject

/**
 *  Size of the scratch disk, defined in GB.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *diskGb;

@end


/**
 *  GTLRCompute_MachineTypeAggregatedList
 */
@interface GTLRCompute_MachineTypeAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of MachineTypesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_MachineTypeAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#machineTypeAggregatedList for
 *  aggregated lists of machine types.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_MachineTypeAggregatedList_Warning *warning;

@end


/**
 *  A list of MachineTypesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_MachineTypesScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_MachineTypeAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_MachineTypeAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_MachineTypeAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_MachineTypeAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_MachineTypeAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_MachineTypeAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of machine types.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_MachineTypeList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of MachineType resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_MachineType *> *items;

/**
 *  [Output Only] Type of resource. Always compute#machineTypeList for lists of
 *  machine types.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_MachineTypeList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_MachineTypeList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_PartialSuccess Success
 *        is reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_ResourceNotDeleted One
 *        or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_MachineTypeList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_MachineTypeList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_MachineTypeList_Warning_Data_Item
 */
@interface GTLRCompute_MachineTypeList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_MachineTypesScopedList
 */
@interface GTLRCompute_MachineTypesScopedList : GTLRObject

/** [Output Only] A list of machine types contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_MachineType *> *machineTypes;

/**
 *  [Output Only] An informational warning that appears when the machine types
 *  list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_MachineTypesScopedList_Warning *warning;

@end


/**
 *  [Output Only] An informational warning that appears when the machine types
 *  list is empty.
 */
@interface GTLRCompute_MachineTypesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_MachineTypesScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_MachineTypesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_MachineTypesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_MachineTypesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  A Managed Instance resource.
 */
@interface GTLRCompute_ManagedInstance : GTLRObject

/**
 *  [Output Only] The current action that the managed instance group has
 *  scheduled for the instance. Possible values: - NONE The instance is running,
 *  and the managed instance group does not have any scheduled actions for this
 *  instance. - CREATING The managed instance group is creating this instance.
 *  If the group fails to create this instance, it will try again until it is
 *  successful. - CREATING_WITHOUT_RETRIES The managed instance group is
 *  attempting to create this instance only once. If the group fails to create
 *  this instance, it does not try again and the group's targetSize value is
 *  decreased instead. - RECREATING The managed instance group is recreating
 *  this instance. - DELETING The managed instance group is permanently deleting
 *  this instance. - ABANDONING The managed instance group is abandoning this
 *  instance. The instance will be removed from the instance group and from any
 *  target pools that are associated with this group. - RESTARTING The managed
 *  instance group is restarting the instance. - REFRESHING The managed instance
 *  group is applying configuration changes to the instance without stopping it.
 *  For example, the group can update the target pool list for an instance
 *  without stopping that instance. - VERIFYING The managed instance group has
 *  created the instance and it is in the process of being verified.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ManagedInstance_CurrentAction_Abandoning The managed
 *        instance group is abandoning this instance. The instance will be
 *        removed from the instance group and from any target pools that are
 *        associated with this group. (Value: "ABANDONING")
 *    @arg @c kGTLRCompute_ManagedInstance_CurrentAction_Creating The managed
 *        instance group is creating this instance. If the group fails to create
 *        this instance, it will try again until it is successful. (Value:
 *        "CREATING")
 *    @arg @c kGTLRCompute_ManagedInstance_CurrentAction_CreatingWithoutRetries
 *        The managed instance group is attempting to create this instance only
 *        once. If the group fails to create this instance, it does not try
 *        again and the group's targetSize value is decreased. (Value:
 *        "CREATING_WITHOUT_RETRIES")
 *    @arg @c kGTLRCompute_ManagedInstance_CurrentAction_Deleting The managed
 *        instance group is permanently deleting this instance. (Value:
 *        "DELETING")
 *    @arg @c kGTLRCompute_ManagedInstance_CurrentAction_None The managed
 *        instance group has not scheduled any actions for this instance.
 *        (Value: "NONE")
 *    @arg @c kGTLRCompute_ManagedInstance_CurrentAction_Recreating The managed
 *        instance group is recreating this instance. (Value: "RECREATING")
 *    @arg @c kGTLRCompute_ManagedInstance_CurrentAction_Refreshing The managed
 *        instance group is applying configuration changes to the instance
 *        without stopping it. For example, the group can update the target pool
 *        list for an instance without stopping that instance. (Value:
 *        "REFRESHING")
 *    @arg @c kGTLRCompute_ManagedInstance_CurrentAction_Restarting The managed
 *        instance group is restarting this instance. (Value: "RESTARTING")
 *    @arg @c kGTLRCompute_ManagedInstance_CurrentAction_Resuming The managed
 *        instance group is resuming this instance. (Value: "RESUMING")
 *    @arg @c kGTLRCompute_ManagedInstance_CurrentAction_Starting The managed
 *        instance group is starting this instance. (Value: "STARTING")
 *    @arg @c kGTLRCompute_ManagedInstance_CurrentAction_Stopping The managed
 *        instance group is stopping this instance. (Value: "STOPPING")
 *    @arg @c kGTLRCompute_ManagedInstance_CurrentAction_Suspending The managed
 *        instance group is suspending this instance. (Value: "SUSPENDING")
 *    @arg @c kGTLRCompute_ManagedInstance_CurrentAction_Verifying The managed
 *        instance group is verifying this already created instance.
 *        Verification happens every time the instance is (re)created or
 *        restarted and consists of: 1. Waiting until health check specified as
 *        part of this managed instance group's autohealing policy reports
 *        HEALTHY. Note: Applies only if autohealing policy has a health check
 *        specified 2. Waiting for addition verification steps performed as
 *        post-instance creation (subject to future extensions). (Value:
 *        "VERIFYING")
 */
@property(nonatomic, copy, nullable) NSString *currentAction;

/**
 *  [Output only] The unique identifier for this resource. This field is empty
 *  when instance does not exist.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] The URL of the instance. The URL can exist even if the
 *  instance has not yet been created.
 */
@property(nonatomic, copy, nullable) NSString *instance;

/** [Output Only] Health state of the instance per health-check. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ManagedInstanceInstanceHealth *> *instanceHealth;

/**
 *  [Output Only] The status of the instance. This field is empty when the
 *  instance does not exist.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ManagedInstance_InstanceStatus_Deprovisioning The
 *        Nanny is halted and we are performing tear down tasks like network
 *        deprogramming, releasing quota, IP, tearing down disks etc. (Value:
 *        "DEPROVISIONING")
 *    @arg @c kGTLRCompute_ManagedInstance_InstanceStatus_Provisioning Resources
 *        are being allocated for the instance. (Value: "PROVISIONING")
 *    @arg @c kGTLRCompute_ManagedInstance_InstanceStatus_Repairing The instance
 *        is in repair. (Value: "REPAIRING")
 *    @arg @c kGTLRCompute_ManagedInstance_InstanceStatus_Running The instance
 *        is running. (Value: "RUNNING")
 *    @arg @c kGTLRCompute_ManagedInstance_InstanceStatus_Staging All required
 *        resources have been allocated and the instance is being started.
 *        (Value: "STAGING")
 *    @arg @c kGTLRCompute_ManagedInstance_InstanceStatus_Stopped The instance
 *        has stopped successfully. (Value: "STOPPED")
 *    @arg @c kGTLRCompute_ManagedInstance_InstanceStatus_Stopping The instance
 *        is currently stopping (either being deleted or killed). (Value:
 *        "STOPPING")
 *    @arg @c kGTLRCompute_ManagedInstance_InstanceStatus_Suspended The instance
 *        has suspended. (Value: "SUSPENDED")
 *    @arg @c kGTLRCompute_ManagedInstance_InstanceStatus_Suspending The
 *        instance is suspending. (Value: "SUSPENDING")
 *    @arg @c kGTLRCompute_ManagedInstance_InstanceStatus_Terminated The
 *        instance has stopped (either by explicit action or underlying
 *        failure). (Value: "TERMINATED")
 */
@property(nonatomic, copy, nullable) NSString *instanceStatus;

/**
 *  [Output Only] Information about the last attempt to create or delete the
 *  instance.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ManagedInstanceLastAttempt *lastAttempt;

/**
 *  [Output Only] Preserved state applied from per-instance config for this
 *  instance.
 */
@property(nonatomic, strong, nullable) GTLRCompute_PreservedState *preservedStateFromConfig;

/**
 *  [Output Only] Preserved state generated based on stateful policy for this
 *  instance.
 */
@property(nonatomic, strong, nullable) GTLRCompute_PreservedState *preservedStateFromPolicy;

/** [Output Only] Intended version of this instance. */
@property(nonatomic, strong, nullable) GTLRCompute_ManagedInstanceVersion *version;

@end


/**
 *  GTLRCompute_ManagedInstanceInstanceHealth
 */
@interface GTLRCompute_ManagedInstanceInstanceHealth : GTLRObject

/**
 *  [Output Only] The current detailed instance health state.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ManagedInstanceInstanceHealth_DetailedHealthState_Draining
 *        The instance is being drained. The existing connections to the
 *        instance have time to complete, but the new ones are being refused.
 *        (Value: "DRAINING")
 *    @arg @c kGTLRCompute_ManagedInstanceInstanceHealth_DetailedHealthState_Healthy
 *        The instance is reachable i.e. a connection to the application health
 *        checking endpoint can be established, and conforms to the requirements
 *        defined by the health check. (Value: "HEALTHY")
 *    @arg @c kGTLRCompute_ManagedInstanceInstanceHealth_DetailedHealthState_Timeout
 *        The instance is unreachable i.e. a connection to the application
 *        health checking endpoint cannot be established, or the server does not
 *        respond within the specified timeout. (Value: "TIMEOUT")
 *    @arg @c kGTLRCompute_ManagedInstanceInstanceHealth_DetailedHealthState_Unhealthy
 *        The instance is reachable, but does not conform to the requirements
 *        defined by the health check. (Value: "UNHEALTHY")
 *    @arg @c kGTLRCompute_ManagedInstanceInstanceHealth_DetailedHealthState_Unknown
 *        The health checking system is aware of the instance but its health is
 *        not known at the moment. (Value: "UNKNOWN")
 */
@property(nonatomic, copy, nullable) NSString *detailedHealthState;

/**
 *  [Output Only] The URL for the health check that verifies whether the
 *  instance is healthy.
 */
@property(nonatomic, copy, nullable) NSString *healthCheck;

@end


/**
 *  GTLRCompute_ManagedInstanceLastAttempt
 */
@interface GTLRCompute_ManagedInstanceLastAttempt : GTLRObject

/**
 *  [Output Only] Encountered errors during the last attempt to create or delete
 *  the instance.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ManagedInstanceLastAttempt_Errors *errors;

@end


/**
 *  [Output Only] Encountered errors during the last attempt to create or delete
 *  the instance.
 */
@interface GTLRCompute_ManagedInstanceLastAttempt_Errors : GTLRObject

/**
 *  [Output Only] The array of errors encountered while processing this
 *  operation.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item *> *errors;

@end


/**
 *  GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item
 */
@interface GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item : GTLRObject

/** [Output Only] The error type identifier for this error. */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] An optional list of messages that contain the error details.
 *  There is a set of defined message types to use for providing details.The
 *  syntax depends on the error code. For example, QuotaExceededInfo will have
 *  details when the error code is QUOTA_EXCEEDED.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item_ErrorDetails_Item *> *errorDetails;

/**
 *  [Output Only] Indicates the field in the request that caused the error. This
 *  property is optional.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** [Output Only] An optional, human-readable error message. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item_ErrorDetails_Item
 */
@interface GTLRCompute_ManagedInstanceLastAttempt_Errors_Errors_Item_ErrorDetails_Item : GTLRObject

@property(nonatomic, strong, nullable) GTLRCompute_ErrorInfo *errorInfo;
@property(nonatomic, strong, nullable) GTLRCompute_Help *help;
@property(nonatomic, strong, nullable) GTLRCompute_LocalizedMessage *localizedMessage;
@property(nonatomic, strong, nullable) GTLRCompute_QuotaExceededInfo *quotaInfo;

@end


/**
 *  GTLRCompute_ManagedInstanceVersion
 */
@interface GTLRCompute_ManagedInstanceVersion : GTLRObject

/**
 *  [Output Only] The intended template of the instance. This field is empty
 *  when current_action is one of { DELETING, ABANDONING }.
 */
@property(nonatomic, copy, nullable) NSString *instanceTemplate;

/** [Output Only] Name of the version. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  A metadata key/value entry.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property.
 */
@interface GTLRCompute_Metadata : GTLRCollectionObject

/**
 *  Specifies a fingerprint for this request, which is essentially a hash of the
 *  metadata's contents and used for optimistic locking. The fingerprint is
 *  initially generated by Compute Engine and changes after every request to
 *  modify or update metadata. You must always provide an up-to-date fingerprint
 *  hash in order to update or change metadata, otherwise the request will fail
 *  with error 412 conditionNotMet. To see the latest fingerprint, make a get()
 *  request to retrieve the resource.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  Array of key/value pairs. The total size of all keys and values must be less
 *  than 512 KB.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Metadata_Items_Item *> *items;

/**
 *  [Output Only] Type of the resource. Always compute#metadata for metadata.
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  Metadata
 */
@interface GTLRCompute_Metadata_Items_Item : GTLRObject

/**
 *  Key for the metadata entry. Keys must conform to the following regexp:
 *  [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as
 *  part of a URL in the metadata server. Additionally, to avoid ambiguity, keys
 *  must not conflict with any other metadata keys for the project.
 */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  Value for the metadata entry. These are free-form strings, and only have
 *  meaning as interpreted by the image running in the instance. The only
 *  restriction placed on values is that their size must be less than or equal
 *  to 262144 bytes (256 KiB).
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Opaque filter criteria used by load balancers to restrict routing
 *  configuration to a limited set of load balancing proxies. Proxies and
 *  sidecars involved in load balancing would typically present metadata to the
 *  load balancers that need to match criteria specified here. If a match takes
 *  place, the relevant configuration is made available to those proxies. For
 *  each metadataFilter in this list, if its filterMatchCriteria is set to
 *  MATCH_ANY, at least one of the filterLabels must match the corresponding
 *  label provided in the metadata. If its filterMatchCriteria is set to
 *  MATCH_ALL, then all of its filterLabels must match with corresponding labels
 *  provided in the metadata. An example for using metadataFilters would be: if
 *  load balancing involves Envoys, they receive routing configuration when
 *  values in metadataFilters match values supplied in of their XDS requests to
 *  loadbalancers.
 */
@interface GTLRCompute_MetadataFilter : GTLRObject

/**
 *  The list of label value pairs that must match labels in the provided
 *  metadata based on filterMatchCriteria This list must not be empty and can
 *  have at the most 64 entries.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_MetadataFilterLabelMatch *> *filterLabels;

/**
 *  Specifies how individual filter label matches within the list of
 *  filterLabels and contributes toward the overall metadataFilter match.
 *  Supported values are: - MATCH_ANY: at least one of the filterLabels must
 *  have a matching label in the provided metadata. - MATCH_ALL: all
 *  filterLabels must have matching labels in the provided metadata.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_MetadataFilter_FilterMatchCriteria_MatchAll Specifies
 *        that all filterLabels must match for the metadataFilter to be
 *        considered a match. (Value: "MATCH_ALL")
 *    @arg @c kGTLRCompute_MetadataFilter_FilterMatchCriteria_MatchAny Specifies
 *        that any filterLabel must match for the metadataFilter to be
 *        considered a match. (Value: "MATCH_ANY")
 *    @arg @c kGTLRCompute_MetadataFilter_FilterMatchCriteria_NotSet Indicates
 *        that the match criteria was not set. A metadataFilter must never be
 *        created with this value. (Value: "NOT_SET")
 */
@property(nonatomic, copy, nullable) NSString *filterMatchCriteria;

@end


/**
 *  MetadataFilter label name value pairs that are expected to match
 *  corresponding labels presented as metadata to the load balancer.
 */
@interface GTLRCompute_MetadataFilterLabelMatch : GTLRObject

/**
 *  Name of metadata label. The name can have a maximum length of 1024
 *  characters and must be at least 1 character long.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The value of the label must match the specified value. value can have a
 *  maximum length of 1024 characters.
 */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  The named port. For example: <"http", 80>.
 */
@interface GTLRCompute_NamedPort : GTLRObject

/**
 *  The name for this named port. The name must be 1-63 characters long, and
 *  comply with RFC1035.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The port number, which can be a value between 1 and 65535.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

@end


/**
 *  Represents a VPC Network resource. Networks connect resources to each other
 *  and to the internet. For more information, read Virtual Private Cloud (VPC)
 *  Network.
 */
@interface GTLRCompute_Network : GTLRObject

/**
 *  Must be set to create a VPC network. If not set, a legacy network is
 *  created. When set to true, the VPC network is created in auto mode. When set
 *  to false, the VPC network is created in custom mode. An auto mode VPC
 *  network starts with one subnet per region. Each subnet has a predetermined
 *  range as described in Auto mode VPC network IP ranges. For custom mode VPC
 *  networks, you can add subnets using the subnetworks insert method.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *autoCreateSubnetworks;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this field when you create
 *  the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Enable ULA internal ipv6 on this network. Enabling this feature will assign
 *  a /48 from google defined ULA prefix fd20::/20. .
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableUlaInternalIpv6;

/**
 *  [Output Only] URL of the firewall policy the network is associated with.
 */
@property(nonatomic, copy, nullable) NSString *firewallPolicy;

/**
 *  [Output Only] The gateway address for default routing out of the network,
 *  selected by GCP.
 */
@property(nonatomic, copy, nullable) NSString *gatewayIPv4;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  When enabling ula internal ipv6, caller optionally can specify the /48 range
 *  they want from the google defined ULA prefix fd20::/20. The input must be a
 *  valid /48 ULA IPv6 address and must be within the fd20::/20. Operation will
 *  fail if the speficied /48 is already in used by another resource. If the
 *  field is not speficied, then a /48 range will be randomly allocated from
 *  fd20::/20 and returned via this field. .
 */
@property(nonatomic, copy, nullable) NSString *internalIpv6Range;

/**
 *  Deprecated in favor of subnet mode networks. The range of internal addresses
 *  that are legal on this network. This range is a CIDR specification, for
 *  example: 192.168.0.0/16. Provided by the client when the network is created.
 */
@property(nonatomic, copy, nullable) NSString *IPv4Range;

/**
 *  [Output Only] Type of the resource. Always compute#network for networks.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Maximum Transmission Unit in bytes. The minimum value for this field is 1300
 *  and the maximum value is 8896. The suggested value is 1500, which is the
 *  default MTU used on the Internet, or 8896 if you want to use Jumbo frames.
 *  If unspecified, the value defaults to 1460.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *mtu;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a
 *  lowercase letter, and all following characters (except for the last
 *  character) must be a dash, lowercase letter, or digit. The last character
 *  must be a lowercase letter or digit.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The network firewall policy enforcement order. Can be either
 *  AFTER_CLASSIC_FIREWALL or BEFORE_CLASSIC_FIREWALL. Defaults to
 *  AFTER_CLASSIC_FIREWALL if the field is not specified.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Network_NetworkFirewallPolicyEnforcementOrder_AfterClassicFirewall
 *        Value "AFTER_CLASSIC_FIREWALL"
 *    @arg @c kGTLRCompute_Network_NetworkFirewallPolicyEnforcementOrder_BeforeClassicFirewall
 *        Value "BEFORE_CLASSIC_FIREWALL"
 */
@property(nonatomic, copy, nullable) NSString *networkFirewallPolicyEnforcementOrder;

/** [Output Only] A list of network peerings for the resource. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkPeering *> *peerings;

/**
 *  The network-level routing configuration for this network. Used by Cloud
 *  Router to determine what type of network-wide routing behavior to enforce.
 */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkRoutingConfig *routingConfig;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] Server-defined URL for this resource with the resource id.
 */
@property(nonatomic, copy, nullable) NSString *selfLinkWithId;

/**
 *  [Output Only] Server-defined fully-qualified URLs for all subnetworks in
 *  this VPC network.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *subnetworks;

@end


/**
 *  Represents a Google Cloud Armor network edge security service resource.
 */
@interface GTLRCompute_NetworkEdgeSecurityService : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Fingerprint of this resource. A hash of the contents stored in this object.
 *  This field is used in optimistic locking. This field will be ignored when
 *  inserting a NetworkEdgeSecurityService. An up-to-date fingerprint must be
 *  provided in order to update the NetworkEdgeSecurityService, otherwise the
 *  request will fail with error 412 conditionNotMet. To see the latest
 *  fingerprint, make a get() request to retrieve a NetworkEdgeSecurityService.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output only] Type of the resource. Always
 *  compute#networkEdgeSecurityService for NetworkEdgeSecurityServices
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] URL of the region where the resource resides. You must specify
 *  this field as part of the HTTP request URL. It is not settable as a field in
 *  the request body.
 */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  The resource URL for the network edge security service associated with this
 *  network edge security service.
 */
@property(nonatomic, copy, nullable) NSString *securityPolicy;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] Server-defined URL for this resource with the resource id.
 */
@property(nonatomic, copy, nullable) NSString *selfLinkWithId;

@end


/**
 *  GTLRCompute_NetworkEdgeSecurityServiceAggregatedList
 */
@interface GTLRCompute_NetworkEdgeSecurityServiceAggregatedList : GTLRObject

@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of NetworkEdgeSecurityServicesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always
 *  compute#networkEdgeSecurityServiceAggregatedList for lists of Network Edge
 *  Security Services.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning *warning;

@end


/**
 *  A list of NetworkEdgeSecurityServicesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_NetworkEdgeSecurityServicesScopedList. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_NetworkEdgeSecurityServiceAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_NetworkEdgeSecurityServicesScopedList
 */
@interface GTLRCompute_NetworkEdgeSecurityServicesScopedList : GTLRObject

/** A list of NetworkEdgeSecurityServices contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkEdgeSecurityService *> *networkEdgeSecurityServices;

/**
 *  Informational warning which replaces the list of security policies when the
 *  list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of security policies when the
 *  list is empty.
 */
@interface GTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_NetworkEdgeSecurityServicesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  The network endpoint.
 */
@interface GTLRCompute_NetworkEndpoint : GTLRObject

/** Metadata defined as annotations on the network endpoint. */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkEndpoint_Annotations *annotations;

/**
 *  Optional fully qualified domain name of network endpoint. This can only be
 *  specified when NetworkEndpointGroup.network_endpoint_type is
 *  NON_GCP_FQDN_PORT.
 */
@property(nonatomic, copy, nullable) NSString *fqdn;

/**
 *  The name for a specific VM instance that the IP address belongs to. This is
 *  required for network endpoints of type GCE_VM_IP_PORT. The instance must be
 *  in the same zone of network endpoint group. The name must be 1-63 characters
 *  long, and comply with RFC1035.
 */
@property(nonatomic, copy, nullable) NSString *instance;

/**
 *  Optional IPv4 address of network endpoint. The IP address must belong to a
 *  VM in Compute Engine (either the primary IP or as part of an aliased IP
 *  range). If the IP address is not specified, then the primary IP address for
 *  the VM instance in the network that the network endpoint group belongs to
 *  will be used.
 */
@property(nonatomic, copy, nullable) NSString *ipAddress;

/**
 *  Optional port number of network endpoint. If not specified, the defaultPort
 *  for the network endpoint group will be used.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

@end


/**
 *  Metadata defined as annotations on the network endpoint.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_NetworkEndpoint_Annotations : GTLRObject
@end


/**
 *  Represents a collection of network endpoints. A network endpoint group (NEG)
 *  defines how a set of endpoints should be reached, whether they are
 *  reachable, and where they are located. For more information about using
 *  NEGs, see Setting up external HTTP(S) Load Balancing with internet NEGs,
 *  Setting up zonal NEGs, or Setting up external HTTP(S) Load Balancing with
 *  serverless NEGs.
 */
@interface GTLRCompute_NetworkEndpointGroup : GTLRObject

/** Metadata defined as annotations on the network endpoint group. */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkEndpointGroup_Annotations *annotations;

/**
 *  Only valid when networkEndpointType is "SERVERLESS". Only one of cloudRun,
 *  appEngine or cloudFunction may be set.
 */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkEndpointGroupAppEngine *appEngine;

/**
 *  Only valid when networkEndpointType is "SERVERLESS". Only one of cloudRun,
 *  appEngine or cloudFunction may be set.
 */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkEndpointGroupCloudFunction *cloudFunction;

/**
 *  Only valid when networkEndpointType is "SERVERLESS". Only one of cloudRun,
 *  appEngine or cloudFunction may be set.
 */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkEndpointGroupCloudRun *cloudRun;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  The default port used if the port number is not specified in the network
 *  endpoint.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *defaultPort;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#networkEndpointGroup for
 *  network endpoint group.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource; provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The URL of the network to which all network endpoints in the NEG belong.
 *  Uses "default" project network if unspecified.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Type of network endpoints in this network endpoint group. Can be one of
 *  GCE_VM_IP, GCE_VM_IP_PORT, NON_GCP_PRIVATE_IP_PORT, INTERNET_FQDN_PORT,
 *  INTERNET_IP_PORT, SERVERLESS, PRIVATE_SERVICE_CONNECT.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_GceVmIp The
 *        network endpoint is represented by an IP address. (Value: "GCE_VM_IP")
 *    @arg @c kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_GceVmIpPort
 *        The network endpoint is represented by IP address and port pair.
 *        (Value: "GCE_VM_IP_PORT")
 *    @arg @c kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_InternetFqdnPort
 *        The network endpoint is represented by fully qualified domain name and
 *        port. (Value: "INTERNET_FQDN_PORT")
 *    @arg @c kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_InternetIpPort
 *        The network endpoint is represented by an internet IP address and
 *        port. (Value: "INTERNET_IP_PORT")
 *    @arg @c kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_NonGcpPrivateIpPort
 *        The network endpoint is represented by an IP address and port. The
 *        endpoint belongs to a VM or pod running in a customer's on-premises.
 *        (Value: "NON_GCP_PRIVATE_IP_PORT")
 *    @arg @c kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_PrivateServiceConnect
 *        The network endpoint is either public Google APIs or services exposed
 *        by other GCP Project with a Service Attachment. The connection is set
 *        up by private service connect (Value: "PRIVATE_SERVICE_CONNECT")
 *    @arg @c kGTLRCompute_NetworkEndpointGroup_NetworkEndpointType_Serverless
 *        The network endpoint is handled by specified serverless
 *        infrastructure. (Value: "SERVERLESS")
 */
@property(nonatomic, copy, nullable) NSString *networkEndpointType;

@property(nonatomic, strong, nullable) GTLRCompute_NetworkEndpointGroupPscData *pscData;

/**
 *  The target service url used to set up private service connection to a Google
 *  API or a PSC Producer Service Attachment. An example value is:
 *  "asia-northeast3-cloudkms.googleapis.com"
 */
@property(nonatomic, copy, nullable) NSString *pscTargetService;

/**
 *  [Output Only] The URL of the region where the network endpoint group is
 *  located.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output only] Number of network endpoints in the network endpoint group.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *size;

/**
 *  Optional URL of the subnetwork to which all network endpoints in the NEG
 *  belong.
 */
@property(nonatomic, copy, nullable) NSString *subnetwork;

/**
 *  [Output Only] The URL of the zone where the network endpoint group is
 *  located.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  Metadata defined as annotations on the network endpoint group.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_NetworkEndpointGroup_Annotations : GTLRObject
@end


/**
 *  GTLRCompute_NetworkEndpointGroupAggregatedList
 */
@interface GTLRCompute_NetworkEndpointGroupAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of NetworkEndpointGroupsScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkEndpointGroupAggregatedList_Items *items;

/**
 *  [Output Only] The resource type, which is always
 *  compute#networkEndpointGroupAggregatedList for aggregated lists of network
 *  endpoint groups.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkEndpointGroupAggregatedList_Warning *warning;

@end


/**
 *  A list of NetworkEndpointGroupsScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_NetworkEndpointGroupsScopedList. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_NetworkEndpointGroupAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_NetworkEndpointGroupAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_NetworkEndpointGroupAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Configuration for an App Engine network endpoint group (NEG). The service is
 *  optional, may be provided explicitly or in the URL mask. The version is
 *  optional and can only be provided explicitly or in the URL mask when service
 *  is present. Note: App Engine service must be in the same project and located
 *  in the same region as the Serverless NEG.
 */
@interface GTLRCompute_NetworkEndpointGroupAppEngine : GTLRObject

/**
 *  Optional serving service. The service name is case-sensitive and must be
 *  1-63 characters long. Example value: "default", "my-service".
 */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  A template to parse service and version fields from a request URL. URL mask
 *  allows for routing to multiple App Engine services without having to create
 *  multiple Network Endpoint Groups and backend services. For example, the
 *  request URLs "foo1-dot-appname.appspot.com/v1" and
 *  "foo1-dot-appname.appspot.com/v2" can be backed by the same Serverless NEG
 *  with URL mask "<service>-dot-appname.appspot.com/<version>". The URL mask
 *  will parse them to { service = "foo1", version = "v1" } and { service =
 *  "foo1", version = "v2" } respectively.
 */
@property(nonatomic, copy, nullable) NSString *urlMask;

/**
 *  Optional serving version. The version name is case-sensitive and must be
 *  1-100 characters long. Example value: "v1", "v2".
 */
@property(nonatomic, copy, nullable) NSString *version;

@end


/**
 *  Configuration for a Cloud Function network endpoint group (NEG). The
 *  function must be provided explicitly or in the URL mask. Note: Cloud
 *  Function must be in the same project and located in the same region as the
 *  Serverless NEG.
 */
@interface GTLRCompute_NetworkEndpointGroupCloudFunction : GTLRObject

/**
 *  A user-defined name of the Cloud Function. The function name is
 *  case-sensitive and must be 1-63 characters long. Example value: "func1".
 */
@property(nonatomic, copy, nullable) NSString *function;

/**
 *  A template to parse function field from a request URL. URL mask allows for
 *  routing to multiple Cloud Functions without having to create multiple
 *  Network Endpoint Groups and backend services. For example, request URLs "
 *  mydomain.com/function1" and "mydomain.com/function2" can be backed by the
 *  same Serverless NEG with URL mask "/<function>". The URL mask will parse
 *  them to { function = "function1" } and { function = "function2" }
 *  respectively.
 */
@property(nonatomic, copy, nullable) NSString *urlMask;

@end


/**
 *  Configuration for a Cloud Run network endpoint group (NEG). The service must
 *  be provided explicitly or in the URL mask. The tag is optional, may be
 *  provided explicitly or in the URL mask. Note: Cloud Run service must be in
 *  the same project and located in the same region as the Serverless NEG.
 */
@interface GTLRCompute_NetworkEndpointGroupCloudRun : GTLRObject

/**
 *  Cloud Run service is the main resource of Cloud Run. The service must be
 *  1-63 characters long, and comply with RFC1035. Example value: "run-service".
 */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  Optional Cloud Run tag represents the "named-revision" to provide additional
 *  fine-grained traffic routing information. The tag must be 1-63 characters
 *  long, and comply with RFC1035. Example value: "revision-0010".
 */
@property(nonatomic, copy, nullable) NSString *tag;

/**
 *  A template to parse <service> and <tag> fields from a request URL. URL mask
 *  allows for routing to multiple Run services without having to create
 *  multiple network endpoint groups and backend services. For example, request
 *  URLs "foo1.domain.com/bar1" and "foo1.domain.com/bar2" can be backed by the
 *  same Serverless Network Endpoint Group (NEG) with URL mask
 *  "<tag>.domain.com/<service>". The URL mask will parse them to {
 *  service="bar1", tag="foo1" } and { service="bar2", tag="foo2" }
 *  respectively.
 */
@property(nonatomic, copy, nullable) NSString *urlMask;

@end


/**
 *  GTLRCompute_NetworkEndpointGroupList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_NetworkEndpointGroupList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of NetworkEndpointGroup resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkEndpointGroup *> *items;

/**
 *  [Output Only] The resource type, which is always
 *  compute#networkEndpointGroupList for network endpoint group lists.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkEndpointGroupList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_NetworkEndpointGroupList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkEndpointGroupList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NetworkEndpointGroupList_Warning_Data_Item
 */
@interface GTLRCompute_NetworkEndpointGroupList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  All data that is specifically relevant to only network endpoint groups of
 *  type PRIVATE_SERVICE_CONNECT.
 */
@interface GTLRCompute_NetworkEndpointGroupPscData : GTLRObject

/**
 *  [Output Only] Address allocated from given subnetwork for PSC. This IP
 *  address acts as a VIP for a PSC NEG, allowing it to act as an endpoint in L7
 *  PSC-XLB.
 */
@property(nonatomic, copy, nullable) NSString *consumerPscAddress;

/**
 *  [Output Only] The PSC connection id of the PSC Network Endpoint Group
 *  Consumer.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pscConnectionId;

/**
 *  [Output Only] The connection status of the PSC Forwarding Rule.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_Accepted
 *        The connection has been accepted by the producer. (Value: "ACCEPTED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_Closed
 *        The connection has been closed by the producer and will not serve
 *        traffic going forward. (Value: "CLOSED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_NeedsAttention
 *        The connection has been accepted by the producer, but the producer
 *        needs to take further action before the forwarding rule can serve
 *        traffic. (Value: "NEEDS_ATTENTION")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_Pending
 *        The connection is pending acceptance by the producer. (Value:
 *        "PENDING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_Rejected
 *        The connection has been rejected by the producer. (Value: "REJECTED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupPscData_PscConnectionStatus_StatusUnspecified
 *        Value "STATUS_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *pscConnectionStatus;

@end


/**
 *  GTLRCompute_NetworkEndpointGroupsAttachEndpointsRequest
 */
@interface GTLRCompute_NetworkEndpointGroupsAttachEndpointsRequest : GTLRObject

/** The list of network endpoints to be attached. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkEndpoint *> *networkEndpoints;

@end


/**
 *  GTLRCompute_NetworkEndpointGroupsDetachEndpointsRequest
 */
@interface GTLRCompute_NetworkEndpointGroupsDetachEndpointsRequest : GTLRObject

/** The list of network endpoints to be detached. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkEndpoint *> *networkEndpoints;

@end


/**
 *  GTLRCompute_NetworkEndpointGroupsListEndpointsRequest
 */
@interface GTLRCompute_NetworkEndpointGroupsListEndpointsRequest : GTLRObject

/**
 *  Optional query parameter for showing the health status of each network
 *  endpoint. Valid options are SKIP or SHOW. If you don't specify this
 *  parameter, the health status of network endpoints will not be provided.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListEndpointsRequest_HealthStatus_Show
 *        Show the health status for each network endpoint. Impacts latency of
 *        the call. (Value: "SHOW")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListEndpointsRequest_HealthStatus_Skip
 *        Health status for network endpoints will not be provided. (Value:
 *        "SKIP")
 */
@property(nonatomic, copy, nullable) NSString *healthStatus;

@end


/**
 *  GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of NetworkEndpointWithHealthStatus resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkEndpointWithHealthStatus *> *items;

/**
 *  [Output Only] The resource type, which is always
 *  compute#networkEndpointGroupsListNetworkEndpoints for the list of network
 *  endpoints in the specified network endpoint group.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Data_Item
 */
@interface GTLRCompute_NetworkEndpointGroupsListNetworkEndpoints_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_NetworkEndpointGroupsScopedList
 */
@interface GTLRCompute_NetworkEndpointGroupsScopedList : GTLRObject

/**
 *  [Output Only] The list of network endpoint groups that are contained in this
 *  scope.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkEndpointGroup *> *networkEndpointGroups;

/**
 *  [Output Only] An informational warning that replaces the list of network
 *  endpoint groups when the list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkEndpointGroupsScopedList_Warning *warning;

@end


/**
 *  [Output Only] An informational warning that replaces the list of network
 *  endpoint groups when the list is empty.
 */
@interface GTLRCompute_NetworkEndpointGroupsScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NetworkEndpointGroupsScopedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkEndpointGroupsScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NetworkEndpointGroupsScopedList_Warning_Data_Item
 */
@interface GTLRCompute_NetworkEndpointGroupsScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_NetworkEndpointWithHealthStatus
 */
@interface GTLRCompute_NetworkEndpointWithHealthStatus : GTLRObject

/** [Output only] The health status of network endpoint; */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HealthStatusForNetworkEndpoint *> *healths;

/** [Output only] The network endpoint; */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkEndpoint *networkEndpoint;

@end


/**
 *  A network interface resource attached to an instance.
 */
@interface GTLRCompute_NetworkInterface : GTLRObject

/**
 *  An array of configurations for this interface. Currently, only one access
 *  config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs
 *  specified, then this instance will have no external internet access.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AccessConfig *> *accessConfigs;

/**
 *  An array of alias IP ranges for this network interface. You can only specify
 *  this field for network interfaces in VPC networks.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AliasIpRange *> *aliasIpRanges;

/**
 *  Fingerprint hash of contents stored in this network interface. This field
 *  will be ignored when inserting an Instance or adding a NetworkInterface. An
 *  up-to-date fingerprint must be provided in order to update the
 *  NetworkInterface. The request will fail with error 400 Bad Request if the
 *  fingerprint is not provided, or 412 Precondition Failed if the fingerprint
 *  is out of date.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  The prefix length of the primary internal IPv6 range.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *internalIpv6PrefixLength;

/**
 *  An array of IPv6 access configurations for this interface. Currently, only
 *  one IPv6 access config, DIRECT_IPV6, is supported. If there is no
 *  ipv6AccessConfig specified, then this instance will have no external IPv6
 *  Internet access.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AccessConfig *> *ipv6AccessConfigs;

/**
 *  [Output Only] One of EXTERNAL, INTERNAL to indicate whether the IP can be
 *  accessed from the Internet. This field is always inherited from its
 *  subnetwork. Valid only if stackType is IPV4_IPV6.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkInterface_Ipv6AccessType_External This network
 *        interface can have external IPv6. (Value: "EXTERNAL")
 *    @arg @c kGTLRCompute_NetworkInterface_Ipv6AccessType_Internal This network
 *        interface can have internal IPv6. (Value: "INTERNAL")
 */
@property(nonatomic, copy, nullable) NSString *ipv6AccessType;

/** An IPv6 internal network address for this network interface. */
@property(nonatomic, copy, nullable) NSString *ipv6Address;

/**
 *  [Output Only] Type of the resource. Always compute#networkInterface for
 *  network interfaces.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] The name of the network interface, which is generated by the
 *  server. For a VM, the network interface uses the nicN naming format. Where N
 *  is a value between 0 and 7. The default interface value is nic0.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  URL of the VPC network resource for this instance. When creating an
 *  instance, if neither the network nor the subnetwork is specified, the
 *  default network global/networks/default is used. If the selected project
 *  doesn't have the default network, you must specify a network or subnet. If
 *  the network is not specified but the subnetwork is specified, the network is
 *  inferred. If you specify this property, you can specify the network as a
 *  full or partial URL. For example, the following are all valid URLs: -
 *  https://www.googleapis.com/compute/v1/projects/project/global/networks/
 *  network - projects/project/global/networks/network - global/networks/default
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  An IPv4 internal IP address to assign to the instance for this network
 *  interface. If not specified by the user, an unused internal IP is assigned
 *  by the system.
 */
@property(nonatomic, copy, nullable) NSString *networkIP;

/**
 *  The type of vNIC to be used on this interface. This may be gVNIC or
 *  VirtioNet.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkInterface_NicType_Gvnic GVNIC (Value: "GVNIC")
 *    @arg @c kGTLRCompute_NetworkInterface_NicType_UnspecifiedNicType No type
 *        specified. (Value: "UNSPECIFIED_NIC_TYPE")
 *    @arg @c kGTLRCompute_NetworkInterface_NicType_VirtioNet VIRTIO (Value:
 *        "VIRTIO_NET")
 */
@property(nonatomic, copy, nullable) NSString *nicType;

/**
 *  The networking queue count that's specified by users for the network
 *  interface. Both Rx and Tx queues will be set to this number. It'll be empty
 *  if not specified by the users.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *queueCount;

/**
 *  The stack type for this network interface to identify whether the IPv6
 *  feature is enabled or not. If not specified, IPV4_ONLY will be used. This
 *  field can be both set at instance creation and update network interface
 *  operations.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkInterface_StackType_Ipv4Ipv6 The network
 *        interface can have both IPv4 and IPv6 addresses. (Value: "IPV4_IPV6")
 *    @arg @c kGTLRCompute_NetworkInterface_StackType_Ipv4Only The network
 *        interface will be assigned IPv4 address. (Value: "IPV4_ONLY")
 */
@property(nonatomic, copy, nullable) NSString *stackType;

/**
 *  The URL of the Subnetwork resource for this instance. If the network
 *  resource is in legacy mode, do not specify this field. If the network is in
 *  auto subnet mode, specifying the subnetwork is optional. If the network is
 *  in custom subnet mode, specifying the subnetwork is required. If you specify
 *  this field, you can specify the subnetwork as a full or partial URL. For
 *  example, the following are all valid URLs: -
 *  https://www.googleapis.com/compute/v1/projects/project/regions/region
 *  /subnetworks/subnetwork - regions/region/subnetworks/subnetwork
 */
@property(nonatomic, copy, nullable) NSString *subnetwork;

@end


/**
 *  Contains a list of networks.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_NetworkList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Network resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Network *> *items;

/**
 *  [Output Only] Type of resource. Always compute#networkList for lists of
 *  networks.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_NetworkList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_NoResultsOnPage No results
 *        are present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_NotCriticalError Error which
 *        is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_SchemaValidationIgnored When
 *        a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NetworkList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NetworkList_Warning_Data_Item
 */
@interface GTLRCompute_NetworkList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  A network peering attached to a network resource. The message includes the
 *  peering name, peer network, peering state, and a flag indicating whether
 *  Google Compute Engine should automatically create routes for the peering.
 */
@interface GTLRCompute_NetworkPeering : GTLRObject

/**
 *  This field will be deprecated soon. Use the exchange_subnet_routes field
 *  instead. Indicates whether full mesh connectivity is created and managed
 *  automatically between peered networks. Currently this field should always be
 *  true since Google Compute Engine will automatically create and manage
 *  subnetwork routes between two networks when peering state is ACTIVE.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *autoCreateRoutes;

/**
 *  Indicates whether full mesh connectivity is created and managed
 *  automatically between peered networks. Currently this field should always be
 *  true since Google Compute Engine will automatically create and manage
 *  subnetwork routes between two networks when peering state is ACTIVE.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exchangeSubnetRoutes;

/**
 *  Whether to export the custom routes to peer network. The default value is
 *  false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exportCustomRoutes;

/**
 *  Whether subnet routes with public IP range are exported. The default value
 *  is true, all subnet routes are exported. IPv4 special-use ranges are always
 *  exported to peers and are not controlled by this field.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *exportSubnetRoutesWithPublicIp;

/**
 *  Whether to import the custom routes from peer network. The default value is
 *  false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *importCustomRoutes;

/**
 *  Whether subnet routes with public IP range are imported. The default value
 *  is false. IPv4 special-use ranges are always imported from peers and are not
 *  controlled by this field.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *importSubnetRoutesWithPublicIp;

/**
 *  Name of this peering. Provided by the client when the peering is created.
 *  The name must comply with RFC1035. Specifically, the name must be 1-63
 *  characters long and match regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`.
 *  The first character must be a lowercase letter, and all the following
 *  characters must be a dash, lowercase letter, or digit, except the last
 *  character, which cannot be a dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The URL of the peer network. It can be either full URL or partial URL. The
 *  peer network may belong to a different project. If the partial URL does not
 *  contain project, it is assumed that the peer network is in the same project
 *  as the current network.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Maximum Transmission Unit in bytes.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *peerMtu;

/**
 *  Which IP version(s) of traffic and routes are allowed to be imported or
 *  exported between peer networks. The default value is IPV4_ONLY.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkPeering_StackType_Ipv4Ipv6 This Peering will
 *        allow IPv4 traffic and routes to be exchanged. Additionally if the
 *        matching peering is IPV4_IPV6, IPv6 traffic and routes will be
 *        exchanged as well. (Value: "IPV4_IPV6")
 *    @arg @c kGTLRCompute_NetworkPeering_StackType_Ipv4Only This Peering will
 *        only allow IPv4 traffic and routes to be exchanged, even if the
 *        matching peering is IPV4_IPV6. (Value: "IPV4_ONLY")
 */
@property(nonatomic, copy, nullable) NSString *stackType;

/**
 *  [Output Only] State for the peering, either `ACTIVE` or `INACTIVE`. The
 *  peering is `ACTIVE` when there's a matching configuration in the peer
 *  network.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkPeering_State_Active Matching configuration
 *        exists on the peer. (Value: "ACTIVE")
 *    @arg @c kGTLRCompute_NetworkPeering_State_Inactive There is no matching
 *        configuration on the peer, including the case when peer does not
 *        exist. (Value: "INACTIVE")
 */
@property(nonatomic, copy, nullable) NSString *state;

/** [Output Only] Details about the current state of the peering. */
@property(nonatomic, copy, nullable) NSString *stateDetails;

@end


/**
 *  GTLRCompute_NetworkPerformanceConfig
 */
@interface GTLRCompute_NetworkPerformanceConfig : GTLRObject

/**
 *  totalEgressBandwidthTier
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkPerformanceConfig_TotalEgressBandwidthTier_Default
 *        Value "DEFAULT"
 *    @arg @c kGTLRCompute_NetworkPerformanceConfig_TotalEgressBandwidthTier_Tier1
 *        Value "TIER_1"
 */
@property(nonatomic, copy, nullable) NSString *totalEgressBandwidthTier;

@end


/**
 *  A routing configuration attached to a network resource. The message includes
 *  the list of routers associated with the network, and a flag indicating the
 *  type of routing behavior to enforce network-wide.
 */
@interface GTLRCompute_NetworkRoutingConfig : GTLRObject

/**
 *  The network-wide routing mode to use. If set to REGIONAL, this network's
 *  Cloud Routers will only advertise routes with subnets of this network in the
 *  same region as the router. If set to GLOBAL, this network's Cloud Routers
 *  will advertise routes with all subnets of this network, across regions.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworkRoutingConfig_RoutingMode_Global Value
 *        "GLOBAL"
 *    @arg @c kGTLRCompute_NetworkRoutingConfig_RoutingMode_Regional Value
 *        "REGIONAL"
 */
@property(nonatomic, copy, nullable) NSString *routingMode;

@end


/**
 *  GTLRCompute_NetworksAddPeeringRequest
 */
@interface GTLRCompute_NetworksAddPeeringRequest : GTLRObject

/**
 *  This field will be deprecated soon. Use exchange_subnet_routes in
 *  network_peering instead. Indicates whether full mesh connectivity is created
 *  and managed automatically between peered networks. Currently this field
 *  should always be true since Google Compute Engine will automatically create
 *  and manage subnetwork routes between two networks when peering state is
 *  ACTIVE.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *autoCreateRoutes;

/** Name of the peering, which should conform to RFC1035. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Network peering parameters. In order to specify route policies for peering
 *  using import and export custom routes, you must specify all peering related
 *  parameters (name, peer network, exchange_subnet_routes) in the
 *  network_peering field. The corresponding fields in NetworksAddPeeringRequest
 *  will be deprecated soon.
 */
@property(nonatomic, strong, nullable) GTLRCompute_NetworkPeering *networkPeering;

/**
 *  URL of the peer network. It can be either full URL or partial URL. The peer
 *  network may belong to a different project. If the partial URL does not
 *  contain project, it is assumed that the peer network is in the same project
 *  as the current network.
 */
@property(nonatomic, copy, nullable) NSString *peerNetwork;

@end


/**
 *  GTLRCompute_NetworksGetEffectiveFirewallsResponse
 */
@interface GTLRCompute_NetworksGetEffectiveFirewallsResponse : GTLRObject

/** Effective firewalls from firewall policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy *> *firewallPolicys;

/** Effective firewalls on the network. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Firewall *> *firewalls;

@end


/**
 *  GTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy
 */
@interface GTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy : GTLRObject

/**
 *  [Output Only] Deprecated, please use short name instead. The display name of
 *  the firewall policy.
 */
@property(nonatomic, copy, nullable) NSString *displayName;

/** [Output Only] The name of the firewall policy. */
@property(nonatomic, copy, nullable) NSString *name;

/** The rules that apply to the network. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_FirewallPolicyRule *> *rules;

/** [Output Only] The short name of the firewall policy. */
@property(nonatomic, copy, nullable) NSString *shortName;

/**
 *  [Output Only] The type of the firewall policy.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Hierarchy
 *        Value "HIERARCHY"
 *    @arg @c kGTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Network
 *        Value "NETWORK"
 *    @arg @c kGTLRCompute_NetworksGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Unspecified
 *        Value "UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRCompute_NetworksRemovePeeringRequest
 */
@interface GTLRCompute_NetworksRemovePeeringRequest : GTLRObject

/** Name of the peering, which should conform to RFC1035. */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  GTLRCompute_NetworksUpdatePeeringRequest
 */
@interface GTLRCompute_NetworksUpdatePeeringRequest : GTLRObject

@property(nonatomic, strong, nullable) GTLRCompute_NetworkPeering *networkPeering;

@end


/**
 *  Represents a sole-tenant Node Group resource. A sole-tenant node is a
 *  physical server that is dedicated to hosting VM instances only for your
 *  specific project. Use sole-tenant nodes to keep your instances physically
 *  separated from instances in other projects, or to group your instances
 *  together on the same host hardware. For more information, read Sole-tenant
 *  nodes.
 */
@interface GTLRCompute_NodeGroup : GTLRObject

/** Specifies how autoscaling should behave. */
@property(nonatomic, strong, nullable) GTLRCompute_NodeGroupAutoscalingPolicy *autoscalingPolicy;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  fingerprint
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] The type of the resource. Always compute#nodeGroup for node
 *  group.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  An opaque location hint used to place the Node close to other resources.
 *  This field is for use by internal tools that use the public API. The
 *  location hint here on the NodeGroup overrides any location_hint present in
 *  the NodeTemplate.
 */
@property(nonatomic, copy, nullable) NSString *locationHint;

/**
 *  Specifies how to handle instances when a node in the group undergoes
 *  maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or
 *  MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more
 *  information, see Maintenance policies.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeGroup_MaintenancePolicy_Default Allow the node
 *        and corresponding instances to retain default maintenance behavior.
 *        (Value: "DEFAULT")
 *    @arg @c kGTLRCompute_NodeGroup_MaintenancePolicy_MaintenancePolicyUnspecified
 *        Value "MAINTENANCE_POLICY_UNSPECIFIED"
 *    @arg @c kGTLRCompute_NodeGroup_MaintenancePolicy_MigrateWithinNodeGroup
 *        When maintenance must be done on a node, the instances on that node
 *        will be moved to other nodes in the group. Instances with
 *        onHostMaintenance = MIGRATE will live migrate to their destinations
 *        while instances with onHostMaintenance = TERMINATE will terminate and
 *        then restart on their destination nodes if automaticRestart = true.
 *        (Value: "MIGRATE_WITHIN_NODE_GROUP")
 *    @arg @c kGTLRCompute_NodeGroup_MaintenancePolicy_RestartInPlace Instances
 *        in this group will restart on the same node when maintenance has
 *        completed. Instances must have onHostMaintenance = TERMINATE, and they
 *        will only restart if automaticRestart = true. (Value:
 *        "RESTART_IN_PLACE")
 */
@property(nonatomic, copy, nullable) NSString *maintenancePolicy;

@property(nonatomic, strong, nullable) GTLRCompute_NodeGroupMaintenanceWindow *maintenanceWindow;

/**
 *  The name of the resource, provided by the client when initially creating the
 *  resource. The resource name must be 1-63 characters long, and comply with
 *  RFC1035. Specifically, the name must be 1-63 characters long and match the
 *  regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
 *  character must be a lowercase letter, and all following characters must be a
 *  dash, lowercase letter, or digit, except the last character, which cannot be
 *  a dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** URL of the node template to create the node group from. */
@property(nonatomic, copy, nullable) NSString *nodeTemplate;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** Share-settings for the node group */
@property(nonatomic, strong, nullable) GTLRCompute_ShareSettings *shareSettings;

/**
 *  [Output Only] The total number of nodes in the node group.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *size;

/**
 *  status
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeGroup_Status_Creating Value "CREATING"
 *    @arg @c kGTLRCompute_NodeGroup_Status_Deleting Value "DELETING"
 *    @arg @c kGTLRCompute_NodeGroup_Status_Invalid Value "INVALID"
 *    @arg @c kGTLRCompute_NodeGroup_Status_Ready Value "READY"
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  [Output Only] The name of the zone where the node group resides, such as
 *  us-central1-a.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  GTLRCompute_NodeGroupAggregatedList
 */
@interface GTLRCompute_NodeGroupAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of NodeGroupsScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_NodeGroupAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource.Always compute#nodeGroupAggregatedList for
 *  aggregated lists of node groups.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_NodeGroupAggregatedList_Warning *warning;

@end


/**
 *  A list of NodeGroupsScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_NodeGroupsScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_NodeGroupAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_NodeGroupAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NodeGroupAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeGroupAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NodeGroupAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_NodeGroupAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_NodeGroupAutoscalingPolicy
 */
@interface GTLRCompute_NodeGroupAutoscalingPolicy : GTLRObject

/**
 *  The maximum number of nodes that the group should have. Must be set if
 *  autoscaling is enabled. Maximum value allowed is 100.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxNodes;

/**
 *  The minimum number of nodes that the group should have.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minNodes;

/**
 *  The autoscaling mode. Set to one of: ON, OFF, or ONLY_SCALE_OUT. For more
 *  information, see Autoscaler modes.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeGroupAutoscalingPolicy_Mode_ModeUnspecified Value
 *        "MODE_UNSPECIFIED"
 *    @arg @c kGTLRCompute_NodeGroupAutoscalingPolicy_Mode_Off Autoscaling is
 *        disabled. (Value: "OFF")
 *    @arg @c kGTLRCompute_NodeGroupAutoscalingPolicy_Mode_On Autocaling is
 *        fully enabled. (Value: "ON")
 *    @arg @c kGTLRCompute_NodeGroupAutoscalingPolicy_Mode_OnlyScaleOut
 *        Autoscaling will only scale out and will not remove nodes. (Value:
 *        "ONLY_SCALE_OUT")
 */
@property(nonatomic, copy, nullable) NSString *mode;

@end


/**
 *  Contains a list of nodeGroups.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_NodeGroupList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of NodeGroup resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeGroup *> *items;

/**
 *  [Output Only] Type of resource.Always compute#nodeGroupList for lists of
 *  node groups.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_NodeGroupList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_NodeGroupList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_NoResultsOnPage No results
 *        are present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NodeGroupList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeGroupList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NodeGroupList_Warning_Data_Item
 */
@interface GTLRCompute_NodeGroupList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Time window specified for daily maintenance operations. GCE's internal
 *  maintenance will be performed within this window.
 */
@interface GTLRCompute_NodeGroupMaintenanceWindow : GTLRObject

/**
 *  [Output only] A predetermined duration for the window, automatically chosen
 *  to be the smallest possible in the given scenario.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Duration *maintenanceDuration;

/**
 *  Start time of the window. This must be in UTC format that resolves to one of
 *  00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and
 *  08:00 are valid.
 */
@property(nonatomic, copy, nullable) NSString *startTime;

@end


/**
 *  GTLRCompute_NodeGroupNode
 */
@interface GTLRCompute_NodeGroupNode : GTLRObject

/** Accelerators for this node. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AcceleratorConfig *> *accelerators;

/** Node resources that are reserved by all instances. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceConsumptionInfo *consumedResources;

/**
 *  CPU overcommit.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeGroupNode_CpuOvercommitType_CpuOvercommitTypeUnspecified
 *        Value "CPU_OVERCOMMIT_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRCompute_NodeGroupNode_CpuOvercommitType_Enabled Value
 *        "ENABLED"
 *    @arg @c kGTLRCompute_NodeGroupNode_CpuOvercommitType_None Value "NONE"
 */
@property(nonatomic, copy, nullable) NSString *cpuOvercommitType;

/** Local disk configurations. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_LocalDisk *> *disks;

/** Instance data that shows consumed resources on the node. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceConsumptionData *> *instanceConsumptionData;

/** Instances scheduled on this node. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *instances;

/** The name of the node. */
@property(nonatomic, copy, nullable) NSString *name;

/** The type of this node. */
@property(nonatomic, copy, nullable) NSString *nodeType;

/**
 *  [Output Only] Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/** Binding properties for the physical server. */
@property(nonatomic, strong, nullable) GTLRCompute_ServerBinding *serverBinding;

/** Server ID associated with this node. */
@property(nonatomic, copy, nullable) NSString *serverId;

/**
 *  status
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeGroupNode_Status_Creating Value "CREATING"
 *    @arg @c kGTLRCompute_NodeGroupNode_Status_Deleting Value "DELETING"
 *    @arg @c kGTLRCompute_NodeGroupNode_Status_Invalid Value "INVALID"
 *    @arg @c kGTLRCompute_NodeGroupNode_Status_Ready Value "READY"
 *    @arg @c kGTLRCompute_NodeGroupNode_Status_Repairing Value "REPAIRING"
 */
@property(nonatomic, copy, nullable) NSString *status;

/** Total amount of available resources on the node. */
@property(nonatomic, strong, nullable) GTLRCompute_InstanceConsumptionInfo *totalResources;

@end


/**
 *  GTLRCompute_NodeGroupsAddNodesRequest
 */
@interface GTLRCompute_NodeGroupsAddNodesRequest : GTLRObject

/**
 *  Count of additional nodes to be added to the node group.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *additionalNodeCount;

@end


/**
 *  GTLRCompute_NodeGroupsDeleteNodesRequest
 */
@interface GTLRCompute_NodeGroupsDeleteNodesRequest : GTLRObject

/** Names of the nodes to delete. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *nodes;

@end


/**
 *  GTLRCompute_NodeGroupsListNodes
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_NodeGroupsListNodes : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Node resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeGroupNode *> *items;

/**
 *  [Output Only] The resource type, which is always compute.nodeGroupsListNodes
 *  for the list of nodes in the specified node group.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_NodeGroupsListNodes_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_NodeGroupsListNodes_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NodeGroupsListNodes_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeGroupsListNodes_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NodeGroupsListNodes_Warning_Data_Item
 */
@interface GTLRCompute_NodeGroupsListNodes_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_NodeGroupsScopedList
 */
@interface GTLRCompute_NodeGroupsScopedList : GTLRObject

/** [Output Only] A list of node groups contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeGroup *> *nodeGroups;

/**
 *  [Output Only] An informational warning that appears when the nodeGroup list
 *  is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_NodeGroupsScopedList_Warning *warning;

@end


/**
 *  [Output Only] An informational warning that appears when the nodeGroup list
 *  is empty.
 */
@interface GTLRCompute_NodeGroupsScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NodeGroupsScopedList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeGroupsScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NodeGroupsScopedList_Warning_Data_Item
 */
@interface GTLRCompute_NodeGroupsScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_NodeGroupsSetNodeTemplateRequest
 */
@interface GTLRCompute_NodeGroupsSetNodeTemplateRequest : GTLRObject

/**
 *  Full or partial URL of the node template resource to be updated for this
 *  node group.
 */
@property(nonatomic, copy, nullable) NSString *nodeTemplate;

@end


/**
 *  Represent a sole-tenant Node Template resource. You can use a template to
 *  define properties for nodes in a node group. For more information, read
 *  Creating node groups and instances.
 */
@interface GTLRCompute_NodeTemplate : GTLRObject

@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AcceleratorConfig *> *accelerators;

/**
 *  CPU overcommit.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeTemplate_CpuOvercommitType_CpuOvercommitTypeUnspecified
 *        Value "CPU_OVERCOMMIT_TYPE_UNSPECIFIED"
 *    @arg @c kGTLRCompute_NodeTemplate_CpuOvercommitType_Enabled Value
 *        "ENABLED"
 *    @arg @c kGTLRCompute_NodeTemplate_CpuOvercommitType_None Value "NONE"
 */
@property(nonatomic, copy, nullable) NSString *cpuOvercommitType;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

@property(nonatomic, strong, nullable) NSArray<GTLRCompute_LocalDisk *> *disks;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] The type of the resource. Always compute#nodeTemplate for node
 *  templates.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The name of the resource, provided by the client when initially creating the
 *  resource. The resource name must be 1-63 characters long, and comply with
 *  RFC1035. Specifically, the name must be 1-63 characters long and match the
 *  regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
 *  character must be a lowercase letter, and all following characters must be a
 *  dash, lowercase letter, or digit, except the last character, which cannot be
 *  a dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Labels to use for node affinity, which will be used in instance scheduling.
 */
@property(nonatomic, strong, nullable) GTLRCompute_NodeTemplate_NodeAffinityLabels *nodeAffinityLabels;

/**
 *  The node type to use for nodes group that are created from this template.
 */
@property(nonatomic, copy, nullable) NSString *nodeType;

/**
 *  The flexible properties of the desired node type. Node groups that use this
 *  node template will create nodes of a type that matches these properties.
 *  This field is mutually exclusive with the node_type property; you can only
 *  define one or the other, but not both.
 */
@property(nonatomic, strong, nullable) GTLRCompute_NodeTemplateNodeTypeFlexibility *nodeTypeFlexibility;

/**
 *  [Output Only] The name of the region where the node template resides, such
 *  as us-central1.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  Sets the binding properties for the physical server. Valid values include: -
 *  *[Default]* RESTART_NODE_ON_ANY_SERVER: Restarts VMs on any available
 *  physical server - RESTART_NODE_ON_MINIMAL_SERVER: Restarts VMs on the same
 *  physical server whenever possible See Sole-tenant node options for more
 *  information.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ServerBinding *serverBinding;

/**
 *  [Output Only] The status of the node template. One of the following values:
 *  CREATING, READY, and DELETING.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeTemplate_Status_Creating Resources are being
 *        allocated. (Value: "CREATING")
 *    @arg @c kGTLRCompute_NodeTemplate_Status_Deleting The node template is
 *        currently being deleted. (Value: "DELETING")
 *    @arg @c kGTLRCompute_NodeTemplate_Status_Invalid Invalid status. (Value:
 *        "INVALID")
 *    @arg @c kGTLRCompute_NodeTemplate_Status_Ready The node template is ready.
 *        (Value: "READY")
 */
@property(nonatomic, copy, nullable) NSString *status;

/** [Output Only] An optional, human-readable explanation of the status. */
@property(nonatomic, copy, nullable) NSString *statusMessage;

@end


/**
 *  Labels to use for node affinity, which will be used in instance scheduling.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_NodeTemplate_NodeAffinityLabels : GTLRObject
@end


/**
 *  GTLRCompute_NodeTemplateAggregatedList
 */
@interface GTLRCompute_NodeTemplateAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of NodeTemplatesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_NodeTemplateAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource.Always compute#nodeTemplateAggregatedList for
 *  aggregated lists of node templates.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_NodeTemplateAggregatedList_Warning *warning;

@end


/**
 *  A list of NodeTemplatesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_NodeTemplatesScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_NodeTemplateAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_NodeTemplateAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NodeTemplateAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeTemplateAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NodeTemplateAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_NodeTemplateAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of node templates.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_NodeTemplateList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of NodeTemplate resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeTemplate *> *items;

/**
 *  [Output Only] Type of resource.Always compute#nodeTemplateList for lists of
 *  node templates.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_NodeTemplateList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_NodeTemplateList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_PartialSuccess Success
 *        is reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_ResourceNotDeleted One
 *        or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NodeTemplateList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeTemplateList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NodeTemplateList_Warning_Data_Item
 */
@interface GTLRCompute_NodeTemplateList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_NodeTemplateNodeTypeFlexibility
 */
@interface GTLRCompute_NodeTemplateNodeTypeFlexibility : GTLRObject

@property(nonatomic, copy, nullable) NSString *cpus;
@property(nonatomic, copy, nullable) NSString *localSsd;
@property(nonatomic, copy, nullable) NSString *memory;

@end


/**
 *  GTLRCompute_NodeTemplatesScopedList
 */
@interface GTLRCompute_NodeTemplatesScopedList : GTLRObject

/** [Output Only] A list of node templates contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeTemplate *> *nodeTemplates;

/**
 *  [Output Only] An informational warning that appears when the node templates
 *  list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_NodeTemplatesScopedList_Warning *warning;

@end


/**
 *  [Output Only] An informational warning that appears when the node templates
 *  list is empty.
 */
@interface GTLRCompute_NodeTemplatesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NodeTemplatesScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeTemplatesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NodeTemplatesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_NodeTemplatesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represent a sole-tenant Node Type resource. Each node within a node group
 *  must have a node type. A node type specifies the total amount of cores and
 *  memory for that node. Currently, the only available node type is
 *  n1-node-96-624 node type that has 96 vCPUs and 624 GB of memory, available
 *  in multiple zones. For more information read Node types.
 */
@interface GTLRCompute_NodeType : GTLRObject

/** [Output Only] The CPU platform used by this node type. */
@property(nonatomic, copy, nullable) NSString *cpuPlatform;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/** [Output Only] The deprecation status associated with this node type. */
@property(nonatomic, strong, nullable) GTLRCompute_DeprecationStatus *deprecated;

/**
 *  [Output Only] An optional textual description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The number of virtual CPUs that are available to the node
 *  type.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *guestCpus;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] The type of the resource. Always compute#nodeType for node
 *  types.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] Local SSD available to the node type, defined in GB.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *localSsdGb;

/**
 *  [Output Only] The amount of physical memory available to the node type,
 *  defined in MB.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *memoryMb;

/** [Output Only] Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] The name of the zone where the node type resides, such as
 *  us-central1-a.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  GTLRCompute_NodeTypeAggregatedList
 */
@interface GTLRCompute_NodeTypeAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of NodeTypesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_NodeTypeAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource.Always compute#nodeTypeAggregatedList for
 *  aggregated lists of node types.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_NodeTypeAggregatedList_Warning *warning;

@end


/**
 *  A list of NodeTypesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_NodeTypesScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_NodeTypeAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_NodeTypeAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NodeTypeAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeTypeAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NodeTypeAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_NodeTypeAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of node types.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_NodeTypeList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of NodeType resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeType *> *items;

/**
 *  [Output Only] Type of resource.Always compute#nodeTypeList for lists of node
 *  types.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_NodeTypeList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_NodeTypeList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_NoResultsOnPage No results
 *        are present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NodeTypeList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeTypeList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NodeTypeList_Warning_Data_Item
 */
@interface GTLRCompute_NodeTypeList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_NodeTypesScopedList
 */
@interface GTLRCompute_NodeTypesScopedList : GTLRObject

/** [Output Only] A list of node types contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeType *> *nodeTypes;

/**
 *  [Output Only] An informational warning that appears when the node types list
 *  is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_NodeTypesScopedList_Warning *warning;

@end


/**
 *  [Output Only] An informational warning that appears when the node types list
 *  is empty.
 */
@interface GTLRCompute_NodeTypesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NodeTypesScopedList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NodeTypesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NodeTypesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_NodeTypesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a notification endpoint. A notification endpoint resource defines
 *  an endpoint to receive notifications when there are status changes detected
 *  by the associated health check service. For more information, see Health
 *  checks overview.
 */
@interface GTLRCompute_NotificationEndpoint : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Settings of the gRPC notification endpoint including the endpoint URL and
 *  the retry duration.
 */
@property(nonatomic, strong, nullable) GTLRCompute_NotificationEndpointGrpcSettings *grpcSettings;

/**
 *  [Output Only] A unique identifier for this resource type. The server
 *  generates this identifier.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#notificationEndpoint for
 *  notification endpoints.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] URL of the region where the notification endpoint resides.
 *  This field applies only to the regional resource. You must specify this
 *  field as part of the HTTP request URL. It is not settable as a field in the
 *  request body.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end


/**
 *  Represents a gRPC setting that describes one gRPC notification endpoint and
 *  the retry duration attempting to send notification to this endpoint.
 */
@interface GTLRCompute_NotificationEndpointGrpcSettings : GTLRObject

/**
 *  Optional. If specified, this field is used to set the authority header by
 *  the sender of notifications. See
 *  https://tools.ietf.org/html/rfc7540#section-8.1.2.3
 */
@property(nonatomic, copy, nullable) NSString *authority;

/**
 *  Endpoint to which gRPC notifications are sent. This must be a valid gRPCLB
 *  DNS name.
 */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  Optional. If specified, this field is used to populate the "name" field in
 *  gRPC requests.
 */
@property(nonatomic, copy, nullable) NSString *payloadName;

/**
 *  Optional. This field is used to configure how often to send a full update of
 *  all non-healthy backends. If unspecified, full updates are not sent. If
 *  specified, must be in the range between 600 seconds to 3600 seconds. Nanos
 *  are disallowed.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Duration *resendInterval;

/**
 *  How much time (in seconds) is spent attempting notification retries until a
 *  successful response is received. Default is 30s. Limit is 20m (1200s). Must
 *  be a positive number.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *retryDurationSec;

@end


/**
 *  GTLRCompute_NotificationEndpointList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_NotificationEndpointList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of NotificationEndpoint resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NotificationEndpoint *> *items;

/**
 *  [Output Only] Type of the resource. Always compute#notificationEndpoint for
 *  notification endpoints.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_NotificationEndpointList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_NotificationEndpointList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_NotificationEndpointList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NotificationEndpointList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_NotificationEndpointList_Warning_Data_Item
 */
@interface GTLRCompute_NotificationEndpointList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents an Operation resource. Google Compute Engine has three Operation
 *  resources: * [Global](/compute/docs/reference/rest/v1/globalOperations) *
 *  [Regional](/compute/docs/reference/rest/v1/regionOperations) *
 *  [Zonal](/compute/docs/reference/rest/v1/zoneOperations) You can use an
 *  operation resource to manage asynchronous API requests. For more
 *  information, read Handling API responses. Operations can be global, regional
 *  or zonal. - For global operations, use the `globalOperations` resource. -
 *  For regional operations, use the `regionOperations` resource. - For zonal
 *  operations, use the `zonalOperations` resource. For more information, read
 *  Global, Regional, and Zonal Resources.
 */
@interface GTLRCompute_Operation : GTLRObject

/**
 *  [Output Only] The value of `requestId` if you provided it in the request.
 *  Not present otherwise.
 */
@property(nonatomic, copy, nullable) NSString *clientOperationId;

/** [Deprecated] This field is deprecated. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  [Output Only] A textual description of the operation, which is set when the
 *  operation is created.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The time that this operation was completed. This value is in
 *  RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *endTime;

/**
 *  [Output Only] If errors are generated during processing of the operation,
 *  this field will be populated.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Operation_Error *error;

/**
 *  [Output Only] If the operation fails, this field contains the HTTP error
 *  message that was returned, such as `NOT FOUND`.
 */
@property(nonatomic, copy, nullable) NSString *httpErrorMessage;

/**
 *  [Output Only] If the operation fails, this field contains the HTTP error
 *  status code that was returned. For example, a `404` means the resource was
 *  not found.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *httpErrorStatusCode;

/**
 *  [Output Only] The unique identifier for the operation. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] The time that this operation was requested. This value is in
 *  RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *insertTime;

/**
 *  [Output Only] Type of the resource. Always `compute#operation` for Operation
 *  resources.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** [Output Only] Name of the operation. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] An ID that represents a group of operations, such as when a
 *  group of operations results from a `bulkInsert` API request.
 */
@property(nonatomic, copy, nullable) NSString *operationGroupId;

/**
 *  [Output Only] The type of operation, such as `insert`, `update`, or
 *  `delete`, and so on.
 */
@property(nonatomic, copy, nullable) NSString *operationType;

/**
 *  [Output Only] An optional progress indicator that ranges from 0 to 100.
 *  There is no requirement that this be linear or support any granularity of
 *  operations. This should not be used to guess when the operation will be
 *  complete. This number should monotonically increase as the operation
 *  progresses.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *progress;

/**
 *  [Output Only] The URL of the region where the operation resides. Only
 *  applicable when performing regional operations.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] The time that this operation was started by the server. This
 *  value is in RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *startTime;

/**
 *  [Output Only] The status of the operation, which can be one of the
 *  following: `PENDING`, `RUNNING`, or `DONE`.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Operation_Status_Done Value "DONE"
 *    @arg @c kGTLRCompute_Operation_Status_Pending Value "PENDING"
 *    @arg @c kGTLRCompute_Operation_Status_Running Value "RUNNING"
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  [Output Only] An optional textual description of the current status of the
 *  operation.
 */
@property(nonatomic, copy, nullable) NSString *statusMessage;

/**
 *  [Output Only] The unique target ID, which identifies a specific incarnation
 *  of the target resource.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *targetId;

/**
 *  [Output Only] The URL of the resource that the operation modifies. For
 *  operations related to creating a snapshot, this points to the persistent
 *  disk that the snapshot was created from.
 */
@property(nonatomic, copy, nullable) NSString *targetLink;

/**
 *  [Output Only] User who requested the operation, for example:
 *  `user\@example.com`.
 */
@property(nonatomic, copy, nullable) NSString *user;

/**
 *  [Output Only] If warning messages are generated during processing of the
 *  operation, this field will be populated.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Operation_Warnings_Item *> *warnings;

/**
 *  [Output Only] The URL of the zone where the operation resides. Only
 *  applicable when performing per-zone operations.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  [Output Only] If errors are generated during processing of the operation,
 *  this field will be populated.
 */
@interface GTLRCompute_Operation_Error : GTLRObject

/**
 *  [Output Only] The array of errors encountered while processing this
 *  operation.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Operation_Error_Errors_Item *> *errors;

@end


/**
 *  GTLRCompute_Operation_Warnings_Item
 */
@interface GTLRCompute_Operation_Warnings_Item : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_PartialSuccess Success
 *        is reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_ResourceNotDeleted One
 *        or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_Operation_Warnings_Item_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Operation_Warnings_Item_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_Operation_Error_Errors_Item
 */
@interface GTLRCompute_Operation_Error_Errors_Item : GTLRObject

/** [Output Only] The error type identifier for this error. */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] An optional list of messages that contain the error details.
 *  There is a set of defined message types to use for providing details.The
 *  syntax depends on the error code. For example, QuotaExceededInfo will have
 *  details when the error code is QUOTA_EXCEEDED.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Operation_Error_Errors_Item_ErrorDetails_Item *> *errorDetails;

/**
 *  [Output Only] Indicates the field in the request that caused the error. This
 *  property is optional.
 */
@property(nonatomic, copy, nullable) NSString *location;

/** [Output Only] An optional, human-readable error message. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_Operation_Warnings_Item_Data_Item
 */
@interface GTLRCompute_Operation_Warnings_Item_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_Operation_Error_Errors_Item_ErrorDetails_Item
 */
@interface GTLRCompute_Operation_Error_Errors_Item_ErrorDetails_Item : GTLRObject

@property(nonatomic, strong, nullable) GTLRCompute_ErrorInfo *errorInfo;
@property(nonatomic, strong, nullable) GTLRCompute_Help *help;
@property(nonatomic, strong, nullable) GTLRCompute_LocalizedMessage *localizedMessage;
@property(nonatomic, strong, nullable) GTLRCompute_QuotaExceededInfo *quotaInfo;

@end


/**
 *  GTLRCompute_OperationAggregatedList
 */
@interface GTLRCompute_OperationAggregatedList : GTLRObject

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** [Output Only] A map of scoped operation lists. */
@property(nonatomic, strong, nullable) GTLRCompute_OperationAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always `compute#operationAggregatedList` for
 *  aggregated lists of operations.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than `maxResults`, use the
 *  `nextPageToken` as a value for the query parameter `pageToken` in the next
 *  list request. Subsequent list requests will have their own `nextPageToken`
 *  to continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_OperationAggregatedList_Warning *warning;

@end


/**
 *  [Output Only] A map of scoped operation lists.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_OperationsScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_OperationAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_OperationAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_OperationAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_OperationAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_OperationAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_OperationAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of Operation resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_OperationList : GTLRCollectionObject

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  [Output Only] A list of Operation resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Operation *> *items;

/**
 *  [Output Only] Type of resource. Always `compute#operations` for Operations
 *  resource.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than `maxResults`, use the
 *  `nextPageToken` as a value for the query parameter `pageToken` in the next
 *  list request. Subsequent list requests will have their own `nextPageToken`
 *  to continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_OperationList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_OperationList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_NoResultsOnPage No results
 *        are present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_OperationList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_OperationList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_OperationList_Warning_Data_Item
 */
@interface GTLRCompute_OperationList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_OperationsScopedList
 */
@interface GTLRCompute_OperationsScopedList : GTLRObject

/** [Output Only] A list of operations contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Operation *> *operations;

/**
 *  [Output Only] Informational warning which replaces the list of operations
 *  when the list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_OperationsScopedList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning which replaces the list of operations
 *  when the list is empty.
 */
@interface GTLRCompute_OperationsScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_OperationsScopedList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_OperationsScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_OperationsScopedList_Warning_Data_Item
 */
@interface GTLRCompute_OperationsScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Settings controlling the eviction of unhealthy hosts from the load balancing
 *  pool for the backend service.
 */
@interface GTLRCompute_OutlierDetection : GTLRObject

/**
 *  The base time that a host is ejected for. The real ejection time is equal to
 *  the base ejection time multiplied by the number of times the host has been
 *  ejected. Defaults to 30000ms or 30s.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Duration *baseEjectionTime;

/**
 *  Number of errors before a host is ejected from the connection pool. When the
 *  backend host is accessed over HTTP, a 5xx return code qualifies as an error.
 *  Defaults to 5. Not supported when the backend service is referenced by a URL
 *  map that is bound to target gRPC proxy that has validateForProxyless field
 *  set to true.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *consecutiveErrors;

/**
 *  The number of consecutive gateway failures (502, 503, 504 status or
 *  connection errors that are mapped to one of those status codes) before a
 *  consecutive gateway failure ejection occurs. Defaults to 3. Not supported
 *  when the backend service is referenced by a URL map that is bound to target
 *  gRPC proxy that has validateForProxyless field set to true.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *consecutiveGatewayFailure;

/**
 *  The percentage chance that a host will be actually ejected when an outlier
 *  status is detected through consecutive 5xx. This setting can be used to
 *  disable ejection or to ramp it up slowly. Defaults to 0. Not supported when
 *  the backend service is referenced by a URL map that is bound to target gRPC
 *  proxy that has validateForProxyless field set to true.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enforcingConsecutiveErrors;

/**
 *  The percentage chance that a host will be actually ejected when an outlier
 *  status is detected through consecutive gateway failures. This setting can be
 *  used to disable ejection or to ramp it up slowly. Defaults to 100. Not
 *  supported when the backend service is referenced by a URL map that is bound
 *  to target gRPC proxy that has validateForProxyless field set to true.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enforcingConsecutiveGatewayFailure;

/**
 *  The percentage chance that a host will be actually ejected when an outlier
 *  status is detected through success rate statistics. This setting can be used
 *  to disable ejection or to ramp it up slowly. Defaults to 100.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enforcingSuccessRate;

/**
 *  Time interval between ejection analysis sweeps. This can result in both new
 *  ejections as well as hosts being returned to service. Defaults to 1 second.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Duration *interval;

/**
 *  Maximum percentage of hosts in the load balancing pool for the backend
 *  service that can be ejected. Defaults to 50%.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxEjectionPercent;

/**
 *  The number of hosts in a cluster that must have enough request volume to
 *  detect success rate outliers. If the number of hosts is less than this
 *  setting, outlier detection via success rate statistics is not performed for
 *  any host in the cluster. Defaults to 5.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successRateMinimumHosts;

/**
 *  The minimum number of total requests that must be collected in one interval
 *  (as defined by the interval duration above) to include this host in success
 *  rate based outlier detection. If the volume is lower than this setting,
 *  outlier detection via success rate statistics is not performed for that
 *  host. Defaults to 100.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successRateRequestVolume;

/**
 *  This factor is used to determine the ejection threshold for success rate
 *  outlier ejection. The ejection threshold is the difference between the mean
 *  success rate, and the product of this factor and the standard deviation of
 *  the mean success rate: mean - (stdev * success_rate_stdev_factor). This
 *  factor is divided by a thousand to get a double. That is, if the desired
 *  factor is 1.9, the runtime value should be 1900. Defaults to 1900.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *successRateStdevFactor;

@end


/**
 *  Next free: 7
 */
@interface GTLRCompute_PacketIntervals : GTLRObject

/**
 *  Average observed inter-packet interval in milliseconds.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *avgMs;

/**
 *  From how long ago in the past these intervals were observed.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PacketIntervals_Duration_DurationUnspecified Value
 *        "DURATION_UNSPECIFIED"
 *    @arg @c kGTLRCompute_PacketIntervals_Duration_Hour Value "HOUR"
 *    @arg @c kGTLRCompute_PacketIntervals_Duration_Max From BfdSession object
 *        creation time. (Value: "MAX")
 *    @arg @c kGTLRCompute_PacketIntervals_Duration_Minute Value "MINUTE"
 */
@property(nonatomic, copy, nullable) NSString *duration;

/**
 *  Maximum observed inter-packet interval in milliseconds.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxMs;

/**
 *  Minimum observed inter-packet interval in milliseconds.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minMs;

/**
 *  Number of inter-packet intervals from which these statistics were derived.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numIntervals;

/**
 *  The type of packets for which inter-packet intervals were computed.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PacketIntervals_Type_Loopback Only applies to Echo
 *        packets. This shows the intervals between sending and receiving the
 *        same packet. (Value: "LOOPBACK")
 *    @arg @c kGTLRCompute_PacketIntervals_Type_Receive Intervals between
 *        received packets. (Value: "RECEIVE")
 *    @arg @c kGTLRCompute_PacketIntervals_Type_Transmit Intervals between
 *        transmitted packets. (Value: "TRANSMIT")
 *    @arg @c kGTLRCompute_PacketIntervals_Type_TypeUnspecified Value
 *        "TYPE_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents a Packet Mirroring resource. Packet Mirroring clones the traffic
 *  of specified instances in your Virtual Private Cloud (VPC) network and
 *  forwards it to a collector destination, such as an instance group of an
 *  internal TCP/UDP load balancer, for analysis or examination. For more
 *  information about setting up Packet Mirroring, see Using Packet Mirroring.
 */
@interface GTLRCompute_PacketMirroring : GTLRObject

/**
 *  The Forwarding Rule resource of type loadBalancingScheme=INTERNAL that will
 *  be used as collector for mirrored traffic. The specified forwarding rule
 *  must have isMirroringCollector set to true.
 */
@property(nonatomic, strong, nullable) GTLRCompute_PacketMirroringForwardingRuleInfo *collectorIlb;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Indicates whether or not this packet mirroring takes effect. If set to
 *  FALSE, this packet mirroring policy will not be enforced on the network. The
 *  default is TRUE.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PacketMirroring_Enable_False Value "FALSE"
 *    @arg @c kGTLRCompute_PacketMirroring_Enable_True Value "TRUE"
 */
@property(nonatomic, copy, nullable) NSString *enable;

/** Filter for mirrored traffic. If unspecified, all traffic is mirrored. */
@property(nonatomic, strong, nullable) GTLRCompute_PacketMirroringFilter *filter;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#packetMirroring for
 *  packet mirrorings.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  PacketMirroring mirroredResourceInfos. MirroredResourceInfo specifies a set
 *  of mirrored VM instances, subnetworks and/or tags for which traffic from/to
 *  all VM instances will be mirrored.
 */
@property(nonatomic, strong, nullable) GTLRCompute_PacketMirroringMirroredResourceInfo *mirroredResources;

/**
 *  Name of the resource; provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Specifies the mirrored VPC network. Only packets in this network will be
 *  mirrored. All mirrored VMs should have a NIC in the given network. All
 *  mirrored subnetworks should belong to the given network.
 */
@property(nonatomic, strong, nullable) GTLRCompute_PacketMirroringNetworkInfo *network;

/**
 *  The priority of applying this configuration. Priority is used to break ties
 *  in cases where there is more than one matching rule. In the case of two
 *  rules that apply for a given Instance, the one with the lowest-numbered
 *  priority value wins. Default value is 1000. Valid range is 0 through 65535.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priority;

/** [Output Only] URI of the region where the packetMirroring resides. */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end


/**
 *  Contains a list of packetMirrorings.
 */
@interface GTLRCompute_PacketMirroringAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of PacketMirroring resources. */
@property(nonatomic, strong, nullable) GTLRCompute_PacketMirroringAggregatedList_Items *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_PacketMirroringAggregatedList_Warning *warning;

@end


/**
 *  A list of PacketMirroring resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_PacketMirroringsScopedList. Use @c -additionalJSONKeys and
 *        @c -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_PacketMirroringAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_PacketMirroringAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_PacketMirroringAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PacketMirroringAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_PacketMirroringAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_PacketMirroringAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_PacketMirroringFilter
 */
@interface GTLRCompute_PacketMirroringFilter : GTLRObject

/**
 *  IP CIDR ranges that apply as filter on the source (ingress) or destination
 *  (egress) IP in the IP header. Only IPv4 is supported. If no ranges are
 *  specified, all traffic that matches the specified IPProtocols is mirrored.
 *  If neither cidrRanges nor IPProtocols is specified, all traffic is mirrored.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *cidrRanges;

/**
 *  Direction of traffic to mirror, either INGRESS, EGRESS, or BOTH. The default
 *  is BOTH.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PacketMirroringFilter_Direction_Both Default, both
 *        directions are mirrored. (Value: "BOTH")
 *    @arg @c kGTLRCompute_PacketMirroringFilter_Direction_Egress Only egress
 *        traffic is mirrored. (Value: "EGRESS")
 *    @arg @c kGTLRCompute_PacketMirroringFilter_Direction_Ingress Only ingress
 *        traffic is mirrored. (Value: "INGRESS")
 */
@property(nonatomic, copy, nullable) NSString *direction;

/**
 *  Protocols that apply as filter on mirrored traffic. If no protocols are
 *  specified, all traffic that matches the specified CIDR ranges is mirrored.
 *  If neither cidrRanges nor IPProtocols is specified, all traffic is mirrored.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *IPProtocols;

@end


/**
 *  GTLRCompute_PacketMirroringForwardingRuleInfo
 */
@interface GTLRCompute_PacketMirroringForwardingRuleInfo : GTLRObject

/**
 *  [Output Only] Unique identifier for the forwarding rule; defined by the
 *  server.
 */
@property(nonatomic, copy, nullable) NSString *canonicalUrl;

/**
 *  Resource URL to the forwarding rule representing the ILB configured as
 *  destination of the mirrored traffic.
 */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  Contains a list of PacketMirroring resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_PacketMirroringList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of PacketMirroring resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PacketMirroring *> *items;

/**
 *  [Output Only] Type of resource. Always compute#packetMirroring for
 *  packetMirrorings.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_PacketMirroringList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_PacketMirroringList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_PacketMirroringList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PacketMirroringList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_PacketMirroringList_Warning_Data_Item
 */
@interface GTLRCompute_PacketMirroringList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_PacketMirroringMirroredResourceInfo
 */
@interface GTLRCompute_PacketMirroringMirroredResourceInfo : GTLRObject

/**
 *  A set of virtual machine instances that are being mirrored. They must live
 *  in zones contained in the same region as this packetMirroring. Note that
 *  this config will apply only to those network interfaces of the Instances
 *  that belong to the network specified in this packetMirroring. You may
 *  specify a maximum of 50 Instances.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PacketMirroringMirroredResourceInfoInstanceInfo *> *instances;

/**
 *  A set of subnetworks for which traffic from/to all VM instances will be
 *  mirrored. They must live in the same region as this packetMirroring. You may
 *  specify a maximum of 5 subnetworks.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PacketMirroringMirroredResourceInfoSubnetInfo *> *subnetworks;

/**
 *  A set of mirrored tags. Traffic from/to all VM instances that have one or
 *  more of these tags will be mirrored.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tags;

@end


/**
 *  GTLRCompute_PacketMirroringMirroredResourceInfoInstanceInfo
 */
@interface GTLRCompute_PacketMirroringMirroredResourceInfoInstanceInfo : GTLRObject

/**
 *  [Output Only] Unique identifier for the instance; defined by the server.
 */
@property(nonatomic, copy, nullable) NSString *canonicalUrl;

/** Resource URL to the virtual machine instance which is being mirrored. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  GTLRCompute_PacketMirroringMirroredResourceInfoSubnetInfo
 */
@interface GTLRCompute_PacketMirroringMirroredResourceInfoSubnetInfo : GTLRObject

/**
 *  [Output Only] Unique identifier for the subnetwork; defined by the server.
 */
@property(nonatomic, copy, nullable) NSString *canonicalUrl;

/**
 *  Resource URL to the subnetwork for which traffic from/to all VM instances
 *  will be mirrored.
 */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  GTLRCompute_PacketMirroringNetworkInfo
 */
@interface GTLRCompute_PacketMirroringNetworkInfo : GTLRObject

/** [Output Only] Unique identifier for the network; defined by the server. */
@property(nonatomic, copy, nullable) NSString *canonicalUrl;

/** URL of the network resource. */
@property(nonatomic, copy, nullable) NSString *url;

@end


/**
 *  GTLRCompute_PacketMirroringsScopedList
 */
@interface GTLRCompute_PacketMirroringsScopedList : GTLRObject

/** A list of packetMirrorings contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PacketMirroring *> *packetMirrorings;

/**
 *  Informational warning which replaces the list of packetMirrorings when the
 *  list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_PacketMirroringsScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of packetMirrorings when the
 *  list is empty.
 */
@interface GTLRCompute_PacketMirroringsScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_PacketMirroringsScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PacketMirroringsScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_PacketMirroringsScopedList_Warning_Data_Item
 */
@interface GTLRCompute_PacketMirroringsScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  A matcher for the path portion of the URL. The BackendService from the
 *  longest-matched rule will serve the URL. If no rule was matched, the default
 *  service is used.
 */
@interface GTLRCompute_PathMatcher : GTLRObject

/**
 *  defaultRouteAction takes effect when none of the pathRules or routeRules
 *  match. The load balancer performs advanced routing actions, such as URL
 *  rewrites and header transformations, before forwarding the request to the
 *  selected backend. If defaultRouteAction specifies any
 *  weightedBackendServices, defaultService must not be set. Conversely if
 *  defaultService is set, defaultRouteAction cannot contain any
 *  weightedBackendServices. Only one of defaultRouteAction or
 *  defaultUrlRedirect must be set. URL maps for Classic external HTTP(S) load
 *  balancers only support the urlRewrite action within a path matcher's
 *  defaultRouteAction.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HttpRouteAction *defaultRouteAction;

/**
 *  The full or partial URL to the BackendService resource. This URL is used if
 *  none of the pathRules or routeRules defined by this PathMatcher are matched.
 *  For example, the following are all valid URLs to a BackendService resource:
 *  - https://www.googleapis.com/compute/v1/projects/project
 *  /global/backendServices/backendService -
 *  compute/v1/projects/project/global/backendServices/backendService -
 *  global/backendServices/backendService If defaultRouteAction is also
 *  specified, advanced routing actions, such as URL rewrites, take effect
 *  before sending the request to the backend. However, if defaultService is
 *  specified, defaultRouteAction cannot contain any weightedBackendServices.
 *  Conversely, if defaultRouteAction specifies any weightedBackendServices,
 *  defaultService must not be specified. Only one of defaultService,
 *  defaultUrlRedirect , or defaultRouteAction.weightedBackendService must be
 *  set. Authorization requires one or more of the following Google IAM
 *  permissions on the specified resource default_service: -
 *  compute.backendBuckets.use - compute.backendServices.use
 */
@property(nonatomic, copy, nullable) NSString *defaultService;

/**
 *  When none of the specified pathRules or routeRules match, the request is
 *  redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect
 *  is specified, defaultService or defaultRouteAction must not be set. Not
 *  supported when the URL map is bound to a target gRPC proxy.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HttpRedirectAction *defaultUrlRedirect;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Specifies changes to request and response headers that need to take effect
 *  for the selected backend service. HeaderAction specified here are applied
 *  after the matching HttpRouteRule HeaderAction and before the HeaderAction in
 *  the UrlMap HeaderAction is not supported for load balancers that have their
 *  loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound
 *  to a target gRPC proxy that has validateForProxyless field set to true.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HttpHeaderAction *headerAction;

/** The name to which this PathMatcher is referred by the HostRule. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The list of path rules. Use this list instead of routeRules when routing
 *  based on simple path matching is all that's required. The order by which
 *  path rules are specified does not matter. Matches are always done on the
 *  longest-path-first basis. For example: a pathRule with a path /a/b/c/ * will
 *  match before /a/b/ * irrespective of the order in which those paths appear
 *  in this list. Within a given pathMatcher, only one of pathRules or
 *  routeRules must be set.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PathRule *> *pathRules;

/**
 *  The list of HTTP route rules. Use this list instead of pathRules when
 *  advanced route matching and routing actions are desired. routeRules are
 *  evaluated in order of priority, from the lowest to highest number. Within a
 *  given pathMatcher, you can set only one of pathRules or routeRules.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HttpRouteRule *> *routeRules;

@end


/**
 *  A path-matching rule for a URL. If matched, will use the specified
 *  BackendService to handle the traffic arriving at this URL.
 */
@interface GTLRCompute_PathRule : GTLRObject

/**
 *  The list of path patterns to match. Each must start with / and the only
 *  place a * is allowed is at the end following a /. The string fed to the path
 *  matcher does not include any text after the first ? or #, and those chars
 *  are not allowed here.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *paths;

/**
 *  In response to a matching path, the load balancer performs advanced routing
 *  actions, such as URL rewrites and header transformations, before forwarding
 *  the request to the selected backend. If routeAction specifies any
 *  weightedBackendServices, service must not be set. Conversely if service is
 *  set, routeAction cannot contain any weightedBackendServices. Only one of
 *  routeAction or urlRedirect must be set. URL maps for Classic external
 *  HTTP(S) load balancers only support the urlRewrite action within a path
 *  rule's routeAction.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HttpRouteAction *routeAction;

/**
 *  The full or partial URL of the backend service resource to which traffic is
 *  directed if this rule is matched. If routeAction is also specified, advanced
 *  routing actions, such as URL rewrites, take effect before sending the
 *  request to the backend. However, if service is specified, routeAction cannot
 *  contain any weightedBackendServices. Conversely, if routeAction specifies
 *  any weightedBackendServices, service must not be specified. Only one of
 *  urlRedirect, service or routeAction.weightedBackendService must be set.
 */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  When a path pattern is matched, the request is redirected to a URL specified
 *  by urlRedirect. If urlRedirect is specified, service or routeAction must not
 *  be set. Not supported when the URL map is bound to a target gRPC proxy.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HttpRedirectAction *urlRedirect;

@end


/**
 *  GTLRCompute_PerInstanceConfig
 */
@interface GTLRCompute_PerInstanceConfig : GTLRObject

/**
 *  Fingerprint of this per-instance config. This field can be used in
 *  optimistic locking. It is ignored when inserting a per-instance config. An
 *  up-to-date fingerprint must be provided in order to update an existing
 *  per-instance configuration or the field needs to be unset.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  The name of a per-instance configuration and its corresponding instance.
 *  Serves as a merge key during UpdatePerInstanceConfigs operations, that is,
 *  if a per-instance configuration with the same name exists then it will be
 *  updated, otherwise a new one will be created for the VM instance with the
 *  same name. An attempt to create a per-instance configconfiguration for a VM
 *  instance that either doesn't exist or is not part of the group will result
 *  in an error.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The intended preserved state for the given instance. Does not contain
 *  preserved state generated from a stateful policy.
 */
@property(nonatomic, strong, nullable) GTLRCompute_PreservedState *preservedState;

/**
 *  The status of applying this per-instance configuration on the corresponding
 *  managed instance.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PerInstanceConfig_Status_Applying The per-instance
 *        configuration is being applied to the instance, but is not yet
 *        effective, possibly waiting for the instance to, for example, REFRESH.
 *        (Value: "APPLYING")
 *    @arg @c kGTLRCompute_PerInstanceConfig_Status_Deleting The per-instance
 *        configuration deletion is being applied on the instance, possibly
 *        waiting for the instance to, for example, REFRESH. (Value: "DELETING")
 *    @arg @c kGTLRCompute_PerInstanceConfig_Status_Effective The per-instance
 *        configuration is effective on the instance, meaning that all disks,
 *        ips and metadata specified in this configuration are attached or set
 *        on the instance. (Value: "EFFECTIVE")
 *    @arg @c kGTLRCompute_PerInstanceConfig_Status_None *[Default]* The default
 *        status, when no per-instance configuration exists. (Value: "NONE")
 *    @arg @c kGTLRCompute_PerInstanceConfig_Status_Unapplied The per-instance
 *        configuration is set on an instance but not been applied yet. (Value:
 *        "UNAPPLIED")
 *    @arg @c kGTLRCompute_PerInstanceConfig_Status_UnappliedDeletion The
 *        per-instance configuration has been deleted, but the deletion is not
 *        yet applied. (Value: "UNAPPLIED_DELETION")
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  An Identity and Access Management (IAM) policy, which specifies access
 *  controls for Google Cloud resources. A `Policy` is a collection of
 *  `bindings`. A `binding` binds one or more `members`, or principals, to a
 *  single `role`. Principals can be user accounts, service accounts, Google
 *  groups, and domains (such as G Suite). A `role` is a named list of
 *  permissions; each `role` can be an IAM predefined role or a user-created
 *  custom role. For some types of Google Cloud resources, a `binding` can also
 *  specify a `condition`, which is a logical expression that allows access to a
 *  resource only if the expression evaluates to `true`. A condition can add
 *  constraints based on attributes of the request, the resource, or both. To
 *  learn which resources support conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *  **JSON example:** { "bindings": [ { "role":
 *  "roles/resourcemanager.organizationAdmin", "members": [
 *  "user:mike\@example.com", "group:admins\@example.com", "domain:google.com",
 *  "serviceAccount:my-project-id\@appspot.gserviceaccount.com" ] }, { "role":
 *  "roles/resourcemanager.organizationViewer", "members": [
 *  "user:eve\@example.com" ], "condition": { "title": "expirable access",
 *  "description": "Does not grant access after Sep 2020", "expression":
 *  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
 *  "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
 *  user:mike\@example.com - group:admins\@example.com - domain:google.com -
 *  serviceAccount:my-project-id\@appspot.gserviceaccount.com role:
 *  roles/resourcemanager.organizationAdmin - members: - user:eve\@example.com
 *  role: roles/resourcemanager.organizationViewer condition: title: expirable
 *  access description: Does not grant access after Sep 2020 expression:
 *  request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA=
 *  version: 3 For a description of IAM and its features, see the [IAM
 *  documentation](https://cloud.google.com/iam/docs/).
 */
@interface GTLRCompute_Policy : GTLRObject

/** Specifies cloud audit logging configuration for this policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AuditConfig *> *auditConfigs;

/**
 *  Associates a list of `members`, or principals, with a `role`. Optionally,
 *  may specify a `condition` that determines how and when the `bindings` are
 *  applied. Each of the `bindings` must contain at least one principal. The
 *  `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of
 *  these principals can be Google groups. Each occurrence of a principal counts
 *  towards these limits. For example, if the `bindings` grant 50 different
 *  roles to `user:alice\@example.com`, and not to any other principal, then you
 *  can add another 1,450 principals to the `bindings` in the `Policy`.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Binding *> *bindings;

/**
 *  `etag` is used for optimistic concurrency control as a way to help prevent
 *  simultaneous updates of a policy from overwriting each other. It is strongly
 *  suggested that systems make use of the `etag` in the read-modify-write cycle
 *  to perform policy updates in order to avoid race conditions: An `etag` is
 *  returned in the response to `getIamPolicy`, and systems are expected to put
 *  that etag in the request to `setIamPolicy` to ensure that their change will
 *  be applied to the same version of the policy. **Important:** If you use IAM
 *  Conditions, you must include the `etag` field whenever you call
 *  `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a
 *  version `3` policy with a version `1` policy, and all of the conditions in
 *  the version `3` policy are lost.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Rule *> *rules;

/**
 *  Specifies the format of the policy. Valid values are `0`, `1`, and `3`.
 *  Requests that specify an invalid value are rejected. Any operation that
 *  affects conditional role bindings must specify version `3`. This requirement
 *  applies to the following operations: * Getting a policy that includes a
 *  conditional role binding * Adding a conditional role binding to a policy *
 *  Changing a conditional role binding in a policy * Removing any role binding,
 *  with or without a condition, from a policy that includes conditions
 *  **Important:** If you use IAM Conditions, you must include the `etag` field
 *  whenever you call `setIamPolicy`. If you omit this field, then IAM allows
 *  you to overwrite a version `3` policy with a version `1` policy, and all of
 *  the conditions in the version `3` policy are lost. If a policy does not
 *  include any conditions, operations on that policy may specify any valid
 *  version or leave the field unset. To learn which resources support
 *  conditions in their IAM policies, see the [IAM
 *  documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *version;

@end


/**
 *  GTLRCompute_PreconfiguredWafSet
 */
@interface GTLRCompute_PreconfiguredWafSet : GTLRObject

/** List of entities that are currently supported for WAF rules. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_WafExpressionSet *> *expressionSets;

@end


/**
 *  Preserved state for a given instance.
 */
@interface GTLRCompute_PreservedState : GTLRObject

/**
 *  Preserved disks defined for this instance. This map is keyed with the device
 *  names of the disks.
 */
@property(nonatomic, strong, nullable) GTLRCompute_PreservedState_Disks *disks;

/** Preserved metadata defined for this instance. */
@property(nonatomic, strong, nullable) GTLRCompute_PreservedState_Metadata *metadata;

@end


/**
 *  Preserved disks defined for this instance. This map is keyed with the device
 *  names of the disks.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_PreservedStatePreservedDisk. Use @c -additionalJSONKeys
 *        and @c -additionalPropertyForName: to get the list of properties and
 *        then fetch them; or @c -additionalProperties to fetch them all at
 *        once.
 */
@interface GTLRCompute_PreservedState_Disks : GTLRObject
@end


/**
 *  Preserved metadata defined for this instance.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_PreservedState_Metadata : GTLRObject
@end


/**
 *  GTLRCompute_PreservedStatePreservedDisk
 */
@interface GTLRCompute_PreservedStatePreservedDisk : GTLRObject

/**
 *  These stateful disks will never be deleted during autohealing, update,
 *  instance recreate operations. This flag is used to configure if the disk
 *  should be deleted after it is no longer used by the group, e.g. when the
 *  given instance or the whole MIG is deleted. Note: disks attached in
 *  READ_ONLY mode cannot be auto-deleted.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PreservedStatePreservedDisk_AutoDelete_Never Value
 *        "NEVER"
 *    @arg @c kGTLRCompute_PreservedStatePreservedDisk_AutoDelete_OnPermanentInstanceDeletion
 *        Value "ON_PERMANENT_INSTANCE_DELETION"
 */
@property(nonatomic, copy, nullable) NSString *autoDelete;

/**
 *  The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If
 *  not specified, the default is to attach the disk in READ_WRITE mode.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PreservedStatePreservedDisk_Mode_ReadOnly Attaches
 *        this disk in read-only mode. Multiple VM instances can use a disk in
 *        READ_ONLY mode at a time. (Value: "READ_ONLY")
 *    @arg @c kGTLRCompute_PreservedStatePreservedDisk_Mode_ReadWrite
 *        *[Default]* Attaches this disk in READ_WRITE mode. Only one VM
 *        instance at a time can be attached to a disk in READ_WRITE mode.
 *        (Value: "READ_WRITE")
 */
@property(nonatomic, copy, nullable) NSString *mode;

/**
 *  The URL of the disk resource that is stateful and should be attached to the
 *  VM instance.
 */
@property(nonatomic, copy, nullable) NSString *source;

@end


/**
 *  Represents a Project resource. A project is used to organize resources in a
 *  Google Cloud Platform environment. For more information, read about the
 *  Resource Hierarchy.
 */
@interface GTLRCompute_Project : GTLRObject

/**
 *  Metadata key/value pairs available to all instances contained in this
 *  project. See Custom metadata for more information.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Metadata *commonInstanceMetadata;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  This signifies the default network tier used for configuring resources of
 *  the project and can only take the following values: PREMIUM, STANDARD.
 *  Initially the default network tier is PREMIUM.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Project_DefaultNetworkTier_FixedStandard Public
 *        internet quality with fixed bandwidth. (Value: "FIXED_STANDARD")
 *    @arg @c kGTLRCompute_Project_DefaultNetworkTier_Premium High quality,
 *        Google-grade network tier, support for all networking products.
 *        (Value: "PREMIUM")
 *    @arg @c kGTLRCompute_Project_DefaultNetworkTier_Standard Public internet
 *        quality, only limited support for other networking products. (Value:
 *        "STANDARD")
 *    @arg @c kGTLRCompute_Project_DefaultNetworkTier_StandardOverridesFixedStandard
 *        (Output only) Temporary tier for FIXED_STANDARD when fixed standard
 *        tier is expired or not configured. (Value:
 *        "STANDARD_OVERRIDES_FIXED_STANDARD")
 */
@property(nonatomic, copy, nullable) NSString *defaultNetworkTier;

/**
 *  [Output Only] Default service account used by VMs running in this project.
 */
@property(nonatomic, copy, nullable) NSString *defaultServiceAccount;

/**
 *  An optional textual description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Restricted features enabled for use on this project. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *enabledFeatures;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server. This is *not* the project ID, and is just a unique ID
 *  used by Compute Engine to identify resources.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#project for projects.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The project ID. For example: my-example-project. Use the project ID to make
 *  requests to Compute Engine.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** [Output Only] Quotas assigned to this project. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Quota *> *quotas;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  The naming prefix for daily usage reports and the Google Cloud Storage
 *  bucket where they are stored.
 */
@property(nonatomic, strong, nullable) GTLRCompute_UsageExportLocation *usageExportLocation;

/**
 *  [Output Only] The role this project has in a shared VPC configuration.
 *  Currently, only projects with the host role, which is specified by the value
 *  HOST, are differentiated.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Project_XpnProjectStatus_Host Value "HOST"
 *    @arg @c kGTLRCompute_Project_XpnProjectStatus_UnspecifiedXpnProjectStatus
 *        Value "UNSPECIFIED_XPN_PROJECT_STATUS"
 */
@property(nonatomic, copy, nullable) NSString *xpnProjectStatus;

@end


/**
 *  GTLRCompute_ProjectsDisableXpnResourceRequest
 */
@interface GTLRCompute_ProjectsDisableXpnResourceRequest : GTLRObject

/** Service resource (a.k.a service project) ID. */
@property(nonatomic, strong, nullable) GTLRCompute_XpnResourceId *xpnResource;

@end


/**
 *  GTLRCompute_ProjectsEnableXpnResourceRequest
 */
@interface GTLRCompute_ProjectsEnableXpnResourceRequest : GTLRObject

/** Service resource (a.k.a service project) ID. */
@property(nonatomic, strong, nullable) GTLRCompute_XpnResourceId *xpnResource;

@end


/**
 *  GTLRCompute_ProjectsGetXpnResources
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "resources" property. If returned as the result of a query, it
 *        should support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_ProjectsGetXpnResources : GTLRCollectionObject

/**
 *  [Output Only] Type of resource. Always compute#projectsGetXpnResources for
 *  lists of service resources (a.k.a service projects)
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  Service resources (a.k.a service projects) attached to this project as their
 *  shared VPC host.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_XpnResourceId *> *resources;

@end


/**
 *  GTLRCompute_ProjectsListXpnHostsRequest
 */
@interface GTLRCompute_ProjectsListXpnHostsRequest : GTLRObject

/**
 *  Optional organization ID managed by Cloud Resource Manager, for which to
 *  list shared VPC host projects. If not specified, the organization will be
 *  inferred from the project.
 */
@property(nonatomic, copy, nullable) NSString *organization;

@end


/**
 *  GTLRCompute_ProjectsSetDefaultNetworkTierRequest
 */
@interface GTLRCompute_ProjectsSetDefaultNetworkTierRequest : GTLRObject

/**
 *  Default network tier to be set.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ProjectsSetDefaultNetworkTierRequest_NetworkTier_FixedStandard
 *        Public internet quality with fixed bandwidth. (Value:
 *        "FIXED_STANDARD")
 *    @arg @c kGTLRCompute_ProjectsSetDefaultNetworkTierRequest_NetworkTier_Premium
 *        High quality, Google-grade network tier, support for all networking
 *        products. (Value: "PREMIUM")
 *    @arg @c kGTLRCompute_ProjectsSetDefaultNetworkTierRequest_NetworkTier_Standard
 *        Public internet quality, only limited support for other networking
 *        products. (Value: "STANDARD")
 *    @arg @c kGTLRCompute_ProjectsSetDefaultNetworkTierRequest_NetworkTier_StandardOverridesFixedStandard
 *        (Output only) Temporary tier for FIXED_STANDARD when fixed standard
 *        tier is expired or not configured. (Value:
 *        "STANDARD_OVERRIDES_FIXED_STANDARD")
 */
@property(nonatomic, copy, nullable) NSString *networkTier;

@end


/**
 *  A public advertised prefix represents an aggregated IP prefix or netblock
 *  which customers bring to cloud. The IP prefix is a single unit of route
 *  advertisement and is announced globally to the internet.
 */
@interface GTLRCompute_PublicAdvertisedPrefix : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The IPv4 address to be used for reverse DNS verification. */
@property(nonatomic, copy, nullable) NSString *dnsVerificationIp;

/**
 *  Fingerprint of this resource. A hash of the contents stored in this object.
 *  This field is used in optimistic locking. This field will be ignored when
 *  inserting a new PublicAdvertisedPrefix. An up-to-date fingerprint must be
 *  provided in order to update the PublicAdvertisedPrefix, otherwise the
 *  request will fail with error 412 conditionNotMet. To see the latest
 *  fingerprint, make a get() request to retrieve a PublicAdvertisedPrefix.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] The unique identifier for the resource type. The server
 *  generates this identifier.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  The IPv4 address range, in CIDR format, represented by this public
 *  advertised prefix.
 */
@property(nonatomic, copy, nullable) NSString *ipCidrRange;

/**
 *  [Output Only] Type of the resource. Always compute#publicAdvertisedPrefix
 *  for public advertised prefixes.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] The list of public delegated prefixes that exist for this
 *  public advertised prefix.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PublicAdvertisedPrefixPublicDelegatedPrefix *> *publicDelegatedPrefixs;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] The shared secret to be used for reverse DNS verification.
 */
@property(nonatomic, copy, nullable) NSString *sharedSecret;

/**
 *  The status of the public advertised prefix. Possible values include: -
 *  `INITIAL`: RPKI validation is complete. - `PTR_CONFIGURED`: User has
 *  configured the PTR. - `VALIDATED`: Reverse DNS lookup is successful. -
 *  `REVERSE_DNS_LOOKUP_FAILED`: Reverse DNS lookup failed. -
 *  `PREFIX_CONFIGURATION_IN_PROGRESS`: The prefix is being configured. -
 *  `PREFIX_CONFIGURATION_COMPLETE`: The prefix is fully configured. -
 *  `PREFIX_REMOVAL_IN_PROGRESS`: The prefix is being removed.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefix_Status_Initial RPKI validation
 *        is complete. (Value: "INITIAL")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefix_Status_PrefixConfigurationComplete
 *        The prefix is fully configured. (Value:
 *        "PREFIX_CONFIGURATION_COMPLETE")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefix_Status_PrefixConfigurationInProgress
 *        The prefix is being configured. (Value:
 *        "PREFIX_CONFIGURATION_IN_PROGRESS")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefix_Status_PrefixRemovalInProgress
 *        The prefix is being removed. (Value: "PREFIX_REMOVAL_IN_PROGRESS")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefix_Status_PtrConfigured User has
 *        configured the PTR. (Value: "PTR_CONFIGURED")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefix_Status_ReverseDnsLookupFailed
 *        Reverse DNS lookup failed. (Value: "REVERSE_DNS_LOOKUP_FAILED")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefix_Status_Validated Reverse DNS
 *        lookup is successful. (Value: "VALIDATED")
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  GTLRCompute_PublicAdvertisedPrefixList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_PublicAdvertisedPrefixList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of PublicAdvertisedPrefix resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PublicAdvertisedPrefix *> *items;

/**
 *  [Output Only] Type of the resource. Always compute#publicAdvertisedPrefix
 *  for public advertised prefixes.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_PublicAdvertisedPrefixList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_PublicAdvertisedPrefixList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_PublicAdvertisedPrefixList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PublicAdvertisedPrefixList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_PublicAdvertisedPrefixList_Warning_Data_Item
 */
@interface GTLRCompute_PublicAdvertisedPrefixList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a CIDR range which can be used to assign addresses.
 */
@interface GTLRCompute_PublicAdvertisedPrefixPublicDelegatedPrefix : GTLRObject

/** The IP address range of the public delegated prefix */
@property(nonatomic, copy, nullable) NSString *ipRange;

/** The name of the public delegated prefix */
@property(nonatomic, copy, nullable) NSString *name;

/** The project number of the public delegated prefix */
@property(nonatomic, copy, nullable) NSString *project;

/**
 *  The region of the public delegated prefix if it is regional. If absent, the
 *  prefix is global.
 */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  The status of the public delegated prefix. Possible values are:
 *  INITIALIZING: The public delegated prefix is being initialized and addresses
 *  cannot be created yet. ANNOUNCED: The public delegated prefix is active.
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  A PublicDelegatedPrefix resource represents an IP block within a
 *  PublicAdvertisedPrefix that is configured within a single cloud scope
 *  (global or region). IPs in the block can be allocated to resources within
 *  that scope. Public delegated prefixes may be further broken up into smaller
 *  IP blocks in the same scope as the parent block.
 */
@interface GTLRCompute_PublicDelegatedPrefix : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Fingerprint of this resource. A hash of the contents stored in this object.
 *  This field is used in optimistic locking. This field will be ignored when
 *  inserting a new PublicDelegatedPrefix. An up-to-date fingerprint must be
 *  provided in order to update the PublicDelegatedPrefix, otherwise the request
 *  will fail with error 412 conditionNotMet. To see the latest fingerprint,
 *  make a get() request to retrieve a PublicDelegatedPrefix.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] The unique identifier for the resource type. The server
 *  generates this identifier.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  The IPv4 address range, in CIDR format, represented by this public delegated
 *  prefix.
 */
@property(nonatomic, copy, nullable) NSString *ipCidrRange;

/**
 *  If true, the prefix will be live migrated.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isLiveMigration;

/**
 *  [Output Only] Type of the resource. Always compute#publicDelegatedPrefix for
 *  public delegated prefixes.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The URL of parent prefix. Either PublicAdvertisedPrefix or
 *  PublicDelegatedPrefix.
 */
@property(nonatomic, copy, nullable) NSString *parentPrefix;

/**
 *  The list of sub public delegated prefixes that exist for this public
 *  delegated prefix.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PublicDelegatedPrefixPublicDelegatedSubPrefix *> *publicDelegatedSubPrefixs;

/**
 *  [Output Only] URL of the region where the public delegated prefix resides.
 *  This field applies only to the region resource. You must specify this field
 *  as part of the HTTP request URL. It is not settable as a field in the
 *  request body.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] The status of the public delegated prefix, which can be one of
 *  following values: - `INITIALIZING` The public delegated prefix is being
 *  initialized and addresses cannot be created yet. - `READY_TO_ANNOUNCE` The
 *  public delegated prefix is a live migration prefix and is active. -
 *  `ANNOUNCED` The public delegated prefix is active. - `DELETING` The public
 *  delegated prefix is being deprovsioned.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PublicDelegatedPrefix_Status_Announced The public
 *        delegated prefix is active. (Value: "ANNOUNCED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefix_Status_Deleting The public
 *        delegated prefix is being deprovsioned. (Value: "DELETING")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefix_Status_Initializing The public
 *        delegated prefix is being initialized and addresses cannot be created
 *        yet. (Value: "INITIALIZING")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefix_Status_ReadyToAnnounce The
 *        public delegated prefix is currently withdrawn but ready to be
 *        announced. (Value: "READY_TO_ANNOUNCE")
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  GTLRCompute_PublicDelegatedPrefixAggregatedList
 */
@interface GTLRCompute_PublicDelegatedPrefixAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of PublicDelegatedPrefixesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_PublicDelegatedPrefixAggregatedList_Items *items;

/**
 *  [Output Only] Type of the resource. Always
 *  compute#publicDelegatedPrefixAggregatedList for aggregated lists of public
 *  delegated prefixes.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_PublicDelegatedPrefixAggregatedList_Warning *warning;

@end


/**
 *  A list of PublicDelegatedPrefixesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_PublicDelegatedPrefixesScopedList. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_PublicDelegatedPrefixAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_PublicDelegatedPrefixAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_PublicDelegatedPrefixAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_PublicDelegatedPrefixesScopedList
 */
@interface GTLRCompute_PublicDelegatedPrefixesScopedList : GTLRObject

/**
 *  [Output Only] A list of PublicDelegatedPrefixes contained in this scope.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PublicDelegatedPrefix *> *publicDelegatedPrefixes;

/**
 *  [Output Only] Informational warning which replaces the list of public
 *  delegated prefixes when the list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_PublicDelegatedPrefixesScopedList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning which replaces the list of public
 *  delegated prefixes when the list is empty.
 */
@interface GTLRCompute_PublicDelegatedPrefixesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_PublicDelegatedPrefixesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_PublicDelegatedPrefixList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_PublicDelegatedPrefixList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of PublicDelegatedPrefix resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PublicDelegatedPrefix *> *items;

/**
 *  [Output Only] Type of the resource. Always compute#publicDelegatedPrefixList
 *  for public delegated prefixes.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_PublicDelegatedPrefixList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_PublicDelegatedPrefixList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PublicDelegatedPrefixList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_PublicDelegatedPrefixList_Warning_Data_Item
 */
@interface GTLRCompute_PublicDelegatedPrefixList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a sub PublicDelegatedPrefix.
 */
@interface GTLRCompute_PublicDelegatedPrefixPublicDelegatedSubPrefix : GTLRObject

/** Name of the project scoping this PublicDelegatedSubPrefix. */
@property(nonatomic, copy, nullable) NSString *delegateeProject;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The IPv4 address range, in CIDR format, represented by this sub public
 *  delegated prefix.
 */
@property(nonatomic, copy, nullable) NSString *ipCidrRange;

/**
 *  Whether the sub prefix is delegated to create Address resources in the
 *  delegatee project.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *isAddress;

/** The name of the sub public delegated prefix. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] The region of the sub public delegated prefix if it is
 *  regional. If absent, the sub prefix is global.
 */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  [Output Only] The status of the sub public delegated prefix.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixPublicDelegatedSubPrefix_Status_Active
 *        Value "ACTIVE"
 *    @arg @c kGTLRCompute_PublicDelegatedPrefixPublicDelegatedSubPrefix_Status_Inactive
 *        Value "INACTIVE"
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  A quotas entry.
 */
@interface GTLRCompute_Quota : GTLRObject

/**
 *  [Output Only] Quota limit for this metric.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *limit;

/**
 *  [Output Only] Name of the quota metric.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Quota_Metric_A2Cpus Value "A2_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_AffinityGroups Value "AFFINITY_GROUPS"
 *    @arg @c kGTLRCompute_Quota_Metric_Autoscalers Value "AUTOSCALERS"
 *    @arg @c kGTLRCompute_Quota_Metric_BackendBuckets Value "BACKEND_BUCKETS"
 *    @arg @c kGTLRCompute_Quota_Metric_BackendServices Value "BACKEND_SERVICES"
 *    @arg @c kGTLRCompute_Quota_Metric_C2Cpus Value "C2_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_C2dCpus Value "C2D_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_C3Cpus Value "C3_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_Commitments Value "COMMITMENTS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedA2Cpus Value
 *        "COMMITTED_A2_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedC2Cpus Value
 *        "COMMITTED_C2_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedC2dCpus Value
 *        "COMMITTED_C2D_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedC3Cpus Value
 *        "COMMITTED_C3_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedCpus Value "COMMITTED_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedE2Cpus Value
 *        "COMMITTED_E2_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedLicenses Value
 *        "COMMITTED_LICENSES"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedLocalSsdTotalGb Value
 *        "COMMITTED_LOCAL_SSD_TOTAL_GB"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedM3Cpus Value
 *        "COMMITTED_M3_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedMemoryOptimizedCpus Value
 *        "COMMITTED_MEMORY_OPTIMIZED_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedN2aCpus Value
 *        "COMMITTED_N2A_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedN2Cpus Value
 *        "COMMITTED_N2_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedN2dCpus Value
 *        "COMMITTED_N2D_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedNvidiaA10080gbGpus Value
 *        "COMMITTED_NVIDIA_A100_80GB_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedNvidiaA100Gpus Value
 *        "COMMITTED_NVIDIA_A100_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedNvidiaK80Gpus Value
 *        "COMMITTED_NVIDIA_K80_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedNvidiaP100Gpus Value
 *        "COMMITTED_NVIDIA_P100_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedNvidiaP4Gpus Value
 *        "COMMITTED_NVIDIA_P4_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedNvidiaT4Gpus Value
 *        "COMMITTED_NVIDIA_T4_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedNvidiaV100Gpus Value
 *        "COMMITTED_NVIDIA_V100_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedT2aCpus Value
 *        "COMMITTED_T2A_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_CommittedT2dCpus Value
 *        "COMMITTED_T2D_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_Cpus Guest CPUs (Value: "CPUS")
 *    @arg @c kGTLRCompute_Quota_Metric_CpusAllRegions Value "CPUS_ALL_REGIONS"
 *    @arg @c kGTLRCompute_Quota_Metric_DisksTotalGb Value "DISKS_TOTAL_GB"
 *    @arg @c kGTLRCompute_Quota_Metric_E2Cpus Value "E2_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_ExternalManagedForwardingRules Value
 *        "EXTERNAL_MANAGED_FORWARDING_RULES"
 *    @arg @c kGTLRCompute_Quota_Metric_ExternalNetworkLbForwardingRules Value
 *        "EXTERNAL_NETWORK_LB_FORWARDING_RULES"
 *    @arg @c kGTLRCompute_Quota_Metric_ExternalProtocolForwardingRules Value
 *        "EXTERNAL_PROTOCOL_FORWARDING_RULES"
 *    @arg @c kGTLRCompute_Quota_Metric_ExternalVpnGateways Value
 *        "EXTERNAL_VPN_GATEWAYS"
 *    @arg @c kGTLRCompute_Quota_Metric_Firewalls Value "FIREWALLS"
 *    @arg @c kGTLRCompute_Quota_Metric_ForwardingRules Value "FORWARDING_RULES"
 *    @arg @c kGTLRCompute_Quota_Metric_GlobalExternalManagedForwardingRules
 *        Value "GLOBAL_EXTERNAL_MANAGED_FORWARDING_RULES"
 *    @arg @c kGTLRCompute_Quota_Metric_GlobalInternalAddresses Value
 *        "GLOBAL_INTERNAL_ADDRESSES"
 *    @arg @c kGTLRCompute_Quota_Metric_GpusAllRegions Value "GPUS_ALL_REGIONS"
 *    @arg @c kGTLRCompute_Quota_Metric_HealthChecks Value "HEALTH_CHECKS"
 *    @arg @c kGTLRCompute_Quota_Metric_Images Value "IMAGES"
 *    @arg @c kGTLRCompute_Quota_Metric_InPlaceSnapshots Value
 *        "IN_PLACE_SNAPSHOTS"
 *    @arg @c kGTLRCompute_Quota_Metric_InstanceGroupManagers Value
 *        "INSTANCE_GROUP_MANAGERS"
 *    @arg @c kGTLRCompute_Quota_Metric_InstanceGroups Value "INSTANCE_GROUPS"
 *    @arg @c kGTLRCompute_Quota_Metric_Instances Value "INSTANCES"
 *    @arg @c kGTLRCompute_Quota_Metric_InstanceTemplates Value
 *        "INSTANCE_TEMPLATES"
 *    @arg @c kGTLRCompute_Quota_Metric_InterconnectAttachmentsPerRegion Value
 *        "INTERCONNECT_ATTACHMENTS_PER_REGION"
 *    @arg @c kGTLRCompute_Quota_Metric_InterconnectAttachmentsTotalMbps Value
 *        "INTERCONNECT_ATTACHMENTS_TOTAL_MBPS"
 *    @arg @c kGTLRCompute_Quota_Metric_Interconnects Value "INTERCONNECTS"
 *    @arg @c kGTLRCompute_Quota_Metric_InterconnectTotalGbps Value
 *        "INTERCONNECT_TOTAL_GBPS"
 *    @arg @c kGTLRCompute_Quota_Metric_InternalAddresses Value
 *        "INTERNAL_ADDRESSES"
 *    @arg @c kGTLRCompute_Quota_Metric_InternalTrafficDirectorForwardingRules
 *        Value "INTERNAL_TRAFFIC_DIRECTOR_FORWARDING_RULES"
 *    @arg @c kGTLRCompute_Quota_Metric_InUseAddresses Value "IN_USE_ADDRESSES"
 *    @arg @c kGTLRCompute_Quota_Metric_InUseBackupSchedules Value
 *        "IN_USE_BACKUP_SCHEDULES"
 *    @arg @c kGTLRCompute_Quota_Metric_InUseSnapshotSchedules Value
 *        "IN_USE_SNAPSHOT_SCHEDULES"
 *    @arg @c kGTLRCompute_Quota_Metric_LocalSsdTotalGb Value
 *        "LOCAL_SSD_TOTAL_GB"
 *    @arg @c kGTLRCompute_Quota_Metric_M1Cpus Value "M1_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_M2Cpus Value "M2_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_M3Cpus Value "M3_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_MachineImages Value "MACHINE_IMAGES"
 *    @arg @c kGTLRCompute_Quota_Metric_N2aCpus Value "N2A_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_N2Cpus Value "N2_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_N2dCpus Value "N2D_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_NetworkEndpointGroups Value
 *        "NETWORK_ENDPOINT_GROUPS"
 *    @arg @c kGTLRCompute_Quota_Metric_NetworkFirewallPolicies Value
 *        "NETWORK_FIREWALL_POLICIES"
 *    @arg @c kGTLRCompute_Quota_Metric_Networks Value "NETWORKS"
 *    @arg @c kGTLRCompute_Quota_Metric_NodeGroups Value "NODE_GROUPS"
 *    @arg @c kGTLRCompute_Quota_Metric_NodeTemplates Value "NODE_TEMPLATES"
 *    @arg @c kGTLRCompute_Quota_Metric_NvidiaA10080gbGpus Value
 *        "NVIDIA_A100_80GB_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_NvidiaA100Gpus Value "NVIDIA_A100_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_NvidiaK80Gpus Value "NVIDIA_K80_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_NvidiaP100Gpus Value "NVIDIA_P100_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_NvidiaP100VwsGpus Value
 *        "NVIDIA_P100_VWS_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_NvidiaP4Gpus Value "NVIDIA_P4_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_NvidiaP4VwsGpus Value
 *        "NVIDIA_P4_VWS_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_NvidiaT4Gpus Value "NVIDIA_T4_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_NvidiaT4VwsGpus Value
 *        "NVIDIA_T4_VWS_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_NvidiaV100Gpus Value "NVIDIA_V100_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_PacketMirrorings Value
 *        "PACKET_MIRRORINGS"
 *    @arg @c kGTLRCompute_Quota_Metric_PdExtremeTotalProvisionedIops Value
 *        "PD_EXTREME_TOTAL_PROVISIONED_IOPS"
 *    @arg @c kGTLRCompute_Quota_Metric_PreemptibleCpus Value "PREEMPTIBLE_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_PreemptibleLocalSsdGb Value
 *        "PREEMPTIBLE_LOCAL_SSD_GB"
 *    @arg @c kGTLRCompute_Quota_Metric_PreemptibleNvidiaA10080gbGpus Value
 *        "PREEMPTIBLE_NVIDIA_A100_80GB_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_PreemptibleNvidiaA100Gpus Value
 *        "PREEMPTIBLE_NVIDIA_A100_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_PreemptibleNvidiaK80Gpus Value
 *        "PREEMPTIBLE_NVIDIA_K80_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_PreemptibleNvidiaP100Gpus Value
 *        "PREEMPTIBLE_NVIDIA_P100_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_PreemptibleNvidiaP100VwsGpus Value
 *        "PREEMPTIBLE_NVIDIA_P100_VWS_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_PreemptibleNvidiaP4Gpus Value
 *        "PREEMPTIBLE_NVIDIA_P4_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_PreemptibleNvidiaP4VwsGpus Value
 *        "PREEMPTIBLE_NVIDIA_P4_VWS_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_PreemptibleNvidiaT4Gpus Value
 *        "PREEMPTIBLE_NVIDIA_T4_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_PreemptibleNvidiaT4VwsGpus Value
 *        "PREEMPTIBLE_NVIDIA_T4_VWS_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_PreemptibleNvidiaV100Gpus Value
 *        "PREEMPTIBLE_NVIDIA_V100_GPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_PscIlbConsumerForwardingRulesPerProducerNetwork
 *        Value "PSC_ILB_CONSUMER_FORWARDING_RULES_PER_PRODUCER_NETWORK"
 *    @arg @c kGTLRCompute_Quota_Metric_PscInternalLbForwardingRules Value
 *        "PSC_INTERNAL_LB_FORWARDING_RULES"
 *    @arg @c kGTLRCompute_Quota_Metric_PublicAdvertisedPrefixes Value
 *        "PUBLIC_ADVERTISED_PREFIXES"
 *    @arg @c kGTLRCompute_Quota_Metric_PublicDelegatedPrefixes Value
 *        "PUBLIC_DELEGATED_PREFIXES"
 *    @arg @c kGTLRCompute_Quota_Metric_RegionalAutoscalers Value
 *        "REGIONAL_AUTOSCALERS"
 *    @arg @c kGTLRCompute_Quota_Metric_RegionalInstanceGroupManagers Value
 *        "REGIONAL_INSTANCE_GROUP_MANAGERS"
 *    @arg @c kGTLRCompute_Quota_Metric_Reservations Value "RESERVATIONS"
 *    @arg @c kGTLRCompute_Quota_Metric_ResourcePolicies Value
 *        "RESOURCE_POLICIES"
 *    @arg @c kGTLRCompute_Quota_Metric_Routers Value "ROUTERS"
 *    @arg @c kGTLRCompute_Quota_Metric_Routes Value "ROUTES"
 *    @arg @c kGTLRCompute_Quota_Metric_SecurityPolicies Value
 *        "SECURITY_POLICIES"
 *    @arg @c kGTLRCompute_Quota_Metric_SecurityPoliciesPerRegion Value
 *        "SECURITY_POLICIES_PER_REGION"
 *    @arg @c kGTLRCompute_Quota_Metric_SecurityPolicyCevalRules Value
 *        "SECURITY_POLICY_CEVAL_RULES"
 *    @arg @c kGTLRCompute_Quota_Metric_SecurityPolicyRules Value
 *        "SECURITY_POLICY_RULES"
 *    @arg @c kGTLRCompute_Quota_Metric_SecurityPolicyRulesPerRegion Value
 *        "SECURITY_POLICY_RULES_PER_REGION"
 *    @arg @c kGTLRCompute_Quota_Metric_ServiceAttachments Value
 *        "SERVICE_ATTACHMENTS"
 *    @arg @c kGTLRCompute_Quota_Metric_Snapshots The total number of snapshots
 *        allowed for a single project. (Value: "SNAPSHOTS")
 *    @arg @c kGTLRCompute_Quota_Metric_SsdTotalGb Value "SSD_TOTAL_GB"
 *    @arg @c kGTLRCompute_Quota_Metric_SslCertificates Value "SSL_CERTIFICATES"
 *    @arg @c kGTLRCompute_Quota_Metric_StaticAddresses Value "STATIC_ADDRESSES"
 *    @arg @c kGTLRCompute_Quota_Metric_StaticByoipAddresses Value
 *        "STATIC_BYOIP_ADDRESSES"
 *    @arg @c kGTLRCompute_Quota_Metric_StaticExternalIpv6AddressRanges Value
 *        "STATIC_EXTERNAL_IPV6_ADDRESS_RANGES"
 *    @arg @c kGTLRCompute_Quota_Metric_Subnetworks Value "SUBNETWORKS"
 *    @arg @c kGTLRCompute_Quota_Metric_T2aCpus Value "T2A_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_T2dCpus Value "T2D_CPUS"
 *    @arg @c kGTLRCompute_Quota_Metric_TargetHttpProxies Value
 *        "TARGET_HTTP_PROXIES"
 *    @arg @c kGTLRCompute_Quota_Metric_TargetHttpsProxies Value
 *        "TARGET_HTTPS_PROXIES"
 *    @arg @c kGTLRCompute_Quota_Metric_TargetInstances Value "TARGET_INSTANCES"
 *    @arg @c kGTLRCompute_Quota_Metric_TargetPools Value "TARGET_POOLS"
 *    @arg @c kGTLRCompute_Quota_Metric_TargetSslProxies Value
 *        "TARGET_SSL_PROXIES"
 *    @arg @c kGTLRCompute_Quota_Metric_TargetTcpProxies Value
 *        "TARGET_TCP_PROXIES"
 *    @arg @c kGTLRCompute_Quota_Metric_TargetVpnGateways Value
 *        "TARGET_VPN_GATEWAYS"
 *    @arg @c kGTLRCompute_Quota_Metric_UrlMaps Value "URL_MAPS"
 *    @arg @c kGTLRCompute_Quota_Metric_VpnGateways Value "VPN_GATEWAYS"
 *    @arg @c kGTLRCompute_Quota_Metric_VpnTunnels Value "VPN_TUNNELS"
 *    @arg @c kGTLRCompute_Quota_Metric_XpnServiceProjects Value
 *        "XPN_SERVICE_PROJECTS"
 */
@property(nonatomic, copy, nullable) NSString *metric;

/**
 *  [Output Only] Owning resource. This is the resource on which this quota is
 *  applied.
 */
@property(nonatomic, copy, nullable) NSString *owner;

/**
 *  [Output Only] Current usage of this metric.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *usage;

@end


/**
 *  Additional details for quota exceeded error for resource quota.
 */
@interface GTLRCompute_QuotaExceededInfo : GTLRObject

/** The map holding related quota dimensions. */
@property(nonatomic, strong, nullable) GTLRCompute_QuotaExceededInfo_Dimensions *dimensions;

/**
 *  Current effective quota limit. The limit's unit depends on the quota type or
 *  metric.
 *
 *  Uses NSNumber of doubleValue.
 */
@property(nonatomic, strong, nullable) NSNumber *limit;

/** The name of the quota limit. */
@property(nonatomic, copy, nullable) NSString *limitName;

/** The Compute Engine quota metric name. */
@property(nonatomic, copy, nullable) NSString *metricName;

@end


/**
 *  The map holding related quota dimensions.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_QuotaExceededInfo_Dimensions : GTLRObject
@end


/**
 *  Represents a reference to a resource.
 */
@interface GTLRCompute_Reference : GTLRObject

/**
 *  [Output Only] Type of the resource. Always compute#reference for references.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  A description of the reference type with no implied semantics. Possible
 *  values include: 1. MEMBER_OF
 */
@property(nonatomic, copy, nullable) NSString *referenceType;

/** URL of the resource which refers to the target. */
@property(nonatomic, copy, nullable) NSString *referrer;

/** URL of the resource to which this reference points. */
@property(nonatomic, copy, nullable) NSString *target;

@end


/**
 *  Represents a Region resource. A region is a geographical area where a
 *  resource is located. For more information, read Regions and Zones.
 */
@interface GTLRCompute_Region : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/** [Output Only] The deprecation status associated with this region. */
@property(nonatomic, strong, nullable) GTLRCompute_DeprecationStatus *deprecated;

/**
 *  [Output Only] Textual description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** [Output Only] Type of the resource. Always compute#region for regions. */
@property(nonatomic, copy, nullable) NSString *kind;

/** [Output Only] Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** [Output Only] Quotas assigned to this region. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Quota *> *quotas;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] Status of the region, either UP or DOWN.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Region_Status_Down Value "DOWN"
 *    @arg @c kGTLRCompute_Region_Status_Up Value "UP"
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  [Output Only] Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *supportsPzs;

/**
 *  [Output Only] A list of zones available in this region, in the form of
 *  resource URLs.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *zones;

@end


/**
 *  Contains a list of autoscalers.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_RegionAutoscalerList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Autoscaler resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Autoscaler *> *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_RegionAutoscalerList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_RegionAutoscalerList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_RegionAutoscalerList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RegionAutoscalerList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_RegionAutoscalerList_Warning_Data_Item
 */
@interface GTLRCompute_RegionAutoscalerList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_RegionDisksAddResourcePoliciesRequest
 */
@interface GTLRCompute_RegionDisksAddResourcePoliciesRequest : GTLRObject

/** Resource policies to be added to this disk. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourcePolicies;

@end


/**
 *  GTLRCompute_RegionDisksRemoveResourcePoliciesRequest
 */
@interface GTLRCompute_RegionDisksRemoveResourcePoliciesRequest : GTLRObject

/** Resource policies to be removed from this disk. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *resourcePolicies;

@end


/**
 *  GTLRCompute_RegionDisksResizeRequest
 */
@interface GTLRCompute_RegionDisksResizeRequest : GTLRObject

/**
 *  The new size of the regional persistent disk, which is specified in GB.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *sizeGb;

@end


/**
 *  GTLRCompute_RegionDiskTypeList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_RegionDiskTypeList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of DiskType resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_DiskType *> *items;

/**
 *  [Output Only] Type of resource. Always compute#regionDiskTypeList for region
 *  disk types.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_RegionDiskTypeList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_RegionDiskTypeList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_RegionDiskTypeList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RegionDiskTypeList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_RegionDiskTypeList_Warning_Data_Item
 */
@interface GTLRCompute_RegionDiskTypeList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of InstanceGroup resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_RegionInstanceGroupList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of InstanceGroup resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroup *> *items;

/** The resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_RegionInstanceGroupList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_RegionInstanceGroupList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_RegionInstanceGroupList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RegionInstanceGroupList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_RegionInstanceGroupList_Warning_Data_Item
 */
@interface GTLRCompute_RegionInstanceGroupList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  RegionInstanceGroupManagers.deletePerInstanceConfigs
 */
@interface GTLRCompute_RegionInstanceGroupManagerDeleteInstanceConfigReq : GTLRObject

/**
 *  The list of instance names for which we want to delete per-instance configs
 *  on this managed instance group.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

@end


/**
 *  Contains a list of managed instance groups.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_RegionInstanceGroupManagerList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of InstanceGroupManager resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceGroupManager *> *items;

/**
 *  [Output Only] The resource type, which is always
 *  compute#instanceGroupManagerList for a list of managed instance groups that
 *  exist in th regional scope.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_RegionInstanceGroupManagerList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_RegionInstanceGroupManagerList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagerList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RegionInstanceGroupManagerList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_RegionInstanceGroupManagerList_Warning_Data_Item
 */
@interface GTLRCompute_RegionInstanceGroupManagerList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  RegionInstanceGroupManagers.patchPerInstanceConfigs
 */
@interface GTLRCompute_RegionInstanceGroupManagerPatchInstanceConfigReq : GTLRObject

/**
 *  The list of per-instance configurations to insert or patch on this managed
 *  instance group.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PerInstanceConfig *> *perInstanceConfigs;

@end


/**
 *  GTLRCompute_RegionInstanceGroupManagersAbandonInstancesRequest
 */
@interface GTLRCompute_RegionInstanceGroupManagersAbandonInstancesRequest : GTLRObject

/**
 *  The URLs of one or more instances to abandon. This can be a full URL or a
 *  partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *instances;

@end


/**
 *  RegionInstanceGroupManagers.applyUpdatesToInstances
 */
@interface GTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest : GTLRObject

/**
 *  Flag to update all instances instead of specified list of “instances”. If
 *  the flag is set to true then the instances may not be specified in the
 *  request.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *allInstances;

/**
 *  The list of URLs of one or more instances for which you want to apply
 *  updates. Each URL can be a full URL or a partial URL, such as
 *  zones/[ZONE]/instances/[INSTANCE_NAME].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *instances;

/**
 *  The minimal action that you want to perform on each instance during the
 *  update: - REPLACE: At minimum, delete the instance and create it again. -
 *  RESTART: Stop the instance and start it again. - REFRESH: Do not stop the
 *  instance. - NONE: Do not disrupt the instance at all. By default, the
 *  minimum action is NONE. If your update requires a more disruptive action
 *  than you set with this flag, the necessary action is performed to execute
 *  the update.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MinimalAction_None
 *        Do not perform any action. (Value: "NONE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MinimalAction_Refresh
 *        Updates applied in runtime, instances will not be disrupted. (Value:
 *        "REFRESH")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MinimalAction_Replace
 *        Old instances will be deleted. New instances will be created from the
 *        target template. (Value: "REPLACE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MinimalAction_Restart
 *        Every instance will be restarted. (Value: "RESTART")
 */
@property(nonatomic, copy, nullable) NSString *minimalAction;

/**
 *  The most disruptive action that you want to perform on each instance during
 *  the update: - REPLACE: Delete the instance and create it again. - RESTART:
 *  Stop the instance and start it again. - REFRESH: Do not stop the instance. -
 *  NONE: Do not disrupt the instance at all. By default, the most disruptive
 *  allowed action is REPLACE. If your update requires a more disruptive action
 *  than you set with this flag, the update request will fail.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_None
 *        Do not perform any action. (Value: "NONE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Refresh
 *        Updates applied in runtime, instances will not be disrupted. (Value:
 *        "REFRESH")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Replace
 *        Old instances will be deleted. New instances will be created from the
 *        target template. (Value: "REPLACE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersApplyUpdatesRequest_MostDisruptiveAllowedAction_Restart
 *        Every instance will be restarted. (Value: "RESTART")
 */
@property(nonatomic, copy, nullable) NSString *mostDisruptiveAllowedAction;

@end


/**
 *  RegionInstanceGroupManagers.createInstances
 */
@interface GTLRCompute_RegionInstanceGroupManagersCreateInstancesRequest : GTLRObject

/** [Required] List of specifications of per-instance configs. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PerInstanceConfig *> *instances;

@end


/**
 *  GTLRCompute_RegionInstanceGroupManagersDeleteInstancesRequest
 */
@interface GTLRCompute_RegionInstanceGroupManagersDeleteInstancesRequest : GTLRObject

/**
 *  The URLs of one or more instances to delete. This can be a full URL or a
 *  partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *instances;

/**
 *  Specifies whether the request should proceed despite the inclusion of
 *  instances that are not members of the group or that are already in the
 *  process of being deleted or abandoned. If this field is set to `false` and
 *  such an instance is specified in the request, the operation fails. The
 *  operation always fails if the request contains a malformed instance URL or a
 *  reference to an instance that exists in a zone or region other than the
 *  group's zone or region.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *skipInstancesOnValidationError;

@end


/**
 *  GTLRCompute_RegionInstanceGroupManagersListErrorsResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_RegionInstanceGroupManagersListErrorsResponse : GTLRCollectionObject

/**
 *  [Output Only] The list of errors of the managed instance group.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceManagedByIgmError *> *items;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp : GTLRCollectionObject

/**
 *  [Output Only] The list of PerInstanceConfig.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PerInstanceConfig *> *items;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Data_Item
 */
@interface GTLRCompute_RegionInstanceGroupManagersListInstanceConfigsResp_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_RegionInstanceGroupManagersListInstancesResponse
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "managedInstances" property. If returned as the result of a query,
 *        it should support automatic pagination (when @c shouldFetchNextPages
 *        is enabled).
 */
@interface GTLRCompute_RegionInstanceGroupManagersListInstancesResponse : GTLRCollectionObject

/**
 *  A list of managed instances.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ManagedInstance *> *managedInstances;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

@end


/**
 *  GTLRCompute_RegionInstanceGroupManagersRecreateRequest
 */
@interface GTLRCompute_RegionInstanceGroupManagersRecreateRequest : GTLRObject

/**
 *  The URLs of one or more instances to recreate. This can be a full URL or a
 *  partial URL, such as zones/[ZONE]/instances/[INSTANCE_NAME].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *instances;

@end


/**
 *  GTLRCompute_RegionInstanceGroupManagersSetTargetPoolsRequest
 */
@interface GTLRCompute_RegionInstanceGroupManagersSetTargetPoolsRequest : GTLRObject

/**
 *  Fingerprint of the target pools information, which is a hash of the
 *  contents. This field is used for optimistic locking when you update the
 *  target pool entries. This field is optional.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  The URL of all TargetPool resources to which instances in the instanceGroup
 *  field are added. The target pools automatically apply to all of the
 *  instances in the managed instance group.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *targetPools;

@end


/**
 *  GTLRCompute_RegionInstanceGroupManagersSetTemplateRequest
 */
@interface GTLRCompute_RegionInstanceGroupManagersSetTemplateRequest : GTLRObject

/**
 *  URL of the InstanceTemplate resource from which all new instances will be
 *  created.
 */
@property(nonatomic, copy, nullable) NSString *instanceTemplate;

@end


/**
 *  RegionInstanceGroupManagers.updatePerInstanceConfigs
 */
@interface GTLRCompute_RegionInstanceGroupManagerUpdateInstanceConfigReq : GTLRObject

/**
 *  The list of per-instance configurations to insert or patch on this managed
 *  instance group.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PerInstanceConfig *> *perInstanceConfigs;

@end


/**
 *  GTLRCompute_RegionInstanceGroupsListInstances
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_RegionInstanceGroupsListInstances : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of InstanceWithNamedPorts resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceWithNamedPorts *> *items;

/** The resource type. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_RegionInstanceGroupsListInstances_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_RegionInstanceGroupsListInstances_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstances_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RegionInstanceGroupsListInstances_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_RegionInstanceGroupsListInstances_Warning_Data_Item
 */
@interface GTLRCompute_RegionInstanceGroupsListInstances_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_RegionInstanceGroupsListInstancesRequest
 */
@interface GTLRCompute_RegionInstanceGroupsListInstancesRequest : GTLRObject

/**
 *  Instances in which state should be returned. Valid options are: 'ALL',
 *  'RUNNING'. By default, it lists all instances.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstancesRequest_InstanceState_All
 *        Matches any status of the instances, running, non-running and others.
 *        (Value: "ALL")
 *    @arg @c kGTLRCompute_RegionInstanceGroupsListInstancesRequest_InstanceState_Running
 *        Instance is in RUNNING state if it is running. (Value: "RUNNING")
 */
@property(nonatomic, copy, nullable) NSString *instanceState;

/**
 *  Name of port user is interested in. It is optional. If it is set, only
 *  information about this ports will be returned. If it is not set, all the
 *  named ports will be returned. Always lists all instances.
 */
@property(nonatomic, copy, nullable) NSString *portName;

@end


/**
 *  GTLRCompute_RegionInstanceGroupsSetNamedPortsRequest
 */
@interface GTLRCompute_RegionInstanceGroupsSetNamedPortsRequest : GTLRObject

/**
 *  The fingerprint of the named ports information for this instance group. Use
 *  this optional property to prevent conflicts when multiple users change the
 *  named ports settings concurrently. Obtain the fingerprint with the
 *  instanceGroups.get method. Then, include the fingerprint in your request to
 *  ensure that you do not overwrite changes that were applied from another
 *  concurrent request.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/** The list of named ports to set for this instance group. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NamedPort *> *namedPorts;

@end


/**
 *  Contains a list of region resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_RegionList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Region resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Region *> *items;

/**
 *  [Output Only] Type of resource. Always compute#regionList for lists of
 *  regions.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_RegionList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_RegionList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_DeprecatedResourceUsed A link
 *        to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_InjectedKernelsDeprecated The
 *        operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_NextHopAddressNotAssigned The
 *        route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_NextHopNotRunning The route's
 *        next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_NoResultsOnPage No results
 *        are present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_NotCriticalError Error which
 *        is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_RequiredTosAgreement The user
 *        attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_SchemaValidationIgnored When
 *        a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_RegionList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RegionList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_RegionList_Warning_Data_Item
 */
@interface GTLRCompute_RegionList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponse
 */
@interface GTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponse : GTLRObject

/** Effective firewalls from firewall policy. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy *> *firewallPolicys;

/** Effective firewalls on the network. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Firewall *> *firewalls;

@end


/**
 *  GTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy
 */
@interface GTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy : GTLRObject

/** [Output Only] The display name of the firewall policy. */
@property(nonatomic, copy, nullable) NSString *displayName;

/** [Output Only] The name of the firewall policy. */
@property(nonatomic, copy, nullable) NSString *name;

/** The rules that apply to the network. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_FirewallPolicyRule *> *rules;

/**
 *  [Output Only] The type of the firewall policy. Can be one of HIERARCHY,
 *  NETWORK, NETWORK_REGIONAL.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Hierarchy
 *        Value "HIERARCHY"
 *    @arg @c kGTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Network
 *        Value "NETWORK"
 *    @arg @c kGTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_NetworkRegional
 *        Value "NETWORK_REGIONAL"
 *    @arg @c kGTLRCompute_RegionNetworkFirewallPoliciesGetEffectiveFirewallsResponseEffectiveFirewallPolicy_Type_Unspecified
 *        Value "UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRCompute_RegionSetLabelsRequest
 */
@interface GTLRCompute_RegionSetLabelsRequest : GTLRObject

/**
 *  The fingerprint of the previous set of labels for this resource, used to
 *  detect conflicts. The fingerprint is initially generated by Compute Engine
 *  and changes after every request to modify or update labels. You must always
 *  provide an up-to-date fingerprint hash in order to update or change labels.
 *  Make a get() request to the resource to get the latest fingerprint.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *labelFingerprint;

/** The labels to set for this resource. */
@property(nonatomic, strong, nullable) GTLRCompute_RegionSetLabelsRequest_Labels *labels;

@end


/**
 *  The labels to set for this resource.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_RegionSetLabelsRequest_Labels : GTLRObject
@end


/**
 *  GTLRCompute_RegionSetPolicyRequest
 */
@interface GTLRCompute_RegionSetPolicyRequest : GTLRObject

/**
 *  Flatten Policy to create a backwacd compatible wire-format. Deprecated. Use
 *  'policy' to specify bindings.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Binding *> *bindings;

/**
 *  Flatten Policy to create a backward compatible wire-format. Deprecated. Use
 *  'policy' to specify the etag.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  REQUIRED: The complete policy to be applied to the 'resource'. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is in general a
 *  valid policy but certain services (like Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Policy *policy;

@end


/**
 *  GTLRCompute_RegionTargetHttpsProxiesSetSslCertificatesRequest
 */
@interface GTLRCompute_RegionTargetHttpsProxiesSetSslCertificatesRequest : GTLRObject

/**
 *  New set of SslCertificate resources to associate with this TargetHttpsProxy
 *  resource.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sslCertificates;

@end


/**
 *  GTLRCompute_RegionUrlMapsValidateRequest
 */
@interface GTLRCompute_RegionUrlMapsValidateRequest : GTLRObject

/** Content of the UrlMap to be validated. */
@property(nonatomic, strong, nullable) GTLRCompute_UrlMap *resource;

@end


/**
 *  A policy that specifies how requests intended for the route's backends are
 *  shadowed to a separate mirrored backend service. The load balancer doesn't
 *  wait for responses from the shadow service. Before sending traffic to the
 *  shadow service, the host or authority header is suffixed with -shadow.
 */
@interface GTLRCompute_RequestMirrorPolicy : GTLRObject

/**
 *  The full or partial URL to the BackendService resource being mirrored to.
 *  The backend service configured for a mirroring policy must reference
 *  backends that are of the same type as the original backend service matched
 *  in the URL map. Serverless NEG backends are not currently supported as a
 *  mirrored backend service.
 */
@property(nonatomic, copy, nullable) NSString *backendService;

@end


/**
 *  Represents a reservation resource. A reservation ensures that capacity is
 *  held in a specific zone even if the reserved VMs are not running. For more
 *  information, read Reserving zonal resources.
 */
@interface GTLRCompute_Reservation : GTLRObject

/**
 *  [Output Only] Full or partial URL to a parent commitment. This field
 *  displays for reservations that are tied to a commitment.
 */
@property(nonatomic, copy, nullable) NSString *commitment;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#reservations for
 *  reservations.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The name of the resource, provided by the client when initially creating the
 *  resource. The resource name must be 1-63 characters long, and comply with
 *  RFC1035. Specifically, the name must be 1-63 characters long and match the
 *  regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
 *  character must be a lowercase letter, and all following characters must be a
 *  dash, lowercase letter, or digit, except the last character, which cannot be
 *  a dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/** [Output Only] Server-defined fully-qualified URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  Specify share-settings to create a shared reservation. This property is
 *  optional. For more information about the syntax and options for this field
 *  and its subfields, see the guide for creating a shared reservation.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ShareSettings *shareSettings;

/** Reservation for instances with specific machine shapes. */
@property(nonatomic, strong, nullable) GTLRCompute_AllocationSpecificSKUReservation *specificReservation;

/**
 *  Indicates whether the reservation can be consumed by VMs with affinity for
 *  "any" reservation. If the field is set, then only VMs that target the
 *  reservation by name can consume from this reservation.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *specificReservationRequired;

/**
 *  [Output Only] The status of the reservation.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Reservation_Status_Creating Resources are being
 *        allocated for the reservation. (Value: "CREATING")
 *    @arg @c kGTLRCompute_Reservation_Status_Deleting Reservation is currently
 *        being deleted. (Value: "DELETING")
 *    @arg @c kGTLRCompute_Reservation_Status_Invalid Value "INVALID"
 *    @arg @c kGTLRCompute_Reservation_Status_Ready Reservation has allocated
 *        all its resources. (Value: "READY")
 *    @arg @c kGTLRCompute_Reservation_Status_Updating Reservation is currently
 *        being resized. (Value: "UPDATING")
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  Zone in which the reservation resides. A zone must be provided if the
 *  reservation is created within a commitment.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  Specifies the reservations that this instance can consume from.
 */
@interface GTLRCompute_ReservationAffinity : GTLRObject

/**
 *  Specifies the type of reservation from which this instance can consume
 *  resources: ANY_RESERVATION (default), SPECIFIC_RESERVATION, or
 *  NO_RESERVATION. See Consuming reserved instances for examples.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ReservationAffinity_ConsumeReservationType_AnyReservation
 *        Consume any allocation available. (Value: "ANY_RESERVATION")
 *    @arg @c kGTLRCompute_ReservationAffinity_ConsumeReservationType_NoReservation
 *        Do not consume from any allocated capacity. (Value: "NO_RESERVATION")
 *    @arg @c kGTLRCompute_ReservationAffinity_ConsumeReservationType_SpecificReservation
 *        Must consume from a specific reservation. Must specify key value
 *        fields for specifying the reservations. (Value:
 *        "SPECIFIC_RESERVATION")
 *    @arg @c kGTLRCompute_ReservationAffinity_ConsumeReservationType_Unspecified
 *        Value "UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *consumeReservationType;

/**
 *  Corresponds to the label key of a reservation resource. To target a
 *  SPECIFIC_RESERVATION by name, specify googleapis.com/reservation-name as the
 *  key and specify the name of your reservation as its value.
 */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  Corresponds to the label values of a reservation resource. This can be
 *  either a name to a reservation in the same project or
 *  "projects/different-project/reservations/some-reservation-name" to target a
 *  shared reservation in the same zone but in a different project.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end


/**
 *  Contains a list of reservations.
 */
@interface GTLRCompute_ReservationAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of Allocation resources. */
@property(nonatomic, strong, nullable) GTLRCompute_ReservationAggregatedList_Items *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_ReservationAggregatedList_Warning *warning;

@end


/**
 *  A list of Allocation resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_ReservationsScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_ReservationAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_ReservationAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ReservationAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ReservationAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ReservationAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_ReservationAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_ReservationList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_ReservationList : GTLRCollectionObject

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  [Output Only] A list of Allocation resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Reservation *> *items;

/**
 *  [Output Only] Type of resource.Always compute#reservationsList for listsof
 *  reservations
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_ReservationList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_ReservationList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_PartialSuccess Success
 *        is reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_ResourceNotDeleted One
 *        or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ReservationList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ReservationList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ReservationList_Warning_Data_Item
 */
@interface GTLRCompute_ReservationList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_ReservationsResizeRequest
 */
@interface GTLRCompute_ReservationsResizeRequest : GTLRObject

/**
 *  Number of allocated resources can be resized with minimum = 1 and maximum =
 *  1000.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *specificSkuCount;

@end


/**
 *  GTLRCompute_ReservationsScopedList
 */
@interface GTLRCompute_ReservationsScopedList : GTLRObject

/** A list of reservations contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Reservation *> *reservations;

/**
 *  Informational warning which replaces the list of reservations when the list
 *  is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ReservationsScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of reservations when the list
 *  is empty.
 */
@interface GTLRCompute_ReservationsScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ReservationsScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ReservationsScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ReservationsScopedList_Warning_Data_Item
 */
@interface GTLRCompute_ReservationsScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Commitment for a particular resource (a Commitment is composed of one or
 *  more of these).
 */
@interface GTLRCompute_ResourceCommitment : GTLRObject

/**
 *  Name of the accelerator type resource. Applicable only when the type is
 *  ACCELERATOR.
 */
@property(nonatomic, copy, nullable) NSString *acceleratorType;

/**
 *  The amount of the resource purchased (in a type-dependent unit, such as
 *  bytes). For vCPUs, this can just be an integer. For memory, this must be
 *  provided in MB. Memory must be a multiple of 256 MB, with up to 6.5GB of
 *  memory per every vCPU.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *amount;

/**
 *  Type of resource for which this commitment applies. Possible values are VCPU
 *  and MEMORY
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ResourceCommitment_Type_Accelerator Value
 *        "ACCELERATOR"
 *    @arg @c kGTLRCompute_ResourceCommitment_Type_LocalSsd Value "LOCAL_SSD"
 *    @arg @c kGTLRCompute_ResourceCommitment_Type_Memory Value "MEMORY"
 *    @arg @c kGTLRCompute_ResourceCommitment_Type_Unspecified Value
 *        "UNSPECIFIED"
 *    @arg @c kGTLRCompute_ResourceCommitment_Type_Vcpu Value "VCPU"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRCompute_ResourceGroupReference
 */
@interface GTLRCompute_ResourceGroupReference : GTLRObject

/**
 *  A URI referencing one of the instance groups or network endpoint groups
 *  listed in the backend service.
 */
@property(nonatomic, copy, nullable) NSString *group;

@end


/**
 *  GTLRCompute_ResourcePoliciesScopedList
 */
@interface GTLRCompute_ResourcePoliciesScopedList : GTLRObject

/** A list of resourcePolicies contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ResourcePolicy *> *resourcePolicies;

/**
 *  Informational warning which replaces the list of resourcePolicies when the
 *  list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePoliciesScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of resourcePolicies when the
 *  list is empty.
 */
@interface GTLRCompute_ResourcePoliciesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ResourcePoliciesScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ResourcePoliciesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ResourcePoliciesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_ResourcePoliciesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a Resource Policy resource. You can use resource policies to
 *  schedule actions for some Compute Engine resources. For example, you can use
 *  them to schedule persistent disk snapshots.
 */
@interface GTLRCompute_ResourcePolicy : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  descriptionProperty
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Resource policy for instances for placement configuration. */
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicyGroupPlacementPolicy *groupPlacementPolicy;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** Resource policy for scheduling instance operations. */
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicyInstanceSchedulePolicy *instanceSchedulePolicy;

/**
 *  [Output Only] Type of the resource. Always compute#resource_policies for
 *  resource policies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The name of the resource, provided by the client when initially creating the
 *  resource. The resource name must be 1-63 characters long, and comply with
 *  RFC1035. Specifically, the name must be 1-63 characters long and match the
 *  regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
 *  character must be a lowercase letter, and all following characters must be a
 *  dash, lowercase letter, or digit, except the last character, which cannot be
 *  a dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] The system status of the resource policy. */
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicyResourceStatus *resourceStatus;

/** [Output Only] Server-defined fully-qualified URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** Resource policy for persistent disks for creating snapshots. */
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicySnapshotSchedulePolicy *snapshotSchedulePolicy;

/**
 *  [Output Only] The status of resource policy creation.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ResourcePolicy_Status_Creating Resource policy is
 *        being created. (Value: "CREATING")
 *    @arg @c kGTLRCompute_ResourcePolicy_Status_Deleting Resource policy is
 *        being deleted. (Value: "DELETING")
 *    @arg @c kGTLRCompute_ResourcePolicy_Status_Expired Resource policy is
 *        expired and will not run again. (Value: "EXPIRED")
 *    @arg @c kGTLRCompute_ResourcePolicy_Status_Invalid Value "INVALID"
 *    @arg @c kGTLRCompute_ResourcePolicy_Status_Ready Resource policy is ready
 *        to be used. (Value: "READY")
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  Contains a list of resourcePolicies.
 */
@interface GTLRCompute_ResourcePolicyAggregatedList : GTLRObject

@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of ResourcePolicy resources. */
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicyAggregatedList_Items *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicyAggregatedList_Warning *warning;

@end


/**
 *  A list of ResourcePolicy resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_ResourcePoliciesScopedList. Use @c -additionalJSONKeys and
 *        @c -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_ResourcePolicyAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_ResourcePolicyAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ResourcePolicyAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ResourcePolicyAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ResourcePolicyAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_ResourcePolicyAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Time window specified for daily operations.
 */
@interface GTLRCompute_ResourcePolicyDailyCycle : GTLRObject

/**
 *  Defines a schedule with units measured in days. The value determines how
 *  many days pass between the start of each cycle.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *daysInCycle;

/**
 *  [Output only] A predetermined duration for the window, automatically chosen
 *  to be the smallest possible in the given scenario.
 */
@property(nonatomic, copy, nullable) NSString *duration;

/**
 *  Start time of the window. This must be in UTC format that resolves to one of
 *  00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and
 *  08:00 are valid.
 */
@property(nonatomic, copy, nullable) NSString *startTime;

@end


/**
 *  A GroupPlacementPolicy specifies resource placement configuration. It
 *  specifies the failure bucket separation as well as network locality
 */
@interface GTLRCompute_ResourcePolicyGroupPlacementPolicy : GTLRObject

/**
 *  The number of availability domains to spread instances across. If two
 *  instances are in different availability domain, they are not in the same low
 *  latency network.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *availabilityDomainCount;

/**
 *  Specifies network collocation
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ResourcePolicyGroupPlacementPolicy_Collocation_Collocated
 *        Value "COLLOCATED"
 *    @arg @c kGTLRCompute_ResourcePolicyGroupPlacementPolicy_Collocation_UnspecifiedCollocation
 *        Value "UNSPECIFIED_COLLOCATION"
 */
@property(nonatomic, copy, nullable) NSString *collocation;

/**
 *  Number of VMs in this placement group. Google does not recommend that you
 *  use this field unless you use a compact policy and you want your policy to
 *  work only if it contains this exact number of VMs.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *vmCount;

@end


/**
 *  Time window specified for hourly operations.
 */
@interface GTLRCompute_ResourcePolicyHourlyCycle : GTLRObject

/**
 *  [Output only] Duration of the time window, automatically chosen to be
 *  smallest possible in the given scenario.
 */
@property(nonatomic, copy, nullable) NSString *duration;

/**
 *  Defines a schedule with units measured in hours. The value determines how
 *  many hours pass between the start of each cycle.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *hoursInCycle;

/**
 *  Time within the window to start the operations. It must be in format
 *  "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
 */
@property(nonatomic, copy, nullable) NSString *startTime;

@end


/**
 *  An InstanceSchedulePolicy specifies when and how frequent certain operations
 *  are performed on the instance.
 */
@interface GTLRCompute_ResourcePolicyInstanceSchedulePolicy : GTLRObject

/**
 *  The expiration time of the schedule. The timestamp is an RFC3339 string.
 */
@property(nonatomic, copy, nullable) NSString *expirationTime;

/** The start time of the schedule. The timestamp is an RFC3339 string. */
@property(nonatomic, copy, nullable) NSString *startTime;

/**
 *  Specifies the time zone to be used in interpreting Schedule.schedule. The
 *  value of this field must be a time zone name from the tz database:
 *  http://en.wikipedia.org/wiki/Tz_database.
 */
@property(nonatomic, copy, nullable) NSString *timeZone;

/** Specifies the schedule for starting instances. */
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicyInstanceSchedulePolicySchedule *vmStartSchedule;

/** Specifies the schedule for stopping instances. */
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicyInstanceSchedulePolicySchedule *vmStopSchedule;

@end


/**
 *  Schedule for an instance operation.
 */
@interface GTLRCompute_ResourcePolicyInstanceSchedulePolicySchedule : GTLRObject

/** Specifies the frequency for the operation, using the unix-cron format. */
@property(nonatomic, copy, nullable) NSString *schedule;

@end


/**
 *  GTLRCompute_ResourcePolicyList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_ResourcePolicyList : GTLRCollectionObject

@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  [Output Only] A list of ResourcePolicy resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ResourcePolicy *> *items;

/**
 *  [Output Only] Type of resource.Always compute#resourcePoliciesList for
 *  listsof resourcePolicies
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicyList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_ResourcePolicyList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ResourcePolicyList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ResourcePolicyList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ResourcePolicyList_Warning_Data_Item
 */
@interface GTLRCompute_ResourcePolicyList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains output only fields. Use this sub-message for all output fields set
 *  on ResourcePolicy. The internal structure of this "status" field should
 *  mimic the structure of ResourcePolicy proto specification.
 */
@interface GTLRCompute_ResourcePolicyResourceStatus : GTLRObject

/**
 *  [Output Only] Specifies a set of output values reffering to the
 *  instance_schedule_policy system status. This field should have the same name
 *  as corresponding policy field.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicyResourceStatusInstanceSchedulePolicyStatus *instanceSchedulePolicy;

@end


/**
 *  GTLRCompute_ResourcePolicyResourceStatusInstanceSchedulePolicyStatus
 */
@interface GTLRCompute_ResourcePolicyResourceStatusInstanceSchedulePolicyStatus : GTLRObject

/**
 *  [Output Only] The last time the schedule successfully ran. The timestamp is
 *  an RFC3339 string.
 */
@property(nonatomic, copy, nullable) NSString *lastRunStartTime;

/**
 *  [Output Only] The next time the schedule is planned to run. The actual time
 *  might be slightly different. The timestamp is an RFC3339 string.
 */
@property(nonatomic, copy, nullable) NSString *nextRunStartTime;

@end


/**
 *  A snapshot schedule policy specifies when and how frequently snapshots are
 *  to be created for the target disk. Also specifies how many and how long
 *  these scheduled snapshots should be retained.
 */
@interface GTLRCompute_ResourcePolicySnapshotSchedulePolicy : GTLRObject

/** Retention policy applied to snapshots created by this resource policy. */
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy *retentionPolicy;

/**
 *  A Vm Maintenance Policy specifies what kind of infrastructure maintenance we
 *  are allowed to perform on this VM and when. Schedule that is applied to
 *  disks covered by this policy.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicySnapshotSchedulePolicySchedule *schedule;

/**
 *  Properties with which snapshots are created such as labels, encryption keys.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicySnapshotSchedulePolicySnapshotProperties *snapshotProperties;

@end


/**
 *  Policy for retention of scheduled snapshots.
 */
@interface GTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy : GTLRObject

/**
 *  Maximum age of the snapshot that is allowed to be kept.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxRetentionDays;

/**
 *  Specifies the behavior to apply to scheduled snapshots when the source disk
 *  is deleted.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy_OnSourceDiskDelete_ApplyRetentionPolicy
 *        Value "APPLY_RETENTION_POLICY"
 *    @arg @c kGTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy_OnSourceDiskDelete_KeepAutoSnapshots
 *        Value "KEEP_AUTO_SNAPSHOTS"
 *    @arg @c kGTLRCompute_ResourcePolicySnapshotSchedulePolicyRetentionPolicy_OnSourceDiskDelete_UnspecifiedOnSourceDiskDelete
 *        Value "UNSPECIFIED_ON_SOURCE_DISK_DELETE"
 */
@property(nonatomic, copy, nullable) NSString *onSourceDiskDelete;

@end


/**
 *  A schedule for disks where the schedueled operations are performed.
 */
@interface GTLRCompute_ResourcePolicySnapshotSchedulePolicySchedule : GTLRObject

@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicyDailyCycle *dailySchedule;
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicyHourlyCycle *hourlySchedule;
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicyWeeklyCycle *weeklySchedule;

@end


/**
 *  Specified snapshot properties for scheduled snapshots created by this
 *  policy.
 */
@interface GTLRCompute_ResourcePolicySnapshotSchedulePolicySnapshotProperties : GTLRObject

/** Chain name that the snapshot is created in. */
@property(nonatomic, copy, nullable) NSString *chainName;

/**
 *  Indication to perform a 'guest aware' snapshot.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *guestFlush;

/**
 *  Labels to apply to scheduled snapshots. These can be later modified by the
 *  setLabels method. Label values may be empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ResourcePolicySnapshotSchedulePolicySnapshotProperties_Labels *labels;

/**
 *  Cloud Storage bucket storage location of the auto snapshot (regional or
 *  multi-regional).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *storageLocations;

@end


/**
 *  Labels to apply to scheduled snapshots. These can be later modified by the
 *  setLabels method. Label values may be empty.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_ResourcePolicySnapshotSchedulePolicySnapshotProperties_Labels : GTLRObject
@end


/**
 *  Time window specified for weekly operations.
 */
@interface GTLRCompute_ResourcePolicyWeeklyCycle : GTLRObject

/** Up to 7 intervals/windows, one for each day of the week. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek *> *dayOfWeeks;

@end


/**
 *  GTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek
 */
@interface GTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek : GTLRObject

/**
 *  Defines a schedule that runs on specific days of the week. Specify one or
 *  more days. The following options are available: MONDAY, TUESDAY, WEDNESDAY,
 *  THURSDAY, FRIDAY, SATURDAY, SUNDAY.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Friday Value
 *        "FRIDAY"
 *    @arg @c kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Invalid Value
 *        "INVALID"
 *    @arg @c kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Monday Value
 *        "MONDAY"
 *    @arg @c kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Saturday Value
 *        "SATURDAY"
 *    @arg @c kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Sunday Value
 *        "SUNDAY"
 *    @arg @c kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Thursday Value
 *        "THURSDAY"
 *    @arg @c kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Tuesday Value
 *        "TUESDAY"
 *    @arg @c kGTLRCompute_ResourcePolicyWeeklyCycleDayOfWeek_Day_Wednesday
 *        Value "WEDNESDAY"
 */
@property(nonatomic, copy, nullable) NSString *day;

/**
 *  [Output only] Duration of the time window, automatically chosen to be
 *  smallest possible in the given scenario.
 */
@property(nonatomic, copy, nullable) NSString *duration;

/**
 *  Time within the window to start the operations. It must be in format
 *  "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
 */
@property(nonatomic, copy, nullable) NSString *startTime;

@end


/**
 *  Contains output only fields. Use this sub-message for actual values set on
 *  Instance attributes as compared to the value requested by the user (intent)
 *  in their instance CRUD calls.
 */
@interface GTLRCompute_ResourceStatus : GTLRObject

/** [Output Only] An opaque ID of the host on which the VM is running. */
@property(nonatomic, copy, nullable) NSString *physicalHost;

@end


/**
 *  Represents a Route resource. A route defines a path from VM instances in the
 *  VPC network to a specific destination. This destination can be inside or
 *  outside the VPC network. For more information, read the Routes overview.
 */
@interface GTLRCompute_Route : GTLRObject

/** [Output Only] AS path. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RouteAsPath *> *asPaths;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this field when you create
 *  the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The destination range of outgoing packets that this route applies to. Both
 *  IPv4 and IPv6 are supported.
 */
@property(nonatomic, copy, nullable) NSString *destRange;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of this resource. Always compute#routes for Route
 *  resources.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a
 *  lowercase letter, and all following characters (except for the last
 *  character) must be a dash, lowercase letter, or digit. The last character
 *  must be a lowercase letter or digit.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** Fully-qualified URL of the network that this route applies to. */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  The URL to a gateway that should handle matching packets. You can only
 *  specify the internet gateway using a full or partial valid URL: projects/
 *  project/global/gateways/default-internet-gateway
 */
@property(nonatomic, copy, nullable) NSString *nextHopGateway;

/**
 *  The URL to a forwarding rule of type loadBalancingScheme=INTERNAL that
 *  should handle matching packets or the IP address of the forwarding Rule. For
 *  example, the following are all valid URLs: - 10.128.0.56 -
 *  https://www.googleapis.com/compute/v1/projects/project/regions/region
 *  /forwardingRules/forwardingRule -
 *  regions/region/forwardingRules/forwardingRule
 */
@property(nonatomic, copy, nullable) NSString *nextHopIlb;

/**
 *  The URL to an instance that should handle matching packets. You can specify
 *  this as a full or partial URL. For example:
 *  https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/
 */
@property(nonatomic, copy, nullable) NSString *nextHopInstance;

/**
 *  The network IP address of an instance that should handle matching packets.
 *  Only IPv4 is supported.
 */
@property(nonatomic, copy, nullable) NSString *nextHopIp;

/** The URL of the local network if it should handle matching packets. */
@property(nonatomic, copy, nullable) NSString *nextHopNetwork;

/**
 *  [Output Only] The network peering name that should handle matching packets,
 *  which should conform to RFC1035.
 */
@property(nonatomic, copy, nullable) NSString *nextHopPeering;

/** The URL to a VpnTunnel that should handle matching packets. */
@property(nonatomic, copy, nullable) NSString *nextHopVpnTunnel;

/**
 *  The priority of this route. Priority is used to break ties in cases where
 *  there is more than one matching route of equal prefix length. In cases where
 *  multiple routes have equal prefix length, the one with the lowest-numbered
 *  priority value wins. The default value is `1000`. The priority value must be
 *  from `0` to `65535`, inclusive.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priority;

/**
 *  [Output only] The status of the route.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Route_RouteStatus_Active This route is processed and
 *        active. (Value: "ACTIVE")
 *    @arg @c kGTLRCompute_Route_RouteStatus_Dropped The route is dropped due to
 *        the VPC exceeding the dynamic route limit. For dynamic route limit,
 *        please refer to the Learned route example (Value: "DROPPED")
 *    @arg @c kGTLRCompute_Route_RouteStatus_Inactive This route is processed
 *        but inactive due to failure from the backend. The backend may have
 *        rejected the route (Value: "INACTIVE")
 *    @arg @c kGTLRCompute_Route_RouteStatus_Pending This route is being
 *        processed internally. The status will change once processed. (Value:
 *        "PENDING")
 */
@property(nonatomic, copy, nullable) NSString *routeStatus;

/**
 *  [Output Only] The type of this route, which can be one of the following
 *  values: - 'TRANSIT' for a transit route that this router learned from
 *  another Cloud Router and will readvertise to one of its BGP peers - 'SUBNET'
 *  for a route from a subnet of the VPC - 'BGP' for a route learned from a BGP
 *  peer of this router - 'STATIC' for a static route
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Route_RouteType_Bgp Value "BGP"
 *    @arg @c kGTLRCompute_Route_RouteType_Static Value "STATIC"
 *    @arg @c kGTLRCompute_Route_RouteType_Subnet Value "SUBNET"
 *    @arg @c kGTLRCompute_Route_RouteType_Transit Value "TRANSIT"
 */
@property(nonatomic, copy, nullable) NSString *routeType;

/** [Output Only] Server-defined fully-qualified URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** A list of instance tags to which this route applies. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tags;

/**
 *  [Output Only] If potential misconfigurations are detected for this route,
 *  this field will be populated with warning messages.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Route_Warnings_Item *> *warnings;

@end


/**
 *  GTLRCompute_Route_Warnings_Item
 */
@interface GTLRCompute_Route_Warnings_Item : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_NoResultsOnPage No results
 *        are present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_NotCriticalError Error which
 *        is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_SchemaValidationIgnored When
 *        a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_Route_Warnings_Item_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Route_Warnings_Item_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_Route_Warnings_Item_Data_Item
 */
@interface GTLRCompute_Route_Warnings_Item_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_RouteAsPath
 */
@interface GTLRCompute_RouteAsPath : GTLRObject

/**
 *  [Output Only] The AS numbers of the AS Path.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *asLists;

/**
 *  [Output Only] The type of the AS Path, which can be one of the following
 *  values: - 'AS_SET': unordered set of autonomous systems that the route in
 *  has traversed - 'AS_SEQUENCE': ordered set of autonomous systems that the
 *  route has traversed - 'AS_CONFED_SEQUENCE': ordered set of Member Autonomous
 *  Systems in the local confederation that the route has traversed -
 *  'AS_CONFED_SET': unordered set of Member Autonomous Systems in the local
 *  confederation that the route has traversed
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RouteAsPath_PathSegmentType_AsConfedSequence Value
 *        "AS_CONFED_SEQUENCE"
 *    @arg @c kGTLRCompute_RouteAsPath_PathSegmentType_AsConfedSet Value
 *        "AS_CONFED_SET"
 *    @arg @c kGTLRCompute_RouteAsPath_PathSegmentType_AsSequence Value
 *        "AS_SEQUENCE"
 *    @arg @c kGTLRCompute_RouteAsPath_PathSegmentType_AsSet Value "AS_SET"
 */
@property(nonatomic, copy, nullable) NSString *pathSegmentType;

@end


/**
 *  Contains a list of Route resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_RouteList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Route resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Route *> *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_RouteList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_RouteList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_DeprecatedResourceUsed A link
 *        to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_InjectedKernelsDeprecated The
 *        operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_NextHopAddressNotAssigned The
 *        route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_NextHopNotRunning The route's
 *        next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_NoResultsOnPage No results are
 *        present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_NotCriticalError Error which
 *        is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_RequiredTosAgreement The user
 *        attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_ResourceNotDeleted One or more
 *        of the resources set to auto-delete could not be deleted because they
 *        were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_SchemaValidationIgnored When a
 *        resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_RouteList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RouteList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_RouteList_Warning_Data_Item
 */
@interface GTLRCompute_RouteList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a Cloud Router resource. For more information about Cloud Router,
 *  read the Cloud Router overview.
 */
@interface GTLRCompute_Router : GTLRObject

/** BGP information specific to this router. */
@property(nonatomic, strong, nullable) GTLRCompute_RouterBgp *bgp;

/**
 *  BGP information that must be configured into the routing stack to establish
 *  BGP peering. This information must specify the peer ASN and either the
 *  interface name, IP address, or peer IP address. Please refer to RFC4273.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RouterBgpPeer *> *bgpPeers;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Indicates if a router is dedicated for use with encrypted VLAN attachments
 *  (interconnectAttachments).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *encryptedInterconnectRouter;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  Router interfaces. Each interface requires either one linked resource, (for
 *  example, linkedVpnTunnel), or IP address and IP address range (for example,
 *  ipRange), or both.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RouterInterface *> *interfaces;

/** [Output Only] Type of resource. Always compute#router for routers. */
@property(nonatomic, copy, nullable) NSString *kind;

/** Keys used for MD5 authentication. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RouterMd5AuthenticationKey *> *md5AuthenticationKeys;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** A list of NAT services created in this router. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RouterNat *> *nats;

/** URI of the network to which this router belongs. */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  [Output Only] URI of the region where the router resides. You must specify
 *  this field as part of the HTTP request URL. It is not settable as a field in
 *  the request body.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

@end


/**
 *  Description-tagged IP ranges for the router to advertise.
 */
@interface GTLRCompute_RouterAdvertisedIpRange : GTLRObject

/**
 *  User-specified description for the IP range.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** The IP range to advertise. The value must be a CIDR-formatted string. */
@property(nonatomic, copy, nullable) NSString *range;

@end


/**
 *  Contains a list of routers.
 */
@interface GTLRCompute_RouterAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of Router resources. */
@property(nonatomic, strong, nullable) GTLRCompute_RouterAggregatedList_Items *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_RouterAggregatedList_Warning *warning;

@end


/**
 *  A list of Router resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_RoutersScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_RouterAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_RouterAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_RouterAggregatedList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RouterAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_RouterAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_RouterAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_RouterBgp
 */
@interface GTLRCompute_RouterBgp : GTLRObject

/**
 *  User-specified list of prefix groups to advertise in custom mode. This field
 *  can only be populated if advertise_mode is CUSTOM and is advertised to all
 *  peers of the router. These groups will be advertised in addition to any
 *  specified prefixes. Leave this field blank to advertise no custom groups.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *advertisedGroups;

/**
 *  User-specified list of individual IP ranges to advertise in custom mode.
 *  This field can only be populated if advertise_mode is CUSTOM and is
 *  advertised to all peers of the router. These IP ranges will be advertised in
 *  addition to any specified groups. Leave this field blank to advertise no
 *  custom IP ranges.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RouterAdvertisedIpRange *> *advertisedIpRanges;

/**
 *  User-specified flag to indicate which mode to use for advertisement. The
 *  options are DEFAULT or CUSTOM.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RouterBgp_AdvertiseMode_Custom Value "CUSTOM"
 *    @arg @c kGTLRCompute_RouterBgp_AdvertiseMode_Default Value "DEFAULT"
 */
@property(nonatomic, copy, nullable) NSString *advertiseMode;

/**
 *  Local BGP Autonomous System Number (ASN). Must be an RFC6996 private ASN,
 *  either 16-bit or 32-bit. The value will be fixed for this router resource.
 *  All VPN tunnels that link to this router will have the same local ASN.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *asn;

/**
 *  The interval in seconds between BGP keepalive messages that are sent to the
 *  peer. Hold time is three times the interval at which keepalive messages are
 *  sent, and the hold time is the maximum number of seconds allowed to elapse
 *  between successive keepalive messages that BGP receives from a peer. BGP
 *  will use the smaller of either the local hold time value or the peer's hold
 *  time value as the hold time for the BGP connection between the two peers. If
 *  set, this value must be between 20 and 60. The default is 20.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *keepaliveInterval;

@end


/**
 *  GTLRCompute_RouterBgpPeer
 */
@interface GTLRCompute_RouterBgpPeer : GTLRObject

/**
 *  User-specified list of prefix groups to advertise in custom mode, which can
 *  take one of the following options: - ALL_SUBNETS: Advertises all available
 *  subnets, including peer VPC subnets. - ALL_VPC_SUBNETS: Advertises the
 *  router's own VPC subnets. Note that this field can only be populated if
 *  advertise_mode is CUSTOM and overrides the list defined for the router (in
 *  the "bgp" message). These groups are advertised in addition to any specified
 *  prefixes. Leave this field blank to advertise no custom groups.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *advertisedGroups;

/**
 *  User-specified list of individual IP ranges to advertise in custom mode.
 *  This field can only be populated if advertise_mode is CUSTOM and overrides
 *  the list defined for the router (in the "bgp" message). These IP ranges are
 *  advertised in addition to any specified groups. Leave this field blank to
 *  advertise no custom IP ranges.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RouterAdvertisedIpRange *> *advertisedIpRanges;

/**
 *  The priority of routes advertised to this BGP peer. Where there is more than
 *  one matching route of maximum length, the routes with the lowest priority
 *  value win.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *advertisedRoutePriority;

/**
 *  User-specified flag to indicate which mode to use for advertisement.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RouterBgpPeer_AdvertiseMode_Custom Value "CUSTOM"
 *    @arg @c kGTLRCompute_RouterBgpPeer_AdvertiseMode_Default Value "DEFAULT"
 */
@property(nonatomic, copy, nullable) NSString *advertiseMode;

/** BFD configuration for the BGP peering. */
@property(nonatomic, strong, nullable) GTLRCompute_RouterBgpPeerBfd *bfd;

/**
 *  The status of the BGP peer connection. If set to FALSE, any active session
 *  with the peer is terminated and all associated routing information is
 *  removed. If set to TRUE, the peer connection can be established with routing
 *  information. The default is TRUE.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RouterBgpPeer_Enable_False Value "FALSE"
 *    @arg @c kGTLRCompute_RouterBgpPeer_Enable_True Value "TRUE"
 */
@property(nonatomic, copy, nullable) NSString *enable;

/**
 *  Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by
 *  default.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableIpv6;

/** Name of the interface the BGP peer is associated with. */
@property(nonatomic, copy, nullable) NSString *interfaceName;

/**
 *  IP address of the interface inside Google Cloud Platform. Only IPv4 is
 *  supported.
 */
@property(nonatomic, copy, nullable) NSString *ipAddress;

/** IPv6 address of the interface inside Google Cloud Platform. */
@property(nonatomic, copy, nullable) NSString *ipv6NexthopAddress;

/**
 *  [Output Only] The resource that configures and manages this BGP peer. -
 *  MANAGED_BY_USER is the default value and can be managed by you or other
 *  users - MANAGED_BY_ATTACHMENT is a BGP peer that is configured and managed
 *  by Cloud Interconnect, specifically by an InterconnectAttachment of type
 *  PARTNER. Google automatically creates, updates, and deletes this type of BGP
 *  peer when the PARTNER InterconnectAttachment is created, updated, or
 *  deleted.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RouterBgpPeer_ManagementType_ManagedByAttachment The
 *        BGP peer is automatically created for PARTNER type
 *        InterconnectAttachment; Google will automatically create/delete this
 *        BGP peer when the PARTNER InterconnectAttachment is created/deleted,
 *        and Google will update the ipAddress and peerIpAddress when the
 *        PARTNER InterconnectAttachment is provisioned. This type of BGP peer
 *        cannot be created or deleted, but can be modified for all fields
 *        except for name, ipAddress and peerIpAddress. (Value:
 *        "MANAGED_BY_ATTACHMENT")
 *    @arg @c kGTLRCompute_RouterBgpPeer_ManagementType_ManagedByUser Default
 *        value, the BGP peer is manually created and managed by user. (Value:
 *        "MANAGED_BY_USER")
 */
@property(nonatomic, copy, nullable) NSString *managementType;

/**
 *  Present if MD5 authentication is enabled for the peering. Must be the name
 *  of one of the entries in the Router.md5_authentication_keys. The field must
 *  comply with RFC1035.
 */
@property(nonatomic, copy, nullable) NSString *md5AuthenticationKeyName;

/**
 *  Name of this BGP peer. The name must be 1-63 characters long, and comply
 *  with RFC1035. Specifically, the name must be 1-63 characters long and match
 *  the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
 *  character must be a lowercase letter, and all following characters must be a
 *  dash, lowercase letter, or digit, except the last character, which cannot be
 *  a dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Peer BGP Autonomous System Number (ASN). Each BGP interface may use a
 *  different value.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *peerAsn;

/**
 *  IP address of the BGP interface outside Google Cloud Platform. Only IPv4 is
 *  supported.
 */
@property(nonatomic, copy, nullable) NSString *peerIpAddress;

/** IPv6 address of the BGP interface outside Google Cloud Platform. */
@property(nonatomic, copy, nullable) NSString *peerIpv6NexthopAddress;

/**
 *  URI of the VM instance that is used as third-party router appliances such as
 *  Next Gen Firewalls, Virtual Routers, or Router Appliances. The VM instance
 *  must be located in zones contained in the same region as this Cloud Router.
 *  The VM instance is the peer side of the BGP session.
 */
@property(nonatomic, copy, nullable) NSString *routerApplianceInstance;

@end


/**
 *  GTLRCompute_RouterBgpPeerBfd
 */
@interface GTLRCompute_RouterBgpPeerBfd : GTLRObject

/**
 *  The minimum interval, in milliseconds, between BFD control packets received
 *  from the peer router. The actual value is negotiated between the two routers
 *  and is equal to the greater of this value and the transmit interval of the
 *  other router. If set, this value must be between 1000 and 30000. The default
 *  is 1000.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minReceiveInterval;

/**
 *  The minimum interval, in milliseconds, between BFD control packets
 *  transmitted to the peer router. The actual value is negotiated between the
 *  two routers and is equal to the greater of this value and the corresponding
 *  receive interval of the other router. If set, this value must be between
 *  1000 and 30000. The default is 1000.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minTransmitInterval;

/**
 *  The number of consecutive BFD packets that must be missed before BFD
 *  declares that a peer is unavailable. If set, the value must be a value
 *  between 5 and 16. The default is 5.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *multiplier;

/**
 *  The BFD session initialization mode for this BGP peer. If set to ACTIVE, the
 *  Cloud Router will initiate the BFD session for this BGP peer. If set to
 *  PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD
 *  session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP
 *  peer. The default is DISABLED.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RouterBgpPeerBfd_SessionInitializationMode_Active
 *        Value "ACTIVE"
 *    @arg @c kGTLRCompute_RouterBgpPeerBfd_SessionInitializationMode_Disabled
 *        Value "DISABLED"
 *    @arg @c kGTLRCompute_RouterBgpPeerBfd_SessionInitializationMode_Passive
 *        Value "PASSIVE"
 */
@property(nonatomic, copy, nullable) NSString *sessionInitializationMode;

@end


/**
 *  GTLRCompute_RouterInterface
 */
@interface GTLRCompute_RouterInterface : GTLRObject

/**
 *  IP address and range of the interface. The IP range must be in the RFC3927
 *  link-local IP address space. The value must be a CIDR-formatted string, for
 *  example: 169.254.0.1/30. NOTE: Do not truncate the address as it represents
 *  the IP address of the interface.
 */
@property(nonatomic, copy, nullable) NSString *ipRange;

/**
 *  URI of the linked Interconnect attachment. It must be in the same region as
 *  the router. Each interface can have one linked resource, which can be a VPN
 *  tunnel, an Interconnect attachment, or a virtual machine instance.
 */
@property(nonatomic, copy, nullable) NSString *linkedInterconnectAttachment;

/**
 *  URI of the linked VPN tunnel, which must be in the same region as the
 *  router. Each interface can have one linked resource, which can be a VPN
 *  tunnel, an Interconnect attachment, or a virtual machine instance.
 */
@property(nonatomic, copy, nullable) NSString *linkedVpnTunnel;

/**
 *  [Output Only] The resource that configures and manages this interface. -
 *  MANAGED_BY_USER is the default value and can be managed directly by users. -
 *  MANAGED_BY_ATTACHMENT is an interface that is configured and managed by
 *  Cloud Interconnect, specifically, by an InterconnectAttachment of type
 *  PARTNER. Google automatically creates, updates, and deletes this type of
 *  interface when the PARTNER InterconnectAttachment is created, updated, or
 *  deleted.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RouterInterface_ManagementType_ManagedByAttachment
 *        The interface is automatically created for PARTNER type
 *        InterconnectAttachment, Google will automatically create/update/delete
 *        this interface when the PARTNER InterconnectAttachment is
 *        created/provisioned/deleted. This type of interface cannot be manually
 *        managed by user. (Value: "MANAGED_BY_ATTACHMENT")
 *    @arg @c kGTLRCompute_RouterInterface_ManagementType_ManagedByUser Default
 *        value, the interface is manually created and managed by user. (Value:
 *        "MANAGED_BY_USER")
 */
@property(nonatomic, copy, nullable) NSString *managementType;

/**
 *  Name of this interface entry. The name must be 1-63 characters long, and
 *  comply with RFC1035. Specifically, the name must be 1-63 characters long and
 *  match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
 *  first character must be a lowercase letter, and all following characters
 *  must be a dash, lowercase letter, or digit, except the last character, which
 *  cannot be a dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The regional private internal IP address that is used to establish BGP
 *  sessions to a VM instance acting as a third-party Router Appliance, such as
 *  a Next Gen Firewall, a Virtual Router, or an SD-WAN VM.
 */
@property(nonatomic, copy, nullable) NSString *privateIpAddress;

/**
 *  Name of the interface that will be redundant with the current interface you
 *  are creating. The redundantInterface must belong to the same Cloud Router as
 *  the interface here. To establish the BGP session to a Router Appliance VM,
 *  you must create two BGP peers. The two BGP peers must be attached to two
 *  separate interfaces that are redundant with each other. The
 *  redundant_interface must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the redundant_interface must be 1-63 characters long and match
 *  the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
 *  character must be a lowercase letter, and all following characters must be a
 *  dash, lowercase letter, or digit, except the last character, which cannot be
 *  a dash.
 */
@property(nonatomic, copy, nullable) NSString *redundantInterface;

/**
 *  The URI of the subnetwork resource that this interface belongs to, which
 *  must be in the same region as the Cloud Router. When you establish a BGP
 *  session to a VM instance using this interface, the VM instance must belong
 *  to the same subnetwork as the subnetwork specified here.
 */
@property(nonatomic, copy, nullable) NSString *subnetwork;

@end


/**
 *  Contains a list of Router resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_RouterList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Router resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Router *> *items;

/** [Output Only] Type of resource. Always compute#router for routers. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_RouterList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_RouterList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_DeprecatedResourceUsed A link
 *        to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_InjectedKernelsDeprecated The
 *        operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_NextHopAddressNotAssigned The
 *        route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_NextHopNotRunning The route's
 *        next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_NoResultsOnPage No results
 *        are present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_NotCriticalError Error which
 *        is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_RequiredTosAgreement The user
 *        attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_SchemaValidationIgnored When
 *        a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_RouterList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RouterList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_RouterList_Warning_Data_Item
 */
@interface GTLRCompute_RouterList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_RouterMd5AuthenticationKey
 */
@interface GTLRCompute_RouterMd5AuthenticationKey : GTLRObject

/**
 *  [Input only] Value of the key. For patch and update calls, it can be skipped
 *  to copy the value from the previous configuration. This is allowed if the
 *  key with the same name existed before the operation. Maximum length is 80
 *  characters. Can only contain printable ASCII characters.
 */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  Name used to identify the key. Must be unique within a router. Must be
 *  referenced by at least one bgpPeer. Must comply with RFC1035.
 */
@property(nonatomic, copy, nullable) NSString *name;

@end


/**
 *  Represents a Nat resource. It enables the VMs within the specified
 *  subnetworks to access Internet without external IP addresses. It specifies a
 *  list of subnetworks (and the ranges within) that want to use NAT. Customers
 *  can also provide the external IPs that would be used for NAT. GCP would
 *  auto-allocate ephemeral IPs if no external IPs are provided.
 */
@interface GTLRCompute_RouterNat : GTLRObject

/**
 *  A list of URLs of the IP resources to be drained. These IPs must be valid
 *  static external IPs that have been assigned to the NAT. These IPs should be
 *  used for updating/patching a NAT only.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *drainNatIps;

/**
 *  Enable Dynamic Port Allocation. If not specified, it is disabled by default.
 *  If set to true, - Dynamic Port Allocation will be enabled on this NAT
 *  config. - enableEndpointIndependentMapping cannot be set to true. - If
 *  minPorts is set, minPortsPerVm must be set to a power of two greater than or
 *  equal to 32. If minPortsPerVm is not set, a minimum of 32 ports will be
 *  allocated to a VM from this NAT config.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableDynamicPortAllocation;

/**
 *  enableEndpointIndependentMapping
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableEndpointIndependentMapping;

/**
 *  List of NAT-ted endpoint types supported by the Nat Gateway. If the list is
 *  empty, then it will be equivalent to include ENDPOINT_TYPE_VM
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *endpointTypes;

/**
 *  Timeout (in seconds) for ICMP connections. Defaults to 30s if not set.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *icmpIdleTimeoutSec;

/** Configure logging on this NAT. */
@property(nonatomic, strong, nullable) GTLRCompute_RouterNatLogConfig *logConfig;

/**
 *  Maximum number of ports allocated to a VM from this NAT config when Dynamic
 *  Port Allocation is enabled. If Dynamic Port Allocation is not enabled, this
 *  field has no effect. If Dynamic Port Allocation is enabled, and this field
 *  is set, it must be set to a power of two greater than minPortsPerVm, or 64
 *  if minPortsPerVm is not set. If Dynamic Port Allocation is enabled and this
 *  field is not set, a maximum of 65536 ports will be allocated to a VM from
 *  this NAT config.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *maxPortsPerVm;

/**
 *  Minimum number of ports allocated to a VM from this NAT config. If not set,
 *  a default number of ports is allocated to a VM. This is rounded up to the
 *  nearest power of 2. For example, if the value of this field is 50, at least
 *  64 ports are allocated to a VM.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minPortsPerVm;

/**
 *  Unique name of this Nat service. The name must be 1-63 characters long and
 *  comply with RFC1035.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Specify the NatIpAllocateOption, which can take one of the following values:
 *  - MANUAL_ONLY: Uses only Nat IP addresses provided by customers. When there
 *  are not enough specified Nat IPs, the Nat service fails for new VMs. -
 *  AUTO_ONLY: Nat IPs are allocated by Google Cloud Platform; customers can't
 *  specify any Nat IPs. When choosing AUTO_ONLY, then nat_ip should be empty.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RouterNat_NatIpAllocateOption_AutoOnly Nat IPs are
 *        allocated by GCP; customers can not specify any Nat IPs. (Value:
 *        "AUTO_ONLY")
 *    @arg @c kGTLRCompute_RouterNat_NatIpAllocateOption_ManualOnly Only use Nat
 *        IPs provided by customers. When specified Nat IPs are not enough then
 *        the Nat service fails for new VMs. (Value: "MANUAL_ONLY")
 */
@property(nonatomic, copy, nullable) NSString *natIpAllocateOption;

/**
 *  A list of URLs of the IP resources used for this Nat service. These IP
 *  addresses must be valid static external IP addresses assigned to the
 *  project.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *natIps;

/** A list of rules associated with this NAT. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RouterNatRule *> *rules;

/**
 *  Specify the Nat option, which can take one of the following values: -
 *  ALL_SUBNETWORKS_ALL_IP_RANGES: All of the IP ranges in every Subnetwork are
 *  allowed to Nat. - ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES: All of the primary
 *  IP ranges in every Subnetwork are allowed to Nat. - LIST_OF_SUBNETWORKS: A
 *  list of Subnetworks are allowed to Nat (specified in the field subnetwork
 *  below) The default is SUBNETWORK_IP_RANGE_TO_NAT_OPTION_UNSPECIFIED. Note
 *  that if this field contains ALL_SUBNETWORKS_ALL_IP_RANGES or
 *  ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES, then there should not be any other
 *  Router.Nat section in any Router for this network in this region.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RouterNat_SourceSubnetworkIpRangesToNat_AllSubnetworksAllIpRanges
 *        All the IP ranges in every Subnetwork are allowed to Nat. (Value:
 *        "ALL_SUBNETWORKS_ALL_IP_RANGES")
 *    @arg @c kGTLRCompute_RouterNat_SourceSubnetworkIpRangesToNat_AllSubnetworksAllPrimaryIpRanges
 *        All the primary IP ranges in every Subnetwork are allowed to Nat.
 *        (Value: "ALL_SUBNETWORKS_ALL_PRIMARY_IP_RANGES")
 *    @arg @c kGTLRCompute_RouterNat_SourceSubnetworkIpRangesToNat_ListOfSubnetworks
 *        A list of Subnetworks are allowed to Nat (specified in the field
 *        subnetwork below) (Value: "LIST_OF_SUBNETWORKS")
 */
@property(nonatomic, copy, nullable) NSString *sourceSubnetworkIpRangesToNat;

/**
 *  A list of Subnetwork resources whose traffic should be translated by NAT
 *  Gateway. It is used only when LIST_OF_SUBNETWORKS is selected for the
 *  SubnetworkIpRangeToNatOption above.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RouterNatSubnetworkToNat *> *subnetworks;

/**
 *  Timeout (in seconds) for TCP established connections. Defaults to 1200s if
 *  not set.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *tcpEstablishedIdleTimeoutSec;

/**
 *  Timeout (in seconds) for TCP connections that are in TIME_WAIT state.
 *  Defaults to 120s if not set.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *tcpTimeWaitTimeoutSec;

/**
 *  Timeout (in seconds) for TCP transitory connections. Defaults to 30s if not
 *  set.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *tcpTransitoryIdleTimeoutSec;

/**
 *  Timeout (in seconds) for UDP connections. Defaults to 30s if not set.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *udpIdleTimeoutSec;

@end


/**
 *  Configuration of logging on a NAT.
 */
@interface GTLRCompute_RouterNatLogConfig : GTLRObject

/**
 *  Indicates whether or not to export logs. This is false by default.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enable;

/**
 *  Specify the desired filtering of logs on this NAT. If unspecified, logs are
 *  exported for all connections handled by this NAT. This option can take one
 *  of the following values: - ERRORS_ONLY: Export logs only for connection
 *  failures. - TRANSLATIONS_ONLY: Export logs only for successful connections.
 *  - ALL: Export logs for all connections, successful and unsuccessful.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RouterNatLogConfig_Filter_All Export logs for all
 *        (successful and unsuccessful) connections. (Value: "ALL")
 *    @arg @c kGTLRCompute_RouterNatLogConfig_Filter_ErrorsOnly Export logs for
 *        connection failures only. (Value: "ERRORS_ONLY")
 *    @arg @c kGTLRCompute_RouterNatLogConfig_Filter_TranslationsOnly Export
 *        logs for successful connections only. (Value: "TRANSLATIONS_ONLY")
 */
@property(nonatomic, copy, nullable) NSString *filter;

@end


/**
 *  GTLRCompute_RouterNatRule
 */
@interface GTLRCompute_RouterNatRule : GTLRObject

/** The action to be enforced for traffic that matches this rule. */
@property(nonatomic, strong, nullable) GTLRCompute_RouterNatRuleAction *action;

/**
 *  An optional description of this rule.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  CEL expression that specifies the match condition that egress traffic from a
 *  VM is evaluated against. If it evaluates to true, the corresponding `action`
 *  is enforced. The following examples are valid match expressions for public
 *  NAT: "inIpRange(destination.ip, '1.1.0.0/16') || inIpRange(destination.ip,
 *  '2.2.0.0/16')" "destination.ip == '1.1.0.1' || destination.ip == '8.8.8.8'"
 *  The following example is a valid match expression for private NAT:
 *  "nexthop.hub ==
 *  'https://networkconnectivity.googleapis.com/v1alpha1/projects/my-project/global/hub/hub-1'"
 */
@property(nonatomic, copy, nullable) NSString *match;

/**
 *  An integer uniquely identifying a rule in the list. The rule number must be
 *  a positive value between 0 and 65000, and must be unique among rules within
 *  a NAT.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ruleNumber;

@end


/**
 *  GTLRCompute_RouterNatRuleAction
 */
@interface GTLRCompute_RouterNatRuleAction : GTLRObject

/**
 *  A list of URLs of the IP resources used for this NAT rule. These IP
 *  addresses must be valid static external IP addresses assigned to the
 *  project. This field is used for public NAT.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sourceNatActiveIps;

/**
 *  A list of URLs of the IP resources to be drained. These IPs must be valid
 *  static external IPs that have been assigned to the NAT. These IPs should be
 *  used for updating/patching a NAT rule only. This field is used for public
 *  NAT.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sourceNatDrainIps;

@end


/**
 *  Defines the IP ranges that want to use NAT for a subnetwork.
 */
@interface GTLRCompute_RouterNatSubnetworkToNat : GTLRObject

/** URL for the subnetwork resource that will use NAT. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A list of the secondary ranges of the Subnetwork that are allowed to use
 *  NAT. This can be populated only if "LIST_OF_SECONDARY_IP_RANGES" is one of
 *  the values in source_ip_ranges_to_nat.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *secondaryIpRangeNames;

/**
 *  Specify the options for NAT ranges in the Subnetwork. All options of a
 *  single value are valid except NAT_IP_RANGE_OPTION_UNSPECIFIED. The only
 *  valid option with multiple values is: ["PRIMARY_IP_RANGE",
 *  "LIST_OF_SECONDARY_IP_RANGES"] Default: [ALL_IP_RANGES]
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sourceIpRangesToNat;

@end


/**
 *  GTLRCompute_RoutersPreviewResponse
 */
@interface GTLRCompute_RoutersPreviewResponse : GTLRObject

/** Preview of given router. */
@property(nonatomic, strong, nullable) GTLRCompute_Router *resource;

@end


/**
 *  GTLRCompute_RoutersScopedList
 */
@interface GTLRCompute_RoutersScopedList : GTLRObject

/** A list of routers contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Router *> *routers;

/**
 *  Informational warning which replaces the list of routers when the list is
 *  empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_RoutersScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of routers when the list is
 *  empty.
 */
@interface GTLRCompute_RoutersScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_PartialSuccess Success
 *        is reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_ResourceNotDeleted One
 *        or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_RoutersScopedList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RoutersScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_RoutersScopedList_Warning_Data_Item
 */
@interface GTLRCompute_RoutersScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_RouterStatus
 */
@interface GTLRCompute_RouterStatus : GTLRObject

/** Best routes for this router's network. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Route *> *bestRoutes;

/** Best routes learned by this router. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Route *> *bestRoutesForRouter;

@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RouterStatusBgpPeerStatus *> *bgpPeerStatus;
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RouterStatusNatStatus *> *natStatus;

/** URI of the network to which this router belongs. */
@property(nonatomic, copy, nullable) NSString *network;

@end


/**
 *  GTLRCompute_RouterStatusBgpPeerStatus
 */
@interface GTLRCompute_RouterStatusBgpPeerStatus : GTLRObject

/** Routes that were advertised to the remote BGP peer */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Route *> *advertisedRoutes;

@property(nonatomic, strong, nullable) GTLRCompute_BfdStatus *bfdStatus;

/**
 *  Enable IPv6 traffic over BGP Peer. If not specified, it is disabled by
 *  default.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableIpv6;

/** IP address of the local BGP interface. */
@property(nonatomic, copy, nullable) NSString *ipAddress;

/** IPv6 address of the local BGP interface. */
@property(nonatomic, copy, nullable) NSString *ipv6NexthopAddress;

/** URL of the VPN tunnel that this BGP peer controls. */
@property(nonatomic, copy, nullable) NSString *linkedVpnTunnel;

/**
 *  Informs whether MD5 authentication is enabled on this BGP peer.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *md5AuthEnabled;

/** Name of this BGP peer. Unique within the Routers resource. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Number of routes learned from the remote BGP Peer.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numLearnedRoutes;

/** IP address of the remote BGP interface. */
@property(nonatomic, copy, nullable) NSString *peerIpAddress;

/** IPv6 address of the remote BGP interface. */
@property(nonatomic, copy, nullable) NSString *peerIpv6NexthopAddress;

/**
 *  [Output only] URI of the VM instance that is used as third-party router
 *  appliances such as Next Gen Firewalls, Virtual Routers, or Router
 *  Appliances. The VM instance is the peer side of the BGP session.
 */
@property(nonatomic, copy, nullable) NSString *routerApplianceInstance;

/**
 *  The state of the BGP session. For a list of possible values for this field,
 *  see BGP session states.
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Status of the BGP peer: {UP, DOWN}
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RouterStatusBgpPeerStatus_Status_Down Value "DOWN"
 *    @arg @c kGTLRCompute_RouterStatusBgpPeerStatus_Status_Unknown Value
 *        "UNKNOWN"
 *    @arg @c kGTLRCompute_RouterStatusBgpPeerStatus_Status_Up Value "UP"
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  Indicates why particular status was returned.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_RouterStatusBgpPeerStatus_StatusReason_Md5AuthInternalProblem
 *        Indicates internal problems with configuration of MD5 authentication.
 *        This particular reason can only be returned when md5AuthEnabled is
 *        true and status is DOWN. (Value: "MD5_AUTH_INTERNAL_PROBLEM")
 *    @arg @c kGTLRCompute_RouterStatusBgpPeerStatus_StatusReason_StatusReasonUnspecified
 *        Value "STATUS_REASON_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *statusReason;

/**
 *  Time this session has been up. Format: 14 years, 51 weeks, 6 days, 23 hours,
 *  59 minutes, 59 seconds
 */
@property(nonatomic, copy, nullable) NSString *uptime;

/** Time this session has been up, in seconds. Format: 145 */
@property(nonatomic, copy, nullable) NSString *uptimeSeconds;

@end


/**
 *  Status of a NAT contained in this router.
 */
@interface GTLRCompute_RouterStatusNatStatus : GTLRObject

/**
 *  A list of IPs auto-allocated for NAT. Example: ["1.1.1.1", "129.2.16.89"]
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *autoAllocatedNatIps;

/**
 *  A list of IPs auto-allocated for NAT that are in drain mode. Example:
 *  ["1.1.1.1", "179.12.26.133"].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *drainAutoAllocatedNatIps;

/**
 *  A list of IPs user-allocated for NAT that are in drain mode. Example:
 *  ["1.1.1.1", "179.12.26.133"].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *drainUserAllocatedNatIps;

/**
 *  The number of extra IPs to allocate. This will be greater than 0 only if
 *  user-specified IPs are NOT enough to allow all configured VMs to use NAT.
 *  This value is meaningful only when auto-allocation of NAT IPs is *not* used.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minExtraNatIpsNeeded;

/** Unique name of this NAT. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Number of VM endpoints (i.e., Nics) that can use NAT.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numVmEndpointsWithNatMappings;

/** Status of rules in this NAT. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_RouterStatusNatStatusNatRuleStatus *> *ruleStatus;

/** A list of fully qualified URLs of reserved IP address resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *userAllocatedNatIpResources;

/**
 *  A list of IPs user-allocated for NAT. They will be raw IP strings like
 *  "179.12.26.133".
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *userAllocatedNatIps;

@end


/**
 *  Status of a NAT Rule contained in this NAT.
 */
@interface GTLRCompute_RouterStatusNatStatusNatRuleStatus : GTLRObject

/** A list of active IPs for NAT. Example: ["1.1.1.1", "179.12.26.133"]. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *activeNatIps;

/**
 *  A list of IPs for NAT that are in drain mode. Example: ["1.1.1.1",
 *  "179.12.26.133"].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *drainNatIps;

/**
 *  The number of extra IPs to allocate. This will be greater than 0 only if the
 *  existing IPs in this NAT Rule are NOT enough to allow all configured VMs to
 *  use NAT.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minExtraIpsNeeded;

/**
 *  Number of VM endpoints (i.e., NICs) that have NAT Mappings from this NAT
 *  Rule.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numVmEndpointsWithNatMappings;

/**
 *  Rule number of the rule.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ruleNumber;

@end


/**
 *  GTLRCompute_RouterStatusResponse
 */
@interface GTLRCompute_RouterStatusResponse : GTLRObject

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

@property(nonatomic, strong, nullable) GTLRCompute_RouterStatus *result;

@end


/**
 *  This is deprecated and has no effect. Do not use.
 */
@interface GTLRCompute_Rule : GTLRObject

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Rule_Action_Allow This is deprecated and has no
 *        effect. Do not use. (Value: "ALLOW")
 *    @arg @c kGTLRCompute_Rule_Action_AllowWithLog This is deprecated and has
 *        no effect. Do not use. (Value: "ALLOW_WITH_LOG")
 *    @arg @c kGTLRCompute_Rule_Action_Deny This is deprecated and has no
 *        effect. Do not use. (Value: "DENY")
 *    @arg @c kGTLRCompute_Rule_Action_DenyWithLog This is deprecated and has no
 *        effect. Do not use. (Value: "DENY_WITH_LOG")
 *    @arg @c kGTLRCompute_Rule_Action_Log This is deprecated and has no effect.
 *        Do not use. (Value: "LOG")
 *    @arg @c kGTLRCompute_Rule_Action_NoAction This is deprecated and has no
 *        effect. Do not use. (Value: "NO_ACTION")
 */
@property(nonatomic, copy, nullable) NSString *action;

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Condition *> *conditions;

/**
 *  This is deprecated and has no effect. Do not use.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *ins;

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_LogConfig *> *logConfigs;

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *notIns;

/** This is deprecated and has no effect. Do not use. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  DEPRECATED: Please use compute#savedDisk instead. An instance-attached disk
 *  resource.
 */
@interface GTLRCompute_SavedAttachedDisk : GTLRObject

/**
 *  Specifies whether the disk will be auto-deleted when the instance is deleted
 *  (but not when the disk is detached from the instance).
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *autoDelete;

/**
 *  Indicates that this is a boot disk. The virtual machine will use the first
 *  partition of the disk for its root filesystem.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *boot;

/** Specifies the name of the disk attached to the source instance. */
@property(nonatomic, copy, nullable) NSString *deviceName;

/** The encryption key for the disk. */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *diskEncryptionKey;

/**
 *  The size of the disk in base-2 GB.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *diskSizeGb;

/**
 *  [Output Only] URL of the disk type resource. For example: projects/project
 *  /zones/zone/diskTypes/pd-standard or pd-ssd
 */
@property(nonatomic, copy, nullable) NSString *diskType;

/**
 *  A list of features to enable on the guest operating system. Applicable only
 *  for bootable images. Read Enabling guest operating system features to see a
 *  list of available options.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_GuestOsFeature *> *guestOsFeatures;

/**
 *  Specifies zero-based index of the disk that is attached to the source
 *  instance.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *index;

/**
 *  Specifies the disk interface to use for attaching this disk, which is either
 *  SCSI or NVME.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SavedAttachedDisk_Interface_Nvme Value "NVME"
 *    @arg @c kGTLRCompute_SavedAttachedDisk_Interface_Scsi Value "SCSI"
 */
@property(nonatomic, copy, nullable) NSString *interface;

/**
 *  [Output Only] Type of the resource. Always compute#attachedDisk for attached
 *  disks.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** [Output Only] Any valid publicly visible licenses. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *licenses;

/**
 *  The mode in which this disk is attached to the source instance, either
 *  READ_WRITE or READ_ONLY.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SavedAttachedDisk_Mode_ReadOnly Attaches this disk in
 *        read-only mode. Multiple virtual machines can use a disk in read-only
 *        mode at a time. (Value: "READ_ONLY")
 *    @arg @c kGTLRCompute_SavedAttachedDisk_Mode_ReadWrite *[Default]* Attaches
 *        this disk in read-write mode. Only one virtual machine at a time can
 *        be attached to a disk in read-write mode. (Value: "READ_WRITE")
 */
@property(nonatomic, copy, nullable) NSString *mode;

/** Specifies a URL of the disk attached to the source instance. */
@property(nonatomic, copy, nullable) NSString *source;

/**
 *  [Output Only] A size of the storage used by the disk's snapshot by this
 *  machine image.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *storageBytes;

/**
 *  [Output Only] An indicator whether storageBytes is in a stable state or it
 *  is being adjusted as a result of shared storage reallocation. This status
 *  can either be UPDATING, meaning the size of the snapshot is being updated,
 *  or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SavedAttachedDisk_StorageBytesStatus_Updating Value
 *        "UPDATING"
 *    @arg @c kGTLRCompute_SavedAttachedDisk_StorageBytesStatus_UpToDate Value
 *        "UP_TO_DATE"
 */
@property(nonatomic, copy, nullable) NSString *storageBytesStatus;

/**
 *  Specifies the type of the attached disk, either SCRATCH or PERSISTENT.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SavedAttachedDisk_Type_Persistent Value "PERSISTENT"
 *    @arg @c kGTLRCompute_SavedAttachedDisk_Type_Scratch Value "SCRATCH"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  An instance-attached disk resource.
 */
@interface GTLRCompute_SavedDisk : GTLRObject

/**
 *  [Output Only] The architecture of the attached disk.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SavedDisk_Architecture_ArchitectureUnspecified
 *        Default value indicating Architecture is not set. (Value:
 *        "ARCHITECTURE_UNSPECIFIED")
 *    @arg @c kGTLRCompute_SavedDisk_Architecture_Arm64 Machines with
 *        architecture ARM64 (Value: "ARM64")
 *    @arg @c kGTLRCompute_SavedDisk_Architecture_X8664 Machines with
 *        architecture X86_64 (Value: "X86_64")
 */
@property(nonatomic, copy, nullable) NSString *architecture;

/**
 *  [Output Only] Type of the resource. Always compute#savedDisk for attached
 *  disks.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Specifies a URL of the disk attached to the source instance. */
@property(nonatomic, copy, nullable) NSString *sourceDisk;

/**
 *  [Output Only] Size of the individual disk snapshot used by this machine
 *  image.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *storageBytes;

/**
 *  [Output Only] An indicator whether storageBytes is in a stable state or it
 *  is being adjusted as a result of shared storage reallocation. This status
 *  can either be UPDATING, meaning the size of the snapshot is being updated,
 *  or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SavedDisk_StorageBytesStatus_Updating Value
 *        "UPDATING"
 *    @arg @c kGTLRCompute_SavedDisk_StorageBytesStatus_UpToDate Value
 *        "UP_TO_DATE"
 */
@property(nonatomic, copy, nullable) NSString *storageBytesStatus;

@end


/**
 *  GTLRCompute_ScalingScheduleStatus
 */
@interface GTLRCompute_ScalingScheduleStatus : GTLRObject

/**
 *  [Output Only] The last time the scaling schedule became active. Note: this
 *  is a timestamp when a schedule actually became active, not when it was
 *  planned to do so. The timestamp is in RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *lastStartTime;

/**
 *  [Output Only] The next time the scaling schedule is to become active. Note:
 *  this is a timestamp when a schedule is planned to run, but the actual time
 *  might be slightly different. The timestamp is in RFC3339 text format.
 */
@property(nonatomic, copy, nullable) NSString *nextStartTime;

/**
 *  [Output Only] The current state of a scaling schedule.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ScalingScheduleStatus_State_Active The current
 *        autoscaling recommendation is influenced by this scaling schedule.
 *        (Value: "ACTIVE")
 *    @arg @c kGTLRCompute_ScalingScheduleStatus_State_Disabled This scaling
 *        schedule has been disabled by the user. (Value: "DISABLED")
 *    @arg @c kGTLRCompute_ScalingScheduleStatus_State_Obsolete This scaling
 *        schedule will never become active again. (Value: "OBSOLETE")
 *    @arg @c kGTLRCompute_ScalingScheduleStatus_State_Ready The current
 *        autoscaling recommendation is not influenced by this scaling schedule.
 *        (Value: "READY")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  Sets the scheduling options for an Instance.
 */
@interface GTLRCompute_Scheduling : GTLRObject

/**
 *  Specifies whether the instance should be automatically restarted if it is
 *  terminated by Compute Engine (not terminated by a user). You can only set
 *  the automatic restart option for standard instances. Preemptible instances
 *  cannot be automatically restarted. By default, this is set to true so an
 *  instance is automatically restarted if it is terminated by Compute Engine.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *automaticRestart;

/**
 *  Specifies the termination action for the instance.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Scheduling_InstanceTerminationAction_Delete Delete
 *        the VM. (Value: "DELETE")
 *    @arg @c kGTLRCompute_Scheduling_InstanceTerminationAction_InstanceTerminationActionUnspecified
 *        Default value. This value is unused. (Value:
 *        "INSTANCE_TERMINATION_ACTION_UNSPECIFIED")
 *    @arg @c kGTLRCompute_Scheduling_InstanceTerminationAction_Stop Stop the VM
 *        without storing in-memory content. default action. (Value: "STOP")
 */
@property(nonatomic, copy, nullable) NSString *instanceTerminationAction;

/**
 *  An opaque location hint used to place the instance close to other resources.
 *  This field is for use by internal tools that use the public API.
 */
@property(nonatomic, copy, nullable) NSString *locationHint;

/**
 *  The minimum number of virtual CPUs this instance will consume when running
 *  on a sole-tenant node.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *minNodeCpus;

/**
 *  A set of node affinity and anti-affinity configurations. Refer to
 *  Configuring node affinity for more information. Overrides
 *  reservationAffinity.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SchedulingNodeAffinity *> *nodeAffinities;

/**
 *  Defines the maintenance behavior for this instance. For standard instances,
 *  the default behavior is MIGRATE. For preemptible instances, the default and
 *  only possible behavior is TERMINATE. For more information, see Set VM host
 *  maintenance policy.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Scheduling_OnHostMaintenance_Migrate *[Default]*
 *        Allows Compute Engine to automatically migrate instances out of the
 *        way of maintenance events. (Value: "MIGRATE")
 *    @arg @c kGTLRCompute_Scheduling_OnHostMaintenance_Terminate Tells Compute
 *        Engine to terminate and (optionally) restart the instance away from
 *        the maintenance activity. If you would like your instance to be
 *        restarted, set the automaticRestart flag to true. Your instance may be
 *        restarted more than once, and it may be restarted outside the window
 *        of maintenance events. (Value: "TERMINATE")
 */
@property(nonatomic, copy, nullable) NSString *onHostMaintenance;

/**
 *  Defines whether the instance is preemptible. This can only be set during
 *  instance creation or while the instance is stopped and therefore, in a
 *  `TERMINATED` state. See Instance Life Cycle for more information on the
 *  possible instance states.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *preemptible;

/**
 *  Specifies the provisioning model of the instance.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Scheduling_ProvisioningModel_Spot Heavily discounted,
 *        no guaranteed runtime. (Value: "SPOT")
 *    @arg @c kGTLRCompute_Scheduling_ProvisioningModel_Standard Standard
 *        provisioning with user controlled runtime, no discounts. (Value:
 *        "STANDARD")
 */
@property(nonatomic, copy, nullable) NSString *provisioningModel;

@end


/**
 *  Node Affinity: the configuration of desired nodes onto which this Instance
 *  could be scheduled.
 */
@interface GTLRCompute_SchedulingNodeAffinity : GTLRObject

/** Corresponds to the label key of Node resource. */
@property(nonatomic, copy, nullable) NSString *key;

/**
 *  Defines the operation of node selection. Valid operators are IN for affinity
 *  and NOT_IN for anti-affinity.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SchedulingNodeAffinity_OperatorProperty_In Requires
 *        Compute Engine to seek for matched nodes. (Value: "IN")
 *    @arg @c kGTLRCompute_SchedulingNodeAffinity_OperatorProperty_NotIn
 *        Requires Compute Engine to avoid certain nodes. (Value: "NOT_IN")
 *    @arg @c kGTLRCompute_SchedulingNodeAffinity_OperatorProperty_OperatorUnspecified
 *        Value "OPERATOR_UNSPECIFIED"
 *
 *  Remapped to 'operatorProperty' to avoid language reserved word 'operator'.
 */
@property(nonatomic, copy, nullable) NSString *operatorProperty;

/** Corresponds to the label values of Node resource. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *values;

@end


/**
 *  An instance's screenshot.
 */
@interface GTLRCompute_Screenshot : GTLRObject

/** [Output Only] The Base64-encoded screenshot data. */
@property(nonatomic, copy, nullable) NSString *contents;

/**
 *  [Output Only] Type of the resource. Always compute#screenshot for the
 *  screenshots.
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  GTLRCompute_SecurityPoliciesAggregatedList
 */
@interface GTLRCompute_SecurityPoliciesAggregatedList : GTLRObject

@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of SecurityPoliciesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_SecurityPoliciesAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#securityPolicyAggregatedList
 *  for lists of Security Policies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_SecurityPoliciesAggregatedList_Warning *warning;

@end


/**
 *  A list of SecurityPoliciesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_SecurityPoliciesScopedList. Use @c -additionalJSONKeys and
 *        @c -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_SecurityPoliciesAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_SecurityPoliciesAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_SecurityPoliciesAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SecurityPoliciesAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_SecurityPoliciesAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_SecurityPoliciesAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_SecurityPoliciesListPreconfiguredExpressionSetsResponse
 */
@interface GTLRCompute_SecurityPoliciesListPreconfiguredExpressionSetsResponse : GTLRObject

@property(nonatomic, strong, nullable) GTLRCompute_SecurityPoliciesWafConfig *preconfiguredExpressionSets;

@end


/**
 *  GTLRCompute_SecurityPoliciesScopedList
 */
@interface GTLRCompute_SecurityPoliciesScopedList : GTLRObject

/** A list of SecurityPolicies contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SecurityPolicy *> *securityPolicies;

/**
 *  Informational warning which replaces the list of security policies when the
 *  list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_SecurityPoliciesScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of security policies when the
 *  list is empty.
 */
@interface GTLRCompute_SecurityPoliciesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_SecurityPoliciesScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SecurityPoliciesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_SecurityPoliciesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_SecurityPoliciesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_SecurityPoliciesWafConfig
 */
@interface GTLRCompute_SecurityPoliciesWafConfig : GTLRObject

@property(nonatomic, strong, nullable) GTLRCompute_PreconfiguredWafSet *wafRules;

@end


/**
 *  Represents a Google Cloud Armor security policy resource. Only external
 *  backend services that use load balancers can reference a security policy.
 *  For more information, see Google Cloud Armor security policy overview.
 */
@interface GTLRCompute_SecurityPolicy : GTLRObject

@property(nonatomic, strong, nullable) GTLRCompute_SecurityPolicyAdaptiveProtectionConfig *adaptiveProtectionConfig;
@property(nonatomic, strong, nullable) GTLRCompute_SecurityPolicyAdvancedOptionsConfig *advancedOptionsConfig;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

@property(nonatomic, strong, nullable) GTLRCompute_SecurityPolicyDdosProtectionConfig *ddosProtectionConfig;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Specifies a fingerprint for this resource, which is essentially a hash of
 *  the metadata's contents and used for optimistic locking. The fingerprint is
 *  initially generated by Compute Engine and changes after every request to
 *  modify or update metadata. You must always provide an up-to-date fingerprint
 *  hash in order to update or change metadata, otherwise the request will fail
 *  with error 412 conditionNotMet. To see the latest fingerprint, make get()
 *  request to the security policy.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output only] Type of the resource. Always compute#securityPolicyfor
 *  security policies
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

@property(nonatomic, strong, nullable) GTLRCompute_SecurityPolicyRecaptchaOptionsConfig *recaptchaOptionsConfig;

/**
 *  [Output Only] URL of the region where the regional security policy resides.
 *  This field is not applicable to global security policies.
 */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  A list of rules that belong to this policy. There must always be a default
 *  rule which is a rule with priority 2147483647 and match all condition (for
 *  the match condition this means match "*" for srcIpRanges and for the
 *  networkMatch condition every field must be either match "*" or not set). If
 *  no rules are provided when creating a security policy, a default rule with
 *  action "allow" will be added.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SecurityPolicyRule *> *rules;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  The type indicates the intended use of the security policy. - CLOUD_ARMOR:
 *  Cloud Armor backend security policies can be configured to filter incoming
 *  HTTP requests targeting backend services. They filter requests before they
 *  hit the origin servers. - CLOUD_ARMOR_EDGE: Cloud Armor edge security
 *  policies can be configured to filter incoming HTTP requests targeting
 *  backend services (including Cloud CDN-enabled) as well as backend buckets
 *  (Cloud Storage). They filter requests before the request is served from
 *  Google's cache. - CLOUD_ARMOR_INTERNAL_SERVICE: Cloud Armor internal service
 *  policies can be configured to filter HTTP requests targeting services
 *  managed by Traffic Director in a service mesh. They filter requests before
 *  the request is served from the application. This field can be set only at
 *  resource creation time.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SecurityPolicy_Type_CloudArmor Value "CLOUD_ARMOR"
 *    @arg @c kGTLRCompute_SecurityPolicy_Type_CloudArmorEdge Value
 *        "CLOUD_ARMOR_EDGE"
 *    @arg @c kGTLRCompute_SecurityPolicy_Type_CloudArmorNetwork Value
 *        "CLOUD_ARMOR_NETWORK"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Configuration options for Cloud Armor Adaptive Protection (CAAP).
 */
@interface GTLRCompute_SecurityPolicyAdaptiveProtectionConfig : GTLRObject

/** If set to true, enables Cloud Armor Machine Learning. */
@property(nonatomic, strong, nullable) GTLRCompute_SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig *layer7DdosDefenseConfig;

@end


/**
 *  Configuration options for L7 DDoS detection.
 */
@interface GTLRCompute_SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig : GTLRObject

/**
 *  If set to true, enables CAAP for L7 DDoS detection.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enable;

/**
 *  Rule visibility can be one of the following: STANDARD - opaque rules.
 *  (default) PREMIUM - transparent rules.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig_RuleVisibility_Premium
 *        Value "PREMIUM"
 *    @arg @c kGTLRCompute_SecurityPolicyAdaptiveProtectionConfigLayer7DdosDefenseConfig_RuleVisibility_Standard
 *        Value "STANDARD"
 */
@property(nonatomic, copy, nullable) NSString *ruleVisibility;

@end


/**
 *  GTLRCompute_SecurityPolicyAdvancedOptionsConfig
 */
@interface GTLRCompute_SecurityPolicyAdvancedOptionsConfig : GTLRObject

/**
 *  Custom configuration to apply the JSON parsing. Only applicable when
 *  json_parsing is set to STANDARD.
 */
@property(nonatomic, strong, nullable) GTLRCompute_SecurityPolicyAdvancedOptionsConfigJsonCustomConfig *jsonCustomConfig;

/**
 *  jsonParsing
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SecurityPolicyAdvancedOptionsConfig_JsonParsing_Disabled
 *        Value "DISABLED"
 *    @arg @c kGTLRCompute_SecurityPolicyAdvancedOptionsConfig_JsonParsing_Standard
 *        Value "STANDARD"
 */
@property(nonatomic, copy, nullable) NSString *jsonParsing;

/**
 *  logLevel
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SecurityPolicyAdvancedOptionsConfig_LogLevel_Normal
 *        Value "NORMAL"
 *    @arg @c kGTLRCompute_SecurityPolicyAdvancedOptionsConfig_LogLevel_Verbose
 *        Value "VERBOSE"
 */
@property(nonatomic, copy, nullable) NSString *logLevel;

@end


/**
 *  GTLRCompute_SecurityPolicyAdvancedOptionsConfigJsonCustomConfig
 */
@interface GTLRCompute_SecurityPolicyAdvancedOptionsConfigJsonCustomConfig : GTLRObject

/**
 *  A list of custom Content-Type header values to apply the JSON parsing. As
 *  per RFC 1341, a Content-Type header value has the following format:
 *  Content-Type := type "/" subtype *[";" parameter] When configuring a custom
 *  Content-Type header value, only the type/subtype needs to be specified, and
 *  the parameters should be excluded.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *contentTypes;

@end


/**
 *  GTLRCompute_SecurityPolicyDdosProtectionConfig
 */
@interface GTLRCompute_SecurityPolicyDdosProtectionConfig : GTLRObject

/**
 *  ddosProtection
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SecurityPolicyDdosProtectionConfig_DdosProtection_Advanced
 *        Value "ADVANCED"
 *    @arg @c kGTLRCompute_SecurityPolicyDdosProtectionConfig_DdosProtection_Standard
 *        Value "STANDARD"
 */
@property(nonatomic, copy, nullable) NSString *ddosProtection;

@end


/**
 *  GTLRCompute_SecurityPolicyList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_SecurityPolicyList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of SecurityPolicy resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SecurityPolicy *> *items;

/**
 *  [Output Only] Type of resource. Always compute#securityPolicyList for
 *  listsof securityPolicies
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_SecurityPolicyList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_SecurityPolicyList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_SecurityPolicyList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SecurityPolicyList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_SecurityPolicyList_Warning_Data_Item
 */
@interface GTLRCompute_SecurityPolicyList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_SecurityPolicyRecaptchaOptionsConfig
 */
@interface GTLRCompute_SecurityPolicyRecaptchaOptionsConfig : GTLRObject

/**
 *  An optional field to supply a reCAPTCHA site key to be used for all the
 *  rules using the redirect action with the type of GOOGLE_RECAPTCHA under the
 *  security policy. The specified site key needs to be created from the
 *  reCAPTCHA API. The user is responsible for the validity of the specified
 *  site key. If not specified, a Google-managed site key is used.
 */
@property(nonatomic, copy, nullable) NSString *redirectSiteKey;

@end


/**
 *  GTLRCompute_SecurityPolicyReference
 */
@interface GTLRCompute_SecurityPolicyReference : GTLRObject

@property(nonatomic, copy, nullable) NSString *securityPolicy;

@end


/**
 *  Represents a rule that describes one or more match conditions along with the
 *  action to be taken when traffic matches this condition (allow or deny).
 */
@interface GTLRCompute_SecurityPolicyRule : GTLRObject

/**
 *  The Action to perform when the rule is matched. The following are the valid
 *  actions: - allow: allow access to target. - deny(): deny access to target,
 *  returns the HTTP response code specified (valid values are 403, 404, and
 *  502). - rate_based_ban: limit client traffic to the configured threshold and
 *  ban the client if the traffic exceeds the threshold. Configure parameters
 *  for this action in RateLimitOptions. Requires rate_limit_options to be set.
 *  - redirect: redirect to a different target. This can either be an internal
 *  reCAPTCHA redirect, or an external URL-based redirect via a 302 response.
 *  Parameters for this action can be configured via redirectOptions. -
 *  throttle: limit client traffic to the configured threshold. Configure
 *  parameters for this action in rateLimitOptions. Requires rate_limit_options
 *  to be set for this.
 */
@property(nonatomic, copy, nullable) NSString *action;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** Optional, additional actions that are performed on headers. */
@property(nonatomic, strong, nullable) GTLRCompute_SecurityPolicyRuleHttpHeaderAction *headerAction;

/**
 *  [Output only] Type of the resource. Always compute#securityPolicyRule for
 *  security policy rules
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  A match condition that incoming traffic is evaluated against. If it
 *  evaluates to true, the corresponding 'action' is enforced.
 */
@property(nonatomic, strong, nullable) GTLRCompute_SecurityPolicyRuleMatcher *match;

/**
 *  If set to true, the specified action is not enforced.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *preview;

/**
 *  An integer indicating the priority of a rule in the list. The priority must
 *  be a positive value between 0 and 2147483647. Rules are evaluated from
 *  highest to lowest priority where 0 is the highest priority and 2147483647 is
 *  the lowest priority.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *priority;

/**
 *  Must be specified if the action is "rate_based_ban" or "throttle". Cannot be
 *  specified for any other actions.
 */
@property(nonatomic, strong, nullable) GTLRCompute_SecurityPolicyRuleRateLimitOptions *rateLimitOptions;

/**
 *  Parameters defining the redirect action. Cannot be specified for any other
 *  actions.
 */
@property(nonatomic, strong, nullable) GTLRCompute_SecurityPolicyRuleRedirectOptions *redirectOptions;

@end


/**
 *  GTLRCompute_SecurityPolicyRuleHttpHeaderAction
 */
@interface GTLRCompute_SecurityPolicyRuleHttpHeaderAction : GTLRObject

/**
 *  The list of request headers to add or overwrite if they're already present.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SecurityPolicyRuleHttpHeaderActionHttpHeaderOption *> *requestHeadersToAdds;

@end


/**
 *  GTLRCompute_SecurityPolicyRuleHttpHeaderActionHttpHeaderOption
 */
@interface GTLRCompute_SecurityPolicyRuleHttpHeaderActionHttpHeaderOption : GTLRObject

/** The name of the header to set. */
@property(nonatomic, copy, nullable) NSString *headerName;

/** The value to set the named header to. */
@property(nonatomic, copy, nullable) NSString *headerValue;

@end


/**
 *  Represents a match condition that incoming traffic is evaluated against.
 *  Exactly one field must be specified.
 */
@interface GTLRCompute_SecurityPolicyRuleMatcher : GTLRObject

/**
 *  The configuration options available when specifying versioned_expr. This
 *  field must be specified if versioned_expr is specified and cannot be
 *  specified if versioned_expr is not specified.
 */
@property(nonatomic, strong, nullable) GTLRCompute_SecurityPolicyRuleMatcherConfig *config;

/**
 *  User defined CEVAL expression. A CEVAL expression is used to specify match
 *  criteria such as origin.ip, source.region_code and contents in the request
 *  header.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Expr *expr;

/**
 *  Preconfigured versioned expression. If this field is specified, config must
 *  also be specified. Available preconfigured expressions along with their
 *  requirements are: SRC_IPS_V1 - must specify the corresponding src_ip_range
 *  field in config.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SecurityPolicyRuleMatcher_VersionedExpr_SrcIpsV1
 *        Matches the source IP address of a request to the IP ranges supplied
 *        in config. (Value: "SRC_IPS_V1")
 */
@property(nonatomic, copy, nullable) NSString *versionedExpr;

@end


/**
 *  GTLRCompute_SecurityPolicyRuleMatcherConfig
 */
@interface GTLRCompute_SecurityPolicyRuleMatcherConfig : GTLRObject

/** CIDR IP address range. Maximum number of src_ip_ranges allowed is 10. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *srcIpRanges;

@end


/**
 *  GTLRCompute_SecurityPolicyRuleRateLimitOptions
 */
@interface GTLRCompute_SecurityPolicyRuleRateLimitOptions : GTLRObject

/**
 *  Can only be specified if the action for the rule is "rate_based_ban". If
 *  specified, determines the time (in seconds) the traffic will continue to be
 *  banned by the rate limit after the rate falls below the threshold.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *banDurationSec;

/**
 *  Can only be specified if the action for the rule is "rate_based_ban". If
 *  specified, the key will be banned for the configured 'ban_duration_sec' when
 *  the number of requests that exceed the 'rate_limit_threshold' also exceed
 *  this 'ban_threshold'.
 */
@property(nonatomic, strong, nullable) GTLRCompute_SecurityPolicyRuleRateLimitOptionsThreshold *banThreshold;

/**
 *  Action to take for requests that are under the configured rate limit
 *  threshold. Valid option is "allow" only.
 */
@property(nonatomic, copy, nullable) NSString *conformAction;

/**
 *  Determines the key to enforce the rate_limit_threshold on. Possible values
 *  are: - ALL: A single rate limit threshold is applied to all the requests
 *  matching this rule. This is the default value if "enforceOnKey" is not
 *  configured. - IP: The source IP address of the request is the key. Each IP
 *  has this limit enforced separately. - HTTP_HEADER: The value of the HTTP
 *  header whose name is configured under "enforceOnKeyName". The key value is
 *  truncated to the first 128 bytes of the header value. If no such header is
 *  present in the request, the key type defaults to ALL. - XFF_IP: The first IP
 *  address (i.e. the originating client IP address) specified in the list of
 *  IPs under X-Forwarded-For HTTP header. If no such header is present or the
 *  value is not a valid IP, the key defaults to the source IP address of the
 *  request i.e. key type IP. - HTTP_COOKIE: The value of the HTTP cookie whose
 *  name is configured under "enforceOnKeyName". The key value is truncated to
 *  the first 128 bytes of the cookie value. If no such cookie is present in the
 *  request, the key type defaults to ALL. - HTTP_PATH: The URL path of the HTTP
 *  request. The key value is truncated to the first 128 bytes. - SNI: Server
 *  name indication in the TLS session of the HTTPS request. The key value is
 *  truncated to the first 128 bytes. The key type defaults to ALL on a HTTP
 *  session. - REGION_CODE: The country/region from which the request
 *  originates.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_All
 *        Value "ALL"
 *    @arg @c kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_HttpCookie
 *        Value "HTTP_COOKIE"
 *    @arg @c kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_HttpHeader
 *        Value "HTTP_HEADER"
 *    @arg @c kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_HttpPath
 *        Value "HTTP_PATH"
 *    @arg @c kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_Ip
 *        Value "IP"
 *    @arg @c kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_RegionCode
 *        Value "REGION_CODE"
 *    @arg @c kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_Sni
 *        Value "SNI"
 *    @arg @c kGTLRCompute_SecurityPolicyRuleRateLimitOptions_EnforceOnKey_XffIp
 *        Value "XFF_IP"
 */
@property(nonatomic, copy, nullable) NSString *enforceOnKey;

/**
 *  Rate limit key name applicable only for the following key types: HTTP_HEADER
 *  -- Name of the HTTP header whose value is taken as the key value.
 *  HTTP_COOKIE -- Name of the HTTP cookie whose value is taken as the key
 *  value.
 */
@property(nonatomic, copy, nullable) NSString *enforceOnKeyName;

/**
 *  Action to take for requests that are above the configured rate limit
 *  threshold, to either deny with a specified HTTP response code, or redirect
 *  to a different endpoint. Valid options are "deny(status)", where valid
 *  values for status are 403, 404, 429, and 502, and "redirect" where the
 *  redirect parameters come from exceedRedirectOptions below.
 */
@property(nonatomic, copy, nullable) NSString *exceedAction;

/**
 *  Parameters defining the redirect action that is used as the exceed action.
 *  Cannot be specified if the exceed action is not redirect.
 */
@property(nonatomic, strong, nullable) GTLRCompute_SecurityPolicyRuleRedirectOptions *exceedRedirectOptions;

/** Threshold at which to begin ratelimiting. */
@property(nonatomic, strong, nullable) GTLRCompute_SecurityPolicyRuleRateLimitOptionsThreshold *rateLimitThreshold;

@end


/**
 *  GTLRCompute_SecurityPolicyRuleRateLimitOptionsThreshold
 */
@interface GTLRCompute_SecurityPolicyRuleRateLimitOptionsThreshold : GTLRObject

/**
 *  Number of HTTP(S) requests for calculating the threshold.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *count;

/**
 *  Interval over which the threshold is computed.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *intervalSec;

@end


/**
 *  GTLRCompute_SecurityPolicyRuleRedirectOptions
 */
@interface GTLRCompute_SecurityPolicyRuleRedirectOptions : GTLRObject

/**
 *  Target for the redirect action. This is required if the type is EXTERNAL_302
 *  and cannot be specified for GOOGLE_RECAPTCHA.
 */
@property(nonatomic, copy, nullable) NSString *target;

/**
 *  Type of the redirect action.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SecurityPolicyRuleRedirectOptions_Type_External302
 *        Value "EXTERNAL_302"
 *    @arg @c kGTLRCompute_SecurityPolicyRuleRedirectOptions_Type_GoogleRecaptcha
 *        Value "GOOGLE_RECAPTCHA"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  The authentication and authorization settings for a BackendService.
 */
@interface GTLRCompute_SecuritySettings : GTLRObject

/**
 *  Optional. A URL referring to a networksecurity.ClientTlsPolicy resource that
 *  describes how clients should authenticate with this service's backends.
 *  clientTlsPolicy only applies to a global BackendService with the
 *  loadBalancingScheme set to INTERNAL_SELF_MANAGED. If left blank,
 *  communications are not encrypted. Note: This field currently has no impact.
 */
@property(nonatomic, copy, nullable) NSString *clientTlsPolicy;

/**
 *  Optional. A list of Subject Alternative Names (SANs) that the client
 *  verifies during a mutual TLS handshake with an server/endpoint for this
 *  BackendService. When the server presents its X.509 certificate to the
 *  client, the client inspects the certificate's subjectAltName field. If the
 *  field contains one of the specified values, the communication continues.
 *  Otherwise, it fails. This additional check enables the client to verify that
 *  the server is authorized to run the requested service. Note that the
 *  contents of the server certificate's subjectAltName field are configured by
 *  the Public Key Infrastructure which provisions server identities. Only
 *  applies to a global BackendService with loadBalancingScheme set to
 *  INTERNAL_SELF_MANAGED. Only applies when BackendService has an attached
 *  clientTlsPolicy with clientCertificate (mTLS mode). Note: This field
 *  currently has no impact.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *subjectAltNames;

@end


/**
 *  An instance serial console output.
 */
@interface GTLRCompute_SerialPortOutput : GTLRObject

/** [Output Only] The contents of the console output. */
@property(nonatomic, copy, nullable) NSString *contents;

/**
 *  [Output Only] Type of the resource. Always compute#serialPortOutput for
 *  serial port output.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] The position of the next byte of content, regardless of
 *  whether the content exists, following the output returned in the `contents`
 *  property. Use this value in the next request as the start parameter.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *next;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  The starting byte position of the output that was returned. This should
 *  match the start parameter sent with the request. If the serial console
 *  output exceeds the size of the buffer (1 MB), older output is overwritten by
 *  newer content. The output start value will indicate the byte position of the
 *  output that was returned, which might be different than the `start` value
 *  that was specified in the request.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *start;

@end


/**
 *  GTLRCompute_ServerBinding
 */
@interface GTLRCompute_ServerBinding : GTLRObject

/**
 *  type
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ServerBinding_Type_RestartNodeOnAnyServer Node may
 *        associate with any physical server over its lifetime. (Value:
 *        "RESTART_NODE_ON_ANY_SERVER")
 *    @arg @c kGTLRCompute_ServerBinding_Type_RestartNodeOnMinimalServers Node
 *        may associate with minimal physical servers over its lifetime. (Value:
 *        "RESTART_NODE_ON_MINIMAL_SERVERS")
 *    @arg @c kGTLRCompute_ServerBinding_Type_ServerBindingTypeUnspecified Value
 *        "SERVER_BINDING_TYPE_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  A service account.
 */
@interface GTLRCompute_ServiceAccount : GTLRObject

/** Email address of the service account. */
@property(nonatomic, copy, nullable) NSString *email;

/** The list of scopes to be made available for this service account. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *scopes;

@end


/**
 *  Represents a ServiceAttachment resource. A service attachment represents a
 *  service that a producer has exposed. It encapsulates the load balancer which
 *  fronts the service runs and a list of NAT IP ranges that the producers uses
 *  to represent the consumers connecting to the service. next tag = 20
 */
@interface GTLRCompute_ServiceAttachment : GTLRObject

/**
 *  [Output Only] An array of connections for all the consumers connected to
 *  this service attachment.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ServiceAttachmentConnectedEndpoint *> *connectedEndpoints;

/**
 *  The connection preference of service attachment. The value can be set to
 *  ACCEPT_AUTOMATIC. An ACCEPT_AUTOMATIC service attachment is one that always
 *  accepts the connection from consumer forwarding rules.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ServiceAttachment_ConnectionPreference_AcceptAutomatic
 *        Value "ACCEPT_AUTOMATIC"
 *    @arg @c kGTLRCompute_ServiceAttachment_ConnectionPreference_AcceptManual
 *        Value "ACCEPT_MANUAL"
 *    @arg @c kGTLRCompute_ServiceAttachment_ConnectionPreference_ConnectionPreferenceUnspecified
 *        Value "CONNECTION_PREFERENCE_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *connectionPreference;

/** Projects that are allowed to connect to this service attachment. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ServiceAttachmentConsumerProjectLimit *> *consumerAcceptLists;

/**
 *  Projects that are not allowed to connect to this service attachment. The
 *  project can be specified using its id or number.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *consumerRejectLists;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  If specified, the domain name will be used during the integration between
 *  the PSC connected endpoints and the Cloud DNS. For example, this is a valid
 *  domain name: "p.mycompany.com.". Current max number of domain names
 *  supported is 1.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *domainNames;

/**
 *  If true, enable the proxy protocol which is for supplying client TCP/IP
 *  address data in TCP connections that traverse proxies on their way to
 *  destination servers.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableProxyProtocol;

/**
 *  Fingerprint of this resource. A hash of the contents stored in this object.
 *  This field is used in optimistic locking. This field will be ignored when
 *  inserting a ServiceAttachment. An up-to-date fingerprint must be provided in
 *  order to patch/update the ServiceAttachment; otherwise, the request will
 *  fail with error 412 conditionNotMet. To see the latest fingerprint, make a
 *  get() request to retrieve the ServiceAttachment.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] The unique identifier for the resource type. The server
 *  generates this identifier.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#serviceAttachment for
 *  service attachments.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  An array of URLs where each entry is the URL of a subnet provided by the
 *  service producer to use for NAT in this service attachment.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *natSubnets;

/**
 *  The URL of a forwarding rule with loadBalancingScheme INTERNAL* that is
 *  serving the endpoint identified by this service attachment.
 */
@property(nonatomic, copy, nullable) NSString *producerForwardingRule;

/**
 *  [Output Only] An 128-bit global unique ID of the PSC service attachment.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Uint128 *pscServiceAttachmentId;

/**
 *  [Output Only] URL of the region where the service attachment resides. This
 *  field applies only to the region resource. You must specify this field as
 *  part of the HTTP request URL. It is not settable as a field in the request
 *  body.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  The URL of a service serving the endpoint identified by this service
 *  attachment.
 */
@property(nonatomic, copy, nullable) NSString *targetService;

@end


/**
 *  Contains a list of ServiceAttachmentsScopedList.
 */
@interface GTLRCompute_ServiceAttachmentAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of ServiceAttachmentsScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_ServiceAttachmentAggregatedList_Items *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_ServiceAttachmentAggregatedList_Warning *warning;

@end


/**
 *  A list of ServiceAttachmentsScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_ServiceAttachmentsScopedList. Use @c -additionalJSONKeys
 *        and @c -additionalPropertyForName: to get the list of properties and
 *        then fetch them; or @c -additionalProperties to fetch them all at
 *        once.
 */
@interface GTLRCompute_ServiceAttachmentAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_ServiceAttachmentAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ServiceAttachmentAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ServiceAttachmentAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ServiceAttachmentAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_ServiceAttachmentAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  [Output Only] A connection connected to this service attachment.
 */
@interface GTLRCompute_ServiceAttachmentConnectedEndpoint : GTLRObject

/** The url of a connected endpoint. */
@property(nonatomic, copy, nullable) NSString *endpoint;

/**
 *  The PSC connection id of the connected endpoint.
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *pscConnectionId;

/**
 *  The status of a connected endpoint to this service attachment.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_Accepted
 *        The connection has been accepted by the producer. (Value: "ACCEPTED")
 *    @arg @c kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_Closed The
 *        connection has been closed by the producer. (Value: "CLOSED")
 *    @arg @c kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_NeedsAttention
 *        The connection has been accepted by the producer, but the producer
 *        needs to take further action before the forwarding rule can serve
 *        traffic. (Value: "NEEDS_ATTENTION")
 *    @arg @c kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_Pending The
 *        connection is pending acceptance by the producer. (Value: "PENDING")
 *    @arg @c kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_Rejected
 *        The consumer is still connected but not using the connection. (Value:
 *        "REJECTED")
 *    @arg @c kGTLRCompute_ServiceAttachmentConnectedEndpoint_Status_StatusUnspecified
 *        Value "STATUS_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  GTLRCompute_ServiceAttachmentConsumerProjectLimit
 */
@interface GTLRCompute_ServiceAttachmentConsumerProjectLimit : GTLRObject

/**
 *  The value of the limit to set.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *connectionLimit;

/** The project id or number for the project to set the limit for. */
@property(nonatomic, copy, nullable) NSString *projectIdOrNum;

@end


/**
 *  GTLRCompute_ServiceAttachmentList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_ServiceAttachmentList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of ServiceAttachment resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ServiceAttachment *> *items;

/**
 *  [Output Only] Type of the resource. Always compute#serviceAttachment for
 *  service attachments.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_ServiceAttachmentList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_ServiceAttachmentList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ServiceAttachmentList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ServiceAttachmentList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ServiceAttachmentList_Warning_Data_Item
 */
@interface GTLRCompute_ServiceAttachmentList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_ServiceAttachmentsScopedList
 */
@interface GTLRCompute_ServiceAttachmentsScopedList : GTLRObject

/** A list of ServiceAttachments contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ServiceAttachment *> *serviceAttachments;

/**
 *  Informational warning which replaces the list of service attachments when
 *  the list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ServiceAttachmentsScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of service attachments when
 *  the list is empty.
 */
@interface GTLRCompute_ServiceAttachmentsScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ServiceAttachmentsScopedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ServiceAttachmentsScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ServiceAttachmentsScopedList_Warning_Data_Item
 */
@interface GTLRCompute_ServiceAttachmentsScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  The share setting for reservations and sole tenancy node groups.
 */
@interface GTLRCompute_ShareSettings : GTLRObject

/**
 *  A map of project id and project config. This is only valid when share_type's
 *  value is SPECIFIC_PROJECTS.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ShareSettings_ProjectMap *projectMap;

/**
 *  Type of sharing for this shared-reservation
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ShareSettings_ShareType_Local Default value. (Value:
 *        "LOCAL")
 *    @arg @c kGTLRCompute_ShareSettings_ShareType_Organization
 *        Shared-reservation is open to entire Organization (Value:
 *        "ORGANIZATION")
 *    @arg @c kGTLRCompute_ShareSettings_ShareType_ShareTypeUnspecified Default
 *        value. This value is unused. (Value: "SHARE_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCompute_ShareSettings_ShareType_SpecificProjects
 *        Shared-reservation is open to specific projects (Value:
 *        "SPECIFIC_PROJECTS")
 */
@property(nonatomic, copy, nullable) NSString *shareType;

@end


/**
 *  A map of project id and project config. This is only valid when share_type's
 *  value is SPECIFIC_PROJECTS.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_ShareSettingsProjectConfig. Use @c -additionalJSONKeys and
 *        @c -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_ShareSettings_ProjectMap : GTLRObject
@end


/**
 *  Config for each project in the share settings.
 */
@interface GTLRCompute_ShareSettingsProjectConfig : GTLRObject

/**
 *  The project ID, should be same as the key of this project config in the
 *  parent map.
 */
@property(nonatomic, copy, nullable) NSString *projectId;

@end


/**
 *  A set of Shielded Instance options.
 */
@interface GTLRCompute_ShieldedInstanceConfig : GTLRObject

/**
 *  Defines whether the instance has integrity monitoring enabled. Enabled by
 *  default.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableIntegrityMonitoring;

/**
 *  Defines whether the instance has Secure Boot enabled. Disabled by default.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableSecureBoot;

/**
 *  Defines whether the instance has the vTPM enabled. Enabled by default.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableVtpm;

@end


/**
 *  A Shielded Instance Identity.
 */
@interface GTLRCompute_ShieldedInstanceIdentity : GTLRObject

/**
 *  An Endorsement Key (EK) made by the RSA 2048 algorithm issued to the
 *  Shielded Instance's vTPM.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ShieldedInstanceIdentityEntry *encryptionKey;

/**
 *  [Output Only] Type of the resource. Always compute#shieldedInstanceIdentity
 *  for shielded Instance identity entry.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  An Attestation Key (AK) made by the RSA 2048 algorithm issued to the
 *  Shielded Instance's vTPM.
 */
@property(nonatomic, strong, nullable) GTLRCompute_ShieldedInstanceIdentityEntry *signingKey;

@end


/**
 *  A Shielded Instance Identity Entry.
 */
@interface GTLRCompute_ShieldedInstanceIdentityEntry : GTLRObject

/** A PEM-encoded X.509 certificate. This field can be empty. */
@property(nonatomic, copy, nullable) NSString *ekCert;

/** A PEM-encoded public key. */
@property(nonatomic, copy, nullable) NSString *ekPub;

@end


/**
 *  The policy describes the baseline against which Instance boot integrity is
 *  measured.
 */
@interface GTLRCompute_ShieldedInstanceIntegrityPolicy : GTLRObject

/**
 *  Updates the integrity policy baseline using the measurements from the VM
 *  instance's most recent boot.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *updateAutoLearnPolicy;

@end


/**
 *  Represents a customer-supplied Signing Key used by Cloud CDN Signed URLs
 */
@interface GTLRCompute_SignedUrlKey : GTLRObject

/**
 *  Name of the key. The name must be 1-63 characters long, and comply with
 *  RFC1035. Specifically, the name must be 1-63 characters long and match the
 *  regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
 *  character must be a lowercase letter, and all following characters must be a
 *  dash, lowercase letter, or digit, except the last character, which cannot be
 *  a dash.
 */
@property(nonatomic, copy, nullable) NSString *keyName;

/**
 *  128-bit key value used for signing the URL. The key value must be a valid
 *  RFC 4648 Section 5 base64url encoded string.
 */
@property(nonatomic, copy, nullable) NSString *keyValue;

@end


/**
 *  Represents a Persistent Disk Snapshot resource. You can use snapshots to
 *  back up data on a regular interval. For more information, read Creating
 *  persistent disk snapshots.
 */
@interface GTLRCompute_Snapshot : GTLRObject

/**
 *  [Output Only] The architecture of the snapshot. Valid values are ARM64 or
 *  X86_64.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Snapshot_Architecture_ArchitectureUnspecified Default
 *        value indicating Architecture is not set. (Value:
 *        "ARCHITECTURE_UNSPECIFIED")
 *    @arg @c kGTLRCompute_Snapshot_Architecture_Arm64 Machines with
 *        architecture ARM64 (Value: "ARM64")
 *    @arg @c kGTLRCompute_Snapshot_Architecture_X8664 Machines with
 *        architecture X86_64 (Value: "X86_64")
 */
@property(nonatomic, copy, nullable) NSString *architecture;

/**
 *  [Output Only] Set to true if snapshots are automatically created by applying
 *  resource policy on the target disk.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *autoCreated;

/**
 *  Creates the new snapshot in the snapshot chain labeled with the specified
 *  name. The chain name must be 1-63 characters long and comply with RFC1035.
 *  This is an uncommon option only for advanced service owners who needs to
 *  create separate snapshot chains, for example, for chargeback tracking. When
 *  you describe your snapshot resource, this field is visible only if it has a
 *  non-empty value.
 */
@property(nonatomic, copy, nullable) NSString *chainName;

/**
 *  [Output Only] Size in bytes of the snapshot at creation time.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *creationSizeBytes;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] Size of the source disk, specified in GB.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *diskSizeGb;

/**
 *  [Output Only] Number of bytes downloaded to restore a snapshot to a disk.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *downloadBytes;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#snapshot for Snapshot
 *  resources.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  A fingerprint for the labels being applied to this snapshot, which is
 *  essentially a hash of the labels set used for optimistic locking. The
 *  fingerprint is initially generated by Compute Engine and changes after every
 *  request to modify or update labels. You must always provide an up-to-date
 *  fingerprint hash in order to update or change labels, otherwise the request
 *  will fail with error 412 conditionNotMet. To see the latest fingerprint,
 *  make a get() request to retrieve a snapshot.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *labelFingerprint;

/**
 *  Labels to apply to this snapshot. These can be later modified by the
 *  setLabels method. Label values may be empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Snapshot_Labels *labels;

/**
 *  [Output Only] Integer license codes indicating which licenses are attached
 *  to this snapshot.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSArray<NSNumber *> *licenseCodes;

/**
 *  [Output Only] A list of public visible licenses that apply to this snapshot.
 *  This can be because the original image had licenses attached (such as a
 *  Windows image).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *licenses;

/**
 *  An opaque location hint used to place the snapshot close to other resources.
 *  This field is for use by internal tools that use the public API.
 */
@property(nonatomic, copy, nullable) NSString *locationHint;

/**
 *  Name of the resource; provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  [Output Only] Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *satisfiesPzs;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  Encrypts the snapshot using a customer-supplied encryption key. After you
 *  encrypt a snapshot using a customer-supplied key, you must provide the same
 *  key if you use the snapshot later. For example, you must provide the
 *  encryption key when you create a disk from the encrypted snapshot in a
 *  future request. Customer-supplied encryption keys do not protect access to
 *  metadata of the snapshot. If you do not provide an encryption key when
 *  creating the snapshot, then the snapshot will be encrypted using an
 *  automatically generated key and you do not need to provide a key to use the
 *  snapshot later.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *snapshotEncryptionKey;

/**
 *  Indicates the type of the snapshot.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Snapshot_SnapshotType_Archive Value "ARCHIVE"
 *    @arg @c kGTLRCompute_Snapshot_SnapshotType_Standard Value "STANDARD"
 */
@property(nonatomic, copy, nullable) NSString *snapshotType;

/** The source disk used to create this snapshot. */
@property(nonatomic, copy, nullable) NSString *sourceDisk;

/**
 *  The customer-supplied encryption key of the source disk. Required if the
 *  source disk is protected by a customer-supplied encryption key.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *sourceDiskEncryptionKey;

/**
 *  [Output Only] The ID value of the disk used to create this snapshot. This
 *  value may be used to determine whether the snapshot was taken from the
 *  current or a previous instance of a given disk name.
 */
@property(nonatomic, copy, nullable) NSString *sourceDiskId;

/**
 *  [Output Only] URL of the resource policy which created this scheduled
 *  snapshot.
 */
@property(nonatomic, copy, nullable) NSString *sourceSnapshotSchedulePolicy;

/**
 *  [Output Only] ID of the resource policy which created this scheduled
 *  snapshot.
 */
@property(nonatomic, copy, nullable) NSString *sourceSnapshotSchedulePolicyId;

/**
 *  [Output Only] The status of the snapshot. This can be CREATING, DELETING,
 *  FAILED, READY, or UPLOADING.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Snapshot_Status_Creating Snapshot creation is in
 *        progress. (Value: "CREATING")
 *    @arg @c kGTLRCompute_Snapshot_Status_Deleting Snapshot is currently being
 *        deleted. (Value: "DELETING")
 *    @arg @c kGTLRCompute_Snapshot_Status_Failed Snapshot creation failed.
 *        (Value: "FAILED")
 *    @arg @c kGTLRCompute_Snapshot_Status_Ready Snapshot has been created
 *        successfully. (Value: "READY")
 *    @arg @c kGTLRCompute_Snapshot_Status_Uploading Snapshot is being uploaded.
 *        (Value: "UPLOADING")
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  [Output Only] A size of the storage used by the snapshot. As snapshots share
 *  storage, this number is expected to change with snapshot creation/deletion.
 *
 *  Uses NSNumber of longLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *storageBytes;

/**
 *  [Output Only] An indicator whether storageBytes is in a stable state or it
 *  is being adjusted as a result of shared storage reallocation. This status
 *  can either be UPDATING, meaning the size of the snapshot is being updated,
 *  or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Snapshot_StorageBytesStatus_Updating Value "UPDATING"
 *    @arg @c kGTLRCompute_Snapshot_StorageBytesStatus_UpToDate Value
 *        "UP_TO_DATE"
 */
@property(nonatomic, copy, nullable) NSString *storageBytesStatus;

/**
 *  Cloud Storage bucket storage location of the snapshot (regional or
 *  multi-regional).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *storageLocations;

@end


/**
 *  Labels to apply to this snapshot. These can be later modified by the
 *  setLabels method. Label values may be empty.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_Snapshot_Labels : GTLRObject
@end


/**
 *  Contains a list of Snapshot resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_SnapshotList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Snapshot resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Snapshot *> *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_SnapshotList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_SnapshotList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_NoResultsOnPage No results
 *        are present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_SnapshotList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SnapshotList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_SnapshotList_Warning_Data_Item
 */
@interface GTLRCompute_SnapshotList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_SourceDiskEncryptionKey
 */
@interface GTLRCompute_SourceDiskEncryptionKey : GTLRObject

/**
 *  The customer-supplied encryption key of the source disk. Required if the
 *  source disk is protected by a customer-supplied encryption key.
 */
@property(nonatomic, strong, nullable) GTLRCompute_CustomerEncryptionKey *diskEncryptionKey;

/**
 *  URL of the disk attached to the source instance. This can be a full or valid
 *  partial URL. For example, the following are valid values: -
 *  https://www.googleapis.com/compute/v1/projects/project/zones/zone
 *  /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk
 */
@property(nonatomic, copy, nullable) NSString *sourceDisk;

@end


/**
 *  A specification of the parameters to use when creating the instance template
 *  from a source instance.
 */
@interface GTLRCompute_SourceInstanceParams : GTLRObject

/**
 *  Attached disks configuration. If not provided, defaults are applied: For
 *  boot disk and any other R/W disks, new custom images will be created from
 *  each disk. For read-only disks, they will be attached in read-only mode.
 *  Local SSD disks will be created as blank volumes.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_DiskInstantiationConfig *> *diskConfigs;

@end


/**
 *  DEPRECATED: Please use compute#instanceProperties instead. New properties
 *  will not be added to this field.
 */
@interface GTLRCompute_SourceInstanceProperties : GTLRObject

/**
 *  Enables instances created based on this machine image to send packets with
 *  source IP addresses other than their own and receive packets with
 *  destination IP addresses other than their own. If these instances will be
 *  used as an IP gateway or it will be set as the next-hop in a Route resource,
 *  specify true. If unsure, leave this set to false. See the Enable IP
 *  forwarding documentation for more information.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *canIpForward;

/**
 *  Whether the instance created from this machine image should be protected
 *  against deletion.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *deletionProtection;

/**
 *  An optional text description for the instances that are created from this
 *  machine image.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  An array of disks that are associated with the instances that are created
 *  from this machine image.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SavedAttachedDisk *> *disks;

/**
 *  A list of guest accelerator cards' type and count to use for instances
 *  created from this machine image.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_AcceleratorConfig *> *guestAccelerators;

/**
 *  KeyRevocationActionType of the instance. Supported options are "STOP" and
 *  "NONE". The default value is "NONE" if it is not specified.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SourceInstanceProperties_KeyRevocationActionType_KeyRevocationActionTypeUnspecified
 *        Default value. This value is unused. (Value:
 *        "KEY_REVOCATION_ACTION_TYPE_UNSPECIFIED")
 *    @arg @c kGTLRCompute_SourceInstanceProperties_KeyRevocationActionType_None
 *        Indicates user chose no operation. (Value: "NONE")
 *    @arg @c kGTLRCompute_SourceInstanceProperties_KeyRevocationActionType_Stop
 *        Indicates user chose to opt for VM shutdown on key revocation. (Value:
 *        "STOP")
 */
@property(nonatomic, copy, nullable) NSString *keyRevocationActionType;

/** Labels to apply to instances that are created from this machine image. */
@property(nonatomic, strong, nullable) GTLRCompute_SourceInstanceProperties_Labels *labels;

/**
 *  The machine type to use for instances that are created from this machine
 *  image.
 */
@property(nonatomic, copy, nullable) NSString *machineType;

/**
 *  The metadata key/value pairs to assign to instances that are created from
 *  this machine image. These pairs can consist of custom metadata or predefined
 *  keys. See Project and instance metadata for more information.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Metadata *metadata;

/**
 *  Minimum cpu/platform to be used by instances created from this machine
 *  image. The instance may be scheduled on the specified or newer cpu/platform.
 *  Applicable values are the friendly names of CPU platforms, such as
 *  minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge". For
 *  more information, read Specifying a Minimum CPU Platform.
 */
@property(nonatomic, copy, nullable) NSString *minCpuPlatform;

/** An array of network access configurations for this interface. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_NetworkInterface *> *networkInterfaces;

/**
 *  Specifies the scheduling options for the instances that are created from
 *  this machine image.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Scheduling *scheduling;

/**
 *  A list of service accounts with specified scopes. Access tokens for these
 *  service accounts are available to the instances that are created from this
 *  machine image. Use metadata queries to obtain the access tokens for these
 *  instances.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ServiceAccount *> *serviceAccounts;

/**
 *  A list of tags to apply to the instances that are created from this machine
 *  image. The tags identify valid sources or targets for network firewalls. The
 *  setTags method can modify this list of tags. Each tag within the list must
 *  comply with RFC1035.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Tags *tags;

@end


/**
 *  Labels to apply to instances that are created from this machine image.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_SourceInstanceProperties_Labels : GTLRObject
@end


/**
 *  Represents an SSL Certificate resource. Google Compute Engine has two SSL
 *  Certificate resources: *
 *  [Global](/compute/docs/reference/rest/v1/sslCertificates) *
 *  [Regional](/compute/docs/reference/rest/v1/regionSslCertificates) The
 *  sslCertificates are used by: - external HTTPS load balancers - SSL proxy
 *  load balancers The regionSslCertificates are used by internal HTTPS load
 *  balancers. Optionally, certificate file contents that you upload can contain
 *  a set of up to five PEM-encoded certificates. The API call creates an object
 *  (sslCertificate) that holds this data. You can use SSL keys and certificates
 *  to secure connections to a load balancer. For more information, read
 *  Creating and using SSL certificates, SSL certificates quotas and limits, and
 *  Troubleshooting SSL certificates.
 */
@interface GTLRCompute_SslCertificate : GTLRObject

/**
 *  A value read into memory from a certificate file. The certificate file must
 *  be in PEM format. The certificate chain must be no greater than 5 certs
 *  long. The chain must include at least one intermediate cert.
 */
@property(nonatomic, copy, nullable) NSString *certificate;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** [Output Only] Expire time of the certificate. RFC3339 */
@property(nonatomic, copy, nullable) NSString *expireTime;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#sslCertificate for SSL
 *  certificates.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/** Configuration and status of a managed SSL certificate. */
@property(nonatomic, strong, nullable) GTLRCompute_SslCertificateManagedSslCertificate *managed;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  A value read into memory from a write-only private key file. The private key
 *  file must be in PEM format. For security, only insert requests include this
 *  field.
 */
@property(nonatomic, copy, nullable) NSString *privateKey;

/**
 *  [Output Only] URL of the region where the regional SSL Certificate resides.
 *  This field is not applicable to global SSL Certificate.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** Configuration and status of a self-managed SSL certificate. */
@property(nonatomic, strong, nullable) GTLRCompute_SslCertificateSelfManagedSslCertificate *selfManaged;

/**
 *  [Output Only] Domains associated with the certificate via Subject
 *  Alternative Name.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *subjectAlternativeNames;

/**
 *  (Optional) Specifies the type of SSL certificate, either "SELF_MANAGED" or
 *  "MANAGED". If not specified, the certificate is self-managed and the fields
 *  certificate and private_key are used.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SslCertificate_Type_Managed Google-managed
 *        SSLCertificate. (Value: "MANAGED")
 *    @arg @c kGTLRCompute_SslCertificate_Type_SelfManaged Certificate uploaded
 *        by user. (Value: "SELF_MANAGED")
 *    @arg @c kGTLRCompute_SslCertificate_Type_TypeUnspecified Value
 *        "TYPE_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  GTLRCompute_SslCertificateAggregatedList
 */
@interface GTLRCompute_SslCertificateAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of SslCertificatesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_SslCertificateAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#sslCertificateAggregatedList
 *  for lists of SSL Certificates.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_SslCertificateAggregatedList_Warning *warning;

@end


/**
 *  A list of SslCertificatesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_SslCertificatesScopedList. Use @c -additionalJSONKeys and
 *        @c -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_SslCertificateAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_SslCertificateAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_SslCertificateAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SslCertificateAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_SslCertificateAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_SslCertificateAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of SslCertificate resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_SslCertificateList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of SslCertificate resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SslCertificate *> *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_SslCertificateList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_SslCertificateList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_SslCertificateList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SslCertificateList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_SslCertificateList_Warning_Data_Item
 */
@interface GTLRCompute_SslCertificateList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Configuration and status of a managed SSL certificate.
 */
@interface GTLRCompute_SslCertificateManagedSslCertificate : GTLRObject

/**
 *  The domains for which a managed SSL certificate will be generated. Each
 *  Google-managed SSL certificate supports up to the [maximum number of domains
 *  per Google-managed SSL
 *  certificate](/load-balancing/docs/quotas#ssl_certificates).
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *domains;

/**
 *  [Output only] Detailed statuses of the domains specified for managed
 *  certificate resource.
 */
@property(nonatomic, strong, nullable) GTLRCompute_SslCertificateManagedSslCertificate_DomainStatus *domainStatus;

/**
 *  [Output only] Status of the managed certificate resource.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SslCertificateManagedSslCertificate_Status_Active The
 *        certificate management is working, and a certificate has been
 *        provisioned. (Value: "ACTIVE")
 *    @arg @c kGTLRCompute_SslCertificateManagedSslCertificate_Status_ManagedCertificateStatusUnspecified
 *        Value "MANAGED_CERTIFICATE_STATUS_UNSPECIFIED"
 *    @arg @c kGTLRCompute_SslCertificateManagedSslCertificate_Status_Provisioning
 *        The certificate management is working. GCP will attempt to provision
 *        the first certificate. (Value: "PROVISIONING")
 *    @arg @c kGTLRCompute_SslCertificateManagedSslCertificate_Status_ProvisioningFailed
 *        Certificate provisioning failed due to an issue with the DNS or load
 *        balancing configuration. For details of which domain failed, consult
 *        domain_status field. (Value: "PROVISIONING_FAILED")
 *    @arg @c kGTLRCompute_SslCertificateManagedSslCertificate_Status_ProvisioningFailedPermanently
 *        Certificate provisioning failed due to an issue with the DNS or load
 *        balancing configuration. It won't be retried. To try again delete and
 *        create a new managed SslCertificate resource. For details of which
 *        domain failed, consult domain_status field. (Value:
 *        "PROVISIONING_FAILED_PERMANENTLY")
 *    @arg @c kGTLRCompute_SslCertificateManagedSslCertificate_Status_RenewalFailed
 *        Renewal of the certificate has failed due to an issue with the DNS or
 *        load balancing configuration. The existing cert is still serving;
 *        however, it will expire shortly. To provision a renewed certificate,
 *        delete and create a new managed SslCertificate resource. For details
 *        on which domain failed, consult domain_status field. (Value:
 *        "RENEWAL_FAILED")
 */
@property(nonatomic, copy, nullable) NSString *status;

@end


/**
 *  [Output only] Detailed statuses of the domains specified for managed
 *  certificate resource.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_SslCertificateManagedSslCertificate_DomainStatus : GTLRObject
@end


/**
 *  Configuration and status of a self-managed SSL certificate.
 */
@interface GTLRCompute_SslCertificateSelfManagedSslCertificate : GTLRObject

/**
 *  A local certificate file. The certificate must be in PEM format. The
 *  certificate chain must be no greater than 5 certs long. The chain must
 *  include at least one intermediate cert.
 */
@property(nonatomic, copy, nullable) NSString *certificate;

/**
 *  A write-only private key in PEM format. Only insert requests will include
 *  this field.
 */
@property(nonatomic, copy, nullable) NSString *privateKey;

@end


/**
 *  GTLRCompute_SslCertificatesScopedList
 */
@interface GTLRCompute_SslCertificatesScopedList : GTLRObject

/** List of SslCertificates contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SslCertificate *> *sslCertificates;

/**
 *  Informational warning which replaces the list of backend services when the
 *  list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_SslCertificatesScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of backend services when the
 *  list is empty.
 */
@interface GTLRCompute_SslCertificatesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_SslCertificatesScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SslCertificatesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_SslCertificatesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_SslCertificatesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_SSLHealthCheck
 */
@interface GTLRCompute_SSLHealthCheck : GTLRObject

/**
 *  The TCP port number to which the health check prober sends packets. The
 *  default value is 443. Valid values are 1 through 65535.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

/** Not supported. */
@property(nonatomic, copy, nullable) NSString *portName;

/**
 *  Specifies how a port is selected for health checking. Can be one of the
 *  following values: USE_FIXED_PORT: Specifies a port number explicitly using
 *  the port field in the health check. Supported by backend services for
 *  pass-through load balancers and backend services for proxy load balancers.
 *  Not supported by target pools. The health check supports all backends
 *  supported by the backend service provided the backend can be health checked.
 *  For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network
 *  endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported.
 *  USE_SERVING_PORT: Provides an indirect method of specifying the health check
 *  port by referring to the backend service. Only supported by backend services
 *  for proxy load balancers. Not supported by target pools. Not supported by
 *  backend services for pass-through load balancers. Supports all backends that
 *  can be health checked; for example, GCE_VM_IP_PORT network endpoint groups
 *  and instance group backends. For GCE_VM_IP_PORT network endpoint group
 *  backends, the health check uses the port number specified for each endpoint
 *  in the network endpoint group. For instance group backends, the health check
 *  uses the port number determined by looking up the backend service's named
 *  port in the instance group's list of named ports.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SSLHealthCheck_PortSpecification_UseFixedPort The
 *        port number in the health check's port is used for health checking.
 *        Applies to network endpoint group and instance group backends. (Value:
 *        "USE_FIXED_PORT")
 *    @arg @c kGTLRCompute_SSLHealthCheck_PortSpecification_UseNamedPort Not
 *        supported. (Value: "USE_NAMED_PORT")
 *    @arg @c kGTLRCompute_SSLHealthCheck_PortSpecification_UseServingPort For
 *        network endpoint group backends, the health check uses the port number
 *        specified on each endpoint in the network endpoint group. For instance
 *        group backends, the health check uses the port number specified for
 *        the backend service's named port defined in the instance group's named
 *        ports. (Value: "USE_SERVING_PORT")
 */
@property(nonatomic, copy, nullable) NSString *portSpecification;

/**
 *  Specifies the type of proxy header to append before sending data to the
 *  backend, either NONE or PROXY_V1. The default is NONE.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SSLHealthCheck_ProxyHeader_None Value "NONE"
 *    @arg @c kGTLRCompute_SSLHealthCheck_ProxyHeader_ProxyV1 Value "PROXY_V1"
 */
@property(nonatomic, copy, nullable) NSString *proxyHeader;

/**
 *  Instructs the health check prober to send this exact ASCII string, up to
 *  1024 bytes in length, after establishing the TCP connection and SSL
 *  handshake.
 */
@property(nonatomic, copy, nullable) NSString *request;

/**
 *  Creates a content-based SSL health check. In addition to establishing a TCP
 *  connection and the TLS handshake, you can configure the health check to pass
 *  only when the backend sends this exact response ASCII string, up to 1024
 *  bytes in length. For details, see:
 *  https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-ssl-tcp
 */
@property(nonatomic, copy, nullable) NSString *response;

@end


/**
 *  GTLRCompute_SslPoliciesAggregatedList
 */
@interface GTLRCompute_SslPoliciesAggregatedList : GTLRObject

@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of SslPoliciesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_SslPoliciesAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#sslPolicyAggregatedList for
 *  lists of SSL Policies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_SslPoliciesAggregatedList_Warning *warning;

@end


/**
 *  A list of SslPoliciesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_SslPoliciesScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_SslPoliciesAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_SslPoliciesAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_SslPoliciesAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SslPoliciesAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_SslPoliciesAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_SslPoliciesAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_SslPoliciesList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_SslPoliciesList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of SslPolicy resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SslPolicy *> *items;

/**
 *  [Output Only] Type of the resource. Always compute#sslPoliciesList for lists
 *  of sslPolicies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_SslPoliciesList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_SslPoliciesList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_PartialSuccess Success
 *        is reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_ResourceNotDeleted One
 *        or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_SslPoliciesList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SslPoliciesList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_SslPoliciesList_Warning_Data_Item
 */
@interface GTLRCompute_SslPoliciesList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_SslPoliciesListAvailableFeaturesResponse
 */
@interface GTLRCompute_SslPoliciesListAvailableFeaturesResponse : GTLRObject

@property(nonatomic, strong, nullable) NSArray<NSString *> *features;

@end


/**
 *  GTLRCompute_SslPoliciesScopedList
 */
@interface GTLRCompute_SslPoliciesScopedList : GTLRObject

/** A list of SslPolicies contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SslPolicy *> *sslPolicies;

/**
 *  Informational warning which replaces the list of SSL policies when the list
 *  is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_SslPoliciesScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of SSL policies when the list
 *  is empty.
 */
@interface GTLRCompute_SslPoliciesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_SslPoliciesScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SslPoliciesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_SslPoliciesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_SslPoliciesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents an SSL Policy resource. Use SSL policies to control the SSL
 *  features, such as versions and cipher suites, offered by an HTTPS or SSL
 *  Proxy load balancer. For more information, read SSL Policy Concepts.
 */
@interface GTLRCompute_SslPolicy : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  A list of features enabled when the selected profile is CUSTOM. The method
 *  returns the set of features that can be specified in this list. This field
 *  must be empty if the profile is not CUSTOM.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *customFeatures;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** [Output Only] The list of features enabled in the SSL policy. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *enabledFeatures;

/**
 *  Fingerprint of this resource. A hash of the contents stored in this object.
 *  This field is used in optimistic locking. This field will be ignored when
 *  inserting a SslPolicy. An up-to-date fingerprint must be provided in order
 *  to update the SslPolicy, otherwise the request will fail with error 412
 *  conditionNotMet. To see the latest fingerprint, make a get() request to
 *  retrieve an SslPolicy.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output only] Type of the resource. Always compute#sslPolicyfor SSL
 *  policies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  The minimum version of SSL protocol that can be used by the clients to
 *  establish a connection with the load balancer. This can be one of TLS_1_0,
 *  TLS_1_1, TLS_1_2.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SslPolicy_MinTlsVersion_Tls10 TLS 1.0 (Value:
 *        "TLS_1_0")
 *    @arg @c kGTLRCompute_SslPolicy_MinTlsVersion_Tls11 TLS 1.1 (Value:
 *        "TLS_1_1")
 *    @arg @c kGTLRCompute_SslPolicy_MinTlsVersion_Tls12 TLS 1.2 (Value:
 *        "TLS_1_2")
 */
@property(nonatomic, copy, nullable) NSString *minTlsVersion;

/**
 *  Name of the resource. The name must be 1-63 characters long, and comply with
 *  RFC1035. Specifically, the name must be 1-63 characters long and match the
 *  regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first
 *  character must be a lowercase letter, and all following characters must be a
 *  dash, lowercase letter, or digit, except the last character, which cannot be
 *  a dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Profile specifies the set of SSL features that can be used by the load
 *  balancer when negotiating SSL with clients. This can be one of COMPATIBLE,
 *  MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the set of SSL features to
 *  enable must be specified in the customFeatures field.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SslPolicy_Profile_Compatible Compatible profile.
 *        Allows the broadset set of clients, even those which support only
 *        out-of-date SSL features to negotiate with the load balancer. (Value:
 *        "COMPATIBLE")
 *    @arg @c kGTLRCompute_SslPolicy_Profile_Custom Custom profile. Allow only
 *        the set of allowed SSL features specified in the customFeatures field.
 *        (Value: "CUSTOM")
 *    @arg @c kGTLRCompute_SslPolicy_Profile_Modern Modern profile. Supports a
 *        wide set of SSL features, allowing modern clients to negotiate SSL
 *        with the load balancer. (Value: "MODERN")
 *    @arg @c kGTLRCompute_SslPolicy_Profile_Restricted Restricted profile.
 *        Supports a reduced set of SSL features, intended to meet stricter
 *        compliance requirements. (Value: "RESTRICTED")
 */
@property(nonatomic, copy, nullable) NSString *profile;

/**
 *  [Output Only] URL of the region where the regional SSL policy resides. This
 *  field is not applicable to global SSL policies.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] If potential misconfigurations are detected for this SSL
 *  policy, this field will be populated with warning messages.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SslPolicy_Warnings_Item *> *warnings;

@end


/**
 *  GTLRCompute_SslPolicy_Warnings_Item
 */
@interface GTLRCompute_SslPolicy_Warnings_Item : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_PartialSuccess Success
 *        is reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_ResourceNotDeleted One
 *        or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_SslPolicy_Warnings_Item_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SslPolicy_Warnings_Item_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_SslPolicy_Warnings_Item_Data_Item
 */
@interface GTLRCompute_SslPolicy_Warnings_Item_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_SslPolicyReference
 */
@interface GTLRCompute_SslPolicyReference : GTLRObject

/**
 *  URL of the SSL policy resource. Set this to empty string to clear any
 *  existing SSL policy associated with the target proxy resource.
 */
@property(nonatomic, copy, nullable) NSString *sslPolicy;

@end


/**
 *  GTLRCompute_StatefulPolicy
 */
@interface GTLRCompute_StatefulPolicy : GTLRObject

@property(nonatomic, strong, nullable) GTLRCompute_StatefulPolicyPreservedState *preservedState;

@end


/**
 *  Configuration of preserved resources.
 */
@interface GTLRCompute_StatefulPolicyPreservedState : GTLRObject

/**
 *  Disks created on the instances that will be preserved on instance delete,
 *  update, etc. This map is keyed with the device names of the disks.
 */
@property(nonatomic, strong, nullable) GTLRCompute_StatefulPolicyPreservedState_Disks *disks;

@end


/**
 *  Disks created on the instances that will be preserved on instance delete,
 *  update, etc. This map is keyed with the device names of the disks.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_StatefulPolicyPreservedStateDiskDevice. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_StatefulPolicyPreservedState_Disks : GTLRObject
@end


/**
 *  GTLRCompute_StatefulPolicyPreservedStateDiskDevice
 */
@interface GTLRCompute_StatefulPolicyPreservedStateDiskDevice : GTLRObject

/**
 *  These stateful disks will never be deleted during autohealing, update or VM
 *  instance recreate operations. This flag is used to configure if the disk
 *  should be deleted after it is no longer used by the group, e.g. when the
 *  given instance or the whole group is deleted. Note: disks attached in
 *  READ_ONLY mode cannot be auto-deleted.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_StatefulPolicyPreservedStateDiskDevice_AutoDelete_Never
 *        Value "NEVER"
 *    @arg @c kGTLRCompute_StatefulPolicyPreservedStateDiskDevice_AutoDelete_OnPermanentInstanceDeletion
 *        Value "ON_PERMANENT_INSTANCE_DELETION"
 */
@property(nonatomic, copy, nullable) NSString *autoDelete;

@end


/**
 *  Represents a Subnetwork resource. A subnetwork (also known as a subnet) is a
 *  logical partition of a Virtual Private Cloud network with one primary IP
 *  range and zero or more secondary IP ranges. For more information, read
 *  Virtual Private Cloud (VPC) Network.
 */
@interface GTLRCompute_Subnetwork : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource. This field can be set only at resource creation time.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Whether to enable flow logging for this subnetwork. If this field is not
 *  explicitly set, it will not appear in get listings. If not set the default
 *  behavior is determined by the org policy, if there is no org policy
 *  specified, then it will default to disabled. This field isn't supported with
 *  the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enableFlowLogs;

/** The external IPv6 address range that is owned by this subnetwork. */
@property(nonatomic, copy, nullable) NSString *externalIpv6Prefix;

/**
 *  Fingerprint of this resource. A hash of the contents stored in this object.
 *  This field is used in optimistic locking. This field will be ignored when
 *  inserting a Subnetwork. An up-to-date fingerprint must be provided in order
 *  to update the Subnetwork, otherwise the request will fail with error 412
 *  conditionNotMet. To see the latest fingerprint, make a get() request to
 *  retrieve a Subnetwork.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] The gateway address for default routes to reach destination
 *  addresses outside this subnetwork.
 */
@property(nonatomic, copy, nullable) NSString *gatewayAddress;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] The internal IPv6 address range that is assigned to this
 *  subnetwork.
 */
@property(nonatomic, copy, nullable) NSString *internalIpv6Prefix;

/**
 *  The range of internal addresses that are owned by this subnetwork. Provide
 *  this property when you create the subnetwork. For example, 10.0.0.0/8 or
 *  100.64.0.0/10. Ranges must be unique and non-overlapping within a network.
 *  Only IPv4 is supported. This field is set at resource creation time. The
 *  range can be any range listed in the Valid ranges list. The range can be
 *  expanded after creation using expandIpCidrRange.
 */
@property(nonatomic, copy, nullable) NSString *ipCidrRange;

/**
 *  The access type of IPv6 address this subnet holds. It's immutable and can
 *  only be specified during creation or the first time the subnet is updated
 *  into IPV4_IPV6 dual stack.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Subnetwork_Ipv6AccessType_External VMs on this subnet
 *        will be assigned IPv6 addresses that are accessible via the Internet,
 *        as well as the VPC network. (Value: "EXTERNAL")
 *    @arg @c kGTLRCompute_Subnetwork_Ipv6AccessType_Internal VMs on this subnet
 *        will be assigned IPv6 addresses that are only accessible over the VPC
 *        network. (Value: "INTERNAL")
 */
@property(nonatomic, copy, nullable) NSString *ipv6AccessType;

/** [Output Only] This field is for internal use. */
@property(nonatomic, copy, nullable) NSString *ipv6CidrRange;

/**
 *  [Output Only] Type of the resource. Always compute#subnetwork for Subnetwork
 *  resources.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  This field denotes the VPC flow logging options for this subnetwork. If
 *  logging is enabled, logs are exported to Cloud Logging.
 */
@property(nonatomic, strong, nullable) GTLRCompute_SubnetworkLogConfig *logConfig;

/**
 *  The name of the resource, provided by the client when initially creating the
 *  resource. The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  The URL of the network to which this subnetwork belongs, provided by the
 *  client when initially creating the subnetwork. This field can be set only at
 *  resource creation time.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  Whether the VMs in this subnet can access Google services without assigned
 *  external IP addresses. This field can be both set at resource creation time
 *  and updated using setPrivateIpGoogleAccess.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *privateIpGoogleAccess;

/**
 *  This field is for internal use. This field can be both set at resource
 *  creation time and updated using patch.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Subnetwork_PrivateIpv6GoogleAccess_DisableGoogleAccess
 *        Disable private IPv6 access to/from Google services. (Value:
 *        "DISABLE_GOOGLE_ACCESS")
 *    @arg @c kGTLRCompute_Subnetwork_PrivateIpv6GoogleAccess_EnableBidirectionalAccessToGoogle
 *        Bidirectional private IPv6 access to/from Google services. (Value:
 *        "ENABLE_BIDIRECTIONAL_ACCESS_TO_GOOGLE")
 *    @arg @c kGTLRCompute_Subnetwork_PrivateIpv6GoogleAccess_EnableOutboundVmAccessToGoogle
 *        Outbound private IPv6 access from VMs in this subnet to Google
 *        services. (Value: "ENABLE_OUTBOUND_VM_ACCESS_TO_GOOGLE")
 */
@property(nonatomic, copy, nullable) NSString *privateIpv6GoogleAccess;

/**
 *  The purpose of the resource. This field can be either PRIVATE_RFC_1918 or
 *  INTERNAL_HTTPS_LOAD_BALANCER. A subnetwork with purpose set to
 *  INTERNAL_HTTPS_LOAD_BALANCER is a user-created subnetwork that is reserved
 *  for Internal HTTP(S) Load Balancing. If unspecified, the purpose defaults to
 *  PRIVATE_RFC_1918. The enableFlowLogs field isn't supported with the purpose
 *  field set to INTERNAL_HTTPS_LOAD_BALANCER.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Subnetwork_Purpose_InternalHttpsLoadBalancer Subnet
 *        reserved for Internal HTTP(S) Load Balancing. (Value:
 *        "INTERNAL_HTTPS_LOAD_BALANCER")
 *    @arg @c kGTLRCompute_Subnetwork_Purpose_Private Regular user created or
 *        automatically created subnet. (Value: "PRIVATE")
 *    @arg @c kGTLRCompute_Subnetwork_Purpose_PrivateRfc1918 Regular user
 *        created or automatically created subnet. (Value: "PRIVATE_RFC_1918")
 *    @arg @c kGTLRCompute_Subnetwork_Purpose_PrivateServiceConnect Subnetworks
 *        created for Private Service Connect in the producer network. (Value:
 *        "PRIVATE_SERVICE_CONNECT")
 *    @arg @c kGTLRCompute_Subnetwork_Purpose_RegionalManagedProxy Subnetwork
 *        used for Regional Internal/External HTTP(S) Load Balancing. (Value:
 *        "REGIONAL_MANAGED_PROXY")
 */
@property(nonatomic, copy, nullable) NSString *purpose;

/**
 *  URL of the region where the Subnetwork resides. This field can be set only
 *  at resource creation time.
 */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  The role of subnetwork. Currently, this field is only used when purpose =
 *  INTERNAL_HTTPS_LOAD_BALANCER. The value can be set to ACTIVE or BACKUP. An
 *  ACTIVE subnetwork is one that is currently being used for Internal HTTP(S)
 *  Load Balancing. A BACKUP subnetwork is one that is ready to be promoted to
 *  ACTIVE or is currently draining. This field can be updated with a patch
 *  request.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Subnetwork_Role_Active The ACTIVE subnet that is
 *        currently used. (Value: "ACTIVE")
 *    @arg @c kGTLRCompute_Subnetwork_Role_Backup The BACKUP subnet that could
 *        be promoted to ACTIVE. (Value: "BACKUP")
 */
@property(nonatomic, copy, nullable) NSString *role;

/**
 *  An array of configurations for secondary IP ranges for VM instances
 *  contained in this subnetwork. The primary IP of such VM must belong to the
 *  primary ipCidrRange of the subnetwork. The alias IPs may belong to either
 *  primary or secondary ranges. This field can be updated with a patch request.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SubnetworkSecondaryRange *> *secondaryIpRanges;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  The stack type for the subnet. If set to IPV4_ONLY, new VMs in the subnet
 *  are assigned IPv4 addresses only. If set to IPV4_IPV6, new VMs in the subnet
 *  can be assigned both IPv4 and IPv6 addresses. If not specified, IPV4_ONLY is
 *  used. This field can be both set at resource creation time and updated using
 *  patch.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Subnetwork_StackType_Ipv4Ipv6 New VMs in this subnet
 *        can have both IPv4 and IPv6 addresses. (Value: "IPV4_IPV6")
 *    @arg @c kGTLRCompute_Subnetwork_StackType_Ipv4Only New VMs in this subnet
 *        will only be assigned IPv4 addresses. (Value: "IPV4_ONLY")
 */
@property(nonatomic, copy, nullable) NSString *stackType;

/**
 *  [Output Only] The state of the subnetwork, which can be one of the following
 *  values: READY: Subnetwork is created and ready to use DRAINING: only
 *  applicable to subnetworks that have the purpose set to
 *  INTERNAL_HTTPS_LOAD_BALANCER and indicates that connections to the load
 *  balancer are being drained. A subnetwork that is draining cannot be used or
 *  modified until it reaches a status of READY
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Subnetwork_State_Draining Subnetwork is being
 *        drained. (Value: "DRAINING")
 *    @arg @c kGTLRCompute_Subnetwork_State_Ready Subnetwork is ready for use.
 *        (Value: "READY")
 */
@property(nonatomic, copy, nullable) NSString *state;

@end


/**
 *  GTLRCompute_SubnetworkAggregatedList
 */
@interface GTLRCompute_SubnetworkAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of SubnetworksScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_SubnetworkAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#subnetworkAggregatedList for
 *  aggregated lists of subnetworks.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_SubnetworkAggregatedList_Warning *warning;

@end


/**
 *  A list of SubnetworksScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_SubnetworksScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_SubnetworkAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_SubnetworkAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_SubnetworkAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SubnetworkAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_SubnetworkAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_SubnetworkAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of Subnetwork resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_SubnetworkList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Subnetwork resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Subnetwork *> *items;

/**
 *  [Output Only] Type of resource. Always compute#subnetworkList for lists of
 *  subnetworks.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_SubnetworkList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_SubnetworkList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_SubnetworkList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SubnetworkList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_SubnetworkList_Warning_Data_Item
 */
@interface GTLRCompute_SubnetworkList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  The available logging options for this subnetwork.
 */
@interface GTLRCompute_SubnetworkLogConfig : GTLRObject

/**
 *  Can only be specified if VPC flow logging for this subnetwork is enabled.
 *  Toggles the aggregation interval for collecting flow logs. Increasing the
 *  interval time will reduce the amount of generated flow logs for long lasting
 *  connections. Default is an interval of 5 seconds per connection.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval10Min
 *        Value "INTERVAL_10_MIN"
 *    @arg @c kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval15Min
 *        Value "INTERVAL_15_MIN"
 *    @arg @c kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval1Min
 *        Value "INTERVAL_1_MIN"
 *    @arg @c kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval30Sec
 *        Value "INTERVAL_30_SEC"
 *    @arg @c kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval5Min
 *        Value "INTERVAL_5_MIN"
 *    @arg @c kGTLRCompute_SubnetworkLogConfig_AggregationInterval_Interval5Sec
 *        Value "INTERVAL_5_SEC"
 */
@property(nonatomic, copy, nullable) NSString *aggregationInterval;

/**
 *  Whether to enable flow logging for this subnetwork. If this field is not
 *  explicitly set, it will not appear in get listings. If not set the default
 *  behavior is determined by the org policy, if there is no org policy
 *  specified, then it will default to disabled.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *enable;

/**
 *  Can only be specified if VPC flow logs for this subnetwork is enabled. The
 *  filter expression is used to define which VPC flow logs should be exported
 *  to Cloud Logging.
 */
@property(nonatomic, copy, nullable) NSString *filterExpr;

/**
 *  Can only be specified if VPC flow logging for this subnetwork is enabled.
 *  The value of the field must be in [0, 1]. Set the sampling rate of VPC flow
 *  logs within the subnetwork where 1.0 means all collected logs are reported
 *  and 0.0 means no logs are reported. Default is 0.5 unless otherwise
 *  specified by the org policy, which means half of all collected logs are
 *  reported.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *flowSampling;

/**
 *  Can only be specified if VPC flow logs for this subnetwork is enabled.
 *  Configures whether all, none or a subset of metadata fields should be added
 *  to the reported VPC flow logs. Default is EXCLUDE_ALL_METADATA.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SubnetworkLogConfig_Metadata_CustomMetadata Value
 *        "CUSTOM_METADATA"
 *    @arg @c kGTLRCompute_SubnetworkLogConfig_Metadata_ExcludeAllMetadata Value
 *        "EXCLUDE_ALL_METADATA"
 *    @arg @c kGTLRCompute_SubnetworkLogConfig_Metadata_IncludeAllMetadata Value
 *        "INCLUDE_ALL_METADATA"
 */
@property(nonatomic, copy, nullable) NSString *metadata;

/**
 *  Can only be specified if VPC flow logs for this subnetwork is enabled and
 *  "metadata" was set to CUSTOM_METADATA.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *metadataFields;

@end


/**
 *  Represents a secondary IP range of a subnetwork.
 */
@interface GTLRCompute_SubnetworkSecondaryRange : GTLRObject

/**
 *  The range of IP addresses belonging to this subnetwork secondary range.
 *  Provide this property when you create the subnetwork. Ranges must be unique
 *  and non-overlapping with all primary and secondary IP ranges within a
 *  network. Only IPv4 is supported. The range can be any range listed in the
 *  Valid ranges list.
 */
@property(nonatomic, copy, nullable) NSString *ipCidrRange;

/**
 *  The name associated with this subnetwork secondary range, used when adding
 *  an alias IP range to a VM instance. The name must be 1-63 characters long,
 *  and comply with RFC1035. The name must be unique within the subnetwork.
 */
@property(nonatomic, copy, nullable) NSString *rangeName;

@end


/**
 *  GTLRCompute_SubnetworksExpandIpCidrRangeRequest
 */
@interface GTLRCompute_SubnetworksExpandIpCidrRangeRequest : GTLRObject

/**
 *  The IP (in CIDR format or netmask) of internal addresses that are legal on
 *  this Subnetwork. This range should be disjoint from other subnetworks within
 *  this network. This range can only be larger than (i.e. a superset of) the
 *  range previously defined before the update.
 */
@property(nonatomic, copy, nullable) NSString *ipCidrRange;

@end


/**
 *  GTLRCompute_SubnetworksScopedList
 */
@interface GTLRCompute_SubnetworksScopedList : GTLRObject

/** A list of subnetworks contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Subnetwork *> *subnetworks;

/**
 *  An informational warning that appears when the list of addresses is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_SubnetworksScopedList_Warning *warning;

@end


/**
 *  An informational warning that appears when the list of addresses is empty.
 */
@interface GTLRCompute_SubnetworksScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_SubnetworksScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_SubnetworksScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_SubnetworksScopedList_Warning_Data_Item
 */
@interface GTLRCompute_SubnetworksScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_SubnetworksSetPrivateIpGoogleAccessRequest
 */
@interface GTLRCompute_SubnetworksSetPrivateIpGoogleAccessRequest : GTLRObject

/**
 *  privateIpGoogleAccess
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *privateIpGoogleAccess;

@end


/**
 *  Subsetting configuration for this BackendService. Currently this is
 *  applicable only for Internal TCP/UDP load balancing, Internal HTTP(S) load
 *  balancing and Traffic Director.
 */
@interface GTLRCompute_Subsetting : GTLRObject

/**
 *  policy
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Subsetting_Policy_ConsistentHashSubsetting Subsetting
 *        based on consistent hashing. For Traffic Director, the number of
 *        backends per backend group (the subset size) is based on the
 *        `subset_size` parameter. For Internal HTTP(S) load balancing, the
 *        number of backends per backend group (the subset size) is dynamically
 *        adjusted in two cases: - As the number of proxy instances
 *        participating in Internal HTTP(S) load balancing increases, the subset
 *        size decreases. - When the total number of backends in a network
 *        exceeds the capacity of a single proxy instance, subset sizes are
 *        reduced automatically for each service that has backend subsetting
 *        enabled. (Value: "CONSISTENT_HASH_SUBSETTING")
 *    @arg @c kGTLRCompute_Subsetting_Policy_None No Subsetting. Clients may
 *        open connections and send traffic to all backends of this backend
 *        service. This can lead to performance issues if there is substantial
 *        imbalance in the count of clients and backends. (Value: "NONE")
 */
@property(nonatomic, copy, nullable) NSString *policy;

@end


/**
 *  A set of instance tags.
 */
@interface GTLRCompute_Tags : GTLRObject

/**
 *  Specifies a fingerprint for this request, which is essentially a hash of the
 *  tags' contents and used for optimistic locking. The fingerprint is initially
 *  generated by Compute Engine and changes after every request to modify or
 *  update tags. You must always provide an up-to-date fingerprint hash in order
 *  to update or change tags. To see the latest fingerprint, make get() request
 *  to the instance.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  An array of tags. Each tag must be 1-63 characters long, and comply with
 *  RFC1035.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *items;

@end


/**
 *  Represents a Target gRPC Proxy resource. A target gRPC proxy is a component
 *  of load balancers intended for load balancing gRPC traffic. Only global
 *  forwarding rules with load balancing scheme INTERNAL_SELF_MANAGED can
 *  reference a target gRPC proxy. The target gRPC Proxy references a URL map
 *  that specifies how traffic is routed to gRPC backend services.
 */
@interface GTLRCompute_TargetGrpcProxy : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Fingerprint of this resource. A hash of the contents stored in this object.
 *  This field is used in optimistic locking. This field will be ignored when
 *  inserting a TargetGrpcProxy. An up-to-date fingerprint must be provided in
 *  order to patch/update the TargetGrpcProxy; otherwise, the request will fail
 *  with error 412 conditionNotMet. To see the latest fingerprint, make a get()
 *  request to retrieve the TargetGrpcProxy.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] The unique identifier for the resource type. The server
 *  generates this identifier.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#targetGrpcProxy for
 *  target grpc proxies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Server-defined URL with id for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLinkWithId;

/**
 *  URL to the UrlMap resource that defines the mapping from URL to the
 *  BackendService. The protocol field in the BackendService must be set to
 *  GRPC.
 */
@property(nonatomic, copy, nullable) NSString *urlMap;

/**
 *  If true, indicates that the BackendServices referenced by the urlMap may be
 *  accessed by gRPC applications without using a sidecar proxy. This will
 *  enable configuration checks on urlMap and its referenced BackendServices to
 *  not allow unsupported features. A gRPC application must use "xds:///" scheme
 *  in the target URI of the service it is connecting to. If false, indicates
 *  that the BackendServices referenced by the urlMap will be accessed by gRPC
 *  applications via a sidecar proxy. In this case, a gRPC application must not
 *  use "xds:///" scheme in the target URI of the service it is connecting to
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *validateForProxyless;

@end


/**
 *  GTLRCompute_TargetGrpcProxyList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_TargetGrpcProxyList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of TargetGrpcProxy resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetGrpcProxy *> *items;

/**
 *  [Output Only] Type of the resource. Always compute#targetGrpcProxy for
 *  target grpc proxies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetGrpcProxyList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_TargetGrpcProxyList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetGrpcProxyList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetGrpcProxyList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetGrpcProxyList_Warning_Data_Item
 */
@interface GTLRCompute_TargetGrpcProxyList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_TargetHttpProxiesScopedList
 */
@interface GTLRCompute_TargetHttpProxiesScopedList : GTLRObject

/** A list of TargetHttpProxies contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetHttpProxy *> *targetHttpProxies;

/**
 *  Informational warning which replaces the list of backend services when the
 *  list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_TargetHttpProxiesScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of backend services when the
 *  list is empty.
 */
@interface GTLRCompute_TargetHttpProxiesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetHttpProxiesScopedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetHttpProxiesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetHttpProxiesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_TargetHttpProxiesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a Target HTTP Proxy resource. Google Compute Engine has two
 *  Target HTTP Proxy resources: *
 *  [Global](/compute/docs/reference/rest/v1/targetHttpProxies) *
 *  [Regional](/compute/docs/reference/rest/v1/regionTargetHttpProxies) A target
 *  HTTP proxy is a component of GCP HTTP load balancers. * targetHttpProxies
 *  are used by external HTTP load balancers and Traffic Director. *
 *  regionTargetHttpProxies are used by internal HTTP load balancers. Forwarding
 *  rules reference a target HTTP proxy, and the target proxy then references a
 *  URL map. For more information, read Using Target Proxies and Forwarding rule
 *  concepts.
 */
@interface GTLRCompute_TargetHttpProxy : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Fingerprint of this resource. A hash of the contents stored in this object.
 *  This field is used in optimistic locking. This field will be ignored when
 *  inserting a TargetHttpProxy. An up-to-date fingerprint must be provided in
 *  order to patch/update the TargetHttpProxy; otherwise, the request will fail
 *  with error 412 conditionNotMet. To see the latest fingerprint, make a get()
 *  request to retrieve the TargetHttpProxy.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of resource. Always compute#targetHttpProxy for target
 *  HTTP proxies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  This field only applies when the forwarding rule that references this target
 *  proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED. When this
 *  field is set to true, Envoy proxies set up inbound traffic interception and
 *  bind to the IP address and port specified in the forwarding rule. This is
 *  generally useful when using Traffic Director to configure Envoy as a gateway
 *  or middle proxy (in other words, not a sidecar proxy). The Envoy proxy
 *  listens for inbound requests and handles requests when it receives them. The
 *  default is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *proxyBind;

/**
 *  [Output Only] URL of the region where the regional Target HTTP Proxy
 *  resides. This field is not applicable to global Target HTTP Proxies.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  URL to the UrlMap resource that defines the mapping from URL to the
 *  BackendService.
 */
@property(nonatomic, copy, nullable) NSString *urlMap;

@end


/**
 *  GTLRCompute_TargetHttpProxyAggregatedList
 */
@interface GTLRCompute_TargetHttpProxyAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of TargetHttpProxiesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetHttpProxyAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#targetHttpProxyAggregatedList
 *  for lists of Target HTTP Proxies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

@end


/**
 *  A list of TargetHttpProxiesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_TargetHttpProxiesScopedList. Use @c -additionalJSONKeys
 *        and @c -additionalPropertyForName: to get the list of properties and
 *        then fetch them; or @c -additionalProperties to fetch them all at
 *        once.
 */
@interface GTLRCompute_TargetHttpProxyAggregatedList_Items : GTLRObject
@end


/**
 *  A list of TargetHttpProxy resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_TargetHttpProxyList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of TargetHttpProxy resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetHttpProxy *> *items;

/**
 *  Type of resource. Always compute#targetHttpProxyList for lists of target
 *  HTTP proxies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetHttpProxyList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_TargetHttpProxyList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetHttpProxyList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetHttpProxyList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetHttpProxyList_Warning_Data_Item
 */
@interface GTLRCompute_TargetHttpProxyList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_TargetHttpsProxiesScopedList
 */
@interface GTLRCompute_TargetHttpsProxiesScopedList : GTLRObject

/** A list of TargetHttpsProxies contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetHttpsProxy *> *targetHttpsProxies;

/**
 *  Informational warning which replaces the list of backend services when the
 *  list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_TargetHttpsProxiesScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of backend services when the
 *  list is empty.
 */
@interface GTLRCompute_TargetHttpsProxiesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesScopedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetHttpsProxiesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetHttpsProxiesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_TargetHttpsProxiesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_TargetHttpsProxiesSetCertificateMapRequest
 */
@interface GTLRCompute_TargetHttpsProxiesSetCertificateMapRequest : GTLRObject

/** URL of the Certificate Map to associate with this TargetHttpsProxy. */
@property(nonatomic, copy, nullable) NSString *certificateMap;

@end


/**
 *  GTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest
 */
@interface GTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest : GTLRObject

/**
 *  QUIC policy for the TargetHttpsProxy resource.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest_QuicOverride_Disable
 *        The load balancer will not attempt to negotiate QUIC with clients.
 *        (Value: "DISABLE")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest_QuicOverride_Enable
 *        The load balancer will attempt to negotiate QUIC with clients. (Value:
 *        "ENABLE")
 *    @arg @c kGTLRCompute_TargetHttpsProxiesSetQuicOverrideRequest_QuicOverride_None
 *        No overrides to the default QUIC policy. This option is implicit if no
 *        QUIC override has been specified in the request. (Value: "NONE")
 */
@property(nonatomic, copy, nullable) NSString *quicOverride;

@end


/**
 *  GTLRCompute_TargetHttpsProxiesSetSslCertificatesRequest
 */
@interface GTLRCompute_TargetHttpsProxiesSetSslCertificatesRequest : GTLRObject

/**
 *  New set of SslCertificate resources to associate with this TargetHttpsProxy
 *  resource. At least one SSL certificate must be specified. Currently, you may
 *  specify up to 15 SSL certificates.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sslCertificates;

@end


/**
 *  Represents a Target HTTPS Proxy resource. Google Compute Engine has two
 *  Target HTTPS Proxy resources: *
 *  [Global](/compute/docs/reference/rest/v1/targetHttpsProxies) *
 *  [Regional](/compute/docs/reference/rest/v1/regionTargetHttpsProxies) A
 *  target HTTPS proxy is a component of GCP HTTPS load balancers. *
 *  targetHttpsProxies are used by external HTTPS load balancers. *
 *  regionTargetHttpsProxies are used by internal HTTPS load balancers.
 *  Forwarding rules reference a target HTTPS proxy, and the target proxy then
 *  references a URL map. For more information, read Using Target Proxies and
 *  Forwarding rule concepts.
 */
@interface GTLRCompute_TargetHttpsProxy : GTLRObject

/**
 *  Optional. A URL referring to a networksecurity.AuthorizationPolicy resource
 *  that describes how the proxy should authorize inbound traffic. If left
 *  blank, access will not be restricted by an authorization policy. Refer to
 *  the AuthorizationPolicy resource for additional details. authorizationPolicy
 *  only applies to a global TargetHttpsProxy attached to globalForwardingRules
 *  with the loadBalancingScheme set to INTERNAL_SELF_MANAGED. Note: This field
 *  currently has no impact.
 */
@property(nonatomic, copy, nullable) NSString *authorizationPolicy;

/**
 *  URL of a certificate map that identifies a certificate map associated with
 *  the given target proxy. This field can only be set for global target
 *  proxies. If set, sslCertificates will be ignored.
 */
@property(nonatomic, copy, nullable) NSString *certificateMap;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Fingerprint of this resource. A hash of the contents stored in this object.
 *  This field is used in optimistic locking. This field will be ignored when
 *  inserting a TargetHttpsProxy. An up-to-date fingerprint must be provided in
 *  order to patch the TargetHttpsProxy; otherwise, the request will fail with
 *  error 412 conditionNotMet. To see the latest fingerprint, make a get()
 *  request to retrieve the TargetHttpsProxy.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of resource. Always compute#targetHttpsProxy for target
 *  HTTPS proxies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  This field only applies when the forwarding rule that references this target
 *  proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED. When this
 *  field is set to true, Envoy proxies set up inbound traffic interception and
 *  bind to the IP address and port specified in the forwarding rule. This is
 *  generally useful when using Traffic Director to configure Envoy as a gateway
 *  or middle proxy (in other words, not a sidecar proxy). The Envoy proxy
 *  listens for inbound requests and handles requests when it receives them. The
 *  default is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *proxyBind;

/**
 *  Specifies the QUIC override policy for this TargetHttpsProxy resource. This
 *  setting determines whether the load balancer attempts to negotiate QUIC with
 *  clients. You can specify NONE, ENABLE, or DISABLE. - When quic-override is
 *  set to NONE, Google manages whether QUIC is used. - When quic-override is
 *  set to ENABLE, the load balancer uses QUIC when possible. - When
 *  quic-override is set to DISABLE, the load balancer doesn't use QUIC. - If
 *  the quic-override flag is not specified, NONE is implied.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetHttpsProxy_QuicOverride_Disable The load
 *        balancer will not attempt to negotiate QUIC with clients. (Value:
 *        "DISABLE")
 *    @arg @c kGTLRCompute_TargetHttpsProxy_QuicOverride_Enable The load
 *        balancer will attempt to negotiate QUIC with clients. (Value:
 *        "ENABLE")
 *    @arg @c kGTLRCompute_TargetHttpsProxy_QuicOverride_None No overrides to
 *        the default QUIC policy. This option is implicit if no QUIC override
 *        has been specified in the request. (Value: "NONE")
 */
@property(nonatomic, copy, nullable) NSString *quicOverride;

/**
 *  [Output Only] URL of the region where the regional TargetHttpsProxy resides.
 *  This field is not applicable to global TargetHttpsProxies.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  Optional. A URL referring to a networksecurity.ServerTlsPolicy resource that
 *  describes how the proxy should authenticate inbound traffic. serverTlsPolicy
 *  only applies to a global TargetHttpsProxy attached to globalForwardingRules
 *  with the loadBalancingScheme set to INTERNAL_SELF_MANAGED. If left blank,
 *  communications are not encrypted. Note: This field currently has no impact.
 */
@property(nonatomic, copy, nullable) NSString *serverTlsPolicy;

/**
 *  URLs to SslCertificate resources that are used to authenticate connections
 *  between users and the load balancer. At least one SSL certificate must be
 *  specified. Currently, you may specify up to 15 SSL certificates.
 *  sslCertificates do not apply when the load balancing scheme is set to
 *  INTERNAL_SELF_MANAGED.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sslCertificates;

/**
 *  URL of SslPolicy resource that will be associated with the TargetHttpsProxy
 *  resource. If not set, the TargetHttpsProxy resource has no SSL policy
 *  configured.
 */
@property(nonatomic, copy, nullable) NSString *sslPolicy;

/**
 *  A fully-qualified or valid partial URL to the UrlMap resource that defines
 *  the mapping from URL to the BackendService. For example, the following are
 *  all valid URLs for specifying a URL map: -
 *  https://www.googleapis.compute/v1/projects/project/global/urlMaps/ url-map -
 *  projects/project/global/urlMaps/url-map - global/urlMaps/url-map
 */
@property(nonatomic, copy, nullable) NSString *urlMap;

@end


/**
 *  GTLRCompute_TargetHttpsProxyAggregatedList
 */
@interface GTLRCompute_TargetHttpsProxyAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of TargetHttpsProxiesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetHttpsProxyAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always
 *  compute#targetHttpsProxyAggregatedList for lists of Target HTTP Proxies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetHttpsProxyAggregatedList_Warning *warning;

@end


/**
 *  A list of TargetHttpsProxiesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_TargetHttpsProxiesScopedList. Use @c -additionalJSONKeys
 *        and @c -additionalPropertyForName: to get the list of properties and
 *        then fetch them; or @c -additionalProperties to fetch them all at
 *        once.
 */
@interface GTLRCompute_TargetHttpsProxyAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_TargetHttpsProxyAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetHttpsProxyAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetHttpsProxyAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetHttpsProxyAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_TargetHttpsProxyAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of TargetHttpsProxy resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_TargetHttpsProxyList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of TargetHttpsProxy resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetHttpsProxy *> *items;

/**
 *  Type of resource. Always compute#targetHttpsProxyList for lists of target
 *  HTTPS proxies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetHttpsProxyList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_TargetHttpsProxyList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetHttpsProxyList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetHttpsProxyList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetHttpsProxyList_Warning_Data_Item
 */
@interface GTLRCompute_TargetHttpsProxyList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a Target Instance resource. You can use a target instance to
 *  handle traffic for one or more forwarding rules, which is ideal for
 *  forwarding protocol traffic that is managed by a single source. For example,
 *  ESP, AH, TCP, or UDP. For more information, read Target instances.
 */
@interface GTLRCompute_TargetInstance : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  A URL to the virtual machine instance that handles traffic for this target
 *  instance. When creating a target instance, you can provide the
 *  fully-qualified URL or a valid partial URL to the desired virtual machine.
 *  For example, the following are all valid URLs: -
 *  https://www.googleapis.com/compute/v1/projects/project/zones/zone
 *  /instances/instance - projects/project/zones/zone/instances/instance -
 *  zones/zone/instances/instance
 */
@property(nonatomic, copy, nullable) NSString *instance;

/**
 *  [Output Only] The type of the resource. Always compute#targetInstance for
 *  target instances.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Must have a value of NO_NAT. Protocol forwarding delivers packets while
 *  preserving the destination IP address of the forwarding rule referencing the
 *  target instance.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetInstance_NatPolicy_NoNat No NAT performed.
 *        (Value: "NO_NAT")
 */
@property(nonatomic, copy, nullable) NSString *natPolicy;

/**
 *  The URL of the network this target instance uses to forward traffic. If not
 *  specified, the traffic will be forwarded to the network that the default
 *  network interface belongs to.
 */
@property(nonatomic, copy, nullable) NSString *network;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] URL of the zone where the target instance resides. You must
 *  specify this field as part of the HTTP request URL. It is not settable as a
 *  field in the request body.
 *
 *  Remapped to 'zoneProperty' to avoid NSObject's 'zone'.
 */
@property(nonatomic, copy, nullable) NSString *zoneProperty;

@end


/**
 *  GTLRCompute_TargetInstanceAggregatedList
 */
@interface GTLRCompute_TargetInstanceAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of TargetInstance resources. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetInstanceAggregatedList_Items *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetInstanceAggregatedList_Warning *warning;

@end


/**
 *  A list of TargetInstance resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_TargetInstancesScopedList. Use @c -additionalJSONKeys and
 *        @c -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_TargetInstanceAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_TargetInstanceAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetInstanceAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetInstanceAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetInstanceAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_TargetInstanceAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of TargetInstance resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_TargetInstanceList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of TargetInstance resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetInstance *> *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetInstanceList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_TargetInstanceList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetInstanceList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetInstanceList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetInstanceList_Warning_Data_Item
 */
@interface GTLRCompute_TargetInstanceList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_TargetInstancesScopedList
 */
@interface GTLRCompute_TargetInstancesScopedList : GTLRObject

/** A list of target instances contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetInstance *> *targetInstances;

/**
 *  Informational warning which replaces the list of addresses when the list is
 *  empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_TargetInstancesScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of addresses when the list is
 *  empty.
 */
@interface GTLRCompute_TargetInstancesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetInstancesScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetInstancesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetInstancesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_TargetInstancesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a Target Pool resource. Target pools are used for network TCP/UDP
 *  load balancing. A target pool references member instances, an associated
 *  legacy HttpHealthCheck resource, and, optionally, a backup target pool. For
 *  more information, read Using target pools.
 */
@interface GTLRCompute_TargetPool : GTLRObject

/**
 *  The server-defined URL for the resource. This field is applicable only when
 *  the containing target pool is serving a forwarding rule as the primary pool,
 *  and its failoverRatio field is properly set to a value between [0, 1].
 *  backupPool and failoverRatio together define the fallback behavior of the
 *  primary target pool: if the ratio of the healthy instances in the primary
 *  pool is at or below failoverRatio, traffic arriving at the load-balanced IP
 *  will be directed to the backup pool. In case where failoverRatio and
 *  backupPool are not set, or all the instances in the backup pool are
 *  unhealthy, the traffic will be directed back to the primary pool in the
 *  "force" mode, where traffic will be spread to the healthy instances with the
 *  best effort, or to all instances when no instance is healthy.
 */
@property(nonatomic, copy, nullable) NSString *backupPool;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  This field is applicable only when the containing target pool is serving a
 *  forwarding rule as the primary pool (i.e., not as a backup pool to some
 *  other target pool). The value of the field must be in [0, 1]. If set,
 *  backupPool must also be set. They together define the fallback behavior of
 *  the primary target pool: if the ratio of the healthy instances in the
 *  primary pool is at or below this number, traffic arriving at the
 *  load-balanced IP will be directed to the backup pool. In case where
 *  failoverRatio is not set or all the instances in the backup pool are
 *  unhealthy, the traffic will be directed back to the primary pool in the
 *  "force" mode, where traffic will be spread to the healthy instances with the
 *  best effort, or to all instances when no instance is healthy.
 *
 *  Uses NSNumber of floatValue.
 */
@property(nonatomic, strong, nullable) NSNumber *failoverRatio;

/**
 *  The URL of the HttpHealthCheck resource. A member instance in this pool is
 *  considered healthy if and only if the health checks pass. Only legacy
 *  HttpHealthChecks are supported. Only one health check may be specified.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *healthChecks;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  A list of resource URLs to the virtual machine instances serving this pool.
 *  They must live in zones contained in the same region as this pool.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *instances;

/**
 *  [Output Only] Type of the resource. Always compute#targetPool for target
 *  pools.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** [Output Only] URL of the region where the target pool resides. */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  Session affinity option, must be one of the following values: NONE:
 *  Connections from the same client IP may go to any instance in the pool.
 *  CLIENT_IP: Connections from the same client IP will go to the same instance
 *  in the pool while that instance remains healthy. CLIENT_IP_PROTO:
 *  Connections from the same client IP with the same IP protocol will go to the
 *  same instance in the pool while that instance remains healthy.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetPool_SessionAffinity_ClientIp 2-tuple hash on
 *        packet's source and destination IP addresses. Connections from the
 *        same source IP address to the same destination IP address will be
 *        served by the same backend VM while that VM remains healthy. (Value:
 *        "CLIENT_IP")
 *    @arg @c kGTLRCompute_TargetPool_SessionAffinity_ClientIpNoDestination
 *        1-tuple hash only on packet's source IP address. Connections from the
 *        same source IP address will be served by the same backend VM while
 *        that VM remains healthy. This option can only be used for Internal
 *        TCP/UDP Load Balancing. (Value: "CLIENT_IP_NO_DESTINATION")
 *    @arg @c kGTLRCompute_TargetPool_SessionAffinity_ClientIpPortProto 5-tuple
 *        hash on packet's source and destination IP addresses, IP protocol, and
 *        source and destination ports. Connections for the same IP protocol
 *        from the same source IP address and port to the same destination IP
 *        address and port will be served by the same backend VM while that VM
 *        remains healthy. This option cannot be used for HTTP(S) load
 *        balancing. (Value: "CLIENT_IP_PORT_PROTO")
 *    @arg @c kGTLRCompute_TargetPool_SessionAffinity_ClientIpProto 3-tuple hash
 *        on packet's source and destination IP addresses, and IP protocol.
 *        Connections for the same IP protocol from the same source IP address
 *        to the same destination IP address will be served by the same backend
 *        VM while that VM remains healthy. This option cannot be used for
 *        HTTP(S) load balancing. (Value: "CLIENT_IP_PROTO")
 *    @arg @c kGTLRCompute_TargetPool_SessionAffinity_GeneratedCookie Hash based
 *        on a cookie generated by the L7 loadbalancer. Only valid for HTTP(S)
 *        load balancing. (Value: "GENERATED_COOKIE")
 *    @arg @c kGTLRCompute_TargetPool_SessionAffinity_HeaderField The hash is
 *        based on a user specified header field. (Value: "HEADER_FIELD")
 *    @arg @c kGTLRCompute_TargetPool_SessionAffinity_HttpCookie The hash is
 *        based on a user provided cookie. (Value: "HTTP_COOKIE")
 *    @arg @c kGTLRCompute_TargetPool_SessionAffinity_None No session affinity.
 *        Connections from the same client IP may go to any instance in the
 *        pool. (Value: "NONE")
 */
@property(nonatomic, copy, nullable) NSString *sessionAffinity;

@end


/**
 *  GTLRCompute_TargetPoolAggregatedList
 */
@interface GTLRCompute_TargetPoolAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of TargetPool resources. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetPoolAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#targetPoolAggregatedList for
 *  aggregated lists of target pools.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetPoolAggregatedList_Warning *warning;

@end


/**
 *  A list of TargetPool resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_TargetPoolsScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_TargetPoolAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_TargetPoolAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetPoolAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetPoolAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetPoolAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_TargetPoolAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_TargetPoolInstanceHealth
 */
@interface GTLRCompute_TargetPoolInstanceHealth : GTLRObject

@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HealthStatus *> *healthStatus;

/**
 *  [Output Only] Type of resource. Always compute#targetPoolInstanceHealth when
 *  checking the health of an instance.
 */
@property(nonatomic, copy, nullable) NSString *kind;

@end


/**
 *  Contains a list of TargetPool resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_TargetPoolList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of TargetPool resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetPool *> *items;

/**
 *  [Output Only] Type of resource. Always compute#targetPoolList for lists of
 *  target pools.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetPoolList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_TargetPoolList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetPoolList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetPoolList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetPoolList_Warning_Data_Item
 */
@interface GTLRCompute_TargetPoolList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_TargetPoolsAddHealthCheckRequest
 */
@interface GTLRCompute_TargetPoolsAddHealthCheckRequest : GTLRObject

/** The HttpHealthCheck to add to the target pool. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HealthCheckReference *> *healthChecks;

@end


/**
 *  GTLRCompute_TargetPoolsAddInstanceRequest
 */
@interface GTLRCompute_TargetPoolsAddInstanceRequest : GTLRObject

/**
 *  A full or partial URL to an instance to add to this target pool. This can be
 *  a full or partial URL. For example, the following are valid URLs: -
 *  https://www.googleapis.com/compute/v1/projects/project-id/zones/zone
 *  /instances/instance-name -
 *  projects/project-id/zones/zone/instances/instance-name -
 *  zones/zone/instances/instance-name
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceReference *> *instances;

@end


/**
 *  GTLRCompute_TargetPoolsRemoveHealthCheckRequest
 */
@interface GTLRCompute_TargetPoolsRemoveHealthCheckRequest : GTLRObject

/**
 *  Health check URL to be removed. This can be a full or valid partial URL. For
 *  example, the following are valid URLs: -
 *  https://www.googleapis.com/compute/beta/projects/project
 *  /global/httpHealthChecks/health-check -
 *  projects/project/global/httpHealthChecks/health-check -
 *  global/httpHealthChecks/health-check
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HealthCheckReference *> *healthChecks;

@end


/**
 *  GTLRCompute_TargetPoolsRemoveInstanceRequest
 */
@interface GTLRCompute_TargetPoolsRemoveInstanceRequest : GTLRObject

/** URLs of the instances to be removed from target pool. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_InstanceReference *> *instances;

@end


/**
 *  GTLRCompute_TargetPoolsScopedList
 */
@interface GTLRCompute_TargetPoolsScopedList : GTLRObject

/** A list of target pools contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetPool *> *targetPools;

/**
 *  Informational warning which replaces the list of addresses when the list is
 *  empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_TargetPoolsScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of addresses when the list is
 *  empty.
 */
@interface GTLRCompute_TargetPoolsScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetPoolsScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetPoolsScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetPoolsScopedList_Warning_Data_Item
 */
@interface GTLRCompute_TargetPoolsScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_TargetReference
 */
@interface GTLRCompute_TargetReference : GTLRObject

@property(nonatomic, copy, nullable) NSString *target;

@end


/**
 *  GTLRCompute_TargetSslProxiesSetBackendServiceRequest
 */
@interface GTLRCompute_TargetSslProxiesSetBackendServiceRequest : GTLRObject

/** The URL of the new BackendService resource for the targetSslProxy. */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  GTLRCompute_TargetSslProxiesSetCertificateMapRequest
 */
@interface GTLRCompute_TargetSslProxiesSetCertificateMapRequest : GTLRObject

/** URL of the Certificate Map to associate with this TargetSslProxy. */
@property(nonatomic, copy, nullable) NSString *certificateMap;

@end


/**
 *  GTLRCompute_TargetSslProxiesSetProxyHeaderRequest
 */
@interface GTLRCompute_TargetSslProxiesSetProxyHeaderRequest : GTLRObject

/**
 *  The new type of proxy header to append before sending data to the backend.
 *  NONE or PROXY_V1 are allowed.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetSslProxiesSetProxyHeaderRequest_ProxyHeader_None
 *        Value "NONE"
 *    @arg @c kGTLRCompute_TargetSslProxiesSetProxyHeaderRequest_ProxyHeader_ProxyV1
 *        Value "PROXY_V1"
 */
@property(nonatomic, copy, nullable) NSString *proxyHeader;

@end


/**
 *  GTLRCompute_TargetSslProxiesSetSslCertificatesRequest
 */
@interface GTLRCompute_TargetSslProxiesSetSslCertificatesRequest : GTLRObject

/**
 *  New set of URLs to SslCertificate resources to associate with this
 *  TargetSslProxy. At least one SSL certificate must be specified. Currently,
 *  you may specify up to 15 SSL certificates.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sslCertificates;

@end


/**
 *  Represents a Target SSL Proxy resource. A target SSL proxy is a component of
 *  a SSL Proxy load balancer. Global forwarding rules reference a target SSL
 *  proxy, and the target proxy then references an external backend service. For
 *  more information, read Using Target Proxies.
 */
@interface GTLRCompute_TargetSslProxy : GTLRObject

/**
 *  URL of a certificate map that identifies a certificate map associated with
 *  the given target proxy. This field can only be set for global target
 *  proxies. If set, sslCertificates will be ignored.
 */
@property(nonatomic, copy, nullable) NSString *certificateMap;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#targetSslProxy for target
 *  SSL proxies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Specifies the type of proxy header to append before sending data to the
 *  backend, either NONE or PROXY_V1. The default is NONE.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetSslProxy_ProxyHeader_None Value "NONE"
 *    @arg @c kGTLRCompute_TargetSslProxy_ProxyHeader_ProxyV1 Value "PROXY_V1"
 */
@property(nonatomic, copy, nullable) NSString *proxyHeader;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** URL to the BackendService resource. */
@property(nonatomic, copy, nullable) NSString *service;

/**
 *  URLs to SslCertificate resources that are used to authenticate connections
 *  to Backends. At least one SSL certificate must be specified. Currently, you
 *  may specify up to 15 SSL certificates. sslCertificates do not apply when the
 *  load balancing scheme is set to INTERNAL_SELF_MANAGED.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *sslCertificates;

/**
 *  URL of SslPolicy resource that will be associated with the TargetSslProxy
 *  resource. If not set, the TargetSslProxy resource will not have any SSL
 *  policy configured.
 */
@property(nonatomic, copy, nullable) NSString *sslPolicy;

@end


/**
 *  Contains a list of TargetSslProxy resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_TargetSslProxyList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of TargetSslProxy resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetSslProxy *> *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetSslProxyList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_TargetSslProxyList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetSslProxyList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetSslProxyList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetSslProxyList_Warning_Data_Item
 */
@interface GTLRCompute_TargetSslProxyList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_TargetTcpProxiesScopedList
 */
@interface GTLRCompute_TargetTcpProxiesScopedList : GTLRObject

/** A list of TargetTcpProxies contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetTcpProxy *> *targetTcpProxies;

/**
 *  Informational warning which replaces the list of backend services when the
 *  list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_TargetTcpProxiesScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of backend services when the
 *  list is empty.
 */
@interface GTLRCompute_TargetTcpProxiesScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetTcpProxiesScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetTcpProxiesScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetTcpProxiesScopedList_Warning_Data_Item
 */
@interface GTLRCompute_TargetTcpProxiesScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_TargetTcpProxiesSetBackendServiceRequest
 */
@interface GTLRCompute_TargetTcpProxiesSetBackendServiceRequest : GTLRObject

/** The URL of the new BackendService resource for the targetTcpProxy. */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  GTLRCompute_TargetTcpProxiesSetProxyHeaderRequest
 */
@interface GTLRCompute_TargetTcpProxiesSetProxyHeaderRequest : GTLRObject

/**
 *  The new type of proxy header to append before sending data to the backend.
 *  NONE or PROXY_V1 are allowed.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetTcpProxiesSetProxyHeaderRequest_ProxyHeader_None
 *        Value "NONE"
 *    @arg @c kGTLRCompute_TargetTcpProxiesSetProxyHeaderRequest_ProxyHeader_ProxyV1
 *        Value "PROXY_V1"
 */
@property(nonatomic, copy, nullable) NSString *proxyHeader;

@end


/**
 *  Represents a Target TCP Proxy resource. A target TCP proxy is a component of
 *  a TCP Proxy load balancer. Global forwarding rules reference target TCP
 *  proxy, and the target proxy then references an external backend service. For
 *  more information, read TCP Proxy Load Balancing overview.
 */
@interface GTLRCompute_TargetTcpProxy : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#targetTcpProxy for target
 *  TCP proxies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  This field only applies when the forwarding rule that references this target
 *  proxy has a loadBalancingScheme set to INTERNAL_SELF_MANAGED. When this
 *  field is set to true, Envoy proxies set up inbound traffic interception and
 *  bind to the IP address and port specified in the forwarding rule. This is
 *  generally useful when using Traffic Director to configure Envoy as a gateway
 *  or middle proxy (in other words, not a sidecar proxy). The Envoy proxy
 *  listens for inbound requests and handles requests when it receives them. The
 *  default is false.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *proxyBind;

/**
 *  Specifies the type of proxy header to append before sending data to the
 *  backend, either NONE or PROXY_V1. The default is NONE.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetTcpProxy_ProxyHeader_None Value "NONE"
 *    @arg @c kGTLRCompute_TargetTcpProxy_ProxyHeader_ProxyV1 Value "PROXY_V1"
 */
@property(nonatomic, copy, nullable) NSString *proxyHeader;

/**
 *  [Output Only] URL of the region where the regional TCP proxy resides. This
 *  field is not applicable to global TCP proxy.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** URL to the BackendService resource. */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  GTLRCompute_TargetTcpProxyAggregatedList
 */
@interface GTLRCompute_TargetTcpProxyAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of TargetTcpProxiesScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetTcpProxyAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#targetTcpProxyAggregatedList
 *  for lists of Target TCP Proxies.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetTcpProxyAggregatedList_Warning *warning;

@end


/**
 *  A list of TargetTcpProxiesScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_TargetTcpProxiesScopedList. Use @c -additionalJSONKeys and
 *        @c -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_TargetTcpProxyAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_TargetTcpProxyAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetTcpProxyAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetTcpProxyAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetTcpProxyAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_TargetTcpProxyAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of TargetTcpProxy resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_TargetTcpProxyList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of TargetTcpProxy resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetTcpProxy *> *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetTcpProxyList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_TargetTcpProxyList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetTcpProxyList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetTcpProxyList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetTcpProxyList_Warning_Data_Item
 */
@interface GTLRCompute_TargetTcpProxyList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a Target VPN Gateway resource. The target VPN gateway resource
 *  represents a Classic Cloud VPN gateway. For more information, read the the
 *  Cloud VPN Overview.
 */
@interface GTLRCompute_TargetVpnGateway : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] A list of URLs to the ForwardingRule resources.
 *  ForwardingRules are created using compute.forwardingRules.insert and
 *  associated with a VPN gateway.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *forwardingRules;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of resource. Always compute#targetVpnGateway for target
 *  VPN gateways.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  URL of the network to which this VPN gateway is attached. Provided by the
 *  client when the VPN gateway is created.
 */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  [Output Only] URL of the region where the target VPN gateway resides. You
 *  must specify this field as part of the HTTP request URL. It is not settable
 *  as a field in the request body.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] The status of the VPN gateway, which can be one of the
 *  following: CREATING, READY, FAILED, or DELETING.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetVpnGateway_Status_Creating Value "CREATING"
 *    @arg @c kGTLRCompute_TargetVpnGateway_Status_Deleting Value "DELETING"
 *    @arg @c kGTLRCompute_TargetVpnGateway_Status_Failed Value "FAILED"
 *    @arg @c kGTLRCompute_TargetVpnGateway_Status_Ready Value "READY"
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  [Output Only] A list of URLs to VpnTunnel resources. VpnTunnels are created
 *  using the compute.vpntunnels.insert method and associated with a VPN
 *  gateway.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *tunnels;

@end


/**
 *  GTLRCompute_TargetVpnGatewayAggregatedList
 */
@interface GTLRCompute_TargetVpnGatewayAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of TargetVpnGateway resources. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetVpnGatewayAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#targetVpnGateway for target
 *  VPN gateways.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetVpnGatewayAggregatedList_Warning *warning;

@end


/**
 *  A list of TargetVpnGateway resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_TargetVpnGatewaysScopedList. Use @c -additionalJSONKeys
 *        and @c -additionalPropertyForName: to get the list of properties and
 *        then fetch them; or @c -additionalProperties to fetch them all at
 *        once.
 */
@interface GTLRCompute_TargetVpnGatewayAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_TargetVpnGatewayAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetVpnGatewayAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetVpnGatewayAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetVpnGatewayAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_TargetVpnGatewayAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of TargetVpnGateway resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_TargetVpnGatewayList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of TargetVpnGateway resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetVpnGateway *> *items;

/**
 *  [Output Only] Type of resource. Always compute#targetVpnGateway for target
 *  VPN gateways.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_TargetVpnGatewayList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_TargetVpnGatewayList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetVpnGatewayList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetVpnGatewayList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetVpnGatewayList_Warning_Data_Item
 */
@interface GTLRCompute_TargetVpnGatewayList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_TargetVpnGatewaysScopedList
 */
@interface GTLRCompute_TargetVpnGatewaysScopedList : GTLRObject

/** [Output Only] A list of target VPN gateways contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetVpnGateway *> *targetVpnGateways;

/**
 *  [Output Only] Informational warning which replaces the list of addresses
 *  when the list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_TargetVpnGatewaysScopedList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning which replaces the list of addresses
 *  when the list is empty.
 */
@interface GTLRCompute_TargetVpnGatewaysScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_TargetVpnGatewaysScopedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TargetVpnGatewaysScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_TargetVpnGatewaysScopedList_Warning_Data_Item
 */
@interface GTLRCompute_TargetVpnGatewaysScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_TCPHealthCheck
 */
@interface GTLRCompute_TCPHealthCheck : GTLRObject

/**
 *  The TCP port number to which the health check prober sends packets. The
 *  default value is 80. Valid values are 1 through 65535.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *port;

/** Not supported. */
@property(nonatomic, copy, nullable) NSString *portName;

/**
 *  Specifies how a port is selected for health checking. Can be one of the
 *  following values: USE_FIXED_PORT: Specifies a port number explicitly using
 *  the port field in the health check. Supported by backend services for
 *  pass-through load balancers and backend services for proxy load balancers.
 *  Not supported by target pools. The health check supports all backends
 *  supported by the backend service provided the backend can be health checked.
 *  For example, GCE_VM_IP network endpoint groups, GCE_VM_IP_PORT network
 *  endpoint groups, and instance group backends. USE_NAMED_PORT: Not supported.
 *  USE_SERVING_PORT: Provides an indirect method of specifying the health check
 *  port by referring to the backend service. Only supported by backend services
 *  for proxy load balancers. Not supported by target pools. Not supported by
 *  backend services for pass-through load balancers. Supports all backends that
 *  can be health checked; for example, GCE_VM_IP_PORT network endpoint groups
 *  and instance group backends. For GCE_VM_IP_PORT network endpoint group
 *  backends, the health check uses the port number specified for each endpoint
 *  in the network endpoint group. For instance group backends, the health check
 *  uses the port number determined by looking up the backend service's named
 *  port in the instance group's list of named ports.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TCPHealthCheck_PortSpecification_UseFixedPort The
 *        port number in the health check's port is used for health checking.
 *        Applies to network endpoint group and instance group backends. (Value:
 *        "USE_FIXED_PORT")
 *    @arg @c kGTLRCompute_TCPHealthCheck_PortSpecification_UseNamedPort Not
 *        supported. (Value: "USE_NAMED_PORT")
 *    @arg @c kGTLRCompute_TCPHealthCheck_PortSpecification_UseServingPort For
 *        network endpoint group backends, the health check uses the port number
 *        specified on each endpoint in the network endpoint group. For instance
 *        group backends, the health check uses the port number specified for
 *        the backend service's named port defined in the instance group's named
 *        ports. (Value: "USE_SERVING_PORT")
 */
@property(nonatomic, copy, nullable) NSString *portSpecification;

/**
 *  Specifies the type of proxy header to append before sending data to the
 *  backend, either NONE or PROXY_V1. The default is NONE.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_TCPHealthCheck_ProxyHeader_None Value "NONE"
 *    @arg @c kGTLRCompute_TCPHealthCheck_ProxyHeader_ProxyV1 Value "PROXY_V1"
 */
@property(nonatomic, copy, nullable) NSString *proxyHeader;

/**
 *  Instructs the health check prober to send this exact ASCII string, up to
 *  1024 bytes in length, after establishing the TCP connection.
 */
@property(nonatomic, copy, nullable) NSString *request;

/**
 *  Creates a content-based TCP health check. In addition to establishing a TCP
 *  connection, you can configure the health check to pass only when the backend
 *  sends this exact response ASCII string, up to 1024 bytes in length. For
 *  details, see:
 *  https://cloud.google.com/load-balancing/docs/health-check-concepts#criteria-protocol-ssl-tcp
 */
@property(nonatomic, copy, nullable) NSString *response;

@end


/**
 *  GTLRCompute_TestFailure
 */
@interface GTLRCompute_TestFailure : GTLRObject

/**
 *  The actual output URL evaluated by a load balancer containing the scheme,
 *  host, path and query parameters.
 */
@property(nonatomic, copy, nullable) NSString *actualOutputUrl;

/**
 *  Actual HTTP status code for rule with `urlRedirect` calculated by load
 *  balancer
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *actualRedirectResponseCode;

/** BackendService or BackendBucket returned by load balancer. */
@property(nonatomic, copy, nullable) NSString *actualService;

/**
 *  The expected output URL evaluated by a load balancer containing the scheme,
 *  host, path and query parameters.
 */
@property(nonatomic, copy, nullable) NSString *expectedOutputUrl;

/**
 *  Expected HTTP status code for rule with `urlRedirect` calculated by load
 *  balancer
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *expectedRedirectResponseCode;

/**
 *  Expected BackendService or BackendBucket resource the given URL should be
 *  mapped to.
 */
@property(nonatomic, copy, nullable) NSString *expectedService;

/** HTTP headers of the request. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_UrlMapTestHeader *> *headers;

/** Host portion of the URL. */
@property(nonatomic, copy, nullable) NSString *host;

/** Path portion including query parameters in the URL. */
@property(nonatomic, copy, nullable) NSString *path;

@end


/**
 *  GTLRCompute_TestPermissionsRequest
 */
@interface GTLRCompute_TestPermissionsRequest : GTLRObject

/**
 *  The set of permissions to check for the 'resource'. Permissions with
 *  wildcards (such as '*' or 'storage.*') are not allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  GTLRCompute_TestPermissionsResponse
 */
@interface GTLRCompute_TestPermissionsResponse : GTLRObject

/**
 *  A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *permissions;

@end


/**
 *  GTLRCompute_Uint128
 */
@interface GTLRCompute_Uint128 : GTLRObject

/**
 *  high
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *high;

/**
 *  low
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *low;

@end


/**
 *  Represents a URL Map resource. Compute Engine has two URL Map resources: *
 *  [Global](/compute/docs/reference/rest/v1/urlMaps) *
 *  [Regional](/compute/docs/reference/rest/v1/regionUrlMaps) A URL map resource
 *  is a component of certain types of cloud load balancers and Traffic
 *  Director: * urlMaps are used by external HTTP(S) load balancers and Traffic
 *  Director. * regionUrlMaps are used by internal HTTP(S) load balancers. For a
 *  list of supported URL map features by the load balancer type, see the Load
 *  balancing features: Routing and traffic management table. For a list of
 *  supported URL map features for Traffic Director, see the Traffic Director
 *  features: Routing and traffic management table. This resource defines
 *  mappings from hostnames and URL paths to either a backend service or a
 *  backend bucket. To use the global urlMaps resource, the backend service must
 *  have a loadBalancingScheme of either EXTERNAL or INTERNAL_SELF_MANAGED. To
 *  use the regionUrlMaps resource, the backend service must have a
 *  loadBalancingScheme of INTERNAL_MANAGED. For more information, read URL Map
 *  Concepts.
 */
@interface GTLRCompute_UrlMap : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  defaultRouteAction takes effect when none of the hostRules match. The load
 *  balancer performs advanced routing actions, such as URL rewrites and header
 *  transformations, before forwarding the request to the selected backend. If
 *  defaultRouteAction specifies any weightedBackendServices, defaultService
 *  must not be set. Conversely if defaultService is set, defaultRouteAction
 *  cannot contain any weightedBackendServices. Only one of defaultRouteAction
 *  or defaultUrlRedirect must be set. URL maps for Classic external HTTP(S)
 *  load balancers only support the urlRewrite action within defaultRouteAction.
 *  defaultRouteAction has no effect when the URL map is bound to a target gRPC
 *  proxy that has the validateForProxyless field set to true.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HttpRouteAction *defaultRouteAction;

/**
 *  The full or partial URL of the defaultService resource to which traffic is
 *  directed if none of the hostRules match. If defaultRouteAction is also
 *  specified, advanced routing actions, such as URL rewrites, take effect
 *  before sending the request to the backend. However, if defaultService is
 *  specified, defaultRouteAction cannot contain any weightedBackendServices.
 *  Conversely, if routeAction specifies any weightedBackendServices, service
 *  must not be specified. Only one of defaultService, defaultUrlRedirect , or
 *  defaultRouteAction.weightedBackendService must be set. defaultService has no
 *  effect when the URL map is bound to a target gRPC proxy that has the
 *  validateForProxyless field set to true.
 */
@property(nonatomic, copy, nullable) NSString *defaultService;

/**
 *  When none of the specified hostRules match, the request is redirected to a
 *  URL specified by defaultUrlRedirect. If defaultUrlRedirect is specified,
 *  defaultService or defaultRouteAction must not be set. Not supported when the
 *  URL map is bound to a target gRPC proxy.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HttpRedirectAction *defaultUrlRedirect;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  Fingerprint of this resource. A hash of the contents stored in this object.
 *  This field is used in optimistic locking. This field is ignored when
 *  inserting a UrlMap. An up-to-date fingerprint must be provided in order to
 *  update the UrlMap, otherwise the request will fail with error 412
 *  conditionNotMet. To see the latest fingerprint, make a get() request to
 *  retrieve a UrlMap.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *fingerprint;

/**
 *  Specifies changes to request and response headers that need to take effect
 *  for the selected backendService. The headerAction specified here take effect
 *  after headerAction specified under pathMatcher. headerAction is not
 *  supported for load balancers that have their loadBalancingScheme set to
 *  EXTERNAL. Not supported when the URL map is bound to a target gRPC proxy
 *  that has validateForProxyless field set to true.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HttpHeaderAction *headerAction;

/** The list of host rules to use against the URL. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_HostRule *> *hostRules;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of the resource. Always compute#urlMaps for url maps.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/** The list of named PathMatchers to use against the URL. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_PathMatcher *> *pathMatchers;

/**
 *  [Output Only] URL of the region where the regional URL map resides. This
 *  field is not applicable to global URL maps. You must specify this field as
 *  part of the HTTP request URL. It is not settable as a field in the request
 *  body.
 */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  The list of expected URL mapping tests. Request to update the UrlMap
 *  succeeds only if all test cases pass. You can specify a maximum of 100 tests
 *  per UrlMap. Not supported when the URL map is bound to a target gRPC proxy
 *  that has validateForProxyless field set to true.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_UrlMapTest *> *tests;

@end


/**
 *  Contains a list of UrlMap resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_UrlMapList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of UrlMap resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_UrlMap *> *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_UrlMapList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_UrlMapList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_DeprecatedResourceUsed A link
 *        to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_InjectedKernelsDeprecated The
 *        operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_NextHopAddressNotAssigned The
 *        route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_NextHopNotRunning The route's
 *        next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_NoResultsOnPage No results
 *        are present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_NotCriticalError Error which
 *        is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_RequiredTosAgreement The user
 *        attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_SchemaValidationIgnored When
 *        a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_UrlMapList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_UrlMapList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_UrlMapList_Warning_Data_Item
 */
@interface GTLRCompute_UrlMapList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_UrlMapReference
 */
@interface GTLRCompute_UrlMapReference : GTLRObject

@property(nonatomic, copy, nullable) NSString *urlMap;

@end


/**
 *  GTLRCompute_UrlMapsAggregatedList
 */
@interface GTLRCompute_UrlMapsAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of UrlMapsScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_UrlMapsAggregatedList_Items *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_UrlMapsAggregatedList_Warning *warning;

@end


/**
 *  A list of UrlMapsScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_UrlMapsScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_UrlMapsAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_UrlMapsAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_UrlMapsAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_UrlMapsAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_UrlMapsAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_UrlMapsAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_UrlMapsScopedList
 */
@interface GTLRCompute_UrlMapsScopedList : GTLRObject

/** A list of UrlMaps contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_UrlMap *> *urlMaps;

/**
 *  Informational warning which replaces the list of backend services when the
 *  list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_UrlMapsScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of backend services when the
 *  list is empty.
 */
@interface GTLRCompute_UrlMapsScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_PartialSuccess Success
 *        is reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_ResourceNotDeleted One
 *        or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_UrlMapsScopedList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_UrlMapsScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_UrlMapsScopedList_Warning_Data_Item
 */
@interface GTLRCompute_UrlMapsScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_UrlMapsValidateRequest
 */
@interface GTLRCompute_UrlMapsValidateRequest : GTLRObject

/**
 *  Specifies the load balancer type(s) this validation request is for. Use
 *  EXTERNAL_MANAGED for HTTP/HTTPS External Global Load Balancer with Advanced
 *  Traffic Management. Use EXTERNAL for Classic HTTP/HTTPS External Global Load
 *  Balancer. Other load balancer types are not supported. For more information,
 *  refer to Choosing a load balancer. If unspecified, the load balancing scheme
 *  will be inferred from the backend service resources this URL map references.
 *  If that can not be inferred (for example, this URL map only references
 *  backend buckets, or this Url map is for rewrites and redirects only and
 *  doesn't reference any backends), EXTERNAL will be used as the default type.
 *  If specified, the scheme(s) must not conflict with the load balancing scheme
 *  of the backend service resources this Url map references.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *loadBalancingSchemes;

/** Content of the UrlMap to be validated. */
@property(nonatomic, strong, nullable) GTLRCompute_UrlMap *resource;

@end


/**
 *  GTLRCompute_UrlMapsValidateResponse
 */
@interface GTLRCompute_UrlMapsValidateResponse : GTLRObject

@property(nonatomic, strong, nullable) GTLRCompute_UrlMapValidationResult *result;

@end


/**
 *  Message for the expected URL mappings.
 */
@interface GTLRCompute_UrlMapTest : GTLRObject

/**
 *  Description of this test case.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  The expected output URL evaluated by the load balancer containing the
 *  scheme, host, path and query parameters. For rules that forward requests to
 *  backends, the test passes only when expectedOutputUrl matches the request
 *  forwarded by the load balancer to backends. For rules with urlRewrite, the
 *  test verifies that the forwarded request matches hostRewrite and
 *  pathPrefixRewrite in the urlRewrite action. When service is specified,
 *  expectedOutputUrl`s scheme is ignored. For rules with urlRedirect, the test
 *  passes only if expectedOutputUrl matches the URL in the load balancer's
 *  redirect response. If urlRedirect specifies https_redirect, the test passes
 *  only if the scheme in expectedOutputUrl is also set to HTTPS. If urlRedirect
 *  specifies strip_query, the test passes only if expectedOutputUrl does not
 *  contain any query parameters. expectedOutputUrl is optional when service is
 *  specified.
 */
@property(nonatomic, copy, nullable) NSString *expectedOutputUrl;

/**
 *  For rules with urlRedirect, the test passes only if
 *  expectedRedirectResponseCode matches the HTTP status code in load balancer's
 *  redirect response. expectedRedirectResponseCode cannot be set when service
 *  is set.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *expectedRedirectResponseCode;

/**
 *  HTTP headers for this request. If headers contains a host header, then host
 *  must also match the header value.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_UrlMapTestHeader *> *headers;

/**
 *  Host portion of the URL. If headers contains a host header, then host must
 *  also match the header value.
 */
@property(nonatomic, copy, nullable) NSString *host;

/** Path portion of the URL. */
@property(nonatomic, copy, nullable) NSString *path;

/**
 *  Expected BackendService or BackendBucket resource the given URL should be
 *  mapped to. The service field cannot be set if expectedRedirectResponseCode
 *  is set.
 */
@property(nonatomic, copy, nullable) NSString *service;

@end


/**
 *  HTTP headers used in UrlMapTests.
 */
@interface GTLRCompute_UrlMapTestHeader : GTLRObject

/** Header name. */
@property(nonatomic, copy, nullable) NSString *name;

/** Header value. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Message representing the validation result for a UrlMap.
 */
@interface GTLRCompute_UrlMapValidationResult : GTLRObject

@property(nonatomic, strong, nullable) NSArray<NSString *> *loadErrors;

/**
 *  Whether the given UrlMap can be successfully loaded. If false, 'loadErrors'
 *  indicates the reasons.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *loadSucceeded;

@property(nonatomic, strong, nullable) NSArray<GTLRCompute_TestFailure *> *testFailures;

/**
 *  If successfully loaded, this field indicates whether the test passed. If
 *  false, 'testFailures's indicate the reason of failure.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *testPassed;

@end


/**
 *  The spec for modifying the path before sending the request to the matched
 *  backend service.
 */
@interface GTLRCompute_UrlRewrite : GTLRObject

/**
 *  Before forwarding the request to the selected service, the request's host
 *  header is replaced with contents of hostRewrite. The value must be from 1 to
 *  255 characters.
 */
@property(nonatomic, copy, nullable) NSString *hostRewrite;

/**
 *  Before forwarding the request to the selected backend service, the matching
 *  portion of the request's path is replaced by pathPrefixRewrite. The value
 *  must be from 1 to 1024 characters.
 */
@property(nonatomic, copy, nullable) NSString *pathPrefixRewrite;

@end


/**
 *  Subnetwork which the current user has compute.subnetworks.use permission on.
 */
@interface GTLRCompute_UsableSubnetwork : GTLRObject

/**
 *  [Output Only] The external IPv6 address range that is assigned to this
 *  subnetwork.
 */
@property(nonatomic, copy, nullable) NSString *externalIpv6Prefix;

/**
 *  [Output Only] The internal IPv6 address range that is assigned to this
 *  subnetwork.
 */
@property(nonatomic, copy, nullable) NSString *internalIpv6Prefix;

/** The range of internal addresses that are owned by this subnetwork. */
@property(nonatomic, copy, nullable) NSString *ipCidrRange;

/**
 *  The access type of IPv6 address this subnet holds. It's immutable and can
 *  only be specified during creation or the first time the subnet is updated
 *  into IPV4_IPV6 dual stack.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_UsableSubnetwork_Ipv6AccessType_External VMs on this
 *        subnet will be assigned IPv6 addresses that are accessible via the
 *        Internet, as well as the VPC network. (Value: "EXTERNAL")
 *    @arg @c kGTLRCompute_UsableSubnetwork_Ipv6AccessType_Internal VMs on this
 *        subnet will be assigned IPv6 addresses that are only accessible over
 *        the VPC network. (Value: "INTERNAL")
 */
@property(nonatomic, copy, nullable) NSString *ipv6AccessType;

/** Network URL. */
@property(nonatomic, copy, nullable) NSString *network;

/**
 *  The purpose of the resource. This field can be either PRIVATE_RFC_1918 or
 *  INTERNAL_HTTPS_LOAD_BALANCER. A subnetwork with purpose set to
 *  INTERNAL_HTTPS_LOAD_BALANCER is a user-created subnetwork that is reserved
 *  for Internal HTTP(S) Load Balancing. If unspecified, the purpose defaults to
 *  PRIVATE_RFC_1918. The enableFlowLogs field isn't supported with the purpose
 *  field set to INTERNAL_HTTPS_LOAD_BALANCER.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_UsableSubnetwork_Purpose_InternalHttpsLoadBalancer
 *        Subnet reserved for Internal HTTP(S) Load Balancing. (Value:
 *        "INTERNAL_HTTPS_LOAD_BALANCER")
 *    @arg @c kGTLRCompute_UsableSubnetwork_Purpose_Private Regular user created
 *        or automatically created subnet. (Value: "PRIVATE")
 *    @arg @c kGTLRCompute_UsableSubnetwork_Purpose_PrivateRfc1918 Regular user
 *        created or automatically created subnet. (Value: "PRIVATE_RFC_1918")
 *    @arg @c kGTLRCompute_UsableSubnetwork_Purpose_PrivateServiceConnect
 *        Subnetworks created for Private Service Connect in the producer
 *        network. (Value: "PRIVATE_SERVICE_CONNECT")
 *    @arg @c kGTLRCompute_UsableSubnetwork_Purpose_RegionalManagedProxy
 *        Subnetwork used for Regional Internal/External HTTP(S) Load Balancing.
 *        (Value: "REGIONAL_MANAGED_PROXY")
 */
@property(nonatomic, copy, nullable) NSString *purpose;

/**
 *  The role of subnetwork. Currently, this field is only used when purpose =
 *  INTERNAL_HTTPS_LOAD_BALANCER. The value can be set to ACTIVE or BACKUP. An
 *  ACTIVE subnetwork is one that is currently being used for Internal HTTP(S)
 *  Load Balancing. A BACKUP subnetwork is one that is ready to be promoted to
 *  ACTIVE or is currently draining. This field can be updated with a patch
 *  request.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_UsableSubnetwork_Role_Active The ACTIVE subnet that
 *        is currently used. (Value: "ACTIVE")
 *    @arg @c kGTLRCompute_UsableSubnetwork_Role_Backup The BACKUP subnet that
 *        could be promoted to ACTIVE. (Value: "BACKUP")
 */
@property(nonatomic, copy, nullable) NSString *role;

/** Secondary IP ranges. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_UsableSubnetworkSecondaryRange *> *secondaryIpRanges;

/**
 *  The stack type for the subnet. If set to IPV4_ONLY, new VMs in the subnet
 *  are assigned IPv4 addresses only. If set to IPV4_IPV6, new VMs in the subnet
 *  can be assigned both IPv4 and IPv6 addresses. If not specified, IPV4_ONLY is
 *  used. This field can be both set at resource creation time and updated using
 *  patch.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_UsableSubnetwork_StackType_Ipv4Ipv6 New VMs in this
 *        subnet can have both IPv4 and IPv6 addresses. (Value: "IPV4_IPV6")
 *    @arg @c kGTLRCompute_UsableSubnetwork_StackType_Ipv4Only New VMs in this
 *        subnet will only be assigned IPv4 addresses. (Value: "IPV4_ONLY")
 */
@property(nonatomic, copy, nullable) NSString *stackType;

/** Subnetwork URL. */
@property(nonatomic, copy, nullable) NSString *subnetwork;

@end


/**
 *  GTLRCompute_UsableSubnetworksAggregatedList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_UsableSubnetworksAggregatedList : GTLRCollectionObject

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  [Output] A list of usable subnetwork URLs.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_UsableSubnetwork *> *items;

/**
 *  [Output Only] Type of resource. Always
 *  compute#usableSubnetworksAggregatedList for aggregated lists of usable
 *  subnetworks.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results. In special cases listUsable may return
 *  0 subnetworks and nextPageToken which still should be used to get the next
 *  page of results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_UsableSubnetworksAggregatedList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_UsableSubnetworksAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_UsableSubnetworksAggregatedList_Warning_Code_Unreachable
 *        A given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_UsableSubnetworksAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_UsableSubnetworksAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_UsableSubnetworksAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Secondary IP range of a usable subnetwork.
 */
@interface GTLRCompute_UsableSubnetworkSecondaryRange : GTLRObject

/** The range of IP addresses belonging to this subnetwork secondary range. */
@property(nonatomic, copy, nullable) NSString *ipCidrRange;

/**
 *  The name associated with this subnetwork secondary range, used when adding
 *  an alias IP range to a VM instance. The name must be 1-63 characters long,
 *  and comply with RFC1035. The name must be unique within the subnetwork.
 */
@property(nonatomic, copy, nullable) NSString *rangeName;

@end


/**
 *  The location in Cloud Storage and naming method of the daily usage report.
 *  Contains bucket_name and report_name prefix.
 */
@interface GTLRCompute_UsageExportLocation : GTLRObject

/**
 *  The name of an existing bucket in Cloud Storage where the usage report
 *  object is stored. The Google Service Account is granted write access to this
 *  bucket. This can either be the bucket name by itself, such as
 *  example-bucket, or the bucket name with gs:// or
 *  https://storage.googleapis.com/ in front of it, such as gs://example-bucket.
 */
@property(nonatomic, copy, nullable) NSString *bucketName;

/**
 *  An optional prefix for the name of the usage report object stored in
 *  bucketName. If not supplied, defaults to usage_gce. The report is stored as
 *  a CSV file named report_name_prefix_gce_YYYYMMDD.csv where YYYYMMDD is the
 *  day of the usage according to Pacific Time. If you supply a prefix, it
 *  should conform to Cloud Storage object naming conventions.
 */
@property(nonatomic, copy, nullable) NSString *reportNamePrefix;

@end


/**
 *  Contain information of Nat mapping for a VM endpoint (i.e., NIC).
 */
@interface GTLRCompute_VmEndpointNatMappings : GTLRObject

/** Name of the VM instance which the endpoint belongs to */
@property(nonatomic, copy, nullable) NSString *instanceName;

@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VmEndpointNatMappingsInterfaceNatMappings *> *interfaceNatMappings;

@end


/**
 *  Contain information of Nat mapping for an interface of this endpoint.
 */
@interface GTLRCompute_VmEndpointNatMappingsInterfaceNatMappings : GTLRObject

/**
 *  List of all drain IP:port-range mappings assigned to this interface. These
 *  ranges are inclusive, that is, both the first and the last ports can be used
 *  for NAT. Example: ["2.2.2.2:12345-12355", "1.1.1.1:2234-2234"].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *drainNatIpPortRanges;

/**
 *  A list of all IP:port-range mappings assigned to this interface. These
 *  ranges are inclusive, that is, both the first and the last ports can be used
 *  for NAT. Example: ["2.2.2.2:12345-12355", "1.1.1.1:2234-2234"].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *natIpPortRanges;

/**
 *  Total number of drain ports across all NAT IPs allocated to this interface.
 *  It equals to the aggregated port number in the field
 *  drain_nat_ip_port_ranges.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numTotalDrainNatPorts;

/**
 *  Total number of ports across all NAT IPs allocated to this interface. It
 *  equals to the aggregated port number in the field nat_ip_port_ranges.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numTotalNatPorts;

/** Information about mappings provided by rules in this NAT. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VmEndpointNatMappingsInterfaceNatMappingsNatRuleMappings *> *ruleMappings;

/**
 *  Alias IP range for this interface endpoint. It will be a private (RFC 1918)
 *  IP range. Examples: "10.33.4.55/32", or "192.168.5.0/24".
 */
@property(nonatomic, copy, nullable) NSString *sourceAliasIpRange;

/** Primary IP of the VM for this NIC. */
@property(nonatomic, copy, nullable) NSString *sourceVirtualIp;

@end


/**
 *  Contains information of NAT Mappings provided by a NAT Rule.
 */
@interface GTLRCompute_VmEndpointNatMappingsInterfaceNatMappingsNatRuleMappings : GTLRObject

/**
 *  List of all drain IP:port-range mappings assigned to this interface by this
 *  rule. These ranges are inclusive, that is, both the first and the last ports
 *  can be used for NAT. Example: ["2.2.2.2:12345-12355", "1.1.1.1:2234-2234"].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *drainNatIpPortRanges;

/**
 *  A list of all IP:port-range mappings assigned to this interface by this
 *  rule. These ranges are inclusive, that is, both the first and the last ports
 *  can be used for NAT. Example: ["2.2.2.2:12345-12355", "1.1.1.1:2234-2234"].
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *natIpPortRanges;

/**
 *  Total number of drain ports across all NAT IPs allocated to this interface
 *  by this rule. It equals the aggregated port number in the field
 *  drain_nat_ip_port_ranges.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numTotalDrainNatPorts;

/**
 *  Total number of ports across all NAT IPs allocated to this interface by this
 *  rule. It equals the aggregated port number in the field nat_ip_port_ranges.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *numTotalNatPorts;

/**
 *  Rule number of the NAT Rule.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ruleNumber;

@end


/**
 *  Contains a list of VmEndpointNatMappings.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "result" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_VmEndpointNatMappingsList : GTLRCollectionObject

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  [Output Only] Type of resource. Always compute#vmEndpointNatMappingsList for
 *  lists of Nat mappings of VM endpoints.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/**
 *  [Output Only] A list of Nat mapping information of VM endpoints.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VmEndpointNatMappings *> *result;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_VmEndpointNatMappingsList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_VmEndpointNatMappingsList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_VmEndpointNatMappingsList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VmEndpointNatMappingsList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_VmEndpointNatMappingsList_Warning_Data_Item
 */
@interface GTLRCompute_VmEndpointNatMappingsList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Represents a HA VPN gateway. HA VPN is a high-availability (HA) Cloud VPN
 *  solution that lets you securely connect your on-premises network to your
 *  Google Cloud Virtual Private Cloud network through an IPsec VPN connection
 *  in a single region. For more information about Cloud HA VPN solutions, see
 *  Cloud VPN topologies .
 */
@interface GTLRCompute_VpnGateway : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  [Output Only] Type of resource. Always compute#vpnGateway for VPN gateways.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  A fingerprint for the labels being applied to this VpnGateway, which is
 *  essentially a hash of the labels set used for optimistic locking. The
 *  fingerprint is initially generated by Compute Engine and changes after every
 *  request to modify or update labels. You must always provide an up-to-date
 *  fingerprint hash in order to update or change labels, otherwise the request
 *  will fail with error 412 conditionNotMet. To see the latest fingerprint,
 *  make a get() request to retrieve an VpnGateway.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *labelFingerprint;

/**
 *  Labels for this resource. These can only be added or modified by the
 *  setLabels method. Each label key/value pair must comply with RFC1035. Label
 *  values may be empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_VpnGateway_Labels *labels;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  URL of the network to which this VPN gateway is attached. Provided by the
 *  client when the VPN gateway is created.
 */
@property(nonatomic, copy, nullable) NSString *network;

/** [Output Only] URL of the region where the VPN gateway resides. */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  The stack type for this VPN gateway to identify the IP protocols that are
 *  enabled. Possible values are: IPV4_ONLY, IPV4_IPV6. If not specified,
 *  IPV4_ONLY will be used.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_VpnGateway_StackType_Ipv4Ipv6 Enable VPN gateway with
 *        both IPv4 and IPv6 protocols. (Value: "IPV4_IPV6")
 *    @arg @c kGTLRCompute_VpnGateway_StackType_Ipv4Only Enable VPN gateway with
 *        only IPv4 protocol. (Value: "IPV4_ONLY")
 */
@property(nonatomic, copy, nullable) NSString *stackType;

/** The list of VPN interfaces associated with this VPN gateway. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VpnGatewayVpnGatewayInterface *> *vpnInterfaces;

@end


/**
 *  Labels for this resource. These can only be added or modified by the
 *  setLabels method. Each label key/value pair must comply with RFC1035. Label
 *  values may be empty.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_VpnGateway_Labels : GTLRObject
@end


/**
 *  GTLRCompute_VpnGatewayAggregatedList
 */
@interface GTLRCompute_VpnGatewayAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of VpnGateway resources. */
@property(nonatomic, strong, nullable) GTLRCompute_VpnGatewayAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#vpnGateway for VPN gateways.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_VpnGatewayAggregatedList_Warning *warning;

@end


/**
 *  A list of VpnGateway resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_VpnGatewaysScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_VpnGatewayAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_VpnGatewayAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_VpnGatewayAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VpnGatewayAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_VpnGatewayAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_VpnGatewayAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of VpnGateway resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_VpnGatewayList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of VpnGateway resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VpnGateway *> *items;

/**
 *  [Output Only] Type of resource. Always compute#vpnGateway for VPN gateways.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_VpnGatewayList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_VpnGatewayList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_VpnGatewayList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VpnGatewayList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_VpnGatewayList_Warning_Data_Item
 */
@interface GTLRCompute_VpnGatewayList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_VpnGatewaysGetStatusResponse
 */
@interface GTLRCompute_VpnGatewaysGetStatusResponse : GTLRObject

@property(nonatomic, strong, nullable) GTLRCompute_VpnGatewayStatus *result;

@end


/**
 *  GTLRCompute_VpnGatewaysScopedList
 */
@interface GTLRCompute_VpnGatewaysScopedList : GTLRObject

/** [Output Only] A list of VPN gateways contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VpnGateway *> *vpnGateways;

/**
 *  [Output Only] Informational warning which replaces the list of addresses
 *  when the list is empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_VpnGatewaysScopedList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning which replaces the list of addresses
 *  when the list is empty.
 */
@interface GTLRCompute_VpnGatewaysScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_VpnGatewaysScopedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VpnGatewaysScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_VpnGatewaysScopedList_Warning_Data_Item
 */
@interface GTLRCompute_VpnGatewaysScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_VpnGatewayStatus
 */
@interface GTLRCompute_VpnGatewayStatus : GTLRObject

/** List of VPN connection for this VpnGateway. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VpnGatewayStatusVpnConnection *> *vpnConnections;

@end


/**
 *  Describes the high availability requirement state for the VPN connection
 *  between this Cloud VPN gateway and a peer gateway.
 */
@interface GTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState : GTLRObject

/**
 *  Indicates the high availability requirement state for the VPN connection.
 *  Valid values are CONNECTION_REDUNDANCY_MET, CONNECTION_REDUNDANCY_NOT_MET.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState_State_ConnectionRedundancyMet
 *        VPN tunnels are configured with adequate redundancy from Cloud VPN
 *        gateway to the peer VPN gateway. For both GCP-to-non-GCP and
 *        GCP-to-GCP connections, the adequate redundancy is a pre-requirement
 *        for users to get 99.99% availability on GCP side; please note that for
 *        any connection, end-to-end 99.99% availability is subject to proper
 *        configuration on the peer VPN gateway. (Value:
 *        "CONNECTION_REDUNDANCY_MET")
 *    @arg @c kGTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState_State_ConnectionRedundancyNotMet
 *        VPN tunnels are not configured with adequate redundancy from the Cloud
 *        VPN gateway to the peer gateway (Value:
 *        "CONNECTION_REDUNDANCY_NOT_MET")
 */
@property(nonatomic, copy, nullable) NSString *state;

/**
 *  Indicates the reason why the VPN connection does not meet the high
 *  availability redundancy criteria/requirement. Valid values is
 *  INCOMPLETE_TUNNELS_COVERAGE.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState_UnsatisfiedReason_IncompleteTunnelsCoverage
 *        Value "INCOMPLETE_TUNNELS_COVERAGE"
 */
@property(nonatomic, copy, nullable) NSString *unsatisfiedReason;

@end


/**
 *  Contains some information about a VPN tunnel.
 */
@interface GTLRCompute_VpnGatewayStatusTunnel : GTLRObject

/**
 *  The VPN gateway interface this VPN tunnel is associated with.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *localGatewayInterface;

/**
 *  The peer gateway interface this VPN tunnel is connected to, the peer gateway
 *  could either be an external VPN gateway or GCP VPN gateway.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *peerGatewayInterface;

/** URL reference to the VPN tunnel. */
@property(nonatomic, copy, nullable) NSString *tunnelUrl;

@end


/**
 *  A VPN connection contains all VPN tunnels connected from this VpnGateway to
 *  the same peer gateway. The peer gateway could either be a external VPN
 *  gateway or GCP VPN gateway.
 */
@interface GTLRCompute_VpnGatewayStatusVpnConnection : GTLRObject

/**
 *  URL reference to the peer external VPN gateways to which the VPN tunnels in
 *  this VPN connection are connected. This field is mutually exclusive with
 *  peer_gcp_gateway.
 */
@property(nonatomic, copy, nullable) NSString *peerExternalGateway;

/**
 *  URL reference to the peer side VPN gateways to which the VPN tunnels in this
 *  VPN connection are connected. This field is mutually exclusive with
 *  peer_gcp_gateway.
 */
@property(nonatomic, copy, nullable) NSString *peerGcpGateway;

/** HighAvailabilityRequirementState for the VPN connection. */
@property(nonatomic, strong, nullable) GTLRCompute_VpnGatewayStatusHighAvailabilityRequirementState *state;

/** List of VPN tunnels that are in this VPN connection. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VpnGatewayStatusTunnel *> *tunnels;

@end


/**
 *  A VPN gateway interface.
 */
@interface GTLRCompute_VpnGatewayVpnGatewayInterface : GTLRObject

/**
 *  [Output Only] Numeric identifier for this VPN interface associated with the
 *  VPN gateway.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  URL of the VLAN attachment (interconnectAttachment) resource for this VPN
 *  gateway interface. When the value of this field is present, the VPN gateway
 *  is used for HA VPN over Cloud Interconnect; all egress or ingress traffic
 *  for this VPN gateway interface goes through the specified VLAN attachment
 *  resource.
 */
@property(nonatomic, copy, nullable) NSString *interconnectAttachment;

/**
 *  [Output Only] IP address for this VPN interface associated with the VPN
 *  gateway. The IP address could be either a regional external IP address or a
 *  regional internal IP address. The two IP addresses for a VPN gateway must be
 *  all regional external or regional internal IP addresses. There cannot be a
 *  mix of regional external IP addresses and regional internal IP addresses.
 *  For HA VPN over Cloud Interconnect, the IP addresses for both interfaces
 *  could either be regional internal IP addresses or regional external IP
 *  addresses. For regular (non HA VPN over Cloud Interconnect) HA VPN tunnels,
 *  the IP address must be a regional external IP address.
 */
@property(nonatomic, copy, nullable) NSString *ipAddress;

@end


/**
 *  Represents a Cloud VPN Tunnel resource. For more information about VPN, read
 *  the the Cloud VPN Overview.
 */
@interface GTLRCompute_VpnTunnel : GTLRObject

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/**
 *  An optional description of this resource. Provide this property when you
 *  create the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/** [Output Only] Detailed status message for the VPN tunnel. */
@property(nonatomic, copy, nullable) NSString *detailedStatus;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/**
 *  IKE protocol version to use when establishing the VPN tunnel with the peer
 *  VPN gateway. Acceptable IKE versions are 1 or 2. The default version is 2.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *ikeVersion;

/**
 *  [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  Local traffic selector to use when establishing the VPN tunnel with the peer
 *  VPN gateway. The value should be a CIDR formatted string, for example:
 *  192.168.0.0/16. The ranges must be disjoint. Only IPv4 is supported.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *localTrafficSelector;

/**
 *  Name of the resource. Provided by the client when the resource is created.
 *  The name must be 1-63 characters long, and comply with RFC1035.
 *  Specifically, the name must be 1-63 characters long and match the regular
 *  expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must
 *  be a lowercase letter, and all following characters must be a dash,
 *  lowercase letter, or digit, except the last character, which cannot be a
 *  dash.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  URL of the peer side external VPN gateway to which this VPN tunnel is
 *  connected. Provided by the client when the VPN tunnel is created. This field
 *  is exclusive with the field peerGcpGateway.
 */
@property(nonatomic, copy, nullable) NSString *peerExternalGateway;

/**
 *  The interface ID of the external VPN gateway to which this VPN tunnel is
 *  connected. Provided by the client when the VPN tunnel is created. Possible
 *  values are: `0`, `1`, `2`, `3`. The number of IDs in use depends on the
 *  external VPN gateway redundancy type.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *peerExternalGatewayInterface;

/**
 *  URL of the peer side HA GCP VPN gateway to which this VPN tunnel is
 *  connected. Provided by the client when the VPN tunnel is created. This field
 *  can be used when creating highly available VPN from VPC network to VPC
 *  network, the field is exclusive with the field peerExternalGateway. If
 *  provided, the VPN tunnel will automatically use the same vpnGatewayInterface
 *  ID in the peer GCP VPN gateway.
 */
@property(nonatomic, copy, nullable) NSString *peerGcpGateway;

/** IP address of the peer VPN gateway. Only IPv4 is supported. */
@property(nonatomic, copy, nullable) NSString *peerIp;

/**
 *  [Output Only] URL of the region where the VPN tunnel resides. You must
 *  specify this field as part of the HTTP request URL. It is not settable as a
 *  field in the request body.
 */
@property(nonatomic, copy, nullable) NSString *region;

/**
 *  Remote traffic selectors to use when establishing the VPN tunnel with the
 *  peer VPN gateway. The value should be a CIDR formatted string, for example:
 *  192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *remoteTrafficSelector;

/** URL of the router resource to be used for dynamic routing. */
@property(nonatomic, copy, nullable) NSString *router;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  Shared secret used to set the secure session between the Cloud VPN gateway
 *  and the peer VPN gateway.
 */
@property(nonatomic, copy, nullable) NSString *sharedSecret;

/** Hash of the shared secret. */
@property(nonatomic, copy, nullable) NSString *sharedSecretHash;

/**
 *  [Output Only] The status of the VPN tunnel, which can be one of the
 *  following: - PROVISIONING: Resource is being allocated for the VPN tunnel. -
 *  WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the
 *  user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route
 *  resources are needed to setup the VPN tunnel. - FIRST_HANDSHAKE: Successful
 *  first handshake with the peer VPN. - ESTABLISHED: Secure session is
 *  successfully established with the peer VPN. - NETWORK_ERROR: Deprecated,
 *  replaced by NO_INCOMING_PACKETS - AUTHORIZATION_ERROR: Auth error (for
 *  example, bad shared secret). - NEGOTIATION_FAILURE: Handshake failed. -
 *  DEPROVISIONING: Resources are being deallocated for the VPN tunnel. -
 *  FAILED: Tunnel creation has failed and the tunnel is not ready to be used. -
 *  NO_INCOMING_PACKETS: No incoming packets from peer. - REJECTED: Tunnel
 *  configuration was rejected, can be result of being denied access. -
 *  ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all required
 *  resources. - STOPPED: Tunnel is stopped due to its Forwarding Rules being
 *  deleted for Classic VPN tunnels or the project is in frozen state. -
 *  PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP, probably
 *  behind NAT. - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing not
 *  allowed for an HA-VPN tunnel.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_VpnTunnel_Status_AllocatingResources Cloud VPN is in
 *        the process of allocating all required resources (specifically, a borg
 *        task). (Value: "ALLOCATING_RESOURCES")
 *    @arg @c kGTLRCompute_VpnTunnel_Status_AuthorizationError Auth error (e.g.
 *        bad shared secret). (Value: "AUTHORIZATION_ERROR")
 *    @arg @c kGTLRCompute_VpnTunnel_Status_Deprovisioning Resources is being
 *        deallocated for the VPN tunnel. (Value: "DEPROVISIONING")
 *    @arg @c kGTLRCompute_VpnTunnel_Status_Established Secure session is
 *        successfully established with peer VPN. (Value: "ESTABLISHED")
 *    @arg @c kGTLRCompute_VpnTunnel_Status_Failed Tunnel creation has failed
 *        and the tunnel is not ready to be used. (Value: "FAILED")
 *    @arg @c kGTLRCompute_VpnTunnel_Status_FirstHandshake Successful first
 *        handshake with peer VPN. (Value: "FIRST_HANDSHAKE")
 *    @arg @c kGTLRCompute_VpnTunnel_Status_NegotiationFailure Handshake failed.
 *        (Value: "NEGOTIATION_FAILURE")
 *    @arg @c kGTLRCompute_VpnTunnel_Status_NetworkError Deprecated, replaced by
 *        NO_INCOMING_PACKETS (Value: "NETWORK_ERROR")
 *    @arg @c kGTLRCompute_VpnTunnel_Status_NoIncomingPackets No incoming
 *        packets from peer (Value: "NO_INCOMING_PACKETS")
 *    @arg @c kGTLRCompute_VpnTunnel_Status_Provisioning Resource is being
 *        allocated for the VPN tunnel. (Value: "PROVISIONING")
 *    @arg @c kGTLRCompute_VpnTunnel_Status_Rejected Tunnel configuration was
 *        rejected, can be result of being denylisted. (Value: "REJECTED")
 *    @arg @c kGTLRCompute_VpnTunnel_Status_Stopped Tunnel is stopped due to its
 *        Forwarding Rules being deleted. (Value: "STOPPED")
 *    @arg @c kGTLRCompute_VpnTunnel_Status_WaitingForFullConfig Waiting to
 *        receive all VPN-related configs from user. Network, TargetVpnGateway,
 *        VpnTunnel, ForwardingRule and Route resources are needed to setup VPN
 *        tunnel. (Value: "WAITING_FOR_FULL_CONFIG")
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  URL of the Target VPN gateway with which this VPN tunnel is associated.
 *  Provided by the client when the VPN tunnel is created.
 */
@property(nonatomic, copy, nullable) NSString *targetVpnGateway;

/**
 *  URL of the VPN gateway with which this VPN tunnel is associated. Provided by
 *  the client when the VPN tunnel is created. This must be used (instead of
 *  target_vpn_gateway) if a High Availability VPN gateway resource is created.
 */
@property(nonatomic, copy, nullable) NSString *vpnGateway;

/**
 *  The interface ID of the VPN gateway with which this VPN tunnel is
 *  associated. Possible values are: `0`, `1`.
 *
 *  Uses NSNumber of intValue.
 */
@property(nonatomic, strong, nullable) NSNumber *vpnGatewayInterface;

@end


/**
 *  GTLRCompute_VpnTunnelAggregatedList
 */
@interface GTLRCompute_VpnTunnelAggregatedList : GTLRObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/** A list of VpnTunnelsScopedList resources. */
@property(nonatomic, strong, nullable) GTLRCompute_VpnTunnelAggregatedList_Items *items;

/**
 *  [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Unreachable resources. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *unreachables;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_VpnTunnelAggregatedList_Warning *warning;

@end


/**
 *  A list of VpnTunnelsScopedList resources.
 *
 *  @note This class is documented as having more properties of
 *        GTLRCompute_VpnTunnelsScopedList. Use @c -additionalJSONKeys and @c
 *        -additionalPropertyForName: to get the list of properties and then
 *        fetch them; or @c -additionalProperties to fetch them all at once.
 */
@interface GTLRCompute_VpnTunnelAggregatedList_Items : GTLRObject
@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_VpnTunnelAggregatedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NoResultsOnPage
 *        No results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_VpnTunnelAggregatedList_Warning_Code_Unreachable A
 *        given scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VpnTunnelAggregatedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_VpnTunnelAggregatedList_Warning_Data_Item
 */
@interface GTLRCompute_VpnTunnelAggregatedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Contains a list of VpnTunnel resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_VpnTunnelList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of VpnTunnel resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VpnTunnel *> *items;

/**
 *  [Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_VpnTunnelList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_VpnTunnelList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_CleanupFailed Warning
 *        about failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_NoResultsOnPage No results
 *        are present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_NotCriticalError Error
 *        which is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_VpnTunnelList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VpnTunnelList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_VpnTunnelList_Warning_Data_Item
 */
@interface GTLRCompute_VpnTunnelList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_VpnTunnelsScopedList
 */
@interface GTLRCompute_VpnTunnelsScopedList : GTLRObject

/** A list of VPN tunnels contained in this scope. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VpnTunnel *> *vpnTunnels;

/**
 *  Informational warning which replaces the list of addresses when the list is
 *  empty.
 */
@property(nonatomic, strong, nullable) GTLRCompute_VpnTunnelsScopedList_Warning *warning;

@end


/**
 *  Informational warning which replaces the list of addresses when the list is
 *  empty.
 */
@interface GTLRCompute_VpnTunnelsScopedList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_CleanupFailed
 *        Warning about failed cleanup of transient changes made by a failed
 *        operation. (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_DeprecatedResourceUsed
 *        A link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_DeprecatedTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ExperimentalTypeUsed
 *        When deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ExternalApiWarning
 *        Warning that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_FieldValueOverriden
 *        Warning that value of a field has been overridden. Deprecated unused
 *        field. (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_LargeDeploymentWarning
 *        When deploying a deployment with a exceedingly large number of
 *        resources (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_MissingTypeDependency
 *        A resource depends on a missing type (Value:
 *        "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopCannotIpForward
 *        The route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopInstanceNotFound
 *        The route's nextHopInstance URL refers to an instance that does not
 *        exist. (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NextHopNotRunning
 *        The route's next hop instance does not have a status of RUNNING.
 *        (Value: "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NoResultsOnPage No
 *        results are present on a particular list page. (Value:
 *        "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_NotCriticalError
 *        Error which is not critical. We decided to continue the process
 *        despite the mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_PartialSuccess
 *        Success is reported, but some results may be missing due to errors
 *        (Value: "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_RequiredTosAgreement
 *        The user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_ResourceNotDeleted
 *        One or more of the resources set to auto-delete could not be deleted
 *        because they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_SchemaValidationIgnored
 *        When a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_UndeclaredProperties
 *        When undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_VpnTunnelsScopedList_Warning_Code_Unreachable A given
 *        scope cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_VpnTunnelsScopedList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_VpnTunnelsScopedList_Warning_Data_Item
 */
@interface GTLRCompute_VpnTunnelsScopedList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_WafExpressionSet
 */
@interface GTLRCompute_WafExpressionSet : GTLRObject

/**
 *  A list of alternate IDs. The format should be: - E.g. XSS-stable Generic
 *  suffix like "stable" is particularly useful if a policy likes to avail newer
 *  set of expressions without having to change the policy. A given alias name
 *  can't be used for more than one entity set.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *aliases;

/** List of available expressions. */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_WafExpressionSetExpression *> *expressions;

/**
 *  Google specified expression set ID. The format should be: - E.g.
 *  XSS-20170329 required
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

@end


/**
 *  GTLRCompute_WafExpressionSetExpression
 */
@interface GTLRCompute_WafExpressionSetExpression : GTLRObject

/**
 *  Expression ID should uniquely identify the origin of the expression. E.g.
 *  owasp-crs-v020901-id973337 identifies Owasp core rule set version 2.9.1 rule
 *  id 973337. The ID could be used to determine the individual attack
 *  definition that has been detected. It could also be used to exclude it from
 *  the policy in case of false positive. required
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

@end


/**
 *  In contrast to a single BackendService in HttpRouteAction to which all
 *  matching traffic is directed to, WeightedBackendService allows traffic to be
 *  split across multiple backend services. The volume of traffic for each
 *  backend service is proportional to the weight specified in each
 *  WeightedBackendService
 */
@interface GTLRCompute_WeightedBackendService : GTLRObject

/**
 *  The full or partial URL to the default BackendService resource. Before
 *  forwarding the request to backendService, the load balancer applies any
 *  relevant headerActions specified as part of this backendServiceWeight.
 */
@property(nonatomic, copy, nullable) NSString *backendService;

/**
 *  Specifies changes to request and response headers that need to take effect
 *  for the selected backendService. headerAction specified here take effect
 *  before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.
 *  headerAction is not supported for load balancers that have their
 *  loadBalancingScheme set to EXTERNAL. Not supported when the URL map is bound
 *  to a target gRPC proxy that has validateForProxyless field set to true.
 */
@property(nonatomic, strong, nullable) GTLRCompute_HttpHeaderAction *headerAction;

/**
 *  Specifies the fraction of traffic sent to a backend service, computed as
 *  weight / (sum of all weightedBackendService weights in routeAction) . The
 *  selection of a backend service is determined only for new traffic. Once a
 *  user's request has been directed to a backend service, subsequent requests
 *  are sent to the same backend service as determined by the backend service's
 *  session affinity policy. The value must be from 0 to 1000.
 *
 *  Uses NSNumber of unsignedIntValue.
 */
@property(nonatomic, strong, nullable) NSNumber *weight;

@end


/**
 *  GTLRCompute_XpnHostList
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_XpnHostList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  [Output Only] A list of shared VPC host project URLs.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Project *> *items;

/**
 *  [Output Only] Type of resource. Always compute#xpnHostList for lists of
 *  shared VPC hosts.
 */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_XpnHostList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_XpnHostList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_DeprecatedResourceUsed A
 *        link to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_DiskSizeLargerThanImageSize
 *        The user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_ExternalApiWarning Warning
 *        that is present in an external api call (Value:
 *        "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_InjectedKernelsDeprecated
 *        The operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_NextHopAddressNotAssigned
 *        The route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_NextHopInstanceNotOnNetwork
 *        The route's nextHopInstance URL refers to an instance that is not on
 *        the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_NextHopNotRunning The
 *        route's next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_NoResultsOnPage No results
 *        are present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_NotCriticalError Error which
 *        is not critical. We decided to continue the process despite the
 *        mentioned error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_RequiredTosAgreement The
 *        user attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_ResourceNotDeleted One or
 *        more of the resources set to auto-delete could not be deleted because
 *        they were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_SchemaValidationIgnored When
 *        a resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_XpnHostList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_XpnHostList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_XpnHostList_Warning_Data_Item
 */
@interface GTLRCompute_XpnHostList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  Service resource (a.k.a service project) ID.
 */
@interface GTLRCompute_XpnResourceId : GTLRObject

/**
 *  The ID of the service resource. In the case of projects, this field supports
 *  project id (e.g., my-project-123) and project number (e.g. 12345678).
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  The type of the service resource.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_XpnResourceId_Type_Project Value "PROJECT"
 *    @arg @c kGTLRCompute_XpnResourceId_Type_XpnResourceTypeUnspecified Value
 *        "XPN_RESOURCE_TYPE_UNSPECIFIED"
 */
@property(nonatomic, copy, nullable) NSString *type;

@end


/**
 *  Represents a Zone resource. A zone is a deployment area. These deployment
 *  areas are subsets of a region. For example the zone us-east1-a is located in
 *  the us-east1 region. For more information, read Regions and Zones.
 */
@interface GTLRCompute_Zone : GTLRObject

/** [Output Only] Available cpu/platform selections for the zone. */
@property(nonatomic, strong, nullable) NSArray<NSString *> *availableCpuPlatforms;

/** [Output Only] Creation timestamp in RFC3339 text format. */
@property(nonatomic, copy, nullable) NSString *creationTimestamp;

/** [Output Only] The deprecation status associated with this zone. */
@property(nonatomic, strong, nullable) GTLRCompute_DeprecationStatus *deprecated;

/**
 *  [Output Only] Textual description of the resource.
 *
 *  Remapped to 'descriptionProperty' to avoid NSObject's 'description'.
 */
@property(nonatomic, copy, nullable) NSString *descriptionProperty;

/**
 *  [Output Only] The unique identifier for the resource. This identifier is
 *  defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 *
 *  Uses NSNumber of unsignedLongLongValue.
 */
@property(nonatomic, strong, nullable) NSNumber *identifier;

/** [Output Only] Type of the resource. Always compute#zone for zones. */
@property(nonatomic, copy, nullable) NSString *kind;

/** [Output Only] Name of the resource. */
@property(nonatomic, copy, nullable) NSString *name;

/** [Output Only] Full URL reference to the region which hosts the zone. */
@property(nonatomic, copy, nullable) NSString *region;

/** [Output Only] Server-defined URL for the resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/**
 *  [Output Only] Status of the zone, either UP or DOWN.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_Zone_Status_Down Value "DOWN"
 *    @arg @c kGTLRCompute_Zone_Status_Up Value "UP"
 */
@property(nonatomic, copy, nullable) NSString *status;

/**
 *  [Output Only] Reserved for future use.
 *
 *  Uses NSNumber of boolValue.
 */
@property(nonatomic, strong, nullable) NSNumber *supportsPzs;

@end


/**
 *  Contains a list of zone resources.
 *
 *  @note This class supports NSFastEnumeration and indexed subscripting over
 *        its "items" property. If returned as the result of a query, it should
 *        support automatic pagination (when @c shouldFetchNextPages is
 *        enabled).
 */
@interface GTLRCompute_ZoneList : GTLRCollectionObject

/**
 *  [Output Only] Unique identifier for the resource; defined by the server.
 *
 *  identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
 */
@property(nonatomic, copy, nullable) NSString *identifier;

/**
 *  A list of Zone resources.
 *
 *  @note This property is used to support NSFastEnumeration and indexed
 *        subscripting on this class.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Zone *> *items;

/** Type of resource. */
@property(nonatomic, copy, nullable) NSString *kind;

/**
 *  [Output Only] This token allows you to get the next page of results for list
 *  requests. If the number of results is larger than maxResults, use the
 *  nextPageToken as a value for the query parameter pageToken in the next list
 *  request. Subsequent list requests will have their own nextPageToken to
 *  continue paging through the results.
 */
@property(nonatomic, copy, nullable) NSString *nextPageToken;

/** [Output Only] Server-defined URL for this resource. */
@property(nonatomic, copy, nullable) NSString *selfLink;

/** [Output Only] Informational warning message. */
@property(nonatomic, strong, nullable) GTLRCompute_ZoneList_Warning *warning;

@end


/**
 *  [Output Only] Informational warning message.
 */
@interface GTLRCompute_ZoneList_Warning : GTLRObject

/**
 *  [Output Only] A warning code, if applicable. For example, Compute Engine
 *  returns NO_RESULTS_ON_PAGE if there are no results in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_CleanupFailed Warning about
 *        failed cleanup of transient changes made by a failed operation.
 *        (Value: "CLEANUP_FAILED")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_DeprecatedResourceUsed A link
 *        to a deprecated resource was created. (Value:
 *        "DEPRECATED_RESOURCE_USED")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_DeprecatedTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        deprecated (Value: "DEPRECATED_TYPE_USED")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_DiskSizeLargerThanImageSize The
 *        user created a boot disk that is larger than image size. (Value:
 *        "DISK_SIZE_LARGER_THAN_IMAGE_SIZE")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_ExperimentalTypeUsed When
 *        deploying and at least one of the resources has a type marked as
 *        experimental (Value: "EXPERIMENTAL_TYPE_USED")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_ExternalApiWarning Warning that
 *        is present in an external api call (Value: "EXTERNAL_API_WARNING")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_FieldValueOverriden Warning
 *        that value of a field has been overridden. Deprecated unused field.
 *        (Value: "FIELD_VALUE_OVERRIDEN")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_InjectedKernelsDeprecated The
 *        operation involved use of an injected kernel, which is deprecated.
 *        (Value: "INJECTED_KERNELS_DEPRECATED")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_InvalidHealthCheckForDynamicWieghtedLb
 *        A WEIGHTED_MAGLEV backend service is associated with a health check
 *        that is not of type HTTP/HTTPS/HTTP2. (Value:
 *        "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_LargeDeploymentWarning When
 *        deploying a deployment with a exceedingly large number of resources
 *        (Value: "LARGE_DEPLOYMENT_WARNING")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_MissingTypeDependency A
 *        resource depends on a missing type (Value: "MISSING_TYPE_DEPENDENCY")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_NextHopAddressNotAssigned The
 *        route's nextHopIp address is not assigned to an instance on the
 *        network. (Value: "NEXT_HOP_ADDRESS_NOT_ASSIGNED")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_NextHopCannotIpForward The
 *        route's next hop instance cannot ip forward. (Value:
 *        "NEXT_HOP_CANNOT_IP_FORWARD")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_NextHopInstanceHasNoIpv6Interface
 *        The route's nextHopInstance URL refers to an instance that does not
 *        have an ipv6 interface on the same network as the route. (Value:
 *        "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_NextHopInstanceNotFound The
 *        route's nextHopInstance URL refers to an instance that does not exist.
 *        (Value: "NEXT_HOP_INSTANCE_NOT_FOUND")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_NextHopInstanceNotOnNetwork The
 *        route's nextHopInstance URL refers to an instance that is not on the
 *        same network as the route. (Value: "NEXT_HOP_INSTANCE_NOT_ON_NETWORK")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_NextHopNotRunning The route's
 *        next hop instance does not have a status of RUNNING. (Value:
 *        "NEXT_HOP_NOT_RUNNING")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_NoResultsOnPage No results are
 *        present on a particular list page. (Value: "NO_RESULTS_ON_PAGE")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_NotCriticalError Error which is
 *        not critical. We decided to continue the process despite the mentioned
 *        error. (Value: "NOT_CRITICAL_ERROR")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_PartialSuccess Success is
 *        reported, but some results may be missing due to errors (Value:
 *        "PARTIAL_SUCCESS")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_RequiredTosAgreement The user
 *        attempted to use a resource that requires a TOS they have not
 *        accepted. (Value: "REQUIRED_TOS_AGREEMENT")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_ResourceInUseByOtherResourceWarning
 *        Warning that a resource is in use. (Value:
 *        "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_ResourceNotDeleted One or more
 *        of the resources set to auto-delete could not be deleted because they
 *        were in use. (Value: "RESOURCE_NOT_DELETED")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_SchemaValidationIgnored When a
 *        resource schema validation is ignored. (Value:
 *        "SCHEMA_VALIDATION_IGNORED")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_SingleInstancePropertyTemplate
 *        Instance template used in instance group manager is valid as such, but
 *        its application does not make a lot of sense, because it allows only
 *        single instance in instance group. (Value:
 *        "SINGLE_INSTANCE_PROPERTY_TEMPLATE")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_UndeclaredProperties When
 *        undeclared properties in the schema are present (Value:
 *        "UNDECLARED_PROPERTIES")
 *    @arg @c kGTLRCompute_ZoneList_Warning_Code_Unreachable A given scope
 *        cannot be reached. (Value: "UNREACHABLE")
 */
@property(nonatomic, copy, nullable) NSString *code;

/**
 *  [Output Only] Metadata about this warning in key: value format. For example:
 *  "data": [ { "key": "scope", "value": "zones/us-east1-d" }
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_ZoneList_Warning_Data_Item *> *data;

/** [Output Only] A human-readable description of the warning code. */
@property(nonatomic, copy, nullable) NSString *message;

@end


/**
 *  GTLRCompute_ZoneList_Warning_Data_Item
 */
@interface GTLRCompute_ZoneList_Warning_Data_Item : GTLRObject

/**
 *  [Output Only] A key that provides more detail on the warning being returned.
 *  For example, for warnings where there are no results in a list request for a
 *  particular zone, this key might be scope and the key value might be the zone
 *  name. Other examples might be a key indicating a deprecated resource and a
 *  suggested replacement, or a warning about invalid network settings (for
 *  example, if an instance attempts to perform IP forwarding but is not enabled
 *  for IP forwarding).
 */
@property(nonatomic, copy, nullable) NSString *key;

/** [Output Only] A warning data value corresponding to the key. */
@property(nonatomic, copy, nullable) NSString *value;

@end


/**
 *  GTLRCompute_ZoneSetLabelsRequest
 */
@interface GTLRCompute_ZoneSetLabelsRequest : GTLRObject

/**
 *  The fingerprint of the previous set of labels for this resource, used to
 *  detect conflicts. The fingerprint is initially generated by Compute Engine
 *  and changes after every request to modify or update labels. You must always
 *  provide an up-to-date fingerprint hash in order to update or change labels.
 *  Make a get() request to the resource to get the latest fingerprint.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *labelFingerprint;

/** The labels to set for this resource. */
@property(nonatomic, strong, nullable) GTLRCompute_ZoneSetLabelsRequest_Labels *labels;

@end


/**
 *  The labels to set for this resource.
 *
 *  @note This class is documented as having more properties of NSString. Use @c
 *        -additionalJSONKeys and @c -additionalPropertyForName: to get the list
 *        of properties and then fetch them; or @c -additionalProperties to
 *        fetch them all at once.
 */
@interface GTLRCompute_ZoneSetLabelsRequest_Labels : GTLRObject
@end


/**
 *  GTLRCompute_ZoneSetPolicyRequest
 */
@interface GTLRCompute_ZoneSetPolicyRequest : GTLRObject

/**
 *  Flatten Policy to create a backwacd compatible wire-format. Deprecated. Use
 *  'policy' to specify bindings.
 */
@property(nonatomic, strong, nullable) NSArray<GTLRCompute_Binding *> *bindings;

/**
 *  Flatten Policy to create a backward compatible wire-format. Deprecated. Use
 *  'policy' to specify the etag.
 *
 *  Contains encoded binary data; GTLRBase64 can encode/decode (probably
 *  web-safe format).
 */
@property(nonatomic, copy, nullable) NSString *ETag;

/**
 *  REQUIRED: The complete policy to be applied to the 'resource'. The size of
 *  the policy is limited to a few 10s of KB. An empty policy is in general a
 *  valid policy but certain services (like Projects) might reject them.
 */
@property(nonatomic, strong, nullable) GTLRCompute_Policy *policy;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
