// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Chrome Management API (chromemanagement/v1)
// Description:
//   The Chrome Management API is a suite of services that allows Chrome
//   administrators to view, manage and gain insights on their Chrome OS and
//   Chrome Browser devices.
// Documentation:
//   http://developers.google.com/chrome/management/

#import <GoogleAPIClientForREST/GTLRChromeManagementObjects.h>

// ----------------------------------------------------------------------------
// Constants

// GTLRChromeManagement_GoogleChromeManagementV1AppDetails.type
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppDetails_Type_Android = @"ANDROID";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppDetails_Type_AppItemTypeUnspecified = @"APP_ITEM_TYPE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppDetails_Type_Chrome = @"CHROME";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppDetails_Type_Web = @"WEB";

// GTLRChromeManagement_GoogleChromeManagementV1AppUsageData.appType
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_ApplicationTypeArc = @"APPLICATION_TYPE_ARC";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_ApplicationTypeBorealis = @"APPLICATION_TYPE_BOREALIS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_ApplicationTypeBruschetta = @"APPLICATION_TYPE_BRUSCHETTA";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_ApplicationTypeBuiltIn = @"APPLICATION_TYPE_BUILT_IN";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_ApplicationTypeChromeApp = @"APPLICATION_TYPE_CHROME_APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_ApplicationTypeCrostini = @"APPLICATION_TYPE_CROSTINI";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_ApplicationTypeExtension = @"APPLICATION_TYPE_EXTENSION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_ApplicationTypeMacOs = @"APPLICATION_TYPE_MAC_OS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_ApplicationTypePluginVm = @"APPLICATION_TYPE_PLUGIN_VM";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_ApplicationTypeRemote = @"APPLICATION_TYPE_REMOTE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_ApplicationTypeStandaloneBrowser = @"APPLICATION_TYPE_STANDALONE_BROWSER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_ApplicationTypeStandaloneBrowserChromeApp = @"APPLICATION_TYPE_STANDALONE_BROWSER_CHROME_APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_ApplicationTypeStandaloneBrowserExtension = @"APPLICATION_TYPE_STANDALONE_BROWSER_EXTENSION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_ApplicationTypeSystemWeb = @"APPLICATION_TYPE_SYSTEM_WEB";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_ApplicationTypeWeb = @"APPLICATION_TYPE_WEB";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1AppUsageData_AppType_TelemetryApplicationTypeUnspecified = @"TELEMETRY_APPLICATION_TYPE_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport.batteryHealth
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport_BatteryHealth_BatteryHealthNormal = @"BATTERY_HEALTH_NORMAL";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport_BatteryHealth_BatteryHealthUnspecified = @"BATTERY_HEALTH_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport_BatteryHealth_BatteryReplaceNow = @"BATTERY_REPLACE_NOW";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport_BatteryHealth_BatteryReplaceSoon = @"BATTERY_REPLACE_SOON";

// GTLRChromeManagement_GoogleChromeManagementV1BootPerformanceReport.shutdownReason
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BootPerformanceReport_ShutdownReason_LowBattery = @"LOW_BATTERY";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BootPerformanceReport_ShutdownReason_Other = @"OTHER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BootPerformanceReport_ShutdownReason_ShutdownReasonUnspecified = @"SHUTDOWN_REASON_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BootPerformanceReport_ShutdownReason_SystemUpdate = @"SYSTEM_UPDATE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BootPerformanceReport_ShutdownReason_UserRequest = @"USER_REQUEST";

// GTLRChromeManagement_GoogleChromeManagementV1BrowserVersion.channel
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Beta = @"BETA";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Canary = @"CANARY";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Dev = @"DEV";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_ReleaseChannelUnspecified = @"RELEASE_CHANNEL_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_Channel_Stable = @"STABLE";

// GTLRChromeManagement_GoogleChromeManagementV1BrowserVersion.system
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_DeviceSystemUnspecified = @"DEVICE_SYSTEM_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemAndroid = @"SYSTEM_ANDROID";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemCros = @"SYSTEM_CROS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemIos = @"SYSTEM_IOS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemLinux = @"SYSTEM_LINUX";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemMac = @"SYSTEM_MAC";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemOther = @"SYSTEM_OTHER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1BrowserVersion_System_SystemWindows = @"SYSTEM_WINDOWS";

// GTLRChromeManagement_GoogleChromeManagementV1ChromeAppInfo.type
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1ChromeAppInfo_Type_Extension = @"EXTENSION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1ChromeAppInfo_Type_ItemTypeUnspecified = @"ITEM_TYPE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1ChromeAppInfo_Type_Others = @"OTHERS";

// GTLRChromeManagement_GoogleChromeManagementV1CpuInfo.architecture
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1CpuInfo_Architecture_ArchitectureUnspecified = @"ARCHITECTURE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1CpuInfo_Architecture_X64 = @"X64";

// GTLRChromeManagement_GoogleChromeManagementV1DeviceActivityReport.deviceActivityState
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceActivityReport_DeviceActivityState_Active = @"ACTIVE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceActivityReport_DeviceActivityState_DeviceActivityStateUnspecified = @"DEVICE_ACTIVITY_STATE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceActivityReport_DeviceActivityState_Idle = @"IDLE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceActivityReport_DeviceActivityState_Locked = @"LOCKED";

// GTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport.aueMonth
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport_AueMonth_April = @"APRIL";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport_AueMonth_August = @"AUGUST";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport_AueMonth_December = @"DECEMBER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport_AueMonth_February = @"FEBRUARY";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport_AueMonth_January = @"JANUARY";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport_AueMonth_July = @"JULY";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport_AueMonth_June = @"JUNE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport_AueMonth_March = @"MARCH";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport_AueMonth_May = @"MAY";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport_AueMonth_MonthUnspecified = @"MONTH_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport_AueMonth_November = @"NOVEMBER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport_AueMonth_October = @"OCTOBER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport_AueMonth_September = @"SEPTEMBER";

// GTLRChromeManagement_GoogleChromeManagementV1HeartbeatStatusReport.state
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1HeartbeatStatusReport_State_Offline = @"OFFLINE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1HeartbeatStatusReport_State_Online = @"ONLINE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1HeartbeatStatusReport_State_StateUnspecified = @"STATE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1HeartbeatStatusReport_State_Unknown = @"UNKNOWN";

// GTLRChromeManagement_GoogleChromeManagementV1HttpsLatencyRoutineData.problem
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1HttpsLatencyRoutineData_Problem_FailedDnsResolutions = @"FAILED_DNS_RESOLUTIONS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1HttpsLatencyRoutineData_Problem_FailedHttpsRequests = @"FAILED_HTTPS_REQUESTS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1HttpsLatencyRoutineData_Problem_HighLatency = @"HIGH_LATENCY";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1HttpsLatencyRoutineData_Problem_HttpsLatencyProblemUnspecified = @"HTTPS_LATENCY_PROBLEM_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1HttpsLatencyRoutineData_Problem_VeryHighLatency = @"VERY_HIGH_LATENCY";

// GTLRChromeManagement_GoogleChromeManagementV1InstalledApp.appInstallType
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Admin = @"ADMIN";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_AppInstallTypeUnspecified = @"APP_INSTALL_TYPE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Development = @"DEVELOPMENT";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Multiple = @"MULTIPLE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Normal = @"NORMAL";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Other = @"OTHER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppInstallType_Sideload = @"SIDELOAD";

// GTLRChromeManagement_GoogleChromeManagementV1InstalledApp.appSource
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppSource_AppSourceUnspecified = @"APP_SOURCE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppSource_ChromeWebstore = @"CHROME_WEBSTORE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppSource_PlayStore = @"PLAY_STORE";

// GTLRChromeManagement_GoogleChromeManagementV1InstalledApp.appType
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_AndroidApp = @"ANDROID_APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_App = @"APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_AppTypeUnspecified = @"APP_TYPE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_Extension = @"EXTENSION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_HostedApp = @"HOSTED_APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1InstalledApp_AppType_Theme = @"THEME";

// GTLRChromeManagement_GoogleChromeManagementV1NetworkDevice.type
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkDevice_Type_CellularDevice = @"CELLULAR_DEVICE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkDevice_Type_EthernetDevice = @"ETHERNET_DEVICE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkDevice_Type_NetworkDeviceTypeUnspecified = @"NETWORK_DEVICE_TYPE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkDevice_Type_WifiDevice = @"WIFI_DEVICE";

// GTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport.connectionState
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport_ConnectionState_Connected = @"CONNECTED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport_ConnectionState_Connecting = @"CONNECTING";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport_ConnectionState_NetworkConnectionStateUnspecified = @"NETWORK_CONNECTION_STATE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport_ConnectionState_NotConnected = @"NOT_CONNECTED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport_ConnectionState_Online = @"ONLINE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport_ConnectionState_Portal = @"PORTAL";

// GTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport.connectionType
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport_ConnectionType_Cellular = @"CELLULAR";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport_ConnectionType_Ethernet = @"ETHERNET";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport_ConnectionType_NetworkTypeUnspecified = @"NETWORK_TYPE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport_ConnectionType_Tether = @"TETHER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport_ConnectionType_Vpn = @"VPN";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport_ConnectionType_Wifi = @"WIFI";

// GTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus.updateState
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus_UpdateState_OsImageDownloadInProgress = @"OS_IMAGE_DOWNLOAD_IN_PROGRESS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus_UpdateState_OsImageDownloadNotStarted = @"OS_IMAGE_DOWNLOAD_NOT_STARTED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus_UpdateState_OsUpdateNeedReboot = @"OS_UPDATE_NEED_REBOOT";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus_UpdateState_UpdateStateUnspecified = @"UPDATE_STATE_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementV1PrintJob.colorMode
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1PrintJob_ColorMode_BlackAndWhite = @"BLACK_AND_WHITE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1PrintJob_ColorMode_Color = @"COLOR";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1PrintJob_ColorMode_ColorModeUnspecified = @"COLOR_MODE_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementV1PrintJob.duplexMode
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1PrintJob_DuplexMode_DuplexModeUnspecified = @"DUPLEX_MODE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1PrintJob_DuplexMode_OneSided = @"ONE_SIDED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1PrintJob_DuplexMode_TwoSidedLongEdge = @"TWO_SIDED_LONG_EDGE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1PrintJob_DuplexMode_TwoSidedShortEdge = @"TWO_SIDED_SHORT_EDGE";

// GTLRChromeManagement_GoogleChromeManagementV1PrintJob.state
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1PrintJob_State_Cancelled = @"CANCELLED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1PrintJob_State_Failed = @"FAILED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1PrintJob_State_Printed = @"PRINTED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1PrintJob_State_StateUnspecified = @"STATE_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentData.overallRiskLevel
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentData_OverallRiskLevel_RiskLevelHigh = @"RISK_LEVEL_HIGH";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentData_OverallRiskLevel_RiskLevelLow = @"RISK_LEVEL_LOW";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentData_OverallRiskLevel_RiskLevelMedium = @"RISK_LEVEL_MEDIUM";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentData_OverallRiskLevel_RiskLevelUnspecified = @"RISK_LEVEL_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentEntry.provider
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentEntry_Provider_RiskAssessmentProviderCrxcavator = @"RISK_ASSESSMENT_PROVIDER_CRXCAVATOR";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentEntry_Provider_RiskAssessmentProviderSpinAi = @"RISK_ASSESSMENT_PROVIDER_SPIN_AI";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentEntry_Provider_RiskAssessmentProviderUnspecified = @"RISK_ASSESSMENT_PROVIDER_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentEntry.riskLevel
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentEntry_RiskLevel_RiskLevelHigh = @"RISK_LEVEL_HIGH";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentEntry_RiskLevel_RiskLevelLow = @"RISK_LEVEL_LOW";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentEntry_RiskLevel_RiskLevelMedium = @"RISK_LEVEL_MEDIUM";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentEntry_RiskLevel_RiskLevelUnspecified = @"RISK_LEVEL_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent.appInstallReason
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallReason_ApplicationInstallReasonCommandLine = @"APPLICATION_INSTALL_REASON_COMMAND_LINE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallReason_ApplicationInstallReasonDefault = @"APPLICATION_INSTALL_REASON_DEFAULT";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallReason_ApplicationInstallReasonKiosk = @"APPLICATION_INSTALL_REASON_KIOSK";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallReason_ApplicationInstallReasonOem = @"APPLICATION_INSTALL_REASON_OEM";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallReason_ApplicationInstallReasonPolicy = @"APPLICATION_INSTALL_REASON_POLICY";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallReason_ApplicationInstallReasonSubApp = @"APPLICATION_INSTALL_REASON_SUB_APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallReason_ApplicationInstallReasonSync = @"APPLICATION_INSTALL_REASON_SYNC";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallReason_ApplicationInstallReasonSystem = @"APPLICATION_INSTALL_REASON_SYSTEM";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallReason_ApplicationInstallReasonUnspecified = @"APPLICATION_INSTALL_REASON_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallReason_ApplicationInstallReasonUser = @"APPLICATION_INSTALL_REASON_USER";

// GTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent.appInstallSource
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallSource_ApplicationInstallSourceBrowser = @"APPLICATION_INSTALL_SOURCE_BROWSER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallSource_ApplicationInstallSourceChromeWebStore = @"APPLICATION_INSTALL_SOURCE_CHROME_WEB_STORE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallSource_ApplicationInstallSourcePlayStore = @"APPLICATION_INSTALL_SOURCE_PLAY_STORE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallSource_ApplicationInstallSourceSync = @"APPLICATION_INSTALL_SOURCE_SYNC";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallSource_ApplicationInstallSourceSystem = @"APPLICATION_INSTALL_SOURCE_SYSTEM";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallSource_ApplicationInstallSourceUnspecified = @"APPLICATION_INSTALL_SOURCE_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent.appInstallTime
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallTime_ApplicationInstallTimeInit = @"APPLICATION_INSTALL_TIME_INIT";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallTime_ApplicationInstallTimeRunning = @"APPLICATION_INSTALL_TIME_RUNNING";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppInstallTime_ApplicationInstallTimeUnspecified = @"APPLICATION_INSTALL_TIME_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent.appType
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_ApplicationTypeArc = @"APPLICATION_TYPE_ARC";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_ApplicationTypeBorealis = @"APPLICATION_TYPE_BOREALIS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_ApplicationTypeBruschetta = @"APPLICATION_TYPE_BRUSCHETTA";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_ApplicationTypeBuiltIn = @"APPLICATION_TYPE_BUILT_IN";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_ApplicationTypeChromeApp = @"APPLICATION_TYPE_CHROME_APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_ApplicationTypeCrostini = @"APPLICATION_TYPE_CROSTINI";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_ApplicationTypeExtension = @"APPLICATION_TYPE_EXTENSION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_ApplicationTypeMacOs = @"APPLICATION_TYPE_MAC_OS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_ApplicationTypePluginVm = @"APPLICATION_TYPE_PLUGIN_VM";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_ApplicationTypeRemote = @"APPLICATION_TYPE_REMOTE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_ApplicationTypeStandaloneBrowser = @"APPLICATION_TYPE_STANDALONE_BROWSER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_ApplicationTypeStandaloneBrowserChromeApp = @"APPLICATION_TYPE_STANDALONE_BROWSER_CHROME_APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_ApplicationTypeStandaloneBrowserExtension = @"APPLICATION_TYPE_STANDALONE_BROWSER_EXTENSION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_ApplicationTypeSystemWeb = @"APPLICATION_TYPE_SYSTEM_WEB";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_ApplicationTypeWeb = @"APPLICATION_TYPE_WEB";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent_AppType_TelemetryApplicationTypeUnspecified = @"TELEMETRY_APPLICATION_TYPE_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent.appLaunchSource
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceAppHomePage = @"APPLICATION_LAUNCH_SOURCE_APP_HOME_PAGE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceAppListGrid = @"APPLICATION_LAUNCH_SOURCE_APP_LIST_GRID";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceAppListGridContextMenu = @"APPLICATION_LAUNCH_SOURCE_APP_LIST_GRID_CONTEXT_MENU";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceAppListQuery = @"APPLICATION_LAUNCH_SOURCE_APP_LIST_QUERY";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceAppListQueryContextMenu = @"APPLICATION_LAUNCH_SOURCE_APP_LIST_QUERY_CONTEXT_MENU";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceAppListRecommendation = @"APPLICATION_LAUNCH_SOURCE_APP_LIST_RECOMMENDATION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceArc = @"APPLICATION_LAUNCH_SOURCE_ARC";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceBackgroundMode = @"APPLICATION_LAUNCH_SOURCE_BACKGROUND_MODE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceChromeInternal = @"APPLICATION_LAUNCH_SOURCE_CHROME_INTERNAL";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceCommandLine = @"APPLICATION_LAUNCH_SOURCE_COMMAND_LINE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceDiscoverTabNotification = @"APPLICATION_LAUNCH_SOURCE_DISCOVER_TAB_NOTIFICATION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceFileManager = @"APPLICATION_LAUNCH_SOURCE_FILE_MANAGER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceFirstRun = @"APPLICATION_LAUNCH_SOURCE_FIRST_RUN";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceFocusMode = @"APPLICATION_LAUNCH_SOURCE_FOCUS_MODE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceFullRestore = @"APPLICATION_LAUNCH_SOURCE_FULL_RESTORE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceInstalledNotification = @"APPLICATION_LAUNCH_SOURCE_INSTALLED_NOTIFICATION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceInstaller = @"APPLICATION_LAUNCH_SOURCE_INSTALLER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceIntentUrl = @"APPLICATION_LAUNCH_SOURCE_INTENT_URL";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceKeyboard = @"APPLICATION_LAUNCH_SOURCE_KEYBOARD";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceKiosk = @"APPLICATION_LAUNCH_SOURCE_KIOSK";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceLink = @"APPLICATION_LAUNCH_SOURCE_LINK";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceLockScreen = @"APPLICATION_LAUNCH_SOURCE_LOCK_SCREEN";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceManagementApi = @"APPLICATION_LAUNCH_SOURCE_MANAGEMENT_API";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceMenu = @"APPLICATION_LAUNCH_SOURCE_MENU";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceNavigationCapturing = @"APPLICATION_LAUNCH_SOURCE_NAVIGATION_CAPTURING";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceNewTabPage = @"APPLICATION_LAUNCH_SOURCE_NEW_TAB_PAGE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceOmnibox = @"APPLICATION_LAUNCH_SOURCE_OMNIBOX";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceOsLogin = @"APPLICATION_LAUNCH_SOURCE_OS_LOGIN";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceOtherApp = @"APPLICATION_LAUNCH_SOURCE_OTHER_APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceParentalControls = @"APPLICATION_LAUNCH_SOURCE_PARENTAL_CONTROLS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceProfileMenu = @"APPLICATION_LAUNCH_SOURCE_PROFILE_MENU";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceProtocolHandler = @"APPLICATION_LAUNCH_SOURCE_PROTOCOL_HANDLER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceReleaseNotesNotification = @"APPLICATION_LAUNCH_SOURCE_RELEASE_NOTES_NOTIFICATION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceReparenting = @"APPLICATION_LAUNCH_SOURCE_REPARENTING";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceSharesheet = @"APPLICATION_LAUNCH_SOURCE_SHARESHEET";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceShelf = @"APPLICATION_LAUNCH_SOURCE_SHELF";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceSmartTextContextMenu = @"APPLICATION_LAUNCH_SOURCE_SMART_TEXT_CONTEXT_MENU";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceSparky = @"APPLICATION_LAUNCH_SOURCE_SPARKY";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceSystemTrayCalendar = @"APPLICATION_LAUNCH_SOURCE_SYSTEM_TRAY_CALENDAR";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceTest = @"APPLICATION_LAUNCH_SOURCE_TEST";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceUnspecified = @"APPLICATION_LAUNCH_SOURCE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceUrlHandler = @"APPLICATION_LAUNCH_SOURCE_URL_HANDLER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceWebInstallApi = @"APPLICATION_LAUNCH_SOURCE_WEB_INSTALL_API";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppLaunchSource_ApplicationLaunchSourceWelcomeTour = @"APPLICATION_LAUNCH_SOURCE_WELCOME_TOUR";

// GTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent.appType
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_ApplicationTypeArc = @"APPLICATION_TYPE_ARC";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_ApplicationTypeBorealis = @"APPLICATION_TYPE_BOREALIS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_ApplicationTypeBruschetta = @"APPLICATION_TYPE_BRUSCHETTA";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_ApplicationTypeBuiltIn = @"APPLICATION_TYPE_BUILT_IN";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_ApplicationTypeChromeApp = @"APPLICATION_TYPE_CHROME_APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_ApplicationTypeCrostini = @"APPLICATION_TYPE_CROSTINI";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_ApplicationTypeExtension = @"APPLICATION_TYPE_EXTENSION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_ApplicationTypeMacOs = @"APPLICATION_TYPE_MAC_OS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_ApplicationTypePluginVm = @"APPLICATION_TYPE_PLUGIN_VM";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_ApplicationTypeRemote = @"APPLICATION_TYPE_REMOTE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_ApplicationTypeStandaloneBrowser = @"APPLICATION_TYPE_STANDALONE_BROWSER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_ApplicationTypeStandaloneBrowserChromeApp = @"APPLICATION_TYPE_STANDALONE_BROWSER_CHROME_APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_ApplicationTypeStandaloneBrowserExtension = @"APPLICATION_TYPE_STANDALONE_BROWSER_EXTENSION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_ApplicationTypeSystemWeb = @"APPLICATION_TYPE_SYSTEM_WEB";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_ApplicationTypeWeb = @"APPLICATION_TYPE_WEB";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent_AppType_TelemetryApplicationTypeUnspecified = @"TELEMETRY_APPLICATION_TYPE_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent.appType
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_ApplicationTypeArc = @"APPLICATION_TYPE_ARC";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_ApplicationTypeBorealis = @"APPLICATION_TYPE_BOREALIS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_ApplicationTypeBruschetta = @"APPLICATION_TYPE_BRUSCHETTA";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_ApplicationTypeBuiltIn = @"APPLICATION_TYPE_BUILT_IN";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_ApplicationTypeChromeApp = @"APPLICATION_TYPE_CHROME_APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_ApplicationTypeCrostini = @"APPLICATION_TYPE_CROSTINI";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_ApplicationTypeExtension = @"APPLICATION_TYPE_EXTENSION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_ApplicationTypeMacOs = @"APPLICATION_TYPE_MAC_OS";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_ApplicationTypePluginVm = @"APPLICATION_TYPE_PLUGIN_VM";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_ApplicationTypeRemote = @"APPLICATION_TYPE_REMOTE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_ApplicationTypeStandaloneBrowser = @"APPLICATION_TYPE_STANDALONE_BROWSER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_ApplicationTypeStandaloneBrowserChromeApp = @"APPLICATION_TYPE_STANDALONE_BROWSER_CHROME_APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_ApplicationTypeStandaloneBrowserExtension = @"APPLICATION_TYPE_STANDALONE_BROWSER_EXTENSION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_ApplicationTypeSystemWeb = @"APPLICATION_TYPE_SYSTEM_WEB";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_ApplicationTypeWeb = @"APPLICATION_TYPE_WEB";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppType_TelemetryApplicationTypeUnspecified = @"TELEMETRY_APPLICATION_TYPE_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent.appUninstallSource
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppUninstallSource_ApplicationUninstallSourceAppList = @"APPLICATION_UNINSTALL_SOURCE_APP_LIST";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppUninstallSource_ApplicationUninstallSourceAppManagement = @"APPLICATION_UNINSTALL_SOURCE_APP_MANAGEMENT";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppUninstallSource_ApplicationUninstallSourceMigration = @"APPLICATION_UNINSTALL_SOURCE_MIGRATION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppUninstallSource_ApplicationUninstallSourceShelf = @"APPLICATION_UNINSTALL_SOURCE_SHELF";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent_AppUninstallSource_ApplicationUninstallSourceUnspecified = @"APPLICATION_UNINSTALL_SOURCE_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent.eventType
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent_EventType_AppInstalled = @"APP_INSTALLED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent_EventType_AppLaunched = @"APP_LAUNCHED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent_EventType_AppUninstalled = @"APP_UNINSTALLED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent_EventType_AudioSevereUnderrun = @"AUDIO_SEVERE_UNDERRUN";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent_EventType_EventTypeUnspecified = @"EVENT_TYPE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent_EventType_NetworkHttpsLatencyChange = @"NETWORK_HTTPS_LATENCY_CHANGE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent_EventType_NetworkStateChange = @"NETWORK_STATE_CHANGE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent_EventType_OsCrash = @"OS_CRASH";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent_EventType_UsbAdded = @"USB_ADDED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent_EventType_UsbRemoved = @"USB_REMOVED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent_EventType_VpnConnectionStateChange = @"VPN_CONNECTION_STATE_CHANGE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent_EventType_WifiSignalStrengthLow = @"WIFI_SIGNAL_STRENGTH_LOW";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent_EventType_WifiSignalStrengthRecovered = @"WIFI_SIGNAL_STRENGTH_RECOVERED";

// GTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter.eventTypes
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter_EventTypes_AppInstalled = @"APP_INSTALLED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter_EventTypes_AppLaunched = @"APP_LAUNCHED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter_EventTypes_AppUninstalled = @"APP_UNINSTALLED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter_EventTypes_AudioSevereUnderrun = @"AUDIO_SEVERE_UNDERRUN";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter_EventTypes_EventTypeUnspecified = @"EVENT_TYPE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter_EventTypes_NetworkHttpsLatencyChange = @"NETWORK_HTTPS_LATENCY_CHANGE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter_EventTypes_NetworkStateChange = @"NETWORK_STATE_CHANGE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter_EventTypes_OsCrash = @"OS_CRASH";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter_EventTypes_UsbAdded = @"USB_ADDED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter_EventTypes_UsbRemoved = @"USB_REMOVED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter_EventTypes_VpnConnectionStateChange = @"VPN_CONNECTION_STATE_CHANGE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter_EventTypes_WifiSignalStrengthLow = @"WIFI_SIGNAL_STRENGTH_LOW";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter_EventTypes_WifiSignalStrengthRecovered = @"WIFI_SIGNAL_STRENGTH_RECOVERED";

// GTLRChromeManagement_GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent.httpsLatencyState
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent_HttpsLatencyState_HttpsLatencyStateUnspecified = @"HTTPS_LATENCY_STATE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent_HttpsLatencyState_Problem = @"PROBLEM";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent_HttpsLatencyState_Recovery = @"RECOVERY";

// GTLRChromeManagement_GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent.connectionState
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent_ConnectionState_Connected = @"CONNECTED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent_ConnectionState_Connecting = @"CONNECTING";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent_ConnectionState_NetworkConnectionStateUnspecified = @"NETWORK_CONNECTION_STATE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent_ConnectionState_NotConnected = @"NOT_CONNECTED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent_ConnectionState_Online = @"ONLINE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent_ConnectionState_Portal = @"PORTAL";

// GTLRChromeManagement_GoogleChromeManagementV1ThunderboltInfo.securityLevel
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1ThunderboltInfo_SecurityLevel_ThunderboltSecurityDpOnlyLevel = @"THUNDERBOLT_SECURITY_DP_ONLY_LEVEL";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1ThunderboltInfo_SecurityLevel_ThunderboltSecurityLevelUnspecified = @"THUNDERBOLT_SECURITY_LEVEL_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1ThunderboltInfo_SecurityLevel_ThunderboltSecurityNoneLevel = @"THUNDERBOLT_SECURITY_NONE_LEVEL";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1ThunderboltInfo_SecurityLevel_ThunderboltSecurityNoPcieLevel = @"THUNDERBOLT_SECURITY_NO_PCIE_LEVEL";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1ThunderboltInfo_SecurityLevel_ThunderboltSecuritySecureLevel = @"THUNDERBOLT_SECURITY_SECURE_LEVEL";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1ThunderboltInfo_SecurityLevel_ThunderboltSecurityUsbOnlyLevel = @"THUNDERBOLT_SECURITY_USB_ONLY_LEVEL";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1ThunderboltInfo_SecurityLevel_ThunderboltSecurityUserLevel = @"THUNDERBOLT_SECURITY_USER_LEVEL";

// GTLRChromeManagement_GoogleChromeManagementV1TotalMemoryEncryptionInfo.encryptionAlgorithm
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TotalMemoryEncryptionInfo_EncryptionAlgorithm_MemoryEncryptionAlgorithmAesXts128 = @"MEMORY_ENCRYPTION_ALGORITHM_AES_XTS_128";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TotalMemoryEncryptionInfo_EncryptionAlgorithm_MemoryEncryptionAlgorithmAesXts256 = @"MEMORY_ENCRYPTION_ALGORITHM_AES_XTS_256";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TotalMemoryEncryptionInfo_EncryptionAlgorithm_MemoryEncryptionAlgorithmUnknown = @"MEMORY_ENCRYPTION_ALGORITHM_UNKNOWN";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TotalMemoryEncryptionInfo_EncryptionAlgorithm_MemoryEncryptionAlgorithmUnspecified = @"MEMORY_ENCRYPTION_ALGORITHM_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementV1TotalMemoryEncryptionInfo.encryptionState
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TotalMemoryEncryptionInfo_EncryptionState_MemoryEncryptionStateDisabled = @"MEMORY_ENCRYPTION_STATE_DISABLED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TotalMemoryEncryptionInfo_EncryptionState_MemoryEncryptionStateMktme = @"MEMORY_ENCRYPTION_STATE_MKTME";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TotalMemoryEncryptionInfo_EncryptionState_MemoryEncryptionStateTme = @"MEMORY_ENCRYPTION_STATE_TME";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TotalMemoryEncryptionInfo_EncryptionState_MemoryEncryptionStateUnknown = @"MEMORY_ENCRYPTION_STATE_UNKNOWN";
NSString * const kGTLRChromeManagement_GoogleChromeManagementV1TotalMemoryEncryptionInfo_EncryptionState_MemoryEncryptionStateUnspecified = @"MEMORY_ENCRYPTION_STATE_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementVersionsV1alpha1CertificateProvisioningProcess.signatureAlgorithm
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1alpha1CertificateProvisioningProcess_SignatureAlgorithm_SignatureAlgorithmEcdsaSha256 = @"SIGNATURE_ALGORITHM_ECDSA_SHA256";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1alpha1CertificateProvisioningProcess_SignatureAlgorithm_SignatureAlgorithmRsaPkcs1V15Sha256 = @"SIGNATURE_ALGORITHM_RSA_PKCS1_V1_5_SHA256";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1alpha1CertificateProvisioningProcess_SignatureAlgorithm_SignatureAlgorithmUnspecified = @"SIGNATURE_ALGORITHM_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementVersionsV1AttestationCredential.keyTrustLevel
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1AttestationCredential_KeyTrustLevel_ChromeBrowserHwKey = @"CHROME_BROWSER_HW_KEY";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1AttestationCredential_KeyTrustLevel_ChromeBrowserOsKey = @"CHROME_BROWSER_OS_KEY";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1AttestationCredential_KeyTrustLevel_KeyTrustLevelUnspecified = @"KEY_TRUST_LEVEL_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementVersionsV1AttestationCredential.keyType
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1AttestationCredential_KeyType_EcKey = @"EC_KEY";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1AttestationCredential_KeyType_KeyTypeUnspecified = @"KEY_TYPE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1AttestationCredential_KeyType_RsaKey = @"RSA_KEY";

// GTLRChromeManagement_GoogleChromeManagementVersionsV1ChromeBrowserProfile.affiliationState
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ChromeBrowserProfile_AffiliationState_AffiliatedCloudManaged = @"AFFILIATED_CLOUD_MANAGED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ChromeBrowserProfile_AffiliationState_AffiliationStateUnspecified = @"AFFILIATION_STATE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ChromeBrowserProfile_AffiliationState_ProfileOnly = @"PROFILE_ONLY";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ChromeBrowserProfile_AffiliationState_UnaffiliatedCloudMachine = @"UNAFFILIATED_CLOUD_MACHINE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ChromeBrowserProfile_AffiliationState_UnaffiliatedGeneric = @"UNAFFILIATED_GENERIC";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ChromeBrowserProfile_AffiliationState_UnaffiliatedLocalMachine = @"UNAFFILIATED_LOCAL_MACHINE";

// GTLRChromeManagement_GoogleChromeManagementVersionsV1ChromeBrowserProfile.identityProvider
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ChromeBrowserProfile_IdentityProvider_ExternalIdentityProvider = @"EXTERNAL_IDENTITY_PROVIDER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ChromeBrowserProfile_IdentityProvider_GoogleIdentityProvider = @"GOOGLE_IDENTITY_PROVIDER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ChromeBrowserProfile_IdentityProvider_IdentityProviderUnspecified = @"IDENTITY_PROVIDER_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementVersionsV1DeviceInfo.deviceType
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1DeviceInfo_DeviceType_ChromeBrowser = @"CHROME_BROWSER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1DeviceInfo_DeviceType_DeviceTypeUnspecified = @"DEVICE_TYPE_UNSPECIFIED";

// GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataConflictingPolicyData.source
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataConflictingPolicyData_Source_MachineLevelUserCloud = @"MACHINE_LEVEL_USER_CLOUD";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataConflictingPolicyData_Source_MachineMerged = @"MACHINE_MERGED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataConflictingPolicyData_Source_MachinePlatform = @"MACHINE_PLATFORM";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataConflictingPolicyData_Source_PolicySourceUnspecified = @"POLICY_SOURCE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataConflictingPolicyData_Source_UserCloud = @"USER_CLOUD";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataConflictingPolicyData_Source_UserPlatform = @"USER_PLATFORM";

// GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData.extensionType
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData_ExtensionType_App = @"APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData_ExtensionType_Extension = @"EXTENSION";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData_ExtensionType_ExtensionTypeUnspecified = @"EXTENSION_TYPE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData_ExtensionType_HostedApp = @"HOSTED_APP";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData_ExtensionType_Theme = @"THEME";

// GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData.installationType
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData_InstallationType_Admin = @"ADMIN";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData_InstallationType_Development = @"DEVELOPMENT";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData_InstallationType_InstallationTypeUnspecified = @"INSTALLATION_TYPE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData_InstallationType_Multiple = @"MULTIPLE";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData_InstallationType_Normal = @"NORMAL";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData_InstallationType_Other = @"OTHER";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData_InstallationType_Sideload = @"SIDELOAD";

// GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataPolicyData.source
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataPolicyData_Source_MachineLevelUserCloud = @"MACHINE_LEVEL_USER_CLOUD";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataPolicyData_Source_MachineMerged = @"MACHINE_MERGED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataPolicyData_Source_MachinePlatform = @"MACHINE_PLATFORM";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataPolicyData_Source_PolicySourceUnspecified = @"POLICY_SOURCE_UNSPECIFIED";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataPolicyData_Source_UserCloud = @"USER_CLOUD";
NSString * const kGTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataPolicyData_Source_UserPlatform = @"USER_PLATFORM";

// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1AndroidAppInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1AndroidAppInfo
@dynamic permissions;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [GTLRChromeManagement_GoogleChromeManagementV1AndroidAppPermission class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1AndroidAppPermission
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1AndroidAppPermission
@dynamic type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1AppDetails
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1AppDetails
@dynamic androidAppInfo, appId, chromeAppInfo, descriptionProperty, detailUri,
         displayName, firstPublishTime, homepageUri, iconUri, isPaidApp,
         latestPublishTime, name, privacyPolicyUri, publisher, reviewNumber,
         reviewRating, revisionId, serviceError, type;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1AppReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1AppReport
@dynamic reportTime, usageData;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"usageData" : [GTLRChromeManagement_GoogleChromeManagementV1AppUsageData class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1AppUsageData
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1AppUsageData
@dynamic appId, appInstanceId, appType, runningDuration;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1AudioStatusReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1AudioStatusReport
@dynamic inputDevice, inputGain, inputMute, outputDevice, outputMute,
         outputVolume, reportTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1BatteryInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1BatteryInfo
@dynamic designCapacity, designMinVoltage, manufactureDate, manufacturer,
         serialNumber, technology;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1BatterySampleReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1BatterySampleReport
@dynamic chargeRate, current, dischargeRate, remainingCapacity, reportTime,
         status, temperature, voltage;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport
@dynamic batteryHealth, cycleCount, fullChargeCapacity, reportTime, sample,
         serialNumber;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"sample" : [GTLRChromeManagement_GoogleChromeManagementV1BatterySampleReport class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1BootPerformanceReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1BootPerformanceReport
@dynamic bootUpDuration, bootUpTime, reportTime, shutdownDuration,
         shutdownReason, shutdownTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1BrowserVersion
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1BrowserVersion
@dynamic channel, count, deviceOsVersion, system, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1ChromeAppInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1ChromeAppInfo
@dynamic googleOwned, isCwsHosted, isExtensionPolicySupported, isKioskOnly,
         isTheme, kioskEnabled, minUserCount, permissions, siteAccess,
         supportEnabled, type;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [GTLRChromeManagement_GoogleChromeManagementV1ChromeAppPermission class],
    @"siteAccess" : [GTLRChromeManagement_GoogleChromeManagementV1ChromeAppSiteAccess class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1ChromeAppPermission
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1ChromeAppPermission
@dynamic accessUserData, documentationUri, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1ChromeAppRequest
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1ChromeAppRequest
@dynamic appDetails, appId, detailUri, displayName, iconUri, latestRequestTime,
         requestCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1ChromeAppSiteAccess
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1ChromeAppSiteAccess
@dynamic hostMatch;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CountChromeAppRequestsResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CountChromeAppRequestsResponse
@dynamic nextPageToken, requestedApps, totalSize;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"requestedApps" : [GTLRChromeManagement_GoogleChromeManagementV1ChromeAppRequest class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"requestedApps";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CountChromeBrowsersNeedingAttentionResponse
@dynamic noRecentActivityCount, pendingBrowserUpdateCount,
         recentlyEnrolledCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CountChromeCrashEventsResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CountChromeCrashEventsResponse
@dynamic crashEventCounts;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"crashEventCounts" : [GTLRChromeManagement_GoogleChromeManagementV1CountChromeCrashEventsResponseCrashEventCount class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CountChromeCrashEventsResponseCrashEventCount
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CountChromeCrashEventsResponseCrashEventCount
@dynamic browserVersion, count, date;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CountChromeDevicesReachingAutoExpirationDateResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CountChromeDevicesReachingAutoExpirationDateResponse
@dynamic deviceAueCountReports;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"deviceAueCountReports" : [GTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CountChromeDevicesThatNeedAttentionResponse
@dynamic noRecentPolicySyncCount, noRecentUserActivityCount,
         osVersionNotCompliantCount, pendingUpdate, unsupportedPolicyCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CountChromeHardwareFleetDevicesResponse
@dynamic cpuReports, memoryReports, modelReports, storageReports;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"cpuReports" : [GTLRChromeManagement_GoogleChromeManagementV1DeviceHardwareCountReport class],
    @"memoryReports" : [GTLRChromeManagement_GoogleChromeManagementV1DeviceHardwareCountReport class],
    @"modelReports" : [GTLRChromeManagement_GoogleChromeManagementV1DeviceHardwareCountReport class],
    @"storageReports" : [GTLRChromeManagement_GoogleChromeManagementV1DeviceHardwareCountReport class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CountChromeVersionsResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CountChromeVersionsResponse
@dynamic browserVersions, nextPageToken, totalSize;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"browserVersions" : [GTLRChromeManagement_GoogleChromeManagementV1BrowserVersion class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"browserVersions";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CountInstalledAppsResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CountInstalledAppsResponse
@dynamic installedApps, nextPageToken, totalSize;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"installedApps" : [GTLRChromeManagement_GoogleChromeManagementV1InstalledApp class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"installedApps";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CountPrintJobsByPrinterResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CountPrintJobsByPrinterResponse
@dynamic nextPageToken, printerReports, totalSize;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"printerReports" : [GTLRChromeManagement_GoogleChromeManagementV1PrinterReport class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"printerReports";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CountPrintJobsByUserResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CountPrintJobsByUserResponse
@dynamic nextPageToken, totalSize, userPrintReports;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"userPrintReports" : [GTLRChromeManagement_GoogleChromeManagementV1UserPrintReport class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"userPrintReports";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CpuInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CpuInfo
@dynamic architecture, keylockerConfigured, keylockerSupported, maxClockSpeed,
         model;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CpuStatusReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CpuStatusReport
@dynamic cpuTemperatureInfo, cpuUtilizationPct, reportTime, sampleFrequency;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"cpuTemperatureInfo" : [GTLRChromeManagement_GoogleChromeManagementV1CpuTemperatureInfo class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1CpuTemperatureInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1CpuTemperatureInfo
@dynamic label, temperatureCelsius;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1Device
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1Device
@dynamic deviceId, machine;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1DeviceActivityReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1DeviceActivityReport
@dynamic deviceActivityState, reportTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1DeviceAueCountReport
@dynamic aueMonth, aueYear, count, expired, model;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1DeviceHardwareCountReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1DeviceHardwareCountReport
@dynamic bucket, count;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1DeviceRequestingExtensionDetails
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1DeviceRequestingExtensionDetails
@dynamic deviceName, justification;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1DiskInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1DiskInfo
@dynamic bytesReadThisSession, bytesWrittenThisSession, discardTimeThisSession,
         health, ioTimeThisSession, manufacturer, model, readTimeThisSession,
         serialNumber, sizeBytes, type, volumeIds, writeTimeThisSession;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"volumeIds" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1DisplayDevice
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1DisplayDevice
@dynamic displayHeightMm, displayName, displayWidthMm, internal, manufacturerId,
         manufactureYear, modelId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1DisplayInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1DisplayInfo
@dynamic deviceId, displayName, isInternal, refreshRate, resolutionHeight,
         resolutionWidth;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1EnumeratePrintJobsResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1EnumeratePrintJobsResponse
@dynamic nextPageToken, printJobs, totalSize;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"printJobs" : [GTLRChromeManagement_GoogleChromeManagementV1PrintJob class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"printJobs";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1FetchDevicesRequestingExtensionResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1FetchDevicesRequestingExtensionResponse
@dynamic deviceDetails, nextPageToken, totalSize;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"deviceDetails" : [GTLRChromeManagement_GoogleChromeManagementV1DeviceRequestingExtensionDetails class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"deviceDetails";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1FetchUsersRequestingExtensionResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1FetchUsersRequestingExtensionResponse
@dynamic nextPageToken, totalSize, userDetails;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"userDetails" : [GTLRChromeManagement_GoogleChromeManagementV1UserRequestingExtensionDetails class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"userDetails";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1FindInstalledAppDevicesResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1FindInstalledAppDevicesResponse
@dynamic devices, nextPageToken, totalSize;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"devices" : [GTLRChromeManagement_GoogleChromeManagementV1Device class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"devices";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1GraphicsAdapterInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1GraphicsAdapterInfo
@dynamic adapter, deviceId, driverVersion;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1GraphicsInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1GraphicsInfo
@dynamic adapterInfo, displayDevices, eprivacySupported, touchScreenInfo;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"displayDevices" : [GTLRChromeManagement_GoogleChromeManagementV1DisplayDevice class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1GraphicsStatusReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1GraphicsStatusReport
@dynamic displays, reportTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"displays" : [GTLRChromeManagement_GoogleChromeManagementV1DisplayInfo class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1HeartbeatStatusReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1HeartbeatStatusReport
@dynamic reportTime, state;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1HttpsLatencyRoutineData
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1HttpsLatencyRoutineData
@dynamic latency, problem;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1InstalledApp
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1InstalledApp
@dynamic appId, appInstallType, appSource, appType, browserDeviceCount,
         descriptionProperty, disabled, displayName, homepageUri, osUserCount,
         permissions, riskAssessment;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1KioskAppStatusReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1KioskAppStatusReport
@dynamic appId, appVersion, reportTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1ListTelemetryDevicesResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1ListTelemetryDevicesResponse
@dynamic devices, nextPageToken;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"devices" : [GTLRChromeManagement_GoogleChromeManagementV1TelemetryDevice class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"devices";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1ListTelemetryEventsResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1ListTelemetryEventsResponse
@dynamic nextPageToken, telemetryEvents;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"telemetryEvents" : [GTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"telemetryEvents";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1ListTelemetryNotificationConfigsResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1ListTelemetryNotificationConfigsResponse
@dynamic nextPageToken, telemetryNotificationConfigs;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"telemetryNotificationConfigs" : [GTLRChromeManagement_GoogleChromeManagementV1TelemetryNotificationConfig class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"telemetryNotificationConfigs";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1ListTelemetryUsersResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1ListTelemetryUsersResponse
@dynamic nextPageToken, telemetryUsers;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"telemetryUsers" : [GTLRChromeManagement_GoogleChromeManagementV1TelemetryUser class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"telemetryUsers";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1MemoryInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1MemoryInfo
@dynamic availableRamBytes, totalMemoryEncryption, totalRamBytes;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1MemoryStatusReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1MemoryStatusReport
@dynamic pageFaults, reportTime, sampleFrequency, systemRamFreeBytes;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1NetworkBandwidthReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1NetworkBandwidthReport
@dynamic downloadSpeedKbps, reportTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1NetworkDevice
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1NetworkDevice
@dynamic iccid, imei, macAddress, mdn, meid, type;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1NetworkDiagnosticsReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1NetworkDiagnosticsReport
@dynamic httpsLatencyData, reportTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1NetworkInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1NetworkInfo
@dynamic networkDevices;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"networkDevices" : [GTLRChromeManagement_GoogleChromeManagementV1NetworkDevice class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport
@dynamic connectionState, connectionType, encryptionOn, gatewayIpAddress, guid,
         lanIpAddress, receivingBitRateMbps, reportTime, sampleFrequency,
         signalStrengthDbm, transmissionBitRateMbps, transmissionPowerDbm,
         wifiLinkQuality, wifiPowerManagementEnabled;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus
@dynamic lastRebootTime, lastUpdateCheckTime, lastUpdateTime,
         newPlatformVersion, newRequestedPlatformVersion, updateState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1PeripheralsReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1PeripheralsReport
@dynamic reportTime, usbPeripheralReport;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"usbPeripheralReport" : [GTLRChromeManagement_GoogleChromeManagementV1UsbPeripheralReport class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1PrinterReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1PrinterReport
@dynamic deviceCount, jobCount, printer, printerId, printerModel, userCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1PrintJob
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1PrintJob
@dynamic colorMode, completeTime, copyCount, createTime, documentPageCount,
         duplexMode, identifier, printer, printerId, state, title, userEmail,
         userId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"identifier" : @"id" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1RiskAssessment
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1RiskAssessment
@dynamic assessment, detailsUrl, version;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentData
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentData
@dynamic entries, overallRiskLevel;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"entries" : [GTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentEntry class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentEntry
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1RiskAssessmentEntry
@dynamic provider, riskAssessment, riskLevel;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1RuntimeCountersReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1RuntimeCountersReport
@dynamic enterHibernationCount, enterPoweroffCount, enterSleepCount, reportTime,
         uptimeRuntimeDuration;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1StorageInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1StorageInfo
@dynamic availableDiskBytes, totalDiskBytes, volume;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"volume" : [GTLRChromeManagement_GoogleChromeManagementV1StorageInfoDiskVolume class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1StorageInfoDiskVolume
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1StorageInfoDiskVolume
@dynamic storageFreeBytes, storageTotalBytes, volumeId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1StorageStatusReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1StorageStatusReport
@dynamic disk, reportTime;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"disk" : [GTLRChromeManagement_GoogleChromeManagementV1DiskInfo class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryAppInstallEvent
@dynamic appId, appInstallReason, appInstallSource, appInstallTime, appType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryAppLaunchEvent
@dynamic appId, appLaunchSource, appType;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryAppUninstallEvent
@dynamic appId, appType, appUninstallSource;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryAudioSevereUnderrunEvent
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryAudioSevereUnderrunEvent
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryDevice
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryDevice
@dynamic appReport, audioStatusReport, batteryInfo, batteryStatusReport,
         bootPerformanceReport, cpuInfo, cpuStatusReport, customer, deviceId,
         graphicsInfo, graphicsStatusReport, heartbeatStatusReport,
         kioskAppStatusReport, memoryInfo, memoryStatusReport, name,
         networkBandwidthReport, networkDiagnosticsReport, networkInfo,
         networkStatusReport, orgUnitId, osUpdateStatus, peripheralsReport,
         runtimeCountersReport, serialNumber, storageInfo, storageStatusReport,
         thunderboltInfo;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"appReport" : [GTLRChromeManagement_GoogleChromeManagementV1AppReport class],
    @"audioStatusReport" : [GTLRChromeManagement_GoogleChromeManagementV1AudioStatusReport class],
    @"batteryInfo" : [GTLRChromeManagement_GoogleChromeManagementV1BatteryInfo class],
    @"batteryStatusReport" : [GTLRChromeManagement_GoogleChromeManagementV1BatteryStatusReport class],
    @"bootPerformanceReport" : [GTLRChromeManagement_GoogleChromeManagementV1BootPerformanceReport class],
    @"cpuInfo" : [GTLRChromeManagement_GoogleChromeManagementV1CpuInfo class],
    @"cpuStatusReport" : [GTLRChromeManagement_GoogleChromeManagementV1CpuStatusReport class],
    @"graphicsStatusReport" : [GTLRChromeManagement_GoogleChromeManagementV1GraphicsStatusReport class],
    @"heartbeatStatusReport" : [GTLRChromeManagement_GoogleChromeManagementV1HeartbeatStatusReport class],
    @"kioskAppStatusReport" : [GTLRChromeManagement_GoogleChromeManagementV1KioskAppStatusReport class],
    @"memoryStatusReport" : [GTLRChromeManagement_GoogleChromeManagementV1MemoryStatusReport class],
    @"networkBandwidthReport" : [GTLRChromeManagement_GoogleChromeManagementV1NetworkBandwidthReport class],
    @"networkDiagnosticsReport" : [GTLRChromeManagement_GoogleChromeManagementV1NetworkDiagnosticsReport class],
    @"networkStatusReport" : [GTLRChromeManagement_GoogleChromeManagementV1NetworkStatusReport class],
    @"osUpdateStatus" : [GTLRChromeManagement_GoogleChromeManagementV1OsUpdateStatus class],
    @"peripheralsReport" : [GTLRChromeManagement_GoogleChromeManagementV1PeripheralsReport class],
    @"runtimeCountersReport" : [GTLRChromeManagement_GoogleChromeManagementV1RuntimeCountersReport class],
    @"storageStatusReport" : [GTLRChromeManagement_GoogleChromeManagementV1StorageStatusReport class],
    @"thunderboltInfo" : [GTLRChromeManagement_GoogleChromeManagementV1ThunderboltInfo class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryDeviceInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryDeviceInfo
@dynamic deviceId, orgUnitId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryEvent
@dynamic appInstallEvent, appLaunchEvent, appUninstallEvent,
         audioSevereUnderrunEvent, device, eventType, httpsLatencyChangeEvent,
         name, networkStateChangeEvent, reportTime, usbPeripheralsEvent, user,
         vpnConnectionStateChangeEvent, wifiSignalStrengthEvent;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryEventNotificationFilter
@dynamic eventTypes;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"eventTypes" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent
@dynamic httpsLatencyRoutineData, httpsLatencyState;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryNetworkConnectionStateChangeEvent
@dynamic connectionState, guid;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryNetworkSignalStrengthEvent
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryNetworkSignalStrengthEvent
@dynamic guid, signalStrengthDbm;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryNotificationConfig
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryNotificationConfig
@dynamic customer, filter, googleCloudPubsubTopic, name;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryNotificationFilter
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryNotificationFilter
@dynamic deviceId, deviceOrgUnitId, telemetryEventNotificationFilter, userEmail,
         userOrgUnitId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryUsbPeripheralsEvent
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryUsbPeripheralsEvent
@dynamic usbPeripheralReport;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"usbPeripheralReport" : [GTLRChromeManagement_GoogleChromeManagementV1UsbPeripheralReport class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryUser
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryUser
@dynamic customer, name, orgUnitId, userDevice, userEmail, userId;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"userDevice" : [GTLRChromeManagement_GoogleChromeManagementV1TelemetryUserDevice class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryUserDevice
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryUserDevice
@dynamic appReport, audioStatusReport, deviceActivityReport, deviceId,
         networkBandwidthReport, peripheralsReport;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"appReport" : [GTLRChromeManagement_GoogleChromeManagementV1AppReport class],
    @"audioStatusReport" : [GTLRChromeManagement_GoogleChromeManagementV1AudioStatusReport class],
    @"deviceActivityReport" : [GTLRChromeManagement_GoogleChromeManagementV1DeviceActivityReport class],
    @"networkBandwidthReport" : [GTLRChromeManagement_GoogleChromeManagementV1NetworkBandwidthReport class],
    @"peripheralsReport" : [GTLRChromeManagement_GoogleChromeManagementV1PeripheralsReport class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TelemetryUserInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TelemetryUserInfo
@dynamic email, orgUnitId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1ThunderboltInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1ThunderboltInfo
@dynamic securityLevel;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TotalMemoryEncryptionInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TotalMemoryEncryptionInfo
@dynamic encryptionAlgorithm, encryptionState, keyLength, maxKeys;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TouchScreenDevice
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TouchScreenDevice
@dynamic displayName, stylusCapable, touchPointCount;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1TouchScreenInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1TouchScreenInfo
@dynamic devices, touchpadLibrary;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"devices" : [GTLRChromeManagement_GoogleChromeManagementV1TouchScreenDevice class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1UsbPeripheralReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1UsbPeripheralReport
@dynamic categories, classId, firmwareVersion, name, pid, subclassId, vendor,
         vid;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"categories" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1UserPrintReport
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1UserPrintReport
@dynamic deviceCount, jobCount, printerCount, userEmail, userId;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementV1UserRequestingExtensionDetails
//

@implementation GTLRChromeManagement_GoogleChromeManagementV1UserRequestingExtensionDetails
@dynamic email, justification;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementVersionsV1alpha1CertificateProvisioningProcess
//

@implementation GTLRChromeManagement_GoogleChromeManagementVersionsV1alpha1CertificateProvisioningProcess
@dynamic caConnectionAdapterConfigReference, chromeOsDevice,
         chromeOsUserSession, failureMessage, issuedCertificate, name,
         profileAdapterConfigReference, provisioningProfileId, signature,
         signatureAlgorithm, signData, startTime, subjectPublicKeyInfo;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementVersionsV1alpha1ChromeOsDevice
//

@implementation GTLRChromeManagement_GoogleChromeManagementVersionsV1alpha1ChromeOsDevice
@dynamic deviceDirectoryApiId, serialNumber;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementVersionsV1alpha1ChromeOsUserSession
//

@implementation GTLRChromeManagement_GoogleChromeManagementVersionsV1alpha1ChromeOsUserSession
@dynamic chromeOsDevice, userDirectoryApiId, userPrimaryEmail;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementVersionsV1alpha1SignDataMetadata
//

@implementation GTLRChromeManagement_GoogleChromeManagementVersionsV1alpha1SignDataMetadata
@dynamic startTime;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementVersionsV1alpha1SignDataResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementVersionsV1alpha1SignDataResponse
@dynamic certificateProvisioningProcess;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementVersionsV1AttestationCredential
//

@implementation GTLRChromeManagement_GoogleChromeManagementVersionsV1AttestationCredential
@dynamic keyRotationTime, keyTrustLevel, keyType, publicKey;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementVersionsV1ChromeBrowserProfile
//

@implementation GTLRChromeManagement_GoogleChromeManagementVersionsV1ChromeBrowserProfile
@dynamic affiliationState, annotatedLocation, annotatedUser,
         attestationCredential, browserChannel, browserVersion, deviceInfo,
         displayName, ETag, extensionCount, firstEnrollmentTime,
         identityProvider, lastActivityTime, lastPolicyFetchTime,
         lastPolicySyncTime, lastStatusReportTime, name, osPlatformType,
         osPlatformVersion, osVersion, policyCount, profileId,
         profilePermanentId, reportingData, userEmail, userId;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"ETag" : @"etag" };
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementVersionsV1DeviceInfo
//

@implementation GTLRChromeManagement_GoogleChromeManagementVersionsV1DeviceInfo
@dynamic affiliatedDeviceId, deviceType, hostname, machine;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementVersionsV1ListChromeBrowserProfilesResponse
//

@implementation GTLRChromeManagement_GoogleChromeManagementVersionsV1ListChromeBrowserProfilesResponse
@dynamic chromeBrowserProfiles, nextPageToken, totalSize;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"chromeBrowserProfiles" : [GTLRChromeManagement_GoogleChromeManagementVersionsV1ChromeBrowserProfile class]
  };
  return map;
}

+ (NSString *)collectionItemsKey {
  return @"chromeBrowserProfiles";
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingData
//

@implementation GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingData
@dynamic browserExecutablePath, extensionData, extensionPolicyData,
         installedBrowserVersion, policyData, profilePath;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"extensionData" : [GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData class],
    @"extensionPolicyData" : [GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionPolicyData class],
    @"policyData" : [GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataPolicyData class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataConflictingPolicyData
//

@implementation GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataConflictingPolicyData
@dynamic source;
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData
//

@implementation GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionData
@dynamic descriptionProperty, extensionId, extensionType, homepageUri,
         installationType, isDisabled, isWebstoreExtension, manifestVersion,
         name, permissions, version;

+ (NSDictionary<NSString *, NSString *> *)propertyToJSONKeyMap {
  return @{ @"descriptionProperty" : @"description" };
}

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"permissions" : [NSString class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionPolicyData
//

@implementation GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataExtensionPolicyData
@dynamic extensionId, extensionName, policyData;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"policyData" : [GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataPolicyData class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataPolicyData
//

@implementation GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataPolicyData
@dynamic conflicts, error, name, source, value;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"conflicts" : [GTLRChromeManagement_GoogleChromeManagementVersionsV1ReportingDataConflictingPolicyData class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleProtobufEmpty
//

@implementation GTLRChromeManagement_GoogleProtobufEmpty
@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleRpcStatus
//

@implementation GTLRChromeManagement_GoogleRpcStatus
@dynamic code, details, message;

+ (NSDictionary<NSString *, Class> *)arrayPropertyToClassMap {
  NSDictionary<NSString *, Class> *map = @{
    @"details" : [GTLRChromeManagement_GoogleRpcStatus_Details_Item class]
  };
  return map;
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleRpcStatus_Details_Item
//

@implementation GTLRChromeManagement_GoogleRpcStatus_Details_Item

+ (Class)classForAdditionalProperties {
  return [NSObject class];
}

@end


// ----------------------------------------------------------------------------
//
//   GTLRChromeManagement_GoogleTypeDate
//

@implementation GTLRChromeManagement_GoogleTypeDate
@dynamic day, month, year;
@end
