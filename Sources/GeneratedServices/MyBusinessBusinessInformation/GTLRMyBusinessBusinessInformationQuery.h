// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   My Business Business Information API (mybusinessbusinessinformation/v1)
// Description:
//   The My Business Business Information API provides an interface for managing
//   business information on Google.
// Documentation:
//   https://developers.google.com/my-business/

#import <GoogleAPIClientForREST/GTLRQuery.h>

#if GTLR_RUNTIME_VERSION != 3000
#error This file was generated by a different version of ServiceGenerator which is incompatible with this GTLR library source.
#endif

#import "GTLRMyBusinessBusinessInformationObjects.h"

// Generated comments include content from the discovery document; avoid them
// causing warnings since clang's checks are some what arbitrary.
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdocumentation"

NS_ASSUME_NONNULL_BEGIN

// ----------------------------------------------------------------------------
// Constants - For some of the query classes' properties below.

// ----------------------------------------------------------------------------
// view

/**
 *  The server response will only include Category fields display_name,
 *  category_id and language_code. It omits any service type metadata related
 *  fields.
 *
 *  Value: "BASIC"
 */
FOUNDATION_EXTERN NSString * const kGTLRMyBusinessBusinessInformationViewBasic;
/**
 *  Not specified, equivalent to CATEGORY_METADATA_ONLY.
 *
 *  Value: "CATEGORY_VIEW_UNSPECIFIED"
 */
FOUNDATION_EXTERN NSString * const kGTLRMyBusinessBusinessInformationViewCategoryViewUnspecified;
/**
 *  Returns all the fields in the response.
 *
 *  Value: "FULL"
 */
FOUNDATION_EXTERN NSString * const kGTLRMyBusinessBusinessInformationViewFull;

// ----------------------------------------------------------------------------
// Query Classes
//

/**
 *  Parent class for other My Business Business Information query classes.
 */
@interface GTLRMyBusinessBusinessInformationQuery : GTLRQuery

/** Selector specifying which fields to include in a partial response. */
@property(nonatomic, copy, nullable) NSString *fields;

@end

/**
 *  Creates a new Location that will be owned by the logged in user.
 *
 *  Method: mybusinessbusinessinformation.accounts.locations.create
 */
@interface GTLRMyBusinessBusinessInformationQuery_AccountsLocationsCreate : GTLRMyBusinessBusinessInformationQuery

/** Required. The name of the account in which to create this location. */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Optional. A unique request ID for the server to detect duplicated requests.
 *  We recommend using UUIDs. Max length is 50 characters.
 */
@property(nonatomic, copy, nullable) NSString *requestId;

/**
 *  Optional. If true, the request is validated without actually creating the
 *  location.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRMyBusinessBusinessInformation_Location.
 *
 *  Creates a new Location that will be owned by the logged in user.
 *
 *  @param object The @c GTLRMyBusinessBusinessInformation_Location to include
 *    in the query.
 *  @param parent Required. The name of the account in which to create this
 *    location.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_AccountsLocationsCreate
 */
+ (instancetype)queryWithObject:(GTLRMyBusinessBusinessInformation_Location *)object
                         parent:(NSString *)parent;

@end

/**
 *  Lists the locations for the specified account.
 *
 *  Method: mybusinessbusinessinformation.accounts.locations.list
 */
@interface GTLRMyBusinessBusinessInformationQuery_AccountsLocationsList : GTLRMyBusinessBusinessInformationQuery

/**
 *  Optional. A filter constraining the locations to return. The response
 *  includes only entries that match the filter. If `filter` is empty, then
 *  constraints are applied and all locations (paginated) are retrieved for the
 *  requested account. For more information about valid fields and example
 *  usage, see [Work with Location Data
 *  Guide](https://developers.google.com/my-business/content/location-data#filter_results_when_you_list_locations).
 */
@property(nonatomic, copy, nullable) NSString *filter;

/**
 *  Optional. Sorting order for the request. Multiple fields should be
 *  comma-separated, following SQL syntax. The default sorting order is
 *  ascending. To specify descending order, a suffix " desc" should be added.
 *  Valid fields to order_by are title and store_code. For example: "title,
 *  store_code desc" or "title" or "store_code desc"
 */
@property(nonatomic, copy, nullable) NSString *orderBy;

/**
 *  Optional. How many locations to fetch per page. Default value is 10 if not
 *  set. Minimum is 1, and maximum page size is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Optional. If specified, it fetches the next `page` of locations. The page
 *  token is returned by previous calls to `ListLocations` when there were more
 *  locations than could fit in the requested page size.
 */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Required. The name of the account to fetch locations from. If the parent
 *  Account is of AccountType PERSONAL, only Locations that are directly owned
 *  by the Account are returned, otherwise it will return all accessible
 *  locations from the Account, either directly or indirectly.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/**
 *  Required. Read mask to specify what fields will be returned in the response.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRMyBusinessBusinessInformation_ListLocationsResponse.
 *
 *  Lists the locations for the specified account.
 *
 *  @param parent Required. The name of the account to fetch locations from. If
 *    the parent Account is of AccountType PERSONAL, only Locations that are
 *    directly owned by the Account are returned, otherwise it will return all
 *    accessible locations from the Account, either directly or indirectly.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_AccountsLocationsList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)queryWithParent:(NSString *)parent;

@end

/**
 *  Returns the list of attributes that would be available for a location with
 *  the given primary category and country.
 *
 *  Method: mybusinessbusinessinformation.attributes.list
 */
@interface GTLRMyBusinessBusinessInformationQuery_AttributesList : GTLRMyBusinessBusinessInformationQuery

/**
 *  The primary category stable ID to find available attributes. Must be of the
 *  format categories/{category_id}.
 */
@property(nonatomic, copy, nullable) NSString *categoryName;

/**
 *  The BCP 47 code of language to get attribute display names in. If this
 *  language is not available, they will be provided in English.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/** How many attributes to include per page. Default is 200, minimum is 1. */
@property(nonatomic, assign) NSInteger pageSize;

/** If specified, the next page of attribute metadata is retrieved. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/**
 *  Resource name of the location to look up available attributes. If this field
 *  is set, category_name, region_code, language_code and show_all are not
 *  required and must not be set.
 */
@property(nonatomic, copy, nullable) NSString *parent;

/** The ISO 3166-1 alpha-2 country code to find available attributes. */
@property(nonatomic, copy, nullable) NSString *regionCode;

/**
 *  Metadata for all available attributes are returned when this field is set to
 *  true, disregarding parent and category_name fields. language_code and
 *  region_code are required when show_all is set to true.
 */
@property(nonatomic, assign) BOOL showAll;

/**
 *  Fetches a @c
 *  GTLRMyBusinessBusinessInformation_ListAttributeMetadataResponse.
 *
 *  Returns the list of attributes that would be available for a location with
 *  the given primary category and country.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_AttributesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Returns a list of business categories for the provided language and GConcept
 *  ids.
 *
 *  Method: mybusinessbusinessinformation.categories.batchGet
 */
@interface GTLRMyBusinessBusinessInformationQuery_CategoriesBatchGet : GTLRMyBusinessBusinessInformationQuery

/**
 *  Required. The BCP 47 code of language that the category names should be
 *  returned in.
 */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Required. At least one name must be set. The GConcept ids the localized
 *  category names should be returned for. To return details for more than one
 *  category, repeat this parameter in the request.
 */
@property(nonatomic, strong, nullable) NSArray<NSString *> *names;

/**
 *  Optional. The ISO 3166-1 alpha-2 country code used to infer non-standard
 *  language.
 */
@property(nonatomic, copy, nullable) NSString *regionCode;

/**
 *  Required. Specifies which parts to the Category resource should be returned
 *  in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRMyBusinessBusinessInformationViewCategoryViewUnspecified Not
 *        specified, equivalent to CATEGORY_METADATA_ONLY. (Value:
 *        "CATEGORY_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRMyBusinessBusinessInformationViewBasic The server response
 *        will only include Category fields display_name, category_id and
 *        language_code. It omits any service type metadata related fields.
 *        (Value: "BASIC")
 *    @arg @c kGTLRMyBusinessBusinessInformationViewFull Returns all the fields
 *        in the response. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRMyBusinessBusinessInformation_BatchGetCategoriesResponse.
 *
 *  Returns a list of business categories for the provided language and GConcept
 *  ids.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_CategoriesBatchGet
 */
+ (instancetype)query;

@end

/**
 *  Returns a list of business categories. Search will match the category name
 *  but not the category ID. Search only matches the front of a category name
 *  (that is, 'food' may return 'Food Court' but not 'Fast Food Restaurant').
 *
 *  Method: mybusinessbusinessinformation.categories.list
 */
@interface GTLRMyBusinessBusinessInformationQuery_CategoriesList : GTLRMyBusinessBusinessInformationQuery

/**
 *  Optional. Filter string from user. The only field that supported is
 *  `displayName`. Eg: `filter=displayName=foo`.
 */
@property(nonatomic, copy, nullable) NSString *filter;

/** Required. The BCP 47 code of language. */
@property(nonatomic, copy, nullable) NSString *languageCode;

/**
 *  Optional. How many categories to fetch per page. Default is 100, minimum is
 *  1, and maximum page size is 100.
 */
@property(nonatomic, assign) NSInteger pageSize;

/** Optional. If specified, the next page of categories will be fetched. */
@property(nonatomic, copy, nullable) NSString *pageToken;

/** Required. The ISO 3166-1 alpha-2 country code. */
@property(nonatomic, copy, nullable) NSString *regionCode;

/**
 *  Required. Specifies which parts to the Category resource should be returned
 *  in the response.
 *
 *  Likely values:
 *    @arg @c kGTLRMyBusinessBusinessInformationViewCategoryViewUnspecified Not
 *        specified, equivalent to CATEGORY_METADATA_ONLY. (Value:
 *        "CATEGORY_VIEW_UNSPECIFIED")
 *    @arg @c kGTLRMyBusinessBusinessInformationViewBasic The server response
 *        will only include Category fields display_name, category_id and
 *        language_code. It omits any service type metadata related fields.
 *        (Value: "BASIC")
 *    @arg @c kGTLRMyBusinessBusinessInformationViewFull Returns all the fields
 *        in the response. (Value: "FULL")
 */
@property(nonatomic, copy, nullable) NSString *view;

/**
 *  Fetches a @c GTLRMyBusinessBusinessInformation_ListCategoriesResponse.
 *
 *  Returns a list of business categories. Search will match the category name
 *  but not the category ID. Search only matches the front of a category name
 *  (that is, 'food' may return 'Food Court' but not 'Fast Food Restaurant').
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_CategoriesList
 *
 *  @note Automatic pagination will be done when @c shouldFetchNextPages is
 *        enabled. See @c shouldFetchNextPages on @c GTLRService for more
 *        information.
 */
+ (instancetype)query;

@end

/**
 *  Gets the specified chain. Returns `NOT_FOUND` if the chain does not exist.
 *
 *  Method: mybusinessbusinessinformation.chains.get
 */
@interface GTLRMyBusinessBusinessInformationQuery_ChainsGet : GTLRMyBusinessBusinessInformationQuery

/**
 *  Required. The chain's resource name, in the format
 *  `chains/{chain_place_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMyBusinessBusinessInformation_Chain.
 *
 *  Gets the specified chain. Returns `NOT_FOUND` if the chain does not exist.
 *
 *  @param name Required. The chain's resource name, in the format
 *    `chains/{chain_place_id}`.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_ChainsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Searches the chain based on chain name.
 *
 *  Method: mybusinessbusinessinformation.chains.search
 */
@interface GTLRMyBusinessBusinessInformationQuery_ChainsSearch : GTLRMyBusinessBusinessInformationQuery

/**
 *  Required. Search for a chain by its name. Exact/partial/fuzzy/related
 *  queries are supported. Examples: "walmart", "wal-mart", "walmmmart", "沃尔玛"
 */
@property(nonatomic, copy, nullable) NSString *chainName;

/**
 *  The maximum number of matched chains to return from this query. The default
 *  is 10. The maximum possible value is 500.
 */
@property(nonatomic, assign) NSInteger pageSize;

/**
 *  Fetches a @c GTLRMyBusinessBusinessInformation_SearchChainsResponse.
 *
 *  Searches the chain based on chain name.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_ChainsSearch
 */
+ (instancetype)query;

@end

/**
 *  Search all of the possible locations that are a match to the specified
 *  request.
 *
 *  Method: mybusinessbusinessinformation.googleLocations.search
 */
@interface GTLRMyBusinessBusinessInformationQuery_GoogleLocationsSearch : GTLRMyBusinessBusinessInformationQuery

/**
 *  Fetches a @c
 *  GTLRMyBusinessBusinessInformation_SearchGoogleLocationsResponse.
 *
 *  Search all of the possible locations that are a match to the specified
 *  request.
 *
 *  @param object The @c
 *    GTLRMyBusinessBusinessInformation_SearchGoogleLocationsRequest to include
 *    in the query.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_GoogleLocationsSearch
 */
+ (instancetype)queryWithObject:(GTLRMyBusinessBusinessInformation_SearchGoogleLocationsRequest *)object;

@end

/**
 *  Associates a location to a place ID. Any previous association is
 *  overwritten. This operation is only valid if the location is unverified. The
 *  association must be valid, that is, it appears in the list of
 *  `SearchGoogleLocations`.
 *
 *  Method: mybusinessbusinessinformation.locations.associate
 */
@interface GTLRMyBusinessBusinessInformationQuery_LocationsAssociate : GTLRMyBusinessBusinessInformationQuery

/** Required. The resource name of the location to associate. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMyBusinessBusinessInformation_Empty.
 *
 *  Associates a location to a place ID. Any previous association is
 *  overwritten. This operation is only valid if the location is unverified. The
 *  association must be valid, that is, it appears in the list of
 *  `SearchGoogleLocations`.
 *
 *  @param object The @c
 *    GTLRMyBusinessBusinessInformation_AssociateLocationRequest to include in
 *    the query.
 *  @param name Required. The resource name of the location to associate.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_LocationsAssociate
 */
+ (instancetype)queryWithObject:(GTLRMyBusinessBusinessInformation_AssociateLocationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Gets the Google-updated version of the specified location.
 *
 *  Method: mybusinessbusinessinformation.locations.attributes.getGoogleUpdated
 */
@interface GTLRMyBusinessBusinessInformationQuery_LocationsAttributesGetGoogleUpdated : GTLRMyBusinessBusinessInformationQuery

/**
 *  Required. Google identifier for this location in the form of
 *  `locations/{location_id}/attributes`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMyBusinessBusinessInformation_Attributes.
 *
 *  Gets the Google-updated version of the specified location.
 *
 *  @param name Required. Google identifier for this location in the form of
 *    `locations/{location_id}/attributes`.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_LocationsAttributesGetGoogleUpdated
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Clears an association between a location and its place ID. This operation is
 *  only valid if the location is unverified.
 *
 *  Method: mybusinessbusinessinformation.locations.clearLocationAssociation
 */
@interface GTLRMyBusinessBusinessInformationQuery_LocationsClearLocationAssociation : GTLRMyBusinessBusinessInformationQuery

/** Required. The resource name of the location to disassociate. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMyBusinessBusinessInformation_Empty.
 *
 *  Clears an association between a location and its place ID. This operation is
 *  only valid if the location is unverified.
 *
 *  @param object The @c
 *    GTLRMyBusinessBusinessInformation_ClearLocationAssociationRequest to
 *    include in the query.
 *  @param name Required. The resource name of the location to disassociate.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_LocationsClearLocationAssociation
 */
+ (instancetype)queryWithObject:(GTLRMyBusinessBusinessInformation_ClearLocationAssociationRequest *)object
                           name:(NSString *)name;

@end

/**
 *  Deletes a location. If this location cannot be deleted using the API and it
 *  is marked so in the
 *  `google.mybusiness.businessinformation.v1.LocationState`, use the [Google
 *  Business Profile](https://business.google.com/manage/) website.
 *
 *  Method: mybusinessbusinessinformation.locations.delete
 */
@interface GTLRMyBusinessBusinessInformationQuery_LocationsDelete : GTLRMyBusinessBusinessInformationQuery

/** Required. The name of the location to delete. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMyBusinessBusinessInformation_Empty.
 *
 *  Deletes a location. If this location cannot be deleted using the API and it
 *  is marked so in the
 *  `google.mybusiness.businessinformation.v1.LocationState`, use the [Google
 *  Business Profile](https://business.google.com/manage/) website.
 *
 *  @param name Required. The name of the location to delete.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_LocationsDelete
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Returns the specified location.
 *
 *  Method: mybusinessbusinessinformation.locations.get
 */
@interface GTLRMyBusinessBusinessInformationQuery_LocationsGet : GTLRMyBusinessBusinessInformationQuery

/** Required. The name of the location to fetch. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Read mask to specify what fields will be returned in the response.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRMyBusinessBusinessInformation_Location.
 *
 *  Returns the specified location.
 *
 *  @param name Required. The name of the location to fetch.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_LocationsGet
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Looks up all the attributes set for a given location.
 *
 *  Method: mybusinessbusinessinformation.locations.getAttributes
 */
@interface GTLRMyBusinessBusinessInformationQuery_LocationsGetAttributes : GTLRMyBusinessBusinessInformationQuery

/**
 *  Required. Google identifier for this location in the form of
 *  `locations/{location_id}/attributes`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMyBusinessBusinessInformation_Attributes.
 *
 *  Looks up all the attributes set for a given location.
 *
 *  @param name Required. Google identifier for this location in the form of
 *    `locations/{location_id}/attributes`.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_LocationsGetAttributes
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Gets the Google-updated version of the specified location.
 *
 *  Method: mybusinessbusinessinformation.locations.getGoogleUpdated
 */
@interface GTLRMyBusinessBusinessInformationQuery_LocationsGetGoogleUpdated : GTLRMyBusinessBusinessInformationQuery

/** Required. The name of the location to fetch. */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. Read mask to specify what fields will be returned in the response.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *readMask;

/**
 *  Fetches a @c GTLRMyBusinessBusinessInformation_GoogleUpdatedLocation.
 *
 *  Gets the Google-updated version of the specified location.
 *
 *  @param name Required. The name of the location to fetch.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_LocationsGetGoogleUpdated
 */
+ (instancetype)queryWithName:(NSString *)name;

@end

/**
 *  Updates the specified location.
 *
 *  Method: mybusinessbusinessinformation.locations.patch
 */
@interface GTLRMyBusinessBusinessInformationQuery_LocationsPatch : GTLRMyBusinessBusinessInformationQuery

/**
 *  Google identifier for this location in the form: `locations/{location_id}`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Required. The specific fields to update.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *updateMask;

/**
 *  Optional. If true, the request is validated without actually updating the
 *  location. When this field is set, we will only return validation errors if
 *  there were any. The response will be empty if no errors were found.
 */
@property(nonatomic, assign) BOOL validateOnly;

/**
 *  Fetches a @c GTLRMyBusinessBusinessInformation_Location.
 *
 *  Updates the specified location.
 *
 *  @param object The @c GTLRMyBusinessBusinessInformation_Location to include
 *    in the query.
 *  @param name Google identifier for this location in the form:
 *    `locations/{location_id}`.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_LocationsPatch
 */
+ (instancetype)queryWithObject:(GTLRMyBusinessBusinessInformation_Location *)object
                           name:(NSString *)name;

@end

/**
 *  Update attributes for a given location.
 *
 *  Method: mybusinessbusinessinformation.locations.updateAttributes
 */
@interface GTLRMyBusinessBusinessInformationQuery_LocationsUpdateAttributes : GTLRMyBusinessBusinessInformationQuery

/**
 *  Required. Attribute name of attributes that you'd like to update.
 *  Represented by `attributes/{attribute}`. Updates: All attributes provided in
 *  the attributes field that you would like to update must be set in the
 *  `attribute_mask`. Attributes set in the above list but not in the
 *  `attribute_mask` will be ignored. Deletes: If you'd like to delete certain
 *  attributes, they must be specified in the `attribute_mask` with no matching
 *  entry in the attributes list. If you'd like to delete all attributes set on
 *  a location, you should look up all the applicable attributes for the
 *  location and then add them to the `attribute_mask` with an empty attributes
 *  field.
 *
 *  String format is a comma-separated list of fields.
 */
@property(nonatomic, copy, nullable) NSString *attributeMask;

/**
 *  Required. Google identifier for this location in the form of
 *  `locations/{location_id}/attributes`.
 */
@property(nonatomic, copy, nullable) NSString *name;

/**
 *  Fetches a @c GTLRMyBusinessBusinessInformation_Attributes.
 *
 *  Update attributes for a given location.
 *
 *  @param object The @c GTLRMyBusinessBusinessInformation_Attributes to include
 *    in the query.
 *  @param name Required. Google identifier for this location in the form of
 *    `locations/{location_id}/attributes`.
 *
 *  @return GTLRMyBusinessBusinessInformationQuery_LocationsUpdateAttributes
 */
+ (instancetype)queryWithObject:(GTLRMyBusinessBusinessInformation_Attributes *)object
                           name:(NSString *)name;

@end

NS_ASSUME_NONNULL_END

#pragma clang diagnostic pop
